// WARNING: Please don't edit this file. It was generated by Swift/WinRT v0.0.1

#pragma once
// Header files for imported files
#include <inspectable.h>
#include <EventToken.h>
#include <windowscontracts.h>
#include "Windows.Foundation.h"
#include "Windows.ApplicationModel.Contacts.h"
#include "Windows.ApplicationModel.DataTransfer.h"
#include "Windows.ApplicationModel.Search.h"
#include "Windows.Globalization.h"
#include "Windows.Media.Capture.h"
#include "Windows.Media.Casting.h"
#include "Windows.Media.Core.h"
#include "Windows.Media.PlayTo.h"
#include "Windows.Media.Playback.h"
#include "Windows.Media.Protection.h"
#include "Windows.Storage.Streams.h"
#include "Windows.System.h"
#include "Windows.UI.h"
#include "Windows.UI.Composition.h"
#include "Windows.UI.Core.h"
#include "Windows.UI.Input.Inking.h"
#include "Windows.UI.Text.h"
#include "Windows.UI.Xaml.h"
#include "Windows.UI.Xaml.Automation.Peers.h"
#include "Windows.UI.Xaml.Automation.Provider.h"
#include "Windows.UI.Xaml.Controls.Primitives.h"
#include "Windows.UI.Xaml.Data.h"
#include "Windows.UI.Xaml.Documents.h"
#include "Windows.UI.Xaml.Input.h"
#include "Windows.UI.Xaml.Interop.h"
#include "Windows.UI.Xaml.Media.h"
#include "Windows.UI.Xaml.Media.Animation.h"
#include "Windows.UI.Xaml.Navigation.h"
#include "Windows.Web.h"
#include "Windows.Web.Http.h"
// Importing Collections header
#include "Windows.Foundation.Collections.h"

/* Forward Declarations */
#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIBackClickEventHandler_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIBackClickEventHandler_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIBackClickEventHandler __x_ABI_CWindows_CUI_CXaml_CControls_CIBackClickEventHandler;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CIBackClickEventHandler_FWD_DEFINED__

    #ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CICalendarViewDayItemChangingEventHandler_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CICalendarViewDayItemChangingEventHandler_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CICalendarViewDayItemChangingEventHandler __x_ABI_CWindows_CUI_CXaml_CControls_CICalendarViewDayItemChangingEventHandler;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CICalendarViewDayItemChangingEventHandler_FWD_DEFINED__

    #ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CICleanUpVirtualizedItemEventHandler_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CICleanUpVirtualizedItemEventHandler_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CICleanUpVirtualizedItemEventHandler __x_ABI_CWindows_CUI_CXaml_CControls_CICleanUpVirtualizedItemEventHandler;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CICleanUpVirtualizedItemEventHandler_FWD_DEFINED__

    #ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIContextMenuOpeningEventHandler_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIContextMenuOpeningEventHandler_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIContextMenuOpeningEventHandler __x_ABI_CWindows_CUI_CXaml_CControls_CIContextMenuOpeningEventHandler;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CIContextMenuOpeningEventHandler_FWD_DEFINED__

    #ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIDragItemsStartingEventHandler_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIDragItemsStartingEventHandler_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIDragItemsStartingEventHandler __x_ABI_CWindows_CUI_CXaml_CControls_CIDragItemsStartingEventHandler;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CIDragItemsStartingEventHandler_FWD_DEFINED__

    #ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIHubSectionHeaderClickEventHandler_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIHubSectionHeaderClickEventHandler_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIHubSectionHeaderClickEventHandler __x_ABI_CWindows_CUI_CXaml_CControls_CIHubSectionHeaderClickEventHandler;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CIHubSectionHeaderClickEventHandler_FWD_DEFINED__

    #ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIItemClickEventHandler_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIItemClickEventHandler_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIItemClickEventHandler __x_ABI_CWindows_CUI_CXaml_CControls_CIItemClickEventHandler;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CIItemClickEventHandler_FWD_DEFINED__

    #ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIListViewItemToKeyHandler_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIListViewItemToKeyHandler_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIListViewItemToKeyHandler __x_ABI_CWindows_CUI_CXaml_CControls_CIListViewItemToKeyHandler;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CIListViewItemToKeyHandler_FWD_DEFINED__

    #ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIListViewKeyToItemHandler_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIListViewKeyToItemHandler_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIListViewKeyToItemHandler __x_ABI_CWindows_CUI_CXaml_CControls_CIListViewKeyToItemHandler;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CIListViewKeyToItemHandler_FWD_DEFINED__

    #ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CINotifyEventHandler_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CINotifyEventHandler_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CINotifyEventHandler __x_ABI_CWindows_CUI_CXaml_CControls_CINotifyEventHandler;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CINotifyEventHandler_FWD_DEFINED__

    #ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CISectionsInViewChangedEventHandler_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CISectionsInViewChangedEventHandler_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CISectionsInViewChangedEventHandler __x_ABI_CWindows_CUI_CXaml_CControls_CISectionsInViewChangedEventHandler;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CISectionsInViewChangedEventHandler_FWD_DEFINED__

    #ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CISelectionChangedEventHandler_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CISelectionChangedEventHandler_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CISelectionChangedEventHandler __x_ABI_CWindows_CUI_CXaml_CControls_CISelectionChangedEventHandler;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CISelectionChangedEventHandler_FWD_DEFINED__

    #ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CISemanticZoomViewChangedEventHandler_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CISemanticZoomViewChangedEventHandler_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CISemanticZoomViewChangedEventHandler __x_ABI_CWindows_CUI_CXaml_CControls_CISemanticZoomViewChangedEventHandler;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CISemanticZoomViewChangedEventHandler_FWD_DEFINED__

    #ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CITextChangedEventHandler_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CITextChangedEventHandler_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CITextChangedEventHandler __x_ABI_CWindows_CUI_CXaml_CControls_CITextChangedEventHandler;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CITextChangedEventHandler_FWD_DEFINED__

    #ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CITextControlPasteEventHandler_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CITextControlPasteEventHandler_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CITextControlPasteEventHandler __x_ABI_CWindows_CUI_CXaml_CControls_CITextControlPasteEventHandler;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CITextControlPasteEventHandler_FWD_DEFINED__

    #ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewNavigationFailedEventHandler_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewNavigationFailedEventHandler_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewNavigationFailedEventHandler __x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewNavigationFailedEventHandler;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewNavigationFailedEventHandler_FWD_DEFINED__

    #ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIAnchorRequestedEventArgs_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIAnchorRequestedEventArgs_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIAnchorRequestedEventArgs __x_ABI_CWindows_CUI_CXaml_CControls_CIAnchorRequestedEventArgs;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CIAnchorRequestedEventArgs_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIAppBar_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIAppBar_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBar __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBar;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CIAppBar_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIAppBar2_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIAppBar2_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBar2 __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBar2;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CIAppBar2_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIAppBar3_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIAppBar3_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBar3 __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBar3;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CIAppBar3_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIAppBar4_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIAppBar4_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBar4 __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBar4;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CIAppBar4_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarButton_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarButton_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarButton __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarButton;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarButton_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarButton3_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarButton3_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarButton3 __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarButton3;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarButton3_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarButton4_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarButton4_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarButton4 __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarButton4;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarButton4_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarButton5_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarButton5_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarButton5 __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarButton5;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarButton5_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarButtonFactory_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarButtonFactory_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarButtonFactory __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarButtonFactory;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarButtonFactory_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarButtonStatics_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarButtonStatics_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarButtonStatics __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarButtonStatics;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarButtonStatics_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarButtonStatics3_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarButtonStatics3_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarButtonStatics3 __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarButtonStatics3;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarButtonStatics3_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarButtonStatics4_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarButtonStatics4_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarButtonStatics4 __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarButtonStatics4;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarButtonStatics4_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarElementContainer_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarElementContainer_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarElementContainer __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarElementContainer;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarElementContainer_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarElementContainerFactory_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarElementContainerFactory_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarElementContainerFactory __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarElementContainerFactory;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarElementContainerFactory_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarElementContainerStatics_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarElementContainerStatics_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarElementContainerStatics __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarElementContainerStatics;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarElementContainerStatics_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarFactory_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarFactory_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarFactory __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarFactory;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarFactory_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarOverrides_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarOverrides_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarOverrides __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarOverrides;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarOverrides_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarOverrides3_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarOverrides3_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarOverrides3 __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarOverrides3;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarOverrides3_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarSeparator_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarSeparator_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarSeparator __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarSeparator;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarSeparator_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarSeparatorFactory_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarSeparatorFactory_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarSeparatorFactory __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarSeparatorFactory;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarSeparatorFactory_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarSeparatorStatics_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarSeparatorStatics_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarSeparatorStatics __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarSeparatorStatics;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarSeparatorStatics_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarSeparatorStatics3_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarSeparatorStatics3_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarSeparatorStatics3 __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarSeparatorStatics3;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarSeparatorStatics3_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarStatics_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarStatics_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarStatics __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarStatics;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarStatics_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarStatics2_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarStatics2_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarStatics2 __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarStatics2;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarStatics2_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarStatics4_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarStatics4_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarStatics4 __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarStatics4;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarStatics4_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarToggleButton_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarToggleButton_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarToggleButton __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarToggleButton;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarToggleButton_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarToggleButton3_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarToggleButton3_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarToggleButton3 __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarToggleButton3;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarToggleButton3_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarToggleButton4_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarToggleButton4_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarToggleButton4 __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarToggleButton4;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarToggleButton4_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarToggleButton5_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarToggleButton5_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarToggleButton5 __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarToggleButton5;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarToggleButton5_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarToggleButtonFactory_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarToggleButtonFactory_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarToggleButtonFactory __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarToggleButtonFactory;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarToggleButtonFactory_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarToggleButtonStatics_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarToggleButtonStatics_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarToggleButtonStatics __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarToggleButtonStatics;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarToggleButtonStatics_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarToggleButtonStatics3_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarToggleButtonStatics3_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarToggleButtonStatics3 __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarToggleButtonStatics3;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarToggleButtonStatics3_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarToggleButtonStatics4_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarToggleButtonStatics4_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarToggleButtonStatics4 __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarToggleButtonStatics4;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarToggleButtonStatics4_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIAutoSuggestBox_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIAutoSuggestBox_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIAutoSuggestBox __x_ABI_CWindows_CUI_CXaml_CControls_CIAutoSuggestBox;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CIAutoSuggestBox_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIAutoSuggestBox2_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIAutoSuggestBox2_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIAutoSuggestBox2 __x_ABI_CWindows_CUI_CXaml_CControls_CIAutoSuggestBox2;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CIAutoSuggestBox2_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIAutoSuggestBox3_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIAutoSuggestBox3_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIAutoSuggestBox3 __x_ABI_CWindows_CUI_CXaml_CControls_CIAutoSuggestBox3;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CIAutoSuggestBox3_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIAutoSuggestBox4_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIAutoSuggestBox4_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIAutoSuggestBox4 __x_ABI_CWindows_CUI_CXaml_CControls_CIAutoSuggestBox4;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CIAutoSuggestBox4_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIAutoSuggestBoxQuerySubmittedEventArgs_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIAutoSuggestBoxQuerySubmittedEventArgs_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIAutoSuggestBoxQuerySubmittedEventArgs __x_ABI_CWindows_CUI_CXaml_CControls_CIAutoSuggestBoxQuerySubmittedEventArgs;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CIAutoSuggestBoxQuerySubmittedEventArgs_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIAutoSuggestBoxStatics_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIAutoSuggestBoxStatics_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIAutoSuggestBoxStatics __x_ABI_CWindows_CUI_CXaml_CControls_CIAutoSuggestBoxStatics;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CIAutoSuggestBoxStatics_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIAutoSuggestBoxStatics2_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIAutoSuggestBoxStatics2_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIAutoSuggestBoxStatics2 __x_ABI_CWindows_CUI_CXaml_CControls_CIAutoSuggestBoxStatics2;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CIAutoSuggestBoxStatics2_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIAutoSuggestBoxStatics3_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIAutoSuggestBoxStatics3_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIAutoSuggestBoxStatics3 __x_ABI_CWindows_CUI_CXaml_CControls_CIAutoSuggestBoxStatics3;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CIAutoSuggestBoxStatics3_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIAutoSuggestBoxStatics4_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIAutoSuggestBoxStatics4_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIAutoSuggestBoxStatics4 __x_ABI_CWindows_CUI_CXaml_CControls_CIAutoSuggestBoxStatics4;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CIAutoSuggestBoxStatics4_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIAutoSuggestBoxSuggestionChosenEventArgs_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIAutoSuggestBoxSuggestionChosenEventArgs_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIAutoSuggestBoxSuggestionChosenEventArgs __x_ABI_CWindows_CUI_CXaml_CControls_CIAutoSuggestBoxSuggestionChosenEventArgs;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CIAutoSuggestBoxSuggestionChosenEventArgs_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIAutoSuggestBoxTextChangedEventArgs_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIAutoSuggestBoxTextChangedEventArgs_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIAutoSuggestBoxTextChangedEventArgs __x_ABI_CWindows_CUI_CXaml_CControls_CIAutoSuggestBoxTextChangedEventArgs;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CIAutoSuggestBoxTextChangedEventArgs_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIAutoSuggestBoxTextChangedEventArgsStatics_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIAutoSuggestBoxTextChangedEventArgsStatics_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIAutoSuggestBoxTextChangedEventArgsStatics __x_ABI_CWindows_CUI_CXaml_CControls_CIAutoSuggestBoxTextChangedEventArgsStatics;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CIAutoSuggestBoxTextChangedEventArgsStatics_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIBackClickEventArgs_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIBackClickEventArgs_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIBackClickEventArgs __x_ABI_CWindows_CUI_CXaml_CControls_CIBackClickEventArgs;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CIBackClickEventArgs_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIBitmapIcon_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIBitmapIcon_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIBitmapIcon __x_ABI_CWindows_CUI_CXaml_CControls_CIBitmapIcon;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CIBitmapIcon_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIBitmapIcon2_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIBitmapIcon2_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIBitmapIcon2 __x_ABI_CWindows_CUI_CXaml_CControls_CIBitmapIcon2;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CIBitmapIcon2_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIBitmapIconFactory_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIBitmapIconFactory_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIBitmapIconFactory __x_ABI_CWindows_CUI_CXaml_CControls_CIBitmapIconFactory;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CIBitmapIconFactory_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIBitmapIconSource_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIBitmapIconSource_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIBitmapIconSource __x_ABI_CWindows_CUI_CXaml_CControls_CIBitmapIconSource;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CIBitmapIconSource_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIBitmapIconSourceFactory_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIBitmapIconSourceFactory_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIBitmapIconSourceFactory __x_ABI_CWindows_CUI_CXaml_CControls_CIBitmapIconSourceFactory;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CIBitmapIconSourceFactory_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIBitmapIconSourceStatics_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIBitmapIconSourceStatics_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIBitmapIconSourceStatics __x_ABI_CWindows_CUI_CXaml_CControls_CIBitmapIconSourceStatics;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CIBitmapIconSourceStatics_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIBitmapIconStatics_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIBitmapIconStatics_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIBitmapIconStatics __x_ABI_CWindows_CUI_CXaml_CControls_CIBitmapIconStatics;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CIBitmapIconStatics_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIBitmapIconStatics2_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIBitmapIconStatics2_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIBitmapIconStatics2 __x_ABI_CWindows_CUI_CXaml_CControls_CIBitmapIconStatics2;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CIBitmapIconStatics2_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIBorder_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIBorder_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIBorder __x_ABI_CWindows_CUI_CXaml_CControls_CIBorder;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CIBorder_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIBorder2_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIBorder2_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIBorder2 __x_ABI_CWindows_CUI_CXaml_CControls_CIBorder2;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CIBorder2_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIBorderStatics_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIBorderStatics_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIBorderStatics __x_ABI_CWindows_CUI_CXaml_CControls_CIBorderStatics;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CIBorderStatics_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIBorderStatics2_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIBorderStatics2_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIBorderStatics2 __x_ABI_CWindows_CUI_CXaml_CControls_CIBorderStatics2;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CIBorderStatics2_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIButton_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIButton_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIButton __x_ABI_CWindows_CUI_CXaml_CControls_CIButton;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CIButton_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIButtonFactory_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIButtonFactory_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIButtonFactory __x_ABI_CWindows_CUI_CXaml_CControls_CIButtonFactory;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CIButtonFactory_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIButtonStaticsWithFlyout_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIButtonStaticsWithFlyout_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIButtonStaticsWithFlyout __x_ABI_CWindows_CUI_CXaml_CControls_CIButtonStaticsWithFlyout;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CIButtonStaticsWithFlyout_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIButtonWithFlyout_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIButtonWithFlyout_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIButtonWithFlyout __x_ABI_CWindows_CUI_CXaml_CControls_CIButtonWithFlyout;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CIButtonWithFlyout_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CICalendarDatePicker_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CICalendarDatePicker_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CICalendarDatePicker __x_ABI_CWindows_CUI_CXaml_CControls_CICalendarDatePicker;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CICalendarDatePicker_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CICalendarDatePicker2_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CICalendarDatePicker2_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CICalendarDatePicker2 __x_ABI_CWindows_CUI_CXaml_CControls_CICalendarDatePicker2;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CICalendarDatePicker2_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CICalendarDatePicker3_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CICalendarDatePicker3_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CICalendarDatePicker3 __x_ABI_CWindows_CUI_CXaml_CControls_CICalendarDatePicker3;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CICalendarDatePicker3_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CICalendarDatePickerDateChangedEventArgs_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CICalendarDatePickerDateChangedEventArgs_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CICalendarDatePickerDateChangedEventArgs __x_ABI_CWindows_CUI_CXaml_CControls_CICalendarDatePickerDateChangedEventArgs;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CICalendarDatePickerDateChangedEventArgs_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CICalendarDatePickerFactory_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CICalendarDatePickerFactory_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CICalendarDatePickerFactory __x_ABI_CWindows_CUI_CXaml_CControls_CICalendarDatePickerFactory;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CICalendarDatePickerFactory_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CICalendarDatePickerStatics_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CICalendarDatePickerStatics_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CICalendarDatePickerStatics __x_ABI_CWindows_CUI_CXaml_CControls_CICalendarDatePickerStatics;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CICalendarDatePickerStatics_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CICalendarDatePickerStatics2_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CICalendarDatePickerStatics2_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CICalendarDatePickerStatics2 __x_ABI_CWindows_CUI_CXaml_CControls_CICalendarDatePickerStatics2;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CICalendarDatePickerStatics2_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CICalendarDatePickerStatics3_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CICalendarDatePickerStatics3_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CICalendarDatePickerStatics3 __x_ABI_CWindows_CUI_CXaml_CControls_CICalendarDatePickerStatics3;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CICalendarDatePickerStatics3_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CICalendarView_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CICalendarView_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CICalendarView __x_ABI_CWindows_CUI_CXaml_CControls_CICalendarView;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CICalendarView_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CICalendarViewDayItem_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CICalendarViewDayItem_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CICalendarViewDayItem __x_ABI_CWindows_CUI_CXaml_CControls_CICalendarViewDayItem;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CICalendarViewDayItem_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CICalendarViewDayItemChangingEventArgs_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CICalendarViewDayItemChangingEventArgs_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CICalendarViewDayItemChangingEventArgs __x_ABI_CWindows_CUI_CXaml_CControls_CICalendarViewDayItemChangingEventArgs;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CICalendarViewDayItemChangingEventArgs_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CICalendarViewDayItemFactory_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CICalendarViewDayItemFactory_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CICalendarViewDayItemFactory __x_ABI_CWindows_CUI_CXaml_CControls_CICalendarViewDayItemFactory;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CICalendarViewDayItemFactory_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CICalendarViewDayItemStatics_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CICalendarViewDayItemStatics_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CICalendarViewDayItemStatics __x_ABI_CWindows_CUI_CXaml_CControls_CICalendarViewDayItemStatics;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CICalendarViewDayItemStatics_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CICalendarViewFactory_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CICalendarViewFactory_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CICalendarViewFactory __x_ABI_CWindows_CUI_CXaml_CControls_CICalendarViewFactory;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CICalendarViewFactory_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CICalendarViewSelectedDatesChangedEventArgs_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CICalendarViewSelectedDatesChangedEventArgs_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CICalendarViewSelectedDatesChangedEventArgs __x_ABI_CWindows_CUI_CXaml_CControls_CICalendarViewSelectedDatesChangedEventArgs;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CICalendarViewSelectedDatesChangedEventArgs_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CICalendarViewStatics_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CICalendarViewStatics_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CICalendarViewStatics __x_ABI_CWindows_CUI_CXaml_CControls_CICalendarViewStatics;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CICalendarViewStatics_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CICandidateWindowBoundsChangedEventArgs_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CICandidateWindowBoundsChangedEventArgs_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CICandidateWindowBoundsChangedEventArgs __x_ABI_CWindows_CUI_CXaml_CControls_CICandidateWindowBoundsChangedEventArgs;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CICandidateWindowBoundsChangedEventArgs_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CICanvas_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CICanvas_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CICanvas __x_ABI_CWindows_CUI_CXaml_CControls_CICanvas;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CICanvas_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CICanvasFactory_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CICanvasFactory_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CICanvasFactory __x_ABI_CWindows_CUI_CXaml_CControls_CICanvasFactory;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CICanvasFactory_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CICanvasStatics_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CICanvasStatics_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CICanvasStatics __x_ABI_CWindows_CUI_CXaml_CControls_CICanvasStatics;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CICanvasStatics_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CICaptureElement_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CICaptureElement_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CICaptureElement __x_ABI_CWindows_CUI_CXaml_CControls_CICaptureElement;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CICaptureElement_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CICaptureElementStatics_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CICaptureElementStatics_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CICaptureElementStatics __x_ABI_CWindows_CUI_CXaml_CControls_CICaptureElementStatics;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CICaptureElementStatics_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CICheckBox_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CICheckBox_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CICheckBox __x_ABI_CWindows_CUI_CXaml_CControls_CICheckBox;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CICheckBox_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CICheckBoxFactory_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CICheckBoxFactory_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CICheckBoxFactory __x_ABI_CWindows_CUI_CXaml_CControls_CICheckBoxFactory;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CICheckBoxFactory_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIChoosingGroupHeaderContainerEventArgs_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIChoosingGroupHeaderContainerEventArgs_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIChoosingGroupHeaderContainerEventArgs __x_ABI_CWindows_CUI_CXaml_CControls_CIChoosingGroupHeaderContainerEventArgs;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CIChoosingGroupHeaderContainerEventArgs_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIChoosingItemContainerEventArgs_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIChoosingItemContainerEventArgs_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIChoosingItemContainerEventArgs __x_ABI_CWindows_CUI_CXaml_CControls_CIChoosingItemContainerEventArgs;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CIChoosingItemContainerEventArgs_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CICleanUpVirtualizedItemEventArgs_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CICleanUpVirtualizedItemEventArgs_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CICleanUpVirtualizedItemEventArgs __x_ABI_CWindows_CUI_CXaml_CControls_CICleanUpVirtualizedItemEventArgs;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CICleanUpVirtualizedItemEventArgs_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIColorChangedEventArgs_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIColorChangedEventArgs_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIColorChangedEventArgs __x_ABI_CWindows_CUI_CXaml_CControls_CIColorChangedEventArgs;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CIColorChangedEventArgs_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIColorPicker_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIColorPicker_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIColorPicker __x_ABI_CWindows_CUI_CXaml_CControls_CIColorPicker;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CIColorPicker_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIColorPickerFactory_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIColorPickerFactory_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIColorPickerFactory __x_ABI_CWindows_CUI_CXaml_CControls_CIColorPickerFactory;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CIColorPickerFactory_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIColorPickerStatics_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIColorPickerStatics_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIColorPickerStatics __x_ABI_CWindows_CUI_CXaml_CControls_CIColorPickerStatics;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CIColorPickerStatics_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIColumnDefinition_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIColumnDefinition_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIColumnDefinition __x_ABI_CWindows_CUI_CXaml_CControls_CIColumnDefinition;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CIColumnDefinition_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIColumnDefinitionStatics_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIColumnDefinitionStatics_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIColumnDefinitionStatics __x_ABI_CWindows_CUI_CXaml_CControls_CIColumnDefinitionStatics;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CIColumnDefinitionStatics_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIComboBox_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIComboBox_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIComboBox __x_ABI_CWindows_CUI_CXaml_CControls_CIComboBox;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CIComboBox_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIComboBox2_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIComboBox2_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIComboBox2 __x_ABI_CWindows_CUI_CXaml_CControls_CIComboBox2;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CIComboBox2_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIComboBox3_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIComboBox3_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIComboBox3 __x_ABI_CWindows_CUI_CXaml_CControls_CIComboBox3;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CIComboBox3_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIComboBox4_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIComboBox4_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIComboBox4 __x_ABI_CWindows_CUI_CXaml_CControls_CIComboBox4;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CIComboBox4_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIComboBox5_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIComboBox5_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIComboBox5 __x_ABI_CWindows_CUI_CXaml_CControls_CIComboBox5;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CIComboBox5_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIComboBox6_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIComboBox6_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIComboBox6 __x_ABI_CWindows_CUI_CXaml_CControls_CIComboBox6;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CIComboBox6_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIComboBoxFactory_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIComboBoxFactory_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIComboBoxFactory __x_ABI_CWindows_CUI_CXaml_CControls_CIComboBoxFactory;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CIComboBoxFactory_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIComboBoxItem_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIComboBoxItem_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIComboBoxItem __x_ABI_CWindows_CUI_CXaml_CControls_CIComboBoxItem;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CIComboBoxItem_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIComboBoxItemFactory_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIComboBoxItemFactory_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIComboBoxItemFactory __x_ABI_CWindows_CUI_CXaml_CControls_CIComboBoxItemFactory;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CIComboBoxItemFactory_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIComboBoxOverrides_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIComboBoxOverrides_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIComboBoxOverrides __x_ABI_CWindows_CUI_CXaml_CControls_CIComboBoxOverrides;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CIComboBoxOverrides_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIComboBoxStatics_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIComboBoxStatics_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIComboBoxStatics __x_ABI_CWindows_CUI_CXaml_CControls_CIComboBoxStatics;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CIComboBoxStatics_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIComboBoxStatics2_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIComboBoxStatics2_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIComboBoxStatics2 __x_ABI_CWindows_CUI_CXaml_CControls_CIComboBoxStatics2;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CIComboBoxStatics2_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIComboBoxStatics3_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIComboBoxStatics3_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIComboBoxStatics3 __x_ABI_CWindows_CUI_CXaml_CControls_CIComboBoxStatics3;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CIComboBoxStatics3_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIComboBoxStatics4_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIComboBoxStatics4_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIComboBoxStatics4 __x_ABI_CWindows_CUI_CXaml_CControls_CIComboBoxStatics4;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CIComboBoxStatics4_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIComboBoxStatics5_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIComboBoxStatics5_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIComboBoxStatics5 __x_ABI_CWindows_CUI_CXaml_CControls_CIComboBoxStatics5;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CIComboBoxStatics5_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIComboBoxStatics6_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIComboBoxStatics6_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIComboBoxStatics6 __x_ABI_CWindows_CUI_CXaml_CControls_CIComboBoxStatics6;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CIComboBoxStatics6_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIComboBoxTextSubmittedEventArgs_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIComboBoxTextSubmittedEventArgs_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIComboBoxTextSubmittedEventArgs __x_ABI_CWindows_CUI_CXaml_CControls_CIComboBoxTextSubmittedEventArgs;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CIComboBoxTextSubmittedEventArgs_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CICommandBar_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CICommandBar_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CICommandBar __x_ABI_CWindows_CUI_CXaml_CControls_CICommandBar;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CICommandBar_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CICommandBar2_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CICommandBar2_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CICommandBar2 __x_ABI_CWindows_CUI_CXaml_CControls_CICommandBar2;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CICommandBar2_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CICommandBar3_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CICommandBar3_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CICommandBar3 __x_ABI_CWindows_CUI_CXaml_CControls_CICommandBar3;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CICommandBar3_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CICommandBarElement_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CICommandBarElement_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CICommandBarElement __x_ABI_CWindows_CUI_CXaml_CControls_CICommandBarElement;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CICommandBarElement_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CICommandBarElement2_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CICommandBarElement2_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CICommandBarElement2 __x_ABI_CWindows_CUI_CXaml_CControls_CICommandBarElement2;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CICommandBarElement2_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CICommandBarFactory_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CICommandBarFactory_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CICommandBarFactory __x_ABI_CWindows_CUI_CXaml_CControls_CICommandBarFactory;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CICommandBarFactory_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CICommandBarFlyout_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CICommandBarFlyout_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CICommandBarFlyout __x_ABI_CWindows_CUI_CXaml_CControls_CICommandBarFlyout;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CICommandBarFlyout_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CICommandBarFlyoutFactory_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CICommandBarFlyoutFactory_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CICommandBarFlyoutFactory __x_ABI_CWindows_CUI_CXaml_CControls_CICommandBarFlyoutFactory;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CICommandBarFlyoutFactory_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CICommandBarOverflowPresenter_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CICommandBarOverflowPresenter_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CICommandBarOverflowPresenter __x_ABI_CWindows_CUI_CXaml_CControls_CICommandBarOverflowPresenter;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CICommandBarOverflowPresenter_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CICommandBarOverflowPresenterFactory_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CICommandBarOverflowPresenterFactory_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CICommandBarOverflowPresenterFactory __x_ABI_CWindows_CUI_CXaml_CControls_CICommandBarOverflowPresenterFactory;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CICommandBarOverflowPresenterFactory_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CICommandBarStatics_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CICommandBarStatics_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CICommandBarStatics __x_ABI_CWindows_CUI_CXaml_CControls_CICommandBarStatics;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CICommandBarStatics_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CICommandBarStatics2_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CICommandBarStatics2_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CICommandBarStatics2 __x_ABI_CWindows_CUI_CXaml_CControls_CICommandBarStatics2;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CICommandBarStatics2_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CICommandBarStatics3_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CICommandBarStatics3_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CICommandBarStatics3 __x_ABI_CWindows_CUI_CXaml_CControls_CICommandBarStatics3;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CICommandBarStatics3_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIContainerContentChangingEventArgs_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIContainerContentChangingEventArgs_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIContainerContentChangingEventArgs __x_ABI_CWindows_CUI_CXaml_CControls_CIContainerContentChangingEventArgs;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CIContainerContentChangingEventArgs_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIContentControl_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIContentControl_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIContentControl __x_ABI_CWindows_CUI_CXaml_CControls_CIContentControl;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CIContentControl_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIContentControl2_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIContentControl2_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIContentControl2 __x_ABI_CWindows_CUI_CXaml_CControls_CIContentControl2;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CIContentControl2_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIContentControlFactory_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIContentControlFactory_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIContentControlFactory __x_ABI_CWindows_CUI_CXaml_CControls_CIContentControlFactory;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CIContentControlFactory_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIContentControlOverrides_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIContentControlOverrides_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIContentControlOverrides __x_ABI_CWindows_CUI_CXaml_CControls_CIContentControlOverrides;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CIContentControlOverrides_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIContentControlStatics_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIContentControlStatics_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIContentControlStatics __x_ABI_CWindows_CUI_CXaml_CControls_CIContentControlStatics;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CIContentControlStatics_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIContentDialog_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIContentDialog_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIContentDialog __x_ABI_CWindows_CUI_CXaml_CControls_CIContentDialog;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CIContentDialog_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIContentDialog2_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIContentDialog2_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIContentDialog2 __x_ABI_CWindows_CUI_CXaml_CControls_CIContentDialog2;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CIContentDialog2_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIContentDialog3_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIContentDialog3_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIContentDialog3 __x_ABI_CWindows_CUI_CXaml_CControls_CIContentDialog3;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CIContentDialog3_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIContentDialogButtonClickDeferral_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIContentDialogButtonClickDeferral_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIContentDialogButtonClickDeferral __x_ABI_CWindows_CUI_CXaml_CControls_CIContentDialogButtonClickDeferral;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CIContentDialogButtonClickDeferral_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIContentDialogButtonClickEventArgs_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIContentDialogButtonClickEventArgs_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIContentDialogButtonClickEventArgs __x_ABI_CWindows_CUI_CXaml_CControls_CIContentDialogButtonClickEventArgs;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CIContentDialogButtonClickEventArgs_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIContentDialogClosedEventArgs_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIContentDialogClosedEventArgs_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIContentDialogClosedEventArgs __x_ABI_CWindows_CUI_CXaml_CControls_CIContentDialogClosedEventArgs;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CIContentDialogClosedEventArgs_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIContentDialogClosingDeferral_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIContentDialogClosingDeferral_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIContentDialogClosingDeferral __x_ABI_CWindows_CUI_CXaml_CControls_CIContentDialogClosingDeferral;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CIContentDialogClosingDeferral_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIContentDialogClosingEventArgs_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIContentDialogClosingEventArgs_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIContentDialogClosingEventArgs __x_ABI_CWindows_CUI_CXaml_CControls_CIContentDialogClosingEventArgs;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CIContentDialogClosingEventArgs_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIContentDialogFactory_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIContentDialogFactory_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIContentDialogFactory __x_ABI_CWindows_CUI_CXaml_CControls_CIContentDialogFactory;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CIContentDialogFactory_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIContentDialogOpenedEventArgs_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIContentDialogOpenedEventArgs_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIContentDialogOpenedEventArgs __x_ABI_CWindows_CUI_CXaml_CControls_CIContentDialogOpenedEventArgs;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CIContentDialogOpenedEventArgs_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIContentDialogStatics_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIContentDialogStatics_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIContentDialogStatics __x_ABI_CWindows_CUI_CXaml_CControls_CIContentDialogStatics;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CIContentDialogStatics_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIContentDialogStatics2_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIContentDialogStatics2_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIContentDialogStatics2 __x_ABI_CWindows_CUI_CXaml_CControls_CIContentDialogStatics2;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CIContentDialogStatics2_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIContentLinkChangedEventArgs_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIContentLinkChangedEventArgs_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIContentLinkChangedEventArgs __x_ABI_CWindows_CUI_CXaml_CControls_CIContentLinkChangedEventArgs;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CIContentLinkChangedEventArgs_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIContentPresenter_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIContentPresenter_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIContentPresenter __x_ABI_CWindows_CUI_CXaml_CControls_CIContentPresenter;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CIContentPresenter_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIContentPresenter2_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIContentPresenter2_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIContentPresenter2 __x_ABI_CWindows_CUI_CXaml_CControls_CIContentPresenter2;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CIContentPresenter2_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIContentPresenter3_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIContentPresenter3_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIContentPresenter3 __x_ABI_CWindows_CUI_CXaml_CControls_CIContentPresenter3;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CIContentPresenter3_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIContentPresenter4_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIContentPresenter4_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIContentPresenter4 __x_ABI_CWindows_CUI_CXaml_CControls_CIContentPresenter4;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CIContentPresenter4_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIContentPresenter5_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIContentPresenter5_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIContentPresenter5 __x_ABI_CWindows_CUI_CXaml_CControls_CIContentPresenter5;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CIContentPresenter5_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIContentPresenterFactory_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIContentPresenterFactory_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIContentPresenterFactory __x_ABI_CWindows_CUI_CXaml_CControls_CIContentPresenterFactory;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CIContentPresenterFactory_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIContentPresenterOverrides_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIContentPresenterOverrides_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIContentPresenterOverrides __x_ABI_CWindows_CUI_CXaml_CControls_CIContentPresenterOverrides;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CIContentPresenterOverrides_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIContentPresenterStatics_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIContentPresenterStatics_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIContentPresenterStatics __x_ABI_CWindows_CUI_CXaml_CControls_CIContentPresenterStatics;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CIContentPresenterStatics_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIContentPresenterStatics2_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIContentPresenterStatics2_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIContentPresenterStatics2 __x_ABI_CWindows_CUI_CXaml_CControls_CIContentPresenterStatics2;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CIContentPresenterStatics2_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIContentPresenterStatics3_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIContentPresenterStatics3_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIContentPresenterStatics3 __x_ABI_CWindows_CUI_CXaml_CControls_CIContentPresenterStatics3;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CIContentPresenterStatics3_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIContentPresenterStatics4_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIContentPresenterStatics4_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIContentPresenterStatics4 __x_ABI_CWindows_CUI_CXaml_CControls_CIContentPresenterStatics4;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CIContentPresenterStatics4_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIContentPresenterStatics5_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIContentPresenterStatics5_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIContentPresenterStatics5 __x_ABI_CWindows_CUI_CXaml_CControls_CIContentPresenterStatics5;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CIContentPresenterStatics5_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIContextMenuEventArgs_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIContextMenuEventArgs_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIContextMenuEventArgs __x_ABI_CWindows_CUI_CXaml_CControls_CIContextMenuEventArgs;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CIContextMenuEventArgs_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIControl_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIControl_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIControl __x_ABI_CWindows_CUI_CXaml_CControls_CIControl;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CIControl_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIControl2_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIControl2_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIControl2 __x_ABI_CWindows_CUI_CXaml_CControls_CIControl2;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CIControl2_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIControl3_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIControl3_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIControl3 __x_ABI_CWindows_CUI_CXaml_CControls_CIControl3;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CIControl3_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIControl4_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIControl4_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIControl4 __x_ABI_CWindows_CUI_CXaml_CControls_CIControl4;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CIControl4_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIControl5_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIControl5_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIControl5 __x_ABI_CWindows_CUI_CXaml_CControls_CIControl5;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CIControl5_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIControl7_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIControl7_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIControl7 __x_ABI_CWindows_CUI_CXaml_CControls_CIControl7;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CIControl7_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIControlFactory_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIControlFactory_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIControlFactory __x_ABI_CWindows_CUI_CXaml_CControls_CIControlFactory;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CIControlFactory_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIControlOverrides_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIControlOverrides_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIControlOverrides __x_ABI_CWindows_CUI_CXaml_CControls_CIControlOverrides;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CIControlOverrides_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIControlOverrides6_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIControlOverrides6_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIControlOverrides6 __x_ABI_CWindows_CUI_CXaml_CControls_CIControlOverrides6;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CIControlOverrides6_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIControlProtected_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIControlProtected_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIControlProtected __x_ABI_CWindows_CUI_CXaml_CControls_CIControlProtected;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CIControlProtected_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIControlStatics_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIControlStatics_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIControlStatics __x_ABI_CWindows_CUI_CXaml_CControls_CIControlStatics;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CIControlStatics_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIControlStatics2_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIControlStatics2_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIControlStatics2 __x_ABI_CWindows_CUI_CXaml_CControls_CIControlStatics2;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CIControlStatics2_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIControlStatics3_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIControlStatics3_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIControlStatics3 __x_ABI_CWindows_CUI_CXaml_CControls_CIControlStatics3;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CIControlStatics3_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIControlStatics4_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIControlStatics4_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIControlStatics4 __x_ABI_CWindows_CUI_CXaml_CControls_CIControlStatics4;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CIControlStatics4_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIControlStatics5_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIControlStatics5_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIControlStatics5 __x_ABI_CWindows_CUI_CXaml_CControls_CIControlStatics5;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CIControlStatics5_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIControlStatics7_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIControlStatics7_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIControlStatics7 __x_ABI_CWindows_CUI_CXaml_CControls_CIControlStatics7;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CIControlStatics7_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIControlTemplate_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIControlTemplate_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIControlTemplate __x_ABI_CWindows_CUI_CXaml_CControls_CIControlTemplate;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CIControlTemplate_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIDataTemplateSelector_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIDataTemplateSelector_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIDataTemplateSelector __x_ABI_CWindows_CUI_CXaml_CControls_CIDataTemplateSelector;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CIDataTemplateSelector_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIDataTemplateSelector2_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIDataTemplateSelector2_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIDataTemplateSelector2 __x_ABI_CWindows_CUI_CXaml_CControls_CIDataTemplateSelector2;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CIDataTemplateSelector2_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIDataTemplateSelectorFactory_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIDataTemplateSelectorFactory_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIDataTemplateSelectorFactory __x_ABI_CWindows_CUI_CXaml_CControls_CIDataTemplateSelectorFactory;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CIDataTemplateSelectorFactory_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIDataTemplateSelectorOverrides_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIDataTemplateSelectorOverrides_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIDataTemplateSelectorOverrides __x_ABI_CWindows_CUI_CXaml_CControls_CIDataTemplateSelectorOverrides;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CIDataTemplateSelectorOverrides_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIDataTemplateSelectorOverrides2_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIDataTemplateSelectorOverrides2_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIDataTemplateSelectorOverrides2 __x_ABI_CWindows_CUI_CXaml_CControls_CIDataTemplateSelectorOverrides2;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CIDataTemplateSelectorOverrides2_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIDatePickedEventArgs_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIDatePickedEventArgs_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIDatePickedEventArgs __x_ABI_CWindows_CUI_CXaml_CControls_CIDatePickedEventArgs;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CIDatePickedEventArgs_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIDatePicker_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIDatePicker_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIDatePicker __x_ABI_CWindows_CUI_CXaml_CControls_CIDatePicker;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CIDatePicker_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIDatePicker2_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIDatePicker2_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIDatePicker2 __x_ABI_CWindows_CUI_CXaml_CControls_CIDatePicker2;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CIDatePicker2_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIDatePicker3_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIDatePicker3_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIDatePicker3 __x_ABI_CWindows_CUI_CXaml_CControls_CIDatePicker3;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CIDatePicker3_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIDatePickerFactory_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIDatePickerFactory_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIDatePickerFactory __x_ABI_CWindows_CUI_CXaml_CControls_CIDatePickerFactory;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CIDatePickerFactory_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIDatePickerFlyout_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIDatePickerFlyout_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIDatePickerFlyout __x_ABI_CWindows_CUI_CXaml_CControls_CIDatePickerFlyout;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CIDatePickerFlyout_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIDatePickerFlyout2_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIDatePickerFlyout2_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIDatePickerFlyout2 __x_ABI_CWindows_CUI_CXaml_CControls_CIDatePickerFlyout2;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CIDatePickerFlyout2_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIDatePickerFlyoutItem_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIDatePickerFlyoutItem_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIDatePickerFlyoutItem __x_ABI_CWindows_CUI_CXaml_CControls_CIDatePickerFlyoutItem;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CIDatePickerFlyoutItem_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIDatePickerFlyoutItemStatics_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIDatePickerFlyoutItemStatics_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIDatePickerFlyoutItemStatics __x_ABI_CWindows_CUI_CXaml_CControls_CIDatePickerFlyoutItemStatics;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CIDatePickerFlyoutItemStatics_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIDatePickerFlyoutPresenter_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIDatePickerFlyoutPresenter_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIDatePickerFlyoutPresenter __x_ABI_CWindows_CUI_CXaml_CControls_CIDatePickerFlyoutPresenter;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CIDatePickerFlyoutPresenter_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIDatePickerFlyoutPresenter2_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIDatePickerFlyoutPresenter2_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIDatePickerFlyoutPresenter2 __x_ABI_CWindows_CUI_CXaml_CControls_CIDatePickerFlyoutPresenter2;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CIDatePickerFlyoutPresenter2_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIDatePickerFlyoutPresenterStatics2_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIDatePickerFlyoutPresenterStatics2_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIDatePickerFlyoutPresenterStatics2 __x_ABI_CWindows_CUI_CXaml_CControls_CIDatePickerFlyoutPresenterStatics2;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CIDatePickerFlyoutPresenterStatics2_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIDatePickerFlyoutStatics_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIDatePickerFlyoutStatics_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIDatePickerFlyoutStatics __x_ABI_CWindows_CUI_CXaml_CControls_CIDatePickerFlyoutStatics;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CIDatePickerFlyoutStatics_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIDatePickerFlyoutStatics2_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIDatePickerFlyoutStatics2_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIDatePickerFlyoutStatics2 __x_ABI_CWindows_CUI_CXaml_CControls_CIDatePickerFlyoutStatics2;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CIDatePickerFlyoutStatics2_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIDatePickerSelectedValueChangedEventArgs_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIDatePickerSelectedValueChangedEventArgs_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIDatePickerSelectedValueChangedEventArgs __x_ABI_CWindows_CUI_CXaml_CControls_CIDatePickerSelectedValueChangedEventArgs;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CIDatePickerSelectedValueChangedEventArgs_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIDatePickerStatics_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIDatePickerStatics_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIDatePickerStatics __x_ABI_CWindows_CUI_CXaml_CControls_CIDatePickerStatics;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CIDatePickerStatics_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIDatePickerStatics2_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIDatePickerStatics2_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIDatePickerStatics2 __x_ABI_CWindows_CUI_CXaml_CControls_CIDatePickerStatics2;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CIDatePickerStatics2_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIDatePickerStatics3_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIDatePickerStatics3_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIDatePickerStatics3 __x_ABI_CWindows_CUI_CXaml_CControls_CIDatePickerStatics3;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CIDatePickerStatics3_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIDatePickerValueChangedEventArgs_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIDatePickerValueChangedEventArgs_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIDatePickerValueChangedEventArgs __x_ABI_CWindows_CUI_CXaml_CControls_CIDatePickerValueChangedEventArgs;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CIDatePickerValueChangedEventArgs_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIDragItemsCompletedEventArgs_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIDragItemsCompletedEventArgs_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIDragItemsCompletedEventArgs __x_ABI_CWindows_CUI_CXaml_CControls_CIDragItemsCompletedEventArgs;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CIDragItemsCompletedEventArgs_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIDragItemsStartingEventArgs_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIDragItemsStartingEventArgs_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIDragItemsStartingEventArgs __x_ABI_CWindows_CUI_CXaml_CControls_CIDragItemsStartingEventArgs;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CIDragItemsStartingEventArgs_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIDropDownButton_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIDropDownButton_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIDropDownButton __x_ABI_CWindows_CUI_CXaml_CControls_CIDropDownButton;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CIDropDownButton_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIDropDownButtonAutomationPeer_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIDropDownButtonAutomationPeer_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIDropDownButtonAutomationPeer __x_ABI_CWindows_CUI_CXaml_CControls_CIDropDownButtonAutomationPeer;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CIDropDownButtonAutomationPeer_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIDropDownButtonAutomationPeerFactory_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIDropDownButtonAutomationPeerFactory_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIDropDownButtonAutomationPeerFactory __x_ABI_CWindows_CUI_CXaml_CControls_CIDropDownButtonAutomationPeerFactory;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CIDropDownButtonAutomationPeerFactory_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIDropDownButtonFactory_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIDropDownButtonFactory_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIDropDownButtonFactory __x_ABI_CWindows_CUI_CXaml_CControls_CIDropDownButtonFactory;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CIDropDownButtonFactory_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIDynamicOverflowItemsChangingEventArgs_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIDynamicOverflowItemsChangingEventArgs_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIDynamicOverflowItemsChangingEventArgs __x_ABI_CWindows_CUI_CXaml_CControls_CIDynamicOverflowItemsChangingEventArgs;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CIDynamicOverflowItemsChangingEventArgs_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIFlipView_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIFlipView_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIFlipView __x_ABI_CWindows_CUI_CXaml_CControls_CIFlipView;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CIFlipView_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIFlipView2_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIFlipView2_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIFlipView2 __x_ABI_CWindows_CUI_CXaml_CControls_CIFlipView2;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CIFlipView2_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIFlipViewFactory_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIFlipViewFactory_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIFlipViewFactory __x_ABI_CWindows_CUI_CXaml_CControls_CIFlipViewFactory;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CIFlipViewFactory_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIFlipViewItem_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIFlipViewItem_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIFlipViewItem __x_ABI_CWindows_CUI_CXaml_CControls_CIFlipViewItem;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CIFlipViewItem_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIFlipViewItemFactory_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIFlipViewItemFactory_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIFlipViewItemFactory __x_ABI_CWindows_CUI_CXaml_CControls_CIFlipViewItemFactory;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CIFlipViewItemFactory_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIFlipViewStatics2_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIFlipViewStatics2_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIFlipViewStatics2 __x_ABI_CWindows_CUI_CXaml_CControls_CIFlipViewStatics2;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CIFlipViewStatics2_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIFlyout_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIFlyout_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIFlyout __x_ABI_CWindows_CUI_CXaml_CControls_CIFlyout;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CIFlyout_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIFlyoutFactory_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIFlyoutFactory_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIFlyoutFactory __x_ABI_CWindows_CUI_CXaml_CControls_CIFlyoutFactory;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CIFlyoutFactory_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIFlyoutPresenter_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIFlyoutPresenter_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIFlyoutPresenter __x_ABI_CWindows_CUI_CXaml_CControls_CIFlyoutPresenter;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CIFlyoutPresenter_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIFlyoutPresenter2_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIFlyoutPresenter2_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIFlyoutPresenter2 __x_ABI_CWindows_CUI_CXaml_CControls_CIFlyoutPresenter2;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CIFlyoutPresenter2_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIFlyoutPresenterFactory_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIFlyoutPresenterFactory_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIFlyoutPresenterFactory __x_ABI_CWindows_CUI_CXaml_CControls_CIFlyoutPresenterFactory;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CIFlyoutPresenterFactory_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIFlyoutPresenterStatics2_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIFlyoutPresenterStatics2_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIFlyoutPresenterStatics2 __x_ABI_CWindows_CUI_CXaml_CControls_CIFlyoutPresenterStatics2;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CIFlyoutPresenterStatics2_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIFlyoutStatics_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIFlyoutStatics_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIFlyoutStatics __x_ABI_CWindows_CUI_CXaml_CControls_CIFlyoutStatics;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CIFlyoutStatics_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIFocusDisengagedEventArgs_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIFocusDisengagedEventArgs_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIFocusDisengagedEventArgs __x_ABI_CWindows_CUI_CXaml_CControls_CIFocusDisengagedEventArgs;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CIFocusDisengagedEventArgs_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIFocusEngagedEventArgs_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIFocusEngagedEventArgs_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIFocusEngagedEventArgs __x_ABI_CWindows_CUI_CXaml_CControls_CIFocusEngagedEventArgs;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CIFocusEngagedEventArgs_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIFocusEngagedEventArgs2_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIFocusEngagedEventArgs2_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIFocusEngagedEventArgs2 __x_ABI_CWindows_CUI_CXaml_CControls_CIFocusEngagedEventArgs2;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CIFocusEngagedEventArgs2_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIFontIcon_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIFontIcon_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIFontIcon __x_ABI_CWindows_CUI_CXaml_CControls_CIFontIcon;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CIFontIcon_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIFontIcon2_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIFontIcon2_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIFontIcon2 __x_ABI_CWindows_CUI_CXaml_CControls_CIFontIcon2;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CIFontIcon2_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIFontIcon3_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIFontIcon3_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIFontIcon3 __x_ABI_CWindows_CUI_CXaml_CControls_CIFontIcon3;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CIFontIcon3_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIFontIconFactory_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIFontIconFactory_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIFontIconFactory __x_ABI_CWindows_CUI_CXaml_CControls_CIFontIconFactory;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CIFontIconFactory_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIFontIconSource_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIFontIconSource_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIFontIconSource __x_ABI_CWindows_CUI_CXaml_CControls_CIFontIconSource;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CIFontIconSource_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIFontIconSourceFactory_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIFontIconSourceFactory_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIFontIconSourceFactory __x_ABI_CWindows_CUI_CXaml_CControls_CIFontIconSourceFactory;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CIFontIconSourceFactory_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIFontIconSourceStatics_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIFontIconSourceStatics_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIFontIconSourceStatics __x_ABI_CWindows_CUI_CXaml_CControls_CIFontIconSourceStatics;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CIFontIconSourceStatics_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIFontIconStatics_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIFontIconStatics_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIFontIconStatics __x_ABI_CWindows_CUI_CXaml_CControls_CIFontIconStatics;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CIFontIconStatics_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIFontIconStatics2_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIFontIconStatics2_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIFontIconStatics2 __x_ABI_CWindows_CUI_CXaml_CControls_CIFontIconStatics2;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CIFontIconStatics2_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIFontIconStatics3_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIFontIconStatics3_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIFontIconStatics3 __x_ABI_CWindows_CUI_CXaml_CControls_CIFontIconStatics3;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CIFontIconStatics3_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIFrame_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIFrame_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIFrame __x_ABI_CWindows_CUI_CXaml_CControls_CIFrame;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CIFrame_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIFrame2_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIFrame2_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIFrame2 __x_ABI_CWindows_CUI_CXaml_CControls_CIFrame2;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CIFrame2_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIFrame3_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIFrame3_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIFrame3 __x_ABI_CWindows_CUI_CXaml_CControls_CIFrame3;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CIFrame3_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIFrame4_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIFrame4_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIFrame4 __x_ABI_CWindows_CUI_CXaml_CControls_CIFrame4;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CIFrame4_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIFrame5_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIFrame5_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIFrame5 __x_ABI_CWindows_CUI_CXaml_CControls_CIFrame5;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CIFrame5_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIFrameFactory_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIFrameFactory_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIFrameFactory __x_ABI_CWindows_CUI_CXaml_CControls_CIFrameFactory;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CIFrameFactory_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIFrameStatics_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIFrameStatics_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIFrameStatics __x_ABI_CWindows_CUI_CXaml_CControls_CIFrameStatics;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CIFrameStatics_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIFrameStatics2_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIFrameStatics2_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIFrameStatics2 __x_ABI_CWindows_CUI_CXaml_CControls_CIFrameStatics2;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CIFrameStatics2_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIFrameStatics5_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIFrameStatics5_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIFrameStatics5 __x_ABI_CWindows_CUI_CXaml_CControls_CIFrameStatics5;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CIFrameStatics5_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIGrid_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIGrid_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIGrid __x_ABI_CWindows_CUI_CXaml_CControls_CIGrid;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CIGrid_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIGrid2_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIGrid2_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIGrid2 __x_ABI_CWindows_CUI_CXaml_CControls_CIGrid2;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CIGrid2_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIGrid3_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIGrid3_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIGrid3 __x_ABI_CWindows_CUI_CXaml_CControls_CIGrid3;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CIGrid3_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIGrid4_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIGrid4_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIGrid4 __x_ABI_CWindows_CUI_CXaml_CControls_CIGrid4;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CIGrid4_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIGridFactory_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIGridFactory_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIGridFactory __x_ABI_CWindows_CUI_CXaml_CControls_CIGridFactory;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CIGridFactory_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIGridStatics_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIGridStatics_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIGridStatics __x_ABI_CWindows_CUI_CXaml_CControls_CIGridStatics;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CIGridStatics_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIGridStatics2_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIGridStatics2_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIGridStatics2 __x_ABI_CWindows_CUI_CXaml_CControls_CIGridStatics2;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CIGridStatics2_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIGridStatics3_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIGridStatics3_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIGridStatics3 __x_ABI_CWindows_CUI_CXaml_CControls_CIGridStatics3;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CIGridStatics3_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIGridStatics4_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIGridStatics4_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIGridStatics4 __x_ABI_CWindows_CUI_CXaml_CControls_CIGridStatics4;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CIGridStatics4_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIGridView_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIGridView_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIGridView __x_ABI_CWindows_CUI_CXaml_CControls_CIGridView;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CIGridView_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIGridViewFactory_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIGridViewFactory_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIGridViewFactory __x_ABI_CWindows_CUI_CXaml_CControls_CIGridViewFactory;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CIGridViewFactory_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIGridViewHeaderItem_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIGridViewHeaderItem_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIGridViewHeaderItem __x_ABI_CWindows_CUI_CXaml_CControls_CIGridViewHeaderItem;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CIGridViewHeaderItem_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIGridViewHeaderItemFactory_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIGridViewHeaderItemFactory_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIGridViewHeaderItemFactory __x_ABI_CWindows_CUI_CXaml_CControls_CIGridViewHeaderItemFactory;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CIGridViewHeaderItemFactory_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIGridViewItem_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIGridViewItem_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIGridViewItem __x_ABI_CWindows_CUI_CXaml_CControls_CIGridViewItem;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CIGridViewItem_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIGridViewItemFactory_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIGridViewItemFactory_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIGridViewItemFactory __x_ABI_CWindows_CUI_CXaml_CControls_CIGridViewItemFactory;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CIGridViewItemFactory_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIGroupItem_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIGroupItem_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIGroupItem __x_ABI_CWindows_CUI_CXaml_CControls_CIGroupItem;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CIGroupItem_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIGroupItemFactory_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIGroupItemFactory_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIGroupItemFactory __x_ABI_CWindows_CUI_CXaml_CControls_CIGroupItemFactory;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CIGroupItemFactory_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIGroupStyle_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIGroupStyle_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIGroupStyle __x_ABI_CWindows_CUI_CXaml_CControls_CIGroupStyle;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CIGroupStyle_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIGroupStyle2_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIGroupStyle2_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIGroupStyle2 __x_ABI_CWindows_CUI_CXaml_CControls_CIGroupStyle2;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CIGroupStyle2_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIGroupStyleFactory_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIGroupStyleFactory_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIGroupStyleFactory __x_ABI_CWindows_CUI_CXaml_CControls_CIGroupStyleFactory;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CIGroupStyleFactory_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIGroupStyleSelector_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIGroupStyleSelector_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIGroupStyleSelector __x_ABI_CWindows_CUI_CXaml_CControls_CIGroupStyleSelector;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CIGroupStyleSelector_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIGroupStyleSelectorFactory_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIGroupStyleSelectorFactory_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIGroupStyleSelectorFactory __x_ABI_CWindows_CUI_CXaml_CControls_CIGroupStyleSelectorFactory;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CIGroupStyleSelectorFactory_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIGroupStyleSelectorOverrides_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIGroupStyleSelectorOverrides_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIGroupStyleSelectorOverrides __x_ABI_CWindows_CUI_CXaml_CControls_CIGroupStyleSelectorOverrides;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CIGroupStyleSelectorOverrides_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIHandwritingPanelClosedEventArgs_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIHandwritingPanelClosedEventArgs_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIHandwritingPanelClosedEventArgs __x_ABI_CWindows_CUI_CXaml_CControls_CIHandwritingPanelClosedEventArgs;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CIHandwritingPanelClosedEventArgs_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIHandwritingPanelOpenedEventArgs_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIHandwritingPanelOpenedEventArgs_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIHandwritingPanelOpenedEventArgs __x_ABI_CWindows_CUI_CXaml_CControls_CIHandwritingPanelOpenedEventArgs;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CIHandwritingPanelOpenedEventArgs_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIHandwritingView_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIHandwritingView_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIHandwritingView __x_ABI_CWindows_CUI_CXaml_CControls_CIHandwritingView;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CIHandwritingView_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIHandwritingViewFactory_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIHandwritingViewFactory_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIHandwritingViewFactory __x_ABI_CWindows_CUI_CXaml_CControls_CIHandwritingViewFactory;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CIHandwritingViewFactory_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIHandwritingViewStatics_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIHandwritingViewStatics_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIHandwritingViewStatics __x_ABI_CWindows_CUI_CXaml_CControls_CIHandwritingViewStatics;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CIHandwritingViewStatics_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIHub_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIHub_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIHub __x_ABI_CWindows_CUI_CXaml_CControls_CIHub;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CIHub_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIHubFactory_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIHubFactory_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIHubFactory __x_ABI_CWindows_CUI_CXaml_CControls_CIHubFactory;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CIHubFactory_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIHubSection_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIHubSection_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIHubSection __x_ABI_CWindows_CUI_CXaml_CControls_CIHubSection;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CIHubSection_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIHubSectionFactory_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIHubSectionFactory_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIHubSectionFactory __x_ABI_CWindows_CUI_CXaml_CControls_CIHubSectionFactory;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CIHubSectionFactory_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIHubSectionHeaderClickEventArgs_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIHubSectionHeaderClickEventArgs_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIHubSectionHeaderClickEventArgs __x_ABI_CWindows_CUI_CXaml_CControls_CIHubSectionHeaderClickEventArgs;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CIHubSectionHeaderClickEventArgs_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIHubSectionStatics_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIHubSectionStatics_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIHubSectionStatics __x_ABI_CWindows_CUI_CXaml_CControls_CIHubSectionStatics;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CIHubSectionStatics_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIHubStatics_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIHubStatics_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIHubStatics __x_ABI_CWindows_CUI_CXaml_CControls_CIHubStatics;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CIHubStatics_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIHyperlinkButton_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIHyperlinkButton_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIHyperlinkButton __x_ABI_CWindows_CUI_CXaml_CControls_CIHyperlinkButton;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CIHyperlinkButton_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIHyperlinkButtonFactory_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIHyperlinkButtonFactory_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIHyperlinkButtonFactory __x_ABI_CWindows_CUI_CXaml_CControls_CIHyperlinkButtonFactory;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CIHyperlinkButtonFactory_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIHyperlinkButtonStatics_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIHyperlinkButtonStatics_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIHyperlinkButtonStatics __x_ABI_CWindows_CUI_CXaml_CControls_CIHyperlinkButtonStatics;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CIHyperlinkButtonStatics_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIIconElement_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIIconElement_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIIconElement __x_ABI_CWindows_CUI_CXaml_CControls_CIIconElement;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CIIconElement_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIIconElementFactory_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIIconElementFactory_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIIconElementFactory __x_ABI_CWindows_CUI_CXaml_CControls_CIIconElementFactory;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CIIconElementFactory_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIIconElementStatics_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIIconElementStatics_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIIconElementStatics __x_ABI_CWindows_CUI_CXaml_CControls_CIIconElementStatics;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CIIconElementStatics_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIIconSource_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIIconSource_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIIconSource __x_ABI_CWindows_CUI_CXaml_CControls_CIIconSource;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CIIconSource_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIIconSourceElement_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIIconSourceElement_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIIconSourceElement __x_ABI_CWindows_CUI_CXaml_CControls_CIIconSourceElement;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CIIconSourceElement_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIIconSourceElementFactory_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIIconSourceElementFactory_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIIconSourceElementFactory __x_ABI_CWindows_CUI_CXaml_CControls_CIIconSourceElementFactory;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CIIconSourceElementFactory_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIIconSourceElementStatics_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIIconSourceElementStatics_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIIconSourceElementStatics __x_ABI_CWindows_CUI_CXaml_CControls_CIIconSourceElementStatics;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CIIconSourceElementStatics_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIIconSourceFactory_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIIconSourceFactory_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIIconSourceFactory __x_ABI_CWindows_CUI_CXaml_CControls_CIIconSourceFactory;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CIIconSourceFactory_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIIconSourceStatics_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIIconSourceStatics_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIIconSourceStatics __x_ABI_CWindows_CUI_CXaml_CControls_CIIconSourceStatics;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CIIconSourceStatics_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIImage_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIImage_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIImage __x_ABI_CWindows_CUI_CXaml_CControls_CIImage;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CIImage_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIImage2_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIImage2_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIImage2 __x_ABI_CWindows_CUI_CXaml_CControls_CIImage2;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CIImage2_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIImage3_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIImage3_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIImage3 __x_ABI_CWindows_CUI_CXaml_CControls_CIImage3;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CIImage3_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIImageStatics_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIImageStatics_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIImageStatics __x_ABI_CWindows_CUI_CXaml_CControls_CIImageStatics;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CIImageStatics_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIInkCanvas_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIInkCanvas_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIInkCanvas __x_ABI_CWindows_CUI_CXaml_CControls_CIInkCanvas;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CIInkCanvas_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIInkCanvasFactory_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIInkCanvasFactory_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIInkCanvasFactory __x_ABI_CWindows_CUI_CXaml_CControls_CIInkCanvasFactory;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CIInkCanvasFactory_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbar_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbar_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbar __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbar;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbar_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbar2_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbar2_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbar2 __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbar2;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbar2_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbar3_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbar3_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbar3 __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbar3;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbar3_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarBallpointPenButton_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarBallpointPenButton_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarBallpointPenButton __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarBallpointPenButton;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarBallpointPenButton_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarBallpointPenButtonFactory_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarBallpointPenButtonFactory_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarBallpointPenButtonFactory __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarBallpointPenButtonFactory;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarBallpointPenButtonFactory_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarCustomPen_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarCustomPen_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarCustomPen __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarCustomPen;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarCustomPen_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarCustomPenButton_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarCustomPenButton_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarCustomPenButton __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarCustomPenButton;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarCustomPenButton_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarCustomPenButtonFactory_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarCustomPenButtonFactory_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarCustomPenButtonFactory __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarCustomPenButtonFactory;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarCustomPenButtonFactory_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarCustomPenButtonStatics_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarCustomPenButtonStatics_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarCustomPenButtonStatics __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarCustomPenButtonStatics;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarCustomPenButtonStatics_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarCustomPenFactory_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarCustomPenFactory_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarCustomPenFactory __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarCustomPenFactory;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarCustomPenFactory_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarCustomPenOverrides_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarCustomPenOverrides_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarCustomPenOverrides __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarCustomPenOverrides;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarCustomPenOverrides_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarCustomToggleButton_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarCustomToggleButton_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarCustomToggleButton __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarCustomToggleButton;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarCustomToggleButton_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarCustomToggleButtonFactory_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarCustomToggleButtonFactory_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarCustomToggleButtonFactory __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarCustomToggleButtonFactory;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarCustomToggleButtonFactory_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarCustomToolButton_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarCustomToolButton_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarCustomToolButton __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarCustomToolButton;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarCustomToolButton_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarCustomToolButtonFactory_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarCustomToolButtonFactory_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarCustomToolButtonFactory __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarCustomToolButtonFactory;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarCustomToolButtonFactory_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarCustomToolButtonStatics_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarCustomToolButtonStatics_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarCustomToolButtonStatics __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarCustomToolButtonStatics;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarCustomToolButtonStatics_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarEraserButton_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarEraserButton_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarEraserButton __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarEraserButton;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarEraserButton_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarEraserButton2_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarEraserButton2_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarEraserButton2 __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarEraserButton2;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarEraserButton2_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarEraserButtonFactory_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarEraserButtonFactory_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarEraserButtonFactory __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarEraserButtonFactory;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarEraserButtonFactory_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarEraserButtonStatics2_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarEraserButtonStatics2_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarEraserButtonStatics2 __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarEraserButtonStatics2;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarEraserButtonStatics2_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarFactory_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarFactory_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarFactory __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarFactory;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarFactory_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarFlyoutItem_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarFlyoutItem_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarFlyoutItem __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarFlyoutItem;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarFlyoutItem_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarFlyoutItemFactory_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarFlyoutItemFactory_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarFlyoutItemFactory __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarFlyoutItemFactory;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarFlyoutItemFactory_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarFlyoutItemStatics_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarFlyoutItemStatics_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarFlyoutItemStatics __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarFlyoutItemStatics;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarFlyoutItemStatics_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarHighlighterButton_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarHighlighterButton_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarHighlighterButton __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarHighlighterButton;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarHighlighterButton_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarHighlighterButtonFactory_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarHighlighterButtonFactory_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarHighlighterButtonFactory __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarHighlighterButtonFactory;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarHighlighterButtonFactory_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarIsStencilButtonCheckedChangedEventArgs_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarIsStencilButtonCheckedChangedEventArgs_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarIsStencilButtonCheckedChangedEventArgs __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarIsStencilButtonCheckedChangedEventArgs;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarIsStencilButtonCheckedChangedEventArgs_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarMenuButton_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarMenuButton_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarMenuButton __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarMenuButton;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarMenuButton_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarMenuButtonFactory_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarMenuButtonFactory_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarMenuButtonFactory __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarMenuButtonFactory;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarMenuButtonFactory_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarMenuButtonStatics_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarMenuButtonStatics_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarMenuButtonStatics __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarMenuButtonStatics;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarMenuButtonStatics_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarPenButton_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarPenButton_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarPenButton __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarPenButton;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarPenButton_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarPenButtonFactory_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarPenButtonFactory_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarPenButtonFactory __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarPenButtonFactory;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarPenButtonFactory_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarPenButtonStatics_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarPenButtonStatics_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarPenButtonStatics __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarPenButtonStatics;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarPenButtonStatics_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarPenConfigurationControl_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarPenConfigurationControl_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarPenConfigurationControl __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarPenConfigurationControl;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarPenConfigurationControl_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarPenConfigurationControlFactory_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarPenConfigurationControlFactory_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarPenConfigurationControlFactory __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarPenConfigurationControlFactory;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarPenConfigurationControlFactory_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarPenConfigurationControlStatics_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarPenConfigurationControlStatics_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarPenConfigurationControlStatics __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarPenConfigurationControlStatics;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarPenConfigurationControlStatics_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarPencilButton_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarPencilButton_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarPencilButton __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarPencilButton;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarPencilButton_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarPencilButtonFactory_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarPencilButtonFactory_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarPencilButtonFactory __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarPencilButtonFactory;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarPencilButtonFactory_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarRulerButton_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarRulerButton_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarRulerButton __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarRulerButton;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarRulerButton_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarRulerButtonFactory_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarRulerButtonFactory_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarRulerButtonFactory __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarRulerButtonFactory;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarRulerButtonFactory_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarRulerButtonStatics_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarRulerButtonStatics_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarRulerButtonStatics __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarRulerButtonStatics;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarRulerButtonStatics_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarStatics_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarStatics_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarStatics __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarStatics;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarStatics_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarStatics2_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarStatics2_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarStatics2 __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarStatics2;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarStatics2_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarStatics3_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarStatics3_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarStatics3 __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarStatics3;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarStatics3_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarStencilButton_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarStencilButton_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarStencilButton __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarStencilButton;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarStencilButton_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarStencilButtonFactory_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarStencilButtonFactory_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarStencilButtonFactory __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarStencilButtonFactory;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarStencilButtonFactory_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarStencilButtonStatics_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarStencilButtonStatics_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarStencilButtonStatics __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarStencilButtonStatics;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarStencilButtonStatics_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarToggleButton_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarToggleButton_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarToggleButton __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarToggleButton;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarToggleButton_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarToggleButtonFactory_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarToggleButtonFactory_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarToggleButtonFactory __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarToggleButtonFactory;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarToggleButtonFactory_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarToolButton_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarToolButton_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarToolButton __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarToolButton;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarToolButton_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarToolButtonFactory_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarToolButtonFactory_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarToolButtonFactory __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarToolButtonFactory;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarToolButtonFactory_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarToolButtonStatics_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarToolButtonStatics_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarToolButtonStatics __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarToolButtonStatics;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarToolButtonStatics_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIInsertionPanel_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIInsertionPanel_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIInsertionPanel __x_ABI_CWindows_CUI_CXaml_CControls_CIInsertionPanel;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CIInsertionPanel_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIIsTextTrimmedChangedEventArgs_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIIsTextTrimmedChangedEventArgs_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIIsTextTrimmedChangedEventArgs __x_ABI_CWindows_CUI_CXaml_CControls_CIIsTextTrimmedChangedEventArgs;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CIIsTextTrimmedChangedEventArgs_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIItemClickEventArgs_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIItemClickEventArgs_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIItemClickEventArgs __x_ABI_CWindows_CUI_CXaml_CControls_CIItemClickEventArgs;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CIItemClickEventArgs_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIItemContainerGenerator_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIItemContainerGenerator_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIItemContainerGenerator __x_ABI_CWindows_CUI_CXaml_CControls_CIItemContainerGenerator;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CIItemContainerGenerator_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIItemContainerMapping_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIItemContainerMapping_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIItemContainerMapping __x_ABI_CWindows_CUI_CXaml_CControls_CIItemContainerMapping;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CIItemContainerMapping_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIItemsControl_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIItemsControl_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsControl __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsControl;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CIItemsControl_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIItemsControl2_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIItemsControl2_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsControl2 __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsControl2;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CIItemsControl2_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIItemsControl3_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIItemsControl3_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsControl3 __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsControl3;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CIItemsControl3_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIItemsControlFactory_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIItemsControlFactory_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsControlFactory __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsControlFactory;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CIItemsControlFactory_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIItemsControlOverrides_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIItemsControlOverrides_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsControlOverrides __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsControlOverrides;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CIItemsControlOverrides_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIItemsControlStatics_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIItemsControlStatics_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsControlStatics __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsControlStatics;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CIItemsControlStatics_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIItemsPanelTemplate_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIItemsPanelTemplate_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsPanelTemplate __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsPanelTemplate;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CIItemsPanelTemplate_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIItemsPickedEventArgs_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIItemsPickedEventArgs_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsPickedEventArgs __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsPickedEventArgs;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CIItemsPickedEventArgs_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIItemsPresenter_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIItemsPresenter_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsPresenter __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsPresenter;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CIItemsPresenter_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIItemsPresenter2_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIItemsPresenter2_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsPresenter2 __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsPresenter2;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CIItemsPresenter2_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIItemsPresenterStatics_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIItemsPresenterStatics_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsPresenterStatics __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsPresenterStatics;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CIItemsPresenterStatics_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIItemsPresenterStatics2_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIItemsPresenterStatics2_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsPresenterStatics2 __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsPresenterStatics2;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CIItemsPresenterStatics2_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIItemsStackPanel_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIItemsStackPanel_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsStackPanel __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsStackPanel;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CIItemsStackPanel_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIItemsStackPanel2_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIItemsStackPanel2_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsStackPanel2 __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsStackPanel2;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CIItemsStackPanel2_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIItemsStackPanelStatics_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIItemsStackPanelStatics_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsStackPanelStatics __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsStackPanelStatics;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CIItemsStackPanelStatics_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIItemsStackPanelStatics2_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIItemsStackPanelStatics2_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsStackPanelStatics2 __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsStackPanelStatics2;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CIItemsStackPanelStatics2_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIItemsWrapGrid_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIItemsWrapGrid_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsWrapGrid __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsWrapGrid;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CIItemsWrapGrid_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIItemsWrapGrid2_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIItemsWrapGrid2_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsWrapGrid2 __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsWrapGrid2;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CIItemsWrapGrid2_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIItemsWrapGridStatics_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIItemsWrapGridStatics_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsWrapGridStatics __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsWrapGridStatics;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CIItemsWrapGridStatics_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIItemsWrapGridStatics2_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIItemsWrapGridStatics2_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsWrapGridStatics2 __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsWrapGridStatics2;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CIItemsWrapGridStatics2_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIListBox_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIListBox_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIListBox __x_ABI_CWindows_CUI_CXaml_CControls_CIListBox;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CIListBox_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIListBox2_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIListBox2_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIListBox2 __x_ABI_CWindows_CUI_CXaml_CControls_CIListBox2;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CIListBox2_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIListBoxFactory_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIListBoxFactory_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIListBoxFactory __x_ABI_CWindows_CUI_CXaml_CControls_CIListBoxFactory;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CIListBoxFactory_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIListBoxItem_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIListBoxItem_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIListBoxItem __x_ABI_CWindows_CUI_CXaml_CControls_CIListBoxItem;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CIListBoxItem_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIListBoxItemFactory_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIListBoxItemFactory_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIListBoxItemFactory __x_ABI_CWindows_CUI_CXaml_CControls_CIListBoxItemFactory;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CIListBoxItemFactory_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIListBoxStatics_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIListBoxStatics_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIListBoxStatics __x_ABI_CWindows_CUI_CXaml_CControls_CIListBoxStatics;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CIListBoxStatics_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIListBoxStatics2_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIListBoxStatics2_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIListBoxStatics2 __x_ABI_CWindows_CUI_CXaml_CControls_CIListBoxStatics2;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CIListBoxStatics2_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIListPickerFlyout_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIListPickerFlyout_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIListPickerFlyout __x_ABI_CWindows_CUI_CXaml_CControls_CIListPickerFlyout;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CIListPickerFlyout_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIListPickerFlyoutPresenter_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIListPickerFlyoutPresenter_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIListPickerFlyoutPresenter __x_ABI_CWindows_CUI_CXaml_CControls_CIListPickerFlyoutPresenter;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CIListPickerFlyoutPresenter_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIListPickerFlyoutStatics_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIListPickerFlyoutStatics_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIListPickerFlyoutStatics __x_ABI_CWindows_CUI_CXaml_CControls_CIListPickerFlyoutStatics;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CIListPickerFlyoutStatics_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIListView_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIListView_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIListView __x_ABI_CWindows_CUI_CXaml_CControls_CIListView;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CIListView_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBase_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBase_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBase __x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBase;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBase_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBase2_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBase2_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBase2 __x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBase2;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBase2_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBase3_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBase3_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBase3 __x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBase3;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBase3_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBase4_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBase4_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBase4 __x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBase4;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBase4_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBase5_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBase5_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBase5 __x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBase5;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBase5_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBase6_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBase6_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBase6 __x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBase6;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBase6_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBaseFactory_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBaseFactory_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBaseFactory __x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBaseFactory;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBaseFactory_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBaseHeaderItem_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBaseHeaderItem_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBaseHeaderItem __x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBaseHeaderItem;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBaseHeaderItem_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBaseHeaderItemFactory_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBaseHeaderItemFactory_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBaseHeaderItemFactory __x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBaseHeaderItemFactory;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBaseHeaderItemFactory_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBaseStatics_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBaseStatics_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBaseStatics __x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBaseStatics;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBaseStatics_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBaseStatics2_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBaseStatics2_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBaseStatics2 __x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBaseStatics2;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBaseStatics2_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBaseStatics3_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBaseStatics3_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBaseStatics3 __x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBaseStatics3;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBaseStatics3_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBaseStatics4_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBaseStatics4_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBaseStatics4 __x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBaseStatics4;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBaseStatics4_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBaseStatics5_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBaseStatics5_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBaseStatics5 __x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBaseStatics5;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBaseStatics5_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIListViewFactory_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIListViewFactory_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIListViewFactory __x_ABI_CWindows_CUI_CXaml_CControls_CIListViewFactory;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CIListViewFactory_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIListViewHeaderItem_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIListViewHeaderItem_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIListViewHeaderItem __x_ABI_CWindows_CUI_CXaml_CControls_CIListViewHeaderItem;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CIListViewHeaderItem_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIListViewHeaderItemFactory_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIListViewHeaderItemFactory_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIListViewHeaderItemFactory __x_ABI_CWindows_CUI_CXaml_CControls_CIListViewHeaderItemFactory;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CIListViewHeaderItemFactory_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIListViewItem_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIListViewItem_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIListViewItem __x_ABI_CWindows_CUI_CXaml_CControls_CIListViewItem;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CIListViewItem_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIListViewItemFactory_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIListViewItemFactory_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIListViewItemFactory __x_ABI_CWindows_CUI_CXaml_CControls_CIListViewItemFactory;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CIListViewItemFactory_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIListViewPersistenceHelper_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIListViewPersistenceHelper_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIListViewPersistenceHelper __x_ABI_CWindows_CUI_CXaml_CControls_CIListViewPersistenceHelper;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CIListViewPersistenceHelper_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIListViewPersistenceHelperStatics_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIListViewPersistenceHelperStatics_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIListViewPersistenceHelperStatics __x_ABI_CWindows_CUI_CXaml_CControls_CIListViewPersistenceHelperStatics;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CIListViewPersistenceHelperStatics_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIMediaElement_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIMediaElement_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaElement __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaElement;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CIMediaElement_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIMediaElement2_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIMediaElement2_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaElement2 __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaElement2;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CIMediaElement2_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIMediaElement3_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIMediaElement3_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaElement3 __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaElement3;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CIMediaElement3_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIMediaElementStatics_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIMediaElementStatics_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaElementStatics __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaElementStatics;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CIMediaElementStatics_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIMediaElementStatics2_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIMediaElementStatics2_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaElementStatics2 __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaElementStatics2;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CIMediaElementStatics2_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIMediaPlayerElement_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIMediaPlayerElement_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaPlayerElement __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaPlayerElement;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CIMediaPlayerElement_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIMediaPlayerElementFactory_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIMediaPlayerElementFactory_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaPlayerElementFactory __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaPlayerElementFactory;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CIMediaPlayerElementFactory_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIMediaPlayerElementStatics_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIMediaPlayerElementStatics_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaPlayerElementStatics __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaPlayerElementStatics;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CIMediaPlayerElementStatics_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIMediaPlayerPresenter_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIMediaPlayerPresenter_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaPlayerPresenter __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaPlayerPresenter;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CIMediaPlayerPresenter_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIMediaPlayerPresenterFactory_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIMediaPlayerPresenterFactory_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaPlayerPresenterFactory __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaPlayerPresenterFactory;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CIMediaPlayerPresenterFactory_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIMediaPlayerPresenterStatics_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIMediaPlayerPresenterStatics_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaPlayerPresenterStatics __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaPlayerPresenterStatics;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CIMediaPlayerPresenterStatics_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIMediaTransportControls_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIMediaTransportControls_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaTransportControls __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaTransportControls;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CIMediaTransportControls_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIMediaTransportControls2_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIMediaTransportControls2_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaTransportControls2 __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaTransportControls2;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CIMediaTransportControls2_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIMediaTransportControls3_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIMediaTransportControls3_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaTransportControls3 __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaTransportControls3;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CIMediaTransportControls3_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIMediaTransportControls4_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIMediaTransportControls4_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaTransportControls4 __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaTransportControls4;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CIMediaTransportControls4_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIMediaTransportControlsFactory_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIMediaTransportControlsFactory_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaTransportControlsFactory __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaTransportControlsFactory;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CIMediaTransportControlsFactory_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIMediaTransportControlsHelper_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIMediaTransportControlsHelper_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaTransportControlsHelper __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaTransportControlsHelper;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CIMediaTransportControlsHelper_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIMediaTransportControlsHelperStatics_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIMediaTransportControlsHelperStatics_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaTransportControlsHelperStatics __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaTransportControlsHelperStatics;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CIMediaTransportControlsHelperStatics_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIMediaTransportControlsStatics_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIMediaTransportControlsStatics_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaTransportControlsStatics __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaTransportControlsStatics;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CIMediaTransportControlsStatics_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIMediaTransportControlsStatics2_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIMediaTransportControlsStatics2_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaTransportControlsStatics2 __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaTransportControlsStatics2;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CIMediaTransportControlsStatics2_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIMediaTransportControlsStatics3_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIMediaTransportControlsStatics3_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaTransportControlsStatics3 __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaTransportControlsStatics3;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CIMediaTransportControlsStatics3_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIMediaTransportControlsStatics4_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIMediaTransportControlsStatics4_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaTransportControlsStatics4 __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaTransportControlsStatics4;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CIMediaTransportControlsStatics4_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIMenuBar_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIMenuBar_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuBar __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuBar;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CIMenuBar_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIMenuBarFactory_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIMenuBarFactory_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuBarFactory __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuBarFactory;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CIMenuBarFactory_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIMenuBarItem_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIMenuBarItem_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuBarItem __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuBarItem;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CIMenuBarItem_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIMenuBarItemFactory_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIMenuBarItemFactory_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuBarItemFactory __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuBarItemFactory;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CIMenuBarItemFactory_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIMenuBarItemFlyout_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIMenuBarItemFlyout_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuBarItemFlyout __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuBarItemFlyout;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CIMenuBarItemFlyout_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIMenuBarItemFlyoutFactory_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIMenuBarItemFlyoutFactory_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuBarItemFlyoutFactory __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuBarItemFlyoutFactory;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CIMenuBarItemFlyoutFactory_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIMenuBarItemStatics_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIMenuBarItemStatics_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuBarItemStatics __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuBarItemStatics;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CIMenuBarItemStatics_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIMenuBarStatics_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIMenuBarStatics_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuBarStatics __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuBarStatics;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CIMenuBarStatics_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyout_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyout_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyout __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyout;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyout_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyout2_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyout2_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyout2 __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyout2;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyout2_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutFactory_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutFactory_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutFactory __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutFactory;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutFactory_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutItem_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutItem_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutItem __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutItem;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutItem_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutItem2_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutItem2_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutItem2 __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutItem2;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutItem2_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutItem3_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutItem3_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutItem3 __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutItem3;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutItem3_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutItemBase_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutItemBase_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutItemBase __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutItemBase;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutItemBase_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutItemBaseFactory_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutItemBaseFactory_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutItemBaseFactory __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutItemBaseFactory;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutItemBaseFactory_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutItemFactory_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutItemFactory_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutItemFactory __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutItemFactory;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutItemFactory_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutItemStatics_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutItemStatics_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutItemStatics __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutItemStatics;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutItemStatics_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutItemStatics2_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutItemStatics2_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutItemStatics2 __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutItemStatics2;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutItemStatics2_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutItemStatics3_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutItemStatics3_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutItemStatics3 __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutItemStatics3;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutItemStatics3_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutPresenter_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutPresenter_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutPresenter __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutPresenter;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutPresenter_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutPresenter2_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutPresenter2_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutPresenter2 __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutPresenter2;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutPresenter2_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutPresenter3_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutPresenter3_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutPresenter3 __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutPresenter3;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutPresenter3_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutPresenterFactory_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutPresenterFactory_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutPresenterFactory __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutPresenterFactory;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutPresenterFactory_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutPresenterStatics3_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutPresenterStatics3_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutPresenterStatics3 __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutPresenterStatics3;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutPresenterStatics3_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutSeparator_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutSeparator_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutSeparator __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutSeparator;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutSeparator_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutSeparatorFactory_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutSeparatorFactory_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutSeparatorFactory __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutSeparatorFactory;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutSeparatorFactory_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutStatics_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutStatics_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutStatics __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutStatics;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutStatics_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutSubItem_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutSubItem_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutSubItem __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutSubItem;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutSubItem_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutSubItem2_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutSubItem2_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutSubItem2 __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutSubItem2;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutSubItem2_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutSubItemStatics_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutSubItemStatics_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutSubItemStatics __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutSubItemStatics;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutSubItemStatics_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutSubItemStatics2_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutSubItemStatics2_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutSubItemStatics2 __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutSubItemStatics2;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutSubItemStatics2_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CINavigate_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CINavigate_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CINavigate __x_ABI_CWindows_CUI_CXaml_CControls_CINavigate;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CINavigate_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CINavigationView_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CINavigationView_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CINavigationView __x_ABI_CWindows_CUI_CXaml_CControls_CINavigationView;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CINavigationView_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CINavigationView2_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CINavigationView2_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CINavigationView2 __x_ABI_CWindows_CUI_CXaml_CControls_CINavigationView2;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CINavigationView2_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CINavigationView3_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CINavigationView3_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CINavigationView3 __x_ABI_CWindows_CUI_CXaml_CControls_CINavigationView3;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CINavigationView3_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewBackRequestedEventArgs_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewBackRequestedEventArgs_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewBackRequestedEventArgs __x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewBackRequestedEventArgs;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewBackRequestedEventArgs_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewDisplayModeChangedEventArgs_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewDisplayModeChangedEventArgs_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewDisplayModeChangedEventArgs __x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewDisplayModeChangedEventArgs;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewDisplayModeChangedEventArgs_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewFactory_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewFactory_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewFactory __x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewFactory;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewFactory_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewItem_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewItem_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewItem __x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewItem;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewItem_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewItem2_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewItem2_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewItem2 __x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewItem2;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewItem2_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewItemBase_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewItemBase_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewItemBase __x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewItemBase;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewItemBase_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewItemBaseFactory_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewItemBaseFactory_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewItemBaseFactory __x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewItemBaseFactory;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewItemBaseFactory_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewItemFactory_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewItemFactory_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewItemFactory __x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewItemFactory;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewItemFactory_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewItemHeader_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewItemHeader_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewItemHeader __x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewItemHeader;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewItemHeader_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewItemHeaderFactory_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewItemHeaderFactory_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewItemHeaderFactory __x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewItemHeaderFactory;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewItemHeaderFactory_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewItemInvokedEventArgs_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewItemInvokedEventArgs_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewItemInvokedEventArgs __x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewItemInvokedEventArgs;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewItemInvokedEventArgs_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewItemInvokedEventArgs2_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewItemInvokedEventArgs2_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewItemInvokedEventArgs2 __x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewItemInvokedEventArgs2;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewItemInvokedEventArgs2_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewItemSeparator_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewItemSeparator_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewItemSeparator __x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewItemSeparator;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewItemSeparator_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewItemSeparatorFactory_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewItemSeparatorFactory_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewItemSeparatorFactory __x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewItemSeparatorFactory;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewItemSeparatorFactory_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewItemStatics_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewItemStatics_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewItemStatics __x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewItemStatics;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewItemStatics_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewItemStatics2_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewItemStatics2_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewItemStatics2 __x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewItemStatics2;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewItemStatics2_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewList_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewList_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewList __x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewList;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewList_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewListFactory_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewListFactory_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewListFactory __x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewListFactory;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewListFactory_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewPaneClosingEventArgs_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewPaneClosingEventArgs_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewPaneClosingEventArgs __x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewPaneClosingEventArgs;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewPaneClosingEventArgs_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewSelectionChangedEventArgs_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewSelectionChangedEventArgs_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewSelectionChangedEventArgs __x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewSelectionChangedEventArgs;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewSelectionChangedEventArgs_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewSelectionChangedEventArgs2_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewSelectionChangedEventArgs2_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewSelectionChangedEventArgs2 __x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewSelectionChangedEventArgs2;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewSelectionChangedEventArgs2_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewStatics_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewStatics_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewStatics __x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewStatics;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewStatics_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewStatics2_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewStatics2_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewStatics2 __x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewStatics2;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewStatics2_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewStatics3_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewStatics3_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewStatics3 __x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewStatics3;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewStatics3_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewTemplateSettings_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewTemplateSettings_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewTemplateSettings __x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewTemplateSettings;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewTemplateSettings_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewTemplateSettingsFactory_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewTemplateSettingsFactory_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewTemplateSettingsFactory __x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewTemplateSettingsFactory;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewTemplateSettingsFactory_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewTemplateSettingsStatics_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewTemplateSettingsStatics_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewTemplateSettingsStatics __x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewTemplateSettingsStatics;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewTemplateSettingsStatics_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CINotifyEventArgs_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CINotifyEventArgs_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CINotifyEventArgs __x_ABI_CWindows_CUI_CXaml_CControls_CINotifyEventArgs;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CINotifyEventArgs_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CINotifyEventArgs2_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CINotifyEventArgs2_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CINotifyEventArgs2 __x_ABI_CWindows_CUI_CXaml_CControls_CINotifyEventArgs2;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CINotifyEventArgs2_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIPage_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIPage_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIPage __x_ABI_CWindows_CUI_CXaml_CControls_CIPage;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CIPage_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIPageFactory_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIPageFactory_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIPageFactory __x_ABI_CWindows_CUI_CXaml_CControls_CIPageFactory;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CIPageFactory_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIPageOverrides_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIPageOverrides_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIPageOverrides __x_ABI_CWindows_CUI_CXaml_CControls_CIPageOverrides;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CIPageOverrides_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIPageStatics_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIPageStatics_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIPageStatics __x_ABI_CWindows_CUI_CXaml_CControls_CIPageStatics;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CIPageStatics_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIPanel_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIPanel_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIPanel __x_ABI_CWindows_CUI_CXaml_CControls_CIPanel;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CIPanel_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIPanel2_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIPanel2_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIPanel2 __x_ABI_CWindows_CUI_CXaml_CControls_CIPanel2;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CIPanel2_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIPanelFactory_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIPanelFactory_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIPanelFactory __x_ABI_CWindows_CUI_CXaml_CControls_CIPanelFactory;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CIPanelFactory_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIPanelStatics_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIPanelStatics_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIPanelStatics __x_ABI_CWindows_CUI_CXaml_CControls_CIPanelStatics;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CIPanelStatics_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIParallaxView_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIParallaxView_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIParallaxView __x_ABI_CWindows_CUI_CXaml_CControls_CIParallaxView;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CIParallaxView_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIParallaxViewFactory_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIParallaxViewFactory_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIParallaxViewFactory __x_ABI_CWindows_CUI_CXaml_CControls_CIParallaxViewFactory;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CIParallaxViewFactory_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIParallaxViewStatics_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIParallaxViewStatics_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIParallaxViewStatics __x_ABI_CWindows_CUI_CXaml_CControls_CIParallaxViewStatics;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CIParallaxViewStatics_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIPasswordBox_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIPasswordBox_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIPasswordBox __x_ABI_CWindows_CUI_CXaml_CControls_CIPasswordBox;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CIPasswordBox_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIPasswordBox2_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIPasswordBox2_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIPasswordBox2 __x_ABI_CWindows_CUI_CXaml_CControls_CIPasswordBox2;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CIPasswordBox2_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIPasswordBox3_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIPasswordBox3_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIPasswordBox3 __x_ABI_CWindows_CUI_CXaml_CControls_CIPasswordBox3;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CIPasswordBox3_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIPasswordBox4_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIPasswordBox4_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIPasswordBox4 __x_ABI_CWindows_CUI_CXaml_CControls_CIPasswordBox4;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CIPasswordBox4_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIPasswordBox5_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIPasswordBox5_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIPasswordBox5 __x_ABI_CWindows_CUI_CXaml_CControls_CIPasswordBox5;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CIPasswordBox5_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIPasswordBoxPasswordChangingEventArgs_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIPasswordBoxPasswordChangingEventArgs_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIPasswordBoxPasswordChangingEventArgs __x_ABI_CWindows_CUI_CXaml_CControls_CIPasswordBoxPasswordChangingEventArgs;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CIPasswordBoxPasswordChangingEventArgs_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIPasswordBoxStatics_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIPasswordBoxStatics_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIPasswordBoxStatics __x_ABI_CWindows_CUI_CXaml_CControls_CIPasswordBoxStatics;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CIPasswordBoxStatics_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIPasswordBoxStatics2_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIPasswordBoxStatics2_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIPasswordBoxStatics2 __x_ABI_CWindows_CUI_CXaml_CControls_CIPasswordBoxStatics2;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CIPasswordBoxStatics2_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIPasswordBoxStatics3_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIPasswordBoxStatics3_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIPasswordBoxStatics3 __x_ABI_CWindows_CUI_CXaml_CControls_CIPasswordBoxStatics3;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CIPasswordBoxStatics3_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIPasswordBoxStatics5_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIPasswordBoxStatics5_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIPasswordBoxStatics5 __x_ABI_CWindows_CUI_CXaml_CControls_CIPasswordBoxStatics5;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CIPasswordBoxStatics5_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIPathIcon_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIPathIcon_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIPathIcon __x_ABI_CWindows_CUI_CXaml_CControls_CIPathIcon;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CIPathIcon_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIPathIconFactory_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIPathIconFactory_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIPathIconFactory __x_ABI_CWindows_CUI_CXaml_CControls_CIPathIconFactory;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CIPathIconFactory_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIPathIconSource_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIPathIconSource_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIPathIconSource __x_ABI_CWindows_CUI_CXaml_CControls_CIPathIconSource;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CIPathIconSource_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIPathIconSourceFactory_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIPathIconSourceFactory_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIPathIconSourceFactory __x_ABI_CWindows_CUI_CXaml_CControls_CIPathIconSourceFactory;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CIPathIconSourceFactory_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIPathIconSourceStatics_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIPathIconSourceStatics_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIPathIconSourceStatics __x_ABI_CWindows_CUI_CXaml_CControls_CIPathIconSourceStatics;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CIPathIconSourceStatics_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIPathIconStatics_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIPathIconStatics_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIPathIconStatics __x_ABI_CWindows_CUI_CXaml_CControls_CIPathIconStatics;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CIPathIconStatics_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIPersonPicture_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIPersonPicture_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIPersonPicture __x_ABI_CWindows_CUI_CXaml_CControls_CIPersonPicture;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CIPersonPicture_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIPersonPictureFactory_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIPersonPictureFactory_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIPersonPictureFactory __x_ABI_CWindows_CUI_CXaml_CControls_CIPersonPictureFactory;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CIPersonPictureFactory_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIPersonPictureStatics_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIPersonPictureStatics_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIPersonPictureStatics __x_ABI_CWindows_CUI_CXaml_CControls_CIPersonPictureStatics;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CIPersonPictureStatics_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIPickerConfirmedEventArgs_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIPickerConfirmedEventArgs_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIPickerConfirmedEventArgs __x_ABI_CWindows_CUI_CXaml_CControls_CIPickerConfirmedEventArgs;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CIPickerConfirmedEventArgs_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIPickerFlyout_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIPickerFlyout_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIPickerFlyout __x_ABI_CWindows_CUI_CXaml_CControls_CIPickerFlyout;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CIPickerFlyout_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIPickerFlyoutPresenter_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIPickerFlyoutPresenter_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIPickerFlyoutPresenter __x_ABI_CWindows_CUI_CXaml_CControls_CIPickerFlyoutPresenter;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CIPickerFlyoutPresenter_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIPickerFlyoutStatics_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIPickerFlyoutStatics_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIPickerFlyoutStatics __x_ABI_CWindows_CUI_CXaml_CControls_CIPickerFlyoutStatics;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CIPickerFlyoutStatics_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIPivot_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIPivot_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIPivot __x_ABI_CWindows_CUI_CXaml_CControls_CIPivot;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CIPivot_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIPivot2_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIPivot2_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIPivot2 __x_ABI_CWindows_CUI_CXaml_CControls_CIPivot2;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CIPivot2_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIPivot3_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIPivot3_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIPivot3 __x_ABI_CWindows_CUI_CXaml_CControls_CIPivot3;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CIPivot3_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIPivotFactory_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIPivotFactory_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIPivotFactory __x_ABI_CWindows_CUI_CXaml_CControls_CIPivotFactory;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CIPivotFactory_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIPivotItem_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIPivotItem_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIPivotItem __x_ABI_CWindows_CUI_CXaml_CControls_CIPivotItem;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CIPivotItem_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIPivotItemEventArgs_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIPivotItemEventArgs_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIPivotItemEventArgs __x_ABI_CWindows_CUI_CXaml_CControls_CIPivotItemEventArgs;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CIPivotItemEventArgs_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIPivotItemFactory_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIPivotItemFactory_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIPivotItemFactory __x_ABI_CWindows_CUI_CXaml_CControls_CIPivotItemFactory;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CIPivotItemFactory_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIPivotItemStatics_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIPivotItemStatics_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIPivotItemStatics __x_ABI_CWindows_CUI_CXaml_CControls_CIPivotItemStatics;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CIPivotItemStatics_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIPivotStatics_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIPivotStatics_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIPivotStatics __x_ABI_CWindows_CUI_CXaml_CControls_CIPivotStatics;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CIPivotStatics_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIPivotStatics2_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIPivotStatics2_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIPivotStatics2 __x_ABI_CWindows_CUI_CXaml_CControls_CIPivotStatics2;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CIPivotStatics2_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIPivotStatics3_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIPivotStatics3_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIPivotStatics3 __x_ABI_CWindows_CUI_CXaml_CControls_CIPivotStatics3;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CIPivotStatics3_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIProgressBar_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIProgressBar_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIProgressBar __x_ABI_CWindows_CUI_CXaml_CControls_CIProgressBar;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CIProgressBar_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIProgressBarFactory_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIProgressBarFactory_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIProgressBarFactory __x_ABI_CWindows_CUI_CXaml_CControls_CIProgressBarFactory;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CIProgressBarFactory_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIProgressBarStatics_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIProgressBarStatics_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIProgressBarStatics __x_ABI_CWindows_CUI_CXaml_CControls_CIProgressBarStatics;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CIProgressBarStatics_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIProgressRing_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIProgressRing_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIProgressRing __x_ABI_CWindows_CUI_CXaml_CControls_CIProgressRing;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CIProgressRing_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIProgressRingStatics_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIProgressRingStatics_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIProgressRingStatics __x_ABI_CWindows_CUI_CXaml_CControls_CIProgressRingStatics;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CIProgressRingStatics_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIRadioButton_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIRadioButton_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIRadioButton __x_ABI_CWindows_CUI_CXaml_CControls_CIRadioButton;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CIRadioButton_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIRadioButtonFactory_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIRadioButtonFactory_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIRadioButtonFactory __x_ABI_CWindows_CUI_CXaml_CControls_CIRadioButtonFactory;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CIRadioButtonFactory_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIRadioButtonStatics_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIRadioButtonStatics_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIRadioButtonStatics __x_ABI_CWindows_CUI_CXaml_CControls_CIRadioButtonStatics;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CIRadioButtonStatics_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIRatingControl_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIRatingControl_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIRatingControl __x_ABI_CWindows_CUI_CXaml_CControls_CIRatingControl;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CIRatingControl_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIRatingControlFactory_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIRatingControlFactory_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIRatingControlFactory __x_ABI_CWindows_CUI_CXaml_CControls_CIRatingControlFactory;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CIRatingControlFactory_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIRatingControlStatics_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIRatingControlStatics_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIRatingControlStatics __x_ABI_CWindows_CUI_CXaml_CControls_CIRatingControlStatics;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CIRatingControlStatics_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIRatingItemFontInfo_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIRatingItemFontInfo_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIRatingItemFontInfo __x_ABI_CWindows_CUI_CXaml_CControls_CIRatingItemFontInfo;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CIRatingItemFontInfo_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIRatingItemFontInfoFactory_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIRatingItemFontInfoFactory_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIRatingItemFontInfoFactory __x_ABI_CWindows_CUI_CXaml_CControls_CIRatingItemFontInfoFactory;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CIRatingItemFontInfoFactory_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIRatingItemFontInfoStatics_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIRatingItemFontInfoStatics_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIRatingItemFontInfoStatics __x_ABI_CWindows_CUI_CXaml_CControls_CIRatingItemFontInfoStatics;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CIRatingItemFontInfoStatics_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIRatingItemImageInfo_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIRatingItemImageInfo_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIRatingItemImageInfo __x_ABI_CWindows_CUI_CXaml_CControls_CIRatingItemImageInfo;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CIRatingItemImageInfo_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIRatingItemImageInfoFactory_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIRatingItemImageInfoFactory_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIRatingItemImageInfoFactory __x_ABI_CWindows_CUI_CXaml_CControls_CIRatingItemImageInfoFactory;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CIRatingItemImageInfoFactory_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIRatingItemImageInfoStatics_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIRatingItemImageInfoStatics_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIRatingItemImageInfoStatics __x_ABI_CWindows_CUI_CXaml_CControls_CIRatingItemImageInfoStatics;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CIRatingItemImageInfoStatics_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIRatingItemInfo_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIRatingItemInfo_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIRatingItemInfo __x_ABI_CWindows_CUI_CXaml_CControls_CIRatingItemInfo;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CIRatingItemInfo_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIRatingItemInfoFactory_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIRatingItemInfoFactory_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIRatingItemInfoFactory __x_ABI_CWindows_CUI_CXaml_CControls_CIRatingItemInfoFactory;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CIRatingItemInfoFactory_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIRefreshContainer_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIRefreshContainer_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIRefreshContainer __x_ABI_CWindows_CUI_CXaml_CControls_CIRefreshContainer;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CIRefreshContainer_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIRefreshContainerFactory_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIRefreshContainerFactory_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIRefreshContainerFactory __x_ABI_CWindows_CUI_CXaml_CControls_CIRefreshContainerFactory;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CIRefreshContainerFactory_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIRefreshContainerStatics_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIRefreshContainerStatics_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIRefreshContainerStatics __x_ABI_CWindows_CUI_CXaml_CControls_CIRefreshContainerStatics;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CIRefreshContainerStatics_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIRefreshInteractionRatioChangedEventArgs_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIRefreshInteractionRatioChangedEventArgs_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIRefreshInteractionRatioChangedEventArgs __x_ABI_CWindows_CUI_CXaml_CControls_CIRefreshInteractionRatioChangedEventArgs;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CIRefreshInteractionRatioChangedEventArgs_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIRefreshRequestedEventArgs_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIRefreshRequestedEventArgs_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIRefreshRequestedEventArgs __x_ABI_CWindows_CUI_CXaml_CControls_CIRefreshRequestedEventArgs;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CIRefreshRequestedEventArgs_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIRefreshStateChangedEventArgs_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIRefreshStateChangedEventArgs_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIRefreshStateChangedEventArgs __x_ABI_CWindows_CUI_CXaml_CControls_CIRefreshStateChangedEventArgs;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CIRefreshStateChangedEventArgs_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIRefreshVisualizer_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIRefreshVisualizer_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIRefreshVisualizer __x_ABI_CWindows_CUI_CXaml_CControls_CIRefreshVisualizer;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CIRefreshVisualizer_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIRefreshVisualizerFactory_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIRefreshVisualizerFactory_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIRefreshVisualizerFactory __x_ABI_CWindows_CUI_CXaml_CControls_CIRefreshVisualizerFactory;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CIRefreshVisualizerFactory_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIRefreshVisualizerStatics_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIRefreshVisualizerStatics_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIRefreshVisualizerStatics __x_ABI_CWindows_CUI_CXaml_CControls_CIRefreshVisualizerStatics;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CIRefreshVisualizerStatics_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIRelativePanel_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIRelativePanel_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIRelativePanel __x_ABI_CWindows_CUI_CXaml_CControls_CIRelativePanel;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CIRelativePanel_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIRelativePanel2_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIRelativePanel2_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIRelativePanel2 __x_ABI_CWindows_CUI_CXaml_CControls_CIRelativePanel2;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CIRelativePanel2_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIRelativePanelFactory_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIRelativePanelFactory_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIRelativePanelFactory __x_ABI_CWindows_CUI_CXaml_CControls_CIRelativePanelFactory;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CIRelativePanelFactory_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIRelativePanelStatics_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIRelativePanelStatics_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIRelativePanelStatics __x_ABI_CWindows_CUI_CXaml_CControls_CIRelativePanelStatics;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CIRelativePanelStatics_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIRelativePanelStatics2_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIRelativePanelStatics2_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIRelativePanelStatics2 __x_ABI_CWindows_CUI_CXaml_CControls_CIRelativePanelStatics2;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CIRelativePanelStatics2_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBox_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBox_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBox __x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBox;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBox_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBox2_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBox2_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBox2 __x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBox2;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBox2_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBox3_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBox3_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBox3 __x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBox3;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBox3_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBox4_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBox4_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBox4 __x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBox4;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBox4_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBox5_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBox5_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBox5 __x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBox5;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBox5_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBox6_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBox6_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBox6 __x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBox6;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBox6_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBox7_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBox7_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBox7 __x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBox7;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBox7_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBox8_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBox8_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBox8 __x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBox8;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBox8_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBoxFactory_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBoxFactory_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBoxFactory __x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBoxFactory;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBoxFactory_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBoxSelectionChangingEventArgs_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBoxSelectionChangingEventArgs_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBoxSelectionChangingEventArgs __x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBoxSelectionChangingEventArgs;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBoxSelectionChangingEventArgs_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBoxStatics_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBoxStatics_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBoxStatics __x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBoxStatics;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBoxStatics_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBoxStatics2_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBoxStatics2_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBoxStatics2 __x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBoxStatics2;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBoxStatics2_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBoxStatics3_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBoxStatics3_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBoxStatics3 __x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBoxStatics3;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBoxStatics3_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBoxStatics4_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBoxStatics4_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBoxStatics4 __x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBoxStatics4;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBoxStatics4_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBoxStatics5_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBoxStatics5_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBoxStatics5 __x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBoxStatics5;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBoxStatics5_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBoxStatics6_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBoxStatics6_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBoxStatics6 __x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBoxStatics6;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBoxStatics6_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBoxStatics7_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBoxStatics7_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBoxStatics7 __x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBoxStatics7;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBoxStatics7_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBoxStatics8_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBoxStatics8_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBoxStatics8 __x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBoxStatics8;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBoxStatics8_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBoxTextChangingEventArgs_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBoxTextChangingEventArgs_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBoxTextChangingEventArgs __x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBoxTextChangingEventArgs;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBoxTextChangingEventArgs_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBoxTextChangingEventArgs2_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBoxTextChangingEventArgs2_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBoxTextChangingEventArgs2 __x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBoxTextChangingEventArgs2;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBoxTextChangingEventArgs2_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlock_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlock_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlock __x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlock;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlock_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlock2_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlock2_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlock2 __x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlock2;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlock2_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlock3_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlock3_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlock3 __x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlock3;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlock3_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlock4_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlock4_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlock4 __x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlock4;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlock4_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlock5_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlock5_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlock5 __x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlock5;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlock5_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlock6_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlock6_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlock6 __x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlock6;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlock6_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlockOverflow_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlockOverflow_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlockOverflow __x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlockOverflow;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlockOverflow_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlockOverflow2_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlockOverflow2_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlockOverflow2 __x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlockOverflow2;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlockOverflow2_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlockOverflow3_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlockOverflow3_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlockOverflow3 __x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlockOverflow3;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlockOverflow3_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlockOverflowStatics_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlockOverflowStatics_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlockOverflowStatics __x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlockOverflowStatics;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlockOverflowStatics_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlockOverflowStatics2_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlockOverflowStatics2_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlockOverflowStatics2 __x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlockOverflowStatics2;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlockOverflowStatics2_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlockOverflowStatics3_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlockOverflowStatics3_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlockOverflowStatics3 __x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlockOverflowStatics3;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlockOverflowStatics3_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlockStatics_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlockStatics_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlockStatics __x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlockStatics;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlockStatics_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlockStatics2_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlockStatics2_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlockStatics2 __x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlockStatics2;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlockStatics2_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlockStatics3_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlockStatics3_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlockStatics3 __x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlockStatics3;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlockStatics3_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlockStatics4_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlockStatics4_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlockStatics4 __x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlockStatics4;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlockStatics4_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlockStatics5_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlockStatics5_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlockStatics5 __x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlockStatics5;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlockStatics5_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlockStatics6_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlockStatics6_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlockStatics6 __x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlockStatics6;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlockStatics6_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIRowDefinition_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIRowDefinition_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIRowDefinition __x_ABI_CWindows_CUI_CXaml_CControls_CIRowDefinition;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CIRowDefinition_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIRowDefinitionStatics_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIRowDefinitionStatics_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIRowDefinitionStatics __x_ABI_CWindows_CUI_CXaml_CControls_CIRowDefinitionStatics;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CIRowDefinitionStatics_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIScrollAnchorProvider_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIScrollAnchorProvider_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollAnchorProvider __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollAnchorProvider;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CIScrollAnchorProvider_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIScrollContentPresenter_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIScrollContentPresenter_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollContentPresenter __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollContentPresenter;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CIScrollContentPresenter_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIScrollContentPresenter2_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIScrollContentPresenter2_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollContentPresenter2 __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollContentPresenter2;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CIScrollContentPresenter2_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIScrollContentPresenterStatics2_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIScrollContentPresenterStatics2_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollContentPresenterStatics2 __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollContentPresenterStatics2;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CIScrollContentPresenterStatics2_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewer_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewer_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewer __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewer;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewer_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewer2_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewer2_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewer2 __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewer2;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewer2_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewer3_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewer3_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewer3 __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewer3;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewer3_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewer4_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewer4_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewer4 __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewer4;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewer4_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewerStatics_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewerStatics_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewerStatics __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewerStatics;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewerStatics_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewerStatics2_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewerStatics2_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewerStatics2 __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewerStatics2;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewerStatics2_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewerStatics4_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewerStatics4_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewerStatics4 __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewerStatics4;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewerStatics4_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewerView_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewerView_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewerView __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewerView;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewerView_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewerViewChangedEventArgs_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewerViewChangedEventArgs_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewerViewChangedEventArgs __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewerViewChangedEventArgs;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewerViewChangedEventArgs_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewerViewChangingEventArgs_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewerViewChangingEventArgs_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewerViewChangingEventArgs __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewerViewChangingEventArgs;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewerViewChangingEventArgs_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CISearchBox_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CISearchBox_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CISearchBox __x_ABI_CWindows_CUI_CXaml_CControls_CISearchBox;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CISearchBox_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CISearchBoxFactory_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CISearchBoxFactory_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CISearchBoxFactory __x_ABI_CWindows_CUI_CXaml_CControls_CISearchBoxFactory;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CISearchBoxFactory_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CISearchBoxQueryChangedEventArgs_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CISearchBoxQueryChangedEventArgs_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CISearchBoxQueryChangedEventArgs __x_ABI_CWindows_CUI_CXaml_CControls_CISearchBoxQueryChangedEventArgs;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CISearchBoxQueryChangedEventArgs_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CISearchBoxQuerySubmittedEventArgs_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CISearchBoxQuerySubmittedEventArgs_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CISearchBoxQuerySubmittedEventArgs __x_ABI_CWindows_CUI_CXaml_CControls_CISearchBoxQuerySubmittedEventArgs;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CISearchBoxQuerySubmittedEventArgs_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CISearchBoxResultSuggestionChosenEventArgs_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CISearchBoxResultSuggestionChosenEventArgs_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CISearchBoxResultSuggestionChosenEventArgs __x_ABI_CWindows_CUI_CXaml_CControls_CISearchBoxResultSuggestionChosenEventArgs;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CISearchBoxResultSuggestionChosenEventArgs_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CISearchBoxStatics_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CISearchBoxStatics_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CISearchBoxStatics __x_ABI_CWindows_CUI_CXaml_CControls_CISearchBoxStatics;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CISearchBoxStatics_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CISearchBoxSuggestionsRequestedEventArgs_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CISearchBoxSuggestionsRequestedEventArgs_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CISearchBoxSuggestionsRequestedEventArgs __x_ABI_CWindows_CUI_CXaml_CControls_CISearchBoxSuggestionsRequestedEventArgs;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CISearchBoxSuggestionsRequestedEventArgs_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CISectionsInViewChangedEventArgs_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CISectionsInViewChangedEventArgs_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CISectionsInViewChangedEventArgs __x_ABI_CWindows_CUI_CXaml_CControls_CISectionsInViewChangedEventArgs;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CISectionsInViewChangedEventArgs_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CISectionsInViewChangedEventArgsFactory_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CISectionsInViewChangedEventArgsFactory_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CISectionsInViewChangedEventArgsFactory __x_ABI_CWindows_CUI_CXaml_CControls_CISectionsInViewChangedEventArgsFactory;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CISectionsInViewChangedEventArgsFactory_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CISelectionChangedEventArgs_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CISelectionChangedEventArgs_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CISelectionChangedEventArgs __x_ABI_CWindows_CUI_CXaml_CControls_CISelectionChangedEventArgs;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CISelectionChangedEventArgs_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CISelectionChangedEventArgsFactory_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CISelectionChangedEventArgsFactory_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CISelectionChangedEventArgsFactory __x_ABI_CWindows_CUI_CXaml_CControls_CISelectionChangedEventArgsFactory;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CISelectionChangedEventArgsFactory_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CISemanticZoom_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CISemanticZoom_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CISemanticZoom __x_ABI_CWindows_CUI_CXaml_CControls_CISemanticZoom;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CISemanticZoom_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CISemanticZoomInformation_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CISemanticZoomInformation_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CISemanticZoomInformation __x_ABI_CWindows_CUI_CXaml_CControls_CISemanticZoomInformation;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CISemanticZoomInformation_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CISemanticZoomLocation_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CISemanticZoomLocation_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CISemanticZoomLocation __x_ABI_CWindows_CUI_CXaml_CControls_CISemanticZoomLocation;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CISemanticZoomLocation_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CISemanticZoomStatics_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CISemanticZoomStatics_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CISemanticZoomStatics __x_ABI_CWindows_CUI_CXaml_CControls_CISemanticZoomStatics;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CISemanticZoomStatics_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CISemanticZoomViewChangedEventArgs_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CISemanticZoomViewChangedEventArgs_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CISemanticZoomViewChangedEventArgs __x_ABI_CWindows_CUI_CXaml_CControls_CISemanticZoomViewChangedEventArgs;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CISemanticZoomViewChangedEventArgs_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CISettingsFlyout_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CISettingsFlyout_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CISettingsFlyout __x_ABI_CWindows_CUI_CXaml_CControls_CISettingsFlyout;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CISettingsFlyout_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CISettingsFlyoutFactory_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CISettingsFlyoutFactory_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CISettingsFlyoutFactory __x_ABI_CWindows_CUI_CXaml_CControls_CISettingsFlyoutFactory;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CISettingsFlyoutFactory_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CISettingsFlyoutStatics_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CISettingsFlyoutStatics_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CISettingsFlyoutStatics __x_ABI_CWindows_CUI_CXaml_CControls_CISettingsFlyoutStatics;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CISettingsFlyoutStatics_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CISlider_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CISlider_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CISlider __x_ABI_CWindows_CUI_CXaml_CControls_CISlider;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CISlider_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CISlider2_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CISlider2_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CISlider2 __x_ABI_CWindows_CUI_CXaml_CControls_CISlider2;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CISlider2_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CISliderFactory_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CISliderFactory_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CISliderFactory __x_ABI_CWindows_CUI_CXaml_CControls_CISliderFactory;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CISliderFactory_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CISliderStatics_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CISliderStatics_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CISliderStatics __x_ABI_CWindows_CUI_CXaml_CControls_CISliderStatics;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CISliderStatics_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CISliderStatics2_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CISliderStatics2_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CISliderStatics2 __x_ABI_CWindows_CUI_CXaml_CControls_CISliderStatics2;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CISliderStatics2_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CISplitButton_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CISplitButton_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CISplitButton __x_ABI_CWindows_CUI_CXaml_CControls_CISplitButton;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CISplitButton_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CISplitButtonAutomationPeer_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CISplitButtonAutomationPeer_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CISplitButtonAutomationPeer __x_ABI_CWindows_CUI_CXaml_CControls_CISplitButtonAutomationPeer;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CISplitButtonAutomationPeer_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CISplitButtonAutomationPeerFactory_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CISplitButtonAutomationPeerFactory_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CISplitButtonAutomationPeerFactory __x_ABI_CWindows_CUI_CXaml_CControls_CISplitButtonAutomationPeerFactory;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CISplitButtonAutomationPeerFactory_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CISplitButtonClickEventArgs_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CISplitButtonClickEventArgs_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CISplitButtonClickEventArgs __x_ABI_CWindows_CUI_CXaml_CControls_CISplitButtonClickEventArgs;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CISplitButtonClickEventArgs_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CISplitButtonFactory_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CISplitButtonFactory_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CISplitButtonFactory __x_ABI_CWindows_CUI_CXaml_CControls_CISplitButtonFactory;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CISplitButtonFactory_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CISplitButtonStatics_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CISplitButtonStatics_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CISplitButtonStatics __x_ABI_CWindows_CUI_CXaml_CControls_CISplitButtonStatics;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CISplitButtonStatics_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CISplitView_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CISplitView_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CISplitView __x_ABI_CWindows_CUI_CXaml_CControls_CISplitView;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CISplitView_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CISplitView2_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CISplitView2_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CISplitView2 __x_ABI_CWindows_CUI_CXaml_CControls_CISplitView2;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CISplitView2_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CISplitView3_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CISplitView3_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CISplitView3 __x_ABI_CWindows_CUI_CXaml_CControls_CISplitView3;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CISplitView3_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CISplitViewFactory_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CISplitViewFactory_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CISplitViewFactory __x_ABI_CWindows_CUI_CXaml_CControls_CISplitViewFactory;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CISplitViewFactory_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CISplitViewPaneClosingEventArgs_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CISplitViewPaneClosingEventArgs_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CISplitViewPaneClosingEventArgs __x_ABI_CWindows_CUI_CXaml_CControls_CISplitViewPaneClosingEventArgs;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CISplitViewPaneClosingEventArgs_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CISplitViewStatics_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CISplitViewStatics_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CISplitViewStatics __x_ABI_CWindows_CUI_CXaml_CControls_CISplitViewStatics;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CISplitViewStatics_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CISplitViewStatics2_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CISplitViewStatics2_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CISplitViewStatics2 __x_ABI_CWindows_CUI_CXaml_CControls_CISplitViewStatics2;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CISplitViewStatics2_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIStackPanel_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIStackPanel_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIStackPanel __x_ABI_CWindows_CUI_CXaml_CControls_CIStackPanel;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CIStackPanel_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIStackPanel2_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIStackPanel2_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIStackPanel2 __x_ABI_CWindows_CUI_CXaml_CControls_CIStackPanel2;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CIStackPanel2_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIStackPanel4_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIStackPanel4_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIStackPanel4 __x_ABI_CWindows_CUI_CXaml_CControls_CIStackPanel4;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CIStackPanel4_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIStackPanel5_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIStackPanel5_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIStackPanel5 __x_ABI_CWindows_CUI_CXaml_CControls_CIStackPanel5;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CIStackPanel5_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIStackPanelFactory_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIStackPanelFactory_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIStackPanelFactory __x_ABI_CWindows_CUI_CXaml_CControls_CIStackPanelFactory;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CIStackPanelFactory_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIStackPanelStatics_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIStackPanelStatics_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIStackPanelStatics __x_ABI_CWindows_CUI_CXaml_CControls_CIStackPanelStatics;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CIStackPanelStatics_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIStackPanelStatics2_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIStackPanelStatics2_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIStackPanelStatics2 __x_ABI_CWindows_CUI_CXaml_CControls_CIStackPanelStatics2;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CIStackPanelStatics2_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIStackPanelStatics4_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIStackPanelStatics4_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIStackPanelStatics4 __x_ABI_CWindows_CUI_CXaml_CControls_CIStackPanelStatics4;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CIStackPanelStatics4_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIStackPanelStatics5_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIStackPanelStatics5_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIStackPanelStatics5 __x_ABI_CWindows_CUI_CXaml_CControls_CIStackPanelStatics5;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CIStackPanelStatics5_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIStyleSelector_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIStyleSelector_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIStyleSelector __x_ABI_CWindows_CUI_CXaml_CControls_CIStyleSelector;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CIStyleSelector_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIStyleSelectorFactory_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIStyleSelectorFactory_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIStyleSelectorFactory __x_ABI_CWindows_CUI_CXaml_CControls_CIStyleSelectorFactory;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CIStyleSelectorFactory_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIStyleSelectorOverrides_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIStyleSelectorOverrides_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIStyleSelectorOverrides __x_ABI_CWindows_CUI_CXaml_CControls_CIStyleSelectorOverrides;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CIStyleSelectorOverrides_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CISwapChainBackgroundPanel_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CISwapChainBackgroundPanel_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CISwapChainBackgroundPanel __x_ABI_CWindows_CUI_CXaml_CControls_CISwapChainBackgroundPanel;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CISwapChainBackgroundPanel_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CISwapChainBackgroundPanel2_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CISwapChainBackgroundPanel2_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CISwapChainBackgroundPanel2 __x_ABI_CWindows_CUI_CXaml_CControls_CISwapChainBackgroundPanel2;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CISwapChainBackgroundPanel2_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CISwapChainBackgroundPanelFactory_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CISwapChainBackgroundPanelFactory_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CISwapChainBackgroundPanelFactory __x_ABI_CWindows_CUI_CXaml_CControls_CISwapChainBackgroundPanelFactory;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CISwapChainBackgroundPanelFactory_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CISwapChainPanel_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CISwapChainPanel_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CISwapChainPanel __x_ABI_CWindows_CUI_CXaml_CControls_CISwapChainPanel;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CISwapChainPanel_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CISwapChainPanelFactory_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CISwapChainPanelFactory_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CISwapChainPanelFactory __x_ABI_CWindows_CUI_CXaml_CControls_CISwapChainPanelFactory;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CISwapChainPanelFactory_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CISwapChainPanelStatics_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CISwapChainPanelStatics_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CISwapChainPanelStatics __x_ABI_CWindows_CUI_CXaml_CControls_CISwapChainPanelStatics;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CISwapChainPanelStatics_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CISwipeControl_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CISwipeControl_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CISwipeControl __x_ABI_CWindows_CUI_CXaml_CControls_CISwipeControl;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CISwipeControl_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CISwipeControlFactory_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CISwipeControlFactory_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CISwipeControlFactory __x_ABI_CWindows_CUI_CXaml_CControls_CISwipeControlFactory;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CISwipeControlFactory_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CISwipeControlStatics_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CISwipeControlStatics_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CISwipeControlStatics __x_ABI_CWindows_CUI_CXaml_CControls_CISwipeControlStatics;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CISwipeControlStatics_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CISwipeItem_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CISwipeItem_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CISwipeItem __x_ABI_CWindows_CUI_CXaml_CControls_CISwipeItem;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CISwipeItem_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CISwipeItemFactory_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CISwipeItemFactory_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CISwipeItemFactory __x_ABI_CWindows_CUI_CXaml_CControls_CISwipeItemFactory;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CISwipeItemFactory_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CISwipeItemInvokedEventArgs_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CISwipeItemInvokedEventArgs_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CISwipeItemInvokedEventArgs __x_ABI_CWindows_CUI_CXaml_CControls_CISwipeItemInvokedEventArgs;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CISwipeItemInvokedEventArgs_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CISwipeItemStatics_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CISwipeItemStatics_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CISwipeItemStatics __x_ABI_CWindows_CUI_CXaml_CControls_CISwipeItemStatics;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CISwipeItemStatics_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CISwipeItems_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CISwipeItems_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CISwipeItems __x_ABI_CWindows_CUI_CXaml_CControls_CISwipeItems;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CISwipeItems_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CISwipeItemsFactory_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CISwipeItemsFactory_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CISwipeItemsFactory __x_ABI_CWindows_CUI_CXaml_CControls_CISwipeItemsFactory;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CISwipeItemsFactory_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CISwipeItemsStatics_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CISwipeItemsStatics_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CISwipeItemsStatics __x_ABI_CWindows_CUI_CXaml_CControls_CISwipeItemsStatics;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CISwipeItemsStatics_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CISymbolIcon_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CISymbolIcon_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CISymbolIcon __x_ABI_CWindows_CUI_CXaml_CControls_CISymbolIcon;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CISymbolIcon_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CISymbolIconFactory_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CISymbolIconFactory_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CISymbolIconFactory __x_ABI_CWindows_CUI_CXaml_CControls_CISymbolIconFactory;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CISymbolIconFactory_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CISymbolIconSource_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CISymbolIconSource_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CISymbolIconSource __x_ABI_CWindows_CUI_CXaml_CControls_CISymbolIconSource;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CISymbolIconSource_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CISymbolIconSourceFactory_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CISymbolIconSourceFactory_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CISymbolIconSourceFactory __x_ABI_CWindows_CUI_CXaml_CControls_CISymbolIconSourceFactory;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CISymbolIconSourceFactory_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CISymbolIconSourceStatics_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CISymbolIconSourceStatics_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CISymbolIconSourceStatics __x_ABI_CWindows_CUI_CXaml_CControls_CISymbolIconSourceStatics;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CISymbolIconSourceStatics_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CISymbolIconStatics_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CISymbolIconStatics_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CISymbolIconStatics __x_ABI_CWindows_CUI_CXaml_CControls_CISymbolIconStatics;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CISymbolIconStatics_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CITextBlock_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CITextBlock_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CITextBlock __x_ABI_CWindows_CUI_CXaml_CControls_CITextBlock;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CITextBlock_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CITextBlock2_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CITextBlock2_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CITextBlock2 __x_ABI_CWindows_CUI_CXaml_CControls_CITextBlock2;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CITextBlock2_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CITextBlock3_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CITextBlock3_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CITextBlock3 __x_ABI_CWindows_CUI_CXaml_CControls_CITextBlock3;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CITextBlock3_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CITextBlock4_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CITextBlock4_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CITextBlock4 __x_ABI_CWindows_CUI_CXaml_CControls_CITextBlock4;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CITextBlock4_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CITextBlock5_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CITextBlock5_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CITextBlock5 __x_ABI_CWindows_CUI_CXaml_CControls_CITextBlock5;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CITextBlock5_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CITextBlock6_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CITextBlock6_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CITextBlock6 __x_ABI_CWindows_CUI_CXaml_CControls_CITextBlock6;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CITextBlock6_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CITextBlock7_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CITextBlock7_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CITextBlock7 __x_ABI_CWindows_CUI_CXaml_CControls_CITextBlock7;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CITextBlock7_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CITextBlockStatics_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CITextBlockStatics_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CITextBlockStatics __x_ABI_CWindows_CUI_CXaml_CControls_CITextBlockStatics;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CITextBlockStatics_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CITextBlockStatics2_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CITextBlockStatics2_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CITextBlockStatics2 __x_ABI_CWindows_CUI_CXaml_CControls_CITextBlockStatics2;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CITextBlockStatics2_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CITextBlockStatics3_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CITextBlockStatics3_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CITextBlockStatics3 __x_ABI_CWindows_CUI_CXaml_CControls_CITextBlockStatics3;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CITextBlockStatics3_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CITextBlockStatics5_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CITextBlockStatics5_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CITextBlockStatics5 __x_ABI_CWindows_CUI_CXaml_CControls_CITextBlockStatics5;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CITextBlockStatics5_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CITextBlockStatics6_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CITextBlockStatics6_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CITextBlockStatics6 __x_ABI_CWindows_CUI_CXaml_CControls_CITextBlockStatics6;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CITextBlockStatics6_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CITextBlockStatics7_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CITextBlockStatics7_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CITextBlockStatics7 __x_ABI_CWindows_CUI_CXaml_CControls_CITextBlockStatics7;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CITextBlockStatics7_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CITextBox_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CITextBox_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CITextBox __x_ABI_CWindows_CUI_CXaml_CControls_CITextBox;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CITextBox_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CITextBox2_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CITextBox2_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CITextBox2 __x_ABI_CWindows_CUI_CXaml_CControls_CITextBox2;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CITextBox2_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CITextBox3_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CITextBox3_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CITextBox3 __x_ABI_CWindows_CUI_CXaml_CControls_CITextBox3;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CITextBox3_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CITextBox4_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CITextBox4_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CITextBox4 __x_ABI_CWindows_CUI_CXaml_CControls_CITextBox4;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CITextBox4_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CITextBox5_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CITextBox5_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CITextBox5 __x_ABI_CWindows_CUI_CXaml_CControls_CITextBox5;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CITextBox5_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CITextBox6_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CITextBox6_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CITextBox6 __x_ABI_CWindows_CUI_CXaml_CControls_CITextBox6;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CITextBox6_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CITextBox7_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CITextBox7_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CITextBox7 __x_ABI_CWindows_CUI_CXaml_CControls_CITextBox7;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CITextBox7_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CITextBox8_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CITextBox8_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CITextBox8 __x_ABI_CWindows_CUI_CXaml_CControls_CITextBox8;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CITextBox8_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CITextBoxBeforeTextChangingEventArgs_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CITextBoxBeforeTextChangingEventArgs_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CITextBoxBeforeTextChangingEventArgs __x_ABI_CWindows_CUI_CXaml_CControls_CITextBoxBeforeTextChangingEventArgs;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CITextBoxBeforeTextChangingEventArgs_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CITextBoxFactory_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CITextBoxFactory_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CITextBoxFactory __x_ABI_CWindows_CUI_CXaml_CControls_CITextBoxFactory;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CITextBoxFactory_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CITextBoxSelectionChangingEventArgs_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CITextBoxSelectionChangingEventArgs_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CITextBoxSelectionChangingEventArgs __x_ABI_CWindows_CUI_CXaml_CControls_CITextBoxSelectionChangingEventArgs;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CITextBoxSelectionChangingEventArgs_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CITextBoxStatics_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CITextBoxStatics_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CITextBoxStatics __x_ABI_CWindows_CUI_CXaml_CControls_CITextBoxStatics;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CITextBoxStatics_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CITextBoxStatics2_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CITextBoxStatics2_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CITextBoxStatics2 __x_ABI_CWindows_CUI_CXaml_CControls_CITextBoxStatics2;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CITextBoxStatics2_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CITextBoxStatics3_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CITextBoxStatics3_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CITextBoxStatics3 __x_ABI_CWindows_CUI_CXaml_CControls_CITextBoxStatics3;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CITextBoxStatics3_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CITextBoxStatics5_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CITextBoxStatics5_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CITextBoxStatics5 __x_ABI_CWindows_CUI_CXaml_CControls_CITextBoxStatics5;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CITextBoxStatics5_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CITextBoxStatics6_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CITextBoxStatics6_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CITextBoxStatics6 __x_ABI_CWindows_CUI_CXaml_CControls_CITextBoxStatics6;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CITextBoxStatics6_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CITextBoxStatics7_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CITextBoxStatics7_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CITextBoxStatics7 __x_ABI_CWindows_CUI_CXaml_CControls_CITextBoxStatics7;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CITextBoxStatics7_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CITextBoxStatics8_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CITextBoxStatics8_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CITextBoxStatics8 __x_ABI_CWindows_CUI_CXaml_CControls_CITextBoxStatics8;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CITextBoxStatics8_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CITextBoxTextChangingEventArgs_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CITextBoxTextChangingEventArgs_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CITextBoxTextChangingEventArgs __x_ABI_CWindows_CUI_CXaml_CControls_CITextBoxTextChangingEventArgs;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CITextBoxTextChangingEventArgs_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CITextBoxTextChangingEventArgs2_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CITextBoxTextChangingEventArgs2_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CITextBoxTextChangingEventArgs2 __x_ABI_CWindows_CUI_CXaml_CControls_CITextBoxTextChangingEventArgs2;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CITextBoxTextChangingEventArgs2_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CITextChangedEventArgs_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CITextChangedEventArgs_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CITextChangedEventArgs __x_ABI_CWindows_CUI_CXaml_CControls_CITextChangedEventArgs;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CITextChangedEventArgs_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CITextCommandBarFlyout_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CITextCommandBarFlyout_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CITextCommandBarFlyout __x_ABI_CWindows_CUI_CXaml_CControls_CITextCommandBarFlyout;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CITextCommandBarFlyout_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CITextCommandBarFlyoutFactory_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CITextCommandBarFlyoutFactory_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CITextCommandBarFlyoutFactory __x_ABI_CWindows_CUI_CXaml_CControls_CITextCommandBarFlyoutFactory;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CITextCommandBarFlyoutFactory_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CITextCompositionChangedEventArgs_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CITextCompositionChangedEventArgs_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CITextCompositionChangedEventArgs __x_ABI_CWindows_CUI_CXaml_CControls_CITextCompositionChangedEventArgs;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CITextCompositionChangedEventArgs_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CITextCompositionEndedEventArgs_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CITextCompositionEndedEventArgs_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CITextCompositionEndedEventArgs __x_ABI_CWindows_CUI_CXaml_CControls_CITextCompositionEndedEventArgs;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CITextCompositionEndedEventArgs_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CITextCompositionStartedEventArgs_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CITextCompositionStartedEventArgs_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CITextCompositionStartedEventArgs __x_ABI_CWindows_CUI_CXaml_CControls_CITextCompositionStartedEventArgs;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CITextCompositionStartedEventArgs_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CITextControlCopyingToClipboardEventArgs_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CITextControlCopyingToClipboardEventArgs_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CITextControlCopyingToClipboardEventArgs __x_ABI_CWindows_CUI_CXaml_CControls_CITextControlCopyingToClipboardEventArgs;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CITextControlCopyingToClipboardEventArgs_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CITextControlCuttingToClipboardEventArgs_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CITextControlCuttingToClipboardEventArgs_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CITextControlCuttingToClipboardEventArgs __x_ABI_CWindows_CUI_CXaml_CControls_CITextControlCuttingToClipboardEventArgs;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CITextControlCuttingToClipboardEventArgs_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CITextControlPasteEventArgs_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CITextControlPasteEventArgs_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CITextControlPasteEventArgs __x_ABI_CWindows_CUI_CXaml_CControls_CITextControlPasteEventArgs;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CITextControlPasteEventArgs_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CITimePickedEventArgs_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CITimePickedEventArgs_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CITimePickedEventArgs __x_ABI_CWindows_CUI_CXaml_CControls_CITimePickedEventArgs;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CITimePickedEventArgs_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CITimePicker_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CITimePicker_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CITimePicker __x_ABI_CWindows_CUI_CXaml_CControls_CITimePicker;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CITimePicker_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CITimePicker2_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CITimePicker2_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CITimePicker2 __x_ABI_CWindows_CUI_CXaml_CControls_CITimePicker2;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CITimePicker2_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CITimePicker3_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CITimePicker3_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CITimePicker3 __x_ABI_CWindows_CUI_CXaml_CControls_CITimePicker3;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CITimePicker3_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CITimePickerFactory_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CITimePickerFactory_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CITimePickerFactory __x_ABI_CWindows_CUI_CXaml_CControls_CITimePickerFactory;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CITimePickerFactory_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CITimePickerFlyout_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CITimePickerFlyout_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CITimePickerFlyout __x_ABI_CWindows_CUI_CXaml_CControls_CITimePickerFlyout;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CITimePickerFlyout_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CITimePickerFlyoutPresenter_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CITimePickerFlyoutPresenter_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CITimePickerFlyoutPresenter __x_ABI_CWindows_CUI_CXaml_CControls_CITimePickerFlyoutPresenter;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CITimePickerFlyoutPresenter_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CITimePickerFlyoutPresenter2_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CITimePickerFlyoutPresenter2_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CITimePickerFlyoutPresenter2 __x_ABI_CWindows_CUI_CXaml_CControls_CITimePickerFlyoutPresenter2;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CITimePickerFlyoutPresenter2_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CITimePickerFlyoutPresenterStatics2_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CITimePickerFlyoutPresenterStatics2_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CITimePickerFlyoutPresenterStatics2 __x_ABI_CWindows_CUI_CXaml_CControls_CITimePickerFlyoutPresenterStatics2;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CITimePickerFlyoutPresenterStatics2_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CITimePickerFlyoutStatics_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CITimePickerFlyoutStatics_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CITimePickerFlyoutStatics __x_ABI_CWindows_CUI_CXaml_CControls_CITimePickerFlyoutStatics;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CITimePickerFlyoutStatics_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CITimePickerSelectedValueChangedEventArgs_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CITimePickerSelectedValueChangedEventArgs_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CITimePickerSelectedValueChangedEventArgs __x_ABI_CWindows_CUI_CXaml_CControls_CITimePickerSelectedValueChangedEventArgs;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CITimePickerSelectedValueChangedEventArgs_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CITimePickerStatics_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CITimePickerStatics_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CITimePickerStatics __x_ABI_CWindows_CUI_CXaml_CControls_CITimePickerStatics;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CITimePickerStatics_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CITimePickerStatics2_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CITimePickerStatics2_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CITimePickerStatics2 __x_ABI_CWindows_CUI_CXaml_CControls_CITimePickerStatics2;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CITimePickerStatics2_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CITimePickerStatics3_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CITimePickerStatics3_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CITimePickerStatics3 __x_ABI_CWindows_CUI_CXaml_CControls_CITimePickerStatics3;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CITimePickerStatics3_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CITimePickerValueChangedEventArgs_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CITimePickerValueChangedEventArgs_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CITimePickerValueChangedEventArgs __x_ABI_CWindows_CUI_CXaml_CControls_CITimePickerValueChangedEventArgs;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CITimePickerValueChangedEventArgs_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIToggleMenuFlyoutItem_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIToggleMenuFlyoutItem_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIToggleMenuFlyoutItem __x_ABI_CWindows_CUI_CXaml_CControls_CIToggleMenuFlyoutItem;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CIToggleMenuFlyoutItem_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIToggleMenuFlyoutItemFactory_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIToggleMenuFlyoutItemFactory_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIToggleMenuFlyoutItemFactory __x_ABI_CWindows_CUI_CXaml_CControls_CIToggleMenuFlyoutItemFactory;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CIToggleMenuFlyoutItemFactory_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIToggleMenuFlyoutItemStatics_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIToggleMenuFlyoutItemStatics_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIToggleMenuFlyoutItemStatics __x_ABI_CWindows_CUI_CXaml_CControls_CIToggleMenuFlyoutItemStatics;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CIToggleMenuFlyoutItemStatics_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIToggleSplitButton_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIToggleSplitButton_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIToggleSplitButton __x_ABI_CWindows_CUI_CXaml_CControls_CIToggleSplitButton;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CIToggleSplitButton_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIToggleSplitButtonAutomationPeer_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIToggleSplitButtonAutomationPeer_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIToggleSplitButtonAutomationPeer __x_ABI_CWindows_CUI_CXaml_CControls_CIToggleSplitButtonAutomationPeer;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CIToggleSplitButtonAutomationPeer_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIToggleSplitButtonAutomationPeerFactory_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIToggleSplitButtonAutomationPeerFactory_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIToggleSplitButtonAutomationPeerFactory __x_ABI_CWindows_CUI_CXaml_CControls_CIToggleSplitButtonAutomationPeerFactory;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CIToggleSplitButtonAutomationPeerFactory_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIToggleSplitButtonFactory_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIToggleSplitButtonFactory_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIToggleSplitButtonFactory __x_ABI_CWindows_CUI_CXaml_CControls_CIToggleSplitButtonFactory;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CIToggleSplitButtonFactory_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIToggleSplitButtonIsCheckedChangedEventArgs_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIToggleSplitButtonIsCheckedChangedEventArgs_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIToggleSplitButtonIsCheckedChangedEventArgs __x_ABI_CWindows_CUI_CXaml_CControls_CIToggleSplitButtonIsCheckedChangedEventArgs;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CIToggleSplitButtonIsCheckedChangedEventArgs_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIToggleSwitch_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIToggleSwitch_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIToggleSwitch __x_ABI_CWindows_CUI_CXaml_CControls_CIToggleSwitch;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CIToggleSwitch_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIToggleSwitchOverrides_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIToggleSwitchOverrides_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIToggleSwitchOverrides __x_ABI_CWindows_CUI_CXaml_CControls_CIToggleSwitchOverrides;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CIToggleSwitchOverrides_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIToggleSwitchStatics_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIToggleSwitchStatics_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIToggleSwitchStatics __x_ABI_CWindows_CUI_CXaml_CControls_CIToggleSwitchStatics;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CIToggleSwitchStatics_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIToolTip_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIToolTip_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIToolTip __x_ABI_CWindows_CUI_CXaml_CControls_CIToolTip;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CIToolTip_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIToolTip2_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIToolTip2_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIToolTip2 __x_ABI_CWindows_CUI_CXaml_CControls_CIToolTip2;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CIToolTip2_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIToolTipFactory_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIToolTipFactory_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIToolTipFactory __x_ABI_CWindows_CUI_CXaml_CControls_CIToolTipFactory;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CIToolTipFactory_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIToolTipService_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIToolTipService_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIToolTipService __x_ABI_CWindows_CUI_CXaml_CControls_CIToolTipService;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CIToolTipService_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIToolTipServiceStatics_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIToolTipServiceStatics_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIToolTipServiceStatics __x_ABI_CWindows_CUI_CXaml_CControls_CIToolTipServiceStatics;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CIToolTipServiceStatics_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIToolTipStatics_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIToolTipStatics_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIToolTipStatics __x_ABI_CWindows_CUI_CXaml_CControls_CIToolTipStatics;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CIToolTipStatics_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIToolTipStatics2_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIToolTipStatics2_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIToolTipStatics2 __x_ABI_CWindows_CUI_CXaml_CControls_CIToolTipStatics2;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CIToolTipStatics2_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CITreeView_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CITreeView_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CITreeView __x_ABI_CWindows_CUI_CXaml_CControls_CITreeView;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CITreeView_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CITreeView2_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CITreeView2_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CITreeView2 __x_ABI_CWindows_CUI_CXaml_CControls_CITreeView2;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CITreeView2_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewCollapsedEventArgs_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewCollapsedEventArgs_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewCollapsedEventArgs __x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewCollapsedEventArgs;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewCollapsedEventArgs_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewCollapsedEventArgs2_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewCollapsedEventArgs2_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewCollapsedEventArgs2 __x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewCollapsedEventArgs2;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewCollapsedEventArgs2_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewDragItemsCompletedEventArgs_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewDragItemsCompletedEventArgs_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewDragItemsCompletedEventArgs __x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewDragItemsCompletedEventArgs;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewDragItemsCompletedEventArgs_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewDragItemsStartingEventArgs_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewDragItemsStartingEventArgs_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewDragItemsStartingEventArgs __x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewDragItemsStartingEventArgs;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewDragItemsStartingEventArgs_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewExpandingEventArgs_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewExpandingEventArgs_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewExpandingEventArgs __x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewExpandingEventArgs;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewExpandingEventArgs_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewExpandingEventArgs2_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewExpandingEventArgs2_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewExpandingEventArgs2 __x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewExpandingEventArgs2;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewExpandingEventArgs2_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewFactory_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewFactory_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewFactory __x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewFactory;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewFactory_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewItem_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewItem_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewItem __x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewItem;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewItem_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewItem2_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewItem2_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewItem2 __x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewItem2;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewItem2_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewItemFactory_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewItemFactory_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewItemFactory __x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewItemFactory;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewItemFactory_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewItemInvokedEventArgs_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewItemInvokedEventArgs_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewItemInvokedEventArgs __x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewItemInvokedEventArgs;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewItemInvokedEventArgs_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewItemStatics_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewItemStatics_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewItemStatics __x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewItemStatics;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewItemStatics_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewItemStatics2_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewItemStatics2_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewItemStatics2 __x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewItemStatics2;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewItemStatics2_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewItemTemplateSettings_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewItemTemplateSettings_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewItemTemplateSettings __x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewItemTemplateSettings;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewItemTemplateSettings_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewItemTemplateSettingsFactory_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewItemTemplateSettingsFactory_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewItemTemplateSettingsFactory __x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewItemTemplateSettingsFactory;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewItemTemplateSettingsFactory_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewItemTemplateSettingsStatics_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewItemTemplateSettingsStatics_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewItemTemplateSettingsStatics __x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewItemTemplateSettingsStatics;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewItemTemplateSettingsStatics_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewList_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewList_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewList __x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewList;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewList_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewListFactory_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewListFactory_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewListFactory __x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewListFactory;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewListFactory_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewNode_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewNode_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewNode __x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewNode;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewNode_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewNodeFactory_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewNodeFactory_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewNodeFactory __x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewNodeFactory;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewNodeFactory_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewNodeStatics_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewNodeStatics_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewNodeStatics __x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewNodeStatics;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewNodeStatics_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewStatics_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewStatics_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewStatics __x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewStatics;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewStatics_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewStatics2_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewStatics2_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewStatics2 __x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewStatics2;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewStatics2_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CITwoPaneView_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CITwoPaneView_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CITwoPaneView __x_ABI_CWindows_CUI_CXaml_CControls_CITwoPaneView;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CITwoPaneView_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CITwoPaneViewFactory_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CITwoPaneViewFactory_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CITwoPaneViewFactory __x_ABI_CWindows_CUI_CXaml_CControls_CITwoPaneViewFactory;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CITwoPaneViewFactory_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CITwoPaneViewStatics_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CITwoPaneViewStatics_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CITwoPaneViewStatics __x_ABI_CWindows_CUI_CXaml_CControls_CITwoPaneViewStatics;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CITwoPaneViewStatics_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIUIElementCollection_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIUIElementCollection_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIUIElementCollection __x_ABI_CWindows_CUI_CXaml_CControls_CIUIElementCollection;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CIUIElementCollection_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIUserControl_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIUserControl_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIUserControl __x_ABI_CWindows_CUI_CXaml_CControls_CIUserControl;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CIUserControl_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIUserControlFactory_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIUserControlFactory_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIUserControlFactory __x_ABI_CWindows_CUI_CXaml_CControls_CIUserControlFactory;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CIUserControlFactory_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIUserControlStatics_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIUserControlStatics_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIUserControlStatics __x_ABI_CWindows_CUI_CXaml_CControls_CIUserControlStatics;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CIUserControlStatics_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIVariableSizedWrapGrid_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIVariableSizedWrapGrid_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIVariableSizedWrapGrid __x_ABI_CWindows_CUI_CXaml_CControls_CIVariableSizedWrapGrid;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CIVariableSizedWrapGrid_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIVariableSizedWrapGridStatics_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIVariableSizedWrapGridStatics_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIVariableSizedWrapGridStatics __x_ABI_CWindows_CUI_CXaml_CControls_CIVariableSizedWrapGridStatics;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CIVariableSizedWrapGridStatics_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIViewbox_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIViewbox_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIViewbox __x_ABI_CWindows_CUI_CXaml_CControls_CIViewbox;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CIViewbox_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIViewboxStatics_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIViewboxStatics_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIViewboxStatics __x_ABI_CWindows_CUI_CXaml_CControls_CIViewboxStatics;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CIViewboxStatics_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIVirtualizingPanel_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIVirtualizingPanel_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIVirtualizingPanel __x_ABI_CWindows_CUI_CXaml_CControls_CIVirtualizingPanel;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CIVirtualizingPanel_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIVirtualizingPanelFactory_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIVirtualizingPanelFactory_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIVirtualizingPanelFactory __x_ABI_CWindows_CUI_CXaml_CControls_CIVirtualizingPanelFactory;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CIVirtualizingPanelFactory_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIVirtualizingPanelOverrides_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIVirtualizingPanelOverrides_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIVirtualizingPanelOverrides __x_ABI_CWindows_CUI_CXaml_CControls_CIVirtualizingPanelOverrides;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CIVirtualizingPanelOverrides_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIVirtualizingPanelProtected_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIVirtualizingPanelProtected_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIVirtualizingPanelProtected __x_ABI_CWindows_CUI_CXaml_CControls_CIVirtualizingPanelProtected;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CIVirtualizingPanelProtected_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIVirtualizingStackPanel_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIVirtualizingStackPanel_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIVirtualizingStackPanel __x_ABI_CWindows_CUI_CXaml_CControls_CIVirtualizingStackPanel;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CIVirtualizingStackPanel_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIVirtualizingStackPanelOverrides_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIVirtualizingStackPanelOverrides_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIVirtualizingStackPanelOverrides __x_ABI_CWindows_CUI_CXaml_CControls_CIVirtualizingStackPanelOverrides;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CIVirtualizingStackPanelOverrides_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIVirtualizingStackPanelStatics_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIVirtualizingStackPanelStatics_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIVirtualizingStackPanelStatics __x_ABI_CWindows_CUI_CXaml_CControls_CIVirtualizingStackPanelStatics;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CIVirtualizingStackPanelStatics_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIWebView_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIWebView_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIWebView __x_ABI_CWindows_CUI_CXaml_CControls_CIWebView;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CIWebView_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIWebView2_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIWebView2_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIWebView2 __x_ABI_CWindows_CUI_CXaml_CControls_CIWebView2;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CIWebView2_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIWebView3_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIWebView3_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIWebView3 __x_ABI_CWindows_CUI_CXaml_CControls_CIWebView3;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CIWebView3_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIWebView4_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIWebView4_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIWebView4 __x_ABI_CWindows_CUI_CXaml_CControls_CIWebView4;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CIWebView4_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIWebView5_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIWebView5_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIWebView5 __x_ABI_CWindows_CUI_CXaml_CControls_CIWebView5;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CIWebView5_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIWebView6_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIWebView6_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIWebView6 __x_ABI_CWindows_CUI_CXaml_CControls_CIWebView6;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CIWebView6_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIWebView7_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIWebView7_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIWebView7 __x_ABI_CWindows_CUI_CXaml_CControls_CIWebView7;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CIWebView7_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewBrush_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewBrush_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewBrush __x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewBrush;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewBrush_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewBrushStatics_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewBrushStatics_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewBrushStatics __x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewBrushStatics;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewBrushStatics_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewContentLoadingEventArgs_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewContentLoadingEventArgs_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewContentLoadingEventArgs __x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewContentLoadingEventArgs;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewContentLoadingEventArgs_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewDOMContentLoadedEventArgs_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewDOMContentLoadedEventArgs_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewDOMContentLoadedEventArgs __x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewDOMContentLoadedEventArgs;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewDOMContentLoadedEventArgs_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewDeferredPermissionRequest_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewDeferredPermissionRequest_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewDeferredPermissionRequest __x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewDeferredPermissionRequest;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewDeferredPermissionRequest_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewFactory4_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewFactory4_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewFactory4 __x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewFactory4;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewFactory4_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewLongRunningScriptDetectedEventArgs_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewLongRunningScriptDetectedEventArgs_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewLongRunningScriptDetectedEventArgs __x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewLongRunningScriptDetectedEventArgs;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewLongRunningScriptDetectedEventArgs_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewNavigationCompletedEventArgs_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewNavigationCompletedEventArgs_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewNavigationCompletedEventArgs __x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewNavigationCompletedEventArgs;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewNavigationCompletedEventArgs_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewNavigationFailedEventArgs_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewNavigationFailedEventArgs_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewNavigationFailedEventArgs __x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewNavigationFailedEventArgs;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewNavigationFailedEventArgs_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewNavigationStartingEventArgs_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewNavigationStartingEventArgs_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewNavigationStartingEventArgs __x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewNavigationStartingEventArgs;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewNavigationStartingEventArgs_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewNewWindowRequestedEventArgs_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewNewWindowRequestedEventArgs_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewNewWindowRequestedEventArgs __x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewNewWindowRequestedEventArgs;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewNewWindowRequestedEventArgs_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewPermissionRequest_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewPermissionRequest_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewPermissionRequest __x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewPermissionRequest;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewPermissionRequest_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewPermissionRequestedEventArgs_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewPermissionRequestedEventArgs_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewPermissionRequestedEventArgs __x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewPermissionRequestedEventArgs;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewPermissionRequestedEventArgs_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewSeparateProcessLostEventArgs_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewSeparateProcessLostEventArgs_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewSeparateProcessLostEventArgs __x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewSeparateProcessLostEventArgs;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewSeparateProcessLostEventArgs_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewSettings_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewSettings_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewSettings __x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewSettings;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewSettings_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewStatics_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewStatics_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewStatics __x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewStatics;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewStatics_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewStatics2_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewStatics2_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewStatics2 __x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewStatics2;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewStatics2_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewStatics3_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewStatics3_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewStatics3 __x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewStatics3;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewStatics3_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewStatics4_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewStatics4_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewStatics4 __x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewStatics4;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewStatics4_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewStatics5_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewStatics5_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewStatics5 __x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewStatics5;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewStatics5_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewUnsupportedUriSchemeIdentifiedEventArgs_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewUnsupportedUriSchemeIdentifiedEventArgs_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewUnsupportedUriSchemeIdentifiedEventArgs __x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewUnsupportedUriSchemeIdentifiedEventArgs;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewUnsupportedUriSchemeIdentifiedEventArgs_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewUnviewableContentIdentifiedEventArgs_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewUnviewableContentIdentifiedEventArgs_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewUnviewableContentIdentifiedEventArgs __x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewUnviewableContentIdentifiedEventArgs;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewUnviewableContentIdentifiedEventArgs_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewUnviewableContentIdentifiedEventArgs2_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewUnviewableContentIdentifiedEventArgs2_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewUnviewableContentIdentifiedEventArgs2 __x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewUnviewableContentIdentifiedEventArgs2;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewUnviewableContentIdentifiedEventArgs2_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewWebResourceRequestedEventArgs_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewWebResourceRequestedEventArgs_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewWebResourceRequestedEventArgs __x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewWebResourceRequestedEventArgs;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewWebResourceRequestedEventArgs_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIWrapGrid_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIWrapGrid_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIWrapGrid __x_ABI_CWindows_CUI_CXaml_CControls_CIWrapGrid;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CIWrapGrid_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIWrapGridStatics_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIWrapGridStatics_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIWrapGridStatics __x_ABI_CWindows_CUI_CXaml_CControls_CIWrapGridStatics;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CIWrapGridStatics_FWD_DEFINED__

// Parameterized interface forward declarations (C)

// Collection interface definitions

typedef interface __x_ABI_C__FIAsyncOperationCompletedHandler_1_IInspectable __x_ABI_C__FIAsyncOperationCompletedHandler_1_IInspectable;

#if !defined(____x_ABI_C__FIAsyncOperation_1_IInspectable_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIAsyncOperation_1_IInspectable_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIAsyncOperation_1_IInspectable __x_ABI_C__FIAsyncOperation_1_IInspectable;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIAsyncOperation_1_IInspectable;

    typedef struct __x_ABI_C__FIAsyncOperation_1_IInspectableVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIAsyncOperation_1_IInspectable* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIAsyncOperation_1_IInspectable* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIAsyncOperation_1_IInspectable* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIAsyncOperation_1_IInspectable* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIAsyncOperation_1_IInspectable* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIAsyncOperation_1_IInspectable* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* put_Completed)(__x_ABI_C__FIAsyncOperation_1_IInspectable* This,
        __x_ABI_C__FIAsyncOperationCompletedHandler_1_IInspectable* handler);
    HRESULT (STDMETHODCALLTYPE* get_Completed)(__x_ABI_C__FIAsyncOperation_1_IInspectable* This,
        __x_ABI_C__FIAsyncOperationCompletedHandler_1_IInspectable** result);
    HRESULT (STDMETHODCALLTYPE* GetResults)(__x_ABI_C__FIAsyncOperation_1_IInspectable* This,
        IInspectable** result);

        END_INTERFACE
    } __x_ABI_C__FIAsyncOperation_1_IInspectableVtbl;

    interface __x_ABI_C__FIAsyncOperation_1_IInspectable
    {
        CONST_VTBL struct __x_ABI_C__FIAsyncOperation_1_IInspectableVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIAsyncOperation_1_IInspectable_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIAsyncOperationCompletedHandler_1_IInspectable_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIAsyncOperationCompletedHandler_1_IInspectable_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIAsyncOperationCompletedHandler_1_IInspectable __x_ABI_C__FIAsyncOperationCompletedHandler_1_IInspectable;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIAsyncOperationCompletedHandler_1_IInspectable;

    typedef struct __x_ABI_C__FIAsyncOperationCompletedHandler_1_IInspectableVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIAsyncOperationCompletedHandler_1_IInspectable* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIAsyncOperationCompletedHandler_1_IInspectable* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIAsyncOperationCompletedHandler_1_IInspectable* This);
        HRESULT (STDMETHODCALLTYPE* Invoke)(__x_ABI_C__FIAsyncOperationCompletedHandler_1_IInspectable* This,
        __x_ABI_C__FIAsyncOperation_1_IInspectable* asyncInfo,
        enum __x_ABI_CWindows_CFoundation_CAsyncStatus asyncStatus);

        END_INTERFACE
    } __x_ABI_C__FIAsyncOperationCompletedHandler_1_IInspectableVtbl;

    interface __x_ABI_C__FIAsyncOperationCompletedHandler_1_IInspectable
    {
        CONST_VTBL struct __x_ABI_C__FIAsyncOperationCompletedHandler_1_IInspectableVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIAsyncOperationCompletedHandler_1_IInspectable_INTERFACE_DEFINED__
    
typedef interface __x_ABI_C__FIAsyncOperationCompletedHandler_1_boolean __x_ABI_C__FIAsyncOperationCompletedHandler_1_boolean;

#if !defined(____x_ABI_C__FIAsyncOperation_1_boolean_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIAsyncOperation_1_boolean_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIAsyncOperation_1_boolean __x_ABI_C__FIAsyncOperation_1_boolean;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIAsyncOperation_1_boolean;

    typedef struct __x_ABI_C__FIAsyncOperation_1_booleanVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIAsyncOperation_1_boolean* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIAsyncOperation_1_boolean* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIAsyncOperation_1_boolean* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIAsyncOperation_1_boolean* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIAsyncOperation_1_boolean* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIAsyncOperation_1_boolean* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* put_Completed)(__x_ABI_C__FIAsyncOperation_1_boolean* This,
        __x_ABI_C__FIAsyncOperationCompletedHandler_1_boolean* handler);
    HRESULT (STDMETHODCALLTYPE* get_Completed)(__x_ABI_C__FIAsyncOperation_1_boolean* This,
        __x_ABI_C__FIAsyncOperationCompletedHandler_1_boolean** result);
    HRESULT (STDMETHODCALLTYPE* GetResults)(__x_ABI_C__FIAsyncOperation_1_boolean* This,
        boolean* result);

        END_INTERFACE
    } __x_ABI_C__FIAsyncOperation_1_booleanVtbl;

    interface __x_ABI_C__FIAsyncOperation_1_boolean
    {
        CONST_VTBL struct __x_ABI_C__FIAsyncOperation_1_booleanVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIAsyncOperation_1_boolean_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIAsyncOperationCompletedHandler_1_boolean_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIAsyncOperationCompletedHandler_1_boolean_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIAsyncOperationCompletedHandler_1_boolean __x_ABI_C__FIAsyncOperationCompletedHandler_1_boolean;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIAsyncOperationCompletedHandler_1_boolean;

    typedef struct __x_ABI_C__FIAsyncOperationCompletedHandler_1_booleanVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIAsyncOperationCompletedHandler_1_boolean* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIAsyncOperationCompletedHandler_1_boolean* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIAsyncOperationCompletedHandler_1_boolean* This);
        HRESULT (STDMETHODCALLTYPE* Invoke)(__x_ABI_C__FIAsyncOperationCompletedHandler_1_boolean* This,
        __x_ABI_C__FIAsyncOperation_1_boolean* asyncInfo,
        enum __x_ABI_CWindows_CFoundation_CAsyncStatus asyncStatus);

        END_INTERFACE
    } __x_ABI_C__FIAsyncOperationCompletedHandler_1_booleanVtbl;

    interface __x_ABI_C__FIAsyncOperationCompletedHandler_1_boolean
    {
        CONST_VTBL struct __x_ABI_C__FIAsyncOperationCompletedHandler_1_booleanVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIAsyncOperationCompletedHandler_1_boolean_INTERFACE_DEFINED__
    
typedef interface __x_ABI_C__FIAsyncOperationCompletedHandler_1_HSTRING __x_ABI_C__FIAsyncOperationCompletedHandler_1_HSTRING;

#if !defined(____x_ABI_C__FIAsyncOperation_1_HSTRING_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIAsyncOperation_1_HSTRING_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIAsyncOperation_1_HSTRING __x_ABI_C__FIAsyncOperation_1_HSTRING;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIAsyncOperation_1_HSTRING;

    typedef struct __x_ABI_C__FIAsyncOperation_1_HSTRINGVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIAsyncOperation_1_HSTRING* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIAsyncOperation_1_HSTRING* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIAsyncOperation_1_HSTRING* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIAsyncOperation_1_HSTRING* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIAsyncOperation_1_HSTRING* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIAsyncOperation_1_HSTRING* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* put_Completed)(__x_ABI_C__FIAsyncOperation_1_HSTRING* This,
        __x_ABI_C__FIAsyncOperationCompletedHandler_1_HSTRING* handler);
    HRESULT (STDMETHODCALLTYPE* get_Completed)(__x_ABI_C__FIAsyncOperation_1_HSTRING* This,
        __x_ABI_C__FIAsyncOperationCompletedHandler_1_HSTRING** result);
    HRESULT (STDMETHODCALLTYPE* GetResults)(__x_ABI_C__FIAsyncOperation_1_HSTRING* This,
        HSTRING* result);

        END_INTERFACE
    } __x_ABI_C__FIAsyncOperation_1_HSTRINGVtbl;

    interface __x_ABI_C__FIAsyncOperation_1_HSTRING
    {
        CONST_VTBL struct __x_ABI_C__FIAsyncOperation_1_HSTRINGVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIAsyncOperation_1_HSTRING_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIAsyncOperationCompletedHandler_1_HSTRING_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIAsyncOperationCompletedHandler_1_HSTRING_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIAsyncOperationCompletedHandler_1_HSTRING __x_ABI_C__FIAsyncOperationCompletedHandler_1_HSTRING;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIAsyncOperationCompletedHandler_1_HSTRING;

    typedef struct __x_ABI_C__FIAsyncOperationCompletedHandler_1_HSTRINGVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIAsyncOperationCompletedHandler_1_HSTRING* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIAsyncOperationCompletedHandler_1_HSTRING* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIAsyncOperationCompletedHandler_1_HSTRING* This);
        HRESULT (STDMETHODCALLTYPE* Invoke)(__x_ABI_C__FIAsyncOperationCompletedHandler_1_HSTRING* This,
        __x_ABI_C__FIAsyncOperation_1_HSTRING* asyncInfo,
        enum __x_ABI_CWindows_CFoundation_CAsyncStatus asyncStatus);

        END_INTERFACE
    } __x_ABI_C__FIAsyncOperationCompletedHandler_1_HSTRINGVtbl;

    interface __x_ABI_C__FIAsyncOperationCompletedHandler_1_HSTRING
    {
        CONST_VTBL struct __x_ABI_C__FIAsyncOperationCompletedHandler_1_HSTRINGVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIAsyncOperationCompletedHandler_1_HSTRING_INTERFACE_DEFINED__
    
#ifndef ____x_ABI_CWindows_CApplicationModel_CDataTransfer_CIDataPackage_FWD_DEFINED__
#define ____x_ABI_CWindows_CApplicationModel_CDataTransfer_CIDataPackage_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CApplicationModel_CDataTransfer_CIDataPackage __x_ABI_CWindows_CApplicationModel_CDataTransfer_CIDataPackage;

#endif // ____x_ABI_CWindows_CApplicationModel_CDataTransfer_CIDataPackage_FWD_DEFINED__

typedef interface __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CDataTransfer__CDataPackage __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CDataTransfer__CDataPackage;

#if !defined(____x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CDataTransfer__CDataPackage_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CDataTransfer__CDataPackage_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CDataTransfer__CDataPackage __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CDataTransfer__CDataPackage;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CDataTransfer__CDataPackage;

    typedef struct __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CDataTransfer__CDataPackageVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CDataTransfer__CDataPackage* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CDataTransfer__CDataPackage* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CDataTransfer__CDataPackage* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CDataTransfer__CDataPackage* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CDataTransfer__CDataPackage* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CDataTransfer__CDataPackage* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* put_Completed)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CDataTransfer__CDataPackage* This,
        __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CDataTransfer__CDataPackage* handler);
    HRESULT (STDMETHODCALLTYPE* get_Completed)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CDataTransfer__CDataPackage* This,
        __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CDataTransfer__CDataPackage** result);
    HRESULT (STDMETHODCALLTYPE* GetResults)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CDataTransfer__CDataPackage* This,
        __x_ABI_CWindows_CApplicationModel_CDataTransfer_CIDataPackage** result);

        END_INTERFACE
    } __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CDataTransfer__CDataPackageVtbl;

    interface __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CDataTransfer__CDataPackage
    {
        CONST_VTBL struct __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CDataTransfer__CDataPackageVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CDataTransfer__CDataPackage_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CDataTransfer__CDataPackage_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CDataTransfer__CDataPackage_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CDataTransfer__CDataPackage __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CDataTransfer__CDataPackage;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CDataTransfer__CDataPackage;

    typedef struct __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CDataTransfer__CDataPackageVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CDataTransfer__CDataPackage* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CDataTransfer__CDataPackage* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CDataTransfer__CDataPackage* This);
        HRESULT (STDMETHODCALLTYPE* Invoke)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CDataTransfer__CDataPackage* This,
        __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CDataTransfer__CDataPackage* asyncInfo,
        enum __x_ABI_CWindows_CFoundation_CAsyncStatus asyncStatus);

        END_INTERFACE
    } __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CDataTransfer__CDataPackageVtbl;

    interface __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CDataTransfer__CDataPackage
    {
        CONST_VTBL struct __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CDataTransfer__CDataPackageVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CDataTransfer__CDataPackage_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIIterator_1_IInspectable_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIIterator_1_IInspectable_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIIterator_1_IInspectable __x_ABI_C__FIIterator_1_IInspectable;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIIterator_1_IInspectable;

    typedef struct __x_ABI_C__FIIterator_1_IInspectableVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIIterator_1_IInspectable* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIIterator_1_IInspectable* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIIterator_1_IInspectable* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIIterator_1_IInspectable* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIIterator_1_IInspectable* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIIterator_1_IInspectable* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Current)(__x_ABI_C__FIIterator_1_IInspectable* This,
        IInspectable** result);
    HRESULT (STDMETHODCALLTYPE* get_HasCurrent)(__x_ABI_C__FIIterator_1_IInspectable* This,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* MoveNext)(__x_ABI_C__FIIterator_1_IInspectable* This,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__x_ABI_C__FIIterator_1_IInspectable* This,
        UINT32 itemsLength,
        IInspectable** items,
        UINT32* result);

        END_INTERFACE
    } __x_ABI_C__FIIterator_1_IInspectableVtbl;

    interface __x_ABI_C__FIIterator_1_IInspectable
    {
        CONST_VTBL struct __x_ABI_C__FIIterator_1_IInspectableVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIIterator_1_IInspectable_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIIterable_1_IInspectable_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIIterable_1_IInspectable_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIIterable_1_IInspectable __x_ABI_C__FIIterable_1_IInspectable;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIIterable_1_IInspectable;

    typedef struct __x_ABI_C__FIIterable_1_IInspectableVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIIterable_1_IInspectable* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIIterable_1_IInspectable* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIIterable_1_IInspectable* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIIterable_1_IInspectable* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIIterable_1_IInspectable* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIIterable_1_IInspectable* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* First)(__x_ABI_C__FIIterable_1_IInspectable* This,
        __x_ABI_C__FIIterator_1_IInspectable** result);

        END_INTERFACE
    } __x_ABI_C__FIIterable_1_IInspectableVtbl;

    interface __x_ABI_C__FIIterable_1_IInspectable
    {
        CONST_VTBL struct __x_ABI_C__FIIterable_1_IInspectableVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIIterable_1_IInspectable_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIVectorView_1_IInspectable_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIVectorView_1_IInspectable_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIVectorView_1_IInspectable __x_ABI_C__FIVectorView_1_IInspectable;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIVectorView_1_IInspectable;

    typedef struct __x_ABI_C__FIVectorView_1_IInspectableVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIVectorView_1_IInspectable* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIVectorView_1_IInspectable* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIVectorView_1_IInspectable* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIVectorView_1_IInspectable* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIVectorView_1_IInspectable* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIVectorView_1_IInspectable* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* GetAt)(__x_ABI_C__FIVectorView_1_IInspectable* This,
        UINT32 index,
        IInspectable** result);
    HRESULT (STDMETHODCALLTYPE* get_Size)(__x_ABI_C__FIVectorView_1_IInspectable* This,
        UINT32* result);
    HRESULT (STDMETHODCALLTYPE* IndexOf)(__x_ABI_C__FIVectorView_1_IInspectable* This,
        IInspectable* value,
        UINT32* index,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__x_ABI_C__FIVectorView_1_IInspectable* This,
        UINT32 startIndex,
        UINT32 itemsLength,
        IInspectable** items,
        UINT32* result);

        END_INTERFACE
    } __x_ABI_C__FIVectorView_1_IInspectableVtbl;

    interface __x_ABI_C__FIVectorView_1_IInspectable
    {
        CONST_VTBL struct __x_ABI_C__FIVectorView_1_IInspectableVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIVectorView_1_IInspectable_INTERFACE_DEFINED__
    
typedef interface __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1_IInspectable __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1_IInspectable;

#if !defined(____x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1_IInspectable_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1_IInspectable_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1_IInspectable __x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1_IInspectable;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1_IInspectable;

    typedef struct __x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1_IInspectableVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1_IInspectable* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1_IInspectable* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1_IInspectable* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1_IInspectable* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1_IInspectable* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1_IInspectable* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* put_Completed)(__x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1_IInspectable* This,
        __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1_IInspectable* handler);
    HRESULT (STDMETHODCALLTYPE* get_Completed)(__x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1_IInspectable* This,
        __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1_IInspectable** result);
    HRESULT (STDMETHODCALLTYPE* GetResults)(__x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1_IInspectable* This,
        __x_ABI_C__FIVectorView_1_IInspectable** result);

        END_INTERFACE
    } __x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1_IInspectableVtbl;

    interface __x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1_IInspectable
    {
        CONST_VTBL struct __x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1_IInspectableVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1_IInspectable_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1_IInspectable_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1_IInspectable_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1_IInspectable __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1_IInspectable;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1_IInspectable;

    typedef struct __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1_IInspectableVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1_IInspectable* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1_IInspectable* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1_IInspectable* This);
        HRESULT (STDMETHODCALLTYPE* Invoke)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1_IInspectable* This,
        __x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1_IInspectable* asyncInfo,
        enum __x_ABI_CWindows_CFoundation_CAsyncStatus asyncStatus);

        END_INTERFACE
    } __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1_IInspectableVtbl;

    interface __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1_IInspectable
    {
        CONST_VTBL struct __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1_IInspectableVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1_IInspectable_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIIterator_1_HSTRING_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIIterator_1_HSTRING_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIIterator_1_HSTRING __x_ABI_C__FIIterator_1_HSTRING;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIIterator_1_HSTRING;

    typedef struct __x_ABI_C__FIIterator_1_HSTRINGVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIIterator_1_HSTRING* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIIterator_1_HSTRING* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIIterator_1_HSTRING* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIIterator_1_HSTRING* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIIterator_1_HSTRING* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIIterator_1_HSTRING* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Current)(__x_ABI_C__FIIterator_1_HSTRING* This,
        HSTRING* result);
    HRESULT (STDMETHODCALLTYPE* get_HasCurrent)(__x_ABI_C__FIIterator_1_HSTRING* This,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* MoveNext)(__x_ABI_C__FIIterator_1_HSTRING* This,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__x_ABI_C__FIIterator_1_HSTRING* This,
        UINT32 itemsLength,
        HSTRING* items,
        UINT32* result);

        END_INTERFACE
    } __x_ABI_C__FIIterator_1_HSTRINGVtbl;

    interface __x_ABI_C__FIIterator_1_HSTRING
    {
        CONST_VTBL struct __x_ABI_C__FIIterator_1_HSTRINGVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIIterator_1_HSTRING_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIIterable_1_HSTRING_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIIterable_1_HSTRING_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIIterable_1_HSTRING __x_ABI_C__FIIterable_1_HSTRING;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIIterable_1_HSTRING;

    typedef struct __x_ABI_C__FIIterable_1_HSTRINGVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIIterable_1_HSTRING* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIIterable_1_HSTRING* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIIterable_1_HSTRING* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIIterable_1_HSTRING* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIIterable_1_HSTRING* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIIterable_1_HSTRING* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* First)(__x_ABI_C__FIIterable_1_HSTRING* This,
        __x_ABI_C__FIIterator_1_HSTRING** result);

        END_INTERFACE
    } __x_ABI_C__FIIterable_1_HSTRINGVtbl;

    interface __x_ABI_C__FIIterable_1_HSTRING
    {
        CONST_VTBL struct __x_ABI_C__FIIterable_1_HSTRINGVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIIterable_1_HSTRING_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIVectorView_1_HSTRING_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIVectorView_1_HSTRING_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIVectorView_1_HSTRING __x_ABI_C__FIVectorView_1_HSTRING;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIVectorView_1_HSTRING;

    typedef struct __x_ABI_C__FIVectorView_1_HSTRINGVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIVectorView_1_HSTRING* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIVectorView_1_HSTRING* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIVectorView_1_HSTRING* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIVectorView_1_HSTRING* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIVectorView_1_HSTRING* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIVectorView_1_HSTRING* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* GetAt)(__x_ABI_C__FIVectorView_1_HSTRING* This,
        UINT32 index,
        HSTRING* result);
    HRESULT (STDMETHODCALLTYPE* get_Size)(__x_ABI_C__FIVectorView_1_HSTRING* This,
        UINT32* result);
    HRESULT (STDMETHODCALLTYPE* IndexOf)(__x_ABI_C__FIVectorView_1_HSTRING* This,
        HSTRING value,
        UINT32* index,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__x_ABI_C__FIVectorView_1_HSTRING* This,
        UINT32 startIndex,
        UINT32 itemsLength,
        HSTRING* items,
        UINT32* result);

        END_INTERFACE
    } __x_ABI_C__FIVectorView_1_HSTRINGVtbl;

    interface __x_ABI_C__FIVectorView_1_HSTRING
    {
        CONST_VTBL struct __x_ABI_C__FIVectorView_1_HSTRINGVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIVectorView_1_HSTRING_INTERFACE_DEFINED__
    
typedef interface __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1_HSTRING __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1_HSTRING;

#if !defined(____x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1_HSTRING_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1_HSTRING_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1_HSTRING __x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1_HSTRING;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1_HSTRING;

    typedef struct __x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1_HSTRINGVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1_HSTRING* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1_HSTRING* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1_HSTRING* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1_HSTRING* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1_HSTRING* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1_HSTRING* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* put_Completed)(__x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1_HSTRING* This,
        __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1_HSTRING* handler);
    HRESULT (STDMETHODCALLTYPE* get_Completed)(__x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1_HSTRING* This,
        __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1_HSTRING** result);
    HRESULT (STDMETHODCALLTYPE* GetResults)(__x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1_HSTRING* This,
        __x_ABI_C__FIVectorView_1_HSTRING** result);

        END_INTERFACE
    } __x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1_HSTRINGVtbl;

    interface __x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1_HSTRING
    {
        CONST_VTBL struct __x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1_HSTRINGVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1_HSTRING_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1_HSTRING_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1_HSTRING_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1_HSTRING __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1_HSTRING;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1_HSTRING;

    typedef struct __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1_HSTRINGVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1_HSTRING* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1_HSTRING* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1_HSTRING* This);
        HRESULT (STDMETHODCALLTYPE* Invoke)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1_HSTRING* This,
        __x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1_HSTRING* asyncInfo,
        enum __x_ABI_CWindows_CFoundation_CAsyncStatus asyncStatus);

        END_INTERFACE
    } __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1_HSTRINGVtbl;

    interface __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1_HSTRING
    {
        CONST_VTBL struct __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1_HSTRINGVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1_HSTRING_INTERFACE_DEFINED__
    
typedef struct __x_ABI_CWindows_CFoundation_CDateTime __x_ABI_CWindows_CFoundation_CDateTime;

#if !defined(____x_ABI_C__FIReference_1___x_ABI_CWindows__CFoundation__CDateTime_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIReference_1___x_ABI_CWindows__CFoundation__CDateTime_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIReference_1___x_ABI_CWindows__CFoundation__CDateTime __x_ABI_C__FIReference_1___x_ABI_CWindows__CFoundation__CDateTime;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIReference_1___x_ABI_CWindows__CFoundation__CDateTime;

    typedef struct __x_ABI_C__FIReference_1___x_ABI_CWindows__CFoundation__CDateTimeVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIReference_1___x_ABI_CWindows__CFoundation__CDateTime* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIReference_1___x_ABI_CWindows__CFoundation__CDateTime* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIReference_1___x_ABI_CWindows__CFoundation__CDateTime* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIReference_1___x_ABI_CWindows__CFoundation__CDateTime* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIReference_1___x_ABI_CWindows__CFoundation__CDateTime* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIReference_1___x_ABI_CWindows__CFoundation__CDateTime* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Value)(__x_ABI_C__FIReference_1___x_ABI_CWindows__CFoundation__CDateTime* This,
        struct __x_ABI_CWindows_CFoundation_CDateTime* result);

        END_INTERFACE
    } __x_ABI_C__FIReference_1___x_ABI_CWindows__CFoundation__CDateTimeVtbl;

    interface __x_ABI_C__FIReference_1___x_ABI_CWindows__CFoundation__CDateTime
    {
        CONST_VTBL struct __x_ABI_C__FIReference_1___x_ABI_CWindows__CFoundation__CDateTimeVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIReference_1___x_ABI_CWindows__CFoundation__CDateTime_INTERFACE_DEFINED__
    
typedef interface __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIReference_1___x_ABI_CWindows__CFoundation__CDateTime __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIReference_1___x_ABI_CWindows__CFoundation__CDateTime;

#if !defined(____x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIReference_1___x_ABI_CWindows__CFoundation__CDateTime_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIReference_1___x_ABI_CWindows__CFoundation__CDateTime_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIReference_1___x_ABI_CWindows__CFoundation__CDateTime __x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIReference_1___x_ABI_CWindows__CFoundation__CDateTime;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIReference_1___x_ABI_CWindows__CFoundation__CDateTime;

    typedef struct __x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIReference_1___x_ABI_CWindows__CFoundation__CDateTimeVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIReference_1___x_ABI_CWindows__CFoundation__CDateTime* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIReference_1___x_ABI_CWindows__CFoundation__CDateTime* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIReference_1___x_ABI_CWindows__CFoundation__CDateTime* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIReference_1___x_ABI_CWindows__CFoundation__CDateTime* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIReference_1___x_ABI_CWindows__CFoundation__CDateTime* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIReference_1___x_ABI_CWindows__CFoundation__CDateTime* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* put_Completed)(__x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIReference_1___x_ABI_CWindows__CFoundation__CDateTime* This,
        __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIReference_1___x_ABI_CWindows__CFoundation__CDateTime* handler);
    HRESULT (STDMETHODCALLTYPE* get_Completed)(__x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIReference_1___x_ABI_CWindows__CFoundation__CDateTime* This,
        __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIReference_1___x_ABI_CWindows__CFoundation__CDateTime** result);
    HRESULT (STDMETHODCALLTYPE* GetResults)(__x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIReference_1___x_ABI_CWindows__CFoundation__CDateTime* This,
        __x_ABI_C__FIReference_1___x_ABI_CWindows__CFoundation__CDateTime** result);

        END_INTERFACE
    } __x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIReference_1___x_ABI_CWindows__CFoundation__CDateTimeVtbl;

    interface __x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIReference_1___x_ABI_CWindows__CFoundation__CDateTime
    {
        CONST_VTBL struct __x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIReference_1___x_ABI_CWindows__CFoundation__CDateTimeVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIReference_1___x_ABI_CWindows__CFoundation__CDateTime_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIReference_1___x_ABI_CWindows__CFoundation__CDateTime_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIReference_1___x_ABI_CWindows__CFoundation__CDateTime_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIReference_1___x_ABI_CWindows__CFoundation__CDateTime __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIReference_1___x_ABI_CWindows__CFoundation__CDateTime;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIReference_1___x_ABI_CWindows__CFoundation__CDateTime;

    typedef struct __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIReference_1___x_ABI_CWindows__CFoundation__CDateTimeVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIReference_1___x_ABI_CWindows__CFoundation__CDateTime* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIReference_1___x_ABI_CWindows__CFoundation__CDateTime* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIReference_1___x_ABI_CWindows__CFoundation__CDateTime* This);
        HRESULT (STDMETHODCALLTYPE* Invoke)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIReference_1___x_ABI_CWindows__CFoundation__CDateTime* This,
        __x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIReference_1___x_ABI_CWindows__CFoundation__CDateTime* asyncInfo,
        enum __x_ABI_CWindows_CFoundation_CAsyncStatus asyncStatus);

        END_INTERFACE
    } __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIReference_1___x_ABI_CWindows__CFoundation__CDateTimeVtbl;

    interface __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIReference_1___x_ABI_CWindows__CFoundation__CDateTime
    {
        CONST_VTBL struct __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIReference_1___x_ABI_CWindows__CFoundation__CDateTimeVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIReference_1___x_ABI_CWindows__CFoundation__CDateTime_INTERFACE_DEFINED__
    
typedef struct __x_ABI_CWindows_CFoundation_CTimeSpan __x_ABI_CWindows_CFoundation_CTimeSpan;

#if !defined(____x_ABI_C__FIReference_1___x_ABI_CWindows__CFoundation__CTimeSpan_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIReference_1___x_ABI_CWindows__CFoundation__CTimeSpan_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIReference_1___x_ABI_CWindows__CFoundation__CTimeSpan __x_ABI_C__FIReference_1___x_ABI_CWindows__CFoundation__CTimeSpan;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIReference_1___x_ABI_CWindows__CFoundation__CTimeSpan;

    typedef struct __x_ABI_C__FIReference_1___x_ABI_CWindows__CFoundation__CTimeSpanVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIReference_1___x_ABI_CWindows__CFoundation__CTimeSpan* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIReference_1___x_ABI_CWindows__CFoundation__CTimeSpan* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIReference_1___x_ABI_CWindows__CFoundation__CTimeSpan* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIReference_1___x_ABI_CWindows__CFoundation__CTimeSpan* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIReference_1___x_ABI_CWindows__CFoundation__CTimeSpan* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIReference_1___x_ABI_CWindows__CFoundation__CTimeSpan* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Value)(__x_ABI_C__FIReference_1___x_ABI_CWindows__CFoundation__CTimeSpan* This,
        struct __x_ABI_CWindows_CFoundation_CTimeSpan* result);

        END_INTERFACE
    } __x_ABI_C__FIReference_1___x_ABI_CWindows__CFoundation__CTimeSpanVtbl;

    interface __x_ABI_C__FIReference_1___x_ABI_CWindows__CFoundation__CTimeSpan
    {
        CONST_VTBL struct __x_ABI_C__FIReference_1___x_ABI_CWindows__CFoundation__CTimeSpanVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIReference_1___x_ABI_CWindows__CFoundation__CTimeSpan_INTERFACE_DEFINED__
    
typedef interface __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIReference_1___x_ABI_CWindows__CFoundation__CTimeSpan __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIReference_1___x_ABI_CWindows__CFoundation__CTimeSpan;

#if !defined(____x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIReference_1___x_ABI_CWindows__CFoundation__CTimeSpan_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIReference_1___x_ABI_CWindows__CFoundation__CTimeSpan_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIReference_1___x_ABI_CWindows__CFoundation__CTimeSpan __x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIReference_1___x_ABI_CWindows__CFoundation__CTimeSpan;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIReference_1___x_ABI_CWindows__CFoundation__CTimeSpan;

    typedef struct __x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIReference_1___x_ABI_CWindows__CFoundation__CTimeSpanVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIReference_1___x_ABI_CWindows__CFoundation__CTimeSpan* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIReference_1___x_ABI_CWindows__CFoundation__CTimeSpan* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIReference_1___x_ABI_CWindows__CFoundation__CTimeSpan* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIReference_1___x_ABI_CWindows__CFoundation__CTimeSpan* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIReference_1___x_ABI_CWindows__CFoundation__CTimeSpan* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIReference_1___x_ABI_CWindows__CFoundation__CTimeSpan* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* put_Completed)(__x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIReference_1___x_ABI_CWindows__CFoundation__CTimeSpan* This,
        __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIReference_1___x_ABI_CWindows__CFoundation__CTimeSpan* handler);
    HRESULT (STDMETHODCALLTYPE* get_Completed)(__x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIReference_1___x_ABI_CWindows__CFoundation__CTimeSpan* This,
        __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIReference_1___x_ABI_CWindows__CFoundation__CTimeSpan** result);
    HRESULT (STDMETHODCALLTYPE* GetResults)(__x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIReference_1___x_ABI_CWindows__CFoundation__CTimeSpan* This,
        __x_ABI_C__FIReference_1___x_ABI_CWindows__CFoundation__CTimeSpan** result);

        END_INTERFACE
    } __x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIReference_1___x_ABI_CWindows__CFoundation__CTimeSpanVtbl;

    interface __x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIReference_1___x_ABI_CWindows__CFoundation__CTimeSpan
    {
        CONST_VTBL struct __x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIReference_1___x_ABI_CWindows__CFoundation__CTimeSpanVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIReference_1___x_ABI_CWindows__CFoundation__CTimeSpan_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIReference_1___x_ABI_CWindows__CFoundation__CTimeSpan_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIReference_1___x_ABI_CWindows__CFoundation__CTimeSpan_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIReference_1___x_ABI_CWindows__CFoundation__CTimeSpan __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIReference_1___x_ABI_CWindows__CFoundation__CTimeSpan;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIReference_1___x_ABI_CWindows__CFoundation__CTimeSpan;

    typedef struct __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIReference_1___x_ABI_CWindows__CFoundation__CTimeSpanVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIReference_1___x_ABI_CWindows__CFoundation__CTimeSpan* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIReference_1___x_ABI_CWindows__CFoundation__CTimeSpan* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIReference_1___x_ABI_CWindows__CFoundation__CTimeSpan* This);
        HRESULT (STDMETHODCALLTYPE* Invoke)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIReference_1___x_ABI_CWindows__CFoundation__CTimeSpan* This,
        __x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIReference_1___x_ABI_CWindows__CFoundation__CTimeSpan* asyncInfo,
        enum __x_ABI_CWindows_CFoundation_CAsyncStatus asyncStatus);

        END_INTERFACE
    } __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIReference_1___x_ABI_CWindows__CFoundation__CTimeSpanVtbl;

    interface __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIReference_1___x_ABI_CWindows__CFoundation__CTimeSpan
    {
        CONST_VTBL struct __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIReference_1___x_ABI_CWindows__CFoundation__CTimeSpanVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIReference_1___x_ABI_CWindows__CFoundation__CTimeSpan_INTERFACE_DEFINED__
    
typedef enum __x_ABI_CWindows_CUI_CXaml_CControls_CContentDialogResult __x_ABI_CWindows_CUI_CXaml_CControls_CContentDialogResult;

typedef interface __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CUI__CXaml__CControls__CContentDialogResult __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CUI__CXaml__CControls__CContentDialogResult;

#if !defined(____x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CUI__CXaml__CControls__CContentDialogResult_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CUI__CXaml__CControls__CContentDialogResult_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CUI__CXaml__CControls__CContentDialogResult __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CUI__CXaml__CControls__CContentDialogResult;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CUI__CXaml__CControls__CContentDialogResult;

    typedef struct __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CUI__CXaml__CControls__CContentDialogResultVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CUI__CXaml__CControls__CContentDialogResult* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CUI__CXaml__CControls__CContentDialogResult* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CUI__CXaml__CControls__CContentDialogResult* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CUI__CXaml__CControls__CContentDialogResult* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CUI__CXaml__CControls__CContentDialogResult* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CUI__CXaml__CControls__CContentDialogResult* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* put_Completed)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CUI__CXaml__CControls__CContentDialogResult* This,
        __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CUI__CXaml__CControls__CContentDialogResult* handler);
    HRESULT (STDMETHODCALLTYPE* get_Completed)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CUI__CXaml__CControls__CContentDialogResult* This,
        __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CUI__CXaml__CControls__CContentDialogResult** result);
    HRESULT (STDMETHODCALLTYPE* GetResults)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CUI__CXaml__CControls__CContentDialogResult* This,
        enum __x_ABI_CWindows_CUI_CXaml_CControls_CContentDialogResult* result);

        END_INTERFACE
    } __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CUI__CXaml__CControls__CContentDialogResultVtbl;

    interface __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CUI__CXaml__CControls__CContentDialogResult
    {
        CONST_VTBL struct __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CUI__CXaml__CControls__CContentDialogResultVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CUI__CXaml__CControls__CContentDialogResult_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CUI__CXaml__CControls__CContentDialogResult_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CUI__CXaml__CControls__CContentDialogResult_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CUI__CXaml__CControls__CContentDialogResult __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CUI__CXaml__CControls__CContentDialogResult;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CUI__CXaml__CControls__CContentDialogResult;

    typedef struct __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CUI__CXaml__CControls__CContentDialogResultVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CUI__CXaml__CControls__CContentDialogResult* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CUI__CXaml__CControls__CContentDialogResult* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CUI__CXaml__CControls__CContentDialogResult* This);
        HRESULT (STDMETHODCALLTYPE* Invoke)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CUI__CXaml__CControls__CContentDialogResult* This,
        __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CUI__CXaml__CControls__CContentDialogResult* asyncInfo,
        enum __x_ABI_CWindows_CFoundation_CAsyncStatus asyncStatus);

        END_INTERFACE
    } __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CUI__CXaml__CControls__CContentDialogResultVtbl;

    interface __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CUI__CXaml__CControls__CContentDialogResult
    {
        CONST_VTBL struct __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CUI__CXaml__CControls__CContentDialogResultVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CUI__CXaml__CControls__CContentDialogResult_INTERFACE_DEFINED__
    
typedef struct __x_ABI_CWindows_CUI_CXaml_CData_CLoadMoreItemsResult __x_ABI_CWindows_CUI_CXaml_CData_CLoadMoreItemsResult;

typedef interface __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CUI__CXaml__CData__CLoadMoreItemsResult __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CUI__CXaml__CData__CLoadMoreItemsResult;

#if !defined(____x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CUI__CXaml__CData__CLoadMoreItemsResult_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CUI__CXaml__CData__CLoadMoreItemsResult_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CUI__CXaml__CData__CLoadMoreItemsResult __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CUI__CXaml__CData__CLoadMoreItemsResult;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CUI__CXaml__CData__CLoadMoreItemsResult;

    typedef struct __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CUI__CXaml__CData__CLoadMoreItemsResultVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CUI__CXaml__CData__CLoadMoreItemsResult* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CUI__CXaml__CData__CLoadMoreItemsResult* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CUI__CXaml__CData__CLoadMoreItemsResult* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CUI__CXaml__CData__CLoadMoreItemsResult* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CUI__CXaml__CData__CLoadMoreItemsResult* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CUI__CXaml__CData__CLoadMoreItemsResult* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* put_Completed)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CUI__CXaml__CData__CLoadMoreItemsResult* This,
        __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CUI__CXaml__CData__CLoadMoreItemsResult* handler);
    HRESULT (STDMETHODCALLTYPE* get_Completed)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CUI__CXaml__CData__CLoadMoreItemsResult* This,
        __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CUI__CXaml__CData__CLoadMoreItemsResult** result);
    HRESULT (STDMETHODCALLTYPE* GetResults)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CUI__CXaml__CData__CLoadMoreItemsResult* This,
        struct __x_ABI_CWindows_CUI_CXaml_CData_CLoadMoreItemsResult* result);

        END_INTERFACE
    } __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CUI__CXaml__CData__CLoadMoreItemsResultVtbl;

    interface __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CUI__CXaml__CData__CLoadMoreItemsResult
    {
        CONST_VTBL struct __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CUI__CXaml__CData__CLoadMoreItemsResultVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CUI__CXaml__CData__CLoadMoreItemsResult_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CUI__CXaml__CData__CLoadMoreItemsResult_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CUI__CXaml__CData__CLoadMoreItemsResult_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CUI__CXaml__CData__CLoadMoreItemsResult __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CUI__CXaml__CData__CLoadMoreItemsResult;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CUI__CXaml__CData__CLoadMoreItemsResult;

    typedef struct __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CUI__CXaml__CData__CLoadMoreItemsResultVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CUI__CXaml__CData__CLoadMoreItemsResult* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CUI__CXaml__CData__CLoadMoreItemsResult* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CUI__CXaml__CData__CLoadMoreItemsResult* This);
        HRESULT (STDMETHODCALLTYPE* Invoke)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CUI__CXaml__CData__CLoadMoreItemsResult* This,
        __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CUI__CXaml__CData__CLoadMoreItemsResult* asyncInfo,
        enum __x_ABI_CWindows_CFoundation_CAsyncStatus asyncStatus);

        END_INTERFACE
    } __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CUI__CXaml__CData__CLoadMoreItemsResultVtbl;

    interface __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CUI__CXaml__CData__CLoadMoreItemsResult
    {
        CONST_VTBL struct __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CUI__CXaml__CData__CLoadMoreItemsResultVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CUI__CXaml__CData__CLoadMoreItemsResult_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIIterator_1_float_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIIterator_1_float_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIIterator_1_float __x_ABI_C__FIIterator_1_float;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIIterator_1_float;

    typedef struct __x_ABI_C__FIIterator_1_floatVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIIterator_1_float* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIIterator_1_float* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIIterator_1_float* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIIterator_1_float* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIIterator_1_float* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIIterator_1_float* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Current)(__x_ABI_C__FIIterator_1_float* This,
        FLOAT* result);
    HRESULT (STDMETHODCALLTYPE* get_HasCurrent)(__x_ABI_C__FIIterator_1_float* This,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* MoveNext)(__x_ABI_C__FIIterator_1_float* This,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__x_ABI_C__FIIterator_1_float* This,
        UINT32 itemsLength,
        FLOAT* items,
        UINT32* result);

        END_INTERFACE
    } __x_ABI_C__FIIterator_1_floatVtbl;

    interface __x_ABI_C__FIIterator_1_float
    {
        CONST_VTBL struct __x_ABI_C__FIIterator_1_floatVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIIterator_1_float_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIIterable_1_float_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIIterable_1_float_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIIterable_1_float __x_ABI_C__FIIterable_1_float;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIIterable_1_float;

    typedef struct __x_ABI_C__FIIterable_1_floatVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIIterable_1_float* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIIterable_1_float* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIIterable_1_float* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIIterable_1_float* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIIterable_1_float* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIIterable_1_float* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* First)(__x_ABI_C__FIIterable_1_float* This,
        __x_ABI_C__FIIterator_1_float** result);

        END_INTERFACE
    } __x_ABI_C__FIIterable_1_floatVtbl;

    interface __x_ABI_C__FIIterable_1_float
    {
        CONST_VTBL struct __x_ABI_C__FIIterable_1_floatVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIIterable_1_float_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIIterator_1___x_ABI_CWindows__CFoundation__CDateTime_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIIterator_1___x_ABI_CWindows__CFoundation__CDateTime_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIIterator_1___x_ABI_CWindows__CFoundation__CDateTime __x_ABI_C__FIIterator_1___x_ABI_CWindows__CFoundation__CDateTime;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIIterator_1___x_ABI_CWindows__CFoundation__CDateTime;

    typedef struct __x_ABI_C__FIIterator_1___x_ABI_CWindows__CFoundation__CDateTimeVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CFoundation__CDateTime* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CFoundation__CDateTime* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CFoundation__CDateTime* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CFoundation__CDateTime* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CFoundation__CDateTime* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CFoundation__CDateTime* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Current)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CFoundation__CDateTime* This,
        struct __x_ABI_CWindows_CFoundation_CDateTime* result);
    HRESULT (STDMETHODCALLTYPE* get_HasCurrent)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CFoundation__CDateTime* This,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* MoveNext)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CFoundation__CDateTime* This,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CFoundation__CDateTime* This,
        UINT32 itemsLength,
        struct __x_ABI_CWindows_CFoundation_CDateTime* items,
        UINT32* result);

        END_INTERFACE
    } __x_ABI_C__FIIterator_1___x_ABI_CWindows__CFoundation__CDateTimeVtbl;

    interface __x_ABI_C__FIIterator_1___x_ABI_CWindows__CFoundation__CDateTime
    {
        CONST_VTBL struct __x_ABI_C__FIIterator_1___x_ABI_CWindows__CFoundation__CDateTimeVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIIterator_1___x_ABI_CWindows__CFoundation__CDateTime_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIIterable_1___x_ABI_CWindows__CFoundation__CDateTime_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIIterable_1___x_ABI_CWindows__CFoundation__CDateTime_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIIterable_1___x_ABI_CWindows__CFoundation__CDateTime __x_ABI_C__FIIterable_1___x_ABI_CWindows__CFoundation__CDateTime;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIIterable_1___x_ABI_CWindows__CFoundation__CDateTime;

    typedef struct __x_ABI_C__FIIterable_1___x_ABI_CWindows__CFoundation__CDateTimeVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CFoundation__CDateTime* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CFoundation__CDateTime* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CFoundation__CDateTime* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CFoundation__CDateTime* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CFoundation__CDateTime* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CFoundation__CDateTime* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* First)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CFoundation__CDateTime* This,
        __x_ABI_C__FIIterator_1___x_ABI_CWindows__CFoundation__CDateTime** result);

        END_INTERFACE
    } __x_ABI_C__FIIterable_1___x_ABI_CWindows__CFoundation__CDateTimeVtbl;

    interface __x_ABI_C__FIIterable_1___x_ABI_CWindows__CFoundation__CDateTime
    {
        CONST_VTBL struct __x_ABI_C__FIIterable_1___x_ABI_CWindows__CFoundation__CDateTimeVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIIterable_1___x_ABI_CWindows__CFoundation__CDateTime_INTERFACE_DEFINED__
    
#ifndef ____x_ABI_CWindows_CFoundation_CIUriRuntimeClass_FWD_DEFINED__
#define ____x_ABI_CWindows_CFoundation_CIUriRuntimeClass_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CFoundation_CIUriRuntimeClass __x_ABI_CWindows_CFoundation_CIUriRuntimeClass;

#endif // ____x_ABI_CWindows_CFoundation_CIUriRuntimeClass_FWD_DEFINED__

#if !defined(____x_ABI_C__FIIterator_1___x_ABI_CWindows__CFoundation__CUri_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIIterator_1___x_ABI_CWindows__CFoundation__CUri_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIIterator_1___x_ABI_CWindows__CFoundation__CUri __x_ABI_C__FIIterator_1___x_ABI_CWindows__CFoundation__CUri;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIIterator_1___x_ABI_CWindows__CFoundation__CUri;

    typedef struct __x_ABI_C__FIIterator_1___x_ABI_CWindows__CFoundation__CUriVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CFoundation__CUri* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CFoundation__CUri* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CFoundation__CUri* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CFoundation__CUri* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CFoundation__CUri* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CFoundation__CUri* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Current)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CFoundation__CUri* This,
        __x_ABI_CWindows_CFoundation_CIUriRuntimeClass** result);
    HRESULT (STDMETHODCALLTYPE* get_HasCurrent)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CFoundation__CUri* This,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* MoveNext)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CFoundation__CUri* This,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CFoundation__CUri* This,
        UINT32 itemsLength,
        __x_ABI_CWindows_CFoundation_CIUriRuntimeClass** items,
        UINT32* result);

        END_INTERFACE
    } __x_ABI_C__FIIterator_1___x_ABI_CWindows__CFoundation__CUriVtbl;

    interface __x_ABI_C__FIIterator_1___x_ABI_CWindows__CFoundation__CUri
    {
        CONST_VTBL struct __x_ABI_C__FIIterator_1___x_ABI_CWindows__CFoundation__CUriVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIIterator_1___x_ABI_CWindows__CFoundation__CUri_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIIterable_1___x_ABI_CWindows__CFoundation__CUri_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIIterable_1___x_ABI_CWindows__CFoundation__CUri_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIIterable_1___x_ABI_CWindows__CFoundation__CUri __x_ABI_C__FIIterable_1___x_ABI_CWindows__CFoundation__CUri;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIIterable_1___x_ABI_CWindows__CFoundation__CUri;

    typedef struct __x_ABI_C__FIIterable_1___x_ABI_CWindows__CFoundation__CUriVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CFoundation__CUri* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CFoundation__CUri* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CFoundation__CUri* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CFoundation__CUri* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CFoundation__CUri* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CFoundation__CUri* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* First)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CFoundation__CUri* This,
        __x_ABI_C__FIIterator_1___x_ABI_CWindows__CFoundation__CUri** result);

        END_INTERFACE
    } __x_ABI_C__FIIterable_1___x_ABI_CWindows__CFoundation__CUriVtbl;

    interface __x_ABI_C__FIIterable_1___x_ABI_CWindows__CFoundation__CUri
    {
        CONST_VTBL struct __x_ABI_C__FIIterable_1___x_ABI_CWindows__CFoundation__CUriVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIIterable_1___x_ABI_CWindows__CFoundation__CUri_INTERFACE_DEFINED__
    
typedef struct __x_ABI_CWindows_CUI_CColor __x_ABI_CWindows_CUI_CColor;

#if !defined(____x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CColor_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CColor_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CColor __x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CColor;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CColor;

    typedef struct __x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CColorVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CColor* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CColor* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CColor* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CColor* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CColor* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CColor* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Current)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CColor* This,
        struct __x_ABI_CWindows_CUI_CColor* result);
    HRESULT (STDMETHODCALLTYPE* get_HasCurrent)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CColor* This,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* MoveNext)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CColor* This,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CColor* This,
        UINT32 itemsLength,
        struct __x_ABI_CWindows_CUI_CColor* items,
        UINT32* result);

        END_INTERFACE
    } __x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CColorVtbl;

    interface __x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CColor
    {
        CONST_VTBL struct __x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CColorVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CColor_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIIterable_1___x_ABI_CWindows__CUI__CColor_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIIterable_1___x_ABI_CWindows__CUI__CColor_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIIterable_1___x_ABI_CWindows__CUI__CColor __x_ABI_C__FIIterable_1___x_ABI_CWindows__CUI__CColor;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIIterable_1___x_ABI_CWindows__CUI__CColor;

    typedef struct __x_ABI_C__FIIterable_1___x_ABI_CWindows__CUI__CColorVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CUI__CColor* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CUI__CColor* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CUI__CColor* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CUI__CColor* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CUI__CColor* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CUI__CColor* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* First)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CUI__CColor* This,
        __x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CColor** result);

        END_INTERFACE
    } __x_ABI_C__FIIterable_1___x_ABI_CWindows__CUI__CColorVtbl;

    interface __x_ABI_C__FIIterable_1___x_ABI_CWindows__CUI__CColor
    {
        CONST_VTBL struct __x_ABI_C__FIIterable_1___x_ABI_CWindows__CUI__CColorVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIIterable_1___x_ABI_CWindows__CUI__CColor_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CXaml__CControls__CColumnDefinition_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CXaml__CControls__CColumnDefinition_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CXaml__CControls__CColumnDefinition __x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CXaml__CControls__CColumnDefinition;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CXaml__CControls__CColumnDefinition;

    typedef struct __x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CXaml__CControls__CColumnDefinitionVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CXaml__CControls__CColumnDefinition* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CXaml__CControls__CColumnDefinition* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CXaml__CControls__CColumnDefinition* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CXaml__CControls__CColumnDefinition* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CXaml__CControls__CColumnDefinition* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CXaml__CControls__CColumnDefinition* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Current)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CXaml__CControls__CColumnDefinition* This,
        __x_ABI_CWindows_CUI_CXaml_CControls_CIColumnDefinition** result);
    HRESULT (STDMETHODCALLTYPE* get_HasCurrent)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CXaml__CControls__CColumnDefinition* This,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* MoveNext)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CXaml__CControls__CColumnDefinition* This,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CXaml__CControls__CColumnDefinition* This,
        UINT32 itemsLength,
        __x_ABI_CWindows_CUI_CXaml_CControls_CIColumnDefinition** items,
        UINT32* result);

        END_INTERFACE
    } __x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CXaml__CControls__CColumnDefinitionVtbl;

    interface __x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CXaml__CControls__CColumnDefinition
    {
        CONST_VTBL struct __x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CXaml__CControls__CColumnDefinitionVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CXaml__CControls__CColumnDefinition_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIIterable_1___x_ABI_CWindows__CUI__CXaml__CControls__CColumnDefinition_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIIterable_1___x_ABI_CWindows__CUI__CXaml__CControls__CColumnDefinition_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIIterable_1___x_ABI_CWindows__CUI__CXaml__CControls__CColumnDefinition __x_ABI_C__FIIterable_1___x_ABI_CWindows__CUI__CXaml__CControls__CColumnDefinition;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIIterable_1___x_ABI_CWindows__CUI__CXaml__CControls__CColumnDefinition;

    typedef struct __x_ABI_C__FIIterable_1___x_ABI_CWindows__CUI__CXaml__CControls__CColumnDefinitionVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CUI__CXaml__CControls__CColumnDefinition* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CUI__CXaml__CControls__CColumnDefinition* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CUI__CXaml__CControls__CColumnDefinition* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CUI__CXaml__CControls__CColumnDefinition* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CUI__CXaml__CControls__CColumnDefinition* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CUI__CXaml__CControls__CColumnDefinition* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* First)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CUI__CXaml__CControls__CColumnDefinition* This,
        __x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CXaml__CControls__CColumnDefinition** result);

        END_INTERFACE
    } __x_ABI_C__FIIterable_1___x_ABI_CWindows__CUI__CXaml__CControls__CColumnDefinitionVtbl;

    interface __x_ABI_C__FIIterable_1___x_ABI_CWindows__CUI__CXaml__CControls__CColumnDefinition
    {
        CONST_VTBL struct __x_ABI_C__FIIterable_1___x_ABI_CWindows__CUI__CXaml__CControls__CColumnDefinitionVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIIterable_1___x_ABI_CWindows__CUI__CXaml__CControls__CColumnDefinition_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CXaml__CControls__CGroupStyle_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CXaml__CControls__CGroupStyle_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CXaml__CControls__CGroupStyle __x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CXaml__CControls__CGroupStyle;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CXaml__CControls__CGroupStyle;

    typedef struct __x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CXaml__CControls__CGroupStyleVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CXaml__CControls__CGroupStyle* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CXaml__CControls__CGroupStyle* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CXaml__CControls__CGroupStyle* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CXaml__CControls__CGroupStyle* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CXaml__CControls__CGroupStyle* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CXaml__CControls__CGroupStyle* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Current)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CXaml__CControls__CGroupStyle* This,
        __x_ABI_CWindows_CUI_CXaml_CControls_CIGroupStyle** result);
    HRESULT (STDMETHODCALLTYPE* get_HasCurrent)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CXaml__CControls__CGroupStyle* This,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* MoveNext)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CXaml__CControls__CGroupStyle* This,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CXaml__CControls__CGroupStyle* This,
        UINT32 itemsLength,
        __x_ABI_CWindows_CUI_CXaml_CControls_CIGroupStyle** items,
        UINT32* result);

        END_INTERFACE
    } __x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CXaml__CControls__CGroupStyleVtbl;

    interface __x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CXaml__CControls__CGroupStyle
    {
        CONST_VTBL struct __x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CXaml__CControls__CGroupStyleVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CXaml__CControls__CGroupStyle_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIIterable_1___x_ABI_CWindows__CUI__CXaml__CControls__CGroupStyle_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIIterable_1___x_ABI_CWindows__CUI__CXaml__CControls__CGroupStyle_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIIterable_1___x_ABI_CWindows__CUI__CXaml__CControls__CGroupStyle __x_ABI_C__FIIterable_1___x_ABI_CWindows__CUI__CXaml__CControls__CGroupStyle;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIIterable_1___x_ABI_CWindows__CUI__CXaml__CControls__CGroupStyle;

    typedef struct __x_ABI_C__FIIterable_1___x_ABI_CWindows__CUI__CXaml__CControls__CGroupStyleVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CUI__CXaml__CControls__CGroupStyle* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CUI__CXaml__CControls__CGroupStyle* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CUI__CXaml__CControls__CGroupStyle* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CUI__CXaml__CControls__CGroupStyle* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CUI__CXaml__CControls__CGroupStyle* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CUI__CXaml__CControls__CGroupStyle* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* First)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CUI__CXaml__CControls__CGroupStyle* This,
        __x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CXaml__CControls__CGroupStyle** result);

        END_INTERFACE
    } __x_ABI_C__FIIterable_1___x_ABI_CWindows__CUI__CXaml__CControls__CGroupStyleVtbl;

    interface __x_ABI_C__FIIterable_1___x_ABI_CWindows__CUI__CXaml__CControls__CGroupStyle
    {
        CONST_VTBL struct __x_ABI_C__FIIterable_1___x_ABI_CWindows__CUI__CXaml__CControls__CGroupStyleVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIIterable_1___x_ABI_CWindows__CUI__CXaml__CControls__CGroupStyle_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CXaml__CControls__CHubSection_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CXaml__CControls__CHubSection_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CXaml__CControls__CHubSection __x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CXaml__CControls__CHubSection;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CXaml__CControls__CHubSection;

    typedef struct __x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CXaml__CControls__CHubSectionVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CXaml__CControls__CHubSection* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CXaml__CControls__CHubSection* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CXaml__CControls__CHubSection* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CXaml__CControls__CHubSection* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CXaml__CControls__CHubSection* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CXaml__CControls__CHubSection* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Current)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CXaml__CControls__CHubSection* This,
        __x_ABI_CWindows_CUI_CXaml_CControls_CIHubSection** result);
    HRESULT (STDMETHODCALLTYPE* get_HasCurrent)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CXaml__CControls__CHubSection* This,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* MoveNext)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CXaml__CControls__CHubSection* This,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CXaml__CControls__CHubSection* This,
        UINT32 itemsLength,
        __x_ABI_CWindows_CUI_CXaml_CControls_CIHubSection** items,
        UINT32* result);

        END_INTERFACE
    } __x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CXaml__CControls__CHubSectionVtbl;

    interface __x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CXaml__CControls__CHubSection
    {
        CONST_VTBL struct __x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CXaml__CControls__CHubSectionVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CXaml__CControls__CHubSection_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIIterable_1___x_ABI_CWindows__CUI__CXaml__CControls__CHubSection_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIIterable_1___x_ABI_CWindows__CUI__CXaml__CControls__CHubSection_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIIterable_1___x_ABI_CWindows__CUI__CXaml__CControls__CHubSection __x_ABI_C__FIIterable_1___x_ABI_CWindows__CUI__CXaml__CControls__CHubSection;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIIterable_1___x_ABI_CWindows__CUI__CXaml__CControls__CHubSection;

    typedef struct __x_ABI_C__FIIterable_1___x_ABI_CWindows__CUI__CXaml__CControls__CHubSectionVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CUI__CXaml__CControls__CHubSection* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CUI__CXaml__CControls__CHubSection* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CUI__CXaml__CControls__CHubSection* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CUI__CXaml__CControls__CHubSection* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CUI__CXaml__CControls__CHubSection* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CUI__CXaml__CControls__CHubSection* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* First)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CUI__CXaml__CControls__CHubSection* This,
        __x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CXaml__CControls__CHubSection** result);

        END_INTERFACE
    } __x_ABI_C__FIIterable_1___x_ABI_CWindows__CUI__CXaml__CControls__CHubSectionVtbl;

    interface __x_ABI_C__FIIterable_1___x_ABI_CWindows__CUI__CXaml__CControls__CHubSection
    {
        CONST_VTBL struct __x_ABI_C__FIIterable_1___x_ABI_CWindows__CUI__CXaml__CControls__CHubSectionVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIIterable_1___x_ABI_CWindows__CUI__CXaml__CControls__CHubSection_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CXaml__CControls__CICommandBarElement_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CXaml__CControls__CICommandBarElement_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CXaml__CControls__CICommandBarElement __x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CXaml__CControls__CICommandBarElement;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CXaml__CControls__CICommandBarElement;

    typedef struct __x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CXaml__CControls__CICommandBarElementVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CXaml__CControls__CICommandBarElement* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CXaml__CControls__CICommandBarElement* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CXaml__CControls__CICommandBarElement* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CXaml__CControls__CICommandBarElement* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CXaml__CControls__CICommandBarElement* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CXaml__CControls__CICommandBarElement* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Current)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CXaml__CControls__CICommandBarElement* This,
        __x_ABI_CWindows_CUI_CXaml_CControls_CICommandBarElement** result);
    HRESULT (STDMETHODCALLTYPE* get_HasCurrent)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CXaml__CControls__CICommandBarElement* This,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* MoveNext)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CXaml__CControls__CICommandBarElement* This,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CXaml__CControls__CICommandBarElement* This,
        UINT32 itemsLength,
        __x_ABI_CWindows_CUI_CXaml_CControls_CICommandBarElement** items,
        UINT32* result);

        END_INTERFACE
    } __x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CXaml__CControls__CICommandBarElementVtbl;

    interface __x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CXaml__CControls__CICommandBarElement
    {
        CONST_VTBL struct __x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CXaml__CControls__CICommandBarElementVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CXaml__CControls__CICommandBarElement_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIIterable_1___x_ABI_CWindows__CUI__CXaml__CControls__CICommandBarElement_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIIterable_1___x_ABI_CWindows__CUI__CXaml__CControls__CICommandBarElement_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIIterable_1___x_ABI_CWindows__CUI__CXaml__CControls__CICommandBarElement __x_ABI_C__FIIterable_1___x_ABI_CWindows__CUI__CXaml__CControls__CICommandBarElement;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIIterable_1___x_ABI_CWindows__CUI__CXaml__CControls__CICommandBarElement;

    typedef struct __x_ABI_C__FIIterable_1___x_ABI_CWindows__CUI__CXaml__CControls__CICommandBarElementVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CUI__CXaml__CControls__CICommandBarElement* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CUI__CXaml__CControls__CICommandBarElement* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CUI__CXaml__CControls__CICommandBarElement* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CUI__CXaml__CControls__CICommandBarElement* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CUI__CXaml__CControls__CICommandBarElement* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CUI__CXaml__CControls__CICommandBarElement* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* First)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CUI__CXaml__CControls__CICommandBarElement* This,
        __x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CXaml__CControls__CICommandBarElement** result);

        END_INTERFACE
    } __x_ABI_C__FIIterable_1___x_ABI_CWindows__CUI__CXaml__CControls__CICommandBarElementVtbl;

    interface __x_ABI_C__FIIterable_1___x_ABI_CWindows__CUI__CXaml__CControls__CICommandBarElement
    {
        CONST_VTBL struct __x_ABI_C__FIIterable_1___x_ABI_CWindows__CUI__CXaml__CControls__CICommandBarElementVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIIterable_1___x_ABI_CWindows__CUI__CXaml__CControls__CICommandBarElement_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CXaml__CControls__CMenuBarItem_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CXaml__CControls__CMenuBarItem_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CXaml__CControls__CMenuBarItem __x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CXaml__CControls__CMenuBarItem;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CXaml__CControls__CMenuBarItem;

    typedef struct __x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CXaml__CControls__CMenuBarItemVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CXaml__CControls__CMenuBarItem* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CXaml__CControls__CMenuBarItem* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CXaml__CControls__CMenuBarItem* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CXaml__CControls__CMenuBarItem* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CXaml__CControls__CMenuBarItem* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CXaml__CControls__CMenuBarItem* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Current)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CXaml__CControls__CMenuBarItem* This,
        __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuBarItem** result);
    HRESULT (STDMETHODCALLTYPE* get_HasCurrent)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CXaml__CControls__CMenuBarItem* This,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* MoveNext)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CXaml__CControls__CMenuBarItem* This,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CXaml__CControls__CMenuBarItem* This,
        UINT32 itemsLength,
        __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuBarItem** items,
        UINT32* result);

        END_INTERFACE
    } __x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CXaml__CControls__CMenuBarItemVtbl;

    interface __x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CXaml__CControls__CMenuBarItem
    {
        CONST_VTBL struct __x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CXaml__CControls__CMenuBarItemVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CXaml__CControls__CMenuBarItem_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIIterable_1___x_ABI_CWindows__CUI__CXaml__CControls__CMenuBarItem_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIIterable_1___x_ABI_CWindows__CUI__CXaml__CControls__CMenuBarItem_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIIterable_1___x_ABI_CWindows__CUI__CXaml__CControls__CMenuBarItem __x_ABI_C__FIIterable_1___x_ABI_CWindows__CUI__CXaml__CControls__CMenuBarItem;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIIterable_1___x_ABI_CWindows__CUI__CXaml__CControls__CMenuBarItem;

    typedef struct __x_ABI_C__FIIterable_1___x_ABI_CWindows__CUI__CXaml__CControls__CMenuBarItemVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CUI__CXaml__CControls__CMenuBarItem* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CUI__CXaml__CControls__CMenuBarItem* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CUI__CXaml__CControls__CMenuBarItem* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CUI__CXaml__CControls__CMenuBarItem* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CUI__CXaml__CControls__CMenuBarItem* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CUI__CXaml__CControls__CMenuBarItem* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* First)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CUI__CXaml__CControls__CMenuBarItem* This,
        __x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CXaml__CControls__CMenuBarItem** result);

        END_INTERFACE
    } __x_ABI_C__FIIterable_1___x_ABI_CWindows__CUI__CXaml__CControls__CMenuBarItemVtbl;

    interface __x_ABI_C__FIIterable_1___x_ABI_CWindows__CUI__CXaml__CControls__CMenuBarItem
    {
        CONST_VTBL struct __x_ABI_C__FIIterable_1___x_ABI_CWindows__CUI__CXaml__CControls__CMenuBarItemVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIIterable_1___x_ABI_CWindows__CUI__CXaml__CControls__CMenuBarItem_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CXaml__CControls__CMenuFlyoutItemBase_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CXaml__CControls__CMenuFlyoutItemBase_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CXaml__CControls__CMenuFlyoutItemBase __x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CXaml__CControls__CMenuFlyoutItemBase;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CXaml__CControls__CMenuFlyoutItemBase;

    typedef struct __x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CXaml__CControls__CMenuFlyoutItemBaseVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CXaml__CControls__CMenuFlyoutItemBase* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CXaml__CControls__CMenuFlyoutItemBase* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CXaml__CControls__CMenuFlyoutItemBase* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CXaml__CControls__CMenuFlyoutItemBase* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CXaml__CControls__CMenuFlyoutItemBase* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CXaml__CControls__CMenuFlyoutItemBase* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Current)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CXaml__CControls__CMenuFlyoutItemBase* This,
        __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutItemBase** result);
    HRESULT (STDMETHODCALLTYPE* get_HasCurrent)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CXaml__CControls__CMenuFlyoutItemBase* This,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* MoveNext)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CXaml__CControls__CMenuFlyoutItemBase* This,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CXaml__CControls__CMenuFlyoutItemBase* This,
        UINT32 itemsLength,
        __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutItemBase** items,
        UINT32* result);

        END_INTERFACE
    } __x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CXaml__CControls__CMenuFlyoutItemBaseVtbl;

    interface __x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CXaml__CControls__CMenuFlyoutItemBase
    {
        CONST_VTBL struct __x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CXaml__CControls__CMenuFlyoutItemBaseVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CXaml__CControls__CMenuFlyoutItemBase_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIIterable_1___x_ABI_CWindows__CUI__CXaml__CControls__CMenuFlyoutItemBase_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIIterable_1___x_ABI_CWindows__CUI__CXaml__CControls__CMenuFlyoutItemBase_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIIterable_1___x_ABI_CWindows__CUI__CXaml__CControls__CMenuFlyoutItemBase __x_ABI_C__FIIterable_1___x_ABI_CWindows__CUI__CXaml__CControls__CMenuFlyoutItemBase;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIIterable_1___x_ABI_CWindows__CUI__CXaml__CControls__CMenuFlyoutItemBase;

    typedef struct __x_ABI_C__FIIterable_1___x_ABI_CWindows__CUI__CXaml__CControls__CMenuFlyoutItemBaseVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CUI__CXaml__CControls__CMenuFlyoutItemBase* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CUI__CXaml__CControls__CMenuFlyoutItemBase* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CUI__CXaml__CControls__CMenuFlyoutItemBase* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CUI__CXaml__CControls__CMenuFlyoutItemBase* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CUI__CXaml__CControls__CMenuFlyoutItemBase* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CUI__CXaml__CControls__CMenuFlyoutItemBase* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* First)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CUI__CXaml__CControls__CMenuFlyoutItemBase* This,
        __x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CXaml__CControls__CMenuFlyoutItemBase** result);

        END_INTERFACE
    } __x_ABI_C__FIIterable_1___x_ABI_CWindows__CUI__CXaml__CControls__CMenuFlyoutItemBaseVtbl;

    interface __x_ABI_C__FIIterable_1___x_ABI_CWindows__CUI__CXaml__CControls__CMenuFlyoutItemBase
    {
        CONST_VTBL struct __x_ABI_C__FIIterable_1___x_ABI_CWindows__CUI__CXaml__CControls__CMenuFlyoutItemBaseVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIIterable_1___x_ABI_CWindows__CUI__CXaml__CControls__CMenuFlyoutItemBase_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CXaml__CControls__CRowDefinition_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CXaml__CControls__CRowDefinition_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CXaml__CControls__CRowDefinition __x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CXaml__CControls__CRowDefinition;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CXaml__CControls__CRowDefinition;

    typedef struct __x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CXaml__CControls__CRowDefinitionVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CXaml__CControls__CRowDefinition* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CXaml__CControls__CRowDefinition* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CXaml__CControls__CRowDefinition* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CXaml__CControls__CRowDefinition* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CXaml__CControls__CRowDefinition* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CXaml__CControls__CRowDefinition* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Current)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CXaml__CControls__CRowDefinition* This,
        __x_ABI_CWindows_CUI_CXaml_CControls_CIRowDefinition** result);
    HRESULT (STDMETHODCALLTYPE* get_HasCurrent)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CXaml__CControls__CRowDefinition* This,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* MoveNext)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CXaml__CControls__CRowDefinition* This,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CXaml__CControls__CRowDefinition* This,
        UINT32 itemsLength,
        __x_ABI_CWindows_CUI_CXaml_CControls_CIRowDefinition** items,
        UINT32* result);

        END_INTERFACE
    } __x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CXaml__CControls__CRowDefinitionVtbl;

    interface __x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CXaml__CControls__CRowDefinition
    {
        CONST_VTBL struct __x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CXaml__CControls__CRowDefinitionVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CXaml__CControls__CRowDefinition_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIIterable_1___x_ABI_CWindows__CUI__CXaml__CControls__CRowDefinition_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIIterable_1___x_ABI_CWindows__CUI__CXaml__CControls__CRowDefinition_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIIterable_1___x_ABI_CWindows__CUI__CXaml__CControls__CRowDefinition __x_ABI_C__FIIterable_1___x_ABI_CWindows__CUI__CXaml__CControls__CRowDefinition;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIIterable_1___x_ABI_CWindows__CUI__CXaml__CControls__CRowDefinition;

    typedef struct __x_ABI_C__FIIterable_1___x_ABI_CWindows__CUI__CXaml__CControls__CRowDefinitionVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CUI__CXaml__CControls__CRowDefinition* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CUI__CXaml__CControls__CRowDefinition* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CUI__CXaml__CControls__CRowDefinition* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CUI__CXaml__CControls__CRowDefinition* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CUI__CXaml__CControls__CRowDefinition* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CUI__CXaml__CControls__CRowDefinition* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* First)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CUI__CXaml__CControls__CRowDefinition* This,
        __x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CXaml__CControls__CRowDefinition** result);

        END_INTERFACE
    } __x_ABI_C__FIIterable_1___x_ABI_CWindows__CUI__CXaml__CControls__CRowDefinitionVtbl;

    interface __x_ABI_C__FIIterable_1___x_ABI_CWindows__CUI__CXaml__CControls__CRowDefinition
    {
        CONST_VTBL struct __x_ABI_C__FIIterable_1___x_ABI_CWindows__CUI__CXaml__CControls__CRowDefinitionVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIIterable_1___x_ABI_CWindows__CUI__CXaml__CControls__CRowDefinition_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CXaml__CControls__CSwipeItem_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CXaml__CControls__CSwipeItem_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CXaml__CControls__CSwipeItem __x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CXaml__CControls__CSwipeItem;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CXaml__CControls__CSwipeItem;

    typedef struct __x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CXaml__CControls__CSwipeItemVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CXaml__CControls__CSwipeItem* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CXaml__CControls__CSwipeItem* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CXaml__CControls__CSwipeItem* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CXaml__CControls__CSwipeItem* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CXaml__CControls__CSwipeItem* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CXaml__CControls__CSwipeItem* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Current)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CXaml__CControls__CSwipeItem* This,
        __x_ABI_CWindows_CUI_CXaml_CControls_CISwipeItem** result);
    HRESULT (STDMETHODCALLTYPE* get_HasCurrent)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CXaml__CControls__CSwipeItem* This,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* MoveNext)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CXaml__CControls__CSwipeItem* This,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CXaml__CControls__CSwipeItem* This,
        UINT32 itemsLength,
        __x_ABI_CWindows_CUI_CXaml_CControls_CISwipeItem** items,
        UINT32* result);

        END_INTERFACE
    } __x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CXaml__CControls__CSwipeItemVtbl;

    interface __x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CXaml__CControls__CSwipeItem
    {
        CONST_VTBL struct __x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CXaml__CControls__CSwipeItemVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CXaml__CControls__CSwipeItem_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIIterable_1___x_ABI_CWindows__CUI__CXaml__CControls__CSwipeItem_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIIterable_1___x_ABI_CWindows__CUI__CXaml__CControls__CSwipeItem_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIIterable_1___x_ABI_CWindows__CUI__CXaml__CControls__CSwipeItem __x_ABI_C__FIIterable_1___x_ABI_CWindows__CUI__CXaml__CControls__CSwipeItem;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIIterable_1___x_ABI_CWindows__CUI__CXaml__CControls__CSwipeItem;

    typedef struct __x_ABI_C__FIIterable_1___x_ABI_CWindows__CUI__CXaml__CControls__CSwipeItemVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CUI__CXaml__CControls__CSwipeItem* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CUI__CXaml__CControls__CSwipeItem* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CUI__CXaml__CControls__CSwipeItem* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CUI__CXaml__CControls__CSwipeItem* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CUI__CXaml__CControls__CSwipeItem* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CUI__CXaml__CControls__CSwipeItem* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* First)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CUI__CXaml__CControls__CSwipeItem* This,
        __x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CXaml__CControls__CSwipeItem** result);

        END_INTERFACE
    } __x_ABI_C__FIIterable_1___x_ABI_CWindows__CUI__CXaml__CControls__CSwipeItemVtbl;

    interface __x_ABI_C__FIIterable_1___x_ABI_CWindows__CUI__CXaml__CControls__CSwipeItem
    {
        CONST_VTBL struct __x_ABI_C__FIIterable_1___x_ABI_CWindows__CUI__CXaml__CControls__CSwipeItemVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIIterable_1___x_ABI_CWindows__CUI__CXaml__CControls__CSwipeItem_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CXaml__CControls__CTreeViewNode_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CXaml__CControls__CTreeViewNode_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CXaml__CControls__CTreeViewNode __x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CXaml__CControls__CTreeViewNode;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CXaml__CControls__CTreeViewNode;

    typedef struct __x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CXaml__CControls__CTreeViewNodeVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CXaml__CControls__CTreeViewNode* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CXaml__CControls__CTreeViewNode* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CXaml__CControls__CTreeViewNode* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CXaml__CControls__CTreeViewNode* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CXaml__CControls__CTreeViewNode* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CXaml__CControls__CTreeViewNode* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Current)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CXaml__CControls__CTreeViewNode* This,
        __x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewNode** result);
    HRESULT (STDMETHODCALLTYPE* get_HasCurrent)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CXaml__CControls__CTreeViewNode* This,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* MoveNext)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CXaml__CControls__CTreeViewNode* This,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CXaml__CControls__CTreeViewNode* This,
        UINT32 itemsLength,
        __x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewNode** items,
        UINT32* result);

        END_INTERFACE
    } __x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CXaml__CControls__CTreeViewNodeVtbl;

    interface __x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CXaml__CControls__CTreeViewNode
    {
        CONST_VTBL struct __x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CXaml__CControls__CTreeViewNodeVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CXaml__CControls__CTreeViewNode_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIIterable_1___x_ABI_CWindows__CUI__CXaml__CControls__CTreeViewNode_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIIterable_1___x_ABI_CWindows__CUI__CXaml__CControls__CTreeViewNode_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIIterable_1___x_ABI_CWindows__CUI__CXaml__CControls__CTreeViewNode __x_ABI_C__FIIterable_1___x_ABI_CWindows__CUI__CXaml__CControls__CTreeViewNode;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIIterable_1___x_ABI_CWindows__CUI__CXaml__CControls__CTreeViewNode;

    typedef struct __x_ABI_C__FIIterable_1___x_ABI_CWindows__CUI__CXaml__CControls__CTreeViewNodeVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CUI__CXaml__CControls__CTreeViewNode* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CUI__CXaml__CControls__CTreeViewNode* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CUI__CXaml__CControls__CTreeViewNode* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CUI__CXaml__CControls__CTreeViewNode* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CUI__CXaml__CControls__CTreeViewNode* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CUI__CXaml__CControls__CTreeViewNode* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* First)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CUI__CXaml__CControls__CTreeViewNode* This,
        __x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CXaml__CControls__CTreeViewNode** result);

        END_INTERFACE
    } __x_ABI_C__FIIterable_1___x_ABI_CWindows__CUI__CXaml__CControls__CTreeViewNodeVtbl;

    interface __x_ABI_C__FIIterable_1___x_ABI_CWindows__CUI__CXaml__CControls__CTreeViewNode
    {
        CONST_VTBL struct __x_ABI_C__FIIterable_1___x_ABI_CWindows__CUI__CXaml__CControls__CTreeViewNodeVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIIterable_1___x_ABI_CWindows__CUI__CXaml__CControls__CTreeViewNode_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CXaml__CControls__CWebViewDeferredPermissionRequest_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CXaml__CControls__CWebViewDeferredPermissionRequest_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CXaml__CControls__CWebViewDeferredPermissionRequest __x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CXaml__CControls__CWebViewDeferredPermissionRequest;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CXaml__CControls__CWebViewDeferredPermissionRequest;

    typedef struct __x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CXaml__CControls__CWebViewDeferredPermissionRequestVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CXaml__CControls__CWebViewDeferredPermissionRequest* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CXaml__CControls__CWebViewDeferredPermissionRequest* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CXaml__CControls__CWebViewDeferredPermissionRequest* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CXaml__CControls__CWebViewDeferredPermissionRequest* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CXaml__CControls__CWebViewDeferredPermissionRequest* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CXaml__CControls__CWebViewDeferredPermissionRequest* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Current)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CXaml__CControls__CWebViewDeferredPermissionRequest* This,
        __x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewDeferredPermissionRequest** result);
    HRESULT (STDMETHODCALLTYPE* get_HasCurrent)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CXaml__CControls__CWebViewDeferredPermissionRequest* This,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* MoveNext)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CXaml__CControls__CWebViewDeferredPermissionRequest* This,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CXaml__CControls__CWebViewDeferredPermissionRequest* This,
        UINT32 itemsLength,
        __x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewDeferredPermissionRequest** items,
        UINT32* result);

        END_INTERFACE
    } __x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CXaml__CControls__CWebViewDeferredPermissionRequestVtbl;

    interface __x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CXaml__CControls__CWebViewDeferredPermissionRequest
    {
        CONST_VTBL struct __x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CXaml__CControls__CWebViewDeferredPermissionRequestVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CXaml__CControls__CWebViewDeferredPermissionRequest_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIIterable_1___x_ABI_CWindows__CUI__CXaml__CControls__CWebViewDeferredPermissionRequest_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIIterable_1___x_ABI_CWindows__CUI__CXaml__CControls__CWebViewDeferredPermissionRequest_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIIterable_1___x_ABI_CWindows__CUI__CXaml__CControls__CWebViewDeferredPermissionRequest __x_ABI_C__FIIterable_1___x_ABI_CWindows__CUI__CXaml__CControls__CWebViewDeferredPermissionRequest;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIIterable_1___x_ABI_CWindows__CUI__CXaml__CControls__CWebViewDeferredPermissionRequest;

    typedef struct __x_ABI_C__FIIterable_1___x_ABI_CWindows__CUI__CXaml__CControls__CWebViewDeferredPermissionRequestVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CUI__CXaml__CControls__CWebViewDeferredPermissionRequest* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CUI__CXaml__CControls__CWebViewDeferredPermissionRequest* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CUI__CXaml__CControls__CWebViewDeferredPermissionRequest* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CUI__CXaml__CControls__CWebViewDeferredPermissionRequest* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CUI__CXaml__CControls__CWebViewDeferredPermissionRequest* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CUI__CXaml__CControls__CWebViewDeferredPermissionRequest* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* First)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CUI__CXaml__CControls__CWebViewDeferredPermissionRequest* This,
        __x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CXaml__CControls__CWebViewDeferredPermissionRequest** result);

        END_INTERFACE
    } __x_ABI_C__FIIterable_1___x_ABI_CWindows__CUI__CXaml__CControls__CWebViewDeferredPermissionRequestVtbl;

    interface __x_ABI_C__FIIterable_1___x_ABI_CWindows__CUI__CXaml__CControls__CWebViewDeferredPermissionRequest
    {
        CONST_VTBL struct __x_ABI_C__FIIterable_1___x_ABI_CWindows__CUI__CXaml__CControls__CWebViewDeferredPermissionRequestVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIIterable_1___x_ABI_CWindows__CUI__CXaml__CControls__CWebViewDeferredPermissionRequest_INTERFACE_DEFINED__
    
#ifndef ____x_ABI_CWindows_CUI_CXaml_CData_CIItemIndexRange_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CData_CIItemIndexRange_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CData_CIItemIndexRange __x_ABI_CWindows_CUI_CXaml_CData_CIItemIndexRange;

#endif // ____x_ABI_CWindows_CUI_CXaml_CData_CIItemIndexRange_FWD_DEFINED__

#if !defined(____x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CXaml__CData__CItemIndexRange_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CXaml__CData__CItemIndexRange_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CXaml__CData__CItemIndexRange __x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CXaml__CData__CItemIndexRange;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CXaml__CData__CItemIndexRange;

    typedef struct __x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CXaml__CData__CItemIndexRangeVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CXaml__CData__CItemIndexRange* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CXaml__CData__CItemIndexRange* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CXaml__CData__CItemIndexRange* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CXaml__CData__CItemIndexRange* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CXaml__CData__CItemIndexRange* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CXaml__CData__CItemIndexRange* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Current)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CXaml__CData__CItemIndexRange* This,
        __x_ABI_CWindows_CUI_CXaml_CData_CIItemIndexRange** result);
    HRESULT (STDMETHODCALLTYPE* get_HasCurrent)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CXaml__CData__CItemIndexRange* This,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* MoveNext)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CXaml__CData__CItemIndexRange* This,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CXaml__CData__CItemIndexRange* This,
        UINT32 itemsLength,
        __x_ABI_CWindows_CUI_CXaml_CData_CIItemIndexRange** items,
        UINT32* result);

        END_INTERFACE
    } __x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CXaml__CData__CItemIndexRangeVtbl;

    interface __x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CXaml__CData__CItemIndexRange
    {
        CONST_VTBL struct __x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CXaml__CData__CItemIndexRangeVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CXaml__CData__CItemIndexRange_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIIterable_1___x_ABI_CWindows__CUI__CXaml__CData__CItemIndexRange_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIIterable_1___x_ABI_CWindows__CUI__CXaml__CData__CItemIndexRange_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIIterable_1___x_ABI_CWindows__CUI__CXaml__CData__CItemIndexRange __x_ABI_C__FIIterable_1___x_ABI_CWindows__CUI__CXaml__CData__CItemIndexRange;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIIterable_1___x_ABI_CWindows__CUI__CXaml__CData__CItemIndexRange;

    typedef struct __x_ABI_C__FIIterable_1___x_ABI_CWindows__CUI__CXaml__CData__CItemIndexRangeVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CUI__CXaml__CData__CItemIndexRange* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CUI__CXaml__CData__CItemIndexRange* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CUI__CXaml__CData__CItemIndexRange* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CUI__CXaml__CData__CItemIndexRange* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CUI__CXaml__CData__CItemIndexRange* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CUI__CXaml__CData__CItemIndexRange* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* First)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CUI__CXaml__CData__CItemIndexRange* This,
        __x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CXaml__CData__CItemIndexRange** result);

        END_INTERFACE
    } __x_ABI_C__FIIterable_1___x_ABI_CWindows__CUI__CXaml__CData__CItemIndexRangeVtbl;

    interface __x_ABI_C__FIIterable_1___x_ABI_CWindows__CUI__CXaml__CData__CItemIndexRange
    {
        CONST_VTBL struct __x_ABI_C__FIIterable_1___x_ABI_CWindows__CUI__CXaml__CData__CItemIndexRangeVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIIterable_1___x_ABI_CWindows__CUI__CXaml__CData__CItemIndexRange_INTERFACE_DEFINED__
    
#ifndef ____x_ABI_CWindows_CUI_CXaml_CDocuments_CITextHighlighter_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CDocuments_CITextHighlighter_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CDocuments_CITextHighlighter __x_ABI_CWindows_CUI_CXaml_CDocuments_CITextHighlighter;

#endif // ____x_ABI_CWindows_CUI_CXaml_CDocuments_CITextHighlighter_FWD_DEFINED__

#if !defined(____x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CXaml__CDocuments__CTextHighlighter_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CXaml__CDocuments__CTextHighlighter_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CXaml__CDocuments__CTextHighlighter __x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CXaml__CDocuments__CTextHighlighter;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CXaml__CDocuments__CTextHighlighter;

    typedef struct __x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CXaml__CDocuments__CTextHighlighterVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CXaml__CDocuments__CTextHighlighter* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CXaml__CDocuments__CTextHighlighter* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CXaml__CDocuments__CTextHighlighter* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CXaml__CDocuments__CTextHighlighter* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CXaml__CDocuments__CTextHighlighter* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CXaml__CDocuments__CTextHighlighter* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Current)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CXaml__CDocuments__CTextHighlighter* This,
        __x_ABI_CWindows_CUI_CXaml_CDocuments_CITextHighlighter** result);
    HRESULT (STDMETHODCALLTYPE* get_HasCurrent)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CXaml__CDocuments__CTextHighlighter* This,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* MoveNext)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CXaml__CDocuments__CTextHighlighter* This,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CXaml__CDocuments__CTextHighlighter* This,
        UINT32 itemsLength,
        __x_ABI_CWindows_CUI_CXaml_CDocuments_CITextHighlighter** items,
        UINT32* result);

        END_INTERFACE
    } __x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CXaml__CDocuments__CTextHighlighterVtbl;

    interface __x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CXaml__CDocuments__CTextHighlighter
    {
        CONST_VTBL struct __x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CXaml__CDocuments__CTextHighlighterVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CXaml__CDocuments__CTextHighlighter_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIIterable_1___x_ABI_CWindows__CUI__CXaml__CDocuments__CTextHighlighter_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIIterable_1___x_ABI_CWindows__CUI__CXaml__CDocuments__CTextHighlighter_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIIterable_1___x_ABI_CWindows__CUI__CXaml__CDocuments__CTextHighlighter __x_ABI_C__FIIterable_1___x_ABI_CWindows__CUI__CXaml__CDocuments__CTextHighlighter;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIIterable_1___x_ABI_CWindows__CUI__CXaml__CDocuments__CTextHighlighter;

    typedef struct __x_ABI_C__FIIterable_1___x_ABI_CWindows__CUI__CXaml__CDocuments__CTextHighlighterVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CUI__CXaml__CDocuments__CTextHighlighter* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CUI__CXaml__CDocuments__CTextHighlighter* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CUI__CXaml__CDocuments__CTextHighlighter* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CUI__CXaml__CDocuments__CTextHighlighter* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CUI__CXaml__CDocuments__CTextHighlighter* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CUI__CXaml__CDocuments__CTextHighlighter* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* First)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CUI__CXaml__CDocuments__CTextHighlighter* This,
        __x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CXaml__CDocuments__CTextHighlighter** result);

        END_INTERFACE
    } __x_ABI_C__FIIterable_1___x_ABI_CWindows__CUI__CXaml__CDocuments__CTextHighlighterVtbl;

    interface __x_ABI_C__FIIterable_1___x_ABI_CWindows__CUI__CXaml__CDocuments__CTextHighlighter
    {
        CONST_VTBL struct __x_ABI_C__FIIterable_1___x_ABI_CWindows__CUI__CXaml__CDocuments__CTextHighlighterVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIIterable_1___x_ABI_CWindows__CUI__CXaml__CDocuments__CTextHighlighter_INTERFACE_DEFINED__
    
#ifndef ____x_ABI_CWindows_CUI_CXaml_CMedia_CIBrush_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CMedia_CIBrush_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CMedia_CIBrush __x_ABI_CWindows_CUI_CXaml_CMedia_CIBrush;

#endif // ____x_ABI_CWindows_CUI_CXaml_CMedia_CIBrush_FWD_DEFINED__

#if !defined(____x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CXaml__CMedia__CBrush_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CXaml__CMedia__CBrush_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CXaml__CMedia__CBrush __x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CXaml__CMedia__CBrush;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CXaml__CMedia__CBrush;

    typedef struct __x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CXaml__CMedia__CBrushVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CXaml__CMedia__CBrush* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CXaml__CMedia__CBrush* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CXaml__CMedia__CBrush* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CXaml__CMedia__CBrush* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CXaml__CMedia__CBrush* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CXaml__CMedia__CBrush* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Current)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CXaml__CMedia__CBrush* This,
        __x_ABI_CWindows_CUI_CXaml_CMedia_CIBrush** result);
    HRESULT (STDMETHODCALLTYPE* get_HasCurrent)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CXaml__CMedia__CBrush* This,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* MoveNext)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CXaml__CMedia__CBrush* This,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CXaml__CMedia__CBrush* This,
        UINT32 itemsLength,
        __x_ABI_CWindows_CUI_CXaml_CMedia_CIBrush** items,
        UINT32* result);

        END_INTERFACE
    } __x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CXaml__CMedia__CBrushVtbl;

    interface __x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CXaml__CMedia__CBrush
    {
        CONST_VTBL struct __x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CXaml__CMedia__CBrushVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CXaml__CMedia__CBrush_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIIterable_1___x_ABI_CWindows__CUI__CXaml__CMedia__CBrush_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIIterable_1___x_ABI_CWindows__CUI__CXaml__CMedia__CBrush_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIIterable_1___x_ABI_CWindows__CUI__CXaml__CMedia__CBrush __x_ABI_C__FIIterable_1___x_ABI_CWindows__CUI__CXaml__CMedia__CBrush;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIIterable_1___x_ABI_CWindows__CUI__CXaml__CMedia__CBrush;

    typedef struct __x_ABI_C__FIIterable_1___x_ABI_CWindows__CUI__CXaml__CMedia__CBrushVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CUI__CXaml__CMedia__CBrush* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CUI__CXaml__CMedia__CBrush* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CUI__CXaml__CMedia__CBrush* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CUI__CXaml__CMedia__CBrush* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CUI__CXaml__CMedia__CBrush* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CUI__CXaml__CMedia__CBrush* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* First)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CUI__CXaml__CMedia__CBrush* This,
        __x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CXaml__CMedia__CBrush** result);

        END_INTERFACE
    } __x_ABI_C__FIIterable_1___x_ABI_CWindows__CUI__CXaml__CMedia__CBrushVtbl;

    interface __x_ABI_C__FIIterable_1___x_ABI_CWindows__CUI__CXaml__CMedia__CBrush
    {
        CONST_VTBL struct __x_ABI_C__FIIterable_1___x_ABI_CWindows__CUI__CXaml__CMedia__CBrushVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIIterable_1___x_ABI_CWindows__CUI__CXaml__CMedia__CBrush_INTERFACE_DEFINED__
    
#ifndef ____x_ABI_CWindows_CUI_CXaml_CNavigation_CIPageStackEntry_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CNavigation_CIPageStackEntry_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CNavigation_CIPageStackEntry __x_ABI_CWindows_CUI_CXaml_CNavigation_CIPageStackEntry;

#endif // ____x_ABI_CWindows_CUI_CXaml_CNavigation_CIPageStackEntry_FWD_DEFINED__

#if !defined(____x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CXaml__CNavigation__CPageStackEntry_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CXaml__CNavigation__CPageStackEntry_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CXaml__CNavigation__CPageStackEntry __x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CXaml__CNavigation__CPageStackEntry;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CXaml__CNavigation__CPageStackEntry;

    typedef struct __x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CXaml__CNavigation__CPageStackEntryVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CXaml__CNavigation__CPageStackEntry* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CXaml__CNavigation__CPageStackEntry* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CXaml__CNavigation__CPageStackEntry* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CXaml__CNavigation__CPageStackEntry* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CXaml__CNavigation__CPageStackEntry* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CXaml__CNavigation__CPageStackEntry* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Current)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CXaml__CNavigation__CPageStackEntry* This,
        __x_ABI_CWindows_CUI_CXaml_CNavigation_CIPageStackEntry** result);
    HRESULT (STDMETHODCALLTYPE* get_HasCurrent)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CXaml__CNavigation__CPageStackEntry* This,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* MoveNext)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CXaml__CNavigation__CPageStackEntry* This,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CXaml__CNavigation__CPageStackEntry* This,
        UINT32 itemsLength,
        __x_ABI_CWindows_CUI_CXaml_CNavigation_CIPageStackEntry** items,
        UINT32* result);

        END_INTERFACE
    } __x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CXaml__CNavigation__CPageStackEntryVtbl;

    interface __x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CXaml__CNavigation__CPageStackEntry
    {
        CONST_VTBL struct __x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CXaml__CNavigation__CPageStackEntryVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CXaml__CNavigation__CPageStackEntry_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIIterable_1___x_ABI_CWindows__CUI__CXaml__CNavigation__CPageStackEntry_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIIterable_1___x_ABI_CWindows__CUI__CXaml__CNavigation__CPageStackEntry_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIIterable_1___x_ABI_CWindows__CUI__CXaml__CNavigation__CPageStackEntry __x_ABI_C__FIIterable_1___x_ABI_CWindows__CUI__CXaml__CNavigation__CPageStackEntry;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIIterable_1___x_ABI_CWindows__CUI__CXaml__CNavigation__CPageStackEntry;

    typedef struct __x_ABI_C__FIIterable_1___x_ABI_CWindows__CUI__CXaml__CNavigation__CPageStackEntryVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CUI__CXaml__CNavigation__CPageStackEntry* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CUI__CXaml__CNavigation__CPageStackEntry* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CUI__CXaml__CNavigation__CPageStackEntry* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CUI__CXaml__CNavigation__CPageStackEntry* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CUI__CXaml__CNavigation__CPageStackEntry* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CUI__CXaml__CNavigation__CPageStackEntry* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* First)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CUI__CXaml__CNavigation__CPageStackEntry* This,
        __x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CXaml__CNavigation__CPageStackEntry** result);

        END_INTERFACE
    } __x_ABI_C__FIIterable_1___x_ABI_CWindows__CUI__CXaml__CNavigation__CPageStackEntryVtbl;

    interface __x_ABI_C__FIIterable_1___x_ABI_CWindows__CUI__CXaml__CNavigation__CPageStackEntry
    {
        CONST_VTBL struct __x_ABI_C__FIIterable_1___x_ABI_CWindows__CUI__CXaml__CNavigation__CPageStackEntryVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIIterable_1___x_ABI_CWindows__CUI__CXaml__CNavigation__CPageStackEntry_INTERFACE_DEFINED__
    
#ifndef ____x_ABI_CWindows_CUI_CXaml_CIUIElement_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CIUIElement_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CIUIElement __x_ABI_CWindows_CUI_CXaml_CIUIElement;

#endif // ____x_ABI_CWindows_CUI_CXaml_CIUIElement_FWD_DEFINED__

#if !defined(____x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CXaml__CUIElement_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CXaml__CUIElement_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CXaml__CUIElement __x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CXaml__CUIElement;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CXaml__CUIElement;

    typedef struct __x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CXaml__CUIElementVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CXaml__CUIElement* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CXaml__CUIElement* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CXaml__CUIElement* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CXaml__CUIElement* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CXaml__CUIElement* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CXaml__CUIElement* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Current)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CXaml__CUIElement* This,
        __x_ABI_CWindows_CUI_CXaml_CIUIElement** result);
    HRESULT (STDMETHODCALLTYPE* get_HasCurrent)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CXaml__CUIElement* This,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* MoveNext)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CXaml__CUIElement* This,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CXaml__CUIElement* This,
        UINT32 itemsLength,
        __x_ABI_CWindows_CUI_CXaml_CIUIElement** items,
        UINT32* result);

        END_INTERFACE
    } __x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CXaml__CUIElementVtbl;

    interface __x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CXaml__CUIElement
    {
        CONST_VTBL struct __x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CXaml__CUIElementVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CXaml__CUIElement_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIIterable_1___x_ABI_CWindows__CUI__CXaml__CUIElement_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIIterable_1___x_ABI_CWindows__CUI__CXaml__CUIElement_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIIterable_1___x_ABI_CWindows__CUI__CXaml__CUIElement __x_ABI_C__FIIterable_1___x_ABI_CWindows__CUI__CXaml__CUIElement;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIIterable_1___x_ABI_CWindows__CUI__CXaml__CUIElement;

    typedef struct __x_ABI_C__FIIterable_1___x_ABI_CWindows__CUI__CXaml__CUIElementVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CUI__CXaml__CUIElement* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CUI__CXaml__CUIElement* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CUI__CXaml__CUIElement* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CUI__CXaml__CUIElement* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CUI__CXaml__CUIElement* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CUI__CXaml__CUIElement* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* First)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CUI__CXaml__CUIElement* This,
        __x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CXaml__CUIElement** result);

        END_INTERFACE
    } __x_ABI_C__FIIterable_1___x_ABI_CWindows__CUI__CXaml__CUIElementVtbl;

    interface __x_ABI_C__FIIterable_1___x_ABI_CWindows__CUI__CXaml__CUIElement
    {
        CONST_VTBL struct __x_ABI_C__FIIterable_1___x_ABI_CWindows__CUI__CXaml__CUIElementVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIIterable_1___x_ABI_CWindows__CUI__CXaml__CUIElement_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIVector_1_IInspectable_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIVector_1_IInspectable_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIVector_1_IInspectable __x_ABI_C__FIVector_1_IInspectable;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIVector_1_IInspectable;

    typedef struct __x_ABI_C__FIVector_1_IInspectableVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIVector_1_IInspectable* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIVector_1_IInspectable* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIVector_1_IInspectable* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIVector_1_IInspectable* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIVector_1_IInspectable* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIVector_1_IInspectable* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* GetAt)(__x_ABI_C__FIVector_1_IInspectable* This,
        UINT32 index,
        IInspectable** result);
    HRESULT (STDMETHODCALLTYPE* get_Size)(__x_ABI_C__FIVector_1_IInspectable* This,
        UINT32* result);
    HRESULT (STDMETHODCALLTYPE* GetView)(__x_ABI_C__FIVector_1_IInspectable* This,
        __x_ABI_C__FIVectorView_1_IInspectable** result);
    HRESULT (STDMETHODCALLTYPE* IndexOf)(__x_ABI_C__FIVector_1_IInspectable* This,
        IInspectable* value,
        UINT32* index,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* SetAt)(__x_ABI_C__FIVector_1_IInspectable* This,
        UINT32 index,
        IInspectable* value);
    HRESULT (STDMETHODCALLTYPE* InsertAt)(__x_ABI_C__FIVector_1_IInspectable* This,
        UINT32 index,
        IInspectable* value);
    HRESULT (STDMETHODCALLTYPE* RemoveAt)(__x_ABI_C__FIVector_1_IInspectable* This,
        UINT32 index);
    HRESULT (STDMETHODCALLTYPE* Append)(__x_ABI_C__FIVector_1_IInspectable* This,
        IInspectable* value);
    HRESULT (STDMETHODCALLTYPE* RemoveAtEnd)(__x_ABI_C__FIVector_1_IInspectable* This);
    HRESULT (STDMETHODCALLTYPE* Clear)(__x_ABI_C__FIVector_1_IInspectable* This);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__x_ABI_C__FIVector_1_IInspectable* This,
        UINT32 startIndex,
        UINT32 itemsLength,
        IInspectable** items,
        UINT32* result);
    HRESULT (STDMETHODCALLTYPE* ReplaceAll)(__x_ABI_C__FIVector_1_IInspectable* This,
        UINT32 itemsLength,
        IInspectable** items);

        END_INTERFACE
    } __x_ABI_C__FIVector_1_IInspectableVtbl;

    interface __x_ABI_C__FIVector_1_IInspectable
    {
        CONST_VTBL struct __x_ABI_C__FIVector_1_IInspectableVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIVector_1_IInspectable_INTERFACE_DEFINED__
    
typedef interface __x_ABI_C__FIObservableVector_1_IInspectable __x_ABI_C__FIObservableVector_1_IInspectable;

#if !defined(____x_ABI_C__FVectorChangedEventHandler_1_IInspectable_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FVectorChangedEventHandler_1_IInspectable_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FVectorChangedEventHandler_1_IInspectable __x_ABI_C__FVectorChangedEventHandler_1_IInspectable;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FVectorChangedEventHandler_1_IInspectable;

    typedef struct __x_ABI_C__FVectorChangedEventHandler_1_IInspectableVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FVectorChangedEventHandler_1_IInspectable* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FVectorChangedEventHandler_1_IInspectable* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FVectorChangedEventHandler_1_IInspectable* This);
        HRESULT (STDMETHODCALLTYPE* Invoke)(__x_ABI_C__FVectorChangedEventHandler_1_IInspectable* This,
        __x_ABI_C__FIObservableVector_1_IInspectable* sender,
        __x_ABI_CWindows_CFoundation_CCollections_CIVectorChangedEventArgs* event);

        END_INTERFACE
    } __x_ABI_C__FVectorChangedEventHandler_1_IInspectableVtbl;

    interface __x_ABI_C__FVectorChangedEventHandler_1_IInspectable
    {
        CONST_VTBL struct __x_ABI_C__FVectorChangedEventHandler_1_IInspectableVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FVectorChangedEventHandler_1_IInspectable_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIObservableVector_1_IInspectable_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIObservableVector_1_IInspectable_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIObservableVector_1_IInspectable __x_ABI_C__FIObservableVector_1_IInspectable;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIObservableVector_1_IInspectable;

    typedef struct __x_ABI_C__FIObservableVector_1_IInspectableVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIObservableVector_1_IInspectable* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIObservableVector_1_IInspectable* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIObservableVector_1_IInspectable* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIObservableVector_1_IInspectable* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIObservableVector_1_IInspectable* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIObservableVector_1_IInspectable* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* add_VectorChanged)(__x_ABI_C__FIObservableVector_1_IInspectable* This,
        __x_ABI_C__FVectorChangedEventHandler_1_IInspectable* vhnd,
        EventRegistrationToken* result);
    HRESULT (STDMETHODCALLTYPE* remove_VectorChanged)(__x_ABI_C__FIObservableVector_1_IInspectable* This,
        EventRegistrationToken token);

        END_INTERFACE
    } __x_ABI_C__FIObservableVector_1_IInspectableVtbl;

    interface __x_ABI_C__FIObservableVector_1_IInspectable
    {
        CONST_VTBL struct __x_ABI_C__FIObservableVector_1_IInspectableVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIObservableVector_1_IInspectable_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CXaml__CControls__CGroupStyle_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CXaml__CControls__CGroupStyle_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CXaml__CControls__CGroupStyle __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CXaml__CControls__CGroupStyle;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CXaml__CControls__CGroupStyle;

    typedef struct __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CXaml__CControls__CGroupStyleVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CXaml__CControls__CGroupStyle* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CXaml__CControls__CGroupStyle* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CXaml__CControls__CGroupStyle* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CXaml__CControls__CGroupStyle* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CXaml__CControls__CGroupStyle* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CXaml__CControls__CGroupStyle* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* GetAt)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CXaml__CControls__CGroupStyle* This,
        UINT32 index,
        __x_ABI_CWindows_CUI_CXaml_CControls_CIGroupStyle** result);
    HRESULT (STDMETHODCALLTYPE* get_Size)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CXaml__CControls__CGroupStyle* This,
        UINT32* result);
    HRESULT (STDMETHODCALLTYPE* IndexOf)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CXaml__CControls__CGroupStyle* This,
        __x_ABI_CWindows_CUI_CXaml_CControls_CIGroupStyle* value,
        UINT32* index,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CXaml__CControls__CGroupStyle* This,
        UINT32 startIndex,
        UINT32 itemsLength,
        __x_ABI_CWindows_CUI_CXaml_CControls_CIGroupStyle** items,
        UINT32* result);

        END_INTERFACE
    } __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CXaml__CControls__CGroupStyleVtbl;

    interface __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CXaml__CControls__CGroupStyle
    {
        CONST_VTBL struct __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CXaml__CControls__CGroupStyleVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CXaml__CControls__CGroupStyle_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CXaml__CControls__CGroupStyle_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CXaml__CControls__CGroupStyle_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CXaml__CControls__CGroupStyle __x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CXaml__CControls__CGroupStyle;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CXaml__CControls__CGroupStyle;

    typedef struct __x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CXaml__CControls__CGroupStyleVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CXaml__CControls__CGroupStyle* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CXaml__CControls__CGroupStyle* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CXaml__CControls__CGroupStyle* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CXaml__CControls__CGroupStyle* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CXaml__CControls__CGroupStyle* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CXaml__CControls__CGroupStyle* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* GetAt)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CXaml__CControls__CGroupStyle* This,
        UINT32 index,
        __x_ABI_CWindows_CUI_CXaml_CControls_CIGroupStyle** result);
    HRESULT (STDMETHODCALLTYPE* get_Size)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CXaml__CControls__CGroupStyle* This,
        UINT32* result);
    HRESULT (STDMETHODCALLTYPE* GetView)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CXaml__CControls__CGroupStyle* This,
        __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CXaml__CControls__CGroupStyle** result);
    HRESULT (STDMETHODCALLTYPE* IndexOf)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CXaml__CControls__CGroupStyle* This,
        __x_ABI_CWindows_CUI_CXaml_CControls_CIGroupStyle* value,
        UINT32* index,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* SetAt)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CXaml__CControls__CGroupStyle* This,
        UINT32 index,
        __x_ABI_CWindows_CUI_CXaml_CControls_CIGroupStyle* value);
    HRESULT (STDMETHODCALLTYPE* InsertAt)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CXaml__CControls__CGroupStyle* This,
        UINT32 index,
        __x_ABI_CWindows_CUI_CXaml_CControls_CIGroupStyle* value);
    HRESULT (STDMETHODCALLTYPE* RemoveAt)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CXaml__CControls__CGroupStyle* This,
        UINT32 index);
    HRESULT (STDMETHODCALLTYPE* Append)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CXaml__CControls__CGroupStyle* This,
        __x_ABI_CWindows_CUI_CXaml_CControls_CIGroupStyle* value);
    HRESULT (STDMETHODCALLTYPE* RemoveAtEnd)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CXaml__CControls__CGroupStyle* This);
    HRESULT (STDMETHODCALLTYPE* Clear)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CXaml__CControls__CGroupStyle* This);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CXaml__CControls__CGroupStyle* This,
        UINT32 startIndex,
        UINT32 itemsLength,
        __x_ABI_CWindows_CUI_CXaml_CControls_CIGroupStyle** items,
        UINT32* result);
    HRESULT (STDMETHODCALLTYPE* ReplaceAll)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CXaml__CControls__CGroupStyle* This,
        UINT32 itemsLength,
        __x_ABI_CWindows_CUI_CXaml_CControls_CIGroupStyle** items);

        END_INTERFACE
    } __x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CXaml__CControls__CGroupStyleVtbl;

    interface __x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CXaml__CControls__CGroupStyle
    {
        CONST_VTBL struct __x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CXaml__CControls__CGroupStyleVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CXaml__CControls__CGroupStyle_INTERFACE_DEFINED__
    
typedef interface __x_ABI_C__FIObservableVector_1___x_ABI_CWindows__CUI__CXaml__CControls__CGroupStyle __x_ABI_C__FIObservableVector_1___x_ABI_CWindows__CUI__CXaml__CControls__CGroupStyle;

#if !defined(____x_ABI_C__FVectorChangedEventHandler_1___x_ABI_CWindows__CUI__CXaml__CControls__CGroupStyle_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FVectorChangedEventHandler_1___x_ABI_CWindows__CUI__CXaml__CControls__CGroupStyle_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FVectorChangedEventHandler_1___x_ABI_CWindows__CUI__CXaml__CControls__CGroupStyle __x_ABI_C__FVectorChangedEventHandler_1___x_ABI_CWindows__CUI__CXaml__CControls__CGroupStyle;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FVectorChangedEventHandler_1___x_ABI_CWindows__CUI__CXaml__CControls__CGroupStyle;

    typedef struct __x_ABI_C__FVectorChangedEventHandler_1___x_ABI_CWindows__CUI__CXaml__CControls__CGroupStyleVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FVectorChangedEventHandler_1___x_ABI_CWindows__CUI__CXaml__CControls__CGroupStyle* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FVectorChangedEventHandler_1___x_ABI_CWindows__CUI__CXaml__CControls__CGroupStyle* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FVectorChangedEventHandler_1___x_ABI_CWindows__CUI__CXaml__CControls__CGroupStyle* This);
        HRESULT (STDMETHODCALLTYPE* Invoke)(__x_ABI_C__FVectorChangedEventHandler_1___x_ABI_CWindows__CUI__CXaml__CControls__CGroupStyle* This,
        __x_ABI_C__FIObservableVector_1___x_ABI_CWindows__CUI__CXaml__CControls__CGroupStyle* sender,
        __x_ABI_CWindows_CFoundation_CCollections_CIVectorChangedEventArgs* event);

        END_INTERFACE
    } __x_ABI_C__FVectorChangedEventHandler_1___x_ABI_CWindows__CUI__CXaml__CControls__CGroupStyleVtbl;

    interface __x_ABI_C__FVectorChangedEventHandler_1___x_ABI_CWindows__CUI__CXaml__CControls__CGroupStyle
    {
        CONST_VTBL struct __x_ABI_C__FVectorChangedEventHandler_1___x_ABI_CWindows__CUI__CXaml__CControls__CGroupStyleVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FVectorChangedEventHandler_1___x_ABI_CWindows__CUI__CXaml__CControls__CGroupStyle_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIObservableVector_1___x_ABI_CWindows__CUI__CXaml__CControls__CGroupStyle_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIObservableVector_1___x_ABI_CWindows__CUI__CXaml__CControls__CGroupStyle_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIObservableVector_1___x_ABI_CWindows__CUI__CXaml__CControls__CGroupStyle __x_ABI_C__FIObservableVector_1___x_ABI_CWindows__CUI__CXaml__CControls__CGroupStyle;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIObservableVector_1___x_ABI_CWindows__CUI__CXaml__CControls__CGroupStyle;

    typedef struct __x_ABI_C__FIObservableVector_1___x_ABI_CWindows__CUI__CXaml__CControls__CGroupStyleVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIObservableVector_1___x_ABI_CWindows__CUI__CXaml__CControls__CGroupStyle* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIObservableVector_1___x_ABI_CWindows__CUI__CXaml__CControls__CGroupStyle* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIObservableVector_1___x_ABI_CWindows__CUI__CXaml__CControls__CGroupStyle* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIObservableVector_1___x_ABI_CWindows__CUI__CXaml__CControls__CGroupStyle* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIObservableVector_1___x_ABI_CWindows__CUI__CXaml__CControls__CGroupStyle* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIObservableVector_1___x_ABI_CWindows__CUI__CXaml__CControls__CGroupStyle* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* add_VectorChanged)(__x_ABI_C__FIObservableVector_1___x_ABI_CWindows__CUI__CXaml__CControls__CGroupStyle* This,
        __x_ABI_C__FVectorChangedEventHandler_1___x_ABI_CWindows__CUI__CXaml__CControls__CGroupStyle* vhnd,
        EventRegistrationToken* result);
    HRESULT (STDMETHODCALLTYPE* remove_VectorChanged)(__x_ABI_C__FIObservableVector_1___x_ABI_CWindows__CUI__CXaml__CControls__CGroupStyle* This,
        EventRegistrationToken token);

        END_INTERFACE
    } __x_ABI_C__FIObservableVector_1___x_ABI_CWindows__CUI__CXaml__CControls__CGroupStyleVtbl;

    interface __x_ABI_C__FIObservableVector_1___x_ABI_CWindows__CUI__CXaml__CControls__CGroupStyle
    {
        CONST_VTBL struct __x_ABI_C__FIObservableVector_1___x_ABI_CWindows__CUI__CXaml__CControls__CGroupStyleVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIObservableVector_1___x_ABI_CWindows__CUI__CXaml__CControls__CGroupStyle_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CXaml__CControls__CICommandBarElement_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CXaml__CControls__CICommandBarElement_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CXaml__CControls__CICommandBarElement __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CXaml__CControls__CICommandBarElement;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CXaml__CControls__CICommandBarElement;

    typedef struct __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CXaml__CControls__CICommandBarElementVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CXaml__CControls__CICommandBarElement* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CXaml__CControls__CICommandBarElement* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CXaml__CControls__CICommandBarElement* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CXaml__CControls__CICommandBarElement* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CXaml__CControls__CICommandBarElement* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CXaml__CControls__CICommandBarElement* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* GetAt)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CXaml__CControls__CICommandBarElement* This,
        UINT32 index,
        __x_ABI_CWindows_CUI_CXaml_CControls_CICommandBarElement** result);
    HRESULT (STDMETHODCALLTYPE* get_Size)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CXaml__CControls__CICommandBarElement* This,
        UINT32* result);
    HRESULT (STDMETHODCALLTYPE* IndexOf)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CXaml__CControls__CICommandBarElement* This,
        __x_ABI_CWindows_CUI_CXaml_CControls_CICommandBarElement* value,
        UINT32* index,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CXaml__CControls__CICommandBarElement* This,
        UINT32 startIndex,
        UINT32 itemsLength,
        __x_ABI_CWindows_CUI_CXaml_CControls_CICommandBarElement** items,
        UINT32* result);

        END_INTERFACE
    } __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CXaml__CControls__CICommandBarElementVtbl;

    interface __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CXaml__CControls__CICommandBarElement
    {
        CONST_VTBL struct __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CXaml__CControls__CICommandBarElementVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CXaml__CControls__CICommandBarElement_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CXaml__CControls__CICommandBarElement_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CXaml__CControls__CICommandBarElement_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CXaml__CControls__CICommandBarElement __x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CXaml__CControls__CICommandBarElement;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CXaml__CControls__CICommandBarElement;

    typedef struct __x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CXaml__CControls__CICommandBarElementVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CXaml__CControls__CICommandBarElement* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CXaml__CControls__CICommandBarElement* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CXaml__CControls__CICommandBarElement* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CXaml__CControls__CICommandBarElement* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CXaml__CControls__CICommandBarElement* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CXaml__CControls__CICommandBarElement* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* GetAt)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CXaml__CControls__CICommandBarElement* This,
        UINT32 index,
        __x_ABI_CWindows_CUI_CXaml_CControls_CICommandBarElement** result);
    HRESULT (STDMETHODCALLTYPE* get_Size)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CXaml__CControls__CICommandBarElement* This,
        UINT32* result);
    HRESULT (STDMETHODCALLTYPE* GetView)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CXaml__CControls__CICommandBarElement* This,
        __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CXaml__CControls__CICommandBarElement** result);
    HRESULT (STDMETHODCALLTYPE* IndexOf)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CXaml__CControls__CICommandBarElement* This,
        __x_ABI_CWindows_CUI_CXaml_CControls_CICommandBarElement* value,
        UINT32* index,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* SetAt)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CXaml__CControls__CICommandBarElement* This,
        UINT32 index,
        __x_ABI_CWindows_CUI_CXaml_CControls_CICommandBarElement* value);
    HRESULT (STDMETHODCALLTYPE* InsertAt)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CXaml__CControls__CICommandBarElement* This,
        UINT32 index,
        __x_ABI_CWindows_CUI_CXaml_CControls_CICommandBarElement* value);
    HRESULT (STDMETHODCALLTYPE* RemoveAt)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CXaml__CControls__CICommandBarElement* This,
        UINT32 index);
    HRESULT (STDMETHODCALLTYPE* Append)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CXaml__CControls__CICommandBarElement* This,
        __x_ABI_CWindows_CUI_CXaml_CControls_CICommandBarElement* value);
    HRESULT (STDMETHODCALLTYPE* RemoveAtEnd)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CXaml__CControls__CICommandBarElement* This);
    HRESULT (STDMETHODCALLTYPE* Clear)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CXaml__CControls__CICommandBarElement* This);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CXaml__CControls__CICommandBarElement* This,
        UINT32 startIndex,
        UINT32 itemsLength,
        __x_ABI_CWindows_CUI_CXaml_CControls_CICommandBarElement** items,
        UINT32* result);
    HRESULT (STDMETHODCALLTYPE* ReplaceAll)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CXaml__CControls__CICommandBarElement* This,
        UINT32 itemsLength,
        __x_ABI_CWindows_CUI_CXaml_CControls_CICommandBarElement** items);

        END_INTERFACE
    } __x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CXaml__CControls__CICommandBarElementVtbl;

    interface __x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CXaml__CControls__CICommandBarElement
    {
        CONST_VTBL struct __x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CXaml__CControls__CICommandBarElementVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CXaml__CControls__CICommandBarElement_INTERFACE_DEFINED__
    
typedef interface __x_ABI_C__FIObservableVector_1___x_ABI_CWindows__CUI__CXaml__CControls__CICommandBarElement __x_ABI_C__FIObservableVector_1___x_ABI_CWindows__CUI__CXaml__CControls__CICommandBarElement;

#if !defined(____x_ABI_C__FVectorChangedEventHandler_1___x_ABI_CWindows__CUI__CXaml__CControls__CICommandBarElement_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FVectorChangedEventHandler_1___x_ABI_CWindows__CUI__CXaml__CControls__CICommandBarElement_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FVectorChangedEventHandler_1___x_ABI_CWindows__CUI__CXaml__CControls__CICommandBarElement __x_ABI_C__FVectorChangedEventHandler_1___x_ABI_CWindows__CUI__CXaml__CControls__CICommandBarElement;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FVectorChangedEventHandler_1___x_ABI_CWindows__CUI__CXaml__CControls__CICommandBarElement;

    typedef struct __x_ABI_C__FVectorChangedEventHandler_1___x_ABI_CWindows__CUI__CXaml__CControls__CICommandBarElementVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FVectorChangedEventHandler_1___x_ABI_CWindows__CUI__CXaml__CControls__CICommandBarElement* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FVectorChangedEventHandler_1___x_ABI_CWindows__CUI__CXaml__CControls__CICommandBarElement* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FVectorChangedEventHandler_1___x_ABI_CWindows__CUI__CXaml__CControls__CICommandBarElement* This);
        HRESULT (STDMETHODCALLTYPE* Invoke)(__x_ABI_C__FVectorChangedEventHandler_1___x_ABI_CWindows__CUI__CXaml__CControls__CICommandBarElement* This,
        __x_ABI_C__FIObservableVector_1___x_ABI_CWindows__CUI__CXaml__CControls__CICommandBarElement* sender,
        __x_ABI_CWindows_CFoundation_CCollections_CIVectorChangedEventArgs* event);

        END_INTERFACE
    } __x_ABI_C__FVectorChangedEventHandler_1___x_ABI_CWindows__CUI__CXaml__CControls__CICommandBarElementVtbl;

    interface __x_ABI_C__FVectorChangedEventHandler_1___x_ABI_CWindows__CUI__CXaml__CControls__CICommandBarElement
    {
        CONST_VTBL struct __x_ABI_C__FVectorChangedEventHandler_1___x_ABI_CWindows__CUI__CXaml__CControls__CICommandBarElementVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FVectorChangedEventHandler_1___x_ABI_CWindows__CUI__CXaml__CControls__CICommandBarElement_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIObservableVector_1___x_ABI_CWindows__CUI__CXaml__CControls__CICommandBarElement_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIObservableVector_1___x_ABI_CWindows__CUI__CXaml__CControls__CICommandBarElement_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIObservableVector_1___x_ABI_CWindows__CUI__CXaml__CControls__CICommandBarElement __x_ABI_C__FIObservableVector_1___x_ABI_CWindows__CUI__CXaml__CControls__CICommandBarElement;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIObservableVector_1___x_ABI_CWindows__CUI__CXaml__CControls__CICommandBarElement;

    typedef struct __x_ABI_C__FIObservableVector_1___x_ABI_CWindows__CUI__CXaml__CControls__CICommandBarElementVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIObservableVector_1___x_ABI_CWindows__CUI__CXaml__CControls__CICommandBarElement* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIObservableVector_1___x_ABI_CWindows__CUI__CXaml__CControls__CICommandBarElement* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIObservableVector_1___x_ABI_CWindows__CUI__CXaml__CControls__CICommandBarElement* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIObservableVector_1___x_ABI_CWindows__CUI__CXaml__CControls__CICommandBarElement* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIObservableVector_1___x_ABI_CWindows__CUI__CXaml__CControls__CICommandBarElement* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIObservableVector_1___x_ABI_CWindows__CUI__CXaml__CControls__CICommandBarElement* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* add_VectorChanged)(__x_ABI_C__FIObservableVector_1___x_ABI_CWindows__CUI__CXaml__CControls__CICommandBarElement* This,
        __x_ABI_C__FVectorChangedEventHandler_1___x_ABI_CWindows__CUI__CXaml__CControls__CICommandBarElement* vhnd,
        EventRegistrationToken* result);
    HRESULT (STDMETHODCALLTYPE* remove_VectorChanged)(__x_ABI_C__FIObservableVector_1___x_ABI_CWindows__CUI__CXaml__CControls__CICommandBarElement* This,
        EventRegistrationToken token);

        END_INTERFACE
    } __x_ABI_C__FIObservableVector_1___x_ABI_CWindows__CUI__CXaml__CControls__CICommandBarElementVtbl;

    interface __x_ABI_C__FIObservableVector_1___x_ABI_CWindows__CUI__CXaml__CControls__CICommandBarElement
    {
        CONST_VTBL struct __x_ABI_C__FIObservableVector_1___x_ABI_CWindows__CUI__CXaml__CControls__CICommandBarElementVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIObservableVector_1___x_ABI_CWindows__CUI__CXaml__CControls__CICommandBarElement_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIVectorView_1_float_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIVectorView_1_float_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIVectorView_1_float __x_ABI_C__FIVectorView_1_float;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIVectorView_1_float;

    typedef struct __x_ABI_C__FIVectorView_1_floatVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIVectorView_1_float* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIVectorView_1_float* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIVectorView_1_float* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIVectorView_1_float* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIVectorView_1_float* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIVectorView_1_float* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* GetAt)(__x_ABI_C__FIVectorView_1_float* This,
        UINT32 index,
        FLOAT* result);
    HRESULT (STDMETHODCALLTYPE* get_Size)(__x_ABI_C__FIVectorView_1_float* This,
        UINT32* result);
    HRESULT (STDMETHODCALLTYPE* IndexOf)(__x_ABI_C__FIVectorView_1_float* This,
        FLOAT value,
        UINT32* index,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__x_ABI_C__FIVectorView_1_float* This,
        UINT32 startIndex,
        UINT32 itemsLength,
        FLOAT* items,
        UINT32* result);

        END_INTERFACE
    } __x_ABI_C__FIVectorView_1_floatVtbl;

    interface __x_ABI_C__FIVectorView_1_float
    {
        CONST_VTBL struct __x_ABI_C__FIVectorView_1_floatVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIVectorView_1_float_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIVectorView_1___x_ABI_CWindows__CFoundation__CDateTime_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIVectorView_1___x_ABI_CWindows__CFoundation__CDateTime_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CFoundation__CDateTime __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CFoundation__CDateTime;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CFoundation__CDateTime;

    typedef struct __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CFoundation__CDateTimeVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CFoundation__CDateTime* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CFoundation__CDateTime* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CFoundation__CDateTime* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CFoundation__CDateTime* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CFoundation__CDateTime* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CFoundation__CDateTime* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* GetAt)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CFoundation__CDateTime* This,
        UINT32 index,
        struct __x_ABI_CWindows_CFoundation_CDateTime* result);
    HRESULT (STDMETHODCALLTYPE* get_Size)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CFoundation__CDateTime* This,
        UINT32* result);
    HRESULT (STDMETHODCALLTYPE* IndexOf)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CFoundation__CDateTime* This,
        struct __x_ABI_CWindows_CFoundation_CDateTime value,
        UINT32* index,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CFoundation__CDateTime* This,
        UINT32 startIndex,
        UINT32 itemsLength,
        struct __x_ABI_CWindows_CFoundation_CDateTime* items,
        UINT32* result);

        END_INTERFACE
    } __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CFoundation__CDateTimeVtbl;

    interface __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CFoundation__CDateTime
    {
        CONST_VTBL struct __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CFoundation__CDateTimeVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIVectorView_1___x_ABI_CWindows__CFoundation__CDateTime_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIVectorView_1___x_ABI_CWindows__CFoundation__CUri_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIVectorView_1___x_ABI_CWindows__CFoundation__CUri_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CFoundation__CUri __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CFoundation__CUri;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CFoundation__CUri;

    typedef struct __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CFoundation__CUriVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CFoundation__CUri* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CFoundation__CUri* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CFoundation__CUri* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CFoundation__CUri* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CFoundation__CUri* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CFoundation__CUri* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* GetAt)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CFoundation__CUri* This,
        UINT32 index,
        __x_ABI_CWindows_CFoundation_CIUriRuntimeClass** result);
    HRESULT (STDMETHODCALLTYPE* get_Size)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CFoundation__CUri* This,
        UINT32* result);
    HRESULT (STDMETHODCALLTYPE* IndexOf)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CFoundation__CUri* This,
        __x_ABI_CWindows_CFoundation_CIUriRuntimeClass* value,
        UINT32* index,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CFoundation__CUri* This,
        UINT32 startIndex,
        UINT32 itemsLength,
        __x_ABI_CWindows_CFoundation_CIUriRuntimeClass** items,
        UINT32* result);

        END_INTERFACE
    } __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CFoundation__CUriVtbl;

    interface __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CFoundation__CUri
    {
        CONST_VTBL struct __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CFoundation__CUriVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIVectorView_1___x_ABI_CWindows__CFoundation__CUri_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CXaml__CControls__CColumnDefinition_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CXaml__CControls__CColumnDefinition_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CXaml__CControls__CColumnDefinition __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CXaml__CControls__CColumnDefinition;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CXaml__CControls__CColumnDefinition;

    typedef struct __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CXaml__CControls__CColumnDefinitionVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CXaml__CControls__CColumnDefinition* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CXaml__CControls__CColumnDefinition* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CXaml__CControls__CColumnDefinition* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CXaml__CControls__CColumnDefinition* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CXaml__CControls__CColumnDefinition* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CXaml__CControls__CColumnDefinition* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* GetAt)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CXaml__CControls__CColumnDefinition* This,
        UINT32 index,
        __x_ABI_CWindows_CUI_CXaml_CControls_CIColumnDefinition** result);
    HRESULT (STDMETHODCALLTYPE* get_Size)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CXaml__CControls__CColumnDefinition* This,
        UINT32* result);
    HRESULT (STDMETHODCALLTYPE* IndexOf)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CXaml__CControls__CColumnDefinition* This,
        __x_ABI_CWindows_CUI_CXaml_CControls_CIColumnDefinition* value,
        UINT32* index,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CXaml__CControls__CColumnDefinition* This,
        UINT32 startIndex,
        UINT32 itemsLength,
        __x_ABI_CWindows_CUI_CXaml_CControls_CIColumnDefinition** items,
        UINT32* result);

        END_INTERFACE
    } __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CXaml__CControls__CColumnDefinitionVtbl;

    interface __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CXaml__CControls__CColumnDefinition
    {
        CONST_VTBL struct __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CXaml__CControls__CColumnDefinitionVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CXaml__CControls__CColumnDefinition_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CXaml__CControls__CHubSection_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CXaml__CControls__CHubSection_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CXaml__CControls__CHubSection __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CXaml__CControls__CHubSection;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CXaml__CControls__CHubSection;

    typedef struct __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CXaml__CControls__CHubSectionVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CXaml__CControls__CHubSection* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CXaml__CControls__CHubSection* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CXaml__CControls__CHubSection* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CXaml__CControls__CHubSection* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CXaml__CControls__CHubSection* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CXaml__CControls__CHubSection* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* GetAt)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CXaml__CControls__CHubSection* This,
        UINT32 index,
        __x_ABI_CWindows_CUI_CXaml_CControls_CIHubSection** result);
    HRESULT (STDMETHODCALLTYPE* get_Size)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CXaml__CControls__CHubSection* This,
        UINT32* result);
    HRESULT (STDMETHODCALLTYPE* IndexOf)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CXaml__CControls__CHubSection* This,
        __x_ABI_CWindows_CUI_CXaml_CControls_CIHubSection* value,
        UINT32* index,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CXaml__CControls__CHubSection* This,
        UINT32 startIndex,
        UINT32 itemsLength,
        __x_ABI_CWindows_CUI_CXaml_CControls_CIHubSection** items,
        UINT32* result);

        END_INTERFACE
    } __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CXaml__CControls__CHubSectionVtbl;

    interface __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CXaml__CControls__CHubSection
    {
        CONST_VTBL struct __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CXaml__CControls__CHubSectionVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CXaml__CControls__CHubSection_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CXaml__CControls__CMenuBarItem_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CXaml__CControls__CMenuBarItem_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CXaml__CControls__CMenuBarItem __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CXaml__CControls__CMenuBarItem;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CXaml__CControls__CMenuBarItem;

    typedef struct __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CXaml__CControls__CMenuBarItemVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CXaml__CControls__CMenuBarItem* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CXaml__CControls__CMenuBarItem* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CXaml__CControls__CMenuBarItem* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CXaml__CControls__CMenuBarItem* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CXaml__CControls__CMenuBarItem* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CXaml__CControls__CMenuBarItem* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* GetAt)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CXaml__CControls__CMenuBarItem* This,
        UINT32 index,
        __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuBarItem** result);
    HRESULT (STDMETHODCALLTYPE* get_Size)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CXaml__CControls__CMenuBarItem* This,
        UINT32* result);
    HRESULT (STDMETHODCALLTYPE* IndexOf)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CXaml__CControls__CMenuBarItem* This,
        __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuBarItem* value,
        UINT32* index,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CXaml__CControls__CMenuBarItem* This,
        UINT32 startIndex,
        UINT32 itemsLength,
        __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuBarItem** items,
        UINT32* result);

        END_INTERFACE
    } __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CXaml__CControls__CMenuBarItemVtbl;

    interface __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CXaml__CControls__CMenuBarItem
    {
        CONST_VTBL struct __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CXaml__CControls__CMenuBarItemVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CXaml__CControls__CMenuBarItem_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CXaml__CControls__CMenuFlyoutItemBase_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CXaml__CControls__CMenuFlyoutItemBase_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CXaml__CControls__CMenuFlyoutItemBase __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CXaml__CControls__CMenuFlyoutItemBase;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CXaml__CControls__CMenuFlyoutItemBase;

    typedef struct __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CXaml__CControls__CMenuFlyoutItemBaseVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CXaml__CControls__CMenuFlyoutItemBase* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CXaml__CControls__CMenuFlyoutItemBase* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CXaml__CControls__CMenuFlyoutItemBase* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CXaml__CControls__CMenuFlyoutItemBase* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CXaml__CControls__CMenuFlyoutItemBase* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CXaml__CControls__CMenuFlyoutItemBase* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* GetAt)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CXaml__CControls__CMenuFlyoutItemBase* This,
        UINT32 index,
        __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutItemBase** result);
    HRESULT (STDMETHODCALLTYPE* get_Size)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CXaml__CControls__CMenuFlyoutItemBase* This,
        UINT32* result);
    HRESULT (STDMETHODCALLTYPE* IndexOf)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CXaml__CControls__CMenuFlyoutItemBase* This,
        __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutItemBase* value,
        UINT32* index,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CXaml__CControls__CMenuFlyoutItemBase* This,
        UINT32 startIndex,
        UINT32 itemsLength,
        __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutItemBase** items,
        UINT32* result);

        END_INTERFACE
    } __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CXaml__CControls__CMenuFlyoutItemBaseVtbl;

    interface __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CXaml__CControls__CMenuFlyoutItemBase
    {
        CONST_VTBL struct __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CXaml__CControls__CMenuFlyoutItemBaseVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CXaml__CControls__CMenuFlyoutItemBase_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CXaml__CControls__CRowDefinition_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CXaml__CControls__CRowDefinition_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CXaml__CControls__CRowDefinition __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CXaml__CControls__CRowDefinition;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CXaml__CControls__CRowDefinition;

    typedef struct __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CXaml__CControls__CRowDefinitionVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CXaml__CControls__CRowDefinition* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CXaml__CControls__CRowDefinition* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CXaml__CControls__CRowDefinition* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CXaml__CControls__CRowDefinition* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CXaml__CControls__CRowDefinition* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CXaml__CControls__CRowDefinition* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* GetAt)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CXaml__CControls__CRowDefinition* This,
        UINT32 index,
        __x_ABI_CWindows_CUI_CXaml_CControls_CIRowDefinition** result);
    HRESULT (STDMETHODCALLTYPE* get_Size)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CXaml__CControls__CRowDefinition* This,
        UINT32* result);
    HRESULT (STDMETHODCALLTYPE* IndexOf)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CXaml__CControls__CRowDefinition* This,
        __x_ABI_CWindows_CUI_CXaml_CControls_CIRowDefinition* value,
        UINT32* index,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CXaml__CControls__CRowDefinition* This,
        UINT32 startIndex,
        UINT32 itemsLength,
        __x_ABI_CWindows_CUI_CXaml_CControls_CIRowDefinition** items,
        UINT32* result);

        END_INTERFACE
    } __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CXaml__CControls__CRowDefinitionVtbl;

    interface __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CXaml__CControls__CRowDefinition
    {
        CONST_VTBL struct __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CXaml__CControls__CRowDefinitionVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CXaml__CControls__CRowDefinition_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CXaml__CControls__CSwipeItem_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CXaml__CControls__CSwipeItem_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CXaml__CControls__CSwipeItem __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CXaml__CControls__CSwipeItem;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CXaml__CControls__CSwipeItem;

    typedef struct __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CXaml__CControls__CSwipeItemVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CXaml__CControls__CSwipeItem* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CXaml__CControls__CSwipeItem* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CXaml__CControls__CSwipeItem* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CXaml__CControls__CSwipeItem* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CXaml__CControls__CSwipeItem* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CXaml__CControls__CSwipeItem* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* GetAt)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CXaml__CControls__CSwipeItem* This,
        UINT32 index,
        __x_ABI_CWindows_CUI_CXaml_CControls_CISwipeItem** result);
    HRESULT (STDMETHODCALLTYPE* get_Size)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CXaml__CControls__CSwipeItem* This,
        UINT32* result);
    HRESULT (STDMETHODCALLTYPE* IndexOf)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CXaml__CControls__CSwipeItem* This,
        __x_ABI_CWindows_CUI_CXaml_CControls_CISwipeItem* value,
        UINT32* index,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CXaml__CControls__CSwipeItem* This,
        UINT32 startIndex,
        UINT32 itemsLength,
        __x_ABI_CWindows_CUI_CXaml_CControls_CISwipeItem** items,
        UINT32* result);

        END_INTERFACE
    } __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CXaml__CControls__CSwipeItemVtbl;

    interface __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CXaml__CControls__CSwipeItem
    {
        CONST_VTBL struct __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CXaml__CControls__CSwipeItemVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CXaml__CControls__CSwipeItem_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CXaml__CControls__CTreeViewNode_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CXaml__CControls__CTreeViewNode_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CXaml__CControls__CTreeViewNode __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CXaml__CControls__CTreeViewNode;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CXaml__CControls__CTreeViewNode;

    typedef struct __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CXaml__CControls__CTreeViewNodeVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CXaml__CControls__CTreeViewNode* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CXaml__CControls__CTreeViewNode* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CXaml__CControls__CTreeViewNode* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CXaml__CControls__CTreeViewNode* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CXaml__CControls__CTreeViewNode* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CXaml__CControls__CTreeViewNode* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* GetAt)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CXaml__CControls__CTreeViewNode* This,
        UINT32 index,
        __x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewNode** result);
    HRESULT (STDMETHODCALLTYPE* get_Size)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CXaml__CControls__CTreeViewNode* This,
        UINT32* result);
    HRESULT (STDMETHODCALLTYPE* IndexOf)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CXaml__CControls__CTreeViewNode* This,
        __x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewNode* value,
        UINT32* index,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CXaml__CControls__CTreeViewNode* This,
        UINT32 startIndex,
        UINT32 itemsLength,
        __x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewNode** items,
        UINT32* result);

        END_INTERFACE
    } __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CXaml__CControls__CTreeViewNodeVtbl;

    interface __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CXaml__CControls__CTreeViewNode
    {
        CONST_VTBL struct __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CXaml__CControls__CTreeViewNodeVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CXaml__CControls__CTreeViewNode_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CXaml__CControls__CWebViewDeferredPermissionRequest_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CXaml__CControls__CWebViewDeferredPermissionRequest_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CXaml__CControls__CWebViewDeferredPermissionRequest __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CXaml__CControls__CWebViewDeferredPermissionRequest;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CXaml__CControls__CWebViewDeferredPermissionRequest;

    typedef struct __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CXaml__CControls__CWebViewDeferredPermissionRequestVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CXaml__CControls__CWebViewDeferredPermissionRequest* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CXaml__CControls__CWebViewDeferredPermissionRequest* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CXaml__CControls__CWebViewDeferredPermissionRequest* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CXaml__CControls__CWebViewDeferredPermissionRequest* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CXaml__CControls__CWebViewDeferredPermissionRequest* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CXaml__CControls__CWebViewDeferredPermissionRequest* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* GetAt)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CXaml__CControls__CWebViewDeferredPermissionRequest* This,
        UINT32 index,
        __x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewDeferredPermissionRequest** result);
    HRESULT (STDMETHODCALLTYPE* get_Size)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CXaml__CControls__CWebViewDeferredPermissionRequest* This,
        UINT32* result);
    HRESULT (STDMETHODCALLTYPE* IndexOf)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CXaml__CControls__CWebViewDeferredPermissionRequest* This,
        __x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewDeferredPermissionRequest* value,
        UINT32* index,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CXaml__CControls__CWebViewDeferredPermissionRequest* This,
        UINT32 startIndex,
        UINT32 itemsLength,
        __x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewDeferredPermissionRequest** items,
        UINT32* result);

        END_INTERFACE
    } __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CXaml__CControls__CWebViewDeferredPermissionRequestVtbl;

    interface __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CXaml__CControls__CWebViewDeferredPermissionRequest
    {
        CONST_VTBL struct __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CXaml__CControls__CWebViewDeferredPermissionRequestVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CXaml__CControls__CWebViewDeferredPermissionRequest_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CXaml__CData__CItemIndexRange_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CXaml__CData__CItemIndexRange_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CXaml__CData__CItemIndexRange __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CXaml__CData__CItemIndexRange;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CXaml__CData__CItemIndexRange;

    typedef struct __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CXaml__CData__CItemIndexRangeVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CXaml__CData__CItemIndexRange* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CXaml__CData__CItemIndexRange* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CXaml__CData__CItemIndexRange* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CXaml__CData__CItemIndexRange* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CXaml__CData__CItemIndexRange* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CXaml__CData__CItemIndexRange* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* GetAt)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CXaml__CData__CItemIndexRange* This,
        UINT32 index,
        __x_ABI_CWindows_CUI_CXaml_CData_CIItemIndexRange** result);
    HRESULT (STDMETHODCALLTYPE* get_Size)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CXaml__CData__CItemIndexRange* This,
        UINT32* result);
    HRESULT (STDMETHODCALLTYPE* IndexOf)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CXaml__CData__CItemIndexRange* This,
        __x_ABI_CWindows_CUI_CXaml_CData_CIItemIndexRange* value,
        UINT32* index,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CXaml__CData__CItemIndexRange* This,
        UINT32 startIndex,
        UINT32 itemsLength,
        __x_ABI_CWindows_CUI_CXaml_CData_CIItemIndexRange** items,
        UINT32* result);

        END_INTERFACE
    } __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CXaml__CData__CItemIndexRangeVtbl;

    interface __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CXaml__CData__CItemIndexRange
    {
        CONST_VTBL struct __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CXaml__CData__CItemIndexRangeVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CXaml__CData__CItemIndexRange_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CXaml__CDocuments__CTextHighlighter_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CXaml__CDocuments__CTextHighlighter_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CXaml__CDocuments__CTextHighlighter __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CXaml__CDocuments__CTextHighlighter;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CXaml__CDocuments__CTextHighlighter;

    typedef struct __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CXaml__CDocuments__CTextHighlighterVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CXaml__CDocuments__CTextHighlighter* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CXaml__CDocuments__CTextHighlighter* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CXaml__CDocuments__CTextHighlighter* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CXaml__CDocuments__CTextHighlighter* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CXaml__CDocuments__CTextHighlighter* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CXaml__CDocuments__CTextHighlighter* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* GetAt)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CXaml__CDocuments__CTextHighlighter* This,
        UINT32 index,
        __x_ABI_CWindows_CUI_CXaml_CDocuments_CITextHighlighter** result);
    HRESULT (STDMETHODCALLTYPE* get_Size)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CXaml__CDocuments__CTextHighlighter* This,
        UINT32* result);
    HRESULT (STDMETHODCALLTYPE* IndexOf)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CXaml__CDocuments__CTextHighlighter* This,
        __x_ABI_CWindows_CUI_CXaml_CDocuments_CITextHighlighter* value,
        UINT32* index,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CXaml__CDocuments__CTextHighlighter* This,
        UINT32 startIndex,
        UINT32 itemsLength,
        __x_ABI_CWindows_CUI_CXaml_CDocuments_CITextHighlighter** items,
        UINT32* result);

        END_INTERFACE
    } __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CXaml__CDocuments__CTextHighlighterVtbl;

    interface __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CXaml__CDocuments__CTextHighlighter
    {
        CONST_VTBL struct __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CXaml__CDocuments__CTextHighlighterVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CXaml__CDocuments__CTextHighlighter_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CXaml__CMedia__CBrush_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CXaml__CMedia__CBrush_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CXaml__CMedia__CBrush __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CXaml__CMedia__CBrush;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CXaml__CMedia__CBrush;

    typedef struct __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CXaml__CMedia__CBrushVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CXaml__CMedia__CBrush* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CXaml__CMedia__CBrush* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CXaml__CMedia__CBrush* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CXaml__CMedia__CBrush* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CXaml__CMedia__CBrush* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CXaml__CMedia__CBrush* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* GetAt)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CXaml__CMedia__CBrush* This,
        UINT32 index,
        __x_ABI_CWindows_CUI_CXaml_CMedia_CIBrush** result);
    HRESULT (STDMETHODCALLTYPE* get_Size)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CXaml__CMedia__CBrush* This,
        UINT32* result);
    HRESULT (STDMETHODCALLTYPE* IndexOf)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CXaml__CMedia__CBrush* This,
        __x_ABI_CWindows_CUI_CXaml_CMedia_CIBrush* value,
        UINT32* index,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CXaml__CMedia__CBrush* This,
        UINT32 startIndex,
        UINT32 itemsLength,
        __x_ABI_CWindows_CUI_CXaml_CMedia_CIBrush** items,
        UINT32* result);

        END_INTERFACE
    } __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CXaml__CMedia__CBrushVtbl;

    interface __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CXaml__CMedia__CBrush
    {
        CONST_VTBL struct __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CXaml__CMedia__CBrushVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CXaml__CMedia__CBrush_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CXaml__CNavigation__CPageStackEntry_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CXaml__CNavigation__CPageStackEntry_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CXaml__CNavigation__CPageStackEntry __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CXaml__CNavigation__CPageStackEntry;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CXaml__CNavigation__CPageStackEntry;

    typedef struct __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CXaml__CNavigation__CPageStackEntryVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CXaml__CNavigation__CPageStackEntry* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CXaml__CNavigation__CPageStackEntry* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CXaml__CNavigation__CPageStackEntry* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CXaml__CNavigation__CPageStackEntry* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CXaml__CNavigation__CPageStackEntry* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CXaml__CNavigation__CPageStackEntry* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* GetAt)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CXaml__CNavigation__CPageStackEntry* This,
        UINT32 index,
        __x_ABI_CWindows_CUI_CXaml_CNavigation_CIPageStackEntry** result);
    HRESULT (STDMETHODCALLTYPE* get_Size)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CXaml__CNavigation__CPageStackEntry* This,
        UINT32* result);
    HRESULT (STDMETHODCALLTYPE* IndexOf)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CXaml__CNavigation__CPageStackEntry* This,
        __x_ABI_CWindows_CUI_CXaml_CNavigation_CIPageStackEntry* value,
        UINT32* index,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CXaml__CNavigation__CPageStackEntry* This,
        UINT32 startIndex,
        UINT32 itemsLength,
        __x_ABI_CWindows_CUI_CXaml_CNavigation_CIPageStackEntry** items,
        UINT32* result);

        END_INTERFACE
    } __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CXaml__CNavigation__CPageStackEntryVtbl;

    interface __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CXaml__CNavigation__CPageStackEntry
    {
        CONST_VTBL struct __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CXaml__CNavigation__CPageStackEntryVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CXaml__CNavigation__CPageStackEntry_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CXaml__CUIElement_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CXaml__CUIElement_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CXaml__CUIElement __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CXaml__CUIElement;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CXaml__CUIElement;

    typedef struct __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CXaml__CUIElementVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CXaml__CUIElement* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CXaml__CUIElement* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CXaml__CUIElement* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CXaml__CUIElement* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CXaml__CUIElement* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CXaml__CUIElement* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* GetAt)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CXaml__CUIElement* This,
        UINT32 index,
        __x_ABI_CWindows_CUI_CXaml_CIUIElement** result);
    HRESULT (STDMETHODCALLTYPE* get_Size)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CXaml__CUIElement* This,
        UINT32* result);
    HRESULT (STDMETHODCALLTYPE* IndexOf)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CXaml__CUIElement* This,
        __x_ABI_CWindows_CUI_CXaml_CIUIElement* value,
        UINT32* index,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CXaml__CUIElement* This,
        UINT32 startIndex,
        UINT32 itemsLength,
        __x_ABI_CWindows_CUI_CXaml_CIUIElement** items,
        UINT32* result);

        END_INTERFACE
    } __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CXaml__CUIElementVtbl;

    interface __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CXaml__CUIElement
    {
        CONST_VTBL struct __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CXaml__CUIElementVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CXaml__CUIElement_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIVector_1_float_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIVector_1_float_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIVector_1_float __x_ABI_C__FIVector_1_float;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIVector_1_float;

    typedef struct __x_ABI_C__FIVector_1_floatVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIVector_1_float* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIVector_1_float* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIVector_1_float* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIVector_1_float* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIVector_1_float* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIVector_1_float* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* GetAt)(__x_ABI_C__FIVector_1_float* This,
        UINT32 index,
        FLOAT* result);
    HRESULT (STDMETHODCALLTYPE* get_Size)(__x_ABI_C__FIVector_1_float* This,
        UINT32* result);
    HRESULT (STDMETHODCALLTYPE* GetView)(__x_ABI_C__FIVector_1_float* This,
        __x_ABI_C__FIVectorView_1_float** result);
    HRESULT (STDMETHODCALLTYPE* IndexOf)(__x_ABI_C__FIVector_1_float* This,
        FLOAT value,
        UINT32* index,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* SetAt)(__x_ABI_C__FIVector_1_float* This,
        UINT32 index,
        FLOAT value);
    HRESULT (STDMETHODCALLTYPE* InsertAt)(__x_ABI_C__FIVector_1_float* This,
        UINT32 index,
        FLOAT value);
    HRESULT (STDMETHODCALLTYPE* RemoveAt)(__x_ABI_C__FIVector_1_float* This,
        UINT32 index);
    HRESULT (STDMETHODCALLTYPE* Append)(__x_ABI_C__FIVector_1_float* This,
        FLOAT value);
    HRESULT (STDMETHODCALLTYPE* RemoveAtEnd)(__x_ABI_C__FIVector_1_float* This);
    HRESULT (STDMETHODCALLTYPE* Clear)(__x_ABI_C__FIVector_1_float* This);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__x_ABI_C__FIVector_1_float* This,
        UINT32 startIndex,
        UINT32 itemsLength,
        FLOAT* items,
        UINT32* result);
    HRESULT (STDMETHODCALLTYPE* ReplaceAll)(__x_ABI_C__FIVector_1_float* This,
        UINT32 itemsLength,
        FLOAT* items);

        END_INTERFACE
    } __x_ABI_C__FIVector_1_floatVtbl;

    interface __x_ABI_C__FIVector_1_float
    {
        CONST_VTBL struct __x_ABI_C__FIVector_1_floatVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIVector_1_float_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIVector_1___x_ABI_CWindows__CFoundation__CDateTime_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIVector_1___x_ABI_CWindows__CFoundation__CDateTime_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIVector_1___x_ABI_CWindows__CFoundation__CDateTime __x_ABI_C__FIVector_1___x_ABI_CWindows__CFoundation__CDateTime;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIVector_1___x_ABI_CWindows__CFoundation__CDateTime;

    typedef struct __x_ABI_C__FIVector_1___x_ABI_CWindows__CFoundation__CDateTimeVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CFoundation__CDateTime* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CFoundation__CDateTime* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CFoundation__CDateTime* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CFoundation__CDateTime* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CFoundation__CDateTime* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CFoundation__CDateTime* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* GetAt)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CFoundation__CDateTime* This,
        UINT32 index,
        struct __x_ABI_CWindows_CFoundation_CDateTime* result);
    HRESULT (STDMETHODCALLTYPE* get_Size)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CFoundation__CDateTime* This,
        UINT32* result);
    HRESULT (STDMETHODCALLTYPE* GetView)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CFoundation__CDateTime* This,
        __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CFoundation__CDateTime** result);
    HRESULT (STDMETHODCALLTYPE* IndexOf)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CFoundation__CDateTime* This,
        struct __x_ABI_CWindows_CFoundation_CDateTime value,
        UINT32* index,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* SetAt)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CFoundation__CDateTime* This,
        UINT32 index,
        struct __x_ABI_CWindows_CFoundation_CDateTime value);
    HRESULT (STDMETHODCALLTYPE* InsertAt)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CFoundation__CDateTime* This,
        UINT32 index,
        struct __x_ABI_CWindows_CFoundation_CDateTime value);
    HRESULT (STDMETHODCALLTYPE* RemoveAt)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CFoundation__CDateTime* This,
        UINT32 index);
    HRESULT (STDMETHODCALLTYPE* Append)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CFoundation__CDateTime* This,
        struct __x_ABI_CWindows_CFoundation_CDateTime value);
    HRESULT (STDMETHODCALLTYPE* RemoveAtEnd)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CFoundation__CDateTime* This);
    HRESULT (STDMETHODCALLTYPE* Clear)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CFoundation__CDateTime* This);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CFoundation__CDateTime* This,
        UINT32 startIndex,
        UINT32 itemsLength,
        struct __x_ABI_CWindows_CFoundation_CDateTime* items,
        UINT32* result);
    HRESULT (STDMETHODCALLTYPE* ReplaceAll)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CFoundation__CDateTime* This,
        UINT32 itemsLength,
        struct __x_ABI_CWindows_CFoundation_CDateTime* items);

        END_INTERFACE
    } __x_ABI_C__FIVector_1___x_ABI_CWindows__CFoundation__CDateTimeVtbl;

    interface __x_ABI_C__FIVector_1___x_ABI_CWindows__CFoundation__CDateTime
    {
        CONST_VTBL struct __x_ABI_C__FIVector_1___x_ABI_CWindows__CFoundation__CDateTimeVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIVector_1___x_ABI_CWindows__CFoundation__CDateTime_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIVector_1___x_ABI_CWindows__CFoundation__CUri_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIVector_1___x_ABI_CWindows__CFoundation__CUri_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIVector_1___x_ABI_CWindows__CFoundation__CUri __x_ABI_C__FIVector_1___x_ABI_CWindows__CFoundation__CUri;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIVector_1___x_ABI_CWindows__CFoundation__CUri;

    typedef struct __x_ABI_C__FIVector_1___x_ABI_CWindows__CFoundation__CUriVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CFoundation__CUri* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CFoundation__CUri* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CFoundation__CUri* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CFoundation__CUri* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CFoundation__CUri* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CFoundation__CUri* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* GetAt)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CFoundation__CUri* This,
        UINT32 index,
        __x_ABI_CWindows_CFoundation_CIUriRuntimeClass** result);
    HRESULT (STDMETHODCALLTYPE* get_Size)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CFoundation__CUri* This,
        UINT32* result);
    HRESULT (STDMETHODCALLTYPE* GetView)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CFoundation__CUri* This,
        __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CFoundation__CUri** result);
    HRESULT (STDMETHODCALLTYPE* IndexOf)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CFoundation__CUri* This,
        __x_ABI_CWindows_CFoundation_CIUriRuntimeClass* value,
        UINT32* index,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* SetAt)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CFoundation__CUri* This,
        UINT32 index,
        __x_ABI_CWindows_CFoundation_CIUriRuntimeClass* value);
    HRESULT (STDMETHODCALLTYPE* InsertAt)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CFoundation__CUri* This,
        UINT32 index,
        __x_ABI_CWindows_CFoundation_CIUriRuntimeClass* value);
    HRESULT (STDMETHODCALLTYPE* RemoveAt)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CFoundation__CUri* This,
        UINT32 index);
    HRESULT (STDMETHODCALLTYPE* Append)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CFoundation__CUri* This,
        __x_ABI_CWindows_CFoundation_CIUriRuntimeClass* value);
    HRESULT (STDMETHODCALLTYPE* RemoveAtEnd)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CFoundation__CUri* This);
    HRESULT (STDMETHODCALLTYPE* Clear)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CFoundation__CUri* This);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CFoundation__CUri* This,
        UINT32 startIndex,
        UINT32 itemsLength,
        __x_ABI_CWindows_CFoundation_CIUriRuntimeClass** items,
        UINT32* result);
    HRESULT (STDMETHODCALLTYPE* ReplaceAll)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CFoundation__CUri* This,
        UINT32 itemsLength,
        __x_ABI_CWindows_CFoundation_CIUriRuntimeClass** items);

        END_INTERFACE
    } __x_ABI_C__FIVector_1___x_ABI_CWindows__CFoundation__CUriVtbl;

    interface __x_ABI_C__FIVector_1___x_ABI_CWindows__CFoundation__CUri
    {
        CONST_VTBL struct __x_ABI_C__FIVector_1___x_ABI_CWindows__CFoundation__CUriVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIVector_1___x_ABI_CWindows__CFoundation__CUri_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CXaml__CControls__CColumnDefinition_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CXaml__CControls__CColumnDefinition_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CXaml__CControls__CColumnDefinition __x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CXaml__CControls__CColumnDefinition;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CXaml__CControls__CColumnDefinition;

    typedef struct __x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CXaml__CControls__CColumnDefinitionVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CXaml__CControls__CColumnDefinition* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CXaml__CControls__CColumnDefinition* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CXaml__CControls__CColumnDefinition* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CXaml__CControls__CColumnDefinition* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CXaml__CControls__CColumnDefinition* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CXaml__CControls__CColumnDefinition* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* GetAt)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CXaml__CControls__CColumnDefinition* This,
        UINT32 index,
        __x_ABI_CWindows_CUI_CXaml_CControls_CIColumnDefinition** result);
    HRESULT (STDMETHODCALLTYPE* get_Size)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CXaml__CControls__CColumnDefinition* This,
        UINT32* result);
    HRESULT (STDMETHODCALLTYPE* GetView)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CXaml__CControls__CColumnDefinition* This,
        __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CXaml__CControls__CColumnDefinition** result);
    HRESULT (STDMETHODCALLTYPE* IndexOf)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CXaml__CControls__CColumnDefinition* This,
        __x_ABI_CWindows_CUI_CXaml_CControls_CIColumnDefinition* value,
        UINT32* index,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* SetAt)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CXaml__CControls__CColumnDefinition* This,
        UINT32 index,
        __x_ABI_CWindows_CUI_CXaml_CControls_CIColumnDefinition* value);
    HRESULT (STDMETHODCALLTYPE* InsertAt)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CXaml__CControls__CColumnDefinition* This,
        UINT32 index,
        __x_ABI_CWindows_CUI_CXaml_CControls_CIColumnDefinition* value);
    HRESULT (STDMETHODCALLTYPE* RemoveAt)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CXaml__CControls__CColumnDefinition* This,
        UINT32 index);
    HRESULT (STDMETHODCALLTYPE* Append)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CXaml__CControls__CColumnDefinition* This,
        __x_ABI_CWindows_CUI_CXaml_CControls_CIColumnDefinition* value);
    HRESULT (STDMETHODCALLTYPE* RemoveAtEnd)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CXaml__CControls__CColumnDefinition* This);
    HRESULT (STDMETHODCALLTYPE* Clear)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CXaml__CControls__CColumnDefinition* This);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CXaml__CControls__CColumnDefinition* This,
        UINT32 startIndex,
        UINT32 itemsLength,
        __x_ABI_CWindows_CUI_CXaml_CControls_CIColumnDefinition** items,
        UINT32* result);
    HRESULT (STDMETHODCALLTYPE* ReplaceAll)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CXaml__CControls__CColumnDefinition* This,
        UINT32 itemsLength,
        __x_ABI_CWindows_CUI_CXaml_CControls_CIColumnDefinition** items);

        END_INTERFACE
    } __x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CXaml__CControls__CColumnDefinitionVtbl;

    interface __x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CXaml__CControls__CColumnDefinition
    {
        CONST_VTBL struct __x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CXaml__CControls__CColumnDefinitionVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CXaml__CControls__CColumnDefinition_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CXaml__CControls__CHubSection_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CXaml__CControls__CHubSection_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CXaml__CControls__CHubSection __x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CXaml__CControls__CHubSection;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CXaml__CControls__CHubSection;

    typedef struct __x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CXaml__CControls__CHubSectionVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CXaml__CControls__CHubSection* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CXaml__CControls__CHubSection* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CXaml__CControls__CHubSection* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CXaml__CControls__CHubSection* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CXaml__CControls__CHubSection* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CXaml__CControls__CHubSection* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* GetAt)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CXaml__CControls__CHubSection* This,
        UINT32 index,
        __x_ABI_CWindows_CUI_CXaml_CControls_CIHubSection** result);
    HRESULT (STDMETHODCALLTYPE* get_Size)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CXaml__CControls__CHubSection* This,
        UINT32* result);
    HRESULT (STDMETHODCALLTYPE* GetView)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CXaml__CControls__CHubSection* This,
        __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CXaml__CControls__CHubSection** result);
    HRESULT (STDMETHODCALLTYPE* IndexOf)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CXaml__CControls__CHubSection* This,
        __x_ABI_CWindows_CUI_CXaml_CControls_CIHubSection* value,
        UINT32* index,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* SetAt)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CXaml__CControls__CHubSection* This,
        UINT32 index,
        __x_ABI_CWindows_CUI_CXaml_CControls_CIHubSection* value);
    HRESULT (STDMETHODCALLTYPE* InsertAt)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CXaml__CControls__CHubSection* This,
        UINT32 index,
        __x_ABI_CWindows_CUI_CXaml_CControls_CIHubSection* value);
    HRESULT (STDMETHODCALLTYPE* RemoveAt)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CXaml__CControls__CHubSection* This,
        UINT32 index);
    HRESULT (STDMETHODCALLTYPE* Append)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CXaml__CControls__CHubSection* This,
        __x_ABI_CWindows_CUI_CXaml_CControls_CIHubSection* value);
    HRESULT (STDMETHODCALLTYPE* RemoveAtEnd)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CXaml__CControls__CHubSection* This);
    HRESULT (STDMETHODCALLTYPE* Clear)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CXaml__CControls__CHubSection* This);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CXaml__CControls__CHubSection* This,
        UINT32 startIndex,
        UINT32 itemsLength,
        __x_ABI_CWindows_CUI_CXaml_CControls_CIHubSection** items,
        UINT32* result);
    HRESULT (STDMETHODCALLTYPE* ReplaceAll)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CXaml__CControls__CHubSection* This,
        UINT32 itemsLength,
        __x_ABI_CWindows_CUI_CXaml_CControls_CIHubSection** items);

        END_INTERFACE
    } __x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CXaml__CControls__CHubSectionVtbl;

    interface __x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CXaml__CControls__CHubSection
    {
        CONST_VTBL struct __x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CXaml__CControls__CHubSectionVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CXaml__CControls__CHubSection_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CXaml__CControls__CMenuBarItem_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CXaml__CControls__CMenuBarItem_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CXaml__CControls__CMenuBarItem __x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CXaml__CControls__CMenuBarItem;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CXaml__CControls__CMenuBarItem;

    typedef struct __x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CXaml__CControls__CMenuBarItemVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CXaml__CControls__CMenuBarItem* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CXaml__CControls__CMenuBarItem* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CXaml__CControls__CMenuBarItem* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CXaml__CControls__CMenuBarItem* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CXaml__CControls__CMenuBarItem* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CXaml__CControls__CMenuBarItem* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* GetAt)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CXaml__CControls__CMenuBarItem* This,
        UINT32 index,
        __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuBarItem** result);
    HRESULT (STDMETHODCALLTYPE* get_Size)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CXaml__CControls__CMenuBarItem* This,
        UINT32* result);
    HRESULT (STDMETHODCALLTYPE* GetView)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CXaml__CControls__CMenuBarItem* This,
        __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CXaml__CControls__CMenuBarItem** result);
    HRESULT (STDMETHODCALLTYPE* IndexOf)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CXaml__CControls__CMenuBarItem* This,
        __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuBarItem* value,
        UINT32* index,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* SetAt)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CXaml__CControls__CMenuBarItem* This,
        UINT32 index,
        __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuBarItem* value);
    HRESULT (STDMETHODCALLTYPE* InsertAt)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CXaml__CControls__CMenuBarItem* This,
        UINT32 index,
        __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuBarItem* value);
    HRESULT (STDMETHODCALLTYPE* RemoveAt)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CXaml__CControls__CMenuBarItem* This,
        UINT32 index);
    HRESULT (STDMETHODCALLTYPE* Append)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CXaml__CControls__CMenuBarItem* This,
        __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuBarItem* value);
    HRESULT (STDMETHODCALLTYPE* RemoveAtEnd)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CXaml__CControls__CMenuBarItem* This);
    HRESULT (STDMETHODCALLTYPE* Clear)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CXaml__CControls__CMenuBarItem* This);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CXaml__CControls__CMenuBarItem* This,
        UINT32 startIndex,
        UINT32 itemsLength,
        __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuBarItem** items,
        UINT32* result);
    HRESULT (STDMETHODCALLTYPE* ReplaceAll)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CXaml__CControls__CMenuBarItem* This,
        UINT32 itemsLength,
        __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuBarItem** items);

        END_INTERFACE
    } __x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CXaml__CControls__CMenuBarItemVtbl;

    interface __x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CXaml__CControls__CMenuBarItem
    {
        CONST_VTBL struct __x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CXaml__CControls__CMenuBarItemVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CXaml__CControls__CMenuBarItem_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CXaml__CControls__CMenuFlyoutItemBase_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CXaml__CControls__CMenuFlyoutItemBase_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CXaml__CControls__CMenuFlyoutItemBase __x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CXaml__CControls__CMenuFlyoutItemBase;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CXaml__CControls__CMenuFlyoutItemBase;

    typedef struct __x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CXaml__CControls__CMenuFlyoutItemBaseVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CXaml__CControls__CMenuFlyoutItemBase* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CXaml__CControls__CMenuFlyoutItemBase* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CXaml__CControls__CMenuFlyoutItemBase* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CXaml__CControls__CMenuFlyoutItemBase* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CXaml__CControls__CMenuFlyoutItemBase* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CXaml__CControls__CMenuFlyoutItemBase* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* GetAt)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CXaml__CControls__CMenuFlyoutItemBase* This,
        UINT32 index,
        __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutItemBase** result);
    HRESULT (STDMETHODCALLTYPE* get_Size)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CXaml__CControls__CMenuFlyoutItemBase* This,
        UINT32* result);
    HRESULT (STDMETHODCALLTYPE* GetView)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CXaml__CControls__CMenuFlyoutItemBase* This,
        __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CXaml__CControls__CMenuFlyoutItemBase** result);
    HRESULT (STDMETHODCALLTYPE* IndexOf)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CXaml__CControls__CMenuFlyoutItemBase* This,
        __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutItemBase* value,
        UINT32* index,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* SetAt)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CXaml__CControls__CMenuFlyoutItemBase* This,
        UINT32 index,
        __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutItemBase* value);
    HRESULT (STDMETHODCALLTYPE* InsertAt)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CXaml__CControls__CMenuFlyoutItemBase* This,
        UINT32 index,
        __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutItemBase* value);
    HRESULT (STDMETHODCALLTYPE* RemoveAt)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CXaml__CControls__CMenuFlyoutItemBase* This,
        UINT32 index);
    HRESULT (STDMETHODCALLTYPE* Append)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CXaml__CControls__CMenuFlyoutItemBase* This,
        __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutItemBase* value);
    HRESULT (STDMETHODCALLTYPE* RemoveAtEnd)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CXaml__CControls__CMenuFlyoutItemBase* This);
    HRESULT (STDMETHODCALLTYPE* Clear)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CXaml__CControls__CMenuFlyoutItemBase* This);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CXaml__CControls__CMenuFlyoutItemBase* This,
        UINT32 startIndex,
        UINT32 itemsLength,
        __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutItemBase** items,
        UINT32* result);
    HRESULT (STDMETHODCALLTYPE* ReplaceAll)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CXaml__CControls__CMenuFlyoutItemBase* This,
        UINT32 itemsLength,
        __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutItemBase** items);

        END_INTERFACE
    } __x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CXaml__CControls__CMenuFlyoutItemBaseVtbl;

    interface __x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CXaml__CControls__CMenuFlyoutItemBase
    {
        CONST_VTBL struct __x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CXaml__CControls__CMenuFlyoutItemBaseVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CXaml__CControls__CMenuFlyoutItemBase_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CXaml__CControls__CRowDefinition_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CXaml__CControls__CRowDefinition_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CXaml__CControls__CRowDefinition __x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CXaml__CControls__CRowDefinition;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CXaml__CControls__CRowDefinition;

    typedef struct __x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CXaml__CControls__CRowDefinitionVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CXaml__CControls__CRowDefinition* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CXaml__CControls__CRowDefinition* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CXaml__CControls__CRowDefinition* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CXaml__CControls__CRowDefinition* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CXaml__CControls__CRowDefinition* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CXaml__CControls__CRowDefinition* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* GetAt)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CXaml__CControls__CRowDefinition* This,
        UINT32 index,
        __x_ABI_CWindows_CUI_CXaml_CControls_CIRowDefinition** result);
    HRESULT (STDMETHODCALLTYPE* get_Size)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CXaml__CControls__CRowDefinition* This,
        UINT32* result);
    HRESULT (STDMETHODCALLTYPE* GetView)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CXaml__CControls__CRowDefinition* This,
        __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CXaml__CControls__CRowDefinition** result);
    HRESULT (STDMETHODCALLTYPE* IndexOf)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CXaml__CControls__CRowDefinition* This,
        __x_ABI_CWindows_CUI_CXaml_CControls_CIRowDefinition* value,
        UINT32* index,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* SetAt)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CXaml__CControls__CRowDefinition* This,
        UINT32 index,
        __x_ABI_CWindows_CUI_CXaml_CControls_CIRowDefinition* value);
    HRESULT (STDMETHODCALLTYPE* InsertAt)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CXaml__CControls__CRowDefinition* This,
        UINT32 index,
        __x_ABI_CWindows_CUI_CXaml_CControls_CIRowDefinition* value);
    HRESULT (STDMETHODCALLTYPE* RemoveAt)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CXaml__CControls__CRowDefinition* This,
        UINT32 index);
    HRESULT (STDMETHODCALLTYPE* Append)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CXaml__CControls__CRowDefinition* This,
        __x_ABI_CWindows_CUI_CXaml_CControls_CIRowDefinition* value);
    HRESULT (STDMETHODCALLTYPE* RemoveAtEnd)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CXaml__CControls__CRowDefinition* This);
    HRESULT (STDMETHODCALLTYPE* Clear)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CXaml__CControls__CRowDefinition* This);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CXaml__CControls__CRowDefinition* This,
        UINT32 startIndex,
        UINT32 itemsLength,
        __x_ABI_CWindows_CUI_CXaml_CControls_CIRowDefinition** items,
        UINT32* result);
    HRESULT (STDMETHODCALLTYPE* ReplaceAll)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CXaml__CControls__CRowDefinition* This,
        UINT32 itemsLength,
        __x_ABI_CWindows_CUI_CXaml_CControls_CIRowDefinition** items);

        END_INTERFACE
    } __x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CXaml__CControls__CRowDefinitionVtbl;

    interface __x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CXaml__CControls__CRowDefinition
    {
        CONST_VTBL struct __x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CXaml__CControls__CRowDefinitionVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CXaml__CControls__CRowDefinition_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CXaml__CControls__CSwipeItem_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CXaml__CControls__CSwipeItem_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CXaml__CControls__CSwipeItem __x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CXaml__CControls__CSwipeItem;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CXaml__CControls__CSwipeItem;

    typedef struct __x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CXaml__CControls__CSwipeItemVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CXaml__CControls__CSwipeItem* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CXaml__CControls__CSwipeItem* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CXaml__CControls__CSwipeItem* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CXaml__CControls__CSwipeItem* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CXaml__CControls__CSwipeItem* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CXaml__CControls__CSwipeItem* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* GetAt)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CXaml__CControls__CSwipeItem* This,
        UINT32 index,
        __x_ABI_CWindows_CUI_CXaml_CControls_CISwipeItem** result);
    HRESULT (STDMETHODCALLTYPE* get_Size)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CXaml__CControls__CSwipeItem* This,
        UINT32* result);
    HRESULT (STDMETHODCALLTYPE* GetView)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CXaml__CControls__CSwipeItem* This,
        __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CXaml__CControls__CSwipeItem** result);
    HRESULT (STDMETHODCALLTYPE* IndexOf)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CXaml__CControls__CSwipeItem* This,
        __x_ABI_CWindows_CUI_CXaml_CControls_CISwipeItem* value,
        UINT32* index,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* SetAt)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CXaml__CControls__CSwipeItem* This,
        UINT32 index,
        __x_ABI_CWindows_CUI_CXaml_CControls_CISwipeItem* value);
    HRESULT (STDMETHODCALLTYPE* InsertAt)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CXaml__CControls__CSwipeItem* This,
        UINT32 index,
        __x_ABI_CWindows_CUI_CXaml_CControls_CISwipeItem* value);
    HRESULT (STDMETHODCALLTYPE* RemoveAt)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CXaml__CControls__CSwipeItem* This,
        UINT32 index);
    HRESULT (STDMETHODCALLTYPE* Append)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CXaml__CControls__CSwipeItem* This,
        __x_ABI_CWindows_CUI_CXaml_CControls_CISwipeItem* value);
    HRESULT (STDMETHODCALLTYPE* RemoveAtEnd)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CXaml__CControls__CSwipeItem* This);
    HRESULT (STDMETHODCALLTYPE* Clear)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CXaml__CControls__CSwipeItem* This);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CXaml__CControls__CSwipeItem* This,
        UINT32 startIndex,
        UINT32 itemsLength,
        __x_ABI_CWindows_CUI_CXaml_CControls_CISwipeItem** items,
        UINT32* result);
    HRESULT (STDMETHODCALLTYPE* ReplaceAll)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CXaml__CControls__CSwipeItem* This,
        UINT32 itemsLength,
        __x_ABI_CWindows_CUI_CXaml_CControls_CISwipeItem** items);

        END_INTERFACE
    } __x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CXaml__CControls__CSwipeItemVtbl;

    interface __x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CXaml__CControls__CSwipeItem
    {
        CONST_VTBL struct __x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CXaml__CControls__CSwipeItemVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CXaml__CControls__CSwipeItem_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CXaml__CControls__CTreeViewNode_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CXaml__CControls__CTreeViewNode_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CXaml__CControls__CTreeViewNode __x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CXaml__CControls__CTreeViewNode;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CXaml__CControls__CTreeViewNode;

    typedef struct __x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CXaml__CControls__CTreeViewNodeVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CXaml__CControls__CTreeViewNode* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CXaml__CControls__CTreeViewNode* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CXaml__CControls__CTreeViewNode* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CXaml__CControls__CTreeViewNode* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CXaml__CControls__CTreeViewNode* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CXaml__CControls__CTreeViewNode* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* GetAt)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CXaml__CControls__CTreeViewNode* This,
        UINT32 index,
        __x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewNode** result);
    HRESULT (STDMETHODCALLTYPE* get_Size)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CXaml__CControls__CTreeViewNode* This,
        UINT32* result);
    HRESULT (STDMETHODCALLTYPE* GetView)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CXaml__CControls__CTreeViewNode* This,
        __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CXaml__CControls__CTreeViewNode** result);
    HRESULT (STDMETHODCALLTYPE* IndexOf)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CXaml__CControls__CTreeViewNode* This,
        __x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewNode* value,
        UINT32* index,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* SetAt)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CXaml__CControls__CTreeViewNode* This,
        UINT32 index,
        __x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewNode* value);
    HRESULT (STDMETHODCALLTYPE* InsertAt)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CXaml__CControls__CTreeViewNode* This,
        UINT32 index,
        __x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewNode* value);
    HRESULT (STDMETHODCALLTYPE* RemoveAt)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CXaml__CControls__CTreeViewNode* This,
        UINT32 index);
    HRESULT (STDMETHODCALLTYPE* Append)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CXaml__CControls__CTreeViewNode* This,
        __x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewNode* value);
    HRESULT (STDMETHODCALLTYPE* RemoveAtEnd)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CXaml__CControls__CTreeViewNode* This);
    HRESULT (STDMETHODCALLTYPE* Clear)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CXaml__CControls__CTreeViewNode* This);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CXaml__CControls__CTreeViewNode* This,
        UINT32 startIndex,
        UINT32 itemsLength,
        __x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewNode** items,
        UINT32* result);
    HRESULT (STDMETHODCALLTYPE* ReplaceAll)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CXaml__CControls__CTreeViewNode* This,
        UINT32 itemsLength,
        __x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewNode** items);

        END_INTERFACE
    } __x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CXaml__CControls__CTreeViewNodeVtbl;

    interface __x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CXaml__CControls__CTreeViewNode
    {
        CONST_VTBL struct __x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CXaml__CControls__CTreeViewNodeVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CXaml__CControls__CTreeViewNode_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CXaml__CControls__CWebViewDeferredPermissionRequest_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CXaml__CControls__CWebViewDeferredPermissionRequest_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CXaml__CControls__CWebViewDeferredPermissionRequest __x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CXaml__CControls__CWebViewDeferredPermissionRequest;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CXaml__CControls__CWebViewDeferredPermissionRequest;

    typedef struct __x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CXaml__CControls__CWebViewDeferredPermissionRequestVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CXaml__CControls__CWebViewDeferredPermissionRequest* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CXaml__CControls__CWebViewDeferredPermissionRequest* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CXaml__CControls__CWebViewDeferredPermissionRequest* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CXaml__CControls__CWebViewDeferredPermissionRequest* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CXaml__CControls__CWebViewDeferredPermissionRequest* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CXaml__CControls__CWebViewDeferredPermissionRequest* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* GetAt)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CXaml__CControls__CWebViewDeferredPermissionRequest* This,
        UINT32 index,
        __x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewDeferredPermissionRequest** result);
    HRESULT (STDMETHODCALLTYPE* get_Size)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CXaml__CControls__CWebViewDeferredPermissionRequest* This,
        UINT32* result);
    HRESULT (STDMETHODCALLTYPE* GetView)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CXaml__CControls__CWebViewDeferredPermissionRequest* This,
        __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CXaml__CControls__CWebViewDeferredPermissionRequest** result);
    HRESULT (STDMETHODCALLTYPE* IndexOf)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CXaml__CControls__CWebViewDeferredPermissionRequest* This,
        __x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewDeferredPermissionRequest* value,
        UINT32* index,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* SetAt)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CXaml__CControls__CWebViewDeferredPermissionRequest* This,
        UINT32 index,
        __x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewDeferredPermissionRequest* value);
    HRESULT (STDMETHODCALLTYPE* InsertAt)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CXaml__CControls__CWebViewDeferredPermissionRequest* This,
        UINT32 index,
        __x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewDeferredPermissionRequest* value);
    HRESULT (STDMETHODCALLTYPE* RemoveAt)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CXaml__CControls__CWebViewDeferredPermissionRequest* This,
        UINT32 index);
    HRESULT (STDMETHODCALLTYPE* Append)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CXaml__CControls__CWebViewDeferredPermissionRequest* This,
        __x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewDeferredPermissionRequest* value);
    HRESULT (STDMETHODCALLTYPE* RemoveAtEnd)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CXaml__CControls__CWebViewDeferredPermissionRequest* This);
    HRESULT (STDMETHODCALLTYPE* Clear)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CXaml__CControls__CWebViewDeferredPermissionRequest* This);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CXaml__CControls__CWebViewDeferredPermissionRequest* This,
        UINT32 startIndex,
        UINT32 itemsLength,
        __x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewDeferredPermissionRequest** items,
        UINT32* result);
    HRESULT (STDMETHODCALLTYPE* ReplaceAll)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CXaml__CControls__CWebViewDeferredPermissionRequest* This,
        UINT32 itemsLength,
        __x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewDeferredPermissionRequest** items);

        END_INTERFACE
    } __x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CXaml__CControls__CWebViewDeferredPermissionRequestVtbl;

    interface __x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CXaml__CControls__CWebViewDeferredPermissionRequest
    {
        CONST_VTBL struct __x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CXaml__CControls__CWebViewDeferredPermissionRequestVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CXaml__CControls__CWebViewDeferredPermissionRequest_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CXaml__CDocuments__CTextHighlighter_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CXaml__CDocuments__CTextHighlighter_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CXaml__CDocuments__CTextHighlighter __x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CXaml__CDocuments__CTextHighlighter;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CXaml__CDocuments__CTextHighlighter;

    typedef struct __x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CXaml__CDocuments__CTextHighlighterVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CXaml__CDocuments__CTextHighlighter* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CXaml__CDocuments__CTextHighlighter* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CXaml__CDocuments__CTextHighlighter* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CXaml__CDocuments__CTextHighlighter* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CXaml__CDocuments__CTextHighlighter* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CXaml__CDocuments__CTextHighlighter* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* GetAt)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CXaml__CDocuments__CTextHighlighter* This,
        UINT32 index,
        __x_ABI_CWindows_CUI_CXaml_CDocuments_CITextHighlighter** result);
    HRESULT (STDMETHODCALLTYPE* get_Size)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CXaml__CDocuments__CTextHighlighter* This,
        UINT32* result);
    HRESULT (STDMETHODCALLTYPE* GetView)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CXaml__CDocuments__CTextHighlighter* This,
        __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CXaml__CDocuments__CTextHighlighter** result);
    HRESULT (STDMETHODCALLTYPE* IndexOf)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CXaml__CDocuments__CTextHighlighter* This,
        __x_ABI_CWindows_CUI_CXaml_CDocuments_CITextHighlighter* value,
        UINT32* index,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* SetAt)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CXaml__CDocuments__CTextHighlighter* This,
        UINT32 index,
        __x_ABI_CWindows_CUI_CXaml_CDocuments_CITextHighlighter* value);
    HRESULT (STDMETHODCALLTYPE* InsertAt)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CXaml__CDocuments__CTextHighlighter* This,
        UINT32 index,
        __x_ABI_CWindows_CUI_CXaml_CDocuments_CITextHighlighter* value);
    HRESULT (STDMETHODCALLTYPE* RemoveAt)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CXaml__CDocuments__CTextHighlighter* This,
        UINT32 index);
    HRESULT (STDMETHODCALLTYPE* Append)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CXaml__CDocuments__CTextHighlighter* This,
        __x_ABI_CWindows_CUI_CXaml_CDocuments_CITextHighlighter* value);
    HRESULT (STDMETHODCALLTYPE* RemoveAtEnd)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CXaml__CDocuments__CTextHighlighter* This);
    HRESULT (STDMETHODCALLTYPE* Clear)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CXaml__CDocuments__CTextHighlighter* This);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CXaml__CDocuments__CTextHighlighter* This,
        UINT32 startIndex,
        UINT32 itemsLength,
        __x_ABI_CWindows_CUI_CXaml_CDocuments_CITextHighlighter** items,
        UINT32* result);
    HRESULT (STDMETHODCALLTYPE* ReplaceAll)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CXaml__CDocuments__CTextHighlighter* This,
        UINT32 itemsLength,
        __x_ABI_CWindows_CUI_CXaml_CDocuments_CITextHighlighter** items);

        END_INTERFACE
    } __x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CXaml__CDocuments__CTextHighlighterVtbl;

    interface __x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CXaml__CDocuments__CTextHighlighter
    {
        CONST_VTBL struct __x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CXaml__CDocuments__CTextHighlighterVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CXaml__CDocuments__CTextHighlighter_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CXaml__CMedia__CBrush_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CXaml__CMedia__CBrush_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CXaml__CMedia__CBrush __x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CXaml__CMedia__CBrush;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CXaml__CMedia__CBrush;

    typedef struct __x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CXaml__CMedia__CBrushVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CXaml__CMedia__CBrush* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CXaml__CMedia__CBrush* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CXaml__CMedia__CBrush* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CXaml__CMedia__CBrush* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CXaml__CMedia__CBrush* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CXaml__CMedia__CBrush* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* GetAt)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CXaml__CMedia__CBrush* This,
        UINT32 index,
        __x_ABI_CWindows_CUI_CXaml_CMedia_CIBrush** result);
    HRESULT (STDMETHODCALLTYPE* get_Size)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CXaml__CMedia__CBrush* This,
        UINT32* result);
    HRESULT (STDMETHODCALLTYPE* GetView)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CXaml__CMedia__CBrush* This,
        __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CXaml__CMedia__CBrush** result);
    HRESULT (STDMETHODCALLTYPE* IndexOf)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CXaml__CMedia__CBrush* This,
        __x_ABI_CWindows_CUI_CXaml_CMedia_CIBrush* value,
        UINT32* index,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* SetAt)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CXaml__CMedia__CBrush* This,
        UINT32 index,
        __x_ABI_CWindows_CUI_CXaml_CMedia_CIBrush* value);
    HRESULT (STDMETHODCALLTYPE* InsertAt)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CXaml__CMedia__CBrush* This,
        UINT32 index,
        __x_ABI_CWindows_CUI_CXaml_CMedia_CIBrush* value);
    HRESULT (STDMETHODCALLTYPE* RemoveAt)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CXaml__CMedia__CBrush* This,
        UINT32 index);
    HRESULT (STDMETHODCALLTYPE* Append)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CXaml__CMedia__CBrush* This,
        __x_ABI_CWindows_CUI_CXaml_CMedia_CIBrush* value);
    HRESULT (STDMETHODCALLTYPE* RemoveAtEnd)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CXaml__CMedia__CBrush* This);
    HRESULT (STDMETHODCALLTYPE* Clear)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CXaml__CMedia__CBrush* This);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CXaml__CMedia__CBrush* This,
        UINT32 startIndex,
        UINT32 itemsLength,
        __x_ABI_CWindows_CUI_CXaml_CMedia_CIBrush** items,
        UINT32* result);
    HRESULT (STDMETHODCALLTYPE* ReplaceAll)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CXaml__CMedia__CBrush* This,
        UINT32 itemsLength,
        __x_ABI_CWindows_CUI_CXaml_CMedia_CIBrush** items);

        END_INTERFACE
    } __x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CXaml__CMedia__CBrushVtbl;

    interface __x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CXaml__CMedia__CBrush
    {
        CONST_VTBL struct __x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CXaml__CMedia__CBrushVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CXaml__CMedia__CBrush_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CXaml__CNavigation__CPageStackEntry_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CXaml__CNavigation__CPageStackEntry_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CXaml__CNavigation__CPageStackEntry __x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CXaml__CNavigation__CPageStackEntry;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CXaml__CNavigation__CPageStackEntry;

    typedef struct __x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CXaml__CNavigation__CPageStackEntryVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CXaml__CNavigation__CPageStackEntry* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CXaml__CNavigation__CPageStackEntry* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CXaml__CNavigation__CPageStackEntry* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CXaml__CNavigation__CPageStackEntry* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CXaml__CNavigation__CPageStackEntry* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CXaml__CNavigation__CPageStackEntry* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* GetAt)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CXaml__CNavigation__CPageStackEntry* This,
        UINT32 index,
        __x_ABI_CWindows_CUI_CXaml_CNavigation_CIPageStackEntry** result);
    HRESULT (STDMETHODCALLTYPE* get_Size)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CXaml__CNavigation__CPageStackEntry* This,
        UINT32* result);
    HRESULT (STDMETHODCALLTYPE* GetView)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CXaml__CNavigation__CPageStackEntry* This,
        __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CXaml__CNavigation__CPageStackEntry** result);
    HRESULT (STDMETHODCALLTYPE* IndexOf)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CXaml__CNavigation__CPageStackEntry* This,
        __x_ABI_CWindows_CUI_CXaml_CNavigation_CIPageStackEntry* value,
        UINT32* index,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* SetAt)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CXaml__CNavigation__CPageStackEntry* This,
        UINT32 index,
        __x_ABI_CWindows_CUI_CXaml_CNavigation_CIPageStackEntry* value);
    HRESULT (STDMETHODCALLTYPE* InsertAt)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CXaml__CNavigation__CPageStackEntry* This,
        UINT32 index,
        __x_ABI_CWindows_CUI_CXaml_CNavigation_CIPageStackEntry* value);
    HRESULT (STDMETHODCALLTYPE* RemoveAt)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CXaml__CNavigation__CPageStackEntry* This,
        UINT32 index);
    HRESULT (STDMETHODCALLTYPE* Append)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CXaml__CNavigation__CPageStackEntry* This,
        __x_ABI_CWindows_CUI_CXaml_CNavigation_CIPageStackEntry* value);
    HRESULT (STDMETHODCALLTYPE* RemoveAtEnd)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CXaml__CNavigation__CPageStackEntry* This);
    HRESULT (STDMETHODCALLTYPE* Clear)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CXaml__CNavigation__CPageStackEntry* This);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CXaml__CNavigation__CPageStackEntry* This,
        UINT32 startIndex,
        UINT32 itemsLength,
        __x_ABI_CWindows_CUI_CXaml_CNavigation_CIPageStackEntry** items,
        UINT32* result);
    HRESULT (STDMETHODCALLTYPE* ReplaceAll)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CXaml__CNavigation__CPageStackEntry* This,
        UINT32 itemsLength,
        __x_ABI_CWindows_CUI_CXaml_CNavigation_CIPageStackEntry** items);

        END_INTERFACE
    } __x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CXaml__CNavigation__CPageStackEntryVtbl;

    interface __x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CXaml__CNavigation__CPageStackEntry
    {
        CONST_VTBL struct __x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CXaml__CNavigation__CPageStackEntryVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CXaml__CNavigation__CPageStackEntry_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CXaml__CUIElement_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CXaml__CUIElement_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CXaml__CUIElement __x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CXaml__CUIElement;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CXaml__CUIElement;

    typedef struct __x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CXaml__CUIElementVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CXaml__CUIElement* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CXaml__CUIElement* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CXaml__CUIElement* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CXaml__CUIElement* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CXaml__CUIElement* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CXaml__CUIElement* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* GetAt)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CXaml__CUIElement* This,
        UINT32 index,
        __x_ABI_CWindows_CUI_CXaml_CIUIElement** result);
    HRESULT (STDMETHODCALLTYPE* get_Size)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CXaml__CUIElement* This,
        UINT32* result);
    HRESULT (STDMETHODCALLTYPE* GetView)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CXaml__CUIElement* This,
        __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CXaml__CUIElement** result);
    HRESULT (STDMETHODCALLTYPE* IndexOf)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CXaml__CUIElement* This,
        __x_ABI_CWindows_CUI_CXaml_CIUIElement* value,
        UINT32* index,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* SetAt)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CXaml__CUIElement* This,
        UINT32 index,
        __x_ABI_CWindows_CUI_CXaml_CIUIElement* value);
    HRESULT (STDMETHODCALLTYPE* InsertAt)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CXaml__CUIElement* This,
        UINT32 index,
        __x_ABI_CWindows_CUI_CXaml_CIUIElement* value);
    HRESULT (STDMETHODCALLTYPE* RemoveAt)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CXaml__CUIElement* This,
        UINT32 index);
    HRESULT (STDMETHODCALLTYPE* Append)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CXaml__CUIElement* This,
        __x_ABI_CWindows_CUI_CXaml_CIUIElement* value);
    HRESULT (STDMETHODCALLTYPE* RemoveAtEnd)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CXaml__CUIElement* This);
    HRESULT (STDMETHODCALLTYPE* Clear)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CXaml__CUIElement* This);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CXaml__CUIElement* This,
        UINT32 startIndex,
        UINT32 itemsLength,
        __x_ABI_CWindows_CUI_CXaml_CIUIElement** items,
        UINT32* result);
    HRESULT (STDMETHODCALLTYPE* ReplaceAll)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CXaml__CUIElement* This,
        UINT32 itemsLength,
        __x_ABI_CWindows_CUI_CXaml_CIUIElement** items);

        END_INTERFACE
    } __x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CXaml__CUIElementVtbl;

    interface __x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CXaml__CUIElement
    {
        CONST_VTBL struct __x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CXaml__CUIElementVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CXaml__CUIElement_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIEventHandler_1_IInspectable_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIEventHandler_1_IInspectable_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIEventHandler_1_IInspectable __x_ABI_C__FIEventHandler_1_IInspectable;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIEventHandler_1_IInspectable;

    typedef struct __x_ABI_C__FIEventHandler_1_IInspectableVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIEventHandler_1_IInspectable* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIEventHandler_1_IInspectable* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIEventHandler_1_IInspectable* This);
        HRESULT (STDMETHODCALLTYPE* Invoke)(__x_ABI_C__FIEventHandler_1_IInspectable* This,
        IInspectable* sender,
        IInspectable* args);

        END_INTERFACE
    } __x_ABI_C__FIEventHandler_1_IInspectableVtbl;

    interface __x_ABI_C__FIEventHandler_1_IInspectable
    {
        CONST_VTBL struct __x_ABI_C__FIEventHandler_1_IInspectableVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIEventHandler_1_IInspectable_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIEventHandler_1___x_ABI_CWindows__CUI__CXaml__CControls__CDatePickerValueChangedEventArgs_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIEventHandler_1___x_ABI_CWindows__CUI__CXaml__CControls__CDatePickerValueChangedEventArgs_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIEventHandler_1___x_ABI_CWindows__CUI__CXaml__CControls__CDatePickerValueChangedEventArgs __x_ABI_C__FIEventHandler_1___x_ABI_CWindows__CUI__CXaml__CControls__CDatePickerValueChangedEventArgs;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIEventHandler_1___x_ABI_CWindows__CUI__CXaml__CControls__CDatePickerValueChangedEventArgs;

    typedef struct __x_ABI_C__FIEventHandler_1___x_ABI_CWindows__CUI__CXaml__CControls__CDatePickerValueChangedEventArgsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIEventHandler_1___x_ABI_CWindows__CUI__CXaml__CControls__CDatePickerValueChangedEventArgs* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIEventHandler_1___x_ABI_CWindows__CUI__CXaml__CControls__CDatePickerValueChangedEventArgs* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIEventHandler_1___x_ABI_CWindows__CUI__CXaml__CControls__CDatePickerValueChangedEventArgs* This);
        HRESULT (STDMETHODCALLTYPE* Invoke)(__x_ABI_C__FIEventHandler_1___x_ABI_CWindows__CUI__CXaml__CControls__CDatePickerValueChangedEventArgs* This,
        IInspectable* sender,
        __x_ABI_CWindows_CUI_CXaml_CControls_CIDatePickerValueChangedEventArgs* args);

        END_INTERFACE
    } __x_ABI_C__FIEventHandler_1___x_ABI_CWindows__CUI__CXaml__CControls__CDatePickerValueChangedEventArgsVtbl;

    interface __x_ABI_C__FIEventHandler_1___x_ABI_CWindows__CUI__CXaml__CControls__CDatePickerValueChangedEventArgs
    {
        CONST_VTBL struct __x_ABI_C__FIEventHandler_1___x_ABI_CWindows__CUI__CXaml__CControls__CDatePickerValueChangedEventArgsVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIEventHandler_1___x_ABI_CWindows__CUI__CXaml__CControls__CDatePickerValueChangedEventArgs_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIEventHandler_1___x_ABI_CWindows__CUI__CXaml__CControls__CScrollViewerViewChangedEventArgs_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIEventHandler_1___x_ABI_CWindows__CUI__CXaml__CControls__CScrollViewerViewChangedEventArgs_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIEventHandler_1___x_ABI_CWindows__CUI__CXaml__CControls__CScrollViewerViewChangedEventArgs __x_ABI_C__FIEventHandler_1___x_ABI_CWindows__CUI__CXaml__CControls__CScrollViewerViewChangedEventArgs;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIEventHandler_1___x_ABI_CWindows__CUI__CXaml__CControls__CScrollViewerViewChangedEventArgs;

    typedef struct __x_ABI_C__FIEventHandler_1___x_ABI_CWindows__CUI__CXaml__CControls__CScrollViewerViewChangedEventArgsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIEventHandler_1___x_ABI_CWindows__CUI__CXaml__CControls__CScrollViewerViewChangedEventArgs* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIEventHandler_1___x_ABI_CWindows__CUI__CXaml__CControls__CScrollViewerViewChangedEventArgs* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIEventHandler_1___x_ABI_CWindows__CUI__CXaml__CControls__CScrollViewerViewChangedEventArgs* This);
        HRESULT (STDMETHODCALLTYPE* Invoke)(__x_ABI_C__FIEventHandler_1___x_ABI_CWindows__CUI__CXaml__CControls__CScrollViewerViewChangedEventArgs* This,
        IInspectable* sender,
        __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewerViewChangedEventArgs* args);

        END_INTERFACE
    } __x_ABI_C__FIEventHandler_1___x_ABI_CWindows__CUI__CXaml__CControls__CScrollViewerViewChangedEventArgsVtbl;

    interface __x_ABI_C__FIEventHandler_1___x_ABI_CWindows__CUI__CXaml__CControls__CScrollViewerViewChangedEventArgs
    {
        CONST_VTBL struct __x_ABI_C__FIEventHandler_1___x_ABI_CWindows__CUI__CXaml__CControls__CScrollViewerViewChangedEventArgsVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIEventHandler_1___x_ABI_CWindows__CUI__CXaml__CControls__CScrollViewerViewChangedEventArgs_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIEventHandler_1___x_ABI_CWindows__CUI__CXaml__CControls__CScrollViewerViewChangingEventArgs_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIEventHandler_1___x_ABI_CWindows__CUI__CXaml__CControls__CScrollViewerViewChangingEventArgs_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIEventHandler_1___x_ABI_CWindows__CUI__CXaml__CControls__CScrollViewerViewChangingEventArgs __x_ABI_C__FIEventHandler_1___x_ABI_CWindows__CUI__CXaml__CControls__CScrollViewerViewChangingEventArgs;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIEventHandler_1___x_ABI_CWindows__CUI__CXaml__CControls__CScrollViewerViewChangingEventArgs;

    typedef struct __x_ABI_C__FIEventHandler_1___x_ABI_CWindows__CUI__CXaml__CControls__CScrollViewerViewChangingEventArgsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIEventHandler_1___x_ABI_CWindows__CUI__CXaml__CControls__CScrollViewerViewChangingEventArgs* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIEventHandler_1___x_ABI_CWindows__CUI__CXaml__CControls__CScrollViewerViewChangingEventArgs* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIEventHandler_1___x_ABI_CWindows__CUI__CXaml__CControls__CScrollViewerViewChangingEventArgs* This);
        HRESULT (STDMETHODCALLTYPE* Invoke)(__x_ABI_C__FIEventHandler_1___x_ABI_CWindows__CUI__CXaml__CControls__CScrollViewerViewChangingEventArgs* This,
        IInspectable* sender,
        __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewerViewChangingEventArgs* args);

        END_INTERFACE
    } __x_ABI_C__FIEventHandler_1___x_ABI_CWindows__CUI__CXaml__CControls__CScrollViewerViewChangingEventArgsVtbl;

    interface __x_ABI_C__FIEventHandler_1___x_ABI_CWindows__CUI__CXaml__CControls__CScrollViewerViewChangingEventArgs
    {
        CONST_VTBL struct __x_ABI_C__FIEventHandler_1___x_ABI_CWindows__CUI__CXaml__CControls__CScrollViewerViewChangingEventArgsVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIEventHandler_1___x_ABI_CWindows__CUI__CXaml__CControls__CScrollViewerViewChangingEventArgs_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIEventHandler_1___x_ABI_CWindows__CUI__CXaml__CControls__CTimePickerValueChangedEventArgs_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIEventHandler_1___x_ABI_CWindows__CUI__CXaml__CControls__CTimePickerValueChangedEventArgs_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIEventHandler_1___x_ABI_CWindows__CUI__CXaml__CControls__CTimePickerValueChangedEventArgs __x_ABI_C__FIEventHandler_1___x_ABI_CWindows__CUI__CXaml__CControls__CTimePickerValueChangedEventArgs;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIEventHandler_1___x_ABI_CWindows__CUI__CXaml__CControls__CTimePickerValueChangedEventArgs;

    typedef struct __x_ABI_C__FIEventHandler_1___x_ABI_CWindows__CUI__CXaml__CControls__CTimePickerValueChangedEventArgsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIEventHandler_1___x_ABI_CWindows__CUI__CXaml__CControls__CTimePickerValueChangedEventArgs* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIEventHandler_1___x_ABI_CWindows__CUI__CXaml__CControls__CTimePickerValueChangedEventArgs* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIEventHandler_1___x_ABI_CWindows__CUI__CXaml__CControls__CTimePickerValueChangedEventArgs* This);
        HRESULT (STDMETHODCALLTYPE* Invoke)(__x_ABI_C__FIEventHandler_1___x_ABI_CWindows__CUI__CXaml__CControls__CTimePickerValueChangedEventArgs* This,
        IInspectable* sender,
        __x_ABI_CWindows_CUI_CXaml_CControls_CITimePickerValueChangedEventArgs* args);

        END_INTERFACE
    } __x_ABI_C__FIEventHandler_1___x_ABI_CWindows__CUI__CXaml__CControls__CTimePickerValueChangedEventArgsVtbl;

    interface __x_ABI_C__FIEventHandler_1___x_ABI_CWindows__CUI__CXaml__CControls__CTimePickerValueChangedEventArgs
    {
        CONST_VTBL struct __x_ABI_C__FIEventHandler_1___x_ABI_CWindows__CUI__CXaml__CControls__CTimePickerValueChangedEventArgsVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIEventHandler_1___x_ABI_CWindows__CUI__CXaml__CControls__CTimePickerValueChangedEventArgs_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIReference_1_double_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIReference_1_double_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIReference_1_double __x_ABI_C__FIReference_1_double;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIReference_1_double;

    typedef struct __x_ABI_C__FIReference_1_doubleVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIReference_1_double* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIReference_1_double* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIReference_1_double* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIReference_1_double* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIReference_1_double* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIReference_1_double* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Value)(__x_ABI_C__FIReference_1_double* This,
        DOUBLE* result);

        END_INTERFACE
    } __x_ABI_C__FIReference_1_doubleVtbl;

    interface __x_ABI_C__FIReference_1_double
    {
        CONST_VTBL struct __x_ABI_C__FIReference_1_doubleVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIReference_1_double_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIReference_1_float_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIReference_1_float_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIReference_1_float __x_ABI_C__FIReference_1_float;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIReference_1_float;

    typedef struct __x_ABI_C__FIReference_1_floatVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIReference_1_float* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIReference_1_float* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIReference_1_float* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIReference_1_float* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIReference_1_float* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIReference_1_float* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Value)(__x_ABI_C__FIReference_1_float* This,
        FLOAT* result);

        END_INTERFACE
    } __x_ABI_C__FIReference_1_floatVtbl;

    interface __x_ABI_C__FIReference_1_float
    {
        CONST_VTBL struct __x_ABI_C__FIReference_1_floatVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIReference_1_float_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIReference_1_int_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIReference_1_int_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIReference_1_int __x_ABI_C__FIReference_1_int;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIReference_1_int;

    typedef struct __x_ABI_C__FIReference_1_intVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIReference_1_int* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIReference_1_int* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIReference_1_int* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIReference_1_int* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIReference_1_int* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIReference_1_int* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Value)(__x_ABI_C__FIReference_1_int* This,
        INT32* result);

        END_INTERFACE
    } __x_ABI_C__FIReference_1_intVtbl;

    interface __x_ABI_C__FIReference_1_int
    {
        CONST_VTBL struct __x_ABI_C__FIReference_1_intVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIReference_1_int_INTERFACE_DEFINED__
    
typedef struct __x_ABI_CWindows_CFoundation_CRect __x_ABI_CWindows_CFoundation_CRect;

#if !defined(____x_ABI_C__FIReference_1___x_ABI_CWindows__CFoundation__CRect_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIReference_1___x_ABI_CWindows__CFoundation__CRect_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIReference_1___x_ABI_CWindows__CFoundation__CRect __x_ABI_C__FIReference_1___x_ABI_CWindows__CFoundation__CRect;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIReference_1___x_ABI_CWindows__CFoundation__CRect;

    typedef struct __x_ABI_C__FIReference_1___x_ABI_CWindows__CFoundation__CRectVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIReference_1___x_ABI_CWindows__CFoundation__CRect* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIReference_1___x_ABI_CWindows__CFoundation__CRect* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIReference_1___x_ABI_CWindows__CFoundation__CRect* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIReference_1___x_ABI_CWindows__CFoundation__CRect* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIReference_1___x_ABI_CWindows__CFoundation__CRect* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIReference_1___x_ABI_CWindows__CFoundation__CRect* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Value)(__x_ABI_C__FIReference_1___x_ABI_CWindows__CFoundation__CRect* This,
        struct __x_ABI_CWindows_CFoundation_CRect* result);

        END_INTERFACE
    } __x_ABI_C__FIReference_1___x_ABI_CWindows__CFoundation__CRectVtbl;

    interface __x_ABI_C__FIReference_1___x_ABI_CWindows__CFoundation__CRect
    {
        CONST_VTBL struct __x_ABI_C__FIReference_1___x_ABI_CWindows__CFoundation__CRectVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIReference_1___x_ABI_CWindows__CFoundation__CRect_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIReference_1___x_ABI_CWindows__CUI__CColor_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIReference_1___x_ABI_CWindows__CUI__CColor_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIReference_1___x_ABI_CWindows__CUI__CColor __x_ABI_C__FIReference_1___x_ABI_CWindows__CUI__CColor;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIReference_1___x_ABI_CWindows__CUI__CColor;

    typedef struct __x_ABI_C__FIReference_1___x_ABI_CWindows__CUI__CColorVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIReference_1___x_ABI_CWindows__CUI__CColor* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIReference_1___x_ABI_CWindows__CUI__CColor* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIReference_1___x_ABI_CWindows__CUI__CColor* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIReference_1___x_ABI_CWindows__CUI__CColor* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIReference_1___x_ABI_CWindows__CUI__CColor* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIReference_1___x_ABI_CWindows__CUI__CColor* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Value)(__x_ABI_C__FIReference_1___x_ABI_CWindows__CUI__CColor* This,
        struct __x_ABI_CWindows_CUI_CColor* result);

        END_INTERFACE
    } __x_ABI_C__FIReference_1___x_ABI_CWindows__CUI__CColorVtbl;

    interface __x_ABI_C__FIReference_1___x_ABI_CWindows__CUI__CColor
    {
        CONST_VTBL struct __x_ABI_C__FIReference_1___x_ABI_CWindows__CUI__CColorVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIReference_1___x_ABI_CWindows__CUI__CColor_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CAutoSuggestBox___x_ABI_CWindows__CUI__CXaml__CControls__CAutoSuggestBoxQuerySubmittedEventArgs_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CAutoSuggestBox___x_ABI_CWindows__CUI__CXaml__CControls__CAutoSuggestBoxQuerySubmittedEventArgs_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CAutoSuggestBox___x_ABI_CWindows__CUI__CXaml__CControls__CAutoSuggestBoxQuerySubmittedEventArgs __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CAutoSuggestBox___x_ABI_CWindows__CUI__CXaml__CControls__CAutoSuggestBoxQuerySubmittedEventArgs;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CAutoSuggestBox___x_ABI_CWindows__CUI__CXaml__CControls__CAutoSuggestBoxQuerySubmittedEventArgs;

    typedef struct __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CAutoSuggestBox___x_ABI_CWindows__CUI__CXaml__CControls__CAutoSuggestBoxQuerySubmittedEventArgsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CAutoSuggestBox___x_ABI_CWindows__CUI__CXaml__CControls__CAutoSuggestBoxQuerySubmittedEventArgs* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CAutoSuggestBox___x_ABI_CWindows__CUI__CXaml__CControls__CAutoSuggestBoxQuerySubmittedEventArgs* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CAutoSuggestBox___x_ABI_CWindows__CUI__CXaml__CControls__CAutoSuggestBoxQuerySubmittedEventArgs* This);
        HRESULT (STDMETHODCALLTYPE* Invoke)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CAutoSuggestBox___x_ABI_CWindows__CUI__CXaml__CControls__CAutoSuggestBoxQuerySubmittedEventArgs* This,
        __x_ABI_CWindows_CUI_CXaml_CControls_CIAutoSuggestBox* sender,
        __x_ABI_CWindows_CUI_CXaml_CControls_CIAutoSuggestBoxQuerySubmittedEventArgs* args);

        END_INTERFACE
    } __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CAutoSuggestBox___x_ABI_CWindows__CUI__CXaml__CControls__CAutoSuggestBoxQuerySubmittedEventArgsVtbl;

    interface __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CAutoSuggestBox___x_ABI_CWindows__CUI__CXaml__CControls__CAutoSuggestBoxQuerySubmittedEventArgs
    {
        CONST_VTBL struct __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CAutoSuggestBox___x_ABI_CWindows__CUI__CXaml__CControls__CAutoSuggestBoxQuerySubmittedEventArgsVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CAutoSuggestBox___x_ABI_CWindows__CUI__CXaml__CControls__CAutoSuggestBoxQuerySubmittedEventArgs_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CAutoSuggestBox___x_ABI_CWindows__CUI__CXaml__CControls__CAutoSuggestBoxSuggestionChosenEventArgs_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CAutoSuggestBox___x_ABI_CWindows__CUI__CXaml__CControls__CAutoSuggestBoxSuggestionChosenEventArgs_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CAutoSuggestBox___x_ABI_CWindows__CUI__CXaml__CControls__CAutoSuggestBoxSuggestionChosenEventArgs __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CAutoSuggestBox___x_ABI_CWindows__CUI__CXaml__CControls__CAutoSuggestBoxSuggestionChosenEventArgs;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CAutoSuggestBox___x_ABI_CWindows__CUI__CXaml__CControls__CAutoSuggestBoxSuggestionChosenEventArgs;

    typedef struct __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CAutoSuggestBox___x_ABI_CWindows__CUI__CXaml__CControls__CAutoSuggestBoxSuggestionChosenEventArgsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CAutoSuggestBox___x_ABI_CWindows__CUI__CXaml__CControls__CAutoSuggestBoxSuggestionChosenEventArgs* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CAutoSuggestBox___x_ABI_CWindows__CUI__CXaml__CControls__CAutoSuggestBoxSuggestionChosenEventArgs* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CAutoSuggestBox___x_ABI_CWindows__CUI__CXaml__CControls__CAutoSuggestBoxSuggestionChosenEventArgs* This);
        HRESULT (STDMETHODCALLTYPE* Invoke)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CAutoSuggestBox___x_ABI_CWindows__CUI__CXaml__CControls__CAutoSuggestBoxSuggestionChosenEventArgs* This,
        __x_ABI_CWindows_CUI_CXaml_CControls_CIAutoSuggestBox* sender,
        __x_ABI_CWindows_CUI_CXaml_CControls_CIAutoSuggestBoxSuggestionChosenEventArgs* args);

        END_INTERFACE
    } __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CAutoSuggestBox___x_ABI_CWindows__CUI__CXaml__CControls__CAutoSuggestBoxSuggestionChosenEventArgsVtbl;

    interface __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CAutoSuggestBox___x_ABI_CWindows__CUI__CXaml__CControls__CAutoSuggestBoxSuggestionChosenEventArgs
    {
        CONST_VTBL struct __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CAutoSuggestBox___x_ABI_CWindows__CUI__CXaml__CControls__CAutoSuggestBoxSuggestionChosenEventArgsVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CAutoSuggestBox___x_ABI_CWindows__CUI__CXaml__CControls__CAutoSuggestBoxSuggestionChosenEventArgs_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CAutoSuggestBox___x_ABI_CWindows__CUI__CXaml__CControls__CAutoSuggestBoxTextChangedEventArgs_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CAutoSuggestBox___x_ABI_CWindows__CUI__CXaml__CControls__CAutoSuggestBoxTextChangedEventArgs_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CAutoSuggestBox___x_ABI_CWindows__CUI__CXaml__CControls__CAutoSuggestBoxTextChangedEventArgs __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CAutoSuggestBox___x_ABI_CWindows__CUI__CXaml__CControls__CAutoSuggestBoxTextChangedEventArgs;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CAutoSuggestBox___x_ABI_CWindows__CUI__CXaml__CControls__CAutoSuggestBoxTextChangedEventArgs;

    typedef struct __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CAutoSuggestBox___x_ABI_CWindows__CUI__CXaml__CControls__CAutoSuggestBoxTextChangedEventArgsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CAutoSuggestBox___x_ABI_CWindows__CUI__CXaml__CControls__CAutoSuggestBoxTextChangedEventArgs* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CAutoSuggestBox___x_ABI_CWindows__CUI__CXaml__CControls__CAutoSuggestBoxTextChangedEventArgs* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CAutoSuggestBox___x_ABI_CWindows__CUI__CXaml__CControls__CAutoSuggestBoxTextChangedEventArgs* This);
        HRESULT (STDMETHODCALLTYPE* Invoke)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CAutoSuggestBox___x_ABI_CWindows__CUI__CXaml__CControls__CAutoSuggestBoxTextChangedEventArgs* This,
        __x_ABI_CWindows_CUI_CXaml_CControls_CIAutoSuggestBox* sender,
        __x_ABI_CWindows_CUI_CXaml_CControls_CIAutoSuggestBoxTextChangedEventArgs* args);

        END_INTERFACE
    } __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CAutoSuggestBox___x_ABI_CWindows__CUI__CXaml__CControls__CAutoSuggestBoxTextChangedEventArgsVtbl;

    interface __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CAutoSuggestBox___x_ABI_CWindows__CUI__CXaml__CControls__CAutoSuggestBoxTextChangedEventArgs
    {
        CONST_VTBL struct __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CAutoSuggestBox___x_ABI_CWindows__CUI__CXaml__CControls__CAutoSuggestBoxTextChangedEventArgsVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CAutoSuggestBox___x_ABI_CWindows__CUI__CXaml__CControls__CAutoSuggestBoxTextChangedEventArgs_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CCalendarDatePicker___x_ABI_CWindows__CUI__CXaml__CControls__CCalendarDatePickerDateChangedEventArgs_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CCalendarDatePicker___x_ABI_CWindows__CUI__CXaml__CControls__CCalendarDatePickerDateChangedEventArgs_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CCalendarDatePicker___x_ABI_CWindows__CUI__CXaml__CControls__CCalendarDatePickerDateChangedEventArgs __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CCalendarDatePicker___x_ABI_CWindows__CUI__CXaml__CControls__CCalendarDatePickerDateChangedEventArgs;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CCalendarDatePicker___x_ABI_CWindows__CUI__CXaml__CControls__CCalendarDatePickerDateChangedEventArgs;

    typedef struct __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CCalendarDatePicker___x_ABI_CWindows__CUI__CXaml__CControls__CCalendarDatePickerDateChangedEventArgsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CCalendarDatePicker___x_ABI_CWindows__CUI__CXaml__CControls__CCalendarDatePickerDateChangedEventArgs* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CCalendarDatePicker___x_ABI_CWindows__CUI__CXaml__CControls__CCalendarDatePickerDateChangedEventArgs* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CCalendarDatePicker___x_ABI_CWindows__CUI__CXaml__CControls__CCalendarDatePickerDateChangedEventArgs* This);
        HRESULT (STDMETHODCALLTYPE* Invoke)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CCalendarDatePicker___x_ABI_CWindows__CUI__CXaml__CControls__CCalendarDatePickerDateChangedEventArgs* This,
        __x_ABI_CWindows_CUI_CXaml_CControls_CICalendarDatePicker* sender,
        __x_ABI_CWindows_CUI_CXaml_CControls_CICalendarDatePickerDateChangedEventArgs* args);

        END_INTERFACE
    } __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CCalendarDatePicker___x_ABI_CWindows__CUI__CXaml__CControls__CCalendarDatePickerDateChangedEventArgsVtbl;

    interface __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CCalendarDatePicker___x_ABI_CWindows__CUI__CXaml__CControls__CCalendarDatePickerDateChangedEventArgs
    {
        CONST_VTBL struct __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CCalendarDatePicker___x_ABI_CWindows__CUI__CXaml__CControls__CCalendarDatePickerDateChangedEventArgsVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CCalendarDatePicker___x_ABI_CWindows__CUI__CXaml__CControls__CCalendarDatePickerDateChangedEventArgs_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CCalendarView___x_ABI_CWindows__CUI__CXaml__CControls__CCalendarViewDayItemChangingEventArgs_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CCalendarView___x_ABI_CWindows__CUI__CXaml__CControls__CCalendarViewDayItemChangingEventArgs_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CCalendarView___x_ABI_CWindows__CUI__CXaml__CControls__CCalendarViewDayItemChangingEventArgs __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CCalendarView___x_ABI_CWindows__CUI__CXaml__CControls__CCalendarViewDayItemChangingEventArgs;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CCalendarView___x_ABI_CWindows__CUI__CXaml__CControls__CCalendarViewDayItemChangingEventArgs;

    typedef struct __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CCalendarView___x_ABI_CWindows__CUI__CXaml__CControls__CCalendarViewDayItemChangingEventArgsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CCalendarView___x_ABI_CWindows__CUI__CXaml__CControls__CCalendarViewDayItemChangingEventArgs* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CCalendarView___x_ABI_CWindows__CUI__CXaml__CControls__CCalendarViewDayItemChangingEventArgs* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CCalendarView___x_ABI_CWindows__CUI__CXaml__CControls__CCalendarViewDayItemChangingEventArgs* This);
        HRESULT (STDMETHODCALLTYPE* Invoke)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CCalendarView___x_ABI_CWindows__CUI__CXaml__CControls__CCalendarViewDayItemChangingEventArgs* This,
        __x_ABI_CWindows_CUI_CXaml_CControls_CICalendarView* sender,
        __x_ABI_CWindows_CUI_CXaml_CControls_CICalendarViewDayItemChangingEventArgs* args);

        END_INTERFACE
    } __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CCalendarView___x_ABI_CWindows__CUI__CXaml__CControls__CCalendarViewDayItemChangingEventArgsVtbl;

    interface __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CCalendarView___x_ABI_CWindows__CUI__CXaml__CControls__CCalendarViewDayItemChangingEventArgs
    {
        CONST_VTBL struct __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CCalendarView___x_ABI_CWindows__CUI__CXaml__CControls__CCalendarViewDayItemChangingEventArgsVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CCalendarView___x_ABI_CWindows__CUI__CXaml__CControls__CCalendarViewDayItemChangingEventArgs_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CCalendarView___x_ABI_CWindows__CUI__CXaml__CControls__CCalendarViewSelectedDatesChangedEventArgs_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CCalendarView___x_ABI_CWindows__CUI__CXaml__CControls__CCalendarViewSelectedDatesChangedEventArgs_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CCalendarView___x_ABI_CWindows__CUI__CXaml__CControls__CCalendarViewSelectedDatesChangedEventArgs __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CCalendarView___x_ABI_CWindows__CUI__CXaml__CControls__CCalendarViewSelectedDatesChangedEventArgs;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CCalendarView___x_ABI_CWindows__CUI__CXaml__CControls__CCalendarViewSelectedDatesChangedEventArgs;

    typedef struct __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CCalendarView___x_ABI_CWindows__CUI__CXaml__CControls__CCalendarViewSelectedDatesChangedEventArgsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CCalendarView___x_ABI_CWindows__CUI__CXaml__CControls__CCalendarViewSelectedDatesChangedEventArgs* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CCalendarView___x_ABI_CWindows__CUI__CXaml__CControls__CCalendarViewSelectedDatesChangedEventArgs* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CCalendarView___x_ABI_CWindows__CUI__CXaml__CControls__CCalendarViewSelectedDatesChangedEventArgs* This);
        HRESULT (STDMETHODCALLTYPE* Invoke)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CCalendarView___x_ABI_CWindows__CUI__CXaml__CControls__CCalendarViewSelectedDatesChangedEventArgs* This,
        __x_ABI_CWindows_CUI_CXaml_CControls_CICalendarView* sender,
        __x_ABI_CWindows_CUI_CXaml_CControls_CICalendarViewSelectedDatesChangedEventArgs* args);

        END_INTERFACE
    } __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CCalendarView___x_ABI_CWindows__CUI__CXaml__CControls__CCalendarViewSelectedDatesChangedEventArgsVtbl;

    interface __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CCalendarView___x_ABI_CWindows__CUI__CXaml__CControls__CCalendarViewSelectedDatesChangedEventArgs
    {
        CONST_VTBL struct __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CCalendarView___x_ABI_CWindows__CUI__CXaml__CControls__CCalendarViewSelectedDatesChangedEventArgsVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CCalendarView___x_ABI_CWindows__CUI__CXaml__CControls__CCalendarViewSelectedDatesChangedEventArgs_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CColorPicker___x_ABI_CWindows__CUI__CXaml__CControls__CColorChangedEventArgs_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CColorPicker___x_ABI_CWindows__CUI__CXaml__CControls__CColorChangedEventArgs_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CColorPicker___x_ABI_CWindows__CUI__CXaml__CControls__CColorChangedEventArgs __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CColorPicker___x_ABI_CWindows__CUI__CXaml__CControls__CColorChangedEventArgs;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CColorPicker___x_ABI_CWindows__CUI__CXaml__CControls__CColorChangedEventArgs;

    typedef struct __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CColorPicker___x_ABI_CWindows__CUI__CXaml__CControls__CColorChangedEventArgsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CColorPicker___x_ABI_CWindows__CUI__CXaml__CControls__CColorChangedEventArgs* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CColorPicker___x_ABI_CWindows__CUI__CXaml__CControls__CColorChangedEventArgs* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CColorPicker___x_ABI_CWindows__CUI__CXaml__CControls__CColorChangedEventArgs* This);
        HRESULT (STDMETHODCALLTYPE* Invoke)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CColorPicker___x_ABI_CWindows__CUI__CXaml__CControls__CColorChangedEventArgs* This,
        __x_ABI_CWindows_CUI_CXaml_CControls_CIColorPicker* sender,
        __x_ABI_CWindows_CUI_CXaml_CControls_CIColorChangedEventArgs* args);

        END_INTERFACE
    } __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CColorPicker___x_ABI_CWindows__CUI__CXaml__CControls__CColorChangedEventArgsVtbl;

    interface __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CColorPicker___x_ABI_CWindows__CUI__CXaml__CControls__CColorChangedEventArgs
    {
        CONST_VTBL struct __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CColorPicker___x_ABI_CWindows__CUI__CXaml__CControls__CColorChangedEventArgsVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CColorPicker___x_ABI_CWindows__CUI__CXaml__CControls__CColorChangedEventArgs_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CComboBox___x_ABI_CWindows__CUI__CXaml__CControls__CComboBoxTextSubmittedEventArgs_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CComboBox___x_ABI_CWindows__CUI__CXaml__CControls__CComboBoxTextSubmittedEventArgs_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CComboBox___x_ABI_CWindows__CUI__CXaml__CControls__CComboBoxTextSubmittedEventArgs __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CComboBox___x_ABI_CWindows__CUI__CXaml__CControls__CComboBoxTextSubmittedEventArgs;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CComboBox___x_ABI_CWindows__CUI__CXaml__CControls__CComboBoxTextSubmittedEventArgs;

    typedef struct __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CComboBox___x_ABI_CWindows__CUI__CXaml__CControls__CComboBoxTextSubmittedEventArgsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CComboBox___x_ABI_CWindows__CUI__CXaml__CControls__CComboBoxTextSubmittedEventArgs* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CComboBox___x_ABI_CWindows__CUI__CXaml__CControls__CComboBoxTextSubmittedEventArgs* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CComboBox___x_ABI_CWindows__CUI__CXaml__CControls__CComboBoxTextSubmittedEventArgs* This);
        HRESULT (STDMETHODCALLTYPE* Invoke)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CComboBox___x_ABI_CWindows__CUI__CXaml__CControls__CComboBoxTextSubmittedEventArgs* This,
        __x_ABI_CWindows_CUI_CXaml_CControls_CIComboBox* sender,
        __x_ABI_CWindows_CUI_CXaml_CControls_CIComboBoxTextSubmittedEventArgs* args);

        END_INTERFACE
    } __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CComboBox___x_ABI_CWindows__CUI__CXaml__CControls__CComboBoxTextSubmittedEventArgsVtbl;

    interface __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CComboBox___x_ABI_CWindows__CUI__CXaml__CControls__CComboBoxTextSubmittedEventArgs
    {
        CONST_VTBL struct __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CComboBox___x_ABI_CWindows__CUI__CXaml__CControls__CComboBoxTextSubmittedEventArgsVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CComboBox___x_ABI_CWindows__CUI__CXaml__CControls__CComboBoxTextSubmittedEventArgs_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CCommandBar___x_ABI_CWindows__CUI__CXaml__CControls__CDynamicOverflowItemsChangingEventArgs_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CCommandBar___x_ABI_CWindows__CUI__CXaml__CControls__CDynamicOverflowItemsChangingEventArgs_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CCommandBar___x_ABI_CWindows__CUI__CXaml__CControls__CDynamicOverflowItemsChangingEventArgs __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CCommandBar___x_ABI_CWindows__CUI__CXaml__CControls__CDynamicOverflowItemsChangingEventArgs;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CCommandBar___x_ABI_CWindows__CUI__CXaml__CControls__CDynamicOverflowItemsChangingEventArgs;

    typedef struct __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CCommandBar___x_ABI_CWindows__CUI__CXaml__CControls__CDynamicOverflowItemsChangingEventArgsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CCommandBar___x_ABI_CWindows__CUI__CXaml__CControls__CDynamicOverflowItemsChangingEventArgs* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CCommandBar___x_ABI_CWindows__CUI__CXaml__CControls__CDynamicOverflowItemsChangingEventArgs* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CCommandBar___x_ABI_CWindows__CUI__CXaml__CControls__CDynamicOverflowItemsChangingEventArgs* This);
        HRESULT (STDMETHODCALLTYPE* Invoke)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CCommandBar___x_ABI_CWindows__CUI__CXaml__CControls__CDynamicOverflowItemsChangingEventArgs* This,
        __x_ABI_CWindows_CUI_CXaml_CControls_CICommandBar* sender,
        __x_ABI_CWindows_CUI_CXaml_CControls_CIDynamicOverflowItemsChangingEventArgs* args);

        END_INTERFACE
    } __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CCommandBar___x_ABI_CWindows__CUI__CXaml__CControls__CDynamicOverflowItemsChangingEventArgsVtbl;

    interface __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CCommandBar___x_ABI_CWindows__CUI__CXaml__CControls__CDynamicOverflowItemsChangingEventArgs
    {
        CONST_VTBL struct __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CCommandBar___x_ABI_CWindows__CUI__CXaml__CControls__CDynamicOverflowItemsChangingEventArgsVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CCommandBar___x_ABI_CWindows__CUI__CXaml__CControls__CDynamicOverflowItemsChangingEventArgs_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CContentDialog___x_ABI_CWindows__CUI__CXaml__CControls__CContentDialogButtonClickEventArgs_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CContentDialog___x_ABI_CWindows__CUI__CXaml__CControls__CContentDialogButtonClickEventArgs_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CContentDialog___x_ABI_CWindows__CUI__CXaml__CControls__CContentDialogButtonClickEventArgs __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CContentDialog___x_ABI_CWindows__CUI__CXaml__CControls__CContentDialogButtonClickEventArgs;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CContentDialog___x_ABI_CWindows__CUI__CXaml__CControls__CContentDialogButtonClickEventArgs;

    typedef struct __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CContentDialog___x_ABI_CWindows__CUI__CXaml__CControls__CContentDialogButtonClickEventArgsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CContentDialog___x_ABI_CWindows__CUI__CXaml__CControls__CContentDialogButtonClickEventArgs* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CContentDialog___x_ABI_CWindows__CUI__CXaml__CControls__CContentDialogButtonClickEventArgs* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CContentDialog___x_ABI_CWindows__CUI__CXaml__CControls__CContentDialogButtonClickEventArgs* This);
        HRESULT (STDMETHODCALLTYPE* Invoke)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CContentDialog___x_ABI_CWindows__CUI__CXaml__CControls__CContentDialogButtonClickEventArgs* This,
        __x_ABI_CWindows_CUI_CXaml_CControls_CIContentDialog* sender,
        __x_ABI_CWindows_CUI_CXaml_CControls_CIContentDialogButtonClickEventArgs* args);

        END_INTERFACE
    } __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CContentDialog___x_ABI_CWindows__CUI__CXaml__CControls__CContentDialogButtonClickEventArgsVtbl;

    interface __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CContentDialog___x_ABI_CWindows__CUI__CXaml__CControls__CContentDialogButtonClickEventArgs
    {
        CONST_VTBL struct __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CContentDialog___x_ABI_CWindows__CUI__CXaml__CControls__CContentDialogButtonClickEventArgsVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CContentDialog___x_ABI_CWindows__CUI__CXaml__CControls__CContentDialogButtonClickEventArgs_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CContentDialog___x_ABI_CWindows__CUI__CXaml__CControls__CContentDialogClosedEventArgs_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CContentDialog___x_ABI_CWindows__CUI__CXaml__CControls__CContentDialogClosedEventArgs_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CContentDialog___x_ABI_CWindows__CUI__CXaml__CControls__CContentDialogClosedEventArgs __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CContentDialog___x_ABI_CWindows__CUI__CXaml__CControls__CContentDialogClosedEventArgs;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CContentDialog___x_ABI_CWindows__CUI__CXaml__CControls__CContentDialogClosedEventArgs;

    typedef struct __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CContentDialog___x_ABI_CWindows__CUI__CXaml__CControls__CContentDialogClosedEventArgsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CContentDialog___x_ABI_CWindows__CUI__CXaml__CControls__CContentDialogClosedEventArgs* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CContentDialog___x_ABI_CWindows__CUI__CXaml__CControls__CContentDialogClosedEventArgs* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CContentDialog___x_ABI_CWindows__CUI__CXaml__CControls__CContentDialogClosedEventArgs* This);
        HRESULT (STDMETHODCALLTYPE* Invoke)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CContentDialog___x_ABI_CWindows__CUI__CXaml__CControls__CContentDialogClosedEventArgs* This,
        __x_ABI_CWindows_CUI_CXaml_CControls_CIContentDialog* sender,
        __x_ABI_CWindows_CUI_CXaml_CControls_CIContentDialogClosedEventArgs* args);

        END_INTERFACE
    } __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CContentDialog___x_ABI_CWindows__CUI__CXaml__CControls__CContentDialogClosedEventArgsVtbl;

    interface __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CContentDialog___x_ABI_CWindows__CUI__CXaml__CControls__CContentDialogClosedEventArgs
    {
        CONST_VTBL struct __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CContentDialog___x_ABI_CWindows__CUI__CXaml__CControls__CContentDialogClosedEventArgsVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CContentDialog___x_ABI_CWindows__CUI__CXaml__CControls__CContentDialogClosedEventArgs_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CContentDialog___x_ABI_CWindows__CUI__CXaml__CControls__CContentDialogClosingEventArgs_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CContentDialog___x_ABI_CWindows__CUI__CXaml__CControls__CContentDialogClosingEventArgs_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CContentDialog___x_ABI_CWindows__CUI__CXaml__CControls__CContentDialogClosingEventArgs __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CContentDialog___x_ABI_CWindows__CUI__CXaml__CControls__CContentDialogClosingEventArgs;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CContentDialog___x_ABI_CWindows__CUI__CXaml__CControls__CContentDialogClosingEventArgs;

    typedef struct __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CContentDialog___x_ABI_CWindows__CUI__CXaml__CControls__CContentDialogClosingEventArgsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CContentDialog___x_ABI_CWindows__CUI__CXaml__CControls__CContentDialogClosingEventArgs* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CContentDialog___x_ABI_CWindows__CUI__CXaml__CControls__CContentDialogClosingEventArgs* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CContentDialog___x_ABI_CWindows__CUI__CXaml__CControls__CContentDialogClosingEventArgs* This);
        HRESULT (STDMETHODCALLTYPE* Invoke)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CContentDialog___x_ABI_CWindows__CUI__CXaml__CControls__CContentDialogClosingEventArgs* This,
        __x_ABI_CWindows_CUI_CXaml_CControls_CIContentDialog* sender,
        __x_ABI_CWindows_CUI_CXaml_CControls_CIContentDialogClosingEventArgs* args);

        END_INTERFACE
    } __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CContentDialog___x_ABI_CWindows__CUI__CXaml__CControls__CContentDialogClosingEventArgsVtbl;

    interface __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CContentDialog___x_ABI_CWindows__CUI__CXaml__CControls__CContentDialogClosingEventArgs
    {
        CONST_VTBL struct __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CContentDialog___x_ABI_CWindows__CUI__CXaml__CControls__CContentDialogClosingEventArgsVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CContentDialog___x_ABI_CWindows__CUI__CXaml__CControls__CContentDialogClosingEventArgs_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CContentDialog___x_ABI_CWindows__CUI__CXaml__CControls__CContentDialogOpenedEventArgs_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CContentDialog___x_ABI_CWindows__CUI__CXaml__CControls__CContentDialogOpenedEventArgs_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CContentDialog___x_ABI_CWindows__CUI__CXaml__CControls__CContentDialogOpenedEventArgs __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CContentDialog___x_ABI_CWindows__CUI__CXaml__CControls__CContentDialogOpenedEventArgs;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CContentDialog___x_ABI_CWindows__CUI__CXaml__CControls__CContentDialogOpenedEventArgs;

    typedef struct __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CContentDialog___x_ABI_CWindows__CUI__CXaml__CControls__CContentDialogOpenedEventArgsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CContentDialog___x_ABI_CWindows__CUI__CXaml__CControls__CContentDialogOpenedEventArgs* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CContentDialog___x_ABI_CWindows__CUI__CXaml__CControls__CContentDialogOpenedEventArgs* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CContentDialog___x_ABI_CWindows__CUI__CXaml__CControls__CContentDialogOpenedEventArgs* This);
        HRESULT (STDMETHODCALLTYPE* Invoke)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CContentDialog___x_ABI_CWindows__CUI__CXaml__CControls__CContentDialogOpenedEventArgs* This,
        __x_ABI_CWindows_CUI_CXaml_CControls_CIContentDialog* sender,
        __x_ABI_CWindows_CUI_CXaml_CControls_CIContentDialogOpenedEventArgs* args);

        END_INTERFACE
    } __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CContentDialog___x_ABI_CWindows__CUI__CXaml__CControls__CContentDialogOpenedEventArgsVtbl;

    interface __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CContentDialog___x_ABI_CWindows__CUI__CXaml__CControls__CContentDialogOpenedEventArgs
    {
        CONST_VTBL struct __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CContentDialog___x_ABI_CWindows__CUI__CXaml__CControls__CContentDialogOpenedEventArgsVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CContentDialog___x_ABI_CWindows__CUI__CXaml__CControls__CContentDialogOpenedEventArgs_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CControl___x_ABI_CWindows__CUI__CXaml__CControls__CFocusDisengagedEventArgs_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CControl___x_ABI_CWindows__CUI__CXaml__CControls__CFocusDisengagedEventArgs_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CControl___x_ABI_CWindows__CUI__CXaml__CControls__CFocusDisengagedEventArgs __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CControl___x_ABI_CWindows__CUI__CXaml__CControls__CFocusDisengagedEventArgs;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CControl___x_ABI_CWindows__CUI__CXaml__CControls__CFocusDisengagedEventArgs;

    typedef struct __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CControl___x_ABI_CWindows__CUI__CXaml__CControls__CFocusDisengagedEventArgsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CControl___x_ABI_CWindows__CUI__CXaml__CControls__CFocusDisengagedEventArgs* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CControl___x_ABI_CWindows__CUI__CXaml__CControls__CFocusDisengagedEventArgs* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CControl___x_ABI_CWindows__CUI__CXaml__CControls__CFocusDisengagedEventArgs* This);
        HRESULT (STDMETHODCALLTYPE* Invoke)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CControl___x_ABI_CWindows__CUI__CXaml__CControls__CFocusDisengagedEventArgs* This,
        __x_ABI_CWindows_CUI_CXaml_CControls_CIControl* sender,
        __x_ABI_CWindows_CUI_CXaml_CControls_CIFocusDisengagedEventArgs* args);

        END_INTERFACE
    } __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CControl___x_ABI_CWindows__CUI__CXaml__CControls__CFocusDisengagedEventArgsVtbl;

    interface __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CControl___x_ABI_CWindows__CUI__CXaml__CControls__CFocusDisengagedEventArgs
    {
        CONST_VTBL struct __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CControl___x_ABI_CWindows__CUI__CXaml__CControls__CFocusDisengagedEventArgsVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CControl___x_ABI_CWindows__CUI__CXaml__CControls__CFocusDisengagedEventArgs_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CControl___x_ABI_CWindows__CUI__CXaml__CControls__CFocusEngagedEventArgs_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CControl___x_ABI_CWindows__CUI__CXaml__CControls__CFocusEngagedEventArgs_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CControl___x_ABI_CWindows__CUI__CXaml__CControls__CFocusEngagedEventArgs __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CControl___x_ABI_CWindows__CUI__CXaml__CControls__CFocusEngagedEventArgs;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CControl___x_ABI_CWindows__CUI__CXaml__CControls__CFocusEngagedEventArgs;

    typedef struct __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CControl___x_ABI_CWindows__CUI__CXaml__CControls__CFocusEngagedEventArgsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CControl___x_ABI_CWindows__CUI__CXaml__CControls__CFocusEngagedEventArgs* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CControl___x_ABI_CWindows__CUI__CXaml__CControls__CFocusEngagedEventArgs* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CControl___x_ABI_CWindows__CUI__CXaml__CControls__CFocusEngagedEventArgs* This);
        HRESULT (STDMETHODCALLTYPE* Invoke)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CControl___x_ABI_CWindows__CUI__CXaml__CControls__CFocusEngagedEventArgs* This,
        __x_ABI_CWindows_CUI_CXaml_CControls_CIControl* sender,
        __x_ABI_CWindows_CUI_CXaml_CControls_CIFocusEngagedEventArgs* args);

        END_INTERFACE
    } __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CControl___x_ABI_CWindows__CUI__CXaml__CControls__CFocusEngagedEventArgsVtbl;

    interface __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CControl___x_ABI_CWindows__CUI__CXaml__CControls__CFocusEngagedEventArgs
    {
        CONST_VTBL struct __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CControl___x_ABI_CWindows__CUI__CXaml__CControls__CFocusEngagedEventArgsVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CControl___x_ABI_CWindows__CUI__CXaml__CControls__CFocusEngagedEventArgs_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CDatePicker___x_ABI_CWindows__CUI__CXaml__CControls__CDatePickerSelectedValueChangedEventArgs_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CDatePicker___x_ABI_CWindows__CUI__CXaml__CControls__CDatePickerSelectedValueChangedEventArgs_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CDatePicker___x_ABI_CWindows__CUI__CXaml__CControls__CDatePickerSelectedValueChangedEventArgs __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CDatePicker___x_ABI_CWindows__CUI__CXaml__CControls__CDatePickerSelectedValueChangedEventArgs;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CDatePicker___x_ABI_CWindows__CUI__CXaml__CControls__CDatePickerSelectedValueChangedEventArgs;

    typedef struct __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CDatePicker___x_ABI_CWindows__CUI__CXaml__CControls__CDatePickerSelectedValueChangedEventArgsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CDatePicker___x_ABI_CWindows__CUI__CXaml__CControls__CDatePickerSelectedValueChangedEventArgs* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CDatePicker___x_ABI_CWindows__CUI__CXaml__CControls__CDatePickerSelectedValueChangedEventArgs* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CDatePicker___x_ABI_CWindows__CUI__CXaml__CControls__CDatePickerSelectedValueChangedEventArgs* This);
        HRESULT (STDMETHODCALLTYPE* Invoke)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CDatePicker___x_ABI_CWindows__CUI__CXaml__CControls__CDatePickerSelectedValueChangedEventArgs* This,
        __x_ABI_CWindows_CUI_CXaml_CControls_CIDatePicker* sender,
        __x_ABI_CWindows_CUI_CXaml_CControls_CIDatePickerSelectedValueChangedEventArgs* args);

        END_INTERFACE
    } __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CDatePicker___x_ABI_CWindows__CUI__CXaml__CControls__CDatePickerSelectedValueChangedEventArgsVtbl;

    interface __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CDatePicker___x_ABI_CWindows__CUI__CXaml__CControls__CDatePickerSelectedValueChangedEventArgs
    {
        CONST_VTBL struct __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CDatePicker___x_ABI_CWindows__CUI__CXaml__CControls__CDatePickerSelectedValueChangedEventArgsVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CDatePicker___x_ABI_CWindows__CUI__CXaml__CControls__CDatePickerSelectedValueChangedEventArgs_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CDatePickerFlyout___x_ABI_CWindows__CUI__CXaml__CControls__CDatePickedEventArgs_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CDatePickerFlyout___x_ABI_CWindows__CUI__CXaml__CControls__CDatePickedEventArgs_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CDatePickerFlyout___x_ABI_CWindows__CUI__CXaml__CControls__CDatePickedEventArgs __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CDatePickerFlyout___x_ABI_CWindows__CUI__CXaml__CControls__CDatePickedEventArgs;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CDatePickerFlyout___x_ABI_CWindows__CUI__CXaml__CControls__CDatePickedEventArgs;

    typedef struct __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CDatePickerFlyout___x_ABI_CWindows__CUI__CXaml__CControls__CDatePickedEventArgsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CDatePickerFlyout___x_ABI_CWindows__CUI__CXaml__CControls__CDatePickedEventArgs* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CDatePickerFlyout___x_ABI_CWindows__CUI__CXaml__CControls__CDatePickedEventArgs* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CDatePickerFlyout___x_ABI_CWindows__CUI__CXaml__CControls__CDatePickedEventArgs* This);
        HRESULT (STDMETHODCALLTYPE* Invoke)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CDatePickerFlyout___x_ABI_CWindows__CUI__CXaml__CControls__CDatePickedEventArgs* This,
        __x_ABI_CWindows_CUI_CXaml_CControls_CIDatePickerFlyout* sender,
        __x_ABI_CWindows_CUI_CXaml_CControls_CIDatePickedEventArgs* args);

        END_INTERFACE
    } __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CDatePickerFlyout___x_ABI_CWindows__CUI__CXaml__CControls__CDatePickedEventArgsVtbl;

    interface __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CDatePickerFlyout___x_ABI_CWindows__CUI__CXaml__CControls__CDatePickedEventArgs
    {
        CONST_VTBL struct __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CDatePickerFlyout___x_ABI_CWindows__CUI__CXaml__CControls__CDatePickedEventArgsVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CDatePickerFlyout___x_ABI_CWindows__CUI__CXaml__CControls__CDatePickedEventArgs_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CHandwritingView___x_ABI_CWindows__CUI__CXaml__CControls__CHandwritingPanelClosedEventArgs_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CHandwritingView___x_ABI_CWindows__CUI__CXaml__CControls__CHandwritingPanelClosedEventArgs_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CHandwritingView___x_ABI_CWindows__CUI__CXaml__CControls__CHandwritingPanelClosedEventArgs __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CHandwritingView___x_ABI_CWindows__CUI__CXaml__CControls__CHandwritingPanelClosedEventArgs;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CHandwritingView___x_ABI_CWindows__CUI__CXaml__CControls__CHandwritingPanelClosedEventArgs;

    typedef struct __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CHandwritingView___x_ABI_CWindows__CUI__CXaml__CControls__CHandwritingPanelClosedEventArgsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CHandwritingView___x_ABI_CWindows__CUI__CXaml__CControls__CHandwritingPanelClosedEventArgs* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CHandwritingView___x_ABI_CWindows__CUI__CXaml__CControls__CHandwritingPanelClosedEventArgs* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CHandwritingView___x_ABI_CWindows__CUI__CXaml__CControls__CHandwritingPanelClosedEventArgs* This);
        HRESULT (STDMETHODCALLTYPE* Invoke)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CHandwritingView___x_ABI_CWindows__CUI__CXaml__CControls__CHandwritingPanelClosedEventArgs* This,
        __x_ABI_CWindows_CUI_CXaml_CControls_CIHandwritingView* sender,
        __x_ABI_CWindows_CUI_CXaml_CControls_CIHandwritingPanelClosedEventArgs* args);

        END_INTERFACE
    } __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CHandwritingView___x_ABI_CWindows__CUI__CXaml__CControls__CHandwritingPanelClosedEventArgsVtbl;

    interface __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CHandwritingView___x_ABI_CWindows__CUI__CXaml__CControls__CHandwritingPanelClosedEventArgs
    {
        CONST_VTBL struct __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CHandwritingView___x_ABI_CWindows__CUI__CXaml__CControls__CHandwritingPanelClosedEventArgsVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CHandwritingView___x_ABI_CWindows__CUI__CXaml__CControls__CHandwritingPanelClosedEventArgs_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CHandwritingView___x_ABI_CWindows__CUI__CXaml__CControls__CHandwritingPanelOpenedEventArgs_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CHandwritingView___x_ABI_CWindows__CUI__CXaml__CControls__CHandwritingPanelOpenedEventArgs_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CHandwritingView___x_ABI_CWindows__CUI__CXaml__CControls__CHandwritingPanelOpenedEventArgs __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CHandwritingView___x_ABI_CWindows__CUI__CXaml__CControls__CHandwritingPanelOpenedEventArgs;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CHandwritingView___x_ABI_CWindows__CUI__CXaml__CControls__CHandwritingPanelOpenedEventArgs;

    typedef struct __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CHandwritingView___x_ABI_CWindows__CUI__CXaml__CControls__CHandwritingPanelOpenedEventArgsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CHandwritingView___x_ABI_CWindows__CUI__CXaml__CControls__CHandwritingPanelOpenedEventArgs* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CHandwritingView___x_ABI_CWindows__CUI__CXaml__CControls__CHandwritingPanelOpenedEventArgs* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CHandwritingView___x_ABI_CWindows__CUI__CXaml__CControls__CHandwritingPanelOpenedEventArgs* This);
        HRESULT (STDMETHODCALLTYPE* Invoke)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CHandwritingView___x_ABI_CWindows__CUI__CXaml__CControls__CHandwritingPanelOpenedEventArgs* This,
        __x_ABI_CWindows_CUI_CXaml_CControls_CIHandwritingView* sender,
        __x_ABI_CWindows_CUI_CXaml_CControls_CIHandwritingPanelOpenedEventArgs* args);

        END_INTERFACE
    } __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CHandwritingView___x_ABI_CWindows__CUI__CXaml__CControls__CHandwritingPanelOpenedEventArgsVtbl;

    interface __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CHandwritingView___x_ABI_CWindows__CUI__CXaml__CControls__CHandwritingPanelOpenedEventArgs
    {
        CONST_VTBL struct __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CHandwritingView___x_ABI_CWindows__CUI__CXaml__CControls__CHandwritingPanelOpenedEventArgsVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CHandwritingView___x_ABI_CWindows__CUI__CXaml__CControls__CHandwritingPanelOpenedEventArgs_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CInkToolbar_IInspectable_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CInkToolbar_IInspectable_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CInkToolbar_IInspectable __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CInkToolbar_IInspectable;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CInkToolbar_IInspectable;

    typedef struct __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CInkToolbar_IInspectableVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CInkToolbar_IInspectable* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CInkToolbar_IInspectable* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CInkToolbar_IInspectable* This);
        HRESULT (STDMETHODCALLTYPE* Invoke)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CInkToolbar_IInspectable* This,
        __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbar* sender,
        IInspectable* args);

        END_INTERFACE
    } __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CInkToolbar_IInspectableVtbl;

    interface __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CInkToolbar_IInspectable
    {
        CONST_VTBL struct __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CInkToolbar_IInspectableVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CInkToolbar_IInspectable_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CInkToolbar___x_ABI_CWindows__CUI__CXaml__CControls__CInkToolbarIsStencilButtonCheckedChangedEventArgs_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CInkToolbar___x_ABI_CWindows__CUI__CXaml__CControls__CInkToolbarIsStencilButtonCheckedChangedEventArgs_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CInkToolbar___x_ABI_CWindows__CUI__CXaml__CControls__CInkToolbarIsStencilButtonCheckedChangedEventArgs __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CInkToolbar___x_ABI_CWindows__CUI__CXaml__CControls__CInkToolbarIsStencilButtonCheckedChangedEventArgs;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CInkToolbar___x_ABI_CWindows__CUI__CXaml__CControls__CInkToolbarIsStencilButtonCheckedChangedEventArgs;

    typedef struct __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CInkToolbar___x_ABI_CWindows__CUI__CXaml__CControls__CInkToolbarIsStencilButtonCheckedChangedEventArgsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CInkToolbar___x_ABI_CWindows__CUI__CXaml__CControls__CInkToolbarIsStencilButtonCheckedChangedEventArgs* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CInkToolbar___x_ABI_CWindows__CUI__CXaml__CControls__CInkToolbarIsStencilButtonCheckedChangedEventArgs* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CInkToolbar___x_ABI_CWindows__CUI__CXaml__CControls__CInkToolbarIsStencilButtonCheckedChangedEventArgs* This);
        HRESULT (STDMETHODCALLTYPE* Invoke)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CInkToolbar___x_ABI_CWindows__CUI__CXaml__CControls__CInkToolbarIsStencilButtonCheckedChangedEventArgs* This,
        __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbar* sender,
        __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarIsStencilButtonCheckedChangedEventArgs* args);

        END_INTERFACE
    } __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CInkToolbar___x_ABI_CWindows__CUI__CXaml__CControls__CInkToolbarIsStencilButtonCheckedChangedEventArgsVtbl;

    interface __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CInkToolbar___x_ABI_CWindows__CUI__CXaml__CControls__CInkToolbarIsStencilButtonCheckedChangedEventArgs
    {
        CONST_VTBL struct __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CInkToolbar___x_ABI_CWindows__CUI__CXaml__CControls__CInkToolbarIsStencilButtonCheckedChangedEventArgsVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CInkToolbar___x_ABI_CWindows__CUI__CXaml__CControls__CInkToolbarIsStencilButtonCheckedChangedEventArgs_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CInkToolbarFlyoutItem_IInspectable_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CInkToolbarFlyoutItem_IInspectable_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CInkToolbarFlyoutItem_IInspectable __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CInkToolbarFlyoutItem_IInspectable;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CInkToolbarFlyoutItem_IInspectable;

    typedef struct __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CInkToolbarFlyoutItem_IInspectableVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CInkToolbarFlyoutItem_IInspectable* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CInkToolbarFlyoutItem_IInspectable* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CInkToolbarFlyoutItem_IInspectable* This);
        HRESULT (STDMETHODCALLTYPE* Invoke)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CInkToolbarFlyoutItem_IInspectable* This,
        __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarFlyoutItem* sender,
        IInspectable* args);

        END_INTERFACE
    } __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CInkToolbarFlyoutItem_IInspectableVtbl;

    interface __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CInkToolbarFlyoutItem_IInspectable
    {
        CONST_VTBL struct __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CInkToolbarFlyoutItem_IInspectableVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CInkToolbarFlyoutItem_IInspectable_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CListPickerFlyout___x_ABI_CWindows__CUI__CXaml__CControls__CItemsPickedEventArgs_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CListPickerFlyout___x_ABI_CWindows__CUI__CXaml__CControls__CItemsPickedEventArgs_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CListPickerFlyout___x_ABI_CWindows__CUI__CXaml__CControls__CItemsPickedEventArgs __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CListPickerFlyout___x_ABI_CWindows__CUI__CXaml__CControls__CItemsPickedEventArgs;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CListPickerFlyout___x_ABI_CWindows__CUI__CXaml__CControls__CItemsPickedEventArgs;

    typedef struct __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CListPickerFlyout___x_ABI_CWindows__CUI__CXaml__CControls__CItemsPickedEventArgsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CListPickerFlyout___x_ABI_CWindows__CUI__CXaml__CControls__CItemsPickedEventArgs* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CListPickerFlyout___x_ABI_CWindows__CUI__CXaml__CControls__CItemsPickedEventArgs* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CListPickerFlyout___x_ABI_CWindows__CUI__CXaml__CControls__CItemsPickedEventArgs* This);
        HRESULT (STDMETHODCALLTYPE* Invoke)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CListPickerFlyout___x_ABI_CWindows__CUI__CXaml__CControls__CItemsPickedEventArgs* This,
        __x_ABI_CWindows_CUI_CXaml_CControls_CIListPickerFlyout* sender,
        __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsPickedEventArgs* args);

        END_INTERFACE
    } __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CListPickerFlyout___x_ABI_CWindows__CUI__CXaml__CControls__CItemsPickedEventArgsVtbl;

    interface __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CListPickerFlyout___x_ABI_CWindows__CUI__CXaml__CControls__CItemsPickedEventArgs
    {
        CONST_VTBL struct __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CListPickerFlyout___x_ABI_CWindows__CUI__CXaml__CControls__CItemsPickedEventArgsVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CListPickerFlyout___x_ABI_CWindows__CUI__CXaml__CControls__CItemsPickedEventArgs_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CListViewBase___x_ABI_CWindows__CUI__CXaml__CControls__CChoosingGroupHeaderContainerEventArgs_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CListViewBase___x_ABI_CWindows__CUI__CXaml__CControls__CChoosingGroupHeaderContainerEventArgs_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CListViewBase___x_ABI_CWindows__CUI__CXaml__CControls__CChoosingGroupHeaderContainerEventArgs __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CListViewBase___x_ABI_CWindows__CUI__CXaml__CControls__CChoosingGroupHeaderContainerEventArgs;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CListViewBase___x_ABI_CWindows__CUI__CXaml__CControls__CChoosingGroupHeaderContainerEventArgs;

    typedef struct __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CListViewBase___x_ABI_CWindows__CUI__CXaml__CControls__CChoosingGroupHeaderContainerEventArgsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CListViewBase___x_ABI_CWindows__CUI__CXaml__CControls__CChoosingGroupHeaderContainerEventArgs* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CListViewBase___x_ABI_CWindows__CUI__CXaml__CControls__CChoosingGroupHeaderContainerEventArgs* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CListViewBase___x_ABI_CWindows__CUI__CXaml__CControls__CChoosingGroupHeaderContainerEventArgs* This);
        HRESULT (STDMETHODCALLTYPE* Invoke)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CListViewBase___x_ABI_CWindows__CUI__CXaml__CControls__CChoosingGroupHeaderContainerEventArgs* This,
        __x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBase* sender,
        __x_ABI_CWindows_CUI_CXaml_CControls_CIChoosingGroupHeaderContainerEventArgs* args);

        END_INTERFACE
    } __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CListViewBase___x_ABI_CWindows__CUI__CXaml__CControls__CChoosingGroupHeaderContainerEventArgsVtbl;

    interface __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CListViewBase___x_ABI_CWindows__CUI__CXaml__CControls__CChoosingGroupHeaderContainerEventArgs
    {
        CONST_VTBL struct __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CListViewBase___x_ABI_CWindows__CUI__CXaml__CControls__CChoosingGroupHeaderContainerEventArgsVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CListViewBase___x_ABI_CWindows__CUI__CXaml__CControls__CChoosingGroupHeaderContainerEventArgs_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CListViewBase___x_ABI_CWindows__CUI__CXaml__CControls__CChoosingItemContainerEventArgs_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CListViewBase___x_ABI_CWindows__CUI__CXaml__CControls__CChoosingItemContainerEventArgs_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CListViewBase___x_ABI_CWindows__CUI__CXaml__CControls__CChoosingItemContainerEventArgs __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CListViewBase___x_ABI_CWindows__CUI__CXaml__CControls__CChoosingItemContainerEventArgs;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CListViewBase___x_ABI_CWindows__CUI__CXaml__CControls__CChoosingItemContainerEventArgs;

    typedef struct __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CListViewBase___x_ABI_CWindows__CUI__CXaml__CControls__CChoosingItemContainerEventArgsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CListViewBase___x_ABI_CWindows__CUI__CXaml__CControls__CChoosingItemContainerEventArgs* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CListViewBase___x_ABI_CWindows__CUI__CXaml__CControls__CChoosingItemContainerEventArgs* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CListViewBase___x_ABI_CWindows__CUI__CXaml__CControls__CChoosingItemContainerEventArgs* This);
        HRESULT (STDMETHODCALLTYPE* Invoke)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CListViewBase___x_ABI_CWindows__CUI__CXaml__CControls__CChoosingItemContainerEventArgs* This,
        __x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBase* sender,
        __x_ABI_CWindows_CUI_CXaml_CControls_CIChoosingItemContainerEventArgs* args);

        END_INTERFACE
    } __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CListViewBase___x_ABI_CWindows__CUI__CXaml__CControls__CChoosingItemContainerEventArgsVtbl;

    interface __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CListViewBase___x_ABI_CWindows__CUI__CXaml__CControls__CChoosingItemContainerEventArgs
    {
        CONST_VTBL struct __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CListViewBase___x_ABI_CWindows__CUI__CXaml__CControls__CChoosingItemContainerEventArgsVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CListViewBase___x_ABI_CWindows__CUI__CXaml__CControls__CChoosingItemContainerEventArgs_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CListViewBase___x_ABI_CWindows__CUI__CXaml__CControls__CContainerContentChangingEventArgs_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CListViewBase___x_ABI_CWindows__CUI__CXaml__CControls__CContainerContentChangingEventArgs_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CListViewBase___x_ABI_CWindows__CUI__CXaml__CControls__CContainerContentChangingEventArgs __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CListViewBase___x_ABI_CWindows__CUI__CXaml__CControls__CContainerContentChangingEventArgs;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CListViewBase___x_ABI_CWindows__CUI__CXaml__CControls__CContainerContentChangingEventArgs;

    typedef struct __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CListViewBase___x_ABI_CWindows__CUI__CXaml__CControls__CContainerContentChangingEventArgsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CListViewBase___x_ABI_CWindows__CUI__CXaml__CControls__CContainerContentChangingEventArgs* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CListViewBase___x_ABI_CWindows__CUI__CXaml__CControls__CContainerContentChangingEventArgs* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CListViewBase___x_ABI_CWindows__CUI__CXaml__CControls__CContainerContentChangingEventArgs* This);
        HRESULT (STDMETHODCALLTYPE* Invoke)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CListViewBase___x_ABI_CWindows__CUI__CXaml__CControls__CContainerContentChangingEventArgs* This,
        __x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBase* sender,
        __x_ABI_CWindows_CUI_CXaml_CControls_CIContainerContentChangingEventArgs* args);

        END_INTERFACE
    } __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CListViewBase___x_ABI_CWindows__CUI__CXaml__CControls__CContainerContentChangingEventArgsVtbl;

    interface __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CListViewBase___x_ABI_CWindows__CUI__CXaml__CControls__CContainerContentChangingEventArgs
    {
        CONST_VTBL struct __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CListViewBase___x_ABI_CWindows__CUI__CXaml__CControls__CContainerContentChangingEventArgsVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CListViewBase___x_ABI_CWindows__CUI__CXaml__CControls__CContainerContentChangingEventArgs_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CListViewBase___x_ABI_CWindows__CUI__CXaml__CControls__CDragItemsCompletedEventArgs_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CListViewBase___x_ABI_CWindows__CUI__CXaml__CControls__CDragItemsCompletedEventArgs_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CListViewBase___x_ABI_CWindows__CUI__CXaml__CControls__CDragItemsCompletedEventArgs __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CListViewBase___x_ABI_CWindows__CUI__CXaml__CControls__CDragItemsCompletedEventArgs;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CListViewBase___x_ABI_CWindows__CUI__CXaml__CControls__CDragItemsCompletedEventArgs;

    typedef struct __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CListViewBase___x_ABI_CWindows__CUI__CXaml__CControls__CDragItemsCompletedEventArgsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CListViewBase___x_ABI_CWindows__CUI__CXaml__CControls__CDragItemsCompletedEventArgs* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CListViewBase___x_ABI_CWindows__CUI__CXaml__CControls__CDragItemsCompletedEventArgs* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CListViewBase___x_ABI_CWindows__CUI__CXaml__CControls__CDragItemsCompletedEventArgs* This);
        HRESULT (STDMETHODCALLTYPE* Invoke)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CListViewBase___x_ABI_CWindows__CUI__CXaml__CControls__CDragItemsCompletedEventArgs* This,
        __x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBase* sender,
        __x_ABI_CWindows_CUI_CXaml_CControls_CIDragItemsCompletedEventArgs* args);

        END_INTERFACE
    } __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CListViewBase___x_ABI_CWindows__CUI__CXaml__CControls__CDragItemsCompletedEventArgsVtbl;

    interface __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CListViewBase___x_ABI_CWindows__CUI__CXaml__CControls__CDragItemsCompletedEventArgs
    {
        CONST_VTBL struct __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CListViewBase___x_ABI_CWindows__CUI__CXaml__CControls__CDragItemsCompletedEventArgsVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CListViewBase___x_ABI_CWindows__CUI__CXaml__CControls__CDragItemsCompletedEventArgs_INTERFACE_DEFINED__
    
#ifndef ____x_ABI_CWindows_CUI_CXaml_CMedia_CIPartialMediaFailureDetectedEventArgs_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CMedia_CIPartialMediaFailureDetectedEventArgs_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CMedia_CIPartialMediaFailureDetectedEventArgs __x_ABI_CWindows_CUI_CXaml_CMedia_CIPartialMediaFailureDetectedEventArgs;

#endif // ____x_ABI_CWindows_CUI_CXaml_CMedia_CIPartialMediaFailureDetectedEventArgs_FWD_DEFINED__

#if !defined(____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CMediaElement___x_ABI_CWindows__CUI__CXaml__CMedia__CPartialMediaFailureDetectedEventArgs_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CMediaElement___x_ABI_CWindows__CUI__CXaml__CMedia__CPartialMediaFailureDetectedEventArgs_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CMediaElement___x_ABI_CWindows__CUI__CXaml__CMedia__CPartialMediaFailureDetectedEventArgs __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CMediaElement___x_ABI_CWindows__CUI__CXaml__CMedia__CPartialMediaFailureDetectedEventArgs;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CMediaElement___x_ABI_CWindows__CUI__CXaml__CMedia__CPartialMediaFailureDetectedEventArgs;

    typedef struct __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CMediaElement___x_ABI_CWindows__CUI__CXaml__CMedia__CPartialMediaFailureDetectedEventArgsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CMediaElement___x_ABI_CWindows__CUI__CXaml__CMedia__CPartialMediaFailureDetectedEventArgs* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CMediaElement___x_ABI_CWindows__CUI__CXaml__CMedia__CPartialMediaFailureDetectedEventArgs* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CMediaElement___x_ABI_CWindows__CUI__CXaml__CMedia__CPartialMediaFailureDetectedEventArgs* This);
        HRESULT (STDMETHODCALLTYPE* Invoke)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CMediaElement___x_ABI_CWindows__CUI__CXaml__CMedia__CPartialMediaFailureDetectedEventArgs* This,
        __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaElement* sender,
        __x_ABI_CWindows_CUI_CXaml_CMedia_CIPartialMediaFailureDetectedEventArgs* args);

        END_INTERFACE
    } __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CMediaElement___x_ABI_CWindows__CUI__CXaml__CMedia__CPartialMediaFailureDetectedEventArgsVtbl;

    interface __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CMediaElement___x_ABI_CWindows__CUI__CXaml__CMedia__CPartialMediaFailureDetectedEventArgs
    {
        CONST_VTBL struct __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CMediaElement___x_ABI_CWindows__CUI__CXaml__CMedia__CPartialMediaFailureDetectedEventArgsVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CMediaElement___x_ABI_CWindows__CUI__CXaml__CMedia__CPartialMediaFailureDetectedEventArgs_INTERFACE_DEFINED__
    
#ifndef ____x_ABI_CWindows_CUI_CXaml_CMedia_CIMediaTransportControlsThumbnailRequestedEventArgs_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CMedia_CIMediaTransportControlsThumbnailRequestedEventArgs_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CMedia_CIMediaTransportControlsThumbnailRequestedEventArgs __x_ABI_CWindows_CUI_CXaml_CMedia_CIMediaTransportControlsThumbnailRequestedEventArgs;

#endif // ____x_ABI_CWindows_CUI_CXaml_CMedia_CIMediaTransportControlsThumbnailRequestedEventArgs_FWD_DEFINED__

#if !defined(____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CMediaTransportControls___x_ABI_CWindows__CUI__CXaml__CMedia__CMediaTransportControlsThumbnailRequestedEventArgs_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CMediaTransportControls___x_ABI_CWindows__CUI__CXaml__CMedia__CMediaTransportControlsThumbnailRequestedEventArgs_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CMediaTransportControls___x_ABI_CWindows__CUI__CXaml__CMedia__CMediaTransportControlsThumbnailRequestedEventArgs __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CMediaTransportControls___x_ABI_CWindows__CUI__CXaml__CMedia__CMediaTransportControlsThumbnailRequestedEventArgs;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CMediaTransportControls___x_ABI_CWindows__CUI__CXaml__CMedia__CMediaTransportControlsThumbnailRequestedEventArgs;

    typedef struct __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CMediaTransportControls___x_ABI_CWindows__CUI__CXaml__CMedia__CMediaTransportControlsThumbnailRequestedEventArgsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CMediaTransportControls___x_ABI_CWindows__CUI__CXaml__CMedia__CMediaTransportControlsThumbnailRequestedEventArgs* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CMediaTransportControls___x_ABI_CWindows__CUI__CXaml__CMedia__CMediaTransportControlsThumbnailRequestedEventArgs* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CMediaTransportControls___x_ABI_CWindows__CUI__CXaml__CMedia__CMediaTransportControlsThumbnailRequestedEventArgs* This);
        HRESULT (STDMETHODCALLTYPE* Invoke)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CMediaTransportControls___x_ABI_CWindows__CUI__CXaml__CMedia__CMediaTransportControlsThumbnailRequestedEventArgs* This,
        __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaTransportControls* sender,
        __x_ABI_CWindows_CUI_CXaml_CMedia_CIMediaTransportControlsThumbnailRequestedEventArgs* args);

        END_INTERFACE
    } __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CMediaTransportControls___x_ABI_CWindows__CUI__CXaml__CMedia__CMediaTransportControlsThumbnailRequestedEventArgsVtbl;

    interface __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CMediaTransportControls___x_ABI_CWindows__CUI__CXaml__CMedia__CMediaTransportControlsThumbnailRequestedEventArgs
    {
        CONST_VTBL struct __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CMediaTransportControls___x_ABI_CWindows__CUI__CXaml__CMedia__CMediaTransportControlsThumbnailRequestedEventArgsVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CMediaTransportControls___x_ABI_CWindows__CUI__CXaml__CMedia__CMediaTransportControlsThumbnailRequestedEventArgs_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CNavigationView_IInspectable_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CNavigationView_IInspectable_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CNavigationView_IInspectable __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CNavigationView_IInspectable;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CNavigationView_IInspectable;

    typedef struct __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CNavigationView_IInspectableVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CNavigationView_IInspectable* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CNavigationView_IInspectable* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CNavigationView_IInspectable* This);
        HRESULT (STDMETHODCALLTYPE* Invoke)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CNavigationView_IInspectable* This,
        __x_ABI_CWindows_CUI_CXaml_CControls_CINavigationView* sender,
        IInspectable* args);

        END_INTERFACE
    } __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CNavigationView_IInspectableVtbl;

    interface __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CNavigationView_IInspectable
    {
        CONST_VTBL struct __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CNavigationView_IInspectableVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CNavigationView_IInspectable_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CNavigationView___x_ABI_CWindows__CUI__CXaml__CControls__CNavigationViewBackRequestedEventArgs_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CNavigationView___x_ABI_CWindows__CUI__CXaml__CControls__CNavigationViewBackRequestedEventArgs_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CNavigationView___x_ABI_CWindows__CUI__CXaml__CControls__CNavigationViewBackRequestedEventArgs __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CNavigationView___x_ABI_CWindows__CUI__CXaml__CControls__CNavigationViewBackRequestedEventArgs;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CNavigationView___x_ABI_CWindows__CUI__CXaml__CControls__CNavigationViewBackRequestedEventArgs;

    typedef struct __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CNavigationView___x_ABI_CWindows__CUI__CXaml__CControls__CNavigationViewBackRequestedEventArgsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CNavigationView___x_ABI_CWindows__CUI__CXaml__CControls__CNavigationViewBackRequestedEventArgs* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CNavigationView___x_ABI_CWindows__CUI__CXaml__CControls__CNavigationViewBackRequestedEventArgs* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CNavigationView___x_ABI_CWindows__CUI__CXaml__CControls__CNavigationViewBackRequestedEventArgs* This);
        HRESULT (STDMETHODCALLTYPE* Invoke)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CNavigationView___x_ABI_CWindows__CUI__CXaml__CControls__CNavigationViewBackRequestedEventArgs* This,
        __x_ABI_CWindows_CUI_CXaml_CControls_CINavigationView* sender,
        __x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewBackRequestedEventArgs* args);

        END_INTERFACE
    } __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CNavigationView___x_ABI_CWindows__CUI__CXaml__CControls__CNavigationViewBackRequestedEventArgsVtbl;

    interface __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CNavigationView___x_ABI_CWindows__CUI__CXaml__CControls__CNavigationViewBackRequestedEventArgs
    {
        CONST_VTBL struct __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CNavigationView___x_ABI_CWindows__CUI__CXaml__CControls__CNavigationViewBackRequestedEventArgsVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CNavigationView___x_ABI_CWindows__CUI__CXaml__CControls__CNavigationViewBackRequestedEventArgs_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CNavigationView___x_ABI_CWindows__CUI__CXaml__CControls__CNavigationViewDisplayModeChangedEventArgs_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CNavigationView___x_ABI_CWindows__CUI__CXaml__CControls__CNavigationViewDisplayModeChangedEventArgs_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CNavigationView___x_ABI_CWindows__CUI__CXaml__CControls__CNavigationViewDisplayModeChangedEventArgs __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CNavigationView___x_ABI_CWindows__CUI__CXaml__CControls__CNavigationViewDisplayModeChangedEventArgs;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CNavigationView___x_ABI_CWindows__CUI__CXaml__CControls__CNavigationViewDisplayModeChangedEventArgs;

    typedef struct __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CNavigationView___x_ABI_CWindows__CUI__CXaml__CControls__CNavigationViewDisplayModeChangedEventArgsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CNavigationView___x_ABI_CWindows__CUI__CXaml__CControls__CNavigationViewDisplayModeChangedEventArgs* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CNavigationView___x_ABI_CWindows__CUI__CXaml__CControls__CNavigationViewDisplayModeChangedEventArgs* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CNavigationView___x_ABI_CWindows__CUI__CXaml__CControls__CNavigationViewDisplayModeChangedEventArgs* This);
        HRESULT (STDMETHODCALLTYPE* Invoke)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CNavigationView___x_ABI_CWindows__CUI__CXaml__CControls__CNavigationViewDisplayModeChangedEventArgs* This,
        __x_ABI_CWindows_CUI_CXaml_CControls_CINavigationView* sender,
        __x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewDisplayModeChangedEventArgs* args);

        END_INTERFACE
    } __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CNavigationView___x_ABI_CWindows__CUI__CXaml__CControls__CNavigationViewDisplayModeChangedEventArgsVtbl;

    interface __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CNavigationView___x_ABI_CWindows__CUI__CXaml__CControls__CNavigationViewDisplayModeChangedEventArgs
    {
        CONST_VTBL struct __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CNavigationView___x_ABI_CWindows__CUI__CXaml__CControls__CNavigationViewDisplayModeChangedEventArgsVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CNavigationView___x_ABI_CWindows__CUI__CXaml__CControls__CNavigationViewDisplayModeChangedEventArgs_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CNavigationView___x_ABI_CWindows__CUI__CXaml__CControls__CNavigationViewItemInvokedEventArgs_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CNavigationView___x_ABI_CWindows__CUI__CXaml__CControls__CNavigationViewItemInvokedEventArgs_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CNavigationView___x_ABI_CWindows__CUI__CXaml__CControls__CNavigationViewItemInvokedEventArgs __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CNavigationView___x_ABI_CWindows__CUI__CXaml__CControls__CNavigationViewItemInvokedEventArgs;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CNavigationView___x_ABI_CWindows__CUI__CXaml__CControls__CNavigationViewItemInvokedEventArgs;

    typedef struct __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CNavigationView___x_ABI_CWindows__CUI__CXaml__CControls__CNavigationViewItemInvokedEventArgsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CNavigationView___x_ABI_CWindows__CUI__CXaml__CControls__CNavigationViewItemInvokedEventArgs* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CNavigationView___x_ABI_CWindows__CUI__CXaml__CControls__CNavigationViewItemInvokedEventArgs* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CNavigationView___x_ABI_CWindows__CUI__CXaml__CControls__CNavigationViewItemInvokedEventArgs* This);
        HRESULT (STDMETHODCALLTYPE* Invoke)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CNavigationView___x_ABI_CWindows__CUI__CXaml__CControls__CNavigationViewItemInvokedEventArgs* This,
        __x_ABI_CWindows_CUI_CXaml_CControls_CINavigationView* sender,
        __x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewItemInvokedEventArgs* args);

        END_INTERFACE
    } __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CNavigationView___x_ABI_CWindows__CUI__CXaml__CControls__CNavigationViewItemInvokedEventArgsVtbl;

    interface __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CNavigationView___x_ABI_CWindows__CUI__CXaml__CControls__CNavigationViewItemInvokedEventArgs
    {
        CONST_VTBL struct __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CNavigationView___x_ABI_CWindows__CUI__CXaml__CControls__CNavigationViewItemInvokedEventArgsVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CNavigationView___x_ABI_CWindows__CUI__CXaml__CControls__CNavigationViewItemInvokedEventArgs_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CNavigationView___x_ABI_CWindows__CUI__CXaml__CControls__CNavigationViewPaneClosingEventArgs_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CNavigationView___x_ABI_CWindows__CUI__CXaml__CControls__CNavigationViewPaneClosingEventArgs_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CNavigationView___x_ABI_CWindows__CUI__CXaml__CControls__CNavigationViewPaneClosingEventArgs __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CNavigationView___x_ABI_CWindows__CUI__CXaml__CControls__CNavigationViewPaneClosingEventArgs;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CNavigationView___x_ABI_CWindows__CUI__CXaml__CControls__CNavigationViewPaneClosingEventArgs;

    typedef struct __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CNavigationView___x_ABI_CWindows__CUI__CXaml__CControls__CNavigationViewPaneClosingEventArgsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CNavigationView___x_ABI_CWindows__CUI__CXaml__CControls__CNavigationViewPaneClosingEventArgs* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CNavigationView___x_ABI_CWindows__CUI__CXaml__CControls__CNavigationViewPaneClosingEventArgs* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CNavigationView___x_ABI_CWindows__CUI__CXaml__CControls__CNavigationViewPaneClosingEventArgs* This);
        HRESULT (STDMETHODCALLTYPE* Invoke)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CNavigationView___x_ABI_CWindows__CUI__CXaml__CControls__CNavigationViewPaneClosingEventArgs* This,
        __x_ABI_CWindows_CUI_CXaml_CControls_CINavigationView* sender,
        __x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewPaneClosingEventArgs* args);

        END_INTERFACE
    } __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CNavigationView___x_ABI_CWindows__CUI__CXaml__CControls__CNavigationViewPaneClosingEventArgsVtbl;

    interface __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CNavigationView___x_ABI_CWindows__CUI__CXaml__CControls__CNavigationViewPaneClosingEventArgs
    {
        CONST_VTBL struct __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CNavigationView___x_ABI_CWindows__CUI__CXaml__CControls__CNavigationViewPaneClosingEventArgsVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CNavigationView___x_ABI_CWindows__CUI__CXaml__CControls__CNavigationViewPaneClosingEventArgs_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CNavigationView___x_ABI_CWindows__CUI__CXaml__CControls__CNavigationViewSelectionChangedEventArgs_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CNavigationView___x_ABI_CWindows__CUI__CXaml__CControls__CNavigationViewSelectionChangedEventArgs_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CNavigationView___x_ABI_CWindows__CUI__CXaml__CControls__CNavigationViewSelectionChangedEventArgs __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CNavigationView___x_ABI_CWindows__CUI__CXaml__CControls__CNavigationViewSelectionChangedEventArgs;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CNavigationView___x_ABI_CWindows__CUI__CXaml__CControls__CNavigationViewSelectionChangedEventArgs;

    typedef struct __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CNavigationView___x_ABI_CWindows__CUI__CXaml__CControls__CNavigationViewSelectionChangedEventArgsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CNavigationView___x_ABI_CWindows__CUI__CXaml__CControls__CNavigationViewSelectionChangedEventArgs* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CNavigationView___x_ABI_CWindows__CUI__CXaml__CControls__CNavigationViewSelectionChangedEventArgs* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CNavigationView___x_ABI_CWindows__CUI__CXaml__CControls__CNavigationViewSelectionChangedEventArgs* This);
        HRESULT (STDMETHODCALLTYPE* Invoke)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CNavigationView___x_ABI_CWindows__CUI__CXaml__CControls__CNavigationViewSelectionChangedEventArgs* This,
        __x_ABI_CWindows_CUI_CXaml_CControls_CINavigationView* sender,
        __x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewSelectionChangedEventArgs* args);

        END_INTERFACE
    } __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CNavigationView___x_ABI_CWindows__CUI__CXaml__CControls__CNavigationViewSelectionChangedEventArgsVtbl;

    interface __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CNavigationView___x_ABI_CWindows__CUI__CXaml__CControls__CNavigationViewSelectionChangedEventArgs
    {
        CONST_VTBL struct __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CNavigationView___x_ABI_CWindows__CUI__CXaml__CControls__CNavigationViewSelectionChangedEventArgsVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CNavigationView___x_ABI_CWindows__CUI__CXaml__CControls__CNavigationViewSelectionChangedEventArgs_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CPasswordBox___x_ABI_CWindows__CUI__CXaml__CControls__CPasswordBoxPasswordChangingEventArgs_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CPasswordBox___x_ABI_CWindows__CUI__CXaml__CControls__CPasswordBoxPasswordChangingEventArgs_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CPasswordBox___x_ABI_CWindows__CUI__CXaml__CControls__CPasswordBoxPasswordChangingEventArgs __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CPasswordBox___x_ABI_CWindows__CUI__CXaml__CControls__CPasswordBoxPasswordChangingEventArgs;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CPasswordBox___x_ABI_CWindows__CUI__CXaml__CControls__CPasswordBoxPasswordChangingEventArgs;

    typedef struct __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CPasswordBox___x_ABI_CWindows__CUI__CXaml__CControls__CPasswordBoxPasswordChangingEventArgsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CPasswordBox___x_ABI_CWindows__CUI__CXaml__CControls__CPasswordBoxPasswordChangingEventArgs* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CPasswordBox___x_ABI_CWindows__CUI__CXaml__CControls__CPasswordBoxPasswordChangingEventArgs* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CPasswordBox___x_ABI_CWindows__CUI__CXaml__CControls__CPasswordBoxPasswordChangingEventArgs* This);
        HRESULT (STDMETHODCALLTYPE* Invoke)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CPasswordBox___x_ABI_CWindows__CUI__CXaml__CControls__CPasswordBoxPasswordChangingEventArgs* This,
        __x_ABI_CWindows_CUI_CXaml_CControls_CIPasswordBox* sender,
        __x_ABI_CWindows_CUI_CXaml_CControls_CIPasswordBoxPasswordChangingEventArgs* args);

        END_INTERFACE
    } __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CPasswordBox___x_ABI_CWindows__CUI__CXaml__CControls__CPasswordBoxPasswordChangingEventArgsVtbl;

    interface __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CPasswordBox___x_ABI_CWindows__CUI__CXaml__CControls__CPasswordBoxPasswordChangingEventArgs
    {
        CONST_VTBL struct __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CPasswordBox___x_ABI_CWindows__CUI__CXaml__CControls__CPasswordBoxPasswordChangingEventArgsVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CPasswordBox___x_ABI_CWindows__CUI__CXaml__CControls__CPasswordBoxPasswordChangingEventArgs_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CPickerFlyout___x_ABI_CWindows__CUI__CXaml__CControls__CPickerConfirmedEventArgs_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CPickerFlyout___x_ABI_CWindows__CUI__CXaml__CControls__CPickerConfirmedEventArgs_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CPickerFlyout___x_ABI_CWindows__CUI__CXaml__CControls__CPickerConfirmedEventArgs __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CPickerFlyout___x_ABI_CWindows__CUI__CXaml__CControls__CPickerConfirmedEventArgs;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CPickerFlyout___x_ABI_CWindows__CUI__CXaml__CControls__CPickerConfirmedEventArgs;

    typedef struct __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CPickerFlyout___x_ABI_CWindows__CUI__CXaml__CControls__CPickerConfirmedEventArgsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CPickerFlyout___x_ABI_CWindows__CUI__CXaml__CControls__CPickerConfirmedEventArgs* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CPickerFlyout___x_ABI_CWindows__CUI__CXaml__CControls__CPickerConfirmedEventArgs* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CPickerFlyout___x_ABI_CWindows__CUI__CXaml__CControls__CPickerConfirmedEventArgs* This);
        HRESULT (STDMETHODCALLTYPE* Invoke)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CPickerFlyout___x_ABI_CWindows__CUI__CXaml__CControls__CPickerConfirmedEventArgs* This,
        __x_ABI_CWindows_CUI_CXaml_CControls_CIPickerFlyout* sender,
        __x_ABI_CWindows_CUI_CXaml_CControls_CIPickerConfirmedEventArgs* args);

        END_INTERFACE
    } __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CPickerFlyout___x_ABI_CWindows__CUI__CXaml__CControls__CPickerConfirmedEventArgsVtbl;

    interface __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CPickerFlyout___x_ABI_CWindows__CUI__CXaml__CControls__CPickerConfirmedEventArgs
    {
        CONST_VTBL struct __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CPickerFlyout___x_ABI_CWindows__CUI__CXaml__CControls__CPickerConfirmedEventArgsVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CPickerFlyout___x_ABI_CWindows__CUI__CXaml__CControls__CPickerConfirmedEventArgs_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CPivot___x_ABI_CWindows__CUI__CXaml__CControls__CPivotItemEventArgs_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CPivot___x_ABI_CWindows__CUI__CXaml__CControls__CPivotItemEventArgs_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CPivot___x_ABI_CWindows__CUI__CXaml__CControls__CPivotItemEventArgs __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CPivot___x_ABI_CWindows__CUI__CXaml__CControls__CPivotItemEventArgs;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CPivot___x_ABI_CWindows__CUI__CXaml__CControls__CPivotItemEventArgs;

    typedef struct __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CPivot___x_ABI_CWindows__CUI__CXaml__CControls__CPivotItemEventArgsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CPivot___x_ABI_CWindows__CUI__CXaml__CControls__CPivotItemEventArgs* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CPivot___x_ABI_CWindows__CUI__CXaml__CControls__CPivotItemEventArgs* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CPivot___x_ABI_CWindows__CUI__CXaml__CControls__CPivotItemEventArgs* This);
        HRESULT (STDMETHODCALLTYPE* Invoke)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CPivot___x_ABI_CWindows__CUI__CXaml__CControls__CPivotItemEventArgs* This,
        __x_ABI_CWindows_CUI_CXaml_CControls_CIPivot* sender,
        __x_ABI_CWindows_CUI_CXaml_CControls_CIPivotItemEventArgs* args);

        END_INTERFACE
    } __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CPivot___x_ABI_CWindows__CUI__CXaml__CControls__CPivotItemEventArgsVtbl;

    interface __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CPivot___x_ABI_CWindows__CUI__CXaml__CControls__CPivotItemEventArgs
    {
        CONST_VTBL struct __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CPivot___x_ABI_CWindows__CUI__CXaml__CControls__CPivotItemEventArgsVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CPivot___x_ABI_CWindows__CUI__CXaml__CControls__CPivotItemEventArgs_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CRatingControl_IInspectable_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CRatingControl_IInspectable_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CRatingControl_IInspectable __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CRatingControl_IInspectable;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CRatingControl_IInspectable;

    typedef struct __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CRatingControl_IInspectableVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CRatingControl_IInspectable* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CRatingControl_IInspectable* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CRatingControl_IInspectable* This);
        HRESULT (STDMETHODCALLTYPE* Invoke)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CRatingControl_IInspectable* This,
        __x_ABI_CWindows_CUI_CXaml_CControls_CIRatingControl* sender,
        IInspectable* args);

        END_INTERFACE
    } __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CRatingControl_IInspectableVtbl;

    interface __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CRatingControl_IInspectable
    {
        CONST_VTBL struct __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CRatingControl_IInspectableVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CRatingControl_IInspectable_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CRefreshContainer___x_ABI_CWindows__CUI__CXaml__CControls__CRefreshRequestedEventArgs_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CRefreshContainer___x_ABI_CWindows__CUI__CXaml__CControls__CRefreshRequestedEventArgs_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CRefreshContainer___x_ABI_CWindows__CUI__CXaml__CControls__CRefreshRequestedEventArgs __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CRefreshContainer___x_ABI_CWindows__CUI__CXaml__CControls__CRefreshRequestedEventArgs;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CRefreshContainer___x_ABI_CWindows__CUI__CXaml__CControls__CRefreshRequestedEventArgs;

    typedef struct __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CRefreshContainer___x_ABI_CWindows__CUI__CXaml__CControls__CRefreshRequestedEventArgsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CRefreshContainer___x_ABI_CWindows__CUI__CXaml__CControls__CRefreshRequestedEventArgs* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CRefreshContainer___x_ABI_CWindows__CUI__CXaml__CControls__CRefreshRequestedEventArgs* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CRefreshContainer___x_ABI_CWindows__CUI__CXaml__CControls__CRefreshRequestedEventArgs* This);
        HRESULT (STDMETHODCALLTYPE* Invoke)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CRefreshContainer___x_ABI_CWindows__CUI__CXaml__CControls__CRefreshRequestedEventArgs* This,
        __x_ABI_CWindows_CUI_CXaml_CControls_CIRefreshContainer* sender,
        __x_ABI_CWindows_CUI_CXaml_CControls_CIRefreshRequestedEventArgs* args);

        END_INTERFACE
    } __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CRefreshContainer___x_ABI_CWindows__CUI__CXaml__CControls__CRefreshRequestedEventArgsVtbl;

    interface __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CRefreshContainer___x_ABI_CWindows__CUI__CXaml__CControls__CRefreshRequestedEventArgs
    {
        CONST_VTBL struct __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CRefreshContainer___x_ABI_CWindows__CUI__CXaml__CControls__CRefreshRequestedEventArgsVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CRefreshContainer___x_ABI_CWindows__CUI__CXaml__CControls__CRefreshRequestedEventArgs_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CRefreshVisualizer___x_ABI_CWindows__CUI__CXaml__CControls__CRefreshRequestedEventArgs_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CRefreshVisualizer___x_ABI_CWindows__CUI__CXaml__CControls__CRefreshRequestedEventArgs_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CRefreshVisualizer___x_ABI_CWindows__CUI__CXaml__CControls__CRefreshRequestedEventArgs __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CRefreshVisualizer___x_ABI_CWindows__CUI__CXaml__CControls__CRefreshRequestedEventArgs;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CRefreshVisualizer___x_ABI_CWindows__CUI__CXaml__CControls__CRefreshRequestedEventArgs;

    typedef struct __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CRefreshVisualizer___x_ABI_CWindows__CUI__CXaml__CControls__CRefreshRequestedEventArgsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CRefreshVisualizer___x_ABI_CWindows__CUI__CXaml__CControls__CRefreshRequestedEventArgs* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CRefreshVisualizer___x_ABI_CWindows__CUI__CXaml__CControls__CRefreshRequestedEventArgs* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CRefreshVisualizer___x_ABI_CWindows__CUI__CXaml__CControls__CRefreshRequestedEventArgs* This);
        HRESULT (STDMETHODCALLTYPE* Invoke)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CRefreshVisualizer___x_ABI_CWindows__CUI__CXaml__CControls__CRefreshRequestedEventArgs* This,
        __x_ABI_CWindows_CUI_CXaml_CControls_CIRefreshVisualizer* sender,
        __x_ABI_CWindows_CUI_CXaml_CControls_CIRefreshRequestedEventArgs* args);

        END_INTERFACE
    } __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CRefreshVisualizer___x_ABI_CWindows__CUI__CXaml__CControls__CRefreshRequestedEventArgsVtbl;

    interface __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CRefreshVisualizer___x_ABI_CWindows__CUI__CXaml__CControls__CRefreshRequestedEventArgs
    {
        CONST_VTBL struct __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CRefreshVisualizer___x_ABI_CWindows__CUI__CXaml__CControls__CRefreshRequestedEventArgsVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CRefreshVisualizer___x_ABI_CWindows__CUI__CXaml__CControls__CRefreshRequestedEventArgs_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CRefreshVisualizer___x_ABI_CWindows__CUI__CXaml__CControls__CRefreshStateChangedEventArgs_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CRefreshVisualizer___x_ABI_CWindows__CUI__CXaml__CControls__CRefreshStateChangedEventArgs_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CRefreshVisualizer___x_ABI_CWindows__CUI__CXaml__CControls__CRefreshStateChangedEventArgs __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CRefreshVisualizer___x_ABI_CWindows__CUI__CXaml__CControls__CRefreshStateChangedEventArgs;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CRefreshVisualizer___x_ABI_CWindows__CUI__CXaml__CControls__CRefreshStateChangedEventArgs;

    typedef struct __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CRefreshVisualizer___x_ABI_CWindows__CUI__CXaml__CControls__CRefreshStateChangedEventArgsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CRefreshVisualizer___x_ABI_CWindows__CUI__CXaml__CControls__CRefreshStateChangedEventArgs* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CRefreshVisualizer___x_ABI_CWindows__CUI__CXaml__CControls__CRefreshStateChangedEventArgs* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CRefreshVisualizer___x_ABI_CWindows__CUI__CXaml__CControls__CRefreshStateChangedEventArgs* This);
        HRESULT (STDMETHODCALLTYPE* Invoke)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CRefreshVisualizer___x_ABI_CWindows__CUI__CXaml__CControls__CRefreshStateChangedEventArgs* This,
        __x_ABI_CWindows_CUI_CXaml_CControls_CIRefreshVisualizer* sender,
        __x_ABI_CWindows_CUI_CXaml_CControls_CIRefreshStateChangedEventArgs* args);

        END_INTERFACE
    } __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CRefreshVisualizer___x_ABI_CWindows__CUI__CXaml__CControls__CRefreshStateChangedEventArgsVtbl;

    interface __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CRefreshVisualizer___x_ABI_CWindows__CUI__CXaml__CControls__CRefreshStateChangedEventArgs
    {
        CONST_VTBL struct __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CRefreshVisualizer___x_ABI_CWindows__CUI__CXaml__CControls__CRefreshStateChangedEventArgsVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CRefreshVisualizer___x_ABI_CWindows__CUI__CXaml__CControls__CRefreshStateChangedEventArgs_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CRichEditBox___x_ABI_CWindows__CUI__CXaml__CControls__CCandidateWindowBoundsChangedEventArgs_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CRichEditBox___x_ABI_CWindows__CUI__CXaml__CControls__CCandidateWindowBoundsChangedEventArgs_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CRichEditBox___x_ABI_CWindows__CUI__CXaml__CControls__CCandidateWindowBoundsChangedEventArgs __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CRichEditBox___x_ABI_CWindows__CUI__CXaml__CControls__CCandidateWindowBoundsChangedEventArgs;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CRichEditBox___x_ABI_CWindows__CUI__CXaml__CControls__CCandidateWindowBoundsChangedEventArgs;

    typedef struct __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CRichEditBox___x_ABI_CWindows__CUI__CXaml__CControls__CCandidateWindowBoundsChangedEventArgsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CRichEditBox___x_ABI_CWindows__CUI__CXaml__CControls__CCandidateWindowBoundsChangedEventArgs* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CRichEditBox___x_ABI_CWindows__CUI__CXaml__CControls__CCandidateWindowBoundsChangedEventArgs* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CRichEditBox___x_ABI_CWindows__CUI__CXaml__CControls__CCandidateWindowBoundsChangedEventArgs* This);
        HRESULT (STDMETHODCALLTYPE* Invoke)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CRichEditBox___x_ABI_CWindows__CUI__CXaml__CControls__CCandidateWindowBoundsChangedEventArgs* This,
        __x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBox* sender,
        __x_ABI_CWindows_CUI_CXaml_CControls_CICandidateWindowBoundsChangedEventArgs* args);

        END_INTERFACE
    } __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CRichEditBox___x_ABI_CWindows__CUI__CXaml__CControls__CCandidateWindowBoundsChangedEventArgsVtbl;

    interface __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CRichEditBox___x_ABI_CWindows__CUI__CXaml__CControls__CCandidateWindowBoundsChangedEventArgs
    {
        CONST_VTBL struct __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CRichEditBox___x_ABI_CWindows__CUI__CXaml__CControls__CCandidateWindowBoundsChangedEventArgsVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CRichEditBox___x_ABI_CWindows__CUI__CXaml__CControls__CCandidateWindowBoundsChangedEventArgs_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CRichEditBox___x_ABI_CWindows__CUI__CXaml__CControls__CContentLinkChangedEventArgs_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CRichEditBox___x_ABI_CWindows__CUI__CXaml__CControls__CContentLinkChangedEventArgs_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CRichEditBox___x_ABI_CWindows__CUI__CXaml__CControls__CContentLinkChangedEventArgs __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CRichEditBox___x_ABI_CWindows__CUI__CXaml__CControls__CContentLinkChangedEventArgs;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CRichEditBox___x_ABI_CWindows__CUI__CXaml__CControls__CContentLinkChangedEventArgs;

    typedef struct __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CRichEditBox___x_ABI_CWindows__CUI__CXaml__CControls__CContentLinkChangedEventArgsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CRichEditBox___x_ABI_CWindows__CUI__CXaml__CControls__CContentLinkChangedEventArgs* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CRichEditBox___x_ABI_CWindows__CUI__CXaml__CControls__CContentLinkChangedEventArgs* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CRichEditBox___x_ABI_CWindows__CUI__CXaml__CControls__CContentLinkChangedEventArgs* This);
        HRESULT (STDMETHODCALLTYPE* Invoke)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CRichEditBox___x_ABI_CWindows__CUI__CXaml__CControls__CContentLinkChangedEventArgs* This,
        __x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBox* sender,
        __x_ABI_CWindows_CUI_CXaml_CControls_CIContentLinkChangedEventArgs* args);

        END_INTERFACE
    } __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CRichEditBox___x_ABI_CWindows__CUI__CXaml__CControls__CContentLinkChangedEventArgsVtbl;

    interface __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CRichEditBox___x_ABI_CWindows__CUI__CXaml__CControls__CContentLinkChangedEventArgs
    {
        CONST_VTBL struct __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CRichEditBox___x_ABI_CWindows__CUI__CXaml__CControls__CContentLinkChangedEventArgsVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CRichEditBox___x_ABI_CWindows__CUI__CXaml__CControls__CContentLinkChangedEventArgs_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CRichEditBox___x_ABI_CWindows__CUI__CXaml__CControls__CRichEditBoxSelectionChangingEventArgs_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CRichEditBox___x_ABI_CWindows__CUI__CXaml__CControls__CRichEditBoxSelectionChangingEventArgs_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CRichEditBox___x_ABI_CWindows__CUI__CXaml__CControls__CRichEditBoxSelectionChangingEventArgs __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CRichEditBox___x_ABI_CWindows__CUI__CXaml__CControls__CRichEditBoxSelectionChangingEventArgs;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CRichEditBox___x_ABI_CWindows__CUI__CXaml__CControls__CRichEditBoxSelectionChangingEventArgs;

    typedef struct __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CRichEditBox___x_ABI_CWindows__CUI__CXaml__CControls__CRichEditBoxSelectionChangingEventArgsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CRichEditBox___x_ABI_CWindows__CUI__CXaml__CControls__CRichEditBoxSelectionChangingEventArgs* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CRichEditBox___x_ABI_CWindows__CUI__CXaml__CControls__CRichEditBoxSelectionChangingEventArgs* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CRichEditBox___x_ABI_CWindows__CUI__CXaml__CControls__CRichEditBoxSelectionChangingEventArgs* This);
        HRESULT (STDMETHODCALLTYPE* Invoke)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CRichEditBox___x_ABI_CWindows__CUI__CXaml__CControls__CRichEditBoxSelectionChangingEventArgs* This,
        __x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBox* sender,
        __x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBoxSelectionChangingEventArgs* args);

        END_INTERFACE
    } __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CRichEditBox___x_ABI_CWindows__CUI__CXaml__CControls__CRichEditBoxSelectionChangingEventArgsVtbl;

    interface __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CRichEditBox___x_ABI_CWindows__CUI__CXaml__CControls__CRichEditBoxSelectionChangingEventArgs
    {
        CONST_VTBL struct __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CRichEditBox___x_ABI_CWindows__CUI__CXaml__CControls__CRichEditBoxSelectionChangingEventArgsVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CRichEditBox___x_ABI_CWindows__CUI__CXaml__CControls__CRichEditBoxSelectionChangingEventArgs_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CRichEditBox___x_ABI_CWindows__CUI__CXaml__CControls__CRichEditBoxTextChangingEventArgs_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CRichEditBox___x_ABI_CWindows__CUI__CXaml__CControls__CRichEditBoxTextChangingEventArgs_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CRichEditBox___x_ABI_CWindows__CUI__CXaml__CControls__CRichEditBoxTextChangingEventArgs __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CRichEditBox___x_ABI_CWindows__CUI__CXaml__CControls__CRichEditBoxTextChangingEventArgs;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CRichEditBox___x_ABI_CWindows__CUI__CXaml__CControls__CRichEditBoxTextChangingEventArgs;

    typedef struct __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CRichEditBox___x_ABI_CWindows__CUI__CXaml__CControls__CRichEditBoxTextChangingEventArgsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CRichEditBox___x_ABI_CWindows__CUI__CXaml__CControls__CRichEditBoxTextChangingEventArgs* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CRichEditBox___x_ABI_CWindows__CUI__CXaml__CControls__CRichEditBoxTextChangingEventArgs* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CRichEditBox___x_ABI_CWindows__CUI__CXaml__CControls__CRichEditBoxTextChangingEventArgs* This);
        HRESULT (STDMETHODCALLTYPE* Invoke)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CRichEditBox___x_ABI_CWindows__CUI__CXaml__CControls__CRichEditBoxTextChangingEventArgs* This,
        __x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBox* sender,
        __x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBoxTextChangingEventArgs* args);

        END_INTERFACE
    } __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CRichEditBox___x_ABI_CWindows__CUI__CXaml__CControls__CRichEditBoxTextChangingEventArgsVtbl;

    interface __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CRichEditBox___x_ABI_CWindows__CUI__CXaml__CControls__CRichEditBoxTextChangingEventArgs
    {
        CONST_VTBL struct __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CRichEditBox___x_ABI_CWindows__CUI__CXaml__CControls__CRichEditBoxTextChangingEventArgsVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CRichEditBox___x_ABI_CWindows__CUI__CXaml__CControls__CRichEditBoxTextChangingEventArgs_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CRichEditBox___x_ABI_CWindows__CUI__CXaml__CControls__CTextCompositionChangedEventArgs_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CRichEditBox___x_ABI_CWindows__CUI__CXaml__CControls__CTextCompositionChangedEventArgs_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CRichEditBox___x_ABI_CWindows__CUI__CXaml__CControls__CTextCompositionChangedEventArgs __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CRichEditBox___x_ABI_CWindows__CUI__CXaml__CControls__CTextCompositionChangedEventArgs;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CRichEditBox___x_ABI_CWindows__CUI__CXaml__CControls__CTextCompositionChangedEventArgs;

    typedef struct __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CRichEditBox___x_ABI_CWindows__CUI__CXaml__CControls__CTextCompositionChangedEventArgsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CRichEditBox___x_ABI_CWindows__CUI__CXaml__CControls__CTextCompositionChangedEventArgs* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CRichEditBox___x_ABI_CWindows__CUI__CXaml__CControls__CTextCompositionChangedEventArgs* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CRichEditBox___x_ABI_CWindows__CUI__CXaml__CControls__CTextCompositionChangedEventArgs* This);
        HRESULT (STDMETHODCALLTYPE* Invoke)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CRichEditBox___x_ABI_CWindows__CUI__CXaml__CControls__CTextCompositionChangedEventArgs* This,
        __x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBox* sender,
        __x_ABI_CWindows_CUI_CXaml_CControls_CITextCompositionChangedEventArgs* args);

        END_INTERFACE
    } __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CRichEditBox___x_ABI_CWindows__CUI__CXaml__CControls__CTextCompositionChangedEventArgsVtbl;

    interface __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CRichEditBox___x_ABI_CWindows__CUI__CXaml__CControls__CTextCompositionChangedEventArgs
    {
        CONST_VTBL struct __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CRichEditBox___x_ABI_CWindows__CUI__CXaml__CControls__CTextCompositionChangedEventArgsVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CRichEditBox___x_ABI_CWindows__CUI__CXaml__CControls__CTextCompositionChangedEventArgs_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CRichEditBox___x_ABI_CWindows__CUI__CXaml__CControls__CTextCompositionEndedEventArgs_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CRichEditBox___x_ABI_CWindows__CUI__CXaml__CControls__CTextCompositionEndedEventArgs_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CRichEditBox___x_ABI_CWindows__CUI__CXaml__CControls__CTextCompositionEndedEventArgs __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CRichEditBox___x_ABI_CWindows__CUI__CXaml__CControls__CTextCompositionEndedEventArgs;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CRichEditBox___x_ABI_CWindows__CUI__CXaml__CControls__CTextCompositionEndedEventArgs;

    typedef struct __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CRichEditBox___x_ABI_CWindows__CUI__CXaml__CControls__CTextCompositionEndedEventArgsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CRichEditBox___x_ABI_CWindows__CUI__CXaml__CControls__CTextCompositionEndedEventArgs* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CRichEditBox___x_ABI_CWindows__CUI__CXaml__CControls__CTextCompositionEndedEventArgs* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CRichEditBox___x_ABI_CWindows__CUI__CXaml__CControls__CTextCompositionEndedEventArgs* This);
        HRESULT (STDMETHODCALLTYPE* Invoke)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CRichEditBox___x_ABI_CWindows__CUI__CXaml__CControls__CTextCompositionEndedEventArgs* This,
        __x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBox* sender,
        __x_ABI_CWindows_CUI_CXaml_CControls_CITextCompositionEndedEventArgs* args);

        END_INTERFACE
    } __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CRichEditBox___x_ABI_CWindows__CUI__CXaml__CControls__CTextCompositionEndedEventArgsVtbl;

    interface __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CRichEditBox___x_ABI_CWindows__CUI__CXaml__CControls__CTextCompositionEndedEventArgs
    {
        CONST_VTBL struct __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CRichEditBox___x_ABI_CWindows__CUI__CXaml__CControls__CTextCompositionEndedEventArgsVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CRichEditBox___x_ABI_CWindows__CUI__CXaml__CControls__CTextCompositionEndedEventArgs_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CRichEditBox___x_ABI_CWindows__CUI__CXaml__CControls__CTextCompositionStartedEventArgs_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CRichEditBox___x_ABI_CWindows__CUI__CXaml__CControls__CTextCompositionStartedEventArgs_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CRichEditBox___x_ABI_CWindows__CUI__CXaml__CControls__CTextCompositionStartedEventArgs __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CRichEditBox___x_ABI_CWindows__CUI__CXaml__CControls__CTextCompositionStartedEventArgs;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CRichEditBox___x_ABI_CWindows__CUI__CXaml__CControls__CTextCompositionStartedEventArgs;

    typedef struct __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CRichEditBox___x_ABI_CWindows__CUI__CXaml__CControls__CTextCompositionStartedEventArgsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CRichEditBox___x_ABI_CWindows__CUI__CXaml__CControls__CTextCompositionStartedEventArgs* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CRichEditBox___x_ABI_CWindows__CUI__CXaml__CControls__CTextCompositionStartedEventArgs* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CRichEditBox___x_ABI_CWindows__CUI__CXaml__CControls__CTextCompositionStartedEventArgs* This);
        HRESULT (STDMETHODCALLTYPE* Invoke)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CRichEditBox___x_ABI_CWindows__CUI__CXaml__CControls__CTextCompositionStartedEventArgs* This,
        __x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBox* sender,
        __x_ABI_CWindows_CUI_CXaml_CControls_CITextCompositionStartedEventArgs* args);

        END_INTERFACE
    } __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CRichEditBox___x_ABI_CWindows__CUI__CXaml__CControls__CTextCompositionStartedEventArgsVtbl;

    interface __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CRichEditBox___x_ABI_CWindows__CUI__CXaml__CControls__CTextCompositionStartedEventArgs
    {
        CONST_VTBL struct __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CRichEditBox___x_ABI_CWindows__CUI__CXaml__CControls__CTextCompositionStartedEventArgsVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CRichEditBox___x_ABI_CWindows__CUI__CXaml__CControls__CTextCompositionStartedEventArgs_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CRichEditBox___x_ABI_CWindows__CUI__CXaml__CControls__CTextControlCopyingToClipboardEventArgs_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CRichEditBox___x_ABI_CWindows__CUI__CXaml__CControls__CTextControlCopyingToClipboardEventArgs_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CRichEditBox___x_ABI_CWindows__CUI__CXaml__CControls__CTextControlCopyingToClipboardEventArgs __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CRichEditBox___x_ABI_CWindows__CUI__CXaml__CControls__CTextControlCopyingToClipboardEventArgs;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CRichEditBox___x_ABI_CWindows__CUI__CXaml__CControls__CTextControlCopyingToClipboardEventArgs;

    typedef struct __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CRichEditBox___x_ABI_CWindows__CUI__CXaml__CControls__CTextControlCopyingToClipboardEventArgsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CRichEditBox___x_ABI_CWindows__CUI__CXaml__CControls__CTextControlCopyingToClipboardEventArgs* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CRichEditBox___x_ABI_CWindows__CUI__CXaml__CControls__CTextControlCopyingToClipboardEventArgs* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CRichEditBox___x_ABI_CWindows__CUI__CXaml__CControls__CTextControlCopyingToClipboardEventArgs* This);
        HRESULT (STDMETHODCALLTYPE* Invoke)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CRichEditBox___x_ABI_CWindows__CUI__CXaml__CControls__CTextControlCopyingToClipboardEventArgs* This,
        __x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBox* sender,
        __x_ABI_CWindows_CUI_CXaml_CControls_CITextControlCopyingToClipboardEventArgs* args);

        END_INTERFACE
    } __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CRichEditBox___x_ABI_CWindows__CUI__CXaml__CControls__CTextControlCopyingToClipboardEventArgsVtbl;

    interface __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CRichEditBox___x_ABI_CWindows__CUI__CXaml__CControls__CTextControlCopyingToClipboardEventArgs
    {
        CONST_VTBL struct __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CRichEditBox___x_ABI_CWindows__CUI__CXaml__CControls__CTextControlCopyingToClipboardEventArgsVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CRichEditBox___x_ABI_CWindows__CUI__CXaml__CControls__CTextControlCopyingToClipboardEventArgs_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CRichEditBox___x_ABI_CWindows__CUI__CXaml__CControls__CTextControlCuttingToClipboardEventArgs_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CRichEditBox___x_ABI_CWindows__CUI__CXaml__CControls__CTextControlCuttingToClipboardEventArgs_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CRichEditBox___x_ABI_CWindows__CUI__CXaml__CControls__CTextControlCuttingToClipboardEventArgs __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CRichEditBox___x_ABI_CWindows__CUI__CXaml__CControls__CTextControlCuttingToClipboardEventArgs;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CRichEditBox___x_ABI_CWindows__CUI__CXaml__CControls__CTextControlCuttingToClipboardEventArgs;

    typedef struct __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CRichEditBox___x_ABI_CWindows__CUI__CXaml__CControls__CTextControlCuttingToClipboardEventArgsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CRichEditBox___x_ABI_CWindows__CUI__CXaml__CControls__CTextControlCuttingToClipboardEventArgs* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CRichEditBox___x_ABI_CWindows__CUI__CXaml__CControls__CTextControlCuttingToClipboardEventArgs* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CRichEditBox___x_ABI_CWindows__CUI__CXaml__CControls__CTextControlCuttingToClipboardEventArgs* This);
        HRESULT (STDMETHODCALLTYPE* Invoke)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CRichEditBox___x_ABI_CWindows__CUI__CXaml__CControls__CTextControlCuttingToClipboardEventArgs* This,
        __x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBox* sender,
        __x_ABI_CWindows_CUI_CXaml_CControls_CITextControlCuttingToClipboardEventArgs* args);

        END_INTERFACE
    } __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CRichEditBox___x_ABI_CWindows__CUI__CXaml__CControls__CTextControlCuttingToClipboardEventArgsVtbl;

    interface __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CRichEditBox___x_ABI_CWindows__CUI__CXaml__CControls__CTextControlCuttingToClipboardEventArgs
    {
        CONST_VTBL struct __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CRichEditBox___x_ABI_CWindows__CUI__CXaml__CControls__CTextControlCuttingToClipboardEventArgsVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CRichEditBox___x_ABI_CWindows__CUI__CXaml__CControls__CTextControlCuttingToClipboardEventArgs_INTERFACE_DEFINED__
    
#ifndef ____x_ABI_CWindows_CUI_CXaml_CDocuments_CIContentLinkInvokedEventArgs_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CDocuments_CIContentLinkInvokedEventArgs_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CDocuments_CIContentLinkInvokedEventArgs __x_ABI_CWindows_CUI_CXaml_CDocuments_CIContentLinkInvokedEventArgs;

#endif // ____x_ABI_CWindows_CUI_CXaml_CDocuments_CIContentLinkInvokedEventArgs_FWD_DEFINED__

#if !defined(____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CRichEditBox___x_ABI_CWindows__CUI__CXaml__CDocuments__CContentLinkInvokedEventArgs_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CRichEditBox___x_ABI_CWindows__CUI__CXaml__CDocuments__CContentLinkInvokedEventArgs_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CRichEditBox___x_ABI_CWindows__CUI__CXaml__CDocuments__CContentLinkInvokedEventArgs __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CRichEditBox___x_ABI_CWindows__CUI__CXaml__CDocuments__CContentLinkInvokedEventArgs;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CRichEditBox___x_ABI_CWindows__CUI__CXaml__CDocuments__CContentLinkInvokedEventArgs;

    typedef struct __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CRichEditBox___x_ABI_CWindows__CUI__CXaml__CDocuments__CContentLinkInvokedEventArgsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CRichEditBox___x_ABI_CWindows__CUI__CXaml__CDocuments__CContentLinkInvokedEventArgs* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CRichEditBox___x_ABI_CWindows__CUI__CXaml__CDocuments__CContentLinkInvokedEventArgs* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CRichEditBox___x_ABI_CWindows__CUI__CXaml__CDocuments__CContentLinkInvokedEventArgs* This);
        HRESULT (STDMETHODCALLTYPE* Invoke)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CRichEditBox___x_ABI_CWindows__CUI__CXaml__CDocuments__CContentLinkInvokedEventArgs* This,
        __x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBox* sender,
        __x_ABI_CWindows_CUI_CXaml_CDocuments_CIContentLinkInvokedEventArgs* args);

        END_INTERFACE
    } __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CRichEditBox___x_ABI_CWindows__CUI__CXaml__CDocuments__CContentLinkInvokedEventArgsVtbl;

    interface __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CRichEditBox___x_ABI_CWindows__CUI__CXaml__CDocuments__CContentLinkInvokedEventArgs
    {
        CONST_VTBL struct __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CRichEditBox___x_ABI_CWindows__CUI__CXaml__CDocuments__CContentLinkInvokedEventArgsVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CRichEditBox___x_ABI_CWindows__CUI__CXaml__CDocuments__CContentLinkInvokedEventArgs_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CRichTextBlock___x_ABI_CWindows__CUI__CXaml__CControls__CIsTextTrimmedChangedEventArgs_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CRichTextBlock___x_ABI_CWindows__CUI__CXaml__CControls__CIsTextTrimmedChangedEventArgs_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CRichTextBlock___x_ABI_CWindows__CUI__CXaml__CControls__CIsTextTrimmedChangedEventArgs __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CRichTextBlock___x_ABI_CWindows__CUI__CXaml__CControls__CIsTextTrimmedChangedEventArgs;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CRichTextBlock___x_ABI_CWindows__CUI__CXaml__CControls__CIsTextTrimmedChangedEventArgs;

    typedef struct __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CRichTextBlock___x_ABI_CWindows__CUI__CXaml__CControls__CIsTextTrimmedChangedEventArgsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CRichTextBlock___x_ABI_CWindows__CUI__CXaml__CControls__CIsTextTrimmedChangedEventArgs* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CRichTextBlock___x_ABI_CWindows__CUI__CXaml__CControls__CIsTextTrimmedChangedEventArgs* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CRichTextBlock___x_ABI_CWindows__CUI__CXaml__CControls__CIsTextTrimmedChangedEventArgs* This);
        HRESULT (STDMETHODCALLTYPE* Invoke)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CRichTextBlock___x_ABI_CWindows__CUI__CXaml__CControls__CIsTextTrimmedChangedEventArgs* This,
        __x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlock* sender,
        __x_ABI_CWindows_CUI_CXaml_CControls_CIIsTextTrimmedChangedEventArgs* args);

        END_INTERFACE
    } __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CRichTextBlock___x_ABI_CWindows__CUI__CXaml__CControls__CIsTextTrimmedChangedEventArgsVtbl;

    interface __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CRichTextBlock___x_ABI_CWindows__CUI__CXaml__CControls__CIsTextTrimmedChangedEventArgs
    {
        CONST_VTBL struct __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CRichTextBlock___x_ABI_CWindows__CUI__CXaml__CControls__CIsTextTrimmedChangedEventArgsVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CRichTextBlock___x_ABI_CWindows__CUI__CXaml__CControls__CIsTextTrimmedChangedEventArgs_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CRichTextBlockOverflow___x_ABI_CWindows__CUI__CXaml__CControls__CIsTextTrimmedChangedEventArgs_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CRichTextBlockOverflow___x_ABI_CWindows__CUI__CXaml__CControls__CIsTextTrimmedChangedEventArgs_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CRichTextBlockOverflow___x_ABI_CWindows__CUI__CXaml__CControls__CIsTextTrimmedChangedEventArgs __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CRichTextBlockOverflow___x_ABI_CWindows__CUI__CXaml__CControls__CIsTextTrimmedChangedEventArgs;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CRichTextBlockOverflow___x_ABI_CWindows__CUI__CXaml__CControls__CIsTextTrimmedChangedEventArgs;

    typedef struct __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CRichTextBlockOverflow___x_ABI_CWindows__CUI__CXaml__CControls__CIsTextTrimmedChangedEventArgsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CRichTextBlockOverflow___x_ABI_CWindows__CUI__CXaml__CControls__CIsTextTrimmedChangedEventArgs* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CRichTextBlockOverflow___x_ABI_CWindows__CUI__CXaml__CControls__CIsTextTrimmedChangedEventArgs* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CRichTextBlockOverflow___x_ABI_CWindows__CUI__CXaml__CControls__CIsTextTrimmedChangedEventArgs* This);
        HRESULT (STDMETHODCALLTYPE* Invoke)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CRichTextBlockOverflow___x_ABI_CWindows__CUI__CXaml__CControls__CIsTextTrimmedChangedEventArgs* This,
        __x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlockOverflow* sender,
        __x_ABI_CWindows_CUI_CXaml_CControls_CIIsTextTrimmedChangedEventArgs* args);

        END_INTERFACE
    } __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CRichTextBlockOverflow___x_ABI_CWindows__CUI__CXaml__CControls__CIsTextTrimmedChangedEventArgsVtbl;

    interface __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CRichTextBlockOverflow___x_ABI_CWindows__CUI__CXaml__CControls__CIsTextTrimmedChangedEventArgs
    {
        CONST_VTBL struct __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CRichTextBlockOverflow___x_ABI_CWindows__CUI__CXaml__CControls__CIsTextTrimmedChangedEventArgsVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CRichTextBlockOverflow___x_ABI_CWindows__CUI__CXaml__CControls__CIsTextTrimmedChangedEventArgs_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CScrollViewer___x_ABI_CWindows__CUI__CXaml__CControls__CAnchorRequestedEventArgs_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CScrollViewer___x_ABI_CWindows__CUI__CXaml__CControls__CAnchorRequestedEventArgs_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CScrollViewer___x_ABI_CWindows__CUI__CXaml__CControls__CAnchorRequestedEventArgs __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CScrollViewer___x_ABI_CWindows__CUI__CXaml__CControls__CAnchorRequestedEventArgs;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CScrollViewer___x_ABI_CWindows__CUI__CXaml__CControls__CAnchorRequestedEventArgs;

    typedef struct __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CScrollViewer___x_ABI_CWindows__CUI__CXaml__CControls__CAnchorRequestedEventArgsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CScrollViewer___x_ABI_CWindows__CUI__CXaml__CControls__CAnchorRequestedEventArgs* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CScrollViewer___x_ABI_CWindows__CUI__CXaml__CControls__CAnchorRequestedEventArgs* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CScrollViewer___x_ABI_CWindows__CUI__CXaml__CControls__CAnchorRequestedEventArgs* This);
        HRESULT (STDMETHODCALLTYPE* Invoke)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CScrollViewer___x_ABI_CWindows__CUI__CXaml__CControls__CAnchorRequestedEventArgs* This,
        __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewer* sender,
        __x_ABI_CWindows_CUI_CXaml_CControls_CIAnchorRequestedEventArgs* args);

        END_INTERFACE
    } __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CScrollViewer___x_ABI_CWindows__CUI__CXaml__CControls__CAnchorRequestedEventArgsVtbl;

    interface __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CScrollViewer___x_ABI_CWindows__CUI__CXaml__CControls__CAnchorRequestedEventArgs
    {
        CONST_VTBL struct __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CScrollViewer___x_ABI_CWindows__CUI__CXaml__CControls__CAnchorRequestedEventArgsVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CScrollViewer___x_ABI_CWindows__CUI__CXaml__CControls__CAnchorRequestedEventArgs_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CSearchBox___x_ABI_CWindows__CUI__CXaml__CControls__CSearchBoxQueryChangedEventArgs_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CSearchBox___x_ABI_CWindows__CUI__CXaml__CControls__CSearchBoxQueryChangedEventArgs_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CSearchBox___x_ABI_CWindows__CUI__CXaml__CControls__CSearchBoxQueryChangedEventArgs __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CSearchBox___x_ABI_CWindows__CUI__CXaml__CControls__CSearchBoxQueryChangedEventArgs;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CSearchBox___x_ABI_CWindows__CUI__CXaml__CControls__CSearchBoxQueryChangedEventArgs;

    typedef struct __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CSearchBox___x_ABI_CWindows__CUI__CXaml__CControls__CSearchBoxQueryChangedEventArgsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CSearchBox___x_ABI_CWindows__CUI__CXaml__CControls__CSearchBoxQueryChangedEventArgs* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CSearchBox___x_ABI_CWindows__CUI__CXaml__CControls__CSearchBoxQueryChangedEventArgs* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CSearchBox___x_ABI_CWindows__CUI__CXaml__CControls__CSearchBoxQueryChangedEventArgs* This);
        HRESULT (STDMETHODCALLTYPE* Invoke)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CSearchBox___x_ABI_CWindows__CUI__CXaml__CControls__CSearchBoxQueryChangedEventArgs* This,
        __x_ABI_CWindows_CUI_CXaml_CControls_CISearchBox* sender,
        __x_ABI_CWindows_CUI_CXaml_CControls_CISearchBoxQueryChangedEventArgs* args);

        END_INTERFACE
    } __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CSearchBox___x_ABI_CWindows__CUI__CXaml__CControls__CSearchBoxQueryChangedEventArgsVtbl;

    interface __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CSearchBox___x_ABI_CWindows__CUI__CXaml__CControls__CSearchBoxQueryChangedEventArgs
    {
        CONST_VTBL struct __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CSearchBox___x_ABI_CWindows__CUI__CXaml__CControls__CSearchBoxQueryChangedEventArgsVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CSearchBox___x_ABI_CWindows__CUI__CXaml__CControls__CSearchBoxQueryChangedEventArgs_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CSearchBox___x_ABI_CWindows__CUI__CXaml__CControls__CSearchBoxQuerySubmittedEventArgs_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CSearchBox___x_ABI_CWindows__CUI__CXaml__CControls__CSearchBoxQuerySubmittedEventArgs_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CSearchBox___x_ABI_CWindows__CUI__CXaml__CControls__CSearchBoxQuerySubmittedEventArgs __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CSearchBox___x_ABI_CWindows__CUI__CXaml__CControls__CSearchBoxQuerySubmittedEventArgs;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CSearchBox___x_ABI_CWindows__CUI__CXaml__CControls__CSearchBoxQuerySubmittedEventArgs;

    typedef struct __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CSearchBox___x_ABI_CWindows__CUI__CXaml__CControls__CSearchBoxQuerySubmittedEventArgsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CSearchBox___x_ABI_CWindows__CUI__CXaml__CControls__CSearchBoxQuerySubmittedEventArgs* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CSearchBox___x_ABI_CWindows__CUI__CXaml__CControls__CSearchBoxQuerySubmittedEventArgs* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CSearchBox___x_ABI_CWindows__CUI__CXaml__CControls__CSearchBoxQuerySubmittedEventArgs* This);
        HRESULT (STDMETHODCALLTYPE* Invoke)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CSearchBox___x_ABI_CWindows__CUI__CXaml__CControls__CSearchBoxQuerySubmittedEventArgs* This,
        __x_ABI_CWindows_CUI_CXaml_CControls_CISearchBox* sender,
        __x_ABI_CWindows_CUI_CXaml_CControls_CISearchBoxQuerySubmittedEventArgs* args);

        END_INTERFACE
    } __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CSearchBox___x_ABI_CWindows__CUI__CXaml__CControls__CSearchBoxQuerySubmittedEventArgsVtbl;

    interface __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CSearchBox___x_ABI_CWindows__CUI__CXaml__CControls__CSearchBoxQuerySubmittedEventArgs
    {
        CONST_VTBL struct __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CSearchBox___x_ABI_CWindows__CUI__CXaml__CControls__CSearchBoxQuerySubmittedEventArgsVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CSearchBox___x_ABI_CWindows__CUI__CXaml__CControls__CSearchBoxQuerySubmittedEventArgs_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CSearchBox___x_ABI_CWindows__CUI__CXaml__CControls__CSearchBoxResultSuggestionChosenEventArgs_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CSearchBox___x_ABI_CWindows__CUI__CXaml__CControls__CSearchBoxResultSuggestionChosenEventArgs_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CSearchBox___x_ABI_CWindows__CUI__CXaml__CControls__CSearchBoxResultSuggestionChosenEventArgs __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CSearchBox___x_ABI_CWindows__CUI__CXaml__CControls__CSearchBoxResultSuggestionChosenEventArgs;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CSearchBox___x_ABI_CWindows__CUI__CXaml__CControls__CSearchBoxResultSuggestionChosenEventArgs;

    typedef struct __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CSearchBox___x_ABI_CWindows__CUI__CXaml__CControls__CSearchBoxResultSuggestionChosenEventArgsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CSearchBox___x_ABI_CWindows__CUI__CXaml__CControls__CSearchBoxResultSuggestionChosenEventArgs* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CSearchBox___x_ABI_CWindows__CUI__CXaml__CControls__CSearchBoxResultSuggestionChosenEventArgs* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CSearchBox___x_ABI_CWindows__CUI__CXaml__CControls__CSearchBoxResultSuggestionChosenEventArgs* This);
        HRESULT (STDMETHODCALLTYPE* Invoke)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CSearchBox___x_ABI_CWindows__CUI__CXaml__CControls__CSearchBoxResultSuggestionChosenEventArgs* This,
        __x_ABI_CWindows_CUI_CXaml_CControls_CISearchBox* sender,
        __x_ABI_CWindows_CUI_CXaml_CControls_CISearchBoxResultSuggestionChosenEventArgs* args);

        END_INTERFACE
    } __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CSearchBox___x_ABI_CWindows__CUI__CXaml__CControls__CSearchBoxResultSuggestionChosenEventArgsVtbl;

    interface __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CSearchBox___x_ABI_CWindows__CUI__CXaml__CControls__CSearchBoxResultSuggestionChosenEventArgs
    {
        CONST_VTBL struct __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CSearchBox___x_ABI_CWindows__CUI__CXaml__CControls__CSearchBoxResultSuggestionChosenEventArgsVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CSearchBox___x_ABI_CWindows__CUI__CXaml__CControls__CSearchBoxResultSuggestionChosenEventArgs_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CSearchBox___x_ABI_CWindows__CUI__CXaml__CControls__CSearchBoxSuggestionsRequestedEventArgs_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CSearchBox___x_ABI_CWindows__CUI__CXaml__CControls__CSearchBoxSuggestionsRequestedEventArgs_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CSearchBox___x_ABI_CWindows__CUI__CXaml__CControls__CSearchBoxSuggestionsRequestedEventArgs __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CSearchBox___x_ABI_CWindows__CUI__CXaml__CControls__CSearchBoxSuggestionsRequestedEventArgs;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CSearchBox___x_ABI_CWindows__CUI__CXaml__CControls__CSearchBoxSuggestionsRequestedEventArgs;

    typedef struct __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CSearchBox___x_ABI_CWindows__CUI__CXaml__CControls__CSearchBoxSuggestionsRequestedEventArgsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CSearchBox___x_ABI_CWindows__CUI__CXaml__CControls__CSearchBoxSuggestionsRequestedEventArgs* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CSearchBox___x_ABI_CWindows__CUI__CXaml__CControls__CSearchBoxSuggestionsRequestedEventArgs* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CSearchBox___x_ABI_CWindows__CUI__CXaml__CControls__CSearchBoxSuggestionsRequestedEventArgs* This);
        HRESULT (STDMETHODCALLTYPE* Invoke)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CSearchBox___x_ABI_CWindows__CUI__CXaml__CControls__CSearchBoxSuggestionsRequestedEventArgs* This,
        __x_ABI_CWindows_CUI_CXaml_CControls_CISearchBox* sender,
        __x_ABI_CWindows_CUI_CXaml_CControls_CISearchBoxSuggestionsRequestedEventArgs* args);

        END_INTERFACE
    } __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CSearchBox___x_ABI_CWindows__CUI__CXaml__CControls__CSearchBoxSuggestionsRequestedEventArgsVtbl;

    interface __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CSearchBox___x_ABI_CWindows__CUI__CXaml__CControls__CSearchBoxSuggestionsRequestedEventArgs
    {
        CONST_VTBL struct __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CSearchBox___x_ABI_CWindows__CUI__CXaml__CControls__CSearchBoxSuggestionsRequestedEventArgsVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CSearchBox___x_ABI_CWindows__CUI__CXaml__CControls__CSearchBoxSuggestionsRequestedEventArgs_INTERFACE_DEFINED__
    
#ifndef ____x_ABI_CWindows_CUI_CXaml_CIRoutedEventArgs_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CIRoutedEventArgs_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CIRoutedEventArgs __x_ABI_CWindows_CUI_CXaml_CIRoutedEventArgs;

#endif // ____x_ABI_CWindows_CUI_CXaml_CIRoutedEventArgs_FWD_DEFINED__

#if !defined(____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CSearchBox___x_ABI_CWindows__CUI__CXaml__CRoutedEventArgs_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CSearchBox___x_ABI_CWindows__CUI__CXaml__CRoutedEventArgs_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CSearchBox___x_ABI_CWindows__CUI__CXaml__CRoutedEventArgs __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CSearchBox___x_ABI_CWindows__CUI__CXaml__CRoutedEventArgs;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CSearchBox___x_ABI_CWindows__CUI__CXaml__CRoutedEventArgs;

    typedef struct __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CSearchBox___x_ABI_CWindows__CUI__CXaml__CRoutedEventArgsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CSearchBox___x_ABI_CWindows__CUI__CXaml__CRoutedEventArgs* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CSearchBox___x_ABI_CWindows__CUI__CXaml__CRoutedEventArgs* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CSearchBox___x_ABI_CWindows__CUI__CXaml__CRoutedEventArgs* This);
        HRESULT (STDMETHODCALLTYPE* Invoke)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CSearchBox___x_ABI_CWindows__CUI__CXaml__CRoutedEventArgs* This,
        __x_ABI_CWindows_CUI_CXaml_CControls_CISearchBox* sender,
        __x_ABI_CWindows_CUI_CXaml_CIRoutedEventArgs* args);

        END_INTERFACE
    } __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CSearchBox___x_ABI_CWindows__CUI__CXaml__CRoutedEventArgsVtbl;

    interface __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CSearchBox___x_ABI_CWindows__CUI__CXaml__CRoutedEventArgs
    {
        CONST_VTBL struct __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CSearchBox___x_ABI_CWindows__CUI__CXaml__CRoutedEventArgsVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CSearchBox___x_ABI_CWindows__CUI__CXaml__CRoutedEventArgs_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CSplitButton___x_ABI_CWindows__CUI__CXaml__CControls__CSplitButtonClickEventArgs_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CSplitButton___x_ABI_CWindows__CUI__CXaml__CControls__CSplitButtonClickEventArgs_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CSplitButton___x_ABI_CWindows__CUI__CXaml__CControls__CSplitButtonClickEventArgs __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CSplitButton___x_ABI_CWindows__CUI__CXaml__CControls__CSplitButtonClickEventArgs;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CSplitButton___x_ABI_CWindows__CUI__CXaml__CControls__CSplitButtonClickEventArgs;

    typedef struct __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CSplitButton___x_ABI_CWindows__CUI__CXaml__CControls__CSplitButtonClickEventArgsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CSplitButton___x_ABI_CWindows__CUI__CXaml__CControls__CSplitButtonClickEventArgs* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CSplitButton___x_ABI_CWindows__CUI__CXaml__CControls__CSplitButtonClickEventArgs* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CSplitButton___x_ABI_CWindows__CUI__CXaml__CControls__CSplitButtonClickEventArgs* This);
        HRESULT (STDMETHODCALLTYPE* Invoke)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CSplitButton___x_ABI_CWindows__CUI__CXaml__CControls__CSplitButtonClickEventArgs* This,
        __x_ABI_CWindows_CUI_CXaml_CControls_CISplitButton* sender,
        __x_ABI_CWindows_CUI_CXaml_CControls_CISplitButtonClickEventArgs* args);

        END_INTERFACE
    } __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CSplitButton___x_ABI_CWindows__CUI__CXaml__CControls__CSplitButtonClickEventArgsVtbl;

    interface __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CSplitButton___x_ABI_CWindows__CUI__CXaml__CControls__CSplitButtonClickEventArgs
    {
        CONST_VTBL struct __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CSplitButton___x_ABI_CWindows__CUI__CXaml__CControls__CSplitButtonClickEventArgsVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CSplitButton___x_ABI_CWindows__CUI__CXaml__CControls__CSplitButtonClickEventArgs_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CSplitView_IInspectable_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CSplitView_IInspectable_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CSplitView_IInspectable __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CSplitView_IInspectable;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CSplitView_IInspectable;

    typedef struct __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CSplitView_IInspectableVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CSplitView_IInspectable* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CSplitView_IInspectable* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CSplitView_IInspectable* This);
        HRESULT (STDMETHODCALLTYPE* Invoke)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CSplitView_IInspectable* This,
        __x_ABI_CWindows_CUI_CXaml_CControls_CISplitView* sender,
        IInspectable* args);

        END_INTERFACE
    } __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CSplitView_IInspectableVtbl;

    interface __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CSplitView_IInspectable
    {
        CONST_VTBL struct __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CSplitView_IInspectableVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CSplitView_IInspectable_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CSplitView___x_ABI_CWindows__CUI__CXaml__CControls__CSplitViewPaneClosingEventArgs_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CSplitView___x_ABI_CWindows__CUI__CXaml__CControls__CSplitViewPaneClosingEventArgs_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CSplitView___x_ABI_CWindows__CUI__CXaml__CControls__CSplitViewPaneClosingEventArgs __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CSplitView___x_ABI_CWindows__CUI__CXaml__CControls__CSplitViewPaneClosingEventArgs;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CSplitView___x_ABI_CWindows__CUI__CXaml__CControls__CSplitViewPaneClosingEventArgs;

    typedef struct __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CSplitView___x_ABI_CWindows__CUI__CXaml__CControls__CSplitViewPaneClosingEventArgsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CSplitView___x_ABI_CWindows__CUI__CXaml__CControls__CSplitViewPaneClosingEventArgs* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CSplitView___x_ABI_CWindows__CUI__CXaml__CControls__CSplitViewPaneClosingEventArgs* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CSplitView___x_ABI_CWindows__CUI__CXaml__CControls__CSplitViewPaneClosingEventArgs* This);
        HRESULT (STDMETHODCALLTYPE* Invoke)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CSplitView___x_ABI_CWindows__CUI__CXaml__CControls__CSplitViewPaneClosingEventArgs* This,
        __x_ABI_CWindows_CUI_CXaml_CControls_CISplitView* sender,
        __x_ABI_CWindows_CUI_CXaml_CControls_CISplitViewPaneClosingEventArgs* args);

        END_INTERFACE
    } __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CSplitView___x_ABI_CWindows__CUI__CXaml__CControls__CSplitViewPaneClosingEventArgsVtbl;

    interface __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CSplitView___x_ABI_CWindows__CUI__CXaml__CControls__CSplitViewPaneClosingEventArgs
    {
        CONST_VTBL struct __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CSplitView___x_ABI_CWindows__CUI__CXaml__CControls__CSplitViewPaneClosingEventArgsVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CSplitView___x_ABI_CWindows__CUI__CXaml__CControls__CSplitViewPaneClosingEventArgs_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CSwapChainPanel_IInspectable_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CSwapChainPanel_IInspectable_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CSwapChainPanel_IInspectable __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CSwapChainPanel_IInspectable;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CSwapChainPanel_IInspectable;

    typedef struct __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CSwapChainPanel_IInspectableVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CSwapChainPanel_IInspectable* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CSwapChainPanel_IInspectable* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CSwapChainPanel_IInspectable* This);
        HRESULT (STDMETHODCALLTYPE* Invoke)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CSwapChainPanel_IInspectable* This,
        __x_ABI_CWindows_CUI_CXaml_CControls_CISwapChainPanel* sender,
        IInspectable* args);

        END_INTERFACE
    } __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CSwapChainPanel_IInspectableVtbl;

    interface __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CSwapChainPanel_IInspectable
    {
        CONST_VTBL struct __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CSwapChainPanel_IInspectableVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CSwapChainPanel_IInspectable_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CSwipeItem___x_ABI_CWindows__CUI__CXaml__CControls__CSwipeItemInvokedEventArgs_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CSwipeItem___x_ABI_CWindows__CUI__CXaml__CControls__CSwipeItemInvokedEventArgs_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CSwipeItem___x_ABI_CWindows__CUI__CXaml__CControls__CSwipeItemInvokedEventArgs __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CSwipeItem___x_ABI_CWindows__CUI__CXaml__CControls__CSwipeItemInvokedEventArgs;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CSwipeItem___x_ABI_CWindows__CUI__CXaml__CControls__CSwipeItemInvokedEventArgs;

    typedef struct __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CSwipeItem___x_ABI_CWindows__CUI__CXaml__CControls__CSwipeItemInvokedEventArgsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CSwipeItem___x_ABI_CWindows__CUI__CXaml__CControls__CSwipeItemInvokedEventArgs* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CSwipeItem___x_ABI_CWindows__CUI__CXaml__CControls__CSwipeItemInvokedEventArgs* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CSwipeItem___x_ABI_CWindows__CUI__CXaml__CControls__CSwipeItemInvokedEventArgs* This);
        HRESULT (STDMETHODCALLTYPE* Invoke)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CSwipeItem___x_ABI_CWindows__CUI__CXaml__CControls__CSwipeItemInvokedEventArgs* This,
        __x_ABI_CWindows_CUI_CXaml_CControls_CISwipeItem* sender,
        __x_ABI_CWindows_CUI_CXaml_CControls_CISwipeItemInvokedEventArgs* args);

        END_INTERFACE
    } __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CSwipeItem___x_ABI_CWindows__CUI__CXaml__CControls__CSwipeItemInvokedEventArgsVtbl;

    interface __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CSwipeItem___x_ABI_CWindows__CUI__CXaml__CControls__CSwipeItemInvokedEventArgs
    {
        CONST_VTBL struct __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CSwipeItem___x_ABI_CWindows__CUI__CXaml__CControls__CSwipeItemInvokedEventArgsVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CSwipeItem___x_ABI_CWindows__CUI__CXaml__CControls__CSwipeItemInvokedEventArgs_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CTextBlock___x_ABI_CWindows__CUI__CXaml__CControls__CIsTextTrimmedChangedEventArgs_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CTextBlock___x_ABI_CWindows__CUI__CXaml__CControls__CIsTextTrimmedChangedEventArgs_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CTextBlock___x_ABI_CWindows__CUI__CXaml__CControls__CIsTextTrimmedChangedEventArgs __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CTextBlock___x_ABI_CWindows__CUI__CXaml__CControls__CIsTextTrimmedChangedEventArgs;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CTextBlock___x_ABI_CWindows__CUI__CXaml__CControls__CIsTextTrimmedChangedEventArgs;

    typedef struct __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CTextBlock___x_ABI_CWindows__CUI__CXaml__CControls__CIsTextTrimmedChangedEventArgsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CTextBlock___x_ABI_CWindows__CUI__CXaml__CControls__CIsTextTrimmedChangedEventArgs* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CTextBlock___x_ABI_CWindows__CUI__CXaml__CControls__CIsTextTrimmedChangedEventArgs* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CTextBlock___x_ABI_CWindows__CUI__CXaml__CControls__CIsTextTrimmedChangedEventArgs* This);
        HRESULT (STDMETHODCALLTYPE* Invoke)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CTextBlock___x_ABI_CWindows__CUI__CXaml__CControls__CIsTextTrimmedChangedEventArgs* This,
        __x_ABI_CWindows_CUI_CXaml_CControls_CITextBlock* sender,
        __x_ABI_CWindows_CUI_CXaml_CControls_CIIsTextTrimmedChangedEventArgs* args);

        END_INTERFACE
    } __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CTextBlock___x_ABI_CWindows__CUI__CXaml__CControls__CIsTextTrimmedChangedEventArgsVtbl;

    interface __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CTextBlock___x_ABI_CWindows__CUI__CXaml__CControls__CIsTextTrimmedChangedEventArgs
    {
        CONST_VTBL struct __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CTextBlock___x_ABI_CWindows__CUI__CXaml__CControls__CIsTextTrimmedChangedEventArgsVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CTextBlock___x_ABI_CWindows__CUI__CXaml__CControls__CIsTextTrimmedChangedEventArgs_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CTextBox___x_ABI_CWindows__CUI__CXaml__CControls__CCandidateWindowBoundsChangedEventArgs_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CTextBox___x_ABI_CWindows__CUI__CXaml__CControls__CCandidateWindowBoundsChangedEventArgs_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CTextBox___x_ABI_CWindows__CUI__CXaml__CControls__CCandidateWindowBoundsChangedEventArgs __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CTextBox___x_ABI_CWindows__CUI__CXaml__CControls__CCandidateWindowBoundsChangedEventArgs;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CTextBox___x_ABI_CWindows__CUI__CXaml__CControls__CCandidateWindowBoundsChangedEventArgs;

    typedef struct __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CTextBox___x_ABI_CWindows__CUI__CXaml__CControls__CCandidateWindowBoundsChangedEventArgsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CTextBox___x_ABI_CWindows__CUI__CXaml__CControls__CCandidateWindowBoundsChangedEventArgs* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CTextBox___x_ABI_CWindows__CUI__CXaml__CControls__CCandidateWindowBoundsChangedEventArgs* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CTextBox___x_ABI_CWindows__CUI__CXaml__CControls__CCandidateWindowBoundsChangedEventArgs* This);
        HRESULT (STDMETHODCALLTYPE* Invoke)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CTextBox___x_ABI_CWindows__CUI__CXaml__CControls__CCandidateWindowBoundsChangedEventArgs* This,
        __x_ABI_CWindows_CUI_CXaml_CControls_CITextBox* sender,
        __x_ABI_CWindows_CUI_CXaml_CControls_CICandidateWindowBoundsChangedEventArgs* args);

        END_INTERFACE
    } __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CTextBox___x_ABI_CWindows__CUI__CXaml__CControls__CCandidateWindowBoundsChangedEventArgsVtbl;

    interface __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CTextBox___x_ABI_CWindows__CUI__CXaml__CControls__CCandidateWindowBoundsChangedEventArgs
    {
        CONST_VTBL struct __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CTextBox___x_ABI_CWindows__CUI__CXaml__CControls__CCandidateWindowBoundsChangedEventArgsVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CTextBox___x_ABI_CWindows__CUI__CXaml__CControls__CCandidateWindowBoundsChangedEventArgs_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CTextBox___x_ABI_CWindows__CUI__CXaml__CControls__CTextBoxBeforeTextChangingEventArgs_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CTextBox___x_ABI_CWindows__CUI__CXaml__CControls__CTextBoxBeforeTextChangingEventArgs_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CTextBox___x_ABI_CWindows__CUI__CXaml__CControls__CTextBoxBeforeTextChangingEventArgs __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CTextBox___x_ABI_CWindows__CUI__CXaml__CControls__CTextBoxBeforeTextChangingEventArgs;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CTextBox___x_ABI_CWindows__CUI__CXaml__CControls__CTextBoxBeforeTextChangingEventArgs;

    typedef struct __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CTextBox___x_ABI_CWindows__CUI__CXaml__CControls__CTextBoxBeforeTextChangingEventArgsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CTextBox___x_ABI_CWindows__CUI__CXaml__CControls__CTextBoxBeforeTextChangingEventArgs* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CTextBox___x_ABI_CWindows__CUI__CXaml__CControls__CTextBoxBeforeTextChangingEventArgs* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CTextBox___x_ABI_CWindows__CUI__CXaml__CControls__CTextBoxBeforeTextChangingEventArgs* This);
        HRESULT (STDMETHODCALLTYPE* Invoke)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CTextBox___x_ABI_CWindows__CUI__CXaml__CControls__CTextBoxBeforeTextChangingEventArgs* This,
        __x_ABI_CWindows_CUI_CXaml_CControls_CITextBox* sender,
        __x_ABI_CWindows_CUI_CXaml_CControls_CITextBoxBeforeTextChangingEventArgs* args);

        END_INTERFACE
    } __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CTextBox___x_ABI_CWindows__CUI__CXaml__CControls__CTextBoxBeforeTextChangingEventArgsVtbl;

    interface __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CTextBox___x_ABI_CWindows__CUI__CXaml__CControls__CTextBoxBeforeTextChangingEventArgs
    {
        CONST_VTBL struct __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CTextBox___x_ABI_CWindows__CUI__CXaml__CControls__CTextBoxBeforeTextChangingEventArgsVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CTextBox___x_ABI_CWindows__CUI__CXaml__CControls__CTextBoxBeforeTextChangingEventArgs_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CTextBox___x_ABI_CWindows__CUI__CXaml__CControls__CTextBoxSelectionChangingEventArgs_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CTextBox___x_ABI_CWindows__CUI__CXaml__CControls__CTextBoxSelectionChangingEventArgs_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CTextBox___x_ABI_CWindows__CUI__CXaml__CControls__CTextBoxSelectionChangingEventArgs __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CTextBox___x_ABI_CWindows__CUI__CXaml__CControls__CTextBoxSelectionChangingEventArgs;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CTextBox___x_ABI_CWindows__CUI__CXaml__CControls__CTextBoxSelectionChangingEventArgs;

    typedef struct __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CTextBox___x_ABI_CWindows__CUI__CXaml__CControls__CTextBoxSelectionChangingEventArgsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CTextBox___x_ABI_CWindows__CUI__CXaml__CControls__CTextBoxSelectionChangingEventArgs* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CTextBox___x_ABI_CWindows__CUI__CXaml__CControls__CTextBoxSelectionChangingEventArgs* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CTextBox___x_ABI_CWindows__CUI__CXaml__CControls__CTextBoxSelectionChangingEventArgs* This);
        HRESULT (STDMETHODCALLTYPE* Invoke)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CTextBox___x_ABI_CWindows__CUI__CXaml__CControls__CTextBoxSelectionChangingEventArgs* This,
        __x_ABI_CWindows_CUI_CXaml_CControls_CITextBox* sender,
        __x_ABI_CWindows_CUI_CXaml_CControls_CITextBoxSelectionChangingEventArgs* args);

        END_INTERFACE
    } __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CTextBox___x_ABI_CWindows__CUI__CXaml__CControls__CTextBoxSelectionChangingEventArgsVtbl;

    interface __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CTextBox___x_ABI_CWindows__CUI__CXaml__CControls__CTextBoxSelectionChangingEventArgs
    {
        CONST_VTBL struct __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CTextBox___x_ABI_CWindows__CUI__CXaml__CControls__CTextBoxSelectionChangingEventArgsVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CTextBox___x_ABI_CWindows__CUI__CXaml__CControls__CTextBoxSelectionChangingEventArgs_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CTextBox___x_ABI_CWindows__CUI__CXaml__CControls__CTextBoxTextChangingEventArgs_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CTextBox___x_ABI_CWindows__CUI__CXaml__CControls__CTextBoxTextChangingEventArgs_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CTextBox___x_ABI_CWindows__CUI__CXaml__CControls__CTextBoxTextChangingEventArgs __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CTextBox___x_ABI_CWindows__CUI__CXaml__CControls__CTextBoxTextChangingEventArgs;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CTextBox___x_ABI_CWindows__CUI__CXaml__CControls__CTextBoxTextChangingEventArgs;

    typedef struct __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CTextBox___x_ABI_CWindows__CUI__CXaml__CControls__CTextBoxTextChangingEventArgsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CTextBox___x_ABI_CWindows__CUI__CXaml__CControls__CTextBoxTextChangingEventArgs* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CTextBox___x_ABI_CWindows__CUI__CXaml__CControls__CTextBoxTextChangingEventArgs* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CTextBox___x_ABI_CWindows__CUI__CXaml__CControls__CTextBoxTextChangingEventArgs* This);
        HRESULT (STDMETHODCALLTYPE* Invoke)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CTextBox___x_ABI_CWindows__CUI__CXaml__CControls__CTextBoxTextChangingEventArgs* This,
        __x_ABI_CWindows_CUI_CXaml_CControls_CITextBox* sender,
        __x_ABI_CWindows_CUI_CXaml_CControls_CITextBoxTextChangingEventArgs* args);

        END_INTERFACE
    } __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CTextBox___x_ABI_CWindows__CUI__CXaml__CControls__CTextBoxTextChangingEventArgsVtbl;

    interface __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CTextBox___x_ABI_CWindows__CUI__CXaml__CControls__CTextBoxTextChangingEventArgs
    {
        CONST_VTBL struct __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CTextBox___x_ABI_CWindows__CUI__CXaml__CControls__CTextBoxTextChangingEventArgsVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CTextBox___x_ABI_CWindows__CUI__CXaml__CControls__CTextBoxTextChangingEventArgs_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CTextBox___x_ABI_CWindows__CUI__CXaml__CControls__CTextCompositionChangedEventArgs_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CTextBox___x_ABI_CWindows__CUI__CXaml__CControls__CTextCompositionChangedEventArgs_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CTextBox___x_ABI_CWindows__CUI__CXaml__CControls__CTextCompositionChangedEventArgs __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CTextBox___x_ABI_CWindows__CUI__CXaml__CControls__CTextCompositionChangedEventArgs;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CTextBox___x_ABI_CWindows__CUI__CXaml__CControls__CTextCompositionChangedEventArgs;

    typedef struct __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CTextBox___x_ABI_CWindows__CUI__CXaml__CControls__CTextCompositionChangedEventArgsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CTextBox___x_ABI_CWindows__CUI__CXaml__CControls__CTextCompositionChangedEventArgs* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CTextBox___x_ABI_CWindows__CUI__CXaml__CControls__CTextCompositionChangedEventArgs* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CTextBox___x_ABI_CWindows__CUI__CXaml__CControls__CTextCompositionChangedEventArgs* This);
        HRESULT (STDMETHODCALLTYPE* Invoke)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CTextBox___x_ABI_CWindows__CUI__CXaml__CControls__CTextCompositionChangedEventArgs* This,
        __x_ABI_CWindows_CUI_CXaml_CControls_CITextBox* sender,
        __x_ABI_CWindows_CUI_CXaml_CControls_CITextCompositionChangedEventArgs* args);

        END_INTERFACE
    } __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CTextBox___x_ABI_CWindows__CUI__CXaml__CControls__CTextCompositionChangedEventArgsVtbl;

    interface __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CTextBox___x_ABI_CWindows__CUI__CXaml__CControls__CTextCompositionChangedEventArgs
    {
        CONST_VTBL struct __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CTextBox___x_ABI_CWindows__CUI__CXaml__CControls__CTextCompositionChangedEventArgsVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CTextBox___x_ABI_CWindows__CUI__CXaml__CControls__CTextCompositionChangedEventArgs_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CTextBox___x_ABI_CWindows__CUI__CXaml__CControls__CTextCompositionEndedEventArgs_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CTextBox___x_ABI_CWindows__CUI__CXaml__CControls__CTextCompositionEndedEventArgs_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CTextBox___x_ABI_CWindows__CUI__CXaml__CControls__CTextCompositionEndedEventArgs __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CTextBox___x_ABI_CWindows__CUI__CXaml__CControls__CTextCompositionEndedEventArgs;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CTextBox___x_ABI_CWindows__CUI__CXaml__CControls__CTextCompositionEndedEventArgs;

    typedef struct __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CTextBox___x_ABI_CWindows__CUI__CXaml__CControls__CTextCompositionEndedEventArgsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CTextBox___x_ABI_CWindows__CUI__CXaml__CControls__CTextCompositionEndedEventArgs* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CTextBox___x_ABI_CWindows__CUI__CXaml__CControls__CTextCompositionEndedEventArgs* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CTextBox___x_ABI_CWindows__CUI__CXaml__CControls__CTextCompositionEndedEventArgs* This);
        HRESULT (STDMETHODCALLTYPE* Invoke)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CTextBox___x_ABI_CWindows__CUI__CXaml__CControls__CTextCompositionEndedEventArgs* This,
        __x_ABI_CWindows_CUI_CXaml_CControls_CITextBox* sender,
        __x_ABI_CWindows_CUI_CXaml_CControls_CITextCompositionEndedEventArgs* args);

        END_INTERFACE
    } __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CTextBox___x_ABI_CWindows__CUI__CXaml__CControls__CTextCompositionEndedEventArgsVtbl;

    interface __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CTextBox___x_ABI_CWindows__CUI__CXaml__CControls__CTextCompositionEndedEventArgs
    {
        CONST_VTBL struct __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CTextBox___x_ABI_CWindows__CUI__CXaml__CControls__CTextCompositionEndedEventArgsVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CTextBox___x_ABI_CWindows__CUI__CXaml__CControls__CTextCompositionEndedEventArgs_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CTextBox___x_ABI_CWindows__CUI__CXaml__CControls__CTextCompositionStartedEventArgs_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CTextBox___x_ABI_CWindows__CUI__CXaml__CControls__CTextCompositionStartedEventArgs_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CTextBox___x_ABI_CWindows__CUI__CXaml__CControls__CTextCompositionStartedEventArgs __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CTextBox___x_ABI_CWindows__CUI__CXaml__CControls__CTextCompositionStartedEventArgs;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CTextBox___x_ABI_CWindows__CUI__CXaml__CControls__CTextCompositionStartedEventArgs;

    typedef struct __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CTextBox___x_ABI_CWindows__CUI__CXaml__CControls__CTextCompositionStartedEventArgsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CTextBox___x_ABI_CWindows__CUI__CXaml__CControls__CTextCompositionStartedEventArgs* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CTextBox___x_ABI_CWindows__CUI__CXaml__CControls__CTextCompositionStartedEventArgs* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CTextBox___x_ABI_CWindows__CUI__CXaml__CControls__CTextCompositionStartedEventArgs* This);
        HRESULT (STDMETHODCALLTYPE* Invoke)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CTextBox___x_ABI_CWindows__CUI__CXaml__CControls__CTextCompositionStartedEventArgs* This,
        __x_ABI_CWindows_CUI_CXaml_CControls_CITextBox* sender,
        __x_ABI_CWindows_CUI_CXaml_CControls_CITextCompositionStartedEventArgs* args);

        END_INTERFACE
    } __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CTextBox___x_ABI_CWindows__CUI__CXaml__CControls__CTextCompositionStartedEventArgsVtbl;

    interface __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CTextBox___x_ABI_CWindows__CUI__CXaml__CControls__CTextCompositionStartedEventArgs
    {
        CONST_VTBL struct __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CTextBox___x_ABI_CWindows__CUI__CXaml__CControls__CTextCompositionStartedEventArgsVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CTextBox___x_ABI_CWindows__CUI__CXaml__CControls__CTextCompositionStartedEventArgs_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CTextBox___x_ABI_CWindows__CUI__CXaml__CControls__CTextControlCopyingToClipboardEventArgs_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CTextBox___x_ABI_CWindows__CUI__CXaml__CControls__CTextControlCopyingToClipboardEventArgs_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CTextBox___x_ABI_CWindows__CUI__CXaml__CControls__CTextControlCopyingToClipboardEventArgs __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CTextBox___x_ABI_CWindows__CUI__CXaml__CControls__CTextControlCopyingToClipboardEventArgs;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CTextBox___x_ABI_CWindows__CUI__CXaml__CControls__CTextControlCopyingToClipboardEventArgs;

    typedef struct __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CTextBox___x_ABI_CWindows__CUI__CXaml__CControls__CTextControlCopyingToClipboardEventArgsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CTextBox___x_ABI_CWindows__CUI__CXaml__CControls__CTextControlCopyingToClipboardEventArgs* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CTextBox___x_ABI_CWindows__CUI__CXaml__CControls__CTextControlCopyingToClipboardEventArgs* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CTextBox___x_ABI_CWindows__CUI__CXaml__CControls__CTextControlCopyingToClipboardEventArgs* This);
        HRESULT (STDMETHODCALLTYPE* Invoke)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CTextBox___x_ABI_CWindows__CUI__CXaml__CControls__CTextControlCopyingToClipboardEventArgs* This,
        __x_ABI_CWindows_CUI_CXaml_CControls_CITextBox* sender,
        __x_ABI_CWindows_CUI_CXaml_CControls_CITextControlCopyingToClipboardEventArgs* args);

        END_INTERFACE
    } __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CTextBox___x_ABI_CWindows__CUI__CXaml__CControls__CTextControlCopyingToClipboardEventArgsVtbl;

    interface __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CTextBox___x_ABI_CWindows__CUI__CXaml__CControls__CTextControlCopyingToClipboardEventArgs
    {
        CONST_VTBL struct __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CTextBox___x_ABI_CWindows__CUI__CXaml__CControls__CTextControlCopyingToClipboardEventArgsVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CTextBox___x_ABI_CWindows__CUI__CXaml__CControls__CTextControlCopyingToClipboardEventArgs_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CTextBox___x_ABI_CWindows__CUI__CXaml__CControls__CTextControlCuttingToClipboardEventArgs_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CTextBox___x_ABI_CWindows__CUI__CXaml__CControls__CTextControlCuttingToClipboardEventArgs_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CTextBox___x_ABI_CWindows__CUI__CXaml__CControls__CTextControlCuttingToClipboardEventArgs __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CTextBox___x_ABI_CWindows__CUI__CXaml__CControls__CTextControlCuttingToClipboardEventArgs;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CTextBox___x_ABI_CWindows__CUI__CXaml__CControls__CTextControlCuttingToClipboardEventArgs;

    typedef struct __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CTextBox___x_ABI_CWindows__CUI__CXaml__CControls__CTextControlCuttingToClipboardEventArgsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CTextBox___x_ABI_CWindows__CUI__CXaml__CControls__CTextControlCuttingToClipboardEventArgs* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CTextBox___x_ABI_CWindows__CUI__CXaml__CControls__CTextControlCuttingToClipboardEventArgs* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CTextBox___x_ABI_CWindows__CUI__CXaml__CControls__CTextControlCuttingToClipboardEventArgs* This);
        HRESULT (STDMETHODCALLTYPE* Invoke)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CTextBox___x_ABI_CWindows__CUI__CXaml__CControls__CTextControlCuttingToClipboardEventArgs* This,
        __x_ABI_CWindows_CUI_CXaml_CControls_CITextBox* sender,
        __x_ABI_CWindows_CUI_CXaml_CControls_CITextControlCuttingToClipboardEventArgs* args);

        END_INTERFACE
    } __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CTextBox___x_ABI_CWindows__CUI__CXaml__CControls__CTextControlCuttingToClipboardEventArgsVtbl;

    interface __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CTextBox___x_ABI_CWindows__CUI__CXaml__CControls__CTextControlCuttingToClipboardEventArgs
    {
        CONST_VTBL struct __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CTextBox___x_ABI_CWindows__CUI__CXaml__CControls__CTextControlCuttingToClipboardEventArgsVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CTextBox___x_ABI_CWindows__CUI__CXaml__CControls__CTextControlCuttingToClipboardEventArgs_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CTimePicker___x_ABI_CWindows__CUI__CXaml__CControls__CTimePickerSelectedValueChangedEventArgs_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CTimePicker___x_ABI_CWindows__CUI__CXaml__CControls__CTimePickerSelectedValueChangedEventArgs_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CTimePicker___x_ABI_CWindows__CUI__CXaml__CControls__CTimePickerSelectedValueChangedEventArgs __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CTimePicker___x_ABI_CWindows__CUI__CXaml__CControls__CTimePickerSelectedValueChangedEventArgs;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CTimePicker___x_ABI_CWindows__CUI__CXaml__CControls__CTimePickerSelectedValueChangedEventArgs;

    typedef struct __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CTimePicker___x_ABI_CWindows__CUI__CXaml__CControls__CTimePickerSelectedValueChangedEventArgsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CTimePicker___x_ABI_CWindows__CUI__CXaml__CControls__CTimePickerSelectedValueChangedEventArgs* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CTimePicker___x_ABI_CWindows__CUI__CXaml__CControls__CTimePickerSelectedValueChangedEventArgs* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CTimePicker___x_ABI_CWindows__CUI__CXaml__CControls__CTimePickerSelectedValueChangedEventArgs* This);
        HRESULT (STDMETHODCALLTYPE* Invoke)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CTimePicker___x_ABI_CWindows__CUI__CXaml__CControls__CTimePickerSelectedValueChangedEventArgs* This,
        __x_ABI_CWindows_CUI_CXaml_CControls_CITimePicker* sender,
        __x_ABI_CWindows_CUI_CXaml_CControls_CITimePickerSelectedValueChangedEventArgs* args);

        END_INTERFACE
    } __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CTimePicker___x_ABI_CWindows__CUI__CXaml__CControls__CTimePickerSelectedValueChangedEventArgsVtbl;

    interface __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CTimePicker___x_ABI_CWindows__CUI__CXaml__CControls__CTimePickerSelectedValueChangedEventArgs
    {
        CONST_VTBL struct __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CTimePicker___x_ABI_CWindows__CUI__CXaml__CControls__CTimePickerSelectedValueChangedEventArgsVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CTimePicker___x_ABI_CWindows__CUI__CXaml__CControls__CTimePickerSelectedValueChangedEventArgs_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CTimePickerFlyout___x_ABI_CWindows__CUI__CXaml__CControls__CTimePickedEventArgs_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CTimePickerFlyout___x_ABI_CWindows__CUI__CXaml__CControls__CTimePickedEventArgs_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CTimePickerFlyout___x_ABI_CWindows__CUI__CXaml__CControls__CTimePickedEventArgs __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CTimePickerFlyout___x_ABI_CWindows__CUI__CXaml__CControls__CTimePickedEventArgs;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CTimePickerFlyout___x_ABI_CWindows__CUI__CXaml__CControls__CTimePickedEventArgs;

    typedef struct __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CTimePickerFlyout___x_ABI_CWindows__CUI__CXaml__CControls__CTimePickedEventArgsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CTimePickerFlyout___x_ABI_CWindows__CUI__CXaml__CControls__CTimePickedEventArgs* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CTimePickerFlyout___x_ABI_CWindows__CUI__CXaml__CControls__CTimePickedEventArgs* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CTimePickerFlyout___x_ABI_CWindows__CUI__CXaml__CControls__CTimePickedEventArgs* This);
        HRESULT (STDMETHODCALLTYPE* Invoke)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CTimePickerFlyout___x_ABI_CWindows__CUI__CXaml__CControls__CTimePickedEventArgs* This,
        __x_ABI_CWindows_CUI_CXaml_CControls_CITimePickerFlyout* sender,
        __x_ABI_CWindows_CUI_CXaml_CControls_CITimePickedEventArgs* args);

        END_INTERFACE
    } __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CTimePickerFlyout___x_ABI_CWindows__CUI__CXaml__CControls__CTimePickedEventArgsVtbl;

    interface __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CTimePickerFlyout___x_ABI_CWindows__CUI__CXaml__CControls__CTimePickedEventArgs
    {
        CONST_VTBL struct __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CTimePickerFlyout___x_ABI_CWindows__CUI__CXaml__CControls__CTimePickedEventArgsVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CTimePickerFlyout___x_ABI_CWindows__CUI__CXaml__CControls__CTimePickedEventArgs_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CToggleSplitButton___x_ABI_CWindows__CUI__CXaml__CControls__CToggleSplitButtonIsCheckedChangedEventArgs_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CToggleSplitButton___x_ABI_CWindows__CUI__CXaml__CControls__CToggleSplitButtonIsCheckedChangedEventArgs_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CToggleSplitButton___x_ABI_CWindows__CUI__CXaml__CControls__CToggleSplitButtonIsCheckedChangedEventArgs __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CToggleSplitButton___x_ABI_CWindows__CUI__CXaml__CControls__CToggleSplitButtonIsCheckedChangedEventArgs;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CToggleSplitButton___x_ABI_CWindows__CUI__CXaml__CControls__CToggleSplitButtonIsCheckedChangedEventArgs;

    typedef struct __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CToggleSplitButton___x_ABI_CWindows__CUI__CXaml__CControls__CToggleSplitButtonIsCheckedChangedEventArgsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CToggleSplitButton___x_ABI_CWindows__CUI__CXaml__CControls__CToggleSplitButtonIsCheckedChangedEventArgs* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CToggleSplitButton___x_ABI_CWindows__CUI__CXaml__CControls__CToggleSplitButtonIsCheckedChangedEventArgs* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CToggleSplitButton___x_ABI_CWindows__CUI__CXaml__CControls__CToggleSplitButtonIsCheckedChangedEventArgs* This);
        HRESULT (STDMETHODCALLTYPE* Invoke)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CToggleSplitButton___x_ABI_CWindows__CUI__CXaml__CControls__CToggleSplitButtonIsCheckedChangedEventArgs* This,
        __x_ABI_CWindows_CUI_CXaml_CControls_CIToggleSplitButton* sender,
        __x_ABI_CWindows_CUI_CXaml_CControls_CIToggleSplitButtonIsCheckedChangedEventArgs* args);

        END_INTERFACE
    } __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CToggleSplitButton___x_ABI_CWindows__CUI__CXaml__CControls__CToggleSplitButtonIsCheckedChangedEventArgsVtbl;

    interface __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CToggleSplitButton___x_ABI_CWindows__CUI__CXaml__CControls__CToggleSplitButtonIsCheckedChangedEventArgs
    {
        CONST_VTBL struct __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CToggleSplitButton___x_ABI_CWindows__CUI__CXaml__CControls__CToggleSplitButtonIsCheckedChangedEventArgsVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CToggleSplitButton___x_ABI_CWindows__CUI__CXaml__CControls__CToggleSplitButtonIsCheckedChangedEventArgs_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CTreeView___x_ABI_CWindows__CUI__CXaml__CControls__CTreeViewCollapsedEventArgs_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CTreeView___x_ABI_CWindows__CUI__CXaml__CControls__CTreeViewCollapsedEventArgs_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CTreeView___x_ABI_CWindows__CUI__CXaml__CControls__CTreeViewCollapsedEventArgs __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CTreeView___x_ABI_CWindows__CUI__CXaml__CControls__CTreeViewCollapsedEventArgs;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CTreeView___x_ABI_CWindows__CUI__CXaml__CControls__CTreeViewCollapsedEventArgs;

    typedef struct __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CTreeView___x_ABI_CWindows__CUI__CXaml__CControls__CTreeViewCollapsedEventArgsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CTreeView___x_ABI_CWindows__CUI__CXaml__CControls__CTreeViewCollapsedEventArgs* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CTreeView___x_ABI_CWindows__CUI__CXaml__CControls__CTreeViewCollapsedEventArgs* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CTreeView___x_ABI_CWindows__CUI__CXaml__CControls__CTreeViewCollapsedEventArgs* This);
        HRESULT (STDMETHODCALLTYPE* Invoke)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CTreeView___x_ABI_CWindows__CUI__CXaml__CControls__CTreeViewCollapsedEventArgs* This,
        __x_ABI_CWindows_CUI_CXaml_CControls_CITreeView* sender,
        __x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewCollapsedEventArgs* args);

        END_INTERFACE
    } __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CTreeView___x_ABI_CWindows__CUI__CXaml__CControls__CTreeViewCollapsedEventArgsVtbl;

    interface __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CTreeView___x_ABI_CWindows__CUI__CXaml__CControls__CTreeViewCollapsedEventArgs
    {
        CONST_VTBL struct __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CTreeView___x_ABI_CWindows__CUI__CXaml__CControls__CTreeViewCollapsedEventArgsVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CTreeView___x_ABI_CWindows__CUI__CXaml__CControls__CTreeViewCollapsedEventArgs_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CTreeView___x_ABI_CWindows__CUI__CXaml__CControls__CTreeViewDragItemsCompletedEventArgs_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CTreeView___x_ABI_CWindows__CUI__CXaml__CControls__CTreeViewDragItemsCompletedEventArgs_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CTreeView___x_ABI_CWindows__CUI__CXaml__CControls__CTreeViewDragItemsCompletedEventArgs __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CTreeView___x_ABI_CWindows__CUI__CXaml__CControls__CTreeViewDragItemsCompletedEventArgs;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CTreeView___x_ABI_CWindows__CUI__CXaml__CControls__CTreeViewDragItemsCompletedEventArgs;

    typedef struct __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CTreeView___x_ABI_CWindows__CUI__CXaml__CControls__CTreeViewDragItemsCompletedEventArgsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CTreeView___x_ABI_CWindows__CUI__CXaml__CControls__CTreeViewDragItemsCompletedEventArgs* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CTreeView___x_ABI_CWindows__CUI__CXaml__CControls__CTreeViewDragItemsCompletedEventArgs* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CTreeView___x_ABI_CWindows__CUI__CXaml__CControls__CTreeViewDragItemsCompletedEventArgs* This);
        HRESULT (STDMETHODCALLTYPE* Invoke)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CTreeView___x_ABI_CWindows__CUI__CXaml__CControls__CTreeViewDragItemsCompletedEventArgs* This,
        __x_ABI_CWindows_CUI_CXaml_CControls_CITreeView* sender,
        __x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewDragItemsCompletedEventArgs* args);

        END_INTERFACE
    } __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CTreeView___x_ABI_CWindows__CUI__CXaml__CControls__CTreeViewDragItemsCompletedEventArgsVtbl;

    interface __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CTreeView___x_ABI_CWindows__CUI__CXaml__CControls__CTreeViewDragItemsCompletedEventArgs
    {
        CONST_VTBL struct __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CTreeView___x_ABI_CWindows__CUI__CXaml__CControls__CTreeViewDragItemsCompletedEventArgsVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CTreeView___x_ABI_CWindows__CUI__CXaml__CControls__CTreeViewDragItemsCompletedEventArgs_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CTreeView___x_ABI_CWindows__CUI__CXaml__CControls__CTreeViewDragItemsStartingEventArgs_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CTreeView___x_ABI_CWindows__CUI__CXaml__CControls__CTreeViewDragItemsStartingEventArgs_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CTreeView___x_ABI_CWindows__CUI__CXaml__CControls__CTreeViewDragItemsStartingEventArgs __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CTreeView___x_ABI_CWindows__CUI__CXaml__CControls__CTreeViewDragItemsStartingEventArgs;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CTreeView___x_ABI_CWindows__CUI__CXaml__CControls__CTreeViewDragItemsStartingEventArgs;

    typedef struct __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CTreeView___x_ABI_CWindows__CUI__CXaml__CControls__CTreeViewDragItemsStartingEventArgsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CTreeView___x_ABI_CWindows__CUI__CXaml__CControls__CTreeViewDragItemsStartingEventArgs* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CTreeView___x_ABI_CWindows__CUI__CXaml__CControls__CTreeViewDragItemsStartingEventArgs* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CTreeView___x_ABI_CWindows__CUI__CXaml__CControls__CTreeViewDragItemsStartingEventArgs* This);
        HRESULT (STDMETHODCALLTYPE* Invoke)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CTreeView___x_ABI_CWindows__CUI__CXaml__CControls__CTreeViewDragItemsStartingEventArgs* This,
        __x_ABI_CWindows_CUI_CXaml_CControls_CITreeView* sender,
        __x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewDragItemsStartingEventArgs* args);

        END_INTERFACE
    } __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CTreeView___x_ABI_CWindows__CUI__CXaml__CControls__CTreeViewDragItemsStartingEventArgsVtbl;

    interface __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CTreeView___x_ABI_CWindows__CUI__CXaml__CControls__CTreeViewDragItemsStartingEventArgs
    {
        CONST_VTBL struct __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CTreeView___x_ABI_CWindows__CUI__CXaml__CControls__CTreeViewDragItemsStartingEventArgsVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CTreeView___x_ABI_CWindows__CUI__CXaml__CControls__CTreeViewDragItemsStartingEventArgs_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CTreeView___x_ABI_CWindows__CUI__CXaml__CControls__CTreeViewExpandingEventArgs_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CTreeView___x_ABI_CWindows__CUI__CXaml__CControls__CTreeViewExpandingEventArgs_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CTreeView___x_ABI_CWindows__CUI__CXaml__CControls__CTreeViewExpandingEventArgs __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CTreeView___x_ABI_CWindows__CUI__CXaml__CControls__CTreeViewExpandingEventArgs;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CTreeView___x_ABI_CWindows__CUI__CXaml__CControls__CTreeViewExpandingEventArgs;

    typedef struct __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CTreeView___x_ABI_CWindows__CUI__CXaml__CControls__CTreeViewExpandingEventArgsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CTreeView___x_ABI_CWindows__CUI__CXaml__CControls__CTreeViewExpandingEventArgs* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CTreeView___x_ABI_CWindows__CUI__CXaml__CControls__CTreeViewExpandingEventArgs* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CTreeView___x_ABI_CWindows__CUI__CXaml__CControls__CTreeViewExpandingEventArgs* This);
        HRESULT (STDMETHODCALLTYPE* Invoke)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CTreeView___x_ABI_CWindows__CUI__CXaml__CControls__CTreeViewExpandingEventArgs* This,
        __x_ABI_CWindows_CUI_CXaml_CControls_CITreeView* sender,
        __x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewExpandingEventArgs* args);

        END_INTERFACE
    } __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CTreeView___x_ABI_CWindows__CUI__CXaml__CControls__CTreeViewExpandingEventArgsVtbl;

    interface __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CTreeView___x_ABI_CWindows__CUI__CXaml__CControls__CTreeViewExpandingEventArgs
    {
        CONST_VTBL struct __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CTreeView___x_ABI_CWindows__CUI__CXaml__CControls__CTreeViewExpandingEventArgsVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CTreeView___x_ABI_CWindows__CUI__CXaml__CControls__CTreeViewExpandingEventArgs_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CTreeView___x_ABI_CWindows__CUI__CXaml__CControls__CTreeViewItemInvokedEventArgs_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CTreeView___x_ABI_CWindows__CUI__CXaml__CControls__CTreeViewItemInvokedEventArgs_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CTreeView___x_ABI_CWindows__CUI__CXaml__CControls__CTreeViewItemInvokedEventArgs __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CTreeView___x_ABI_CWindows__CUI__CXaml__CControls__CTreeViewItemInvokedEventArgs;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CTreeView___x_ABI_CWindows__CUI__CXaml__CControls__CTreeViewItemInvokedEventArgs;

    typedef struct __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CTreeView___x_ABI_CWindows__CUI__CXaml__CControls__CTreeViewItemInvokedEventArgsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CTreeView___x_ABI_CWindows__CUI__CXaml__CControls__CTreeViewItemInvokedEventArgs* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CTreeView___x_ABI_CWindows__CUI__CXaml__CControls__CTreeViewItemInvokedEventArgs* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CTreeView___x_ABI_CWindows__CUI__CXaml__CControls__CTreeViewItemInvokedEventArgs* This);
        HRESULT (STDMETHODCALLTYPE* Invoke)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CTreeView___x_ABI_CWindows__CUI__CXaml__CControls__CTreeViewItemInvokedEventArgs* This,
        __x_ABI_CWindows_CUI_CXaml_CControls_CITreeView* sender,
        __x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewItemInvokedEventArgs* args);

        END_INTERFACE
    } __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CTreeView___x_ABI_CWindows__CUI__CXaml__CControls__CTreeViewItemInvokedEventArgsVtbl;

    interface __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CTreeView___x_ABI_CWindows__CUI__CXaml__CControls__CTreeViewItemInvokedEventArgs
    {
        CONST_VTBL struct __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CTreeView___x_ABI_CWindows__CUI__CXaml__CControls__CTreeViewItemInvokedEventArgsVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CTreeView___x_ABI_CWindows__CUI__CXaml__CControls__CTreeViewItemInvokedEventArgs_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CTwoPaneView_IInspectable_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CTwoPaneView_IInspectable_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CTwoPaneView_IInspectable __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CTwoPaneView_IInspectable;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CTwoPaneView_IInspectable;

    typedef struct __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CTwoPaneView_IInspectableVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CTwoPaneView_IInspectable* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CTwoPaneView_IInspectable* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CTwoPaneView_IInspectable* This);
        HRESULT (STDMETHODCALLTYPE* Invoke)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CTwoPaneView_IInspectable* This,
        __x_ABI_CWindows_CUI_CXaml_CControls_CITwoPaneView* sender,
        IInspectable* args);

        END_INTERFACE
    } __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CTwoPaneView_IInspectableVtbl;

    interface __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CTwoPaneView_IInspectable
    {
        CONST_VTBL struct __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CTwoPaneView_IInspectableVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CTwoPaneView_IInspectable_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CWebView_IInspectable_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CWebView_IInspectable_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CWebView_IInspectable __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CWebView_IInspectable;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CWebView_IInspectable;

    typedef struct __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CWebView_IInspectableVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CWebView_IInspectable* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CWebView_IInspectable* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CWebView_IInspectable* This);
        HRESULT (STDMETHODCALLTYPE* Invoke)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CWebView_IInspectable* This,
        __x_ABI_CWindows_CUI_CXaml_CControls_CIWebView* sender,
        IInspectable* args);

        END_INTERFACE
    } __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CWebView_IInspectableVtbl;

    interface __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CWebView_IInspectable
    {
        CONST_VTBL struct __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CWebView_IInspectableVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CWebView_IInspectable_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CWebView___x_ABI_CWindows__CUI__CXaml__CControls__CWebViewContentLoadingEventArgs_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CWebView___x_ABI_CWindows__CUI__CXaml__CControls__CWebViewContentLoadingEventArgs_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CWebView___x_ABI_CWindows__CUI__CXaml__CControls__CWebViewContentLoadingEventArgs __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CWebView___x_ABI_CWindows__CUI__CXaml__CControls__CWebViewContentLoadingEventArgs;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CWebView___x_ABI_CWindows__CUI__CXaml__CControls__CWebViewContentLoadingEventArgs;

    typedef struct __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CWebView___x_ABI_CWindows__CUI__CXaml__CControls__CWebViewContentLoadingEventArgsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CWebView___x_ABI_CWindows__CUI__CXaml__CControls__CWebViewContentLoadingEventArgs* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CWebView___x_ABI_CWindows__CUI__CXaml__CControls__CWebViewContentLoadingEventArgs* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CWebView___x_ABI_CWindows__CUI__CXaml__CControls__CWebViewContentLoadingEventArgs* This);
        HRESULT (STDMETHODCALLTYPE* Invoke)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CWebView___x_ABI_CWindows__CUI__CXaml__CControls__CWebViewContentLoadingEventArgs* This,
        __x_ABI_CWindows_CUI_CXaml_CControls_CIWebView* sender,
        __x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewContentLoadingEventArgs* args);

        END_INTERFACE
    } __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CWebView___x_ABI_CWindows__CUI__CXaml__CControls__CWebViewContentLoadingEventArgsVtbl;

    interface __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CWebView___x_ABI_CWindows__CUI__CXaml__CControls__CWebViewContentLoadingEventArgs
    {
        CONST_VTBL struct __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CWebView___x_ABI_CWindows__CUI__CXaml__CControls__CWebViewContentLoadingEventArgsVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CWebView___x_ABI_CWindows__CUI__CXaml__CControls__CWebViewContentLoadingEventArgs_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CWebView___x_ABI_CWindows__CUI__CXaml__CControls__CWebViewDOMContentLoadedEventArgs_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CWebView___x_ABI_CWindows__CUI__CXaml__CControls__CWebViewDOMContentLoadedEventArgs_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CWebView___x_ABI_CWindows__CUI__CXaml__CControls__CWebViewDOMContentLoadedEventArgs __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CWebView___x_ABI_CWindows__CUI__CXaml__CControls__CWebViewDOMContentLoadedEventArgs;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CWebView___x_ABI_CWindows__CUI__CXaml__CControls__CWebViewDOMContentLoadedEventArgs;

    typedef struct __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CWebView___x_ABI_CWindows__CUI__CXaml__CControls__CWebViewDOMContentLoadedEventArgsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CWebView___x_ABI_CWindows__CUI__CXaml__CControls__CWebViewDOMContentLoadedEventArgs* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CWebView___x_ABI_CWindows__CUI__CXaml__CControls__CWebViewDOMContentLoadedEventArgs* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CWebView___x_ABI_CWindows__CUI__CXaml__CControls__CWebViewDOMContentLoadedEventArgs* This);
        HRESULT (STDMETHODCALLTYPE* Invoke)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CWebView___x_ABI_CWindows__CUI__CXaml__CControls__CWebViewDOMContentLoadedEventArgs* This,
        __x_ABI_CWindows_CUI_CXaml_CControls_CIWebView* sender,
        __x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewDOMContentLoadedEventArgs* args);

        END_INTERFACE
    } __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CWebView___x_ABI_CWindows__CUI__CXaml__CControls__CWebViewDOMContentLoadedEventArgsVtbl;

    interface __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CWebView___x_ABI_CWindows__CUI__CXaml__CControls__CWebViewDOMContentLoadedEventArgs
    {
        CONST_VTBL struct __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CWebView___x_ABI_CWindows__CUI__CXaml__CControls__CWebViewDOMContentLoadedEventArgsVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CWebView___x_ABI_CWindows__CUI__CXaml__CControls__CWebViewDOMContentLoadedEventArgs_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CWebView___x_ABI_CWindows__CUI__CXaml__CControls__CWebViewLongRunningScriptDetectedEventArgs_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CWebView___x_ABI_CWindows__CUI__CXaml__CControls__CWebViewLongRunningScriptDetectedEventArgs_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CWebView___x_ABI_CWindows__CUI__CXaml__CControls__CWebViewLongRunningScriptDetectedEventArgs __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CWebView___x_ABI_CWindows__CUI__CXaml__CControls__CWebViewLongRunningScriptDetectedEventArgs;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CWebView___x_ABI_CWindows__CUI__CXaml__CControls__CWebViewLongRunningScriptDetectedEventArgs;

    typedef struct __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CWebView___x_ABI_CWindows__CUI__CXaml__CControls__CWebViewLongRunningScriptDetectedEventArgsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CWebView___x_ABI_CWindows__CUI__CXaml__CControls__CWebViewLongRunningScriptDetectedEventArgs* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CWebView___x_ABI_CWindows__CUI__CXaml__CControls__CWebViewLongRunningScriptDetectedEventArgs* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CWebView___x_ABI_CWindows__CUI__CXaml__CControls__CWebViewLongRunningScriptDetectedEventArgs* This);
        HRESULT (STDMETHODCALLTYPE* Invoke)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CWebView___x_ABI_CWindows__CUI__CXaml__CControls__CWebViewLongRunningScriptDetectedEventArgs* This,
        __x_ABI_CWindows_CUI_CXaml_CControls_CIWebView* sender,
        __x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewLongRunningScriptDetectedEventArgs* args);

        END_INTERFACE
    } __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CWebView___x_ABI_CWindows__CUI__CXaml__CControls__CWebViewLongRunningScriptDetectedEventArgsVtbl;

    interface __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CWebView___x_ABI_CWindows__CUI__CXaml__CControls__CWebViewLongRunningScriptDetectedEventArgs
    {
        CONST_VTBL struct __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CWebView___x_ABI_CWindows__CUI__CXaml__CControls__CWebViewLongRunningScriptDetectedEventArgsVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CWebView___x_ABI_CWindows__CUI__CXaml__CControls__CWebViewLongRunningScriptDetectedEventArgs_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CWebView___x_ABI_CWindows__CUI__CXaml__CControls__CWebViewNavigationCompletedEventArgs_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CWebView___x_ABI_CWindows__CUI__CXaml__CControls__CWebViewNavigationCompletedEventArgs_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CWebView___x_ABI_CWindows__CUI__CXaml__CControls__CWebViewNavigationCompletedEventArgs __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CWebView___x_ABI_CWindows__CUI__CXaml__CControls__CWebViewNavigationCompletedEventArgs;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CWebView___x_ABI_CWindows__CUI__CXaml__CControls__CWebViewNavigationCompletedEventArgs;

    typedef struct __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CWebView___x_ABI_CWindows__CUI__CXaml__CControls__CWebViewNavigationCompletedEventArgsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CWebView___x_ABI_CWindows__CUI__CXaml__CControls__CWebViewNavigationCompletedEventArgs* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CWebView___x_ABI_CWindows__CUI__CXaml__CControls__CWebViewNavigationCompletedEventArgs* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CWebView___x_ABI_CWindows__CUI__CXaml__CControls__CWebViewNavigationCompletedEventArgs* This);
        HRESULT (STDMETHODCALLTYPE* Invoke)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CWebView___x_ABI_CWindows__CUI__CXaml__CControls__CWebViewNavigationCompletedEventArgs* This,
        __x_ABI_CWindows_CUI_CXaml_CControls_CIWebView* sender,
        __x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewNavigationCompletedEventArgs* args);

        END_INTERFACE
    } __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CWebView___x_ABI_CWindows__CUI__CXaml__CControls__CWebViewNavigationCompletedEventArgsVtbl;

    interface __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CWebView___x_ABI_CWindows__CUI__CXaml__CControls__CWebViewNavigationCompletedEventArgs
    {
        CONST_VTBL struct __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CWebView___x_ABI_CWindows__CUI__CXaml__CControls__CWebViewNavigationCompletedEventArgsVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CWebView___x_ABI_CWindows__CUI__CXaml__CControls__CWebViewNavigationCompletedEventArgs_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CWebView___x_ABI_CWindows__CUI__CXaml__CControls__CWebViewNavigationStartingEventArgs_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CWebView___x_ABI_CWindows__CUI__CXaml__CControls__CWebViewNavigationStartingEventArgs_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CWebView___x_ABI_CWindows__CUI__CXaml__CControls__CWebViewNavigationStartingEventArgs __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CWebView___x_ABI_CWindows__CUI__CXaml__CControls__CWebViewNavigationStartingEventArgs;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CWebView___x_ABI_CWindows__CUI__CXaml__CControls__CWebViewNavigationStartingEventArgs;

    typedef struct __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CWebView___x_ABI_CWindows__CUI__CXaml__CControls__CWebViewNavigationStartingEventArgsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CWebView___x_ABI_CWindows__CUI__CXaml__CControls__CWebViewNavigationStartingEventArgs* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CWebView___x_ABI_CWindows__CUI__CXaml__CControls__CWebViewNavigationStartingEventArgs* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CWebView___x_ABI_CWindows__CUI__CXaml__CControls__CWebViewNavigationStartingEventArgs* This);
        HRESULT (STDMETHODCALLTYPE* Invoke)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CWebView___x_ABI_CWindows__CUI__CXaml__CControls__CWebViewNavigationStartingEventArgs* This,
        __x_ABI_CWindows_CUI_CXaml_CControls_CIWebView* sender,
        __x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewNavigationStartingEventArgs* args);

        END_INTERFACE
    } __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CWebView___x_ABI_CWindows__CUI__CXaml__CControls__CWebViewNavigationStartingEventArgsVtbl;

    interface __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CWebView___x_ABI_CWindows__CUI__CXaml__CControls__CWebViewNavigationStartingEventArgs
    {
        CONST_VTBL struct __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CWebView___x_ABI_CWindows__CUI__CXaml__CControls__CWebViewNavigationStartingEventArgsVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CWebView___x_ABI_CWindows__CUI__CXaml__CControls__CWebViewNavigationStartingEventArgs_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CWebView___x_ABI_CWindows__CUI__CXaml__CControls__CWebViewNewWindowRequestedEventArgs_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CWebView___x_ABI_CWindows__CUI__CXaml__CControls__CWebViewNewWindowRequestedEventArgs_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CWebView___x_ABI_CWindows__CUI__CXaml__CControls__CWebViewNewWindowRequestedEventArgs __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CWebView___x_ABI_CWindows__CUI__CXaml__CControls__CWebViewNewWindowRequestedEventArgs;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CWebView___x_ABI_CWindows__CUI__CXaml__CControls__CWebViewNewWindowRequestedEventArgs;

    typedef struct __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CWebView___x_ABI_CWindows__CUI__CXaml__CControls__CWebViewNewWindowRequestedEventArgsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CWebView___x_ABI_CWindows__CUI__CXaml__CControls__CWebViewNewWindowRequestedEventArgs* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CWebView___x_ABI_CWindows__CUI__CXaml__CControls__CWebViewNewWindowRequestedEventArgs* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CWebView___x_ABI_CWindows__CUI__CXaml__CControls__CWebViewNewWindowRequestedEventArgs* This);
        HRESULT (STDMETHODCALLTYPE* Invoke)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CWebView___x_ABI_CWindows__CUI__CXaml__CControls__CWebViewNewWindowRequestedEventArgs* This,
        __x_ABI_CWindows_CUI_CXaml_CControls_CIWebView* sender,
        __x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewNewWindowRequestedEventArgs* args);

        END_INTERFACE
    } __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CWebView___x_ABI_CWindows__CUI__CXaml__CControls__CWebViewNewWindowRequestedEventArgsVtbl;

    interface __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CWebView___x_ABI_CWindows__CUI__CXaml__CControls__CWebViewNewWindowRequestedEventArgs
    {
        CONST_VTBL struct __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CWebView___x_ABI_CWindows__CUI__CXaml__CControls__CWebViewNewWindowRequestedEventArgsVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CWebView___x_ABI_CWindows__CUI__CXaml__CControls__CWebViewNewWindowRequestedEventArgs_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CWebView___x_ABI_CWindows__CUI__CXaml__CControls__CWebViewPermissionRequestedEventArgs_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CWebView___x_ABI_CWindows__CUI__CXaml__CControls__CWebViewPermissionRequestedEventArgs_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CWebView___x_ABI_CWindows__CUI__CXaml__CControls__CWebViewPermissionRequestedEventArgs __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CWebView___x_ABI_CWindows__CUI__CXaml__CControls__CWebViewPermissionRequestedEventArgs;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CWebView___x_ABI_CWindows__CUI__CXaml__CControls__CWebViewPermissionRequestedEventArgs;

    typedef struct __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CWebView___x_ABI_CWindows__CUI__CXaml__CControls__CWebViewPermissionRequestedEventArgsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CWebView___x_ABI_CWindows__CUI__CXaml__CControls__CWebViewPermissionRequestedEventArgs* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CWebView___x_ABI_CWindows__CUI__CXaml__CControls__CWebViewPermissionRequestedEventArgs* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CWebView___x_ABI_CWindows__CUI__CXaml__CControls__CWebViewPermissionRequestedEventArgs* This);
        HRESULT (STDMETHODCALLTYPE* Invoke)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CWebView___x_ABI_CWindows__CUI__CXaml__CControls__CWebViewPermissionRequestedEventArgs* This,
        __x_ABI_CWindows_CUI_CXaml_CControls_CIWebView* sender,
        __x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewPermissionRequestedEventArgs* args);

        END_INTERFACE
    } __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CWebView___x_ABI_CWindows__CUI__CXaml__CControls__CWebViewPermissionRequestedEventArgsVtbl;

    interface __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CWebView___x_ABI_CWindows__CUI__CXaml__CControls__CWebViewPermissionRequestedEventArgs
    {
        CONST_VTBL struct __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CWebView___x_ABI_CWindows__CUI__CXaml__CControls__CWebViewPermissionRequestedEventArgsVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CWebView___x_ABI_CWindows__CUI__CXaml__CControls__CWebViewPermissionRequestedEventArgs_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CWebView___x_ABI_CWindows__CUI__CXaml__CControls__CWebViewSeparateProcessLostEventArgs_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CWebView___x_ABI_CWindows__CUI__CXaml__CControls__CWebViewSeparateProcessLostEventArgs_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CWebView___x_ABI_CWindows__CUI__CXaml__CControls__CWebViewSeparateProcessLostEventArgs __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CWebView___x_ABI_CWindows__CUI__CXaml__CControls__CWebViewSeparateProcessLostEventArgs;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CWebView___x_ABI_CWindows__CUI__CXaml__CControls__CWebViewSeparateProcessLostEventArgs;

    typedef struct __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CWebView___x_ABI_CWindows__CUI__CXaml__CControls__CWebViewSeparateProcessLostEventArgsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CWebView___x_ABI_CWindows__CUI__CXaml__CControls__CWebViewSeparateProcessLostEventArgs* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CWebView___x_ABI_CWindows__CUI__CXaml__CControls__CWebViewSeparateProcessLostEventArgs* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CWebView___x_ABI_CWindows__CUI__CXaml__CControls__CWebViewSeparateProcessLostEventArgs* This);
        HRESULT (STDMETHODCALLTYPE* Invoke)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CWebView___x_ABI_CWindows__CUI__CXaml__CControls__CWebViewSeparateProcessLostEventArgs* This,
        __x_ABI_CWindows_CUI_CXaml_CControls_CIWebView* sender,
        __x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewSeparateProcessLostEventArgs* args);

        END_INTERFACE
    } __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CWebView___x_ABI_CWindows__CUI__CXaml__CControls__CWebViewSeparateProcessLostEventArgsVtbl;

    interface __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CWebView___x_ABI_CWindows__CUI__CXaml__CControls__CWebViewSeparateProcessLostEventArgs
    {
        CONST_VTBL struct __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CWebView___x_ABI_CWindows__CUI__CXaml__CControls__CWebViewSeparateProcessLostEventArgsVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CWebView___x_ABI_CWindows__CUI__CXaml__CControls__CWebViewSeparateProcessLostEventArgs_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CWebView___x_ABI_CWindows__CUI__CXaml__CControls__CWebViewUnsupportedUriSchemeIdentifiedEventArgs_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CWebView___x_ABI_CWindows__CUI__CXaml__CControls__CWebViewUnsupportedUriSchemeIdentifiedEventArgs_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CWebView___x_ABI_CWindows__CUI__CXaml__CControls__CWebViewUnsupportedUriSchemeIdentifiedEventArgs __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CWebView___x_ABI_CWindows__CUI__CXaml__CControls__CWebViewUnsupportedUriSchemeIdentifiedEventArgs;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CWebView___x_ABI_CWindows__CUI__CXaml__CControls__CWebViewUnsupportedUriSchemeIdentifiedEventArgs;

    typedef struct __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CWebView___x_ABI_CWindows__CUI__CXaml__CControls__CWebViewUnsupportedUriSchemeIdentifiedEventArgsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CWebView___x_ABI_CWindows__CUI__CXaml__CControls__CWebViewUnsupportedUriSchemeIdentifiedEventArgs* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CWebView___x_ABI_CWindows__CUI__CXaml__CControls__CWebViewUnsupportedUriSchemeIdentifiedEventArgs* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CWebView___x_ABI_CWindows__CUI__CXaml__CControls__CWebViewUnsupportedUriSchemeIdentifiedEventArgs* This);
        HRESULT (STDMETHODCALLTYPE* Invoke)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CWebView___x_ABI_CWindows__CUI__CXaml__CControls__CWebViewUnsupportedUriSchemeIdentifiedEventArgs* This,
        __x_ABI_CWindows_CUI_CXaml_CControls_CIWebView* sender,
        __x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewUnsupportedUriSchemeIdentifiedEventArgs* args);

        END_INTERFACE
    } __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CWebView___x_ABI_CWindows__CUI__CXaml__CControls__CWebViewUnsupportedUriSchemeIdentifiedEventArgsVtbl;

    interface __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CWebView___x_ABI_CWindows__CUI__CXaml__CControls__CWebViewUnsupportedUriSchemeIdentifiedEventArgs
    {
        CONST_VTBL struct __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CWebView___x_ABI_CWindows__CUI__CXaml__CControls__CWebViewUnsupportedUriSchemeIdentifiedEventArgsVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CWebView___x_ABI_CWindows__CUI__CXaml__CControls__CWebViewUnsupportedUriSchemeIdentifiedEventArgs_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CWebView___x_ABI_CWindows__CUI__CXaml__CControls__CWebViewUnviewableContentIdentifiedEventArgs_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CWebView___x_ABI_CWindows__CUI__CXaml__CControls__CWebViewUnviewableContentIdentifiedEventArgs_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CWebView___x_ABI_CWindows__CUI__CXaml__CControls__CWebViewUnviewableContentIdentifiedEventArgs __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CWebView___x_ABI_CWindows__CUI__CXaml__CControls__CWebViewUnviewableContentIdentifiedEventArgs;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CWebView___x_ABI_CWindows__CUI__CXaml__CControls__CWebViewUnviewableContentIdentifiedEventArgs;

    typedef struct __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CWebView___x_ABI_CWindows__CUI__CXaml__CControls__CWebViewUnviewableContentIdentifiedEventArgsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CWebView___x_ABI_CWindows__CUI__CXaml__CControls__CWebViewUnviewableContentIdentifiedEventArgs* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CWebView___x_ABI_CWindows__CUI__CXaml__CControls__CWebViewUnviewableContentIdentifiedEventArgs* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CWebView___x_ABI_CWindows__CUI__CXaml__CControls__CWebViewUnviewableContentIdentifiedEventArgs* This);
        HRESULT (STDMETHODCALLTYPE* Invoke)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CWebView___x_ABI_CWindows__CUI__CXaml__CControls__CWebViewUnviewableContentIdentifiedEventArgs* This,
        __x_ABI_CWindows_CUI_CXaml_CControls_CIWebView* sender,
        __x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewUnviewableContentIdentifiedEventArgs* args);

        END_INTERFACE
    } __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CWebView___x_ABI_CWindows__CUI__CXaml__CControls__CWebViewUnviewableContentIdentifiedEventArgsVtbl;

    interface __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CWebView___x_ABI_CWindows__CUI__CXaml__CControls__CWebViewUnviewableContentIdentifiedEventArgs
    {
        CONST_VTBL struct __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CWebView___x_ABI_CWindows__CUI__CXaml__CControls__CWebViewUnviewableContentIdentifiedEventArgsVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CWebView___x_ABI_CWindows__CUI__CXaml__CControls__CWebViewUnviewableContentIdentifiedEventArgs_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CWebView___x_ABI_CWindows__CUI__CXaml__CControls__CWebViewWebResourceRequestedEventArgs_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CWebView___x_ABI_CWindows__CUI__CXaml__CControls__CWebViewWebResourceRequestedEventArgs_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CWebView___x_ABI_CWindows__CUI__CXaml__CControls__CWebViewWebResourceRequestedEventArgs __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CWebView___x_ABI_CWindows__CUI__CXaml__CControls__CWebViewWebResourceRequestedEventArgs;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CWebView___x_ABI_CWindows__CUI__CXaml__CControls__CWebViewWebResourceRequestedEventArgs;

    typedef struct __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CWebView___x_ABI_CWindows__CUI__CXaml__CControls__CWebViewWebResourceRequestedEventArgsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CWebView___x_ABI_CWindows__CUI__CXaml__CControls__CWebViewWebResourceRequestedEventArgs* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CWebView___x_ABI_CWindows__CUI__CXaml__CControls__CWebViewWebResourceRequestedEventArgs* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CWebView___x_ABI_CWindows__CUI__CXaml__CControls__CWebViewWebResourceRequestedEventArgs* This);
        HRESULT (STDMETHODCALLTYPE* Invoke)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CWebView___x_ABI_CWindows__CUI__CXaml__CControls__CWebViewWebResourceRequestedEventArgs* This,
        __x_ABI_CWindows_CUI_CXaml_CControls_CIWebView* sender,
        __x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewWebResourceRequestedEventArgs* args);

        END_INTERFACE
    } __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CWebView___x_ABI_CWindows__CUI__CXaml__CControls__CWebViewWebResourceRequestedEventArgsVtbl;

    interface __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CWebView___x_ABI_CWindows__CUI__CXaml__CControls__CWebViewWebResourceRequestedEventArgs
    {
        CONST_VTBL struct __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CWebView___x_ABI_CWindows__CUI__CXaml__CControls__CWebViewWebResourceRequestedEventArgsVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CWebView___x_ABI_CWindows__CUI__CXaml__CControls__CWebViewWebResourceRequestedEventArgs_INTERFACE_DEFINED__
    
#ifndef ____x_ABI_CWindows_CApplicationModel_CContacts_CIContact_FWD_DEFINED__
#define ____x_ABI_CWindows_CApplicationModel_CContacts_CIContact_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CApplicationModel_CContacts_CIContact __x_ABI_CWindows_CApplicationModel_CContacts_CIContact;

#endif // ____x_ABI_CWindows_CApplicationModel_CContacts_CIContact_FWD_DEFINED__

typedef enum __x_ABI_CWindows_CApplicationModel_CDataTransfer_CDataPackageOperation __x_ABI_CWindows_CApplicationModel_CDataTransfer_CDataPackageOperation;

#ifndef ____x_ABI_CWindows_CApplicationModel_CSearch_CILocalContentSuggestionSettings_FWD_DEFINED__
#define ____x_ABI_CWindows_CApplicationModel_CSearch_CILocalContentSuggestionSettings_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CApplicationModel_CSearch_CILocalContentSuggestionSettings __x_ABI_CWindows_CApplicationModel_CSearch_CILocalContentSuggestionSettings;

#endif // ____x_ABI_CWindows_CApplicationModel_CSearch_CILocalContentSuggestionSettings_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CApplicationModel_CSearch_CISearchQueryLinguisticDetails_FWD_DEFINED__
#define ____x_ABI_CWindows_CApplicationModel_CSearch_CISearchQueryLinguisticDetails_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CApplicationModel_CSearch_CISearchQueryLinguisticDetails __x_ABI_CWindows_CApplicationModel_CSearch_CISearchQueryLinguisticDetails;

#endif // ____x_ABI_CWindows_CApplicationModel_CSearch_CISearchQueryLinguisticDetails_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CApplicationModel_CSearch_CISearchSuggestionsRequest_FWD_DEFINED__
#define ____x_ABI_CWindows_CApplicationModel_CSearch_CISearchSuggestionsRequest_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CApplicationModel_CSearch_CISearchSuggestionsRequest __x_ABI_CWindows_CApplicationModel_CSearch_CISearchSuggestionsRequest;

#endif // ____x_ABI_CWindows_CApplicationModel_CSearch_CISearchSuggestionsRequest_FWD_DEFINED__

typedef enum __x_ABI_CWindows_CFoundation_CAsyncStatus __x_ABI_CWindows_CFoundation_CAsyncStatus;

#ifndef ____x_ABI_CWindows_CFoundation_CCollections_CIPropertySet_FWD_DEFINED__
#define ____x_ABI_CWindows_CFoundation_CCollections_CIPropertySet_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CFoundation_CCollections_CIPropertySet __x_ABI_CWindows_CFoundation_CCollections_CIPropertySet;

#endif // ____x_ABI_CWindows_CFoundation_CCollections_CIPropertySet_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CFoundation_CIDeferral_FWD_DEFINED__
#define ____x_ABI_CWindows_CFoundation_CIDeferral_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CFoundation_CIDeferral __x_ABI_CWindows_CFoundation_CIDeferral;

#endif // ____x_ABI_CWindows_CFoundation_CIDeferral_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CFoundation_CIAsyncAction_FWD_DEFINED__
#define ____x_ABI_CWindows_CFoundation_CIAsyncAction_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CFoundation_CIAsyncAction __x_ABI_CWindows_CFoundation_CIAsyncAction;

#endif // ____x_ABI_CWindows_CFoundation_CIAsyncAction_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CFoundation_CIAsyncInfo_FWD_DEFINED__
#define ____x_ABI_CWindows_CFoundation_CIAsyncInfo_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CFoundation_CIAsyncInfo __x_ABI_CWindows_CFoundation_CIAsyncInfo;

#endif // ____x_ABI_CWindows_CFoundation_CIAsyncInfo_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CFoundation_CIPropertyValue_FWD_DEFINED__
#define ____x_ABI_CWindows_CFoundation_CIPropertyValue_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CFoundation_CIPropertyValue __x_ABI_CWindows_CFoundation_CIPropertyValue;

#endif // ____x_ABI_CWindows_CFoundation_CIPropertyValue_FWD_DEFINED__

typedef struct __x_ABI_CWindows_CFoundation_CPoint __x_ABI_CWindows_CFoundation_CPoint;

typedef enum __x_ABI_CWindows_CGlobalization_CDayOfWeek __x_ABI_CWindows_CGlobalization_CDayOfWeek;

#ifndef ____x_ABI_CWindows_CMedia_CCapture_CIMediaCapture_FWD_DEFINED__
#define ____x_ABI_CWindows_CMedia_CCapture_CIMediaCapture_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CMedia_CCapture_CIMediaCapture __x_ABI_CWindows_CMedia_CCapture_CIMediaCapture;

#endif // ____x_ABI_CWindows_CMedia_CCapture_CIMediaCapture_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CMedia_CCasting_CICastingSource_FWD_DEFINED__
#define ____x_ABI_CWindows_CMedia_CCasting_CICastingSource_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CMedia_CCasting_CICastingSource __x_ABI_CWindows_CMedia_CCasting_CICastingSource;

#endif // ____x_ABI_CWindows_CMedia_CCasting_CICastingSource_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CMedia_CCore_CIMediaSource_FWD_DEFINED__
#define ____x_ABI_CWindows_CMedia_CCore_CIMediaSource_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CMedia_CCore_CIMediaSource __x_ABI_CWindows_CMedia_CCore_CIMediaSource;

#endif // ____x_ABI_CWindows_CMedia_CCore_CIMediaSource_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CMedia_CPlayTo_CIPlayToSource_FWD_DEFINED__
#define ____x_ABI_CWindows_CMedia_CPlayTo_CIPlayToSource_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CMedia_CPlayTo_CIPlayToSource __x_ABI_CWindows_CMedia_CPlayTo_CIPlayToSource;

#endif // ____x_ABI_CWindows_CMedia_CPlayTo_CIPlayToSource_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CMedia_CPlayback_CIMediaPlaybackSource_FWD_DEFINED__
#define ____x_ABI_CWindows_CMedia_CPlayback_CIMediaPlaybackSource_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CMedia_CPlayback_CIMediaPlaybackSource __x_ABI_CWindows_CMedia_CPlayback_CIMediaPlaybackSource;

#endif // ____x_ABI_CWindows_CMedia_CPlayback_CIMediaPlaybackSource_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CMedia_CPlayback_CIMediaPlayer_FWD_DEFINED__
#define ____x_ABI_CWindows_CMedia_CPlayback_CIMediaPlayer_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CMedia_CPlayback_CIMediaPlayer __x_ABI_CWindows_CMedia_CPlayback_CIMediaPlayer;

#endif // ____x_ABI_CWindows_CMedia_CPlayback_CIMediaPlayer_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CMedia_CProtection_CIMediaProtectionManager_FWD_DEFINED__
#define ____x_ABI_CWindows_CMedia_CProtection_CIMediaProtectionManager_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CMedia_CProtection_CIMediaProtectionManager __x_ABI_CWindows_CMedia_CProtection_CIMediaProtectionManager;

#endif // ____x_ABI_CWindows_CMedia_CProtection_CIMediaProtectionManager_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CStorage_CStreams_CIRandomAccessStream_FWD_DEFINED__
#define ____x_ABI_CWindows_CStorage_CStreams_CIRandomAccessStream_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CStorage_CStreams_CIRandomAccessStream __x_ABI_CWindows_CStorage_CStreams_CIRandomAccessStream;

#endif // ____x_ABI_CWindows_CStorage_CStreams_CIRandomAccessStream_FWD_DEFINED__

typedef enum __x_ABI_CWindows_CSystem_CVirtualKeyModifiers __x_ABI_CWindows_CSystem_CVirtualKeyModifiers;

#ifndef ____x_ABI_CWindows_CUI_CComposition_CICompositionBrush_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CComposition_CICompositionBrush_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CComposition_CICompositionBrush __x_ABI_CWindows_CUI_CComposition_CICompositionBrush;

#endif // ____x_ABI_CWindows_CUI_CComposition_CICompositionBrush_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CComposition_CIAnimationObject_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CComposition_CIAnimationObject_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CComposition_CIAnimationObject __x_ABI_CWindows_CUI_CComposition_CIAnimationObject;

#endif // ____x_ABI_CWindows_CUI_CComposition_CIAnimationObject_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CComposition_CIVisualElement_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CComposition_CIVisualElement_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CComposition_CIVisualElement __x_ABI_CWindows_CUI_CComposition_CIVisualElement;

#endif // ____x_ABI_CWindows_CUI_CComposition_CIVisualElement_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CCore_CICoreInputSourceBase_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CCore_CICoreInputSourceBase_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CCore_CICoreInputSourceBase __x_ABI_CWindows_CUI_CCore_CICoreInputSourceBase;

#endif // ____x_ABI_CWindows_CUI_CCore_CICoreInputSourceBase_FWD_DEFINED__

typedef enum __x_ABI_CWindows_CUI_CCore_CCoreInputDeviceTypes __x_ABI_CWindows_CUI_CCore_CCoreInputDeviceTypes;

#ifndef ____x_ABI_CWindows_CUI_CInput_CInking_CIInkDrawingAttributes_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CInput_CInking_CIInkDrawingAttributes_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CInput_CInking_CIInkDrawingAttributes __x_ABI_CWindows_CUI_CInput_CInking_CIInkDrawingAttributes;

#endif // ____x_ABI_CWindows_CUI_CInput_CInking_CIInkDrawingAttributes_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CInput_CInking_CIInkPresenter_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CInput_CInking_CIInkPresenter_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CInput_CInking_CIInkPresenter __x_ABI_CWindows_CUI_CInput_CInking_CIInkPresenter;

#endif // ____x_ABI_CWindows_CUI_CInput_CInking_CIInkPresenter_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CInput_CInking_CIInkPresenterProtractor_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CInput_CInking_CIInkPresenterProtractor_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CInput_CInking_CIInkPresenterProtractor __x_ABI_CWindows_CUI_CInput_CInking_CIInkPresenterProtractor;

#endif // ____x_ABI_CWindows_CUI_CInput_CInking_CIInkPresenterProtractor_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CInput_CInking_CIInkPresenterRuler_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CInput_CInking_CIInkPresenterRuler_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CInput_CInking_CIInkPresenterRuler __x_ABI_CWindows_CUI_CInput_CInking_CIInkPresenterRuler;

#endif // ____x_ABI_CWindows_CUI_CInput_CInking_CIInkPresenterRuler_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CText_CIContentLinkInfo_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CText_CIContentLinkInfo_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CText_CIContentLinkInfo __x_ABI_CWindows_CUI_CText_CIContentLinkInfo;

#endif // ____x_ABI_CWindows_CUI_CText_CIContentLinkInfo_FWD_DEFINED__

typedef enum __x_ABI_CWindows_CUI_CText_CFontStretch __x_ABI_CWindows_CUI_CText_CFontStretch;

typedef enum __x_ABI_CWindows_CUI_CText_CFontStyle __x_ABI_CWindows_CUI_CText_CFontStyle;

typedef struct __x_ABI_CWindows_CUI_CText_CFontWeight __x_ABI_CWindows_CUI_CText_CFontWeight;

#ifndef ____x_ABI_CWindows_CUI_CText_CITextDocument_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CText_CITextDocument_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CText_CITextDocument __x_ABI_CWindows_CUI_CText_CITextDocument;

#endif // ____x_ABI_CWindows_CUI_CText_CITextDocument_FWD_DEFINED__

typedef enum __x_ABI_CWindows_CUI_CText_CTextDecorations __x_ABI_CWindows_CUI_CText_CTextDecorations;

#ifndef ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAutomationPeer_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAutomationPeer_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAutomationPeer __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAutomationPeer;

#endif // ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAutomationPeer_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAutomationPeer2_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAutomationPeer2_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAutomationPeer2 __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAutomationPeer2;

#endif // ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAutomationPeer2_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAutomationPeer3_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAutomationPeer3_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAutomationPeer3 __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAutomationPeer3;

#endif // ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAutomationPeer3_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAutomationPeer4_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAutomationPeer4_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAutomationPeer4 __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAutomationPeer4;

#endif // ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAutomationPeer4_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAutomationPeer5_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAutomationPeer5_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAutomationPeer5 __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAutomationPeer5;

#endif // ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAutomationPeer5_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAutomationPeer6_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAutomationPeer6_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAutomationPeer6 __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAutomationPeer6;

#endif // ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAutomationPeer6_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAutomationPeer7_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAutomationPeer7_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAutomationPeer7 __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAutomationPeer7;

#endif // ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAutomationPeer7_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAutomationPeer8_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAutomationPeer8_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAutomationPeer8 __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAutomationPeer8;

#endif // ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAutomationPeer8_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAutomationPeer9_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAutomationPeer9_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAutomationPeer9 __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAutomationPeer9;

#endif // ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAutomationPeer9_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAutomationPeerOverrides_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAutomationPeerOverrides_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAutomationPeerOverrides __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAutomationPeerOverrides;

#endif // ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAutomationPeerOverrides_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAutomationPeerOverrides2_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAutomationPeerOverrides2_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAutomationPeerOverrides2 __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAutomationPeerOverrides2;

#endif // ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAutomationPeerOverrides2_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAutomationPeerOverrides3_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAutomationPeerOverrides3_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAutomationPeerOverrides3 __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAutomationPeerOverrides3;

#endif // ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAutomationPeerOverrides3_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAutomationPeerOverrides4_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAutomationPeerOverrides4_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAutomationPeerOverrides4 __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAutomationPeerOverrides4;

#endif // ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAutomationPeerOverrides4_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAutomationPeerOverrides5_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAutomationPeerOverrides5_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAutomationPeerOverrides5 __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAutomationPeerOverrides5;

#endif // ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAutomationPeerOverrides5_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAutomationPeerOverrides6_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAutomationPeerOverrides6_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAutomationPeerOverrides6 __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAutomationPeerOverrides6;

#endif // ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAutomationPeerOverrides6_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAutomationPeerOverrides8_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAutomationPeerOverrides8_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAutomationPeerOverrides8 __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAutomationPeerOverrides8;

#endif // ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAutomationPeerOverrides8_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAutomationPeerOverrides9_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAutomationPeerOverrides9_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAutomationPeerOverrides9 __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAutomationPeerOverrides9;

#endif // ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAutomationPeerOverrides9_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAutomationPeerProtected_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAutomationPeerProtected_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAutomationPeerProtected __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAutomationPeerProtected;

#endif // ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAutomationPeerProtected_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIButtonAutomationPeer_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIButtonAutomationPeer_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIButtonAutomationPeer __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIButtonAutomationPeer;

#endif // ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIButtonAutomationPeer_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIButtonBaseAutomationPeer_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIButtonBaseAutomationPeer_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIButtonBaseAutomationPeer __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIButtonBaseAutomationPeer;

#endif // ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIButtonBaseAutomationPeer_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIFrameworkElementAutomationPeer_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIFrameworkElementAutomationPeer_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIFrameworkElementAutomationPeer __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIFrameworkElementAutomationPeer;

#endif // ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIFrameworkElementAutomationPeer_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CAutomation_CProvider_CIExpandCollapseProvider_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CAutomation_CProvider_CIExpandCollapseProvider_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CAutomation_CProvider_CIExpandCollapseProvider __x_ABI_CWindows_CUI_CXaml_CAutomation_CProvider_CIExpandCollapseProvider;

#endif // ____x_ABI_CWindows_CUI_CXaml_CAutomation_CProvider_CIExpandCollapseProvider_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CAutomation_CProvider_CIInvokeProvider_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CAutomation_CProvider_CIInvokeProvider_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CAutomation_CProvider_CIInvokeProvider __x_ABI_CWindows_CUI_CXaml_CAutomation_CProvider_CIInvokeProvider;

#endif // ____x_ABI_CWindows_CUI_CXaml_CAutomation_CProvider_CIInvokeProvider_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CAutomation_CProvider_CIToggleProvider_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CAutomation_CProvider_CIToggleProvider_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CAutomation_CProvider_CIToggleProvider __x_ABI_CWindows_CUI_CXaml_CAutomation_CProvider_CIToggleProvider;

#endif // ____x_ABI_CWindows_CUI_CXaml_CAutomation_CProvider_CIToggleProvider_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CIBrushTransition_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CIBrushTransition_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CIBrushTransition __x_ABI_CWindows_CUI_CXaml_CIBrushTransition;

#endif // ____x_ABI_CWindows_CUI_CXaml_CIBrushTransition_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CPrimitives_CIAppBarButtonTemplateSettings_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CPrimitives_CIAppBarButtonTemplateSettings_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CPrimitives_CIAppBarButtonTemplateSettings __x_ABI_CWindows_CUI_CXaml_CControls_CPrimitives_CIAppBarButtonTemplateSettings;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CPrimitives_CIAppBarButtonTemplateSettings_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CPrimitives_CIAppBarTemplateSettings_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CPrimitives_CIAppBarTemplateSettings_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CPrimitives_CIAppBarTemplateSettings __x_ABI_CWindows_CUI_CXaml_CControls_CPrimitives_CIAppBarTemplateSettings;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CPrimitives_CIAppBarTemplateSettings_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CPrimitives_CIAppBarToggleButtonTemplateSettings_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CPrimitives_CIAppBarToggleButtonTemplateSettings_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CPrimitives_CIAppBarToggleButtonTemplateSettings __x_ABI_CWindows_CUI_CXaml_CControls_CPrimitives_CIAppBarToggleButtonTemplateSettings;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CPrimitives_CIAppBarToggleButtonTemplateSettings_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CPrimitives_CICalendarViewTemplateSettings_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CPrimitives_CICalendarViewTemplateSettings_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CPrimitives_CICalendarViewTemplateSettings __x_ABI_CWindows_CUI_CXaml_CControls_CPrimitives_CICalendarViewTemplateSettings;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CPrimitives_CICalendarViewTemplateSettings_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CPrimitives_CIComboBoxTemplateSettings_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CPrimitives_CIComboBoxTemplateSettings_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CPrimitives_CIComboBoxTemplateSettings __x_ABI_CWindows_CUI_CXaml_CControls_CPrimitives_CIComboBoxTemplateSettings;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CPrimitives_CIComboBoxTemplateSettings_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CPrimitives_CICommandBarTemplateSettings_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CPrimitives_CICommandBarTemplateSettings_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CPrimitives_CICommandBarTemplateSettings __x_ABI_CWindows_CUI_CXaml_CControls_CPrimitives_CICommandBarTemplateSettings;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CPrimitives_CICommandBarTemplateSettings_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CPrimitives_CIFlyoutBase_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CPrimitives_CIFlyoutBase_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CPrimitives_CIFlyoutBase __x_ABI_CWindows_CUI_CXaml_CControls_CPrimitives_CIFlyoutBase;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CPrimitives_CIFlyoutBase_FWD_DEFINED__

typedef enum __x_ABI_CWindows_CUI_CXaml_CControls_CPrimitives_CGeneratorDirection __x_ABI_CWindows_CUI_CXaml_CControls_CPrimitives_CGeneratorDirection;

typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CPrimitives_CGeneratorPosition __x_ABI_CWindows_CUI_CXaml_CControls_CPrimitives_CGeneratorPosition;

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CPrimitives_CIGridViewItemTemplateSettings_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CPrimitives_CIGridViewItemTemplateSettings_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CPrimitives_CIGridViewItemTemplateSettings __x_ABI_CWindows_CUI_CXaml_CControls_CPrimitives_CIGridViewItemTemplateSettings;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CPrimitives_CIGridViewItemTemplateSettings_FWD_DEFINED__

typedef enum __x_ABI_CWindows_CUI_CXaml_CControls_CPrimitives_CGroupHeaderPlacement __x_ABI_CWindows_CUI_CXaml_CControls_CPrimitives_CGroupHeaderPlacement;

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CPrimitives_CIButtonBase_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CPrimitives_CIButtonBase_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CPrimitives_CIButtonBase __x_ABI_CWindows_CUI_CXaml_CControls_CPrimitives_CIButtonBase;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CPrimitives_CIButtonBase_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CPrimitives_CIFlyoutBase2_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CPrimitives_CIFlyoutBase2_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CPrimitives_CIFlyoutBase2 __x_ABI_CWindows_CUI_CXaml_CControls_CPrimitives_CIFlyoutBase2;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CPrimitives_CIFlyoutBase2_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CPrimitives_CIFlyoutBase3_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CPrimitives_CIFlyoutBase3_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CPrimitives_CIFlyoutBase3 __x_ABI_CWindows_CUI_CXaml_CControls_CPrimitives_CIFlyoutBase3;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CPrimitives_CIFlyoutBase3_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CPrimitives_CIFlyoutBase4_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CPrimitives_CIFlyoutBase4_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CPrimitives_CIFlyoutBase4 __x_ABI_CWindows_CUI_CXaml_CControls_CPrimitives_CIFlyoutBase4;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CPrimitives_CIFlyoutBase4_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CPrimitives_CIFlyoutBase5_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CPrimitives_CIFlyoutBase5_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CPrimitives_CIFlyoutBase5 __x_ABI_CWindows_CUI_CXaml_CControls_CPrimitives_CIFlyoutBase5;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CPrimitives_CIFlyoutBase5_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CPrimitives_CIFlyoutBase6_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CPrimitives_CIFlyoutBase6_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CPrimitives_CIFlyoutBase6 __x_ABI_CWindows_CUI_CXaml_CControls_CPrimitives_CIFlyoutBase6;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CPrimitives_CIFlyoutBase6_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CPrimitives_CIFlyoutBaseOverrides_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CPrimitives_CIFlyoutBaseOverrides_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CPrimitives_CIFlyoutBaseOverrides __x_ABI_CWindows_CUI_CXaml_CControls_CPrimitives_CIFlyoutBaseOverrides;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CPrimitives_CIFlyoutBaseOverrides_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CPrimitives_CIFlyoutBaseOverrides4_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CPrimitives_CIFlyoutBaseOverrides4_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CPrimitives_CIFlyoutBaseOverrides4 __x_ABI_CWindows_CUI_CXaml_CControls_CPrimitives_CIFlyoutBaseOverrides4;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CPrimitives_CIFlyoutBaseOverrides4_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CPrimitives_CIOrientedVirtualizingPanel_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CPrimitives_CIOrientedVirtualizingPanel_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CPrimitives_CIOrientedVirtualizingPanel __x_ABI_CWindows_CUI_CXaml_CControls_CPrimitives_CIOrientedVirtualizingPanel;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CPrimitives_CIOrientedVirtualizingPanel_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CPrimitives_CIPickerFlyoutBase_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CPrimitives_CIPickerFlyoutBase_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CPrimitives_CIPickerFlyoutBase __x_ABI_CWindows_CUI_CXaml_CControls_CPrimitives_CIPickerFlyoutBase;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CPrimitives_CIPickerFlyoutBase_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CPrimitives_CIPickerFlyoutBaseOverrides_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CPrimitives_CIPickerFlyoutBaseOverrides_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CPrimitives_CIPickerFlyoutBaseOverrides __x_ABI_CWindows_CUI_CXaml_CControls_CPrimitives_CIPickerFlyoutBaseOverrides;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CPrimitives_CIPickerFlyoutBaseOverrides_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CPrimitives_CIRangeBase_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CPrimitives_CIRangeBase_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CPrimitives_CIRangeBase __x_ABI_CWindows_CUI_CXaml_CControls_CPrimitives_CIRangeBase;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CPrimitives_CIRangeBase_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CPrimitives_CIRangeBaseOverrides_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CPrimitives_CIRangeBaseOverrides_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CPrimitives_CIRangeBaseOverrides __x_ABI_CWindows_CUI_CXaml_CControls_CPrimitives_CIRangeBaseOverrides;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CPrimitives_CIRangeBaseOverrides_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CPrimitives_CIScrollSnapPointsInfo_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CPrimitives_CIScrollSnapPointsInfo_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CPrimitives_CIScrollSnapPointsInfo __x_ABI_CWindows_CUI_CXaml_CControls_CPrimitives_CIScrollSnapPointsInfo;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CPrimitives_CIScrollSnapPointsInfo_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CPrimitives_CISelector_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CPrimitives_CISelector_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CPrimitives_CISelector __x_ABI_CWindows_CUI_CXaml_CControls_CPrimitives_CISelector;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CPrimitives_CISelector_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CPrimitives_CISelectorItem_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CPrimitives_CISelectorItem_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CPrimitives_CISelectorItem __x_ABI_CWindows_CUI_CXaml_CControls_CPrimitives_CISelectorItem;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CPrimitives_CISelectorItem_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CPrimitives_CIToggleButton_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CPrimitives_CIToggleButton_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CPrimitives_CIToggleButton __x_ABI_CWindows_CUI_CXaml_CControls_CPrimitives_CIToggleButton;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CPrimitives_CIToggleButton_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CPrimitives_CIToggleButtonOverrides_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CPrimitives_CIToggleButtonOverrides_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CPrimitives_CIToggleButtonOverrides __x_ABI_CWindows_CUI_CXaml_CControls_CPrimitives_CIToggleButtonOverrides;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CPrimitives_CIToggleButtonOverrides_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CPrimitives_CIItemsChangedEventArgs_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CPrimitives_CIItemsChangedEventArgs_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CPrimitives_CIItemsChangedEventArgs __x_ABI_CWindows_CUI_CXaml_CControls_CPrimitives_CIItemsChangedEventArgs;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CPrimitives_CIItemsChangedEventArgs_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CPrimitives_CIItemsChangedEventHandler_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CPrimitives_CIItemsChangedEventHandler_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CPrimitives_CIItemsChangedEventHandler __x_ABI_CWindows_CUI_CXaml_CControls_CPrimitives_CIItemsChangedEventHandler;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CPrimitives_CIItemsChangedEventHandler_FWD_DEFINED__

    #ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CPrimitives_CIListViewItemTemplateSettings_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CPrimitives_CIListViewItemTemplateSettings_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CPrimitives_CIListViewItemTemplateSettings __x_ABI_CWindows_CUI_CXaml_CControls_CPrimitives_CIListViewItemTemplateSettings;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CPrimitives_CIListViewItemTemplateSettings_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CPrimitives_CIMenuFlyoutItemTemplateSettings_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CPrimitives_CIMenuFlyoutItemTemplateSettings_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CPrimitives_CIMenuFlyoutItemTemplateSettings __x_ABI_CWindows_CUI_CXaml_CControls_CPrimitives_CIMenuFlyoutItemTemplateSettings;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CPrimitives_CIMenuFlyoutItemTemplateSettings_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CPrimitives_CIMenuFlyoutPresenterTemplateSettings_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CPrimitives_CIMenuFlyoutPresenterTemplateSettings_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CPrimitives_CIMenuFlyoutPresenterTemplateSettings __x_ABI_CWindows_CUI_CXaml_CControls_CPrimitives_CIMenuFlyoutPresenterTemplateSettings;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CPrimitives_CIMenuFlyoutPresenterTemplateSettings_FWD_DEFINED__

typedef enum __x_ABI_CWindows_CUI_CXaml_CControls_CPrimitives_CPlacementMode __x_ABI_CWindows_CUI_CXaml_CControls_CPrimitives_CPlacementMode;

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CPrimitives_CIProgressBarTemplateSettings_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CPrimitives_CIProgressBarTemplateSettings_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CPrimitives_CIProgressBarTemplateSettings __x_ABI_CWindows_CUI_CXaml_CControls_CPrimitives_CIProgressBarTemplateSettings;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CPrimitives_CIProgressBarTemplateSettings_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CPrimitives_CIProgressRingTemplateSettings_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CPrimitives_CIProgressRingTemplateSettings_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CPrimitives_CIProgressRingTemplateSettings __x_ABI_CWindows_CUI_CXaml_CControls_CPrimitives_CIProgressRingTemplateSettings;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CPrimitives_CIProgressRingTemplateSettings_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CPrimitives_CISettingsFlyoutTemplateSettings_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CPrimitives_CISettingsFlyoutTemplateSettings_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CPrimitives_CISettingsFlyoutTemplateSettings __x_ABI_CWindows_CUI_CXaml_CControls_CPrimitives_CISettingsFlyoutTemplateSettings;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CPrimitives_CISettingsFlyoutTemplateSettings_FWD_DEFINED__

typedef enum __x_ABI_CWindows_CUI_CXaml_CControls_CPrimitives_CSliderSnapsTo __x_ABI_CWindows_CUI_CXaml_CControls_CPrimitives_CSliderSnapsTo;

typedef enum __x_ABI_CWindows_CUI_CXaml_CControls_CPrimitives_CSnapPointsAlignment __x_ABI_CWindows_CUI_CXaml_CControls_CPrimitives_CSnapPointsAlignment;

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CPrimitives_CISplitViewTemplateSettings_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CPrimitives_CISplitViewTemplateSettings_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CPrimitives_CISplitViewTemplateSettings __x_ABI_CWindows_CUI_CXaml_CControls_CPrimitives_CISplitViewTemplateSettings;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CPrimitives_CISplitViewTemplateSettings_FWD_DEFINED__

typedef enum __x_ABI_CWindows_CUI_CXaml_CControls_CPrimitives_CTickPlacement __x_ABI_CWindows_CUI_CXaml_CControls_CPrimitives_CTickPlacement;

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CPrimitives_CIToggleSwitchTemplateSettings_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CPrimitives_CIToggleSwitchTemplateSettings_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CPrimitives_CIToggleSwitchTemplateSettings __x_ABI_CWindows_CUI_CXaml_CControls_CPrimitives_CIToggleSwitchTemplateSettings;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CPrimitives_CIToggleSwitchTemplateSettings_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CPrimitives_CIToolTipTemplateSettings_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CPrimitives_CIToolTipTemplateSettings_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CPrimitives_CIToolTipTemplateSettings __x_ABI_CWindows_CUI_CXaml_CControls_CPrimitives_CIToolTipTemplateSettings;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CPrimitives_CIToolTipTemplateSettings_FWD_DEFINED__

typedef struct __x_ABI_CWindows_CUI_CXaml_CCornerRadius __x_ABI_CWindows_CUI_CXaml_CCornerRadius;

#ifndef ____x_ABI_CWindows_CUI_CXaml_CData_CICustomPropertyProvider_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CData_CICustomPropertyProvider_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CData_CICustomPropertyProvider __x_ABI_CWindows_CUI_CXaml_CData_CICustomPropertyProvider;

#endif // ____x_ABI_CWindows_CUI_CXaml_CData_CICustomPropertyProvider_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CData_CINotifyPropertyChanged_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CData_CINotifyPropertyChanged_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CData_CINotifyPropertyChanged __x_ABI_CWindows_CUI_CXaml_CData_CINotifyPropertyChanged;

#endif // ____x_ABI_CWindows_CUI_CXaml_CData_CINotifyPropertyChanged_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CData_CIValueConverter_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CData_CIValueConverter_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CData_CIValueConverter __x_ABI_CWindows_CUI_CXaml_CData_CIValueConverter;

#endif // ____x_ABI_CWindows_CUI_CXaml_CData_CIValueConverter_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CIDataTemplate_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CIDataTemplate_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CIDataTemplate __x_ABI_CWindows_CUI_CXaml_CIDataTemplate;

#endif // ____x_ABI_CWindows_CUI_CXaml_CIDataTemplate_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CIDependencyObject_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CIDependencyObject_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CIDependencyObject __x_ABI_CWindows_CUI_CXaml_CIDependencyObject;

#endif // ____x_ABI_CWindows_CUI_CXaml_CIDependencyObject_FWD_DEFINED__

#if !defined(____x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CXaml__CDependencyObject_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CXaml__CDependencyObject_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CXaml__CDependencyObject __x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CXaml__CDependencyObject;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CXaml__CDependencyObject;

    typedef struct __x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CXaml__CDependencyObjectVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CXaml__CDependencyObject* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CXaml__CDependencyObject* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CXaml__CDependencyObject* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CXaml__CDependencyObject* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CXaml__CDependencyObject* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CXaml__CDependencyObject* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Current)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CXaml__CDependencyObject* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyObject** result);
    HRESULT (STDMETHODCALLTYPE* get_HasCurrent)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CXaml__CDependencyObject* This,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* MoveNext)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CXaml__CDependencyObject* This,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CXaml__CDependencyObject* This,
        UINT32 itemsLength,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyObject** items,
        UINT32* result);

        END_INTERFACE
    } __x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CXaml__CDependencyObjectVtbl;

    interface __x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CXaml__CDependencyObject
    {
        CONST_VTBL struct __x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CXaml__CDependencyObjectVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CXaml__CDependencyObject_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIIterable_1___x_ABI_CWindows__CUI__CXaml__CDependencyObject_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIIterable_1___x_ABI_CWindows__CUI__CXaml__CDependencyObject_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIIterable_1___x_ABI_CWindows__CUI__CXaml__CDependencyObject __x_ABI_C__FIIterable_1___x_ABI_CWindows__CUI__CXaml__CDependencyObject;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIIterable_1___x_ABI_CWindows__CUI__CXaml__CDependencyObject;

    typedef struct __x_ABI_C__FIIterable_1___x_ABI_CWindows__CUI__CXaml__CDependencyObjectVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CUI__CXaml__CDependencyObject* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CUI__CXaml__CDependencyObject* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CUI__CXaml__CDependencyObject* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CUI__CXaml__CDependencyObject* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CUI__CXaml__CDependencyObject* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CUI__CXaml__CDependencyObject* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* First)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CUI__CXaml__CDependencyObject* This,
        __x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CXaml__CDependencyObject** result);

        END_INTERFACE
    } __x_ABI_C__FIIterable_1___x_ABI_CWindows__CUI__CXaml__CDependencyObjectVtbl;

    interface __x_ABI_C__FIIterable_1___x_ABI_CWindows__CUI__CXaml__CDependencyObject
    {
        CONST_VTBL struct __x_ABI_C__FIIterable_1___x_ABI_CWindows__CUI__CXaml__CDependencyObjectVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIIterable_1___x_ABI_CWindows__CUI__CXaml__CDependencyObject_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CXaml__CDependencyObject_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CXaml__CDependencyObject_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CXaml__CDependencyObject __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CXaml__CDependencyObject;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CXaml__CDependencyObject;

    typedef struct __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CXaml__CDependencyObjectVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CXaml__CDependencyObject* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CXaml__CDependencyObject* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CXaml__CDependencyObject* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CXaml__CDependencyObject* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CXaml__CDependencyObject* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CXaml__CDependencyObject* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* GetAt)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CXaml__CDependencyObject* This,
        UINT32 index,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyObject** result);
    HRESULT (STDMETHODCALLTYPE* get_Size)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CXaml__CDependencyObject* This,
        UINT32* result);
    HRESULT (STDMETHODCALLTYPE* IndexOf)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CXaml__CDependencyObject* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyObject* value,
        UINT32* index,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CXaml__CDependencyObject* This,
        UINT32 startIndex,
        UINT32 itemsLength,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyObject** items,
        UINT32* result);

        END_INTERFACE
    } __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CXaml__CDependencyObjectVtbl;

    interface __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CXaml__CDependencyObject
    {
        CONST_VTBL struct __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CXaml__CDependencyObjectVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CXaml__CDependencyObject_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CXaml__CDependencyObject_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CXaml__CDependencyObject_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CXaml__CDependencyObject __x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CXaml__CDependencyObject;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CXaml__CDependencyObject;

    typedef struct __x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CXaml__CDependencyObjectVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CXaml__CDependencyObject* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CXaml__CDependencyObject* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CXaml__CDependencyObject* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CXaml__CDependencyObject* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CXaml__CDependencyObject* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CXaml__CDependencyObject* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* GetAt)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CXaml__CDependencyObject* This,
        UINT32 index,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyObject** result);
    HRESULT (STDMETHODCALLTYPE* get_Size)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CXaml__CDependencyObject* This,
        UINT32* result);
    HRESULT (STDMETHODCALLTYPE* GetView)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CXaml__CDependencyObject* This,
        __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CXaml__CDependencyObject** result);
    HRESULT (STDMETHODCALLTYPE* IndexOf)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CXaml__CDependencyObject* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyObject* value,
        UINT32* index,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* SetAt)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CXaml__CDependencyObject* This,
        UINT32 index,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyObject* value);
    HRESULT (STDMETHODCALLTYPE* InsertAt)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CXaml__CDependencyObject* This,
        UINT32 index,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyObject* value);
    HRESULT (STDMETHODCALLTYPE* RemoveAt)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CXaml__CDependencyObject* This,
        UINT32 index);
    HRESULT (STDMETHODCALLTYPE* Append)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CXaml__CDependencyObject* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyObject* value);
    HRESULT (STDMETHODCALLTYPE* RemoveAtEnd)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CXaml__CDependencyObject* This);
    HRESULT (STDMETHODCALLTYPE* Clear)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CXaml__CDependencyObject* This);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CXaml__CDependencyObject* This,
        UINT32 startIndex,
        UINT32 itemsLength,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyObject** items,
        UINT32* result);
    HRESULT (STDMETHODCALLTYPE* ReplaceAll)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CXaml__CDependencyObject* This,
        UINT32 itemsLength,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyObject** items);

        END_INTERFACE
    } __x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CXaml__CDependencyObjectVtbl;

    interface __x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CXaml__CDependencyObject
    {
        CONST_VTBL struct __x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CXaml__CDependencyObjectVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CXaml__CDependencyObject_INTERFACE_DEFINED__
    
typedef interface __x_ABI_C__FIObservableVector_1___x_ABI_CWindows__CUI__CXaml__CDependencyObject __x_ABI_C__FIObservableVector_1___x_ABI_CWindows__CUI__CXaml__CDependencyObject;

#if !defined(____x_ABI_C__FVectorChangedEventHandler_1___x_ABI_CWindows__CUI__CXaml__CDependencyObject_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FVectorChangedEventHandler_1___x_ABI_CWindows__CUI__CXaml__CDependencyObject_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FVectorChangedEventHandler_1___x_ABI_CWindows__CUI__CXaml__CDependencyObject __x_ABI_C__FVectorChangedEventHandler_1___x_ABI_CWindows__CUI__CXaml__CDependencyObject;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FVectorChangedEventHandler_1___x_ABI_CWindows__CUI__CXaml__CDependencyObject;

    typedef struct __x_ABI_C__FVectorChangedEventHandler_1___x_ABI_CWindows__CUI__CXaml__CDependencyObjectVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FVectorChangedEventHandler_1___x_ABI_CWindows__CUI__CXaml__CDependencyObject* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FVectorChangedEventHandler_1___x_ABI_CWindows__CUI__CXaml__CDependencyObject* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FVectorChangedEventHandler_1___x_ABI_CWindows__CUI__CXaml__CDependencyObject* This);
        HRESULT (STDMETHODCALLTYPE* Invoke)(__x_ABI_C__FVectorChangedEventHandler_1___x_ABI_CWindows__CUI__CXaml__CDependencyObject* This,
        __x_ABI_C__FIObservableVector_1___x_ABI_CWindows__CUI__CXaml__CDependencyObject* sender,
        __x_ABI_CWindows_CFoundation_CCollections_CIVectorChangedEventArgs* event);

        END_INTERFACE
    } __x_ABI_C__FVectorChangedEventHandler_1___x_ABI_CWindows__CUI__CXaml__CDependencyObjectVtbl;

    interface __x_ABI_C__FVectorChangedEventHandler_1___x_ABI_CWindows__CUI__CXaml__CDependencyObject
    {
        CONST_VTBL struct __x_ABI_C__FVectorChangedEventHandler_1___x_ABI_CWindows__CUI__CXaml__CDependencyObjectVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FVectorChangedEventHandler_1___x_ABI_CWindows__CUI__CXaml__CDependencyObject_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIObservableVector_1___x_ABI_CWindows__CUI__CXaml__CDependencyObject_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIObservableVector_1___x_ABI_CWindows__CUI__CXaml__CDependencyObject_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIObservableVector_1___x_ABI_CWindows__CUI__CXaml__CDependencyObject __x_ABI_C__FIObservableVector_1___x_ABI_CWindows__CUI__CXaml__CDependencyObject;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIObservableVector_1___x_ABI_CWindows__CUI__CXaml__CDependencyObject;

    typedef struct __x_ABI_C__FIObservableVector_1___x_ABI_CWindows__CUI__CXaml__CDependencyObjectVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIObservableVector_1___x_ABI_CWindows__CUI__CXaml__CDependencyObject* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIObservableVector_1___x_ABI_CWindows__CUI__CXaml__CDependencyObject* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIObservableVector_1___x_ABI_CWindows__CUI__CXaml__CDependencyObject* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIObservableVector_1___x_ABI_CWindows__CUI__CXaml__CDependencyObject* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIObservableVector_1___x_ABI_CWindows__CUI__CXaml__CDependencyObject* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIObservableVector_1___x_ABI_CWindows__CUI__CXaml__CDependencyObject* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* add_VectorChanged)(__x_ABI_C__FIObservableVector_1___x_ABI_CWindows__CUI__CXaml__CDependencyObject* This,
        __x_ABI_C__FVectorChangedEventHandler_1___x_ABI_CWindows__CUI__CXaml__CDependencyObject* vhnd,
        EventRegistrationToken* result);
    HRESULT (STDMETHODCALLTYPE* remove_VectorChanged)(__x_ABI_C__FIObservableVector_1___x_ABI_CWindows__CUI__CXaml__CDependencyObject* This,
        EventRegistrationToken token);

        END_INTERFACE
    } __x_ABI_C__FIObservableVector_1___x_ABI_CWindows__CUI__CXaml__CDependencyObjectVtbl;

    interface __x_ABI_C__FIObservableVector_1___x_ABI_CWindows__CUI__CXaml__CDependencyObject
    {
        CONST_VTBL struct __x_ABI_C__FIObservableVector_1___x_ABI_CWindows__CUI__CXaml__CDependencyObjectVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIObservableVector_1___x_ABI_CWindows__CUI__CXaml__CDependencyObject_INTERFACE_DEFINED__
    
#ifndef ____x_ABI_CWindows_CUI_CXaml_CIDependencyProperty_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CIDependencyProperty_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty;

#endif // ____x_ABI_CWindows_CUI_CXaml_CIDependencyProperty_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CIDependencyPropertyChangedEventHandler_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CIDependencyPropertyChangedEventHandler_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CIDependencyPropertyChangedEventHandler __x_ABI_CWindows_CUI_CXaml_CIDependencyPropertyChangedEventHandler;

#endif // ____x_ABI_CWindows_CUI_CXaml_CIDependencyPropertyChangedEventHandler_FWD_DEFINED__

    #ifndef ____x_ABI_CWindows_CUI_CXaml_CDocuments_CIBlock_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CDocuments_CIBlock_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CDocuments_CIBlock __x_ABI_CWindows_CUI_CXaml_CDocuments_CIBlock;

#endif // ____x_ABI_CWindows_CUI_CXaml_CDocuments_CIBlock_FWD_DEFINED__

#if !defined(____x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CXaml__CDocuments__CBlock_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CXaml__CDocuments__CBlock_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CXaml__CDocuments__CBlock __x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CXaml__CDocuments__CBlock;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CXaml__CDocuments__CBlock;

    typedef struct __x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CXaml__CDocuments__CBlockVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CXaml__CDocuments__CBlock* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CXaml__CDocuments__CBlock* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CXaml__CDocuments__CBlock* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CXaml__CDocuments__CBlock* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CXaml__CDocuments__CBlock* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CXaml__CDocuments__CBlock* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Current)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CXaml__CDocuments__CBlock* This,
        __x_ABI_CWindows_CUI_CXaml_CDocuments_CIBlock** result);
    HRESULT (STDMETHODCALLTYPE* get_HasCurrent)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CXaml__CDocuments__CBlock* This,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* MoveNext)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CXaml__CDocuments__CBlock* This,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CXaml__CDocuments__CBlock* This,
        UINT32 itemsLength,
        __x_ABI_CWindows_CUI_CXaml_CDocuments_CIBlock** items,
        UINT32* result);

        END_INTERFACE
    } __x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CXaml__CDocuments__CBlockVtbl;

    interface __x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CXaml__CDocuments__CBlock
    {
        CONST_VTBL struct __x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CXaml__CDocuments__CBlockVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CXaml__CDocuments__CBlock_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIIterable_1___x_ABI_CWindows__CUI__CXaml__CDocuments__CBlock_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIIterable_1___x_ABI_CWindows__CUI__CXaml__CDocuments__CBlock_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIIterable_1___x_ABI_CWindows__CUI__CXaml__CDocuments__CBlock __x_ABI_C__FIIterable_1___x_ABI_CWindows__CUI__CXaml__CDocuments__CBlock;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIIterable_1___x_ABI_CWindows__CUI__CXaml__CDocuments__CBlock;

    typedef struct __x_ABI_C__FIIterable_1___x_ABI_CWindows__CUI__CXaml__CDocuments__CBlockVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CUI__CXaml__CDocuments__CBlock* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CUI__CXaml__CDocuments__CBlock* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CUI__CXaml__CDocuments__CBlock* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CUI__CXaml__CDocuments__CBlock* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CUI__CXaml__CDocuments__CBlock* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CUI__CXaml__CDocuments__CBlock* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* First)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CUI__CXaml__CDocuments__CBlock* This,
        __x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CXaml__CDocuments__CBlock** result);

        END_INTERFACE
    } __x_ABI_C__FIIterable_1___x_ABI_CWindows__CUI__CXaml__CDocuments__CBlockVtbl;

    interface __x_ABI_C__FIIterable_1___x_ABI_CWindows__CUI__CXaml__CDocuments__CBlock
    {
        CONST_VTBL struct __x_ABI_C__FIIterable_1___x_ABI_CWindows__CUI__CXaml__CDocuments__CBlockVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIIterable_1___x_ABI_CWindows__CUI__CXaml__CDocuments__CBlock_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CXaml__CDocuments__CBlock_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CXaml__CDocuments__CBlock_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CXaml__CDocuments__CBlock __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CXaml__CDocuments__CBlock;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CXaml__CDocuments__CBlock;

    typedef struct __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CXaml__CDocuments__CBlockVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CXaml__CDocuments__CBlock* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CXaml__CDocuments__CBlock* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CXaml__CDocuments__CBlock* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CXaml__CDocuments__CBlock* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CXaml__CDocuments__CBlock* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CXaml__CDocuments__CBlock* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* GetAt)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CXaml__CDocuments__CBlock* This,
        UINT32 index,
        __x_ABI_CWindows_CUI_CXaml_CDocuments_CIBlock** result);
    HRESULT (STDMETHODCALLTYPE* get_Size)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CXaml__CDocuments__CBlock* This,
        UINT32* result);
    HRESULT (STDMETHODCALLTYPE* IndexOf)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CXaml__CDocuments__CBlock* This,
        __x_ABI_CWindows_CUI_CXaml_CDocuments_CIBlock* value,
        UINT32* index,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CXaml__CDocuments__CBlock* This,
        UINT32 startIndex,
        UINT32 itemsLength,
        __x_ABI_CWindows_CUI_CXaml_CDocuments_CIBlock** items,
        UINT32* result);

        END_INTERFACE
    } __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CXaml__CDocuments__CBlockVtbl;

    interface __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CXaml__CDocuments__CBlock
    {
        CONST_VTBL struct __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CXaml__CDocuments__CBlockVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CXaml__CDocuments__CBlock_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CXaml__CDocuments__CBlock_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CXaml__CDocuments__CBlock_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CXaml__CDocuments__CBlock __x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CXaml__CDocuments__CBlock;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CXaml__CDocuments__CBlock;

    typedef struct __x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CXaml__CDocuments__CBlockVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CXaml__CDocuments__CBlock* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CXaml__CDocuments__CBlock* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CXaml__CDocuments__CBlock* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CXaml__CDocuments__CBlock* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CXaml__CDocuments__CBlock* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CXaml__CDocuments__CBlock* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* GetAt)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CXaml__CDocuments__CBlock* This,
        UINT32 index,
        __x_ABI_CWindows_CUI_CXaml_CDocuments_CIBlock** result);
    HRESULT (STDMETHODCALLTYPE* get_Size)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CXaml__CDocuments__CBlock* This,
        UINT32* result);
    HRESULT (STDMETHODCALLTYPE* GetView)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CXaml__CDocuments__CBlock* This,
        __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CXaml__CDocuments__CBlock** result);
    HRESULT (STDMETHODCALLTYPE* IndexOf)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CXaml__CDocuments__CBlock* This,
        __x_ABI_CWindows_CUI_CXaml_CDocuments_CIBlock* value,
        UINT32* index,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* SetAt)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CXaml__CDocuments__CBlock* This,
        UINT32 index,
        __x_ABI_CWindows_CUI_CXaml_CDocuments_CIBlock* value);
    HRESULT (STDMETHODCALLTYPE* InsertAt)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CXaml__CDocuments__CBlock* This,
        UINT32 index,
        __x_ABI_CWindows_CUI_CXaml_CDocuments_CIBlock* value);
    HRESULT (STDMETHODCALLTYPE* RemoveAt)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CXaml__CDocuments__CBlock* This,
        UINT32 index);
    HRESULT (STDMETHODCALLTYPE* Append)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CXaml__CDocuments__CBlock* This,
        __x_ABI_CWindows_CUI_CXaml_CDocuments_CIBlock* value);
    HRESULT (STDMETHODCALLTYPE* RemoveAtEnd)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CXaml__CDocuments__CBlock* This);
    HRESULT (STDMETHODCALLTYPE* Clear)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CXaml__CDocuments__CBlock* This);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CXaml__CDocuments__CBlock* This,
        UINT32 startIndex,
        UINT32 itemsLength,
        __x_ABI_CWindows_CUI_CXaml_CDocuments_CIBlock** items,
        UINT32* result);
    HRESULT (STDMETHODCALLTYPE* ReplaceAll)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CXaml__CDocuments__CBlock* This,
        UINT32 itemsLength,
        __x_ABI_CWindows_CUI_CXaml_CDocuments_CIBlock** items);

        END_INTERFACE
    } __x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CXaml__CDocuments__CBlockVtbl;

    interface __x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CXaml__CDocuments__CBlock
    {
        CONST_VTBL struct __x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CXaml__CDocuments__CBlockVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CXaml__CDocuments__CBlock_INTERFACE_DEFINED__
    
#ifndef ____x_ABI_CWindows_CUI_CXaml_CDocuments_CIContentLinkProviderCollection_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CDocuments_CIContentLinkProviderCollection_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CDocuments_CIContentLinkProviderCollection __x_ABI_CWindows_CUI_CXaml_CDocuments_CIContentLinkProviderCollection;

#endif // ____x_ABI_CWindows_CUI_CXaml_CDocuments_CIContentLinkProviderCollection_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CDocuments_CIInline_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CDocuments_CIInline_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CDocuments_CIInline __x_ABI_CWindows_CUI_CXaml_CDocuments_CIInline;

#endif // ____x_ABI_CWindows_CUI_CXaml_CDocuments_CIInline_FWD_DEFINED__

#if !defined(____x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CXaml__CDocuments__CInline_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CXaml__CDocuments__CInline_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CXaml__CDocuments__CInline __x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CXaml__CDocuments__CInline;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CXaml__CDocuments__CInline;

    typedef struct __x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CXaml__CDocuments__CInlineVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CXaml__CDocuments__CInline* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CXaml__CDocuments__CInline* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CXaml__CDocuments__CInline* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CXaml__CDocuments__CInline* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CXaml__CDocuments__CInline* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CXaml__CDocuments__CInline* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Current)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CXaml__CDocuments__CInline* This,
        __x_ABI_CWindows_CUI_CXaml_CDocuments_CIInline** result);
    HRESULT (STDMETHODCALLTYPE* get_HasCurrent)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CXaml__CDocuments__CInline* This,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* MoveNext)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CXaml__CDocuments__CInline* This,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CXaml__CDocuments__CInline* This,
        UINT32 itemsLength,
        __x_ABI_CWindows_CUI_CXaml_CDocuments_CIInline** items,
        UINT32* result);

        END_INTERFACE
    } __x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CXaml__CDocuments__CInlineVtbl;

    interface __x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CXaml__CDocuments__CInline
    {
        CONST_VTBL struct __x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CXaml__CDocuments__CInlineVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CXaml__CDocuments__CInline_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIIterable_1___x_ABI_CWindows__CUI__CXaml__CDocuments__CInline_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIIterable_1___x_ABI_CWindows__CUI__CXaml__CDocuments__CInline_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIIterable_1___x_ABI_CWindows__CUI__CXaml__CDocuments__CInline __x_ABI_C__FIIterable_1___x_ABI_CWindows__CUI__CXaml__CDocuments__CInline;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIIterable_1___x_ABI_CWindows__CUI__CXaml__CDocuments__CInline;

    typedef struct __x_ABI_C__FIIterable_1___x_ABI_CWindows__CUI__CXaml__CDocuments__CInlineVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CUI__CXaml__CDocuments__CInline* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CUI__CXaml__CDocuments__CInline* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CUI__CXaml__CDocuments__CInline* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CUI__CXaml__CDocuments__CInline* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CUI__CXaml__CDocuments__CInline* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CUI__CXaml__CDocuments__CInline* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* First)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CUI__CXaml__CDocuments__CInline* This,
        __x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CXaml__CDocuments__CInline** result);

        END_INTERFACE
    } __x_ABI_C__FIIterable_1___x_ABI_CWindows__CUI__CXaml__CDocuments__CInlineVtbl;

    interface __x_ABI_C__FIIterable_1___x_ABI_CWindows__CUI__CXaml__CDocuments__CInline
    {
        CONST_VTBL struct __x_ABI_C__FIIterable_1___x_ABI_CWindows__CUI__CXaml__CDocuments__CInlineVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIIterable_1___x_ABI_CWindows__CUI__CXaml__CDocuments__CInline_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CXaml__CDocuments__CInline_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CXaml__CDocuments__CInline_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CXaml__CDocuments__CInline __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CXaml__CDocuments__CInline;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CXaml__CDocuments__CInline;

    typedef struct __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CXaml__CDocuments__CInlineVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CXaml__CDocuments__CInline* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CXaml__CDocuments__CInline* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CXaml__CDocuments__CInline* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CXaml__CDocuments__CInline* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CXaml__CDocuments__CInline* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CXaml__CDocuments__CInline* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* GetAt)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CXaml__CDocuments__CInline* This,
        UINT32 index,
        __x_ABI_CWindows_CUI_CXaml_CDocuments_CIInline** result);
    HRESULT (STDMETHODCALLTYPE* get_Size)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CXaml__CDocuments__CInline* This,
        UINT32* result);
    HRESULT (STDMETHODCALLTYPE* IndexOf)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CXaml__CDocuments__CInline* This,
        __x_ABI_CWindows_CUI_CXaml_CDocuments_CIInline* value,
        UINT32* index,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CXaml__CDocuments__CInline* This,
        UINT32 startIndex,
        UINT32 itemsLength,
        __x_ABI_CWindows_CUI_CXaml_CDocuments_CIInline** items,
        UINT32* result);

        END_INTERFACE
    } __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CXaml__CDocuments__CInlineVtbl;

    interface __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CXaml__CDocuments__CInline
    {
        CONST_VTBL struct __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CXaml__CDocuments__CInlineVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CXaml__CDocuments__CInline_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CXaml__CDocuments__CInline_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CXaml__CDocuments__CInline_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CXaml__CDocuments__CInline __x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CXaml__CDocuments__CInline;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CXaml__CDocuments__CInline;

    typedef struct __x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CXaml__CDocuments__CInlineVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CXaml__CDocuments__CInline* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CXaml__CDocuments__CInline* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CXaml__CDocuments__CInline* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CXaml__CDocuments__CInline* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CXaml__CDocuments__CInline* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CXaml__CDocuments__CInline* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* GetAt)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CXaml__CDocuments__CInline* This,
        UINT32 index,
        __x_ABI_CWindows_CUI_CXaml_CDocuments_CIInline** result);
    HRESULT (STDMETHODCALLTYPE* get_Size)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CXaml__CDocuments__CInline* This,
        UINT32* result);
    HRESULT (STDMETHODCALLTYPE* GetView)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CXaml__CDocuments__CInline* This,
        __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CXaml__CDocuments__CInline** result);
    HRESULT (STDMETHODCALLTYPE* IndexOf)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CXaml__CDocuments__CInline* This,
        __x_ABI_CWindows_CUI_CXaml_CDocuments_CIInline* value,
        UINT32* index,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* SetAt)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CXaml__CDocuments__CInline* This,
        UINT32 index,
        __x_ABI_CWindows_CUI_CXaml_CDocuments_CIInline* value);
    HRESULT (STDMETHODCALLTYPE* InsertAt)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CXaml__CDocuments__CInline* This,
        UINT32 index,
        __x_ABI_CWindows_CUI_CXaml_CDocuments_CIInline* value);
    HRESULT (STDMETHODCALLTYPE* RemoveAt)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CXaml__CDocuments__CInline* This,
        UINT32 index);
    HRESULT (STDMETHODCALLTYPE* Append)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CXaml__CDocuments__CInline* This,
        __x_ABI_CWindows_CUI_CXaml_CDocuments_CIInline* value);
    HRESULT (STDMETHODCALLTYPE* RemoveAtEnd)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CXaml__CDocuments__CInline* This);
    HRESULT (STDMETHODCALLTYPE* Clear)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CXaml__CDocuments__CInline* This);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CXaml__CDocuments__CInline* This,
        UINT32 startIndex,
        UINT32 itemsLength,
        __x_ABI_CWindows_CUI_CXaml_CDocuments_CIInline** items,
        UINT32* result);
    HRESULT (STDMETHODCALLTYPE* ReplaceAll)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CXaml__CDocuments__CInline* This,
        UINT32 itemsLength,
        __x_ABI_CWindows_CUI_CXaml_CDocuments_CIInline** items);

        END_INTERFACE
    } __x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CXaml__CDocuments__CInlineVtbl;

    interface __x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CXaml__CDocuments__CInline
    {
        CONST_VTBL struct __x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CXaml__CDocuments__CInlineVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CXaml__CDocuments__CInline_INTERFACE_DEFINED__
    
#ifndef ____x_ABI_CWindows_CUI_CXaml_CDocuments_CITextPointer_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CDocuments_CITextPointer_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CDocuments_CITextPointer __x_ABI_CWindows_CUI_CXaml_CDocuments_CITextPointer;

#endif // ____x_ABI_CWindows_CUI_CXaml_CDocuments_CITextPointer_FWD_DEFINED__

typedef struct __x_ABI_CWindows_CUI_CXaml_CDocuments_CTextRange __x_ABI_CWindows_CUI_CXaml_CDocuments_CTextRange;

#ifndef ____x_ABI_CWindows_CUI_CXaml_CIDragEventArgs_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CIDragEventArgs_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CIDragEventArgs __x_ABI_CWindows_CUI_CXaml_CIDragEventArgs;

#endif // ____x_ABI_CWindows_CUI_CXaml_CIDragEventArgs_FWD_DEFINED__

typedef struct __x_ABI_CWindows_CUI_CXaml_CDuration __x_ABI_CWindows_CUI_CXaml_CDuration;

typedef enum __x_ABI_CWindows_CUI_CXaml_CElementSoundMode __x_ABI_CWindows_CUI_CXaml_CElementSoundMode;

#ifndef ____x_ABI_CWindows_CUI_CXaml_CIExceptionRoutedEventHandler_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CIExceptionRoutedEventHandler_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CIExceptionRoutedEventHandler __x_ABI_CWindows_CUI_CXaml_CIExceptionRoutedEventHandler;

#endif // ____x_ABI_CWindows_CUI_CXaml_CIExceptionRoutedEventHandler_FWD_DEFINED__

    typedef enum __x_ABI_CWindows_CUI_CXaml_CFocusState __x_ABI_CWindows_CUI_CXaml_CFocusState;

#ifndef ____x_ABI_CWindows_CUI_CXaml_CIFrameworkElement_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CIFrameworkElement_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CIFrameworkElement __x_ABI_CWindows_CUI_CXaml_CIFrameworkElement;

#endif // ____x_ABI_CWindows_CUI_CXaml_CIFrameworkElement_FWD_DEFINED__

typedef struct __x_ABI_CWindows_CUI_CXaml_CGridLength __x_ABI_CWindows_CUI_CXaml_CGridLength;

typedef enum __x_ABI_CWindows_CUI_CXaml_CHorizontalAlignment __x_ABI_CWindows_CUI_CXaml_CHorizontalAlignment;

#ifndef ____x_ABI_CWindows_CUI_CXaml_CIDependencyObject2_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CIDependencyObject2_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CIDependencyObject2 __x_ABI_CWindows_CUI_CXaml_CIDependencyObject2;

#endif // ____x_ABI_CWindows_CUI_CXaml_CIDependencyObject2_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CIElementFactory_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CIElementFactory_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CIElementFactory __x_ABI_CWindows_CUI_CXaml_CIElementFactory;

#endif // ____x_ABI_CWindows_CUI_CXaml_CIElementFactory_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CIFrameworkElement2_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CIFrameworkElement2_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CIFrameworkElement2 __x_ABI_CWindows_CUI_CXaml_CIFrameworkElement2;

#endif // ____x_ABI_CWindows_CUI_CXaml_CIFrameworkElement2_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CIFrameworkElement3_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CIFrameworkElement3_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CIFrameworkElement3 __x_ABI_CWindows_CUI_CXaml_CIFrameworkElement3;

#endif // ____x_ABI_CWindows_CUI_CXaml_CIFrameworkElement3_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CIFrameworkElement4_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CIFrameworkElement4_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CIFrameworkElement4 __x_ABI_CWindows_CUI_CXaml_CIFrameworkElement4;

#endif // ____x_ABI_CWindows_CUI_CXaml_CIFrameworkElement4_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CIFrameworkElement6_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CIFrameworkElement6_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CIFrameworkElement6 __x_ABI_CWindows_CUI_CXaml_CIFrameworkElement6;

#endif // ____x_ABI_CWindows_CUI_CXaml_CIFrameworkElement6_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CIFrameworkElement7_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CIFrameworkElement7_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CIFrameworkElement7 __x_ABI_CWindows_CUI_CXaml_CIFrameworkElement7;

#endif // ____x_ABI_CWindows_CUI_CXaml_CIFrameworkElement7_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CIFrameworkElementOverrides_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CIFrameworkElementOverrides_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CIFrameworkElementOverrides __x_ABI_CWindows_CUI_CXaml_CIFrameworkElementOverrides;

#endif // ____x_ABI_CWindows_CUI_CXaml_CIFrameworkElementOverrides_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CIFrameworkElementOverrides2_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CIFrameworkElementOverrides2_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CIFrameworkElementOverrides2 __x_ABI_CWindows_CUI_CXaml_CIFrameworkElementOverrides2;

#endif // ____x_ABI_CWindows_CUI_CXaml_CIFrameworkElementOverrides2_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CIFrameworkElementProtected7_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CIFrameworkElementProtected7_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CIFrameworkElementProtected7 __x_ABI_CWindows_CUI_CXaml_CIFrameworkElementProtected7;

#endif // ____x_ABI_CWindows_CUI_CXaml_CIFrameworkElementProtected7_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CIFrameworkTemplate_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CIFrameworkTemplate_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CIFrameworkTemplate __x_ABI_CWindows_CUI_CXaml_CIFrameworkTemplate;

#endif // ____x_ABI_CWindows_CUI_CXaml_CIFrameworkTemplate_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CIUIElement10_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CIUIElement10_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CIUIElement10 __x_ABI_CWindows_CUI_CXaml_CIUIElement10;

#endif // ____x_ABI_CWindows_CUI_CXaml_CIUIElement10_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CIUIElement2_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CIUIElement2_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CIUIElement2 __x_ABI_CWindows_CUI_CXaml_CIUIElement2;

#endif // ____x_ABI_CWindows_CUI_CXaml_CIUIElement2_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CIUIElement3_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CIUIElement3_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CIUIElement3 __x_ABI_CWindows_CUI_CXaml_CIUIElement3;

#endif // ____x_ABI_CWindows_CUI_CXaml_CIUIElement3_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CIUIElement4_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CIUIElement4_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CIUIElement4 __x_ABI_CWindows_CUI_CXaml_CIUIElement4;

#endif // ____x_ABI_CWindows_CUI_CXaml_CIUIElement4_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CIUIElement5_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CIUIElement5_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CIUIElement5 __x_ABI_CWindows_CUI_CXaml_CIUIElement5;

#endif // ____x_ABI_CWindows_CUI_CXaml_CIUIElement5_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CIUIElement7_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CIUIElement7_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CIUIElement7 __x_ABI_CWindows_CUI_CXaml_CIUIElement7;

#endif // ____x_ABI_CWindows_CUI_CXaml_CIUIElement7_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CIUIElement8_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CIUIElement8_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CIUIElement8 __x_ABI_CWindows_CUI_CXaml_CIUIElement8;

#endif // ____x_ABI_CWindows_CUI_CXaml_CIUIElement8_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CIUIElement9_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CIUIElement9_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CIUIElement9 __x_ABI_CWindows_CUI_CXaml_CIUIElement9;

#endif // ____x_ABI_CWindows_CUI_CXaml_CIUIElement9_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CIUIElementOverrides_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CIUIElementOverrides_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CIUIElementOverrides __x_ABI_CWindows_CUI_CXaml_CIUIElementOverrides;

#endif // ____x_ABI_CWindows_CUI_CXaml_CIUIElementOverrides_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CIUIElementOverrides7_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CIUIElementOverrides7_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CIUIElementOverrides7 __x_ABI_CWindows_CUI_CXaml_CIUIElementOverrides7;

#endif // ____x_ABI_CWindows_CUI_CXaml_CIUIElementOverrides7_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CIUIElementOverrides8_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CIUIElementOverrides8_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CIUIElementOverrides8 __x_ABI_CWindows_CUI_CXaml_CIUIElementOverrides8;

#endif // ____x_ABI_CWindows_CUI_CXaml_CIUIElementOverrides8_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CIUIElementOverrides9_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CIUIElementOverrides9_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CIUIElementOverrides9 __x_ABI_CWindows_CUI_CXaml_CIUIElementOverrides9;

#endif // ____x_ABI_CWindows_CUI_CXaml_CIUIElementOverrides9_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CInput_CICharacterReceivedRoutedEventArgs_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CInput_CICharacterReceivedRoutedEventArgs_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CInput_CICharacterReceivedRoutedEventArgs __x_ABI_CWindows_CUI_CXaml_CInput_CICharacterReceivedRoutedEventArgs;

#endif // ____x_ABI_CWindows_CUI_CXaml_CInput_CICharacterReceivedRoutedEventArgs_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CInput_CIDoubleTappedRoutedEventArgs_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CInput_CIDoubleTappedRoutedEventArgs_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CInput_CIDoubleTappedRoutedEventArgs __x_ABI_CWindows_CUI_CXaml_CInput_CIDoubleTappedRoutedEventArgs;

#endif // ____x_ABI_CWindows_CUI_CXaml_CInput_CIDoubleTappedRoutedEventArgs_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CInput_CIHoldingRoutedEventArgs_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CInput_CIHoldingRoutedEventArgs_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CInput_CIHoldingRoutedEventArgs __x_ABI_CWindows_CUI_CXaml_CInput_CIHoldingRoutedEventArgs;

#endif // ____x_ABI_CWindows_CUI_CXaml_CInput_CIHoldingRoutedEventArgs_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CInput_CICommand_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CInput_CICommand_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CInput_CICommand __x_ABI_CWindows_CUI_CXaml_CInput_CICommand;

#endif // ____x_ABI_CWindows_CUI_CXaml_CInput_CICommand_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CInput_CIInputScope_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CInput_CIInputScope_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CInput_CIInputScope __x_ABI_CWindows_CUI_CXaml_CInput_CIInputScope;

#endif // ____x_ABI_CWindows_CUI_CXaml_CInput_CIInputScope_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CInput_CIKeyRoutedEventArgs_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CInput_CIKeyRoutedEventArgs_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CInput_CIKeyRoutedEventArgs __x_ABI_CWindows_CUI_CXaml_CInput_CIKeyRoutedEventArgs;

#endif // ____x_ABI_CWindows_CUI_CXaml_CInput_CIKeyRoutedEventArgs_FWD_DEFINED__

typedef enum __x_ABI_CWindows_CUI_CXaml_CInput_CKeyboardNavigationMode __x_ABI_CWindows_CUI_CXaml_CInput_CKeyboardNavigationMode;

#ifndef ____x_ABI_CWindows_CUI_CXaml_CInput_CIManipulationCompletedRoutedEventArgs_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CInput_CIManipulationCompletedRoutedEventArgs_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CInput_CIManipulationCompletedRoutedEventArgs __x_ABI_CWindows_CUI_CXaml_CInput_CIManipulationCompletedRoutedEventArgs;

#endif // ____x_ABI_CWindows_CUI_CXaml_CInput_CIManipulationCompletedRoutedEventArgs_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CInput_CIManipulationDeltaRoutedEventArgs_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CInput_CIManipulationDeltaRoutedEventArgs_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CInput_CIManipulationDeltaRoutedEventArgs __x_ABI_CWindows_CUI_CXaml_CInput_CIManipulationDeltaRoutedEventArgs;

#endif // ____x_ABI_CWindows_CUI_CXaml_CInput_CIManipulationDeltaRoutedEventArgs_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CInput_CIManipulationInertiaStartingRoutedEventArgs_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CInput_CIManipulationInertiaStartingRoutedEventArgs_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CInput_CIManipulationInertiaStartingRoutedEventArgs __x_ABI_CWindows_CUI_CXaml_CInput_CIManipulationInertiaStartingRoutedEventArgs;

#endif // ____x_ABI_CWindows_CUI_CXaml_CInput_CIManipulationInertiaStartingRoutedEventArgs_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CInput_CIManipulationStartedRoutedEventArgs_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CInput_CIManipulationStartedRoutedEventArgs_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CInput_CIManipulationStartedRoutedEventArgs __x_ABI_CWindows_CUI_CXaml_CInput_CIManipulationStartedRoutedEventArgs;

#endif // ____x_ABI_CWindows_CUI_CXaml_CInput_CIManipulationStartedRoutedEventArgs_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CInput_CIManipulationStartingRoutedEventArgs_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CInput_CIManipulationStartingRoutedEventArgs_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CInput_CIManipulationStartingRoutedEventArgs __x_ABI_CWindows_CUI_CXaml_CInput_CIManipulationStartingRoutedEventArgs;

#endif // ____x_ABI_CWindows_CUI_CXaml_CInput_CIManipulationStartingRoutedEventArgs_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CInput_CIPointerRoutedEventArgs_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CInput_CIPointerRoutedEventArgs_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CInput_CIPointerRoutedEventArgs __x_ABI_CWindows_CUI_CXaml_CInput_CIPointerRoutedEventArgs;

#endif // ____x_ABI_CWindows_CUI_CXaml_CInput_CIPointerRoutedEventArgs_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CInput_CIRightTappedRoutedEventArgs_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CInput_CIRightTappedRoutedEventArgs_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CInput_CIRightTappedRoutedEventArgs __x_ABI_CWindows_CUI_CXaml_CInput_CIRightTappedRoutedEventArgs;

#endif // ____x_ABI_CWindows_CUI_CXaml_CInput_CIRightTappedRoutedEventArgs_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CInput_CITappedRoutedEventArgs_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CInput_CITappedRoutedEventArgs_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CInput_CITappedRoutedEventArgs __x_ABI_CWindows_CUI_CXaml_CInput_CITappedRoutedEventArgs;

#endif // ____x_ABI_CWindows_CUI_CXaml_CInput_CITappedRoutedEventArgs_FWD_DEFINED__

typedef struct __x_ABI_CWindows_CUI_CXaml_CInterop_CTypeName __x_ABI_CWindows_CUI_CXaml_CInterop_CTypeName;

typedef enum __x_ABI_CWindows_CUI_CXaml_CLineStackingStrategy __x_ABI_CWindows_CUI_CXaml_CLineStackingStrategy;

#ifndef ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIConnectedAnimation_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIConnectedAnimation_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIConnectedAnimation __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIConnectedAnimation;

#endif // ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIConnectedAnimation_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CINavigationTransitionInfo_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CINavigationTransitionInfo_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CINavigationTransitionInfo __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CINavigationTransitionInfo;

#endif // ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CINavigationTransitionInfo_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CITransition_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CITransition_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CITransition __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CITransition;

#endif // ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CITransition_FWD_DEFINED__

#if !defined(____x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CXaml__CMedia__CAnimation__CTransition_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CXaml__CMedia__CAnimation__CTransition_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CXaml__CMedia__CAnimation__CTransition __x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CXaml__CMedia__CAnimation__CTransition;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CXaml__CMedia__CAnimation__CTransition;

    typedef struct __x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CXaml__CMedia__CAnimation__CTransitionVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CXaml__CMedia__CAnimation__CTransition* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CXaml__CMedia__CAnimation__CTransition* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CXaml__CMedia__CAnimation__CTransition* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CXaml__CMedia__CAnimation__CTransition* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CXaml__CMedia__CAnimation__CTransition* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CXaml__CMedia__CAnimation__CTransition* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Current)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CXaml__CMedia__CAnimation__CTransition* This,
        __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CITransition** result);
    HRESULT (STDMETHODCALLTYPE* get_HasCurrent)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CXaml__CMedia__CAnimation__CTransition* This,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* MoveNext)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CXaml__CMedia__CAnimation__CTransition* This,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CXaml__CMedia__CAnimation__CTransition* This,
        UINT32 itemsLength,
        __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CITransition** items,
        UINT32* result);

        END_INTERFACE
    } __x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CXaml__CMedia__CAnimation__CTransitionVtbl;

    interface __x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CXaml__CMedia__CAnimation__CTransition
    {
        CONST_VTBL struct __x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CXaml__CMedia__CAnimation__CTransitionVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CXaml__CMedia__CAnimation__CTransition_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIIterable_1___x_ABI_CWindows__CUI__CXaml__CMedia__CAnimation__CTransition_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIIterable_1___x_ABI_CWindows__CUI__CXaml__CMedia__CAnimation__CTransition_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIIterable_1___x_ABI_CWindows__CUI__CXaml__CMedia__CAnimation__CTransition __x_ABI_C__FIIterable_1___x_ABI_CWindows__CUI__CXaml__CMedia__CAnimation__CTransition;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIIterable_1___x_ABI_CWindows__CUI__CXaml__CMedia__CAnimation__CTransition;

    typedef struct __x_ABI_C__FIIterable_1___x_ABI_CWindows__CUI__CXaml__CMedia__CAnimation__CTransitionVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CUI__CXaml__CMedia__CAnimation__CTransition* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CUI__CXaml__CMedia__CAnimation__CTransition* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CUI__CXaml__CMedia__CAnimation__CTransition* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CUI__CXaml__CMedia__CAnimation__CTransition* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CUI__CXaml__CMedia__CAnimation__CTransition* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CUI__CXaml__CMedia__CAnimation__CTransition* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* First)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CUI__CXaml__CMedia__CAnimation__CTransition* This,
        __x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CXaml__CMedia__CAnimation__CTransition** result);

        END_INTERFACE
    } __x_ABI_C__FIIterable_1___x_ABI_CWindows__CUI__CXaml__CMedia__CAnimation__CTransitionVtbl;

    interface __x_ABI_C__FIIterable_1___x_ABI_CWindows__CUI__CXaml__CMedia__CAnimation__CTransition
    {
        CONST_VTBL struct __x_ABI_C__FIIterable_1___x_ABI_CWindows__CUI__CXaml__CMedia__CAnimation__CTransitionVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIIterable_1___x_ABI_CWindows__CUI__CXaml__CMedia__CAnimation__CTransition_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CXaml__CMedia__CAnimation__CTransition_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CXaml__CMedia__CAnimation__CTransition_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CXaml__CMedia__CAnimation__CTransition __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CXaml__CMedia__CAnimation__CTransition;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CXaml__CMedia__CAnimation__CTransition;

    typedef struct __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CXaml__CMedia__CAnimation__CTransitionVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CXaml__CMedia__CAnimation__CTransition* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CXaml__CMedia__CAnimation__CTransition* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CXaml__CMedia__CAnimation__CTransition* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CXaml__CMedia__CAnimation__CTransition* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CXaml__CMedia__CAnimation__CTransition* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CXaml__CMedia__CAnimation__CTransition* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* GetAt)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CXaml__CMedia__CAnimation__CTransition* This,
        UINT32 index,
        __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CITransition** result);
    HRESULT (STDMETHODCALLTYPE* get_Size)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CXaml__CMedia__CAnimation__CTransition* This,
        UINT32* result);
    HRESULT (STDMETHODCALLTYPE* IndexOf)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CXaml__CMedia__CAnimation__CTransition* This,
        __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CITransition* value,
        UINT32* index,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CXaml__CMedia__CAnimation__CTransition* This,
        UINT32 startIndex,
        UINT32 itemsLength,
        __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CITransition** items,
        UINT32* result);

        END_INTERFACE
    } __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CXaml__CMedia__CAnimation__CTransitionVtbl;

    interface __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CXaml__CMedia__CAnimation__CTransition
    {
        CONST_VTBL struct __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CXaml__CMedia__CAnimation__CTransitionVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CXaml__CMedia__CAnimation__CTransition_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CXaml__CMedia__CAnimation__CTransition_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CXaml__CMedia__CAnimation__CTransition_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CXaml__CMedia__CAnimation__CTransition __x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CXaml__CMedia__CAnimation__CTransition;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CXaml__CMedia__CAnimation__CTransition;

    typedef struct __x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CXaml__CMedia__CAnimation__CTransitionVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CXaml__CMedia__CAnimation__CTransition* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CXaml__CMedia__CAnimation__CTransition* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CXaml__CMedia__CAnimation__CTransition* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CXaml__CMedia__CAnimation__CTransition* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CXaml__CMedia__CAnimation__CTransition* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CXaml__CMedia__CAnimation__CTransition* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* GetAt)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CXaml__CMedia__CAnimation__CTransition* This,
        UINT32 index,
        __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CITransition** result);
    HRESULT (STDMETHODCALLTYPE* get_Size)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CXaml__CMedia__CAnimation__CTransition* This,
        UINT32* result);
    HRESULT (STDMETHODCALLTYPE* GetView)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CXaml__CMedia__CAnimation__CTransition* This,
        __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CXaml__CMedia__CAnimation__CTransition** result);
    HRESULT (STDMETHODCALLTYPE* IndexOf)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CXaml__CMedia__CAnimation__CTransition* This,
        __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CITransition* value,
        UINT32* index,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* SetAt)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CXaml__CMedia__CAnimation__CTransition* This,
        UINT32 index,
        __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CITransition* value);
    HRESULT (STDMETHODCALLTYPE* InsertAt)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CXaml__CMedia__CAnimation__CTransition* This,
        UINT32 index,
        __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CITransition* value);
    HRESULT (STDMETHODCALLTYPE* RemoveAt)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CXaml__CMedia__CAnimation__CTransition* This,
        UINT32 index);
    HRESULT (STDMETHODCALLTYPE* Append)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CXaml__CMedia__CAnimation__CTransition* This,
        __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CITransition* value);
    HRESULT (STDMETHODCALLTYPE* RemoveAtEnd)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CXaml__CMedia__CAnimation__CTransition* This);
    HRESULT (STDMETHODCALLTYPE* Clear)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CXaml__CMedia__CAnimation__CTransition* This);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CXaml__CMedia__CAnimation__CTransition* This,
        UINT32 startIndex,
        UINT32 itemsLength,
        __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CITransition** items,
        UINT32* result);
    HRESULT (STDMETHODCALLTYPE* ReplaceAll)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CXaml__CMedia__CAnimation__CTransition* This,
        UINT32 itemsLength,
        __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CITransition** items);

        END_INTERFACE
    } __x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CXaml__CMedia__CAnimation__CTransitionVtbl;

    interface __x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CXaml__CMedia__CAnimation__CTransition
    {
        CONST_VTBL struct __x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CXaml__CMedia__CAnimation__CTransitionVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CXaml__CMedia__CAnimation__CTransition_INTERFACE_DEFINED__
    
typedef enum __x_ABI_CWindows_CUI_CXaml_CMedia_CAudioCategory __x_ABI_CWindows_CUI_CXaml_CMedia_CAudioCategory;

typedef enum __x_ABI_CWindows_CUI_CXaml_CMedia_CAudioDeviceType __x_ABI_CWindows_CUI_CXaml_CMedia_CAudioDeviceType;

typedef enum __x_ABI_CWindows_CUI_CXaml_CMedia_CFastPlayFallbackBehaviour __x_ABI_CWindows_CUI_CXaml_CMedia_CFastPlayFallbackBehaviour;

#ifndef ____x_ABI_CWindows_CUI_CXaml_CMedia_CIFontFamily_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CMedia_CIFontFamily_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CMedia_CIFontFamily __x_ABI_CWindows_CUI_CXaml_CMedia_CIFontFamily;

#endif // ____x_ABI_CWindows_CUI_CXaml_CMedia_CIFontFamily_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CMedia_CIGeometry_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CMedia_CIGeometry_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CMedia_CIGeometry __x_ABI_CWindows_CUI_CXaml_CMedia_CIGeometry;

#endif // ____x_ABI_CWindows_CUI_CXaml_CMedia_CIGeometry_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CMedia_CIBrushOverrides2_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CMedia_CIBrushOverrides2_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CMedia_CIBrushOverrides2 __x_ABI_CWindows_CUI_CXaml_CMedia_CIBrushOverrides2;

#endif // ____x_ABI_CWindows_CUI_CXaml_CMedia_CIBrushOverrides2_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CMedia_CITileBrush_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CMedia_CITileBrush_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CMedia_CITileBrush __x_ABI_CWindows_CUI_CXaml_CMedia_CITileBrush;

#endif // ____x_ABI_CWindows_CUI_CXaml_CMedia_CITileBrush_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CMedia_CIImageSource_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CMedia_CIImageSource_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CMedia_CIImageSource __x_ABI_CWindows_CUI_CXaml_CMedia_CIImageSource;

#endif // ____x_ABI_CWindows_CUI_CXaml_CMedia_CIImageSource_FWD_DEFINED__

typedef enum __x_ABI_CWindows_CUI_CXaml_CMedia_CMediaCanPlayResponse __x_ABI_CWindows_CUI_CXaml_CMedia_CMediaCanPlayResponse;

typedef enum __x_ABI_CWindows_CUI_CXaml_CMedia_CMediaElementState __x_ABI_CWindows_CUI_CXaml_CMedia_CMediaElementState;

#ifndef ____x_ABI_CWindows_CUI_CXaml_CMedia_CIRateChangedRoutedEventHandler_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CMedia_CIRateChangedRoutedEventHandler_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CMedia_CIRateChangedRoutedEventHandler __x_ABI_CWindows_CUI_CXaml_CMedia_CIRateChangedRoutedEventHandler;

#endif // ____x_ABI_CWindows_CUI_CXaml_CMedia_CIRateChangedRoutedEventHandler_FWD_DEFINED__

    #ifndef ____x_ABI_CWindows_CUI_CXaml_CMedia_CISolidColorBrush_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CMedia_CISolidColorBrush_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CMedia_CISolidColorBrush __x_ABI_CWindows_CUI_CXaml_CMedia_CISolidColorBrush;

#endif // ____x_ABI_CWindows_CUI_CXaml_CMedia_CISolidColorBrush_FWD_DEFINED__

typedef enum __x_ABI_CWindows_CUI_CXaml_CMedia_CStereo3DVideoPackingMode __x_ABI_CWindows_CUI_CXaml_CMedia_CStereo3DVideoPackingMode;

typedef enum __x_ABI_CWindows_CUI_CXaml_CMedia_CStereo3DVideoRenderMode __x_ABI_CWindows_CUI_CXaml_CMedia_CStereo3DVideoRenderMode;

typedef enum __x_ABI_CWindows_CUI_CXaml_CMedia_CStretch __x_ABI_CWindows_CUI_CXaml_CMedia_CStretch;

#ifndef ____x_ABI_CWindows_CUI_CXaml_CMedia_CITimelineMarker_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CMedia_CITimelineMarker_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CMedia_CITimelineMarker __x_ABI_CWindows_CUI_CXaml_CMedia_CITimelineMarker;

#endif // ____x_ABI_CWindows_CUI_CXaml_CMedia_CITimelineMarker_FWD_DEFINED__

#if !defined(____x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CXaml__CMedia__CTimelineMarker_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CXaml__CMedia__CTimelineMarker_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CXaml__CMedia__CTimelineMarker __x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CXaml__CMedia__CTimelineMarker;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CXaml__CMedia__CTimelineMarker;

    typedef struct __x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CXaml__CMedia__CTimelineMarkerVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CXaml__CMedia__CTimelineMarker* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CXaml__CMedia__CTimelineMarker* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CXaml__CMedia__CTimelineMarker* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CXaml__CMedia__CTimelineMarker* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CXaml__CMedia__CTimelineMarker* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CXaml__CMedia__CTimelineMarker* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Current)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CXaml__CMedia__CTimelineMarker* This,
        __x_ABI_CWindows_CUI_CXaml_CMedia_CITimelineMarker** result);
    HRESULT (STDMETHODCALLTYPE* get_HasCurrent)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CXaml__CMedia__CTimelineMarker* This,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* MoveNext)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CXaml__CMedia__CTimelineMarker* This,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CXaml__CMedia__CTimelineMarker* This,
        UINT32 itemsLength,
        __x_ABI_CWindows_CUI_CXaml_CMedia_CITimelineMarker** items,
        UINT32* result);

        END_INTERFACE
    } __x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CXaml__CMedia__CTimelineMarkerVtbl;

    interface __x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CXaml__CMedia__CTimelineMarker
    {
        CONST_VTBL struct __x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CXaml__CMedia__CTimelineMarkerVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CXaml__CMedia__CTimelineMarker_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIIterable_1___x_ABI_CWindows__CUI__CXaml__CMedia__CTimelineMarker_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIIterable_1___x_ABI_CWindows__CUI__CXaml__CMedia__CTimelineMarker_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIIterable_1___x_ABI_CWindows__CUI__CXaml__CMedia__CTimelineMarker __x_ABI_C__FIIterable_1___x_ABI_CWindows__CUI__CXaml__CMedia__CTimelineMarker;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIIterable_1___x_ABI_CWindows__CUI__CXaml__CMedia__CTimelineMarker;

    typedef struct __x_ABI_C__FIIterable_1___x_ABI_CWindows__CUI__CXaml__CMedia__CTimelineMarkerVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CUI__CXaml__CMedia__CTimelineMarker* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CUI__CXaml__CMedia__CTimelineMarker* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CUI__CXaml__CMedia__CTimelineMarker* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CUI__CXaml__CMedia__CTimelineMarker* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CUI__CXaml__CMedia__CTimelineMarker* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CUI__CXaml__CMedia__CTimelineMarker* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* First)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CUI__CXaml__CMedia__CTimelineMarker* This,
        __x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CXaml__CMedia__CTimelineMarker** result);

        END_INTERFACE
    } __x_ABI_C__FIIterable_1___x_ABI_CWindows__CUI__CXaml__CMedia__CTimelineMarkerVtbl;

    interface __x_ABI_C__FIIterable_1___x_ABI_CWindows__CUI__CXaml__CMedia__CTimelineMarker
    {
        CONST_VTBL struct __x_ABI_C__FIIterable_1___x_ABI_CWindows__CUI__CXaml__CMedia__CTimelineMarkerVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIIterable_1___x_ABI_CWindows__CUI__CXaml__CMedia__CTimelineMarker_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CXaml__CMedia__CTimelineMarker_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CXaml__CMedia__CTimelineMarker_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CXaml__CMedia__CTimelineMarker __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CXaml__CMedia__CTimelineMarker;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CXaml__CMedia__CTimelineMarker;

    typedef struct __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CXaml__CMedia__CTimelineMarkerVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CXaml__CMedia__CTimelineMarker* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CXaml__CMedia__CTimelineMarker* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CXaml__CMedia__CTimelineMarker* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CXaml__CMedia__CTimelineMarker* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CXaml__CMedia__CTimelineMarker* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CXaml__CMedia__CTimelineMarker* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* GetAt)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CXaml__CMedia__CTimelineMarker* This,
        UINT32 index,
        __x_ABI_CWindows_CUI_CXaml_CMedia_CITimelineMarker** result);
    HRESULT (STDMETHODCALLTYPE* get_Size)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CXaml__CMedia__CTimelineMarker* This,
        UINT32* result);
    HRESULT (STDMETHODCALLTYPE* IndexOf)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CXaml__CMedia__CTimelineMarker* This,
        __x_ABI_CWindows_CUI_CXaml_CMedia_CITimelineMarker* value,
        UINT32* index,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CXaml__CMedia__CTimelineMarker* This,
        UINT32 startIndex,
        UINT32 itemsLength,
        __x_ABI_CWindows_CUI_CXaml_CMedia_CITimelineMarker** items,
        UINT32* result);

        END_INTERFACE
    } __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CXaml__CMedia__CTimelineMarkerVtbl;

    interface __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CXaml__CMedia__CTimelineMarker
    {
        CONST_VTBL struct __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CXaml__CMedia__CTimelineMarkerVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CXaml__CMedia__CTimelineMarker_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CXaml__CMedia__CTimelineMarker_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CXaml__CMedia__CTimelineMarker_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CXaml__CMedia__CTimelineMarker __x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CXaml__CMedia__CTimelineMarker;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CXaml__CMedia__CTimelineMarker;

    typedef struct __x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CXaml__CMedia__CTimelineMarkerVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CXaml__CMedia__CTimelineMarker* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CXaml__CMedia__CTimelineMarker* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CXaml__CMedia__CTimelineMarker* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CXaml__CMedia__CTimelineMarker* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CXaml__CMedia__CTimelineMarker* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CXaml__CMedia__CTimelineMarker* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* GetAt)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CXaml__CMedia__CTimelineMarker* This,
        UINT32 index,
        __x_ABI_CWindows_CUI_CXaml_CMedia_CITimelineMarker** result);
    HRESULT (STDMETHODCALLTYPE* get_Size)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CXaml__CMedia__CTimelineMarker* This,
        UINT32* result);
    HRESULT (STDMETHODCALLTYPE* GetView)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CXaml__CMedia__CTimelineMarker* This,
        __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CXaml__CMedia__CTimelineMarker** result);
    HRESULT (STDMETHODCALLTYPE* IndexOf)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CXaml__CMedia__CTimelineMarker* This,
        __x_ABI_CWindows_CUI_CXaml_CMedia_CITimelineMarker* value,
        UINT32* index,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* SetAt)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CXaml__CMedia__CTimelineMarker* This,
        UINT32 index,
        __x_ABI_CWindows_CUI_CXaml_CMedia_CITimelineMarker* value);
    HRESULT (STDMETHODCALLTYPE* InsertAt)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CXaml__CMedia__CTimelineMarker* This,
        UINT32 index,
        __x_ABI_CWindows_CUI_CXaml_CMedia_CITimelineMarker* value);
    HRESULT (STDMETHODCALLTYPE* RemoveAt)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CXaml__CMedia__CTimelineMarker* This,
        UINT32 index);
    HRESULT (STDMETHODCALLTYPE* Append)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CXaml__CMedia__CTimelineMarker* This,
        __x_ABI_CWindows_CUI_CXaml_CMedia_CITimelineMarker* value);
    HRESULT (STDMETHODCALLTYPE* RemoveAtEnd)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CXaml__CMedia__CTimelineMarker* This);
    HRESULT (STDMETHODCALLTYPE* Clear)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CXaml__CMedia__CTimelineMarker* This);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CXaml__CMedia__CTimelineMarker* This,
        UINT32 startIndex,
        UINT32 itemsLength,
        __x_ABI_CWindows_CUI_CXaml_CMedia_CITimelineMarker** items,
        UINT32* result);
    HRESULT (STDMETHODCALLTYPE* ReplaceAll)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CXaml__CMedia__CTimelineMarker* This,
        UINT32 itemsLength,
        __x_ABI_CWindows_CUI_CXaml_CMedia_CITimelineMarker** items);

        END_INTERFACE
    } __x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CXaml__CMedia__CTimelineMarkerVtbl;

    interface __x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CXaml__CMedia__CTimelineMarker
    {
        CONST_VTBL struct __x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CXaml__CMedia__CTimelineMarkerVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CXaml__CMedia__CTimelineMarker_INTERFACE_DEFINED__
    
#ifndef ____x_ABI_CWindows_CUI_CXaml_CMedia_CITimelineMarkerRoutedEventHandler_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CMedia_CITimelineMarkerRoutedEventHandler_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CMedia_CITimelineMarkerRoutedEventHandler __x_ABI_CWindows_CUI_CXaml_CMedia_CITimelineMarkerRoutedEventHandler;

#endif // ____x_ABI_CWindows_CUI_CXaml_CMedia_CITimelineMarkerRoutedEventHandler_FWD_DEFINED__

    #ifndef ____x_ABI_CWindows_CUI_CXaml_CNavigation_CIFrameNavigationOptions_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CNavigation_CIFrameNavigationOptions_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CNavigation_CIFrameNavigationOptions __x_ABI_CWindows_CUI_CXaml_CNavigation_CIFrameNavigationOptions;

#endif // ____x_ABI_CWindows_CUI_CXaml_CNavigation_CIFrameNavigationOptions_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CNavigation_CILoadCompletedEventHandler_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CNavigation_CILoadCompletedEventHandler_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CNavigation_CILoadCompletedEventHandler __x_ABI_CWindows_CUI_CXaml_CNavigation_CILoadCompletedEventHandler;

#endif // ____x_ABI_CWindows_CUI_CXaml_CNavigation_CILoadCompletedEventHandler_FWD_DEFINED__

    #ifndef ____x_ABI_CWindows_CUI_CXaml_CNavigation_CINavigatedEventHandler_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CNavigation_CINavigatedEventHandler_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CNavigation_CINavigatedEventHandler __x_ABI_CWindows_CUI_CXaml_CNavigation_CINavigatedEventHandler;

#endif // ____x_ABI_CWindows_CUI_CXaml_CNavigation_CINavigatedEventHandler_FWD_DEFINED__

    #ifndef ____x_ABI_CWindows_CUI_CXaml_CNavigation_CINavigatingCancelEventArgs_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CNavigation_CINavigatingCancelEventArgs_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CNavigation_CINavigatingCancelEventArgs __x_ABI_CWindows_CUI_CXaml_CNavigation_CINavigatingCancelEventArgs;

#endif // ____x_ABI_CWindows_CUI_CXaml_CNavigation_CINavigatingCancelEventArgs_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CNavigation_CINavigatingCancelEventHandler_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CNavigation_CINavigatingCancelEventHandler_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CNavigation_CINavigatingCancelEventHandler __x_ABI_CWindows_CUI_CXaml_CNavigation_CINavigatingCancelEventHandler;

#endif // ____x_ABI_CWindows_CUI_CXaml_CNavigation_CINavigatingCancelEventHandler_FWD_DEFINED__

    typedef enum __x_ABI_CWindows_CUI_CXaml_CNavigation_CNavigationCacheMode __x_ABI_CWindows_CUI_CXaml_CNavigation_CNavigationCacheMode;

#ifndef ____x_ABI_CWindows_CUI_CXaml_CNavigation_CINavigationEventArgs_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CNavigation_CINavigationEventArgs_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CNavigation_CINavigationEventArgs __x_ABI_CWindows_CUI_CXaml_CNavigation_CINavigationEventArgs;

#endif // ____x_ABI_CWindows_CUI_CXaml_CNavigation_CINavigationEventArgs_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CNavigation_CINavigationFailedEventHandler_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CNavigation_CINavigationFailedEventHandler_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CNavigation_CINavigationFailedEventHandler __x_ABI_CWindows_CUI_CXaml_CNavigation_CINavigationFailedEventHandler;

#endif // ____x_ABI_CWindows_CUI_CXaml_CNavigation_CINavigationFailedEventHandler_FWD_DEFINED__

    #ifndef ____x_ABI_CWindows_CUI_CXaml_CNavigation_CINavigationStoppedEventHandler_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CNavigation_CINavigationStoppedEventHandler_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CNavigation_CINavigationStoppedEventHandler __x_ABI_CWindows_CUI_CXaml_CNavigation_CINavigationStoppedEventHandler;

#endif // ____x_ABI_CWindows_CUI_CXaml_CNavigation_CINavigationStoppedEventHandler_FWD_DEFINED__

    typedef enum __x_ABI_CWindows_CUI_CXaml_COpticalMarginAlignment __x_ABI_CWindows_CUI_CXaml_COpticalMarginAlignment;

#ifndef ____x_ABI_CWindows_CUI_CXaml_CIRoutedEventHandler_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CIRoutedEventHandler_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CIRoutedEventHandler __x_ABI_CWindows_CUI_CXaml_CIRoutedEventHandler;

#endif // ____x_ABI_CWindows_CUI_CXaml_CIRoutedEventHandler_FWD_DEFINED__

    #ifndef ____x_ABI_CWindows_CUI_CXaml_CIStyle_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CIStyle_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CIStyle __x_ABI_CWindows_CUI_CXaml_CIStyle;

#endif // ____x_ABI_CWindows_CUI_CXaml_CIStyle_FWD_DEFINED__

typedef enum __x_ABI_CWindows_CUI_CXaml_CTextAlignment __x_ABI_CWindows_CUI_CXaml_CTextAlignment;

typedef enum __x_ABI_CWindows_CUI_CXaml_CTextLineBounds __x_ABI_CWindows_CUI_CXaml_CTextLineBounds;

typedef enum __x_ABI_CWindows_CUI_CXaml_CTextReadingOrder __x_ABI_CWindows_CUI_CXaml_CTextReadingOrder;

typedef enum __x_ABI_CWindows_CUI_CXaml_CTextTrimming __x_ABI_CWindows_CUI_CXaml_CTextTrimming;

typedef enum __x_ABI_CWindows_CUI_CXaml_CTextWrapping __x_ABI_CWindows_CUI_CXaml_CTextWrapping;

typedef struct __x_ABI_CWindows_CUI_CXaml_CThickness __x_ABI_CWindows_CUI_CXaml_CThickness;

typedef enum __x_ABI_CWindows_CUI_CXaml_CVerticalAlignment __x_ABI_CWindows_CUI_CXaml_CVerticalAlignment;

typedef enum __x_ABI_CWindows_CUI_CXaml_CVisibility __x_ABI_CWindows_CUI_CXaml_CVisibility;

#ifndef ____x_ABI_CWindows_CWeb_CHttp_CIHttpRequestMessage_FWD_DEFINED__
#define ____x_ABI_CWindows_CWeb_CHttp_CIHttpRequestMessage_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CWeb_CHttp_CIHttpRequestMessage __x_ABI_CWindows_CWeb_CHttp_CIHttpRequestMessage;

#endif // ____x_ABI_CWindows_CWeb_CHttp_CIHttpRequestMessage_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CWeb_CHttp_CIHttpResponseMessage_FWD_DEFINED__
#define ____x_ABI_CWindows_CWeb_CHttp_CIHttpResponseMessage_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CWeb_CHttp_CIHttpResponseMessage __x_ABI_CWindows_CWeb_CHttp_CIHttpResponseMessage;

#endif // ____x_ABI_CWindows_CWeb_CHttp_CIHttpResponseMessage_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CWeb_CIUriToStreamResolver_FWD_DEFINED__
#define ____x_ABI_CWindows_CWeb_CIUriToStreamResolver_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CWeb_CIUriToStreamResolver __x_ABI_CWindows_CWeb_CIUriToStreamResolver;

#endif // ____x_ABI_CWindows_CWeb_CIUriToStreamResolver_FWD_DEFINED__

typedef enum __x_ABI_CWindows_CWeb_CWebErrorStatus __x_ABI_CWindows_CWeb_CWebErrorStatus;

typedef enum __x_ABI_CWindows_CUI_CXaml_CControls_CAppBarClosedDisplayMode __x_ABI_CWindows_CUI_CXaml_CControls_CAppBarClosedDisplayMode;

typedef enum __x_ABI_CWindows_CUI_CXaml_CControls_CAutoSuggestionBoxTextChangeReason __x_ABI_CWindows_CUI_CXaml_CControls_CAutoSuggestionBoxTextChangeReason;

typedef enum __x_ABI_CWindows_CUI_CXaml_CControls_CBackgroundSizing __x_ABI_CWindows_CUI_CXaml_CControls_CBackgroundSizing;

typedef enum __x_ABI_CWindows_CUI_CXaml_CControls_CCalendarViewDisplayMode __x_ABI_CWindows_CUI_CXaml_CControls_CCalendarViewDisplayMode;

typedef enum __x_ABI_CWindows_CUI_CXaml_CControls_CCalendarViewSelectionMode __x_ABI_CWindows_CUI_CXaml_CControls_CCalendarViewSelectionMode;

typedef enum __x_ABI_CWindows_CUI_CXaml_CControls_CCandidateWindowAlignment __x_ABI_CWindows_CUI_CXaml_CControls_CCandidateWindowAlignment;

typedef enum __x_ABI_CWindows_CUI_CXaml_CControls_CCharacterCasing __x_ABI_CWindows_CUI_CXaml_CControls_CCharacterCasing;

typedef enum __x_ABI_CWindows_CUI_CXaml_CControls_CColorSpectrumComponents __x_ABI_CWindows_CUI_CXaml_CControls_CColorSpectrumComponents;

typedef enum __x_ABI_CWindows_CUI_CXaml_CControls_CColorSpectrumShape __x_ABI_CWindows_CUI_CXaml_CControls_CColorSpectrumShape;

typedef enum __x_ABI_CWindows_CUI_CXaml_CControls_CComboBoxSelectionChangedTrigger __x_ABI_CWindows_CUI_CXaml_CControls_CComboBoxSelectionChangedTrigger;

typedef enum __x_ABI_CWindows_CUI_CXaml_CControls_CCommandBarDefaultLabelPosition __x_ABI_CWindows_CUI_CXaml_CControls_CCommandBarDefaultLabelPosition;

typedef enum __x_ABI_CWindows_CUI_CXaml_CControls_CCommandBarDynamicOverflowAction __x_ABI_CWindows_CUI_CXaml_CControls_CCommandBarDynamicOverflowAction;

typedef enum __x_ABI_CWindows_CUI_CXaml_CControls_CCommandBarLabelPosition __x_ABI_CWindows_CUI_CXaml_CControls_CCommandBarLabelPosition;

typedef enum __x_ABI_CWindows_CUI_CXaml_CControls_CCommandBarOverflowButtonVisibility __x_ABI_CWindows_CUI_CXaml_CControls_CCommandBarOverflowButtonVisibility;

typedef enum __x_ABI_CWindows_CUI_CXaml_CControls_CContentDialogButton __x_ABI_CWindows_CUI_CXaml_CControls_CContentDialogButton;

typedef enum __x_ABI_CWindows_CUI_CXaml_CControls_CContentDialogPlacement __x_ABI_CWindows_CUI_CXaml_CControls_CContentDialogPlacement;

typedef enum __x_ABI_CWindows_CUI_CXaml_CControls_CContentLinkChangeKind __x_ABI_CWindows_CUI_CXaml_CControls_CContentLinkChangeKind;

typedef enum __x_ABI_CWindows_CUI_CXaml_CControls_CDisabledFormattingAccelerators __x_ABI_CWindows_CUI_CXaml_CControls_CDisabledFormattingAccelerators;

typedef enum __x_ABI_CWindows_CUI_CXaml_CControls_CHandwritingPanelPlacementAlignment __x_ABI_CWindows_CUI_CXaml_CControls_CHandwritingPanelPlacementAlignment;

typedef enum __x_ABI_CWindows_CUI_CXaml_CControls_CIncrementalLoadingTrigger __x_ABI_CWindows_CUI_CXaml_CControls_CIncrementalLoadingTrigger;

typedef enum __x_ABI_CWindows_CUI_CXaml_CControls_CInkToolbarButtonFlyoutPlacement __x_ABI_CWindows_CUI_CXaml_CControls_CInkToolbarButtonFlyoutPlacement;

typedef enum __x_ABI_CWindows_CUI_CXaml_CControls_CInkToolbarFlyoutItemKind __x_ABI_CWindows_CUI_CXaml_CControls_CInkToolbarFlyoutItemKind;

typedef enum __x_ABI_CWindows_CUI_CXaml_CControls_CInkToolbarInitialControls __x_ABI_CWindows_CUI_CXaml_CControls_CInkToolbarInitialControls;

typedef enum __x_ABI_CWindows_CUI_CXaml_CControls_CInkToolbarMenuKind __x_ABI_CWindows_CUI_CXaml_CControls_CInkToolbarMenuKind;

typedef enum __x_ABI_CWindows_CUI_CXaml_CControls_CInkToolbarStencilKind __x_ABI_CWindows_CUI_CXaml_CControls_CInkToolbarStencilKind;

typedef enum __x_ABI_CWindows_CUI_CXaml_CControls_CInkToolbarToggle __x_ABI_CWindows_CUI_CXaml_CControls_CInkToolbarToggle;

typedef enum __x_ABI_CWindows_CUI_CXaml_CControls_CInkToolbarTool __x_ABI_CWindows_CUI_CXaml_CControls_CInkToolbarTool;

typedef enum __x_ABI_CWindows_CUI_CXaml_CControls_CItemsUpdatingScrollMode __x_ABI_CWindows_CUI_CXaml_CControls_CItemsUpdatingScrollMode;

typedef enum __x_ABI_CWindows_CUI_CXaml_CControls_CLightDismissOverlayMode __x_ABI_CWindows_CUI_CXaml_CControls_CLightDismissOverlayMode;

typedef enum __x_ABI_CWindows_CUI_CXaml_CControls_CListPickerFlyoutSelectionMode __x_ABI_CWindows_CUI_CXaml_CControls_CListPickerFlyoutSelectionMode;

typedef enum __x_ABI_CWindows_CUI_CXaml_CControls_CListViewReorderMode __x_ABI_CWindows_CUI_CXaml_CControls_CListViewReorderMode;

typedef enum __x_ABI_CWindows_CUI_CXaml_CControls_CListViewSelectionMode __x_ABI_CWindows_CUI_CXaml_CControls_CListViewSelectionMode;

typedef enum __x_ABI_CWindows_CUI_CXaml_CControls_CNavigationViewBackButtonVisible __x_ABI_CWindows_CUI_CXaml_CControls_CNavigationViewBackButtonVisible;

typedef enum __x_ABI_CWindows_CUI_CXaml_CControls_CNavigationViewDisplayMode __x_ABI_CWindows_CUI_CXaml_CControls_CNavigationViewDisplayMode;

typedef enum __x_ABI_CWindows_CUI_CXaml_CControls_CNavigationViewOverflowLabelMode __x_ABI_CWindows_CUI_CXaml_CControls_CNavigationViewOverflowLabelMode;

typedef enum __x_ABI_CWindows_CUI_CXaml_CControls_CNavigationViewPaneDisplayMode __x_ABI_CWindows_CUI_CXaml_CControls_CNavigationViewPaneDisplayMode;

typedef enum __x_ABI_CWindows_CUI_CXaml_CControls_CNavigationViewSelectionFollowsFocus __x_ABI_CWindows_CUI_CXaml_CControls_CNavigationViewSelectionFollowsFocus;

typedef enum __x_ABI_CWindows_CUI_CXaml_CControls_CNavigationViewShoulderNavigationEnabled __x_ABI_CWindows_CUI_CXaml_CControls_CNavigationViewShoulderNavigationEnabled;

typedef enum __x_ABI_CWindows_CUI_CXaml_CControls_COrientation __x_ABI_CWindows_CUI_CXaml_CControls_COrientation;

typedef enum __x_ABI_CWindows_CUI_CXaml_CControls_CPanelScrollingDirection __x_ABI_CWindows_CUI_CXaml_CControls_CPanelScrollingDirection;

typedef enum __x_ABI_CWindows_CUI_CXaml_CControls_CParallaxSourceOffsetKind __x_ABI_CWindows_CUI_CXaml_CControls_CParallaxSourceOffsetKind;

typedef enum __x_ABI_CWindows_CUI_CXaml_CControls_CPasswordRevealMode __x_ABI_CWindows_CUI_CXaml_CControls_CPasswordRevealMode;

typedef enum __x_ABI_CWindows_CUI_CXaml_CControls_CPivotHeaderFocusVisualPlacement __x_ABI_CWindows_CUI_CXaml_CControls_CPivotHeaderFocusVisualPlacement;

typedef enum __x_ABI_CWindows_CUI_CXaml_CControls_CPivotSlideInAnimationGroup __x_ABI_CWindows_CUI_CXaml_CControls_CPivotSlideInAnimationGroup;

typedef enum __x_ABI_CWindows_CUI_CXaml_CControls_CRefreshPullDirection __x_ABI_CWindows_CUI_CXaml_CControls_CRefreshPullDirection;

typedef enum __x_ABI_CWindows_CUI_CXaml_CControls_CRefreshVisualizerOrientation __x_ABI_CWindows_CUI_CXaml_CControls_CRefreshVisualizerOrientation;

typedef enum __x_ABI_CWindows_CUI_CXaml_CControls_CRefreshVisualizerState __x_ABI_CWindows_CUI_CXaml_CControls_CRefreshVisualizerState;

typedef enum __x_ABI_CWindows_CUI_CXaml_CControls_CRequiresPointer __x_ABI_CWindows_CUI_CXaml_CControls_CRequiresPointer;

typedef enum __x_ABI_CWindows_CUI_CXaml_CControls_CRichEditClipboardFormat __x_ABI_CWindows_CUI_CXaml_CControls_CRichEditClipboardFormat;

typedef enum __x_ABI_CWindows_CUI_CXaml_CControls_CScrollBarVisibility __x_ABI_CWindows_CUI_CXaml_CControls_CScrollBarVisibility;

typedef enum __x_ABI_CWindows_CUI_CXaml_CControls_CScrollIntoViewAlignment __x_ABI_CWindows_CUI_CXaml_CControls_CScrollIntoViewAlignment;

typedef enum __x_ABI_CWindows_CUI_CXaml_CControls_CScrollMode __x_ABI_CWindows_CUI_CXaml_CControls_CScrollMode;

typedef enum __x_ABI_CWindows_CUI_CXaml_CControls_CSelectionMode __x_ABI_CWindows_CUI_CXaml_CControls_CSelectionMode;

typedef enum __x_ABI_CWindows_CUI_CXaml_CControls_CSnapPointsType __x_ABI_CWindows_CUI_CXaml_CControls_CSnapPointsType;

typedef enum __x_ABI_CWindows_CUI_CXaml_CControls_CSplitViewDisplayMode __x_ABI_CWindows_CUI_CXaml_CControls_CSplitViewDisplayMode;

typedef enum __x_ABI_CWindows_CUI_CXaml_CControls_CSplitViewPanePlacement __x_ABI_CWindows_CUI_CXaml_CControls_CSplitViewPanePlacement;

typedef enum __x_ABI_CWindows_CUI_CXaml_CControls_CStretchDirection __x_ABI_CWindows_CUI_CXaml_CControls_CStretchDirection;

typedef enum __x_ABI_CWindows_CUI_CXaml_CControls_CSwipeBehaviorOnInvoked __x_ABI_CWindows_CUI_CXaml_CControls_CSwipeBehaviorOnInvoked;

typedef enum __x_ABI_CWindows_CUI_CXaml_CControls_CSwipeMode __x_ABI_CWindows_CUI_CXaml_CControls_CSwipeMode;

typedef enum __x_ABI_CWindows_CUI_CXaml_CControls_CSymbol __x_ABI_CWindows_CUI_CXaml_CControls_CSymbol;

typedef enum __x_ABI_CWindows_CUI_CXaml_CControls_CTreeViewSelectionMode __x_ABI_CWindows_CUI_CXaml_CControls_CTreeViewSelectionMode;

typedef enum __x_ABI_CWindows_CUI_CXaml_CControls_CTwoPaneViewMode __x_ABI_CWindows_CUI_CXaml_CControls_CTwoPaneViewMode;

typedef enum __x_ABI_CWindows_CUI_CXaml_CControls_CTwoPaneViewPriority __x_ABI_CWindows_CUI_CXaml_CControls_CTwoPaneViewPriority;

typedef enum __x_ABI_CWindows_CUI_CXaml_CControls_CTwoPaneViewTallModeConfiguration __x_ABI_CWindows_CUI_CXaml_CControls_CTwoPaneViewTallModeConfiguration;

typedef enum __x_ABI_CWindows_CUI_CXaml_CControls_CTwoPaneViewWideModeConfiguration __x_ABI_CWindows_CUI_CXaml_CControls_CTwoPaneViewWideModeConfiguration;

typedef enum __x_ABI_CWindows_CUI_CXaml_CControls_CVirtualizationMode __x_ABI_CWindows_CUI_CXaml_CControls_CVirtualizationMode;

typedef enum __x_ABI_CWindows_CUI_CXaml_CControls_CWebViewExecutionMode __x_ABI_CWindows_CUI_CXaml_CControls_CWebViewExecutionMode;

typedef enum __x_ABI_CWindows_CUI_CXaml_CControls_CWebViewPermissionState __x_ABI_CWindows_CUI_CXaml_CControls_CWebViewPermissionState;

typedef enum __x_ABI_CWindows_CUI_CXaml_CControls_CWebViewPermissionType __x_ABI_CWindows_CUI_CXaml_CControls_CWebViewPermissionType;

typedef enum __x_ABI_CWindows_CUI_CXaml_CControls_CZoomMode __x_ABI_CWindows_CUI_CXaml_CControls_CZoomMode;

enum __x_ABI_CWindows_CUI_CXaml_CControls_CAppBarClosedDisplayMode
    {
        __x_ABI_CWindows_CUI_CXaml_CControls_CAppBarClosedDisplayMode_Compact = 0,
    __x_ABI_CWindows_CUI_CXaml_CControls_CAppBarClosedDisplayMode_Minimal = 1,
    __x_ABI_CWindows_CUI_CXaml_CControls_CAppBarClosedDisplayMode_Hidden = 2,
};

enum __x_ABI_CWindows_CUI_CXaml_CControls_CAutoSuggestionBoxTextChangeReason
    {
        __x_ABI_CWindows_CUI_CXaml_CControls_CAutoSuggestionBoxTextChangeReason_UserInput = 0,
    __x_ABI_CWindows_CUI_CXaml_CControls_CAutoSuggestionBoxTextChangeReason_ProgrammaticChange = 1,
    __x_ABI_CWindows_CUI_CXaml_CControls_CAutoSuggestionBoxTextChangeReason_SuggestionChosen = 2,
};

enum __x_ABI_CWindows_CUI_CXaml_CControls_CBackgroundSizing
    {
        __x_ABI_CWindows_CUI_CXaml_CControls_CBackgroundSizing_InnerBorderEdge = 0,
    __x_ABI_CWindows_CUI_CXaml_CControls_CBackgroundSizing_OuterBorderEdge = 1,
};

enum __x_ABI_CWindows_CUI_CXaml_CControls_CCalendarViewDisplayMode
    {
        __x_ABI_CWindows_CUI_CXaml_CControls_CCalendarViewDisplayMode_Month = 0,
    __x_ABI_CWindows_CUI_CXaml_CControls_CCalendarViewDisplayMode_Year = 1,
    __x_ABI_CWindows_CUI_CXaml_CControls_CCalendarViewDisplayMode_Decade = 2,
};

enum __x_ABI_CWindows_CUI_CXaml_CControls_CCalendarViewSelectionMode
    {
        __x_ABI_CWindows_CUI_CXaml_CControls_CCalendarViewSelectionMode_None = 0,
    __x_ABI_CWindows_CUI_CXaml_CControls_CCalendarViewSelectionMode_Single = 1,
    __x_ABI_CWindows_CUI_CXaml_CControls_CCalendarViewSelectionMode_Multiple = 2,
};

enum __x_ABI_CWindows_CUI_CXaml_CControls_CCandidateWindowAlignment
    {
        __x_ABI_CWindows_CUI_CXaml_CControls_CCandidateWindowAlignment_Default = 0,
    __x_ABI_CWindows_CUI_CXaml_CControls_CCandidateWindowAlignment_BottomEdge = 1,
};

enum __x_ABI_CWindows_CUI_CXaml_CControls_CCharacterCasing
    {
        __x_ABI_CWindows_CUI_CXaml_CControls_CCharacterCasing_Normal = 0,
    __x_ABI_CWindows_CUI_CXaml_CControls_CCharacterCasing_Lower = 1,
    __x_ABI_CWindows_CUI_CXaml_CControls_CCharacterCasing_Upper = 2,
};

enum __x_ABI_CWindows_CUI_CXaml_CControls_CClickMode
    {
        __x_ABI_CWindows_CUI_CXaml_CControls_CClickMode_Release = 0,
    __x_ABI_CWindows_CUI_CXaml_CControls_CClickMode_Press = 1,
    __x_ABI_CWindows_CUI_CXaml_CControls_CClickMode_Hover = 2,
};

enum __x_ABI_CWindows_CUI_CXaml_CControls_CColorPickerHsvChannel
    {
        __x_ABI_CWindows_CUI_CXaml_CControls_CColorPickerHsvChannel_Hue = 0,
    __x_ABI_CWindows_CUI_CXaml_CControls_CColorPickerHsvChannel_Saturation = 1,
    __x_ABI_CWindows_CUI_CXaml_CControls_CColorPickerHsvChannel_Value = 2,
    __x_ABI_CWindows_CUI_CXaml_CControls_CColorPickerHsvChannel_Alpha = 3,
};

enum __x_ABI_CWindows_CUI_CXaml_CControls_CColorSpectrumComponents
    {
        __x_ABI_CWindows_CUI_CXaml_CControls_CColorSpectrumComponents_HueValue = 0,
    __x_ABI_CWindows_CUI_CXaml_CControls_CColorSpectrumComponents_ValueHue = 1,
    __x_ABI_CWindows_CUI_CXaml_CControls_CColorSpectrumComponents_HueSaturation = 2,
    __x_ABI_CWindows_CUI_CXaml_CControls_CColorSpectrumComponents_SaturationHue = 3,
    __x_ABI_CWindows_CUI_CXaml_CControls_CColorSpectrumComponents_SaturationValue = 4,
    __x_ABI_CWindows_CUI_CXaml_CControls_CColorSpectrumComponents_ValueSaturation = 5,
};

enum __x_ABI_CWindows_CUI_CXaml_CControls_CColorSpectrumShape
    {
        __x_ABI_CWindows_CUI_CXaml_CControls_CColorSpectrumShape_Box = 0,
    __x_ABI_CWindows_CUI_CXaml_CControls_CColorSpectrumShape_Ring = 1,
};

enum __x_ABI_CWindows_CUI_CXaml_CControls_CComboBoxSelectionChangedTrigger
    {
        __x_ABI_CWindows_CUI_CXaml_CControls_CComboBoxSelectionChangedTrigger_Committed = 0,
    __x_ABI_CWindows_CUI_CXaml_CControls_CComboBoxSelectionChangedTrigger_Always = 1,
};

enum __x_ABI_CWindows_CUI_CXaml_CControls_CCommandBarDefaultLabelPosition
    {
        __x_ABI_CWindows_CUI_CXaml_CControls_CCommandBarDefaultLabelPosition_Bottom = 0,
    __x_ABI_CWindows_CUI_CXaml_CControls_CCommandBarDefaultLabelPosition_Right = 1,
    __x_ABI_CWindows_CUI_CXaml_CControls_CCommandBarDefaultLabelPosition_Collapsed = 2,
};

enum __x_ABI_CWindows_CUI_CXaml_CControls_CCommandBarDynamicOverflowAction
    {
        __x_ABI_CWindows_CUI_CXaml_CControls_CCommandBarDynamicOverflowAction_AddingToOverflow = 0,
    __x_ABI_CWindows_CUI_CXaml_CControls_CCommandBarDynamicOverflowAction_RemovingFromOverflow = 1,
};

enum __x_ABI_CWindows_CUI_CXaml_CControls_CCommandBarLabelPosition
    {
        __x_ABI_CWindows_CUI_CXaml_CControls_CCommandBarLabelPosition_Default = 0,
    __x_ABI_CWindows_CUI_CXaml_CControls_CCommandBarLabelPosition_Collapsed = 1,
};

enum __x_ABI_CWindows_CUI_CXaml_CControls_CCommandBarOverflowButtonVisibility
    {
        __x_ABI_CWindows_CUI_CXaml_CControls_CCommandBarOverflowButtonVisibility_Auto = 0,
    __x_ABI_CWindows_CUI_CXaml_CControls_CCommandBarOverflowButtonVisibility_Visible = 1,
    __x_ABI_CWindows_CUI_CXaml_CControls_CCommandBarOverflowButtonVisibility_Collapsed = 2,
};

enum __x_ABI_CWindows_CUI_CXaml_CControls_CContentDialogButton
    {
        __x_ABI_CWindows_CUI_CXaml_CControls_CContentDialogButton_None = 0,
    __x_ABI_CWindows_CUI_CXaml_CControls_CContentDialogButton_Primary = 1,
    __x_ABI_CWindows_CUI_CXaml_CControls_CContentDialogButton_Secondary = 2,
    __x_ABI_CWindows_CUI_CXaml_CControls_CContentDialogButton_Close = 3,
};

enum __x_ABI_CWindows_CUI_CXaml_CControls_CContentDialogPlacement
    {
        __x_ABI_CWindows_CUI_CXaml_CControls_CContentDialogPlacement_Popup = 0,
    __x_ABI_CWindows_CUI_CXaml_CControls_CContentDialogPlacement_InPlace = 1,
};

enum __x_ABI_CWindows_CUI_CXaml_CControls_CContentDialogResult
    {
        __x_ABI_CWindows_CUI_CXaml_CControls_CContentDialogResult_None = 0,
    __x_ABI_CWindows_CUI_CXaml_CControls_CContentDialogResult_Primary = 1,
    __x_ABI_CWindows_CUI_CXaml_CControls_CContentDialogResult_Secondary = 2,
};

enum __x_ABI_CWindows_CUI_CXaml_CControls_CContentLinkChangeKind
    {
        __x_ABI_CWindows_CUI_CXaml_CControls_CContentLinkChangeKind_Inserted = 0,
    __x_ABI_CWindows_CUI_CXaml_CControls_CContentLinkChangeKind_Removed = 1,
    __x_ABI_CWindows_CUI_CXaml_CControls_CContentLinkChangeKind_Edited = 2,
};

enum __x_ABI_CWindows_CUI_CXaml_CControls_CDisabledFormattingAccelerators
    {
        __x_ABI_CWindows_CUI_CXaml_CControls_CDisabledFormattingAccelerators_None = 0,
    __x_ABI_CWindows_CUI_CXaml_CControls_CDisabledFormattingAccelerators_Bold = 0x1,
    __x_ABI_CWindows_CUI_CXaml_CControls_CDisabledFormattingAccelerators_Italic = 0x2,
    __x_ABI_CWindows_CUI_CXaml_CControls_CDisabledFormattingAccelerators_Underline = 0x4,
    __x_ABI_CWindows_CUI_CXaml_CControls_CDisabledFormattingAccelerators_All = 0xffffffff,
};

enum __x_ABI_CWindows_CUI_CXaml_CControls_CHandwritingPanelPlacementAlignment
    {
        __x_ABI_CWindows_CUI_CXaml_CControls_CHandwritingPanelPlacementAlignment_Auto = 0,
    __x_ABI_CWindows_CUI_CXaml_CControls_CHandwritingPanelPlacementAlignment_TopLeft = 1,
    __x_ABI_CWindows_CUI_CXaml_CControls_CHandwritingPanelPlacementAlignment_TopRight = 2,
    __x_ABI_CWindows_CUI_CXaml_CControls_CHandwritingPanelPlacementAlignment_BottomLeft = 3,
    __x_ABI_CWindows_CUI_CXaml_CControls_CHandwritingPanelPlacementAlignment_BottomRight = 4,
};

enum __x_ABI_CWindows_CUI_CXaml_CControls_CIncrementalLoadingTrigger
    {
        __x_ABI_CWindows_CUI_CXaml_CControls_CIncrementalLoadingTrigger_None = 0,
    __x_ABI_CWindows_CUI_CXaml_CControls_CIncrementalLoadingTrigger_Edge = 1,
};

enum __x_ABI_CWindows_CUI_CXaml_CControls_CInkToolbarButtonFlyoutPlacement
    {
        __x_ABI_CWindows_CUI_CXaml_CControls_CInkToolbarButtonFlyoutPlacement_Auto = 0,
    __x_ABI_CWindows_CUI_CXaml_CControls_CInkToolbarButtonFlyoutPlacement_Top = 1,
    __x_ABI_CWindows_CUI_CXaml_CControls_CInkToolbarButtonFlyoutPlacement_Bottom = 2,
    __x_ABI_CWindows_CUI_CXaml_CControls_CInkToolbarButtonFlyoutPlacement_Left = 3,
    __x_ABI_CWindows_CUI_CXaml_CControls_CInkToolbarButtonFlyoutPlacement_Right = 4,
};

enum __x_ABI_CWindows_CUI_CXaml_CControls_CInkToolbarFlyoutItemKind
    {
        __x_ABI_CWindows_CUI_CXaml_CControls_CInkToolbarFlyoutItemKind_Simple = 0,
    __x_ABI_CWindows_CUI_CXaml_CControls_CInkToolbarFlyoutItemKind_Radio = 1,
    __x_ABI_CWindows_CUI_CXaml_CControls_CInkToolbarFlyoutItemKind_Check = 2,
    __x_ABI_CWindows_CUI_CXaml_CControls_CInkToolbarFlyoutItemKind_RadioCheck = 3,
};

enum __x_ABI_CWindows_CUI_CXaml_CControls_CInkToolbarInitialControls
    {
        __x_ABI_CWindows_CUI_CXaml_CControls_CInkToolbarInitialControls_All = 0,
    __x_ABI_CWindows_CUI_CXaml_CControls_CInkToolbarInitialControls_None = 1,
    __x_ABI_CWindows_CUI_CXaml_CControls_CInkToolbarInitialControls_PensOnly = 2,
    __x_ABI_CWindows_CUI_CXaml_CControls_CInkToolbarInitialControls_AllExceptPens = 3,
};

enum __x_ABI_CWindows_CUI_CXaml_CControls_CInkToolbarMenuKind
    {
        __x_ABI_CWindows_CUI_CXaml_CControls_CInkToolbarMenuKind_Stencil = 0,
};

enum __x_ABI_CWindows_CUI_CXaml_CControls_CInkToolbarStencilKind
    {
        __x_ABI_CWindows_CUI_CXaml_CControls_CInkToolbarStencilKind_Ruler = 0,
    __x_ABI_CWindows_CUI_CXaml_CControls_CInkToolbarStencilKind_Protractor = 1,
};

enum __x_ABI_CWindows_CUI_CXaml_CControls_CInkToolbarToggle
    {
        __x_ABI_CWindows_CUI_CXaml_CControls_CInkToolbarToggle_Ruler = 0,
    __x_ABI_CWindows_CUI_CXaml_CControls_CInkToolbarToggle_Custom = 1,
};

enum __x_ABI_CWindows_CUI_CXaml_CControls_CInkToolbarTool
    {
        __x_ABI_CWindows_CUI_CXaml_CControls_CInkToolbarTool_BallpointPen = 0,
    __x_ABI_CWindows_CUI_CXaml_CControls_CInkToolbarTool_Pencil = 1,
    __x_ABI_CWindows_CUI_CXaml_CControls_CInkToolbarTool_Highlighter = 2,
    __x_ABI_CWindows_CUI_CXaml_CControls_CInkToolbarTool_Eraser = 3,
    __x_ABI_CWindows_CUI_CXaml_CControls_CInkToolbarTool_CustomPen = 4,
    __x_ABI_CWindows_CUI_CXaml_CControls_CInkToolbarTool_CustomTool = 5,
};

enum __x_ABI_CWindows_CUI_CXaml_CControls_CItemsUpdatingScrollMode
    {
        __x_ABI_CWindows_CUI_CXaml_CControls_CItemsUpdatingScrollMode_KeepItemsInView = 0,
    __x_ABI_CWindows_CUI_CXaml_CControls_CItemsUpdatingScrollMode_KeepScrollOffset = 1,
    __x_ABI_CWindows_CUI_CXaml_CControls_CItemsUpdatingScrollMode_KeepLastItemInView = 2,
};

enum __x_ABI_CWindows_CUI_CXaml_CControls_CLightDismissOverlayMode
    {
        __x_ABI_CWindows_CUI_CXaml_CControls_CLightDismissOverlayMode_Auto = 0,
    __x_ABI_CWindows_CUI_CXaml_CControls_CLightDismissOverlayMode_On = 1,
    __x_ABI_CWindows_CUI_CXaml_CControls_CLightDismissOverlayMode_Off = 2,
};

enum __x_ABI_CWindows_CUI_CXaml_CControls_CListPickerFlyoutSelectionMode
    {
        __x_ABI_CWindows_CUI_CXaml_CControls_CListPickerFlyoutSelectionMode_Single = 0,
    __x_ABI_CWindows_CUI_CXaml_CControls_CListPickerFlyoutSelectionMode_Multiple = 1,
};

enum __x_ABI_CWindows_CUI_CXaml_CControls_CListViewReorderMode
    {
        __x_ABI_CWindows_CUI_CXaml_CControls_CListViewReorderMode_Disabled = 0,
    __x_ABI_CWindows_CUI_CXaml_CControls_CListViewReorderMode_Enabled = 1,
};

enum __x_ABI_CWindows_CUI_CXaml_CControls_CListViewSelectionMode
    {
        __x_ABI_CWindows_CUI_CXaml_CControls_CListViewSelectionMode_None = 0,
    __x_ABI_CWindows_CUI_CXaml_CControls_CListViewSelectionMode_Single = 1,
    __x_ABI_CWindows_CUI_CXaml_CControls_CListViewSelectionMode_Multiple = 2,
    __x_ABI_CWindows_CUI_CXaml_CControls_CListViewSelectionMode_Extended = 3,
};

enum __x_ABI_CWindows_CUI_CXaml_CControls_CNavigationViewBackButtonVisible
    {
        __x_ABI_CWindows_CUI_CXaml_CControls_CNavigationViewBackButtonVisible_Collapsed = 0,
    __x_ABI_CWindows_CUI_CXaml_CControls_CNavigationViewBackButtonVisible_Visible = 1,
    __x_ABI_CWindows_CUI_CXaml_CControls_CNavigationViewBackButtonVisible_Auto = 2,
};

enum __x_ABI_CWindows_CUI_CXaml_CControls_CNavigationViewDisplayMode
    {
        __x_ABI_CWindows_CUI_CXaml_CControls_CNavigationViewDisplayMode_Minimal = 0,
    __x_ABI_CWindows_CUI_CXaml_CControls_CNavigationViewDisplayMode_Compact = 1,
    __x_ABI_CWindows_CUI_CXaml_CControls_CNavigationViewDisplayMode_Expanded = 2,
};

enum __x_ABI_CWindows_CUI_CXaml_CControls_CNavigationViewOverflowLabelMode
    {
        __x_ABI_CWindows_CUI_CXaml_CControls_CNavigationViewOverflowLabelMode_MoreLabel = 0,
    __x_ABI_CWindows_CUI_CXaml_CControls_CNavigationViewOverflowLabelMode_NoLabel = 1,
};

enum __x_ABI_CWindows_CUI_CXaml_CControls_CNavigationViewPaneDisplayMode
    {
        __x_ABI_CWindows_CUI_CXaml_CControls_CNavigationViewPaneDisplayMode_Auto = 0,
    __x_ABI_CWindows_CUI_CXaml_CControls_CNavigationViewPaneDisplayMode_Left = 1,
    __x_ABI_CWindows_CUI_CXaml_CControls_CNavigationViewPaneDisplayMode_Top = 2,
    __x_ABI_CWindows_CUI_CXaml_CControls_CNavigationViewPaneDisplayMode_LeftCompact = 3,
    __x_ABI_CWindows_CUI_CXaml_CControls_CNavigationViewPaneDisplayMode_LeftMinimal = 4,
};

enum __x_ABI_CWindows_CUI_CXaml_CControls_CNavigationViewSelectionFollowsFocus
    {
        __x_ABI_CWindows_CUI_CXaml_CControls_CNavigationViewSelectionFollowsFocus_Disabled = 0,
    __x_ABI_CWindows_CUI_CXaml_CControls_CNavigationViewSelectionFollowsFocus_Enabled = 1,
};

enum __x_ABI_CWindows_CUI_CXaml_CControls_CNavigationViewShoulderNavigationEnabled
    {
        __x_ABI_CWindows_CUI_CXaml_CControls_CNavigationViewShoulderNavigationEnabled_WhenSelectionFollowsFocus = 0,
    __x_ABI_CWindows_CUI_CXaml_CControls_CNavigationViewShoulderNavigationEnabled_Always = 1,
    __x_ABI_CWindows_CUI_CXaml_CControls_CNavigationViewShoulderNavigationEnabled_Never = 2,
};

enum __x_ABI_CWindows_CUI_CXaml_CControls_COrientation
    {
        __x_ABI_CWindows_CUI_CXaml_CControls_COrientation_Vertical = 0,
    __x_ABI_CWindows_CUI_CXaml_CControls_COrientation_Horizontal = 1,
};

enum __x_ABI_CWindows_CUI_CXaml_CControls_CPanelScrollingDirection
    {
        __x_ABI_CWindows_CUI_CXaml_CControls_CPanelScrollingDirection_None = 0,
    __x_ABI_CWindows_CUI_CXaml_CControls_CPanelScrollingDirection_Forward = 1,
    __x_ABI_CWindows_CUI_CXaml_CControls_CPanelScrollingDirection_Backward = 2,
};

enum __x_ABI_CWindows_CUI_CXaml_CControls_CParallaxSourceOffsetKind
    {
        __x_ABI_CWindows_CUI_CXaml_CControls_CParallaxSourceOffsetKind_Absolute = 0,
    __x_ABI_CWindows_CUI_CXaml_CControls_CParallaxSourceOffsetKind_Relative = 1,
};

enum __x_ABI_CWindows_CUI_CXaml_CControls_CPasswordRevealMode
    {
        __x_ABI_CWindows_CUI_CXaml_CControls_CPasswordRevealMode_Peek = 0,
    __x_ABI_CWindows_CUI_CXaml_CControls_CPasswordRevealMode_Hidden = 1,
    __x_ABI_CWindows_CUI_CXaml_CControls_CPasswordRevealMode_Visible = 2,
};

enum __x_ABI_CWindows_CUI_CXaml_CControls_CPivotHeaderFocusVisualPlacement
    {
        __x_ABI_CWindows_CUI_CXaml_CControls_CPivotHeaderFocusVisualPlacement_ItemHeaders = 0,
    __x_ABI_CWindows_CUI_CXaml_CControls_CPivotHeaderFocusVisualPlacement_SelectedItemHeader = 1,
};

enum __x_ABI_CWindows_CUI_CXaml_CControls_CPivotSlideInAnimationGroup
    {
        __x_ABI_CWindows_CUI_CXaml_CControls_CPivotSlideInAnimationGroup_Default = 0,
    __x_ABI_CWindows_CUI_CXaml_CControls_CPivotSlideInAnimationGroup_GroupOne = 1,
    __x_ABI_CWindows_CUI_CXaml_CControls_CPivotSlideInAnimationGroup_GroupTwo = 2,
    __x_ABI_CWindows_CUI_CXaml_CControls_CPivotSlideInAnimationGroup_GroupThree = 3,
};

enum __x_ABI_CWindows_CUI_CXaml_CControls_CRefreshPullDirection
    {
        __x_ABI_CWindows_CUI_CXaml_CControls_CRefreshPullDirection_LeftToRight = 0,
    __x_ABI_CWindows_CUI_CXaml_CControls_CRefreshPullDirection_TopToBottom = 1,
    __x_ABI_CWindows_CUI_CXaml_CControls_CRefreshPullDirection_RightToLeft = 2,
    __x_ABI_CWindows_CUI_CXaml_CControls_CRefreshPullDirection_BottomToTop = 3,
};

enum __x_ABI_CWindows_CUI_CXaml_CControls_CRefreshVisualizerOrientation
    {
        __x_ABI_CWindows_CUI_CXaml_CControls_CRefreshVisualizerOrientation_Auto = 0,
    __x_ABI_CWindows_CUI_CXaml_CControls_CRefreshVisualizerOrientation_Normal = 1,
    __x_ABI_CWindows_CUI_CXaml_CControls_CRefreshVisualizerOrientation_Rotate90DegreesCounterclockwise = 2,
    __x_ABI_CWindows_CUI_CXaml_CControls_CRefreshVisualizerOrientation_Rotate270DegreesCounterclockwise = 3,
};

enum __x_ABI_CWindows_CUI_CXaml_CControls_CRefreshVisualizerState
    {
        __x_ABI_CWindows_CUI_CXaml_CControls_CRefreshVisualizerState_Idle = 0,
    __x_ABI_CWindows_CUI_CXaml_CControls_CRefreshVisualizerState_Peeking = 1,
    __x_ABI_CWindows_CUI_CXaml_CControls_CRefreshVisualizerState_Interacting = 2,
    __x_ABI_CWindows_CUI_CXaml_CControls_CRefreshVisualizerState_Pending = 3,
    __x_ABI_CWindows_CUI_CXaml_CControls_CRefreshVisualizerState_Refreshing = 4,
};

enum __x_ABI_CWindows_CUI_CXaml_CControls_CRequiresPointer
    {
        __x_ABI_CWindows_CUI_CXaml_CControls_CRequiresPointer_Never = 0,
    __x_ABI_CWindows_CUI_CXaml_CControls_CRequiresPointer_WhenEngaged = 1,
    __x_ABI_CWindows_CUI_CXaml_CControls_CRequiresPointer_WhenFocused = 2,
};

enum __x_ABI_CWindows_CUI_CXaml_CControls_CRichEditClipboardFormat
    {
        __x_ABI_CWindows_CUI_CXaml_CControls_CRichEditClipboardFormat_AllFormats = 0,
    __x_ABI_CWindows_CUI_CXaml_CControls_CRichEditClipboardFormat_PlainText = 1,
};

enum __x_ABI_CWindows_CUI_CXaml_CControls_CScrollBarVisibility
    {
        __x_ABI_CWindows_CUI_CXaml_CControls_CScrollBarVisibility_Disabled = 0,
    __x_ABI_CWindows_CUI_CXaml_CControls_CScrollBarVisibility_Auto = 1,
    __x_ABI_CWindows_CUI_CXaml_CControls_CScrollBarVisibility_Hidden = 2,
    __x_ABI_CWindows_CUI_CXaml_CControls_CScrollBarVisibility_Visible = 3,
};

enum __x_ABI_CWindows_CUI_CXaml_CControls_CScrollIntoViewAlignment
    {
        __x_ABI_CWindows_CUI_CXaml_CControls_CScrollIntoViewAlignment_Default = 0,
    __x_ABI_CWindows_CUI_CXaml_CControls_CScrollIntoViewAlignment_Leading = 1,
};

enum __x_ABI_CWindows_CUI_CXaml_CControls_CScrollMode
    {
        __x_ABI_CWindows_CUI_CXaml_CControls_CScrollMode_Disabled = 0,
    __x_ABI_CWindows_CUI_CXaml_CControls_CScrollMode_Enabled = 1,
    __x_ABI_CWindows_CUI_CXaml_CControls_CScrollMode_Auto = 2,
};

enum __x_ABI_CWindows_CUI_CXaml_CControls_CSelectionMode
    {
        __x_ABI_CWindows_CUI_CXaml_CControls_CSelectionMode_Single = 0,
    __x_ABI_CWindows_CUI_CXaml_CControls_CSelectionMode_Multiple = 1,
    __x_ABI_CWindows_CUI_CXaml_CControls_CSelectionMode_Extended = 2,
};

enum __x_ABI_CWindows_CUI_CXaml_CControls_CSnapPointsType
    {
        __x_ABI_CWindows_CUI_CXaml_CControls_CSnapPointsType_None = 0,
    __x_ABI_CWindows_CUI_CXaml_CControls_CSnapPointsType_Optional = 1,
    __x_ABI_CWindows_CUI_CXaml_CControls_CSnapPointsType_Mandatory = 2,
    __x_ABI_CWindows_CUI_CXaml_CControls_CSnapPointsType_OptionalSingle = 3,
    __x_ABI_CWindows_CUI_CXaml_CControls_CSnapPointsType_MandatorySingle = 4,
};

enum __x_ABI_CWindows_CUI_CXaml_CControls_CSplitViewDisplayMode
    {
        __x_ABI_CWindows_CUI_CXaml_CControls_CSplitViewDisplayMode_Overlay = 0,
    __x_ABI_CWindows_CUI_CXaml_CControls_CSplitViewDisplayMode_Inline = 1,
    __x_ABI_CWindows_CUI_CXaml_CControls_CSplitViewDisplayMode_CompactOverlay = 2,
    __x_ABI_CWindows_CUI_CXaml_CControls_CSplitViewDisplayMode_CompactInline = 3,
};

enum __x_ABI_CWindows_CUI_CXaml_CControls_CSplitViewPanePlacement
    {
        __x_ABI_CWindows_CUI_CXaml_CControls_CSplitViewPanePlacement_Left = 0,
    __x_ABI_CWindows_CUI_CXaml_CControls_CSplitViewPanePlacement_Right = 1,
};

enum __x_ABI_CWindows_CUI_CXaml_CControls_CStretchDirection
    {
        __x_ABI_CWindows_CUI_CXaml_CControls_CStretchDirection_UpOnly = 0,
    __x_ABI_CWindows_CUI_CXaml_CControls_CStretchDirection_DownOnly = 1,
    __x_ABI_CWindows_CUI_CXaml_CControls_CStretchDirection_Both = 2,
};

enum __x_ABI_CWindows_CUI_CXaml_CControls_CSwipeBehaviorOnInvoked
    {
        __x_ABI_CWindows_CUI_CXaml_CControls_CSwipeBehaviorOnInvoked_Auto = 0,
    __x_ABI_CWindows_CUI_CXaml_CControls_CSwipeBehaviorOnInvoked_Close = 1,
    __x_ABI_CWindows_CUI_CXaml_CControls_CSwipeBehaviorOnInvoked_RemainOpen = 2,
};

enum __x_ABI_CWindows_CUI_CXaml_CControls_CSwipeMode
    {
        __x_ABI_CWindows_CUI_CXaml_CControls_CSwipeMode_Reveal = 0,
    __x_ABI_CWindows_CUI_CXaml_CControls_CSwipeMode_Execute = 1,
};

enum __x_ABI_CWindows_CUI_CXaml_CControls_CSymbol
    {
        __x_ABI_CWindows_CUI_CXaml_CControls_CSymbol_Previous = 57600,
    __x_ABI_CWindows_CUI_CXaml_CControls_CSymbol_Next = 57601,
    __x_ABI_CWindows_CUI_CXaml_CControls_CSymbol_Play = 57602,
    __x_ABI_CWindows_CUI_CXaml_CControls_CSymbol_Pause = 57603,
    __x_ABI_CWindows_CUI_CXaml_CControls_CSymbol_Edit = 57604,
    __x_ABI_CWindows_CUI_CXaml_CControls_CSymbol_Save = 57605,
    __x_ABI_CWindows_CUI_CXaml_CControls_CSymbol_Clear = 57606,
    __x_ABI_CWindows_CUI_CXaml_CControls_CSymbol_Delete = 57607,
    __x_ABI_CWindows_CUI_CXaml_CControls_CSymbol_Remove = 57608,
    __x_ABI_CWindows_CUI_CXaml_CControls_CSymbol_Add = 57609,
    __x_ABI_CWindows_CUI_CXaml_CControls_CSymbol_Cancel = 57610,
    __x_ABI_CWindows_CUI_CXaml_CControls_CSymbol_Accept = 57611,
    __x_ABI_CWindows_CUI_CXaml_CControls_CSymbol_More = 57612,
    __x_ABI_CWindows_CUI_CXaml_CControls_CSymbol_Redo = 57613,
    __x_ABI_CWindows_CUI_CXaml_CControls_CSymbol_Undo = 57614,
    __x_ABI_CWindows_CUI_CXaml_CControls_CSymbol_Home = 57615,
    __x_ABI_CWindows_CUI_CXaml_CControls_CSymbol_Up = 57616,
    __x_ABI_CWindows_CUI_CXaml_CControls_CSymbol_Forward = 57617,
    __x_ABI_CWindows_CUI_CXaml_CControls_CSymbol_Back = 57618,
    __x_ABI_CWindows_CUI_CXaml_CControls_CSymbol_Favorite = 57619,
    __x_ABI_CWindows_CUI_CXaml_CControls_CSymbol_Camera = 57620,
    __x_ABI_CWindows_CUI_CXaml_CControls_CSymbol_Setting = 57621,
    __x_ABI_CWindows_CUI_CXaml_CControls_CSymbol_Video = 57622,
    __x_ABI_CWindows_CUI_CXaml_CControls_CSymbol_Sync = 57623,
    __x_ABI_CWindows_CUI_CXaml_CControls_CSymbol_Download = 57624,
    __x_ABI_CWindows_CUI_CXaml_CControls_CSymbol_Mail = 57625,
    __x_ABI_CWindows_CUI_CXaml_CControls_CSymbol_Find = 57626,
    __x_ABI_CWindows_CUI_CXaml_CControls_CSymbol_Help = 57627,
    __x_ABI_CWindows_CUI_CXaml_CControls_CSymbol_Upload = 57628,
    __x_ABI_CWindows_CUI_CXaml_CControls_CSymbol_Emoji = 57629,
    __x_ABI_CWindows_CUI_CXaml_CControls_CSymbol_TwoPage = 57630,
    __x_ABI_CWindows_CUI_CXaml_CControls_CSymbol_LeaveChat = 57631,
    __x_ABI_CWindows_CUI_CXaml_CControls_CSymbol_MailForward = 57632,
    __x_ABI_CWindows_CUI_CXaml_CControls_CSymbol_Clock = 57633,
    __x_ABI_CWindows_CUI_CXaml_CControls_CSymbol_Send = 57634,
    __x_ABI_CWindows_CUI_CXaml_CControls_CSymbol_Crop = 57635,
    __x_ABI_CWindows_CUI_CXaml_CControls_CSymbol_RotateCamera = 57636,
    __x_ABI_CWindows_CUI_CXaml_CControls_CSymbol_People = 57637,
    __x_ABI_CWindows_CUI_CXaml_CControls_CSymbol_OpenPane = 57638,
    __x_ABI_CWindows_CUI_CXaml_CControls_CSymbol_ClosePane = 57639,
    __x_ABI_CWindows_CUI_CXaml_CControls_CSymbol_World = 57640,
    __x_ABI_CWindows_CUI_CXaml_CControls_CSymbol_Flag = 57641,
    __x_ABI_CWindows_CUI_CXaml_CControls_CSymbol_PreviewLink = 57642,
    __x_ABI_CWindows_CUI_CXaml_CControls_CSymbol_Globe = 57643,
    __x_ABI_CWindows_CUI_CXaml_CControls_CSymbol_Trim = 57644,
    __x_ABI_CWindows_CUI_CXaml_CControls_CSymbol_AttachCamera = 57645,
    __x_ABI_CWindows_CUI_CXaml_CControls_CSymbol_ZoomIn = 57646,
    __x_ABI_CWindows_CUI_CXaml_CControls_CSymbol_Bookmarks = 57647,
    __x_ABI_CWindows_CUI_CXaml_CControls_CSymbol_Document = 57648,
    __x_ABI_CWindows_CUI_CXaml_CControls_CSymbol_ProtectedDocument = 57649,
    __x_ABI_CWindows_CUI_CXaml_CControls_CSymbol_Page = 57650,
    __x_ABI_CWindows_CUI_CXaml_CControls_CSymbol_Bullets = 57651,
    __x_ABI_CWindows_CUI_CXaml_CControls_CSymbol_Comment = 57652,
    __x_ABI_CWindows_CUI_CXaml_CControls_CSymbol_MailFilled = 57653,
    __x_ABI_CWindows_CUI_CXaml_CControls_CSymbol_ContactInfo = 57654,
    __x_ABI_CWindows_CUI_CXaml_CControls_CSymbol_HangUp = 57655,
    __x_ABI_CWindows_CUI_CXaml_CControls_CSymbol_ViewAll = 57656,
    __x_ABI_CWindows_CUI_CXaml_CControls_CSymbol_MapPin = 57657,
    __x_ABI_CWindows_CUI_CXaml_CControls_CSymbol_Phone = 57658,
    __x_ABI_CWindows_CUI_CXaml_CControls_CSymbol_VideoChat = 57659,
    __x_ABI_CWindows_CUI_CXaml_CControls_CSymbol_Switch = 57660,
    __x_ABI_CWindows_CUI_CXaml_CControls_CSymbol_Contact = 57661,
    __x_ABI_CWindows_CUI_CXaml_CControls_CSymbol_Rename = 57662,
    __x_ABI_CWindows_CUI_CXaml_CControls_CSymbol_Pin = 57665,
    __x_ABI_CWindows_CUI_CXaml_CControls_CSymbol_MusicInfo = 57666,
    __x_ABI_CWindows_CUI_CXaml_CControls_CSymbol_Go = 57667,
    __x_ABI_CWindows_CUI_CXaml_CControls_CSymbol_Keyboard = 57668,
    __x_ABI_CWindows_CUI_CXaml_CControls_CSymbol_DockLeft = 57669,
    __x_ABI_CWindows_CUI_CXaml_CControls_CSymbol_DockRight = 57670,
    __x_ABI_CWindows_CUI_CXaml_CControls_CSymbol_DockBottom = 57671,
    __x_ABI_CWindows_CUI_CXaml_CControls_CSymbol_Remote = 57672,
    __x_ABI_CWindows_CUI_CXaml_CControls_CSymbol_Refresh = 57673,
    __x_ABI_CWindows_CUI_CXaml_CControls_CSymbol_Rotate = 57674,
    __x_ABI_CWindows_CUI_CXaml_CControls_CSymbol_Shuffle = 57675,
    __x_ABI_CWindows_CUI_CXaml_CControls_CSymbol_List = 57676,
    __x_ABI_CWindows_CUI_CXaml_CControls_CSymbol_Shop = 57677,
    __x_ABI_CWindows_CUI_CXaml_CControls_CSymbol_SelectAll = 57678,
    __x_ABI_CWindows_CUI_CXaml_CControls_CSymbol_Orientation = 57679,
    __x_ABI_CWindows_CUI_CXaml_CControls_CSymbol_Import = 57680,
    __x_ABI_CWindows_CUI_CXaml_CControls_CSymbol_ImportAll = 57681,
    __x_ABI_CWindows_CUI_CXaml_CControls_CSymbol_BrowsePhotos = 57685,
    __x_ABI_CWindows_CUI_CXaml_CControls_CSymbol_WebCam = 57686,
    __x_ABI_CWindows_CUI_CXaml_CControls_CSymbol_Pictures = 57688,
    __x_ABI_CWindows_CUI_CXaml_CControls_CSymbol_SaveLocal = 57689,
    __x_ABI_CWindows_CUI_CXaml_CControls_CSymbol_Caption = 57690,
    __x_ABI_CWindows_CUI_CXaml_CControls_CSymbol_Stop = 57691,
    __x_ABI_CWindows_CUI_CXaml_CControls_CSymbol_ShowResults = 57692,
    __x_ABI_CWindows_CUI_CXaml_CControls_CSymbol_Volume = 57693,
    __x_ABI_CWindows_CUI_CXaml_CControls_CSymbol_Repair = 57694,
    __x_ABI_CWindows_CUI_CXaml_CControls_CSymbol_Message = 57695,
    __x_ABI_CWindows_CUI_CXaml_CControls_CSymbol_Page2 = 57696,
    __x_ABI_CWindows_CUI_CXaml_CControls_CSymbol_CalendarDay = 57697,
    __x_ABI_CWindows_CUI_CXaml_CControls_CSymbol_CalendarWeek = 57698,
    __x_ABI_CWindows_CUI_CXaml_CControls_CSymbol_Calendar = 57699,
    __x_ABI_CWindows_CUI_CXaml_CControls_CSymbol_Character = 57700,
    __x_ABI_CWindows_CUI_CXaml_CControls_CSymbol_MailReplyAll = 57701,
    __x_ABI_CWindows_CUI_CXaml_CControls_CSymbol_Read = 57702,
    __x_ABI_CWindows_CUI_CXaml_CControls_CSymbol_Link = 57703,
    __x_ABI_CWindows_CUI_CXaml_CControls_CSymbol_Account = 57704,
    __x_ABI_CWindows_CUI_CXaml_CControls_CSymbol_ShowBcc = 57705,
    __x_ABI_CWindows_CUI_CXaml_CControls_CSymbol_HideBcc = 57706,
    __x_ABI_CWindows_CUI_CXaml_CControls_CSymbol_Cut = 57707,
    __x_ABI_CWindows_CUI_CXaml_CControls_CSymbol_Attach = 57708,
    __x_ABI_CWindows_CUI_CXaml_CControls_CSymbol_Paste = 57709,
    __x_ABI_CWindows_CUI_CXaml_CControls_CSymbol_Filter = 57710,
    __x_ABI_CWindows_CUI_CXaml_CControls_CSymbol_Copy = 57711,
    __x_ABI_CWindows_CUI_CXaml_CControls_CSymbol_Emoji2 = 57712,
    __x_ABI_CWindows_CUI_CXaml_CControls_CSymbol_Important = 57713,
    __x_ABI_CWindows_CUI_CXaml_CControls_CSymbol_MailReply = 57714,
    __x_ABI_CWindows_CUI_CXaml_CControls_CSymbol_SlideShow = 57715,
    __x_ABI_CWindows_CUI_CXaml_CControls_CSymbol_Sort = 57716,
    __x_ABI_CWindows_CUI_CXaml_CControls_CSymbol_Manage = 57720,
    __x_ABI_CWindows_CUI_CXaml_CControls_CSymbol_AllApps = 57721,
    __x_ABI_CWindows_CUI_CXaml_CControls_CSymbol_DisconnectDrive = 57722,
    __x_ABI_CWindows_CUI_CXaml_CControls_CSymbol_MapDrive = 57723,
    __x_ABI_CWindows_CUI_CXaml_CControls_CSymbol_NewWindow = 57724,
    __x_ABI_CWindows_CUI_CXaml_CControls_CSymbol_OpenWith = 57725,
    __x_ABI_CWindows_CUI_CXaml_CControls_CSymbol_ContactPresence = 57729,
    __x_ABI_CWindows_CUI_CXaml_CControls_CSymbol_Priority = 57730,
    __x_ABI_CWindows_CUI_CXaml_CControls_CSymbol_GoToToday = 57732,
    __x_ABI_CWindows_CUI_CXaml_CControls_CSymbol_Font = 57733,
    __x_ABI_CWindows_CUI_CXaml_CControls_CSymbol_FontColor = 57734,
    __x_ABI_CWindows_CUI_CXaml_CControls_CSymbol_Contact2 = 57735,
    __x_ABI_CWindows_CUI_CXaml_CControls_CSymbol_Folder = 57736,
    __x_ABI_CWindows_CUI_CXaml_CControls_CSymbol_Audio = 57737,
    __x_ABI_CWindows_CUI_CXaml_CControls_CSymbol_Placeholder = 57738,
    __x_ABI_CWindows_CUI_CXaml_CControls_CSymbol_View = 57739,
    __x_ABI_CWindows_CUI_CXaml_CControls_CSymbol_SetLockScreen = 57740,
    __x_ABI_CWindows_CUI_CXaml_CControls_CSymbol_SetTile = 57741,
    __x_ABI_CWindows_CUI_CXaml_CControls_CSymbol_ClosedCaption = 57744,
    __x_ABI_CWindows_CUI_CXaml_CControls_CSymbol_StopSlideShow = 57745,
    __x_ABI_CWindows_CUI_CXaml_CControls_CSymbol_Permissions = 57746,
    __x_ABI_CWindows_CUI_CXaml_CControls_CSymbol_Highlight = 57747,
    __x_ABI_CWindows_CUI_CXaml_CControls_CSymbol_DisableUpdates = 57748,
    __x_ABI_CWindows_CUI_CXaml_CControls_CSymbol_UnFavorite = 57749,
    __x_ABI_CWindows_CUI_CXaml_CControls_CSymbol_UnPin = 57750,
    __x_ABI_CWindows_CUI_CXaml_CControls_CSymbol_OpenLocal = 57751,
    __x_ABI_CWindows_CUI_CXaml_CControls_CSymbol_Mute = 57752,
    __x_ABI_CWindows_CUI_CXaml_CControls_CSymbol_Italic = 57753,
    __x_ABI_CWindows_CUI_CXaml_CControls_CSymbol_Underline = 57754,
    __x_ABI_CWindows_CUI_CXaml_CControls_CSymbol_Bold = 57755,
    __x_ABI_CWindows_CUI_CXaml_CControls_CSymbol_MoveToFolder = 57756,
    __x_ABI_CWindows_CUI_CXaml_CControls_CSymbol_LikeDislike = 57757,
    __x_ABI_CWindows_CUI_CXaml_CControls_CSymbol_Dislike = 57758,
    __x_ABI_CWindows_CUI_CXaml_CControls_CSymbol_Like = 57759,
    __x_ABI_CWindows_CUI_CXaml_CControls_CSymbol_AlignRight = 57760,
    __x_ABI_CWindows_CUI_CXaml_CControls_CSymbol_AlignCenter = 57761,
    __x_ABI_CWindows_CUI_CXaml_CControls_CSymbol_AlignLeft = 57762,
    __x_ABI_CWindows_CUI_CXaml_CControls_CSymbol_Zoom = 57763,
    __x_ABI_CWindows_CUI_CXaml_CControls_CSymbol_ZoomOut = 57764,
    __x_ABI_CWindows_CUI_CXaml_CControls_CSymbol_OpenFile = 57765,
    __x_ABI_CWindows_CUI_CXaml_CControls_CSymbol_OtherUser = 57766,
    __x_ABI_CWindows_CUI_CXaml_CControls_CSymbol_Admin = 57767,
    __x_ABI_CWindows_CUI_CXaml_CControls_CSymbol_Street = 57795,
    __x_ABI_CWindows_CUI_CXaml_CControls_CSymbol_Map = 57796,
    __x_ABI_CWindows_CUI_CXaml_CControls_CSymbol_ClearSelection = 57797,
    __x_ABI_CWindows_CUI_CXaml_CControls_CSymbol_FontDecrease = 57798,
    __x_ABI_CWindows_CUI_CXaml_CControls_CSymbol_FontIncrease = 57799,
    __x_ABI_CWindows_CUI_CXaml_CControls_CSymbol_FontSize = 57800,
    __x_ABI_CWindows_CUI_CXaml_CControls_CSymbol_CellPhone = 57801,
    __x_ABI_CWindows_CUI_CXaml_CControls_CSymbol_ReShare = 57802,
    __x_ABI_CWindows_CUI_CXaml_CControls_CSymbol_Tag = 57803,
    __x_ABI_CWindows_CUI_CXaml_CControls_CSymbol_RepeatOne = 57804,
    __x_ABI_CWindows_CUI_CXaml_CControls_CSymbol_RepeatAll = 57805,
    __x_ABI_CWindows_CUI_CXaml_CControls_CSymbol_OutlineStar = 57806,
    __x_ABI_CWindows_CUI_CXaml_CControls_CSymbol_SolidStar = 57807,
    __x_ABI_CWindows_CUI_CXaml_CControls_CSymbol_Calculator = 57808,
    __x_ABI_CWindows_CUI_CXaml_CControls_CSymbol_Directions = 57809,
    __x_ABI_CWindows_CUI_CXaml_CControls_CSymbol_Target = 57810,
    __x_ABI_CWindows_CUI_CXaml_CControls_CSymbol_Library = 57811,
    __x_ABI_CWindows_CUI_CXaml_CControls_CSymbol_PhoneBook = 57812,
    __x_ABI_CWindows_CUI_CXaml_CControls_CSymbol_Memo = 57813,
    __x_ABI_CWindows_CUI_CXaml_CControls_CSymbol_Microphone = 57814,
    __x_ABI_CWindows_CUI_CXaml_CControls_CSymbol_PostUpdate = 57815,
    __x_ABI_CWindows_CUI_CXaml_CControls_CSymbol_BackToWindow = 57816,
    __x_ABI_CWindows_CUI_CXaml_CControls_CSymbol_FullScreen = 57817,
    __x_ABI_CWindows_CUI_CXaml_CControls_CSymbol_NewFolder = 57818,
    __x_ABI_CWindows_CUI_CXaml_CControls_CSymbol_CalendarReply = 57819,
    __x_ABI_CWindows_CUI_CXaml_CControls_CSymbol_UnSyncFolder = 57821,
    __x_ABI_CWindows_CUI_CXaml_CControls_CSymbol_ReportHacked = 57822,
    __x_ABI_CWindows_CUI_CXaml_CControls_CSymbol_SyncFolder = 57823,
    __x_ABI_CWindows_CUI_CXaml_CControls_CSymbol_BlockContact = 57824,
    __x_ABI_CWindows_CUI_CXaml_CControls_CSymbol_SwitchApps = 57825,
    __x_ABI_CWindows_CUI_CXaml_CControls_CSymbol_AddFriend = 57826,
    __x_ABI_CWindows_CUI_CXaml_CControls_CSymbol_TouchPointer = 57827,
    __x_ABI_CWindows_CUI_CXaml_CControls_CSymbol_GoToStart = 57828,
    __x_ABI_CWindows_CUI_CXaml_CControls_CSymbol_ZeroBars = 57829,
    __x_ABI_CWindows_CUI_CXaml_CControls_CSymbol_OneBar = 57830,
    __x_ABI_CWindows_CUI_CXaml_CControls_CSymbol_TwoBars = 57831,
    __x_ABI_CWindows_CUI_CXaml_CControls_CSymbol_ThreeBars = 57832,
    __x_ABI_CWindows_CUI_CXaml_CControls_CSymbol_FourBars = 57833,
    __x_ABI_CWindows_CUI_CXaml_CControls_CSymbol_Scan = 58004,
    __x_ABI_CWindows_CUI_CXaml_CControls_CSymbol_Preview = 58005,
    __x_ABI_CWindows_CUI_CXaml_CControls_CSymbol_GlobalNavigationButton = 59136,
    __x_ABI_CWindows_CUI_CXaml_CControls_CSymbol_Share = 59181,
    __x_ABI_CWindows_CUI_CXaml_CControls_CSymbol_Print = 59209,
    __x_ABI_CWindows_CUI_CXaml_CControls_CSymbol_XboxOneConsole = 59792,
};

enum __x_ABI_CWindows_CUI_CXaml_CControls_CTreeViewSelectionMode
    {
        __x_ABI_CWindows_CUI_CXaml_CControls_CTreeViewSelectionMode_None = 0,
    __x_ABI_CWindows_CUI_CXaml_CControls_CTreeViewSelectionMode_Single = 1,
    __x_ABI_CWindows_CUI_CXaml_CControls_CTreeViewSelectionMode_Multiple = 2,
};

enum __x_ABI_CWindows_CUI_CXaml_CControls_CTwoPaneViewMode
    {
        __x_ABI_CWindows_CUI_CXaml_CControls_CTwoPaneViewMode_SinglePane = 0,
    __x_ABI_CWindows_CUI_CXaml_CControls_CTwoPaneViewMode_Wide = 1,
    __x_ABI_CWindows_CUI_CXaml_CControls_CTwoPaneViewMode_Tall = 2,
};

enum __x_ABI_CWindows_CUI_CXaml_CControls_CTwoPaneViewPriority
    {
        __x_ABI_CWindows_CUI_CXaml_CControls_CTwoPaneViewPriority_Pane1 = 0,
    __x_ABI_CWindows_CUI_CXaml_CControls_CTwoPaneViewPriority_Pane2 = 1,
};

enum __x_ABI_CWindows_CUI_CXaml_CControls_CTwoPaneViewTallModeConfiguration
    {
        __x_ABI_CWindows_CUI_CXaml_CControls_CTwoPaneViewTallModeConfiguration_SinglePane = 0,
    __x_ABI_CWindows_CUI_CXaml_CControls_CTwoPaneViewTallModeConfiguration_TopBottom = 1,
    __x_ABI_CWindows_CUI_CXaml_CControls_CTwoPaneViewTallModeConfiguration_BottomTop = 2,
};

enum __x_ABI_CWindows_CUI_CXaml_CControls_CTwoPaneViewWideModeConfiguration
    {
        __x_ABI_CWindows_CUI_CXaml_CControls_CTwoPaneViewWideModeConfiguration_SinglePane = 0,
    __x_ABI_CWindows_CUI_CXaml_CControls_CTwoPaneViewWideModeConfiguration_LeftRight = 1,
    __x_ABI_CWindows_CUI_CXaml_CControls_CTwoPaneViewWideModeConfiguration_RightLeft = 2,
};

enum __x_ABI_CWindows_CUI_CXaml_CControls_CVirtualizationMode
    {
        __x_ABI_CWindows_CUI_CXaml_CControls_CVirtualizationMode_Standard = 0,
    __x_ABI_CWindows_CUI_CXaml_CControls_CVirtualizationMode_Recycling = 1,
};

enum __x_ABI_CWindows_CUI_CXaml_CControls_CWebViewExecutionMode
    {
        __x_ABI_CWindows_CUI_CXaml_CControls_CWebViewExecutionMode_SameThread = 0,
    __x_ABI_CWindows_CUI_CXaml_CControls_CWebViewExecutionMode_SeparateThread = 1,
    __x_ABI_CWindows_CUI_CXaml_CControls_CWebViewExecutionMode_SeparateProcess = 2,
};

enum __x_ABI_CWindows_CUI_CXaml_CControls_CWebViewPermissionState
    {
        __x_ABI_CWindows_CUI_CXaml_CControls_CWebViewPermissionState_Unknown = 0,
    __x_ABI_CWindows_CUI_CXaml_CControls_CWebViewPermissionState_Defer = 1,
    __x_ABI_CWindows_CUI_CXaml_CControls_CWebViewPermissionState_Allow = 2,
    __x_ABI_CWindows_CUI_CXaml_CControls_CWebViewPermissionState_Deny = 3,
};

enum __x_ABI_CWindows_CUI_CXaml_CControls_CWebViewPermissionType
    {
        __x_ABI_CWindows_CUI_CXaml_CControls_CWebViewPermissionType_Geolocation = 0,
    __x_ABI_CWindows_CUI_CXaml_CControls_CWebViewPermissionType_UnlimitedIndexedDBQuota = 1,
    __x_ABI_CWindows_CUI_CXaml_CControls_CWebViewPermissionType_Media = 2,
    __x_ABI_CWindows_CUI_CXaml_CControls_CWebViewPermissionType_PointerLock = 3,
    __x_ABI_CWindows_CUI_CXaml_CControls_CWebViewPermissionType_WebNotifications = 4,
    __x_ABI_CWindows_CUI_CXaml_CControls_CWebViewPermissionType_Screen = 5,
    __x_ABI_CWindows_CUI_CXaml_CControls_CWebViewPermissionType_ImmersiveView = 6,
};

enum __x_ABI_CWindows_CUI_CXaml_CControls_CZoomMode
    {
        __x_ABI_CWindows_CUI_CXaml_CControls_CZoomMode_Disabled = 0,
    __x_ABI_CWindows_CUI_CXaml_CControls_CZoomMode_Enabled = 1,
};

#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIBackClickEventHandler_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CControls_CIBackClickEventHandler_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIBackClickEventHandlerVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CControls_CIBackClickEventHandler* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CControls_CIBackClickEventHandler* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CControls_CIBackClickEventHandler* This);
        HRESULT (STDMETHODCALLTYPE* Invoke)(__x_ABI_CWindows_CUI_CXaml_CControls_CIBackClickEventHandler* This,
        IInspectable* sender,
        __x_ABI_CWindows_CUI_CXaml_CControls_CIBackClickEventArgs* e);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CIBackClickEventHandlerVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CIBackClickEventHandler
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIBackClickEventHandlerVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIBackClickEventHandler;
    #endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIBackClickEventHandler_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CICalendarViewDayItemChangingEventHandler_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CControls_CICalendarViewDayItemChangingEventHandler_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CICalendarViewDayItemChangingEventHandlerVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CControls_CICalendarViewDayItemChangingEventHandler* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CControls_CICalendarViewDayItemChangingEventHandler* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CControls_CICalendarViewDayItemChangingEventHandler* This);
        HRESULT (STDMETHODCALLTYPE* Invoke)(__x_ABI_CWindows_CUI_CXaml_CControls_CICalendarViewDayItemChangingEventHandler* This,
        __x_ABI_CWindows_CUI_CXaml_CControls_CICalendarView* sender,
        __x_ABI_CWindows_CUI_CXaml_CControls_CICalendarViewDayItemChangingEventArgs* e);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CICalendarViewDayItemChangingEventHandlerVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CICalendarViewDayItemChangingEventHandler
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CICalendarViewDayItemChangingEventHandlerVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CICalendarViewDayItemChangingEventHandler;
    #endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CICalendarViewDayItemChangingEventHandler_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CICleanUpVirtualizedItemEventHandler_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CControls_CICleanUpVirtualizedItemEventHandler_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CICleanUpVirtualizedItemEventHandlerVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CControls_CICleanUpVirtualizedItemEventHandler* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CControls_CICleanUpVirtualizedItemEventHandler* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CControls_CICleanUpVirtualizedItemEventHandler* This);
        HRESULT (STDMETHODCALLTYPE* Invoke)(__x_ABI_CWindows_CUI_CXaml_CControls_CICleanUpVirtualizedItemEventHandler* This,
        IInspectable* sender,
        __x_ABI_CWindows_CUI_CXaml_CControls_CICleanUpVirtualizedItemEventArgs* e);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CICleanUpVirtualizedItemEventHandlerVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CICleanUpVirtualizedItemEventHandler
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CICleanUpVirtualizedItemEventHandlerVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CICleanUpVirtualizedItemEventHandler;
    #endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CICleanUpVirtualizedItemEventHandler_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIContextMenuOpeningEventHandler_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CControls_CIContextMenuOpeningEventHandler_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIContextMenuOpeningEventHandlerVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CControls_CIContextMenuOpeningEventHandler* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CControls_CIContextMenuOpeningEventHandler* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CControls_CIContextMenuOpeningEventHandler* This);
        HRESULT (STDMETHODCALLTYPE* Invoke)(__x_ABI_CWindows_CUI_CXaml_CControls_CIContextMenuOpeningEventHandler* This,
        IInspectable* sender,
        __x_ABI_CWindows_CUI_CXaml_CControls_CIContextMenuEventArgs* e);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CIContextMenuOpeningEventHandlerVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CIContextMenuOpeningEventHandler
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIContextMenuOpeningEventHandlerVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIContextMenuOpeningEventHandler;
    #endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIContextMenuOpeningEventHandler_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIDragItemsStartingEventHandler_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CControls_CIDragItemsStartingEventHandler_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIDragItemsStartingEventHandlerVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CControls_CIDragItemsStartingEventHandler* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CControls_CIDragItemsStartingEventHandler* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CControls_CIDragItemsStartingEventHandler* This);
        HRESULT (STDMETHODCALLTYPE* Invoke)(__x_ABI_CWindows_CUI_CXaml_CControls_CIDragItemsStartingEventHandler* This,
        IInspectable* sender,
        __x_ABI_CWindows_CUI_CXaml_CControls_CIDragItemsStartingEventArgs* e);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CIDragItemsStartingEventHandlerVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CIDragItemsStartingEventHandler
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIDragItemsStartingEventHandlerVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIDragItemsStartingEventHandler;
    #endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIDragItemsStartingEventHandler_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIHubSectionHeaderClickEventHandler_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CControls_CIHubSectionHeaderClickEventHandler_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIHubSectionHeaderClickEventHandlerVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CControls_CIHubSectionHeaderClickEventHandler* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CControls_CIHubSectionHeaderClickEventHandler* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CControls_CIHubSectionHeaderClickEventHandler* This);
        HRESULT (STDMETHODCALLTYPE* Invoke)(__x_ABI_CWindows_CUI_CXaml_CControls_CIHubSectionHeaderClickEventHandler* This,
        IInspectable* sender,
        __x_ABI_CWindows_CUI_CXaml_CControls_CIHubSectionHeaderClickEventArgs* e);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CIHubSectionHeaderClickEventHandlerVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CIHubSectionHeaderClickEventHandler
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIHubSectionHeaderClickEventHandlerVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIHubSectionHeaderClickEventHandler;
    #endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIHubSectionHeaderClickEventHandler_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIItemClickEventHandler_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CControls_CIItemClickEventHandler_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIItemClickEventHandlerVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CControls_CIItemClickEventHandler* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CControls_CIItemClickEventHandler* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CControls_CIItemClickEventHandler* This);
        HRESULT (STDMETHODCALLTYPE* Invoke)(__x_ABI_CWindows_CUI_CXaml_CControls_CIItemClickEventHandler* This,
        IInspectable* sender,
        __x_ABI_CWindows_CUI_CXaml_CControls_CIItemClickEventArgs* e);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CIItemClickEventHandlerVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CIItemClickEventHandler
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIItemClickEventHandlerVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIItemClickEventHandler;
    #endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIItemClickEventHandler_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIListViewItemToKeyHandler_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CControls_CIListViewItemToKeyHandler_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIListViewItemToKeyHandlerVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CControls_CIListViewItemToKeyHandler* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CControls_CIListViewItemToKeyHandler* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CControls_CIListViewItemToKeyHandler* This);
        HRESULT (STDMETHODCALLTYPE* Invoke)(__x_ABI_CWindows_CUI_CXaml_CControls_CIListViewItemToKeyHandler* This,
        IInspectable* item,
        HSTRING* result);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CIListViewItemToKeyHandlerVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CIListViewItemToKeyHandler
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIListViewItemToKeyHandlerVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIListViewItemToKeyHandler;
    #endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIListViewItemToKeyHandler_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIListViewKeyToItemHandler_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CControls_CIListViewKeyToItemHandler_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIListViewKeyToItemHandlerVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CControls_CIListViewKeyToItemHandler* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CControls_CIListViewKeyToItemHandler* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CControls_CIListViewKeyToItemHandler* This);
        HRESULT (STDMETHODCALLTYPE* Invoke)(__x_ABI_CWindows_CUI_CXaml_CControls_CIListViewKeyToItemHandler* This,
        HSTRING key,
        __x_ABI_C__FIAsyncOperation_1_IInspectable** operation);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CIListViewKeyToItemHandlerVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CIListViewKeyToItemHandler
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIListViewKeyToItemHandlerVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIListViewKeyToItemHandler;
    #endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIListViewKeyToItemHandler_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CINotifyEventHandler_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CControls_CINotifyEventHandler_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CINotifyEventHandlerVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CControls_CINotifyEventHandler* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CControls_CINotifyEventHandler* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CControls_CINotifyEventHandler* This);
        HRESULT (STDMETHODCALLTYPE* Invoke)(__x_ABI_CWindows_CUI_CXaml_CControls_CINotifyEventHandler* This,
        IInspectable* sender,
        __x_ABI_CWindows_CUI_CXaml_CControls_CINotifyEventArgs* e);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CINotifyEventHandlerVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CINotifyEventHandler
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CINotifyEventHandlerVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CINotifyEventHandler;
    #endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CINotifyEventHandler_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CISectionsInViewChangedEventHandler_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CControls_CISectionsInViewChangedEventHandler_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CISectionsInViewChangedEventHandlerVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CControls_CISectionsInViewChangedEventHandler* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CControls_CISectionsInViewChangedEventHandler* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CControls_CISectionsInViewChangedEventHandler* This);
        HRESULT (STDMETHODCALLTYPE* Invoke)(__x_ABI_CWindows_CUI_CXaml_CControls_CISectionsInViewChangedEventHandler* This,
        IInspectable* sender,
        __x_ABI_CWindows_CUI_CXaml_CControls_CISectionsInViewChangedEventArgs* e);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CISectionsInViewChangedEventHandlerVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CISectionsInViewChangedEventHandler
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CISectionsInViewChangedEventHandlerVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CISectionsInViewChangedEventHandler;
    #endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CISectionsInViewChangedEventHandler_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CISelectionChangedEventHandler_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CControls_CISelectionChangedEventHandler_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CISelectionChangedEventHandlerVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CControls_CISelectionChangedEventHandler* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CControls_CISelectionChangedEventHandler* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CControls_CISelectionChangedEventHandler* This);
        HRESULT (STDMETHODCALLTYPE* Invoke)(__x_ABI_CWindows_CUI_CXaml_CControls_CISelectionChangedEventHandler* This,
        IInspectable* sender,
        __x_ABI_CWindows_CUI_CXaml_CControls_CISelectionChangedEventArgs* e);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CISelectionChangedEventHandlerVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CISelectionChangedEventHandler
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CISelectionChangedEventHandlerVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CISelectionChangedEventHandler;
    #endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CISelectionChangedEventHandler_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CISemanticZoomViewChangedEventHandler_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CControls_CISemanticZoomViewChangedEventHandler_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CISemanticZoomViewChangedEventHandlerVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CControls_CISemanticZoomViewChangedEventHandler* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CControls_CISemanticZoomViewChangedEventHandler* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CControls_CISemanticZoomViewChangedEventHandler* This);
        HRESULT (STDMETHODCALLTYPE* Invoke)(__x_ABI_CWindows_CUI_CXaml_CControls_CISemanticZoomViewChangedEventHandler* This,
        IInspectable* sender,
        __x_ABI_CWindows_CUI_CXaml_CControls_CISemanticZoomViewChangedEventArgs* e);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CISemanticZoomViewChangedEventHandlerVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CISemanticZoomViewChangedEventHandler
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CISemanticZoomViewChangedEventHandlerVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CISemanticZoomViewChangedEventHandler;
    #endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CISemanticZoomViewChangedEventHandler_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CITextChangedEventHandler_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CControls_CITextChangedEventHandler_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CITextChangedEventHandlerVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CControls_CITextChangedEventHandler* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CControls_CITextChangedEventHandler* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CControls_CITextChangedEventHandler* This);
        HRESULT (STDMETHODCALLTYPE* Invoke)(__x_ABI_CWindows_CUI_CXaml_CControls_CITextChangedEventHandler* This,
        IInspectable* sender,
        __x_ABI_CWindows_CUI_CXaml_CControls_CITextChangedEventArgs* e);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CITextChangedEventHandlerVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CITextChangedEventHandler
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CITextChangedEventHandlerVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CITextChangedEventHandler;
    #endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CITextChangedEventHandler_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CITextControlPasteEventHandler_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CControls_CITextControlPasteEventHandler_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CITextControlPasteEventHandlerVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CControls_CITextControlPasteEventHandler* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CControls_CITextControlPasteEventHandler* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CControls_CITextControlPasteEventHandler* This);
        HRESULT (STDMETHODCALLTYPE* Invoke)(__x_ABI_CWindows_CUI_CXaml_CControls_CITextControlPasteEventHandler* This,
        IInspectable* sender,
        __x_ABI_CWindows_CUI_CXaml_CControls_CITextControlPasteEventArgs* e);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CITextControlPasteEventHandlerVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CITextControlPasteEventHandler
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CITextControlPasteEventHandlerVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CITextControlPasteEventHandler;
    #endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CITextControlPasteEventHandler_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewNavigationFailedEventHandler_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewNavigationFailedEventHandler_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewNavigationFailedEventHandlerVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewNavigationFailedEventHandler* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewNavigationFailedEventHandler* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewNavigationFailedEventHandler* This);
        HRESULT (STDMETHODCALLTYPE* Invoke)(__x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewNavigationFailedEventHandler* This,
        IInspectable* sender,
        __x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewNavigationFailedEventArgs* e);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewNavigationFailedEventHandlerVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewNavigationFailedEventHandler
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewNavigationFailedEventHandlerVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewNavigationFailedEventHandler;
    #endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewNavigationFailedEventHandler_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIAnchorRequestedEventArgs_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CControls_CIAnchorRequestedEventArgs_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIAnchorRequestedEventArgsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CControls_CIAnchorRequestedEventArgs* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CControls_CIAnchorRequestedEventArgs* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CControls_CIAnchorRequestedEventArgs* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CControls_CIAnchorRequestedEventArgs* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CControls_CIAnchorRequestedEventArgs* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CControls_CIAnchorRequestedEventArgs* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Anchor)(__x_ABI_CWindows_CUI_CXaml_CControls_CIAnchorRequestedEventArgs* This,
        __x_ABI_CWindows_CUI_CXaml_CIUIElement** value);
    HRESULT (STDMETHODCALLTYPE* put_Anchor)(__x_ABI_CWindows_CUI_CXaml_CControls_CIAnchorRequestedEventArgs* This,
        __x_ABI_CWindows_CUI_CXaml_CIUIElement* value);
    HRESULT (STDMETHODCALLTYPE* get_AnchorCandidates)(__x_ABI_CWindows_CUI_CXaml_CControls_CIAnchorRequestedEventArgs* This,
        __x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CXaml__CUIElement** value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CIAnchorRequestedEventArgsVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CIAnchorRequestedEventArgs
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIAnchorRequestedEventArgsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIAnchorRequestedEventArgs;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIAnchorRequestedEventArgs_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIAppBar_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CControls_CIAppBar_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CControls_CIAppBar* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CControls_CIAppBar* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CControls_CIAppBar* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CControls_CIAppBar* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CControls_CIAppBar* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CControls_CIAppBar* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_IsOpen)(__x_ABI_CWindows_CUI_CXaml_CControls_CIAppBar* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* put_IsOpen)(__x_ABI_CWindows_CUI_CXaml_CControls_CIAppBar* This,
        boolean value);
    HRESULT (STDMETHODCALLTYPE* get_IsSticky)(__x_ABI_CWindows_CUI_CXaml_CControls_CIAppBar* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* put_IsSticky)(__x_ABI_CWindows_CUI_CXaml_CControls_CIAppBar* This,
        boolean value);
    HRESULT (STDMETHODCALLTYPE* add_Opened)(__x_ABI_CWindows_CUI_CXaml_CControls_CIAppBar* This,
        __x_ABI_C__FIEventHandler_1_IInspectable* handler,
        EventRegistrationToken* token);
    HRESULT (STDMETHODCALLTYPE* remove_Opened)(__x_ABI_CWindows_CUI_CXaml_CControls_CIAppBar* This,
        EventRegistrationToken token);
    HRESULT (STDMETHODCALLTYPE* add_Closed)(__x_ABI_CWindows_CUI_CXaml_CControls_CIAppBar* This,
        __x_ABI_C__FIEventHandler_1_IInspectable* handler,
        EventRegistrationToken* token);
    HRESULT (STDMETHODCALLTYPE* remove_Closed)(__x_ABI_CWindows_CUI_CXaml_CControls_CIAppBar* This,
        EventRegistrationToken token);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBar
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIAppBar;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIAppBar_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIAppBar2_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CControls_CIAppBar2_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBar2Vtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CControls_CIAppBar2* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CControls_CIAppBar2* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CControls_CIAppBar2* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CControls_CIAppBar2* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CControls_CIAppBar2* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CControls_CIAppBar2* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_ClosedDisplayMode)(__x_ABI_CWindows_CUI_CXaml_CControls_CIAppBar2* This,
        enum __x_ABI_CWindows_CUI_CXaml_CControls_CAppBarClosedDisplayMode* value);
    HRESULT (STDMETHODCALLTYPE* put_ClosedDisplayMode)(__x_ABI_CWindows_CUI_CXaml_CControls_CIAppBar2* This,
        enum __x_ABI_CWindows_CUI_CXaml_CControls_CAppBarClosedDisplayMode value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBar2Vtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBar2
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBar2Vtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIAppBar2;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIAppBar2_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIAppBar3_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CControls_CIAppBar3_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBar3Vtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CControls_CIAppBar3* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CControls_CIAppBar3* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CControls_CIAppBar3* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CControls_CIAppBar3* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CControls_CIAppBar3* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CControls_CIAppBar3* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_TemplateSettings)(__x_ABI_CWindows_CUI_CXaml_CControls_CIAppBar3* This,
        __x_ABI_CWindows_CUI_CXaml_CControls_CPrimitives_CIAppBarTemplateSettings** value);
    HRESULT (STDMETHODCALLTYPE* add_Opening)(__x_ABI_CWindows_CUI_CXaml_CControls_CIAppBar3* This,
        __x_ABI_C__FIEventHandler_1_IInspectable* handler,
        EventRegistrationToken* token);
    HRESULT (STDMETHODCALLTYPE* remove_Opening)(__x_ABI_CWindows_CUI_CXaml_CControls_CIAppBar3* This,
        EventRegistrationToken token);
    HRESULT (STDMETHODCALLTYPE* add_Closing)(__x_ABI_CWindows_CUI_CXaml_CControls_CIAppBar3* This,
        __x_ABI_C__FIEventHandler_1_IInspectable* handler,
        EventRegistrationToken* token);
    HRESULT (STDMETHODCALLTYPE* remove_Closing)(__x_ABI_CWindows_CUI_CXaml_CControls_CIAppBar3* This,
        EventRegistrationToken token);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBar3Vtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBar3
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBar3Vtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIAppBar3;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIAppBar3_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIAppBar4_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CControls_CIAppBar4_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBar4Vtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CControls_CIAppBar4* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CControls_CIAppBar4* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CControls_CIAppBar4* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CControls_CIAppBar4* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CControls_CIAppBar4* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CControls_CIAppBar4* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_LightDismissOverlayMode)(__x_ABI_CWindows_CUI_CXaml_CControls_CIAppBar4* This,
        enum __x_ABI_CWindows_CUI_CXaml_CControls_CLightDismissOverlayMode* value);
    HRESULT (STDMETHODCALLTYPE* put_LightDismissOverlayMode)(__x_ABI_CWindows_CUI_CXaml_CControls_CIAppBar4* This,
        enum __x_ABI_CWindows_CUI_CXaml_CControls_CLightDismissOverlayMode value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBar4Vtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBar4
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBar4Vtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIAppBar4;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIAppBar4_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarButton_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarButton_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarButtonVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarButton* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarButton* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarButton* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarButton* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarButton* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarButton* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Label)(__x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarButton* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* put_Label)(__x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarButton* This,
        HSTRING value);
    HRESULT (STDMETHODCALLTYPE* get_Icon)(__x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarButton* This,
        __x_ABI_CWindows_CUI_CXaml_CControls_CIIconElement** value);
    HRESULT (STDMETHODCALLTYPE* put_Icon)(__x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarButton* This,
        __x_ABI_CWindows_CUI_CXaml_CControls_CIIconElement* value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarButtonVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarButton
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarButtonVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarButton;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarButton_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarButton3_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarButton3_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarButton3Vtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarButton3* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarButton3* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarButton3* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarButton3* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarButton3* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarButton3* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_LabelPosition)(__x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarButton3* This,
        enum __x_ABI_CWindows_CUI_CXaml_CControls_CCommandBarLabelPosition* value);
    HRESULT (STDMETHODCALLTYPE* put_LabelPosition)(__x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarButton3* This,
        enum __x_ABI_CWindows_CUI_CXaml_CControls_CCommandBarLabelPosition value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarButton3Vtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarButton3
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarButton3Vtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarButton3;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarButton3_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarButton4_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarButton4_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarButton4Vtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarButton4* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarButton4* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarButton4* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarButton4* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarButton4* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarButton4* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_KeyboardAcceleratorTextOverride)(__x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarButton4* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* put_KeyboardAcceleratorTextOverride)(__x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarButton4* This,
        HSTRING value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarButton4Vtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarButton4
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarButton4Vtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarButton4;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarButton4_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarButton5_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarButton5_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarButton5Vtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarButton5* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarButton5* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarButton5* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarButton5* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarButton5* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarButton5* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_TemplateSettings)(__x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarButton5* This,
        __x_ABI_CWindows_CUI_CXaml_CControls_CPrimitives_CIAppBarButtonTemplateSettings** value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarButton5Vtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarButton5
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarButton5Vtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarButton5;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarButton5_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarButtonFactory_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarButtonFactory_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarButtonFactoryVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarButtonFactory* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarButtonFactory* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarButtonFactory* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarButtonFactory* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarButtonFactory* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarButtonFactory* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* CreateInstance)(__x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarButtonFactory* This,
        IInspectable* baseInterface,
        IInspectable** innerInterface,
        __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarButton** value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarButtonFactoryVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarButtonFactory
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarButtonFactoryVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarButtonFactory;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarButtonFactory_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarButtonStatics_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarButtonStatics_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarButtonStaticsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarButtonStatics* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarButtonStatics* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarButtonStatics* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarButtonStatics* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarButtonStatics* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarButtonStatics* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_LabelProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarButtonStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_IconProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarButtonStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_IsCompactProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarButtonStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarButtonStaticsVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarButtonStatics
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarButtonStaticsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarButtonStatics;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarButtonStatics_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarButtonStatics3_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarButtonStatics3_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarButtonStatics3Vtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarButtonStatics3* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarButtonStatics3* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarButtonStatics3* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarButtonStatics3* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarButtonStatics3* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarButtonStatics3* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_LabelPositionProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarButtonStatics3* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_IsInOverflowProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarButtonStatics3* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_DynamicOverflowOrderProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarButtonStatics3* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarButtonStatics3Vtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarButtonStatics3
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarButtonStatics3Vtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarButtonStatics3;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarButtonStatics3_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarButtonStatics4_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarButtonStatics4_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarButtonStatics4Vtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarButtonStatics4* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarButtonStatics4* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarButtonStatics4* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarButtonStatics4* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarButtonStatics4* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarButtonStatics4* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_KeyboardAcceleratorTextOverrideProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarButtonStatics4* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarButtonStatics4Vtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarButtonStatics4
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarButtonStatics4Vtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarButtonStatics4;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarButtonStatics4_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarElementContainer_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarElementContainer_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarElementContainerVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarElementContainer* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarElementContainer* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarElementContainer* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarElementContainer* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarElementContainer* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarElementContainer* This,
            TrustLevel* trustLevel);
    
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarElementContainerVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarElementContainer
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarElementContainerVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarElementContainer;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarElementContainer_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarElementContainerFactory_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarElementContainerFactory_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarElementContainerFactoryVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarElementContainerFactory* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarElementContainerFactory* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarElementContainerFactory* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarElementContainerFactory* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarElementContainerFactory* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarElementContainerFactory* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* CreateInstance)(__x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarElementContainerFactory* This,
        IInspectable* baseInterface,
        IInspectable** innerInterface,
        __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarElementContainer** value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarElementContainerFactoryVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarElementContainerFactory
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarElementContainerFactoryVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarElementContainerFactory;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarElementContainerFactory_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarElementContainerStatics_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarElementContainerStatics_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarElementContainerStaticsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarElementContainerStatics* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarElementContainerStatics* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarElementContainerStatics* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarElementContainerStatics* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarElementContainerStatics* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarElementContainerStatics* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_IsCompactProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarElementContainerStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_IsInOverflowProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarElementContainerStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_DynamicOverflowOrderProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarElementContainerStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarElementContainerStaticsVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarElementContainerStatics
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarElementContainerStaticsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarElementContainerStatics;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarElementContainerStatics_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarFactory_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarFactory_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarFactoryVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarFactory* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarFactory* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarFactory* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarFactory* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarFactory* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarFactory* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* CreateInstance)(__x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarFactory* This,
        IInspectable* baseInterface,
        IInspectable** innerInterface,
        __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBar** value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarFactoryVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarFactory
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarFactoryVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarFactory;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarFactory_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarOverrides_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarOverrides_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarOverridesVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarOverrides* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarOverrides* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarOverrides* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarOverrides* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarOverrides* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarOverrides* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* OnClosed)(__x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarOverrides* This,
        IInspectable* e);
    HRESULT (STDMETHODCALLTYPE* OnOpened)(__x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarOverrides* This,
        IInspectable* e);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarOverridesVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarOverrides
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarOverridesVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarOverrides;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarOverrides_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarOverrides3_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarOverrides3_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarOverrides3Vtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarOverrides3* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarOverrides3* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarOverrides3* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarOverrides3* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarOverrides3* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarOverrides3* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* OnClosing)(__x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarOverrides3* This,
        IInspectable* e);
    HRESULT (STDMETHODCALLTYPE* OnOpening)(__x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarOverrides3* This,
        IInspectable* e);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarOverrides3Vtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarOverrides3
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarOverrides3Vtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarOverrides3;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarOverrides3_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarSeparator_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarSeparator_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarSeparatorVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarSeparator* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarSeparator* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarSeparator* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarSeparator* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarSeparator* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarSeparator* This,
            TrustLevel* trustLevel);
    
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarSeparatorVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarSeparator
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarSeparatorVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarSeparator;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarSeparator_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarSeparatorFactory_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarSeparatorFactory_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarSeparatorFactoryVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarSeparatorFactory* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarSeparatorFactory* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarSeparatorFactory* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarSeparatorFactory* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarSeparatorFactory* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarSeparatorFactory* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* CreateInstance)(__x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarSeparatorFactory* This,
        IInspectable* baseInterface,
        IInspectable** innerInterface,
        __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarSeparator** value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarSeparatorFactoryVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarSeparatorFactory
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarSeparatorFactoryVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarSeparatorFactory;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarSeparatorFactory_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarSeparatorStatics_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarSeparatorStatics_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarSeparatorStaticsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarSeparatorStatics* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarSeparatorStatics* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarSeparatorStatics* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarSeparatorStatics* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarSeparatorStatics* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarSeparatorStatics* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_IsCompactProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarSeparatorStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarSeparatorStaticsVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarSeparatorStatics
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarSeparatorStaticsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarSeparatorStatics;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarSeparatorStatics_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarSeparatorStatics3_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarSeparatorStatics3_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarSeparatorStatics3Vtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarSeparatorStatics3* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarSeparatorStatics3* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarSeparatorStatics3* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarSeparatorStatics3* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarSeparatorStatics3* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarSeparatorStatics3* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_IsInOverflowProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarSeparatorStatics3* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_DynamicOverflowOrderProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarSeparatorStatics3* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarSeparatorStatics3Vtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarSeparatorStatics3
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarSeparatorStatics3Vtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarSeparatorStatics3;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarSeparatorStatics3_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarStatics_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarStatics_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarStaticsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarStatics* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarStatics* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarStatics* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarStatics* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarStatics* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarStatics* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_IsOpenProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_IsStickyProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarStaticsVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarStatics
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarStaticsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarStatics;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarStatics_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarStatics2_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarStatics2_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarStatics2Vtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarStatics2* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarStatics2* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarStatics2* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarStatics2* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarStatics2* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarStatics2* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_ClosedDisplayModeProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarStatics2* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarStatics2Vtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarStatics2
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarStatics2Vtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarStatics2;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarStatics2_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarStatics4_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarStatics4_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarStatics4Vtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarStatics4* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarStatics4* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarStatics4* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarStatics4* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarStatics4* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarStatics4* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_LightDismissOverlayModeProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarStatics4* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarStatics4Vtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarStatics4
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarStatics4Vtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarStatics4;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarStatics4_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarToggleButton_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarToggleButton_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarToggleButtonVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarToggleButton* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarToggleButton* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarToggleButton* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarToggleButton* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarToggleButton* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarToggleButton* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Label)(__x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarToggleButton* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* put_Label)(__x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarToggleButton* This,
        HSTRING value);
    HRESULT (STDMETHODCALLTYPE* get_Icon)(__x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarToggleButton* This,
        __x_ABI_CWindows_CUI_CXaml_CControls_CIIconElement** value);
    HRESULT (STDMETHODCALLTYPE* put_Icon)(__x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarToggleButton* This,
        __x_ABI_CWindows_CUI_CXaml_CControls_CIIconElement* value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarToggleButtonVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarToggleButton
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarToggleButtonVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarToggleButton;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarToggleButton_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarToggleButton3_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarToggleButton3_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarToggleButton3Vtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarToggleButton3* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarToggleButton3* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarToggleButton3* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarToggleButton3* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarToggleButton3* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarToggleButton3* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_LabelPosition)(__x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarToggleButton3* This,
        enum __x_ABI_CWindows_CUI_CXaml_CControls_CCommandBarLabelPosition* value);
    HRESULT (STDMETHODCALLTYPE* put_LabelPosition)(__x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarToggleButton3* This,
        enum __x_ABI_CWindows_CUI_CXaml_CControls_CCommandBarLabelPosition value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarToggleButton3Vtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarToggleButton3
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarToggleButton3Vtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarToggleButton3;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarToggleButton3_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarToggleButton4_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarToggleButton4_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarToggleButton4Vtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarToggleButton4* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarToggleButton4* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarToggleButton4* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarToggleButton4* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarToggleButton4* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarToggleButton4* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_KeyboardAcceleratorTextOverride)(__x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarToggleButton4* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* put_KeyboardAcceleratorTextOverride)(__x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarToggleButton4* This,
        HSTRING value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarToggleButton4Vtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarToggleButton4
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarToggleButton4Vtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarToggleButton4;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarToggleButton4_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarToggleButton5_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarToggleButton5_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarToggleButton5Vtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarToggleButton5* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarToggleButton5* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarToggleButton5* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarToggleButton5* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarToggleButton5* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarToggleButton5* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_TemplateSettings)(__x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarToggleButton5* This,
        __x_ABI_CWindows_CUI_CXaml_CControls_CPrimitives_CIAppBarToggleButtonTemplateSettings** value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarToggleButton5Vtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarToggleButton5
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarToggleButton5Vtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarToggleButton5;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarToggleButton5_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarToggleButtonFactory_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarToggleButtonFactory_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarToggleButtonFactoryVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarToggleButtonFactory* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarToggleButtonFactory* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarToggleButtonFactory* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarToggleButtonFactory* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarToggleButtonFactory* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarToggleButtonFactory* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* CreateInstance)(__x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarToggleButtonFactory* This,
        IInspectable* baseInterface,
        IInspectable** innerInterface,
        __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarToggleButton** value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarToggleButtonFactoryVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarToggleButtonFactory
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarToggleButtonFactoryVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarToggleButtonFactory;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarToggleButtonFactory_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarToggleButtonStatics_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarToggleButtonStatics_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarToggleButtonStaticsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarToggleButtonStatics* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarToggleButtonStatics* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarToggleButtonStatics* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarToggleButtonStatics* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarToggleButtonStatics* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarToggleButtonStatics* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_LabelProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarToggleButtonStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_IconProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarToggleButtonStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_IsCompactProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarToggleButtonStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarToggleButtonStaticsVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarToggleButtonStatics
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarToggleButtonStaticsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarToggleButtonStatics;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarToggleButtonStatics_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarToggleButtonStatics3_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarToggleButtonStatics3_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarToggleButtonStatics3Vtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarToggleButtonStatics3* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarToggleButtonStatics3* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarToggleButtonStatics3* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarToggleButtonStatics3* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarToggleButtonStatics3* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarToggleButtonStatics3* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_LabelPositionProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarToggleButtonStatics3* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_IsInOverflowProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarToggleButtonStatics3* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_DynamicOverflowOrderProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarToggleButtonStatics3* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarToggleButtonStatics3Vtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarToggleButtonStatics3
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarToggleButtonStatics3Vtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarToggleButtonStatics3;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarToggleButtonStatics3_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarToggleButtonStatics4_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarToggleButtonStatics4_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarToggleButtonStatics4Vtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarToggleButtonStatics4* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarToggleButtonStatics4* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarToggleButtonStatics4* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarToggleButtonStatics4* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarToggleButtonStatics4* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarToggleButtonStatics4* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_KeyboardAcceleratorTextOverrideProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarToggleButtonStatics4* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarToggleButtonStatics4Vtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarToggleButtonStatics4
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarToggleButtonStatics4Vtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarToggleButtonStatics4;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarToggleButtonStatics4_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIAutoSuggestBox_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CControls_CIAutoSuggestBox_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIAutoSuggestBoxVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CControls_CIAutoSuggestBox* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CControls_CIAutoSuggestBox* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CControls_CIAutoSuggestBox* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CControls_CIAutoSuggestBox* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CControls_CIAutoSuggestBox* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CControls_CIAutoSuggestBox* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_MaxSuggestionListHeight)(__x_ABI_CWindows_CUI_CXaml_CControls_CIAutoSuggestBox* This,
        DOUBLE* value);
    HRESULT (STDMETHODCALLTYPE* put_MaxSuggestionListHeight)(__x_ABI_CWindows_CUI_CXaml_CControls_CIAutoSuggestBox* This,
        DOUBLE value);
    HRESULT (STDMETHODCALLTYPE* get_IsSuggestionListOpen)(__x_ABI_CWindows_CUI_CXaml_CControls_CIAutoSuggestBox* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* put_IsSuggestionListOpen)(__x_ABI_CWindows_CUI_CXaml_CControls_CIAutoSuggestBox* This,
        boolean value);
    HRESULT (STDMETHODCALLTYPE* get_TextMemberPath)(__x_ABI_CWindows_CUI_CXaml_CControls_CIAutoSuggestBox* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* put_TextMemberPath)(__x_ABI_CWindows_CUI_CXaml_CControls_CIAutoSuggestBox* This,
        HSTRING value);
    HRESULT (STDMETHODCALLTYPE* get_Text)(__x_ABI_CWindows_CUI_CXaml_CControls_CIAutoSuggestBox* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* put_Text)(__x_ABI_CWindows_CUI_CXaml_CControls_CIAutoSuggestBox* This,
        HSTRING value);
    HRESULT (STDMETHODCALLTYPE* get_UpdateTextOnSelect)(__x_ABI_CWindows_CUI_CXaml_CControls_CIAutoSuggestBox* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* put_UpdateTextOnSelect)(__x_ABI_CWindows_CUI_CXaml_CControls_CIAutoSuggestBox* This,
        boolean value);
    HRESULT (STDMETHODCALLTYPE* get_PlaceholderText)(__x_ABI_CWindows_CUI_CXaml_CControls_CIAutoSuggestBox* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* put_PlaceholderText)(__x_ABI_CWindows_CUI_CXaml_CControls_CIAutoSuggestBox* This,
        HSTRING value);
    HRESULT (STDMETHODCALLTYPE* get_Header)(__x_ABI_CWindows_CUI_CXaml_CControls_CIAutoSuggestBox* This,
        IInspectable** value);
    HRESULT (STDMETHODCALLTYPE* put_Header)(__x_ABI_CWindows_CUI_CXaml_CControls_CIAutoSuggestBox* This,
        IInspectable* value);
    HRESULT (STDMETHODCALLTYPE* get_AutoMaximizeSuggestionArea)(__x_ABI_CWindows_CUI_CXaml_CControls_CIAutoSuggestBox* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* put_AutoMaximizeSuggestionArea)(__x_ABI_CWindows_CUI_CXaml_CControls_CIAutoSuggestBox* This,
        boolean value);
    HRESULT (STDMETHODCALLTYPE* get_TextBoxStyle)(__x_ABI_CWindows_CUI_CXaml_CControls_CIAutoSuggestBox* This,
        __x_ABI_CWindows_CUI_CXaml_CIStyle** value);
    HRESULT (STDMETHODCALLTYPE* put_TextBoxStyle)(__x_ABI_CWindows_CUI_CXaml_CControls_CIAutoSuggestBox* This,
        __x_ABI_CWindows_CUI_CXaml_CIStyle* value);
    HRESULT (STDMETHODCALLTYPE* add_SuggestionChosen)(__x_ABI_CWindows_CUI_CXaml_CControls_CIAutoSuggestBox* This,
        __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CAutoSuggestBox___x_ABI_CWindows__CUI__CXaml__CControls__CAutoSuggestBoxSuggestionChosenEventArgs* handler,
        EventRegistrationToken* token);
    HRESULT (STDMETHODCALLTYPE* remove_SuggestionChosen)(__x_ABI_CWindows_CUI_CXaml_CControls_CIAutoSuggestBox* This,
        EventRegistrationToken token);
    HRESULT (STDMETHODCALLTYPE* add_TextChanged)(__x_ABI_CWindows_CUI_CXaml_CControls_CIAutoSuggestBox* This,
        __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CAutoSuggestBox___x_ABI_CWindows__CUI__CXaml__CControls__CAutoSuggestBoxTextChangedEventArgs* handler,
        EventRegistrationToken* token);
    HRESULT (STDMETHODCALLTYPE* remove_TextChanged)(__x_ABI_CWindows_CUI_CXaml_CControls_CIAutoSuggestBox* This,
        EventRegistrationToken token);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CIAutoSuggestBoxVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CIAutoSuggestBox
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIAutoSuggestBoxVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIAutoSuggestBox;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIAutoSuggestBox_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIAutoSuggestBox2_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CControls_CIAutoSuggestBox2_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIAutoSuggestBox2Vtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CControls_CIAutoSuggestBox2* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CControls_CIAutoSuggestBox2* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CControls_CIAutoSuggestBox2* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CControls_CIAutoSuggestBox2* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CControls_CIAutoSuggestBox2* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CControls_CIAutoSuggestBox2* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_QueryIcon)(__x_ABI_CWindows_CUI_CXaml_CControls_CIAutoSuggestBox2* This,
        __x_ABI_CWindows_CUI_CXaml_CControls_CIIconElement** value);
    HRESULT (STDMETHODCALLTYPE* put_QueryIcon)(__x_ABI_CWindows_CUI_CXaml_CControls_CIAutoSuggestBox2* This,
        __x_ABI_CWindows_CUI_CXaml_CControls_CIIconElement* value);
    HRESULT (STDMETHODCALLTYPE* add_QuerySubmitted)(__x_ABI_CWindows_CUI_CXaml_CControls_CIAutoSuggestBox2* This,
        __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CAutoSuggestBox___x_ABI_CWindows__CUI__CXaml__CControls__CAutoSuggestBoxQuerySubmittedEventArgs* handler,
        EventRegistrationToken* token);
    HRESULT (STDMETHODCALLTYPE* remove_QuerySubmitted)(__x_ABI_CWindows_CUI_CXaml_CControls_CIAutoSuggestBox2* This,
        EventRegistrationToken token);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CIAutoSuggestBox2Vtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CIAutoSuggestBox2
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIAutoSuggestBox2Vtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIAutoSuggestBox2;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIAutoSuggestBox2_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIAutoSuggestBox3_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CControls_CIAutoSuggestBox3_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIAutoSuggestBox3Vtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CControls_CIAutoSuggestBox3* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CControls_CIAutoSuggestBox3* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CControls_CIAutoSuggestBox3* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CControls_CIAutoSuggestBox3* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CControls_CIAutoSuggestBox3* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CControls_CIAutoSuggestBox3* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_LightDismissOverlayMode)(__x_ABI_CWindows_CUI_CXaml_CControls_CIAutoSuggestBox3* This,
        enum __x_ABI_CWindows_CUI_CXaml_CControls_CLightDismissOverlayMode* value);
    HRESULT (STDMETHODCALLTYPE* put_LightDismissOverlayMode)(__x_ABI_CWindows_CUI_CXaml_CControls_CIAutoSuggestBox3* This,
        enum __x_ABI_CWindows_CUI_CXaml_CControls_CLightDismissOverlayMode value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CIAutoSuggestBox3Vtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CIAutoSuggestBox3
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIAutoSuggestBox3Vtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIAutoSuggestBox3;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIAutoSuggestBox3_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIAutoSuggestBox4_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CControls_CIAutoSuggestBox4_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIAutoSuggestBox4Vtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CControls_CIAutoSuggestBox4* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CControls_CIAutoSuggestBox4* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CControls_CIAutoSuggestBox4* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CControls_CIAutoSuggestBox4* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CControls_CIAutoSuggestBox4* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CControls_CIAutoSuggestBox4* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Description)(__x_ABI_CWindows_CUI_CXaml_CControls_CIAutoSuggestBox4* This,
        IInspectable** value);
    HRESULT (STDMETHODCALLTYPE* put_Description)(__x_ABI_CWindows_CUI_CXaml_CControls_CIAutoSuggestBox4* This,
        IInspectable* value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CIAutoSuggestBox4Vtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CIAutoSuggestBox4
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIAutoSuggestBox4Vtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIAutoSuggestBox4;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIAutoSuggestBox4_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIAutoSuggestBoxQuerySubmittedEventArgs_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CControls_CIAutoSuggestBoxQuerySubmittedEventArgs_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIAutoSuggestBoxQuerySubmittedEventArgsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CControls_CIAutoSuggestBoxQuerySubmittedEventArgs* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CControls_CIAutoSuggestBoxQuerySubmittedEventArgs* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CControls_CIAutoSuggestBoxQuerySubmittedEventArgs* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CControls_CIAutoSuggestBoxQuerySubmittedEventArgs* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CControls_CIAutoSuggestBoxQuerySubmittedEventArgs* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CControls_CIAutoSuggestBoxQuerySubmittedEventArgs* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_QueryText)(__x_ABI_CWindows_CUI_CXaml_CControls_CIAutoSuggestBoxQuerySubmittedEventArgs* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* get_ChosenSuggestion)(__x_ABI_CWindows_CUI_CXaml_CControls_CIAutoSuggestBoxQuerySubmittedEventArgs* This,
        IInspectable** value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CIAutoSuggestBoxQuerySubmittedEventArgsVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CIAutoSuggestBoxQuerySubmittedEventArgs
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIAutoSuggestBoxQuerySubmittedEventArgsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIAutoSuggestBoxQuerySubmittedEventArgs;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIAutoSuggestBoxQuerySubmittedEventArgs_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIAutoSuggestBoxStatics_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CControls_CIAutoSuggestBoxStatics_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIAutoSuggestBoxStaticsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CControls_CIAutoSuggestBoxStatics* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CControls_CIAutoSuggestBoxStatics* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CControls_CIAutoSuggestBoxStatics* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CControls_CIAutoSuggestBoxStatics* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CControls_CIAutoSuggestBoxStatics* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CControls_CIAutoSuggestBoxStatics* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_MaxSuggestionListHeightProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CIAutoSuggestBoxStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_IsSuggestionListOpenProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CIAutoSuggestBoxStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_TextMemberPathProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CIAutoSuggestBoxStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_TextProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CIAutoSuggestBoxStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_UpdateTextOnSelectProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CIAutoSuggestBoxStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_PlaceholderTextProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CIAutoSuggestBoxStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_HeaderProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CIAutoSuggestBoxStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_AutoMaximizeSuggestionAreaProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CIAutoSuggestBoxStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_TextBoxStyleProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CIAutoSuggestBoxStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CIAutoSuggestBoxStaticsVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CIAutoSuggestBoxStatics
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIAutoSuggestBoxStaticsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIAutoSuggestBoxStatics;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIAutoSuggestBoxStatics_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIAutoSuggestBoxStatics2_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CControls_CIAutoSuggestBoxStatics2_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIAutoSuggestBoxStatics2Vtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CControls_CIAutoSuggestBoxStatics2* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CControls_CIAutoSuggestBoxStatics2* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CControls_CIAutoSuggestBoxStatics2* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CControls_CIAutoSuggestBoxStatics2* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CControls_CIAutoSuggestBoxStatics2* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CControls_CIAutoSuggestBoxStatics2* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_QueryIconProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CIAutoSuggestBoxStatics2* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CIAutoSuggestBoxStatics2Vtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CIAutoSuggestBoxStatics2
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIAutoSuggestBoxStatics2Vtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIAutoSuggestBoxStatics2;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIAutoSuggestBoxStatics2_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIAutoSuggestBoxStatics3_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CControls_CIAutoSuggestBoxStatics3_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIAutoSuggestBoxStatics3Vtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CControls_CIAutoSuggestBoxStatics3* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CControls_CIAutoSuggestBoxStatics3* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CControls_CIAutoSuggestBoxStatics3* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CControls_CIAutoSuggestBoxStatics3* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CControls_CIAutoSuggestBoxStatics3* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CControls_CIAutoSuggestBoxStatics3* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_LightDismissOverlayModeProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CIAutoSuggestBoxStatics3* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CIAutoSuggestBoxStatics3Vtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CIAutoSuggestBoxStatics3
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIAutoSuggestBoxStatics3Vtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIAutoSuggestBoxStatics3;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIAutoSuggestBoxStatics3_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIAutoSuggestBoxStatics4_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CControls_CIAutoSuggestBoxStatics4_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIAutoSuggestBoxStatics4Vtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CControls_CIAutoSuggestBoxStatics4* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CControls_CIAutoSuggestBoxStatics4* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CControls_CIAutoSuggestBoxStatics4* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CControls_CIAutoSuggestBoxStatics4* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CControls_CIAutoSuggestBoxStatics4* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CControls_CIAutoSuggestBoxStatics4* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_DescriptionProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CIAutoSuggestBoxStatics4* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CIAutoSuggestBoxStatics4Vtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CIAutoSuggestBoxStatics4
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIAutoSuggestBoxStatics4Vtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIAutoSuggestBoxStatics4;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIAutoSuggestBoxStatics4_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIAutoSuggestBoxSuggestionChosenEventArgs_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CControls_CIAutoSuggestBoxSuggestionChosenEventArgs_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIAutoSuggestBoxSuggestionChosenEventArgsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CControls_CIAutoSuggestBoxSuggestionChosenEventArgs* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CControls_CIAutoSuggestBoxSuggestionChosenEventArgs* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CControls_CIAutoSuggestBoxSuggestionChosenEventArgs* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CControls_CIAutoSuggestBoxSuggestionChosenEventArgs* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CControls_CIAutoSuggestBoxSuggestionChosenEventArgs* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CControls_CIAutoSuggestBoxSuggestionChosenEventArgs* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_SelectedItem)(__x_ABI_CWindows_CUI_CXaml_CControls_CIAutoSuggestBoxSuggestionChosenEventArgs* This,
        IInspectable** value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CIAutoSuggestBoxSuggestionChosenEventArgsVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CIAutoSuggestBoxSuggestionChosenEventArgs
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIAutoSuggestBoxSuggestionChosenEventArgsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIAutoSuggestBoxSuggestionChosenEventArgs;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIAutoSuggestBoxSuggestionChosenEventArgs_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIAutoSuggestBoxTextChangedEventArgs_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CControls_CIAutoSuggestBoxTextChangedEventArgs_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIAutoSuggestBoxTextChangedEventArgsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CControls_CIAutoSuggestBoxTextChangedEventArgs* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CControls_CIAutoSuggestBoxTextChangedEventArgs* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CControls_CIAutoSuggestBoxTextChangedEventArgs* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CControls_CIAutoSuggestBoxTextChangedEventArgs* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CControls_CIAutoSuggestBoxTextChangedEventArgs* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CControls_CIAutoSuggestBoxTextChangedEventArgs* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Reason)(__x_ABI_CWindows_CUI_CXaml_CControls_CIAutoSuggestBoxTextChangedEventArgs* This,
        enum __x_ABI_CWindows_CUI_CXaml_CControls_CAutoSuggestionBoxTextChangeReason* value);
    HRESULT (STDMETHODCALLTYPE* put_Reason)(__x_ABI_CWindows_CUI_CXaml_CControls_CIAutoSuggestBoxTextChangedEventArgs* This,
        enum __x_ABI_CWindows_CUI_CXaml_CControls_CAutoSuggestionBoxTextChangeReason value);
    HRESULT (STDMETHODCALLTYPE* CheckCurrent)(__x_ABI_CWindows_CUI_CXaml_CControls_CIAutoSuggestBoxTextChangedEventArgs* This,
        boolean* result);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CIAutoSuggestBoxTextChangedEventArgsVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CIAutoSuggestBoxTextChangedEventArgs
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIAutoSuggestBoxTextChangedEventArgsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIAutoSuggestBoxTextChangedEventArgs;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIAutoSuggestBoxTextChangedEventArgs_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIAutoSuggestBoxTextChangedEventArgsStatics_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CControls_CIAutoSuggestBoxTextChangedEventArgsStatics_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIAutoSuggestBoxTextChangedEventArgsStaticsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CControls_CIAutoSuggestBoxTextChangedEventArgsStatics* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CControls_CIAutoSuggestBoxTextChangedEventArgsStatics* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CControls_CIAutoSuggestBoxTextChangedEventArgsStatics* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CControls_CIAutoSuggestBoxTextChangedEventArgsStatics* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CControls_CIAutoSuggestBoxTextChangedEventArgsStatics* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CControls_CIAutoSuggestBoxTextChangedEventArgsStatics* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_ReasonProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CIAutoSuggestBoxTextChangedEventArgsStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CIAutoSuggestBoxTextChangedEventArgsStaticsVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CIAutoSuggestBoxTextChangedEventArgsStatics
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIAutoSuggestBoxTextChangedEventArgsStaticsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIAutoSuggestBoxTextChangedEventArgsStatics;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIAutoSuggestBoxTextChangedEventArgsStatics_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIBackClickEventArgs_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CControls_CIBackClickEventArgs_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIBackClickEventArgsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CControls_CIBackClickEventArgs* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CControls_CIBackClickEventArgs* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CControls_CIBackClickEventArgs* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CControls_CIBackClickEventArgs* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CControls_CIBackClickEventArgs* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CControls_CIBackClickEventArgs* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Handled)(__x_ABI_CWindows_CUI_CXaml_CControls_CIBackClickEventArgs* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* put_Handled)(__x_ABI_CWindows_CUI_CXaml_CControls_CIBackClickEventArgs* This,
        boolean value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CIBackClickEventArgsVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CIBackClickEventArgs
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIBackClickEventArgsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIBackClickEventArgs;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIBackClickEventArgs_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIBitmapIcon_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CControls_CIBitmapIcon_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIBitmapIconVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CControls_CIBitmapIcon* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CControls_CIBitmapIcon* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CControls_CIBitmapIcon* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CControls_CIBitmapIcon* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CControls_CIBitmapIcon* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CControls_CIBitmapIcon* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_UriSource)(__x_ABI_CWindows_CUI_CXaml_CControls_CIBitmapIcon* This,
        __x_ABI_CWindows_CFoundation_CIUriRuntimeClass** value);
    HRESULT (STDMETHODCALLTYPE* put_UriSource)(__x_ABI_CWindows_CUI_CXaml_CControls_CIBitmapIcon* This,
        __x_ABI_CWindows_CFoundation_CIUriRuntimeClass* value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CIBitmapIconVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CIBitmapIcon
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIBitmapIconVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIBitmapIcon;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIBitmapIcon_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIBitmapIcon2_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CControls_CIBitmapIcon2_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIBitmapIcon2Vtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CControls_CIBitmapIcon2* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CControls_CIBitmapIcon2* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CControls_CIBitmapIcon2* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CControls_CIBitmapIcon2* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CControls_CIBitmapIcon2* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CControls_CIBitmapIcon2* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_ShowAsMonochrome)(__x_ABI_CWindows_CUI_CXaml_CControls_CIBitmapIcon2* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* put_ShowAsMonochrome)(__x_ABI_CWindows_CUI_CXaml_CControls_CIBitmapIcon2* This,
        boolean value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CIBitmapIcon2Vtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CIBitmapIcon2
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIBitmapIcon2Vtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIBitmapIcon2;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIBitmapIcon2_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIBitmapIconFactory_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CControls_CIBitmapIconFactory_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIBitmapIconFactoryVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CControls_CIBitmapIconFactory* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CControls_CIBitmapIconFactory* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CControls_CIBitmapIconFactory* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CControls_CIBitmapIconFactory* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CControls_CIBitmapIconFactory* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CControls_CIBitmapIconFactory* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* CreateInstance)(__x_ABI_CWindows_CUI_CXaml_CControls_CIBitmapIconFactory* This,
        IInspectable* baseInterface,
        IInspectable** innerInterface,
        __x_ABI_CWindows_CUI_CXaml_CControls_CIBitmapIcon** value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CIBitmapIconFactoryVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CIBitmapIconFactory
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIBitmapIconFactoryVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIBitmapIconFactory;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIBitmapIconFactory_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIBitmapIconSource_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CControls_CIBitmapIconSource_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIBitmapIconSourceVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CControls_CIBitmapIconSource* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CControls_CIBitmapIconSource* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CControls_CIBitmapIconSource* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CControls_CIBitmapIconSource* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CControls_CIBitmapIconSource* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CControls_CIBitmapIconSource* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_UriSource)(__x_ABI_CWindows_CUI_CXaml_CControls_CIBitmapIconSource* This,
        __x_ABI_CWindows_CFoundation_CIUriRuntimeClass** value);
    HRESULT (STDMETHODCALLTYPE* put_UriSource)(__x_ABI_CWindows_CUI_CXaml_CControls_CIBitmapIconSource* This,
        __x_ABI_CWindows_CFoundation_CIUriRuntimeClass* value);
    HRESULT (STDMETHODCALLTYPE* get_ShowAsMonochrome)(__x_ABI_CWindows_CUI_CXaml_CControls_CIBitmapIconSource* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* put_ShowAsMonochrome)(__x_ABI_CWindows_CUI_CXaml_CControls_CIBitmapIconSource* This,
        boolean value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CIBitmapIconSourceVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CIBitmapIconSource
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIBitmapIconSourceVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIBitmapIconSource;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIBitmapIconSource_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIBitmapIconSourceFactory_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CControls_CIBitmapIconSourceFactory_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIBitmapIconSourceFactoryVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CControls_CIBitmapIconSourceFactory* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CControls_CIBitmapIconSourceFactory* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CControls_CIBitmapIconSourceFactory* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CControls_CIBitmapIconSourceFactory* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CControls_CIBitmapIconSourceFactory* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CControls_CIBitmapIconSourceFactory* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* CreateInstance)(__x_ABI_CWindows_CUI_CXaml_CControls_CIBitmapIconSourceFactory* This,
        IInspectable* baseInterface,
        IInspectable** innerInterface,
        __x_ABI_CWindows_CUI_CXaml_CControls_CIBitmapIconSource** value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CIBitmapIconSourceFactoryVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CIBitmapIconSourceFactory
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIBitmapIconSourceFactoryVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIBitmapIconSourceFactory;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIBitmapIconSourceFactory_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIBitmapIconSourceStatics_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CControls_CIBitmapIconSourceStatics_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIBitmapIconSourceStaticsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CControls_CIBitmapIconSourceStatics* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CControls_CIBitmapIconSourceStatics* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CControls_CIBitmapIconSourceStatics* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CControls_CIBitmapIconSourceStatics* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CControls_CIBitmapIconSourceStatics* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CControls_CIBitmapIconSourceStatics* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_UriSourceProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CIBitmapIconSourceStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_ShowAsMonochromeProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CIBitmapIconSourceStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CIBitmapIconSourceStaticsVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CIBitmapIconSourceStatics
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIBitmapIconSourceStaticsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIBitmapIconSourceStatics;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIBitmapIconSourceStatics_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIBitmapIconStatics_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CControls_CIBitmapIconStatics_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIBitmapIconStaticsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CControls_CIBitmapIconStatics* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CControls_CIBitmapIconStatics* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CControls_CIBitmapIconStatics* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CControls_CIBitmapIconStatics* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CControls_CIBitmapIconStatics* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CControls_CIBitmapIconStatics* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_UriSourceProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CIBitmapIconStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CIBitmapIconStaticsVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CIBitmapIconStatics
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIBitmapIconStaticsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIBitmapIconStatics;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIBitmapIconStatics_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIBitmapIconStatics2_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CControls_CIBitmapIconStatics2_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIBitmapIconStatics2Vtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CControls_CIBitmapIconStatics2* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CControls_CIBitmapIconStatics2* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CControls_CIBitmapIconStatics2* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CControls_CIBitmapIconStatics2* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CControls_CIBitmapIconStatics2* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CControls_CIBitmapIconStatics2* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_ShowAsMonochromeProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CIBitmapIconStatics2* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CIBitmapIconStatics2Vtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CIBitmapIconStatics2
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIBitmapIconStatics2Vtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIBitmapIconStatics2;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIBitmapIconStatics2_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIBorder_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CControls_CIBorder_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIBorderVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CControls_CIBorder* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CControls_CIBorder* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CControls_CIBorder* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CControls_CIBorder* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CControls_CIBorder* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CControls_CIBorder* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_BorderBrush)(__x_ABI_CWindows_CUI_CXaml_CControls_CIBorder* This,
        __x_ABI_CWindows_CUI_CXaml_CMedia_CIBrush** value);
    HRESULT (STDMETHODCALLTYPE* put_BorderBrush)(__x_ABI_CWindows_CUI_CXaml_CControls_CIBorder* This,
        __x_ABI_CWindows_CUI_CXaml_CMedia_CIBrush* value);
    HRESULT (STDMETHODCALLTYPE* get_BorderThickness)(__x_ABI_CWindows_CUI_CXaml_CControls_CIBorder* This,
        struct __x_ABI_CWindows_CUI_CXaml_CThickness* value);
    HRESULT (STDMETHODCALLTYPE* put_BorderThickness)(__x_ABI_CWindows_CUI_CXaml_CControls_CIBorder* This,
        struct __x_ABI_CWindows_CUI_CXaml_CThickness value);
    HRESULT (STDMETHODCALLTYPE* get_Background)(__x_ABI_CWindows_CUI_CXaml_CControls_CIBorder* This,
        __x_ABI_CWindows_CUI_CXaml_CMedia_CIBrush** value);
    HRESULT (STDMETHODCALLTYPE* put_Background)(__x_ABI_CWindows_CUI_CXaml_CControls_CIBorder* This,
        __x_ABI_CWindows_CUI_CXaml_CMedia_CIBrush* value);
    HRESULT (STDMETHODCALLTYPE* get_CornerRadius)(__x_ABI_CWindows_CUI_CXaml_CControls_CIBorder* This,
        struct __x_ABI_CWindows_CUI_CXaml_CCornerRadius* value);
    HRESULT (STDMETHODCALLTYPE* put_CornerRadius)(__x_ABI_CWindows_CUI_CXaml_CControls_CIBorder* This,
        struct __x_ABI_CWindows_CUI_CXaml_CCornerRadius value);
    HRESULT (STDMETHODCALLTYPE* get_Padding)(__x_ABI_CWindows_CUI_CXaml_CControls_CIBorder* This,
        struct __x_ABI_CWindows_CUI_CXaml_CThickness* value);
    HRESULT (STDMETHODCALLTYPE* put_Padding)(__x_ABI_CWindows_CUI_CXaml_CControls_CIBorder* This,
        struct __x_ABI_CWindows_CUI_CXaml_CThickness value);
    HRESULT (STDMETHODCALLTYPE* get_Child)(__x_ABI_CWindows_CUI_CXaml_CControls_CIBorder* This,
        __x_ABI_CWindows_CUI_CXaml_CIUIElement** value);
    HRESULT (STDMETHODCALLTYPE* put_Child)(__x_ABI_CWindows_CUI_CXaml_CControls_CIBorder* This,
        __x_ABI_CWindows_CUI_CXaml_CIUIElement* value);
    HRESULT (STDMETHODCALLTYPE* get_ChildTransitions)(__x_ABI_CWindows_CUI_CXaml_CControls_CIBorder* This,
        __x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CXaml__CMedia__CAnimation__CTransition** value);
    HRESULT (STDMETHODCALLTYPE* put_ChildTransitions)(__x_ABI_CWindows_CUI_CXaml_CControls_CIBorder* This,
        __x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CXaml__CMedia__CAnimation__CTransition* value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CIBorderVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CIBorder
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIBorderVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIBorder;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIBorder_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIBorder2_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CControls_CIBorder2_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIBorder2Vtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CControls_CIBorder2* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CControls_CIBorder2* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CControls_CIBorder2* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CControls_CIBorder2* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CControls_CIBorder2* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CControls_CIBorder2* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_BackgroundSizing)(__x_ABI_CWindows_CUI_CXaml_CControls_CIBorder2* This,
        enum __x_ABI_CWindows_CUI_CXaml_CControls_CBackgroundSizing* value);
    HRESULT (STDMETHODCALLTYPE* put_BackgroundSizing)(__x_ABI_CWindows_CUI_CXaml_CControls_CIBorder2* This,
        enum __x_ABI_CWindows_CUI_CXaml_CControls_CBackgroundSizing value);
    HRESULT (STDMETHODCALLTYPE* get_BackgroundTransition)(__x_ABI_CWindows_CUI_CXaml_CControls_CIBorder2* This,
        __x_ABI_CWindows_CUI_CXaml_CIBrushTransition** value);
    HRESULT (STDMETHODCALLTYPE* put_BackgroundTransition)(__x_ABI_CWindows_CUI_CXaml_CControls_CIBorder2* This,
        __x_ABI_CWindows_CUI_CXaml_CIBrushTransition* value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CIBorder2Vtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CIBorder2
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIBorder2Vtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIBorder2;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIBorder2_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIBorderStatics_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CControls_CIBorderStatics_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIBorderStaticsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CControls_CIBorderStatics* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CControls_CIBorderStatics* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CControls_CIBorderStatics* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CControls_CIBorderStatics* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CControls_CIBorderStatics* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CControls_CIBorderStatics* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_BorderBrushProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CIBorderStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_BorderThicknessProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CIBorderStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_BackgroundProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CIBorderStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_CornerRadiusProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CIBorderStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_PaddingProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CIBorderStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_ChildTransitionsProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CIBorderStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CIBorderStaticsVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CIBorderStatics
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIBorderStaticsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIBorderStatics;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIBorderStatics_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIBorderStatics2_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CControls_CIBorderStatics2_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIBorderStatics2Vtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CControls_CIBorderStatics2* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CControls_CIBorderStatics2* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CControls_CIBorderStatics2* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CControls_CIBorderStatics2* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CControls_CIBorderStatics2* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CControls_CIBorderStatics2* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_BackgroundSizingProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CIBorderStatics2* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CIBorderStatics2Vtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CIBorderStatics2
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIBorderStatics2Vtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIBorderStatics2;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIBorderStatics2_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIButton_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CControls_CIButton_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIButtonVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CControls_CIButton* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CControls_CIButton* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CControls_CIButton* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CControls_CIButton* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CControls_CIButton* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CControls_CIButton* This,
            TrustLevel* trustLevel);
    
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CIButtonVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CIButton
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIButtonVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIButton;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIButton_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIButtonFactory_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CControls_CIButtonFactory_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIButtonFactoryVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CControls_CIButtonFactory* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CControls_CIButtonFactory* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CControls_CIButtonFactory* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CControls_CIButtonFactory* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CControls_CIButtonFactory* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CControls_CIButtonFactory* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* CreateInstance)(__x_ABI_CWindows_CUI_CXaml_CControls_CIButtonFactory* This,
        IInspectable* baseInterface,
        IInspectable** innerInterface,
        __x_ABI_CWindows_CUI_CXaml_CControls_CIButton** value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CIButtonFactoryVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CIButtonFactory
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIButtonFactoryVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIButtonFactory;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIButtonFactory_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIButtonStaticsWithFlyout_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CControls_CIButtonStaticsWithFlyout_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIButtonStaticsWithFlyoutVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CControls_CIButtonStaticsWithFlyout* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CControls_CIButtonStaticsWithFlyout* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CControls_CIButtonStaticsWithFlyout* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CControls_CIButtonStaticsWithFlyout* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CControls_CIButtonStaticsWithFlyout* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CControls_CIButtonStaticsWithFlyout* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_FlyoutProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CIButtonStaticsWithFlyout* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CIButtonStaticsWithFlyoutVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CIButtonStaticsWithFlyout
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIButtonStaticsWithFlyoutVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIButtonStaticsWithFlyout;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIButtonStaticsWithFlyout_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIButtonWithFlyout_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CControls_CIButtonWithFlyout_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIButtonWithFlyoutVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CControls_CIButtonWithFlyout* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CControls_CIButtonWithFlyout* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CControls_CIButtonWithFlyout* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CControls_CIButtonWithFlyout* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CControls_CIButtonWithFlyout* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CControls_CIButtonWithFlyout* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Flyout)(__x_ABI_CWindows_CUI_CXaml_CControls_CIButtonWithFlyout* This,
        __x_ABI_CWindows_CUI_CXaml_CControls_CPrimitives_CIFlyoutBase** value);
    HRESULT (STDMETHODCALLTYPE* put_Flyout)(__x_ABI_CWindows_CUI_CXaml_CControls_CIButtonWithFlyout* This,
        __x_ABI_CWindows_CUI_CXaml_CControls_CPrimitives_CIFlyoutBase* value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CIButtonWithFlyoutVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CIButtonWithFlyout
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIButtonWithFlyoutVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIButtonWithFlyout;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIButtonWithFlyout_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CICalendarDatePicker_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CControls_CICalendarDatePicker_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CICalendarDatePickerVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CControls_CICalendarDatePicker* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CControls_CICalendarDatePicker* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CControls_CICalendarDatePicker* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CControls_CICalendarDatePicker* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CControls_CICalendarDatePicker* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CControls_CICalendarDatePicker* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Date)(__x_ABI_CWindows_CUI_CXaml_CControls_CICalendarDatePicker* This,
        __x_ABI_C__FIReference_1___x_ABI_CWindows__CFoundation__CDateTime** value);
    HRESULT (STDMETHODCALLTYPE* put_Date)(__x_ABI_CWindows_CUI_CXaml_CControls_CICalendarDatePicker* This,
        __x_ABI_C__FIReference_1___x_ABI_CWindows__CFoundation__CDateTime* value);
    HRESULT (STDMETHODCALLTYPE* get_IsCalendarOpen)(__x_ABI_CWindows_CUI_CXaml_CControls_CICalendarDatePicker* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* put_IsCalendarOpen)(__x_ABI_CWindows_CUI_CXaml_CControls_CICalendarDatePicker* This,
        boolean value);
    HRESULT (STDMETHODCALLTYPE* get_DateFormat)(__x_ABI_CWindows_CUI_CXaml_CControls_CICalendarDatePicker* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* put_DateFormat)(__x_ABI_CWindows_CUI_CXaml_CControls_CICalendarDatePicker* This,
        HSTRING value);
    HRESULT (STDMETHODCALLTYPE* get_PlaceholderText)(__x_ABI_CWindows_CUI_CXaml_CControls_CICalendarDatePicker* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* put_PlaceholderText)(__x_ABI_CWindows_CUI_CXaml_CControls_CICalendarDatePicker* This,
        HSTRING value);
    HRESULT (STDMETHODCALLTYPE* get_Header)(__x_ABI_CWindows_CUI_CXaml_CControls_CICalendarDatePicker* This,
        IInspectable** value);
    HRESULT (STDMETHODCALLTYPE* put_Header)(__x_ABI_CWindows_CUI_CXaml_CControls_CICalendarDatePicker* This,
        IInspectable* value);
    HRESULT (STDMETHODCALLTYPE* get_HeaderTemplate)(__x_ABI_CWindows_CUI_CXaml_CControls_CICalendarDatePicker* This,
        __x_ABI_CWindows_CUI_CXaml_CIDataTemplate** value);
    HRESULT (STDMETHODCALLTYPE* put_HeaderTemplate)(__x_ABI_CWindows_CUI_CXaml_CControls_CICalendarDatePicker* This,
        __x_ABI_CWindows_CUI_CXaml_CIDataTemplate* value);
    HRESULT (STDMETHODCALLTYPE* get_CalendarViewStyle)(__x_ABI_CWindows_CUI_CXaml_CControls_CICalendarDatePicker* This,
        __x_ABI_CWindows_CUI_CXaml_CIStyle** value);
    HRESULT (STDMETHODCALLTYPE* put_CalendarViewStyle)(__x_ABI_CWindows_CUI_CXaml_CControls_CICalendarDatePicker* This,
        __x_ABI_CWindows_CUI_CXaml_CIStyle* value);
    HRESULT (STDMETHODCALLTYPE* get_MinDate)(__x_ABI_CWindows_CUI_CXaml_CControls_CICalendarDatePicker* This,
        struct __x_ABI_CWindows_CFoundation_CDateTime* value);
    HRESULT (STDMETHODCALLTYPE* put_MinDate)(__x_ABI_CWindows_CUI_CXaml_CControls_CICalendarDatePicker* This,
        struct __x_ABI_CWindows_CFoundation_CDateTime value);
    HRESULT (STDMETHODCALLTYPE* get_MaxDate)(__x_ABI_CWindows_CUI_CXaml_CControls_CICalendarDatePicker* This,
        struct __x_ABI_CWindows_CFoundation_CDateTime* value);
    HRESULT (STDMETHODCALLTYPE* put_MaxDate)(__x_ABI_CWindows_CUI_CXaml_CControls_CICalendarDatePicker* This,
        struct __x_ABI_CWindows_CFoundation_CDateTime value);
    HRESULT (STDMETHODCALLTYPE* get_IsTodayHighlighted)(__x_ABI_CWindows_CUI_CXaml_CControls_CICalendarDatePicker* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* put_IsTodayHighlighted)(__x_ABI_CWindows_CUI_CXaml_CControls_CICalendarDatePicker* This,
        boolean value);
    HRESULT (STDMETHODCALLTYPE* get_DisplayMode)(__x_ABI_CWindows_CUI_CXaml_CControls_CICalendarDatePicker* This,
        enum __x_ABI_CWindows_CUI_CXaml_CControls_CCalendarViewDisplayMode* value);
    HRESULT (STDMETHODCALLTYPE* put_DisplayMode)(__x_ABI_CWindows_CUI_CXaml_CControls_CICalendarDatePicker* This,
        enum __x_ABI_CWindows_CUI_CXaml_CControls_CCalendarViewDisplayMode value);
    HRESULT (STDMETHODCALLTYPE* get_FirstDayOfWeek)(__x_ABI_CWindows_CUI_CXaml_CControls_CICalendarDatePicker* This,
        enum __x_ABI_CWindows_CGlobalization_CDayOfWeek* value);
    HRESULT (STDMETHODCALLTYPE* put_FirstDayOfWeek)(__x_ABI_CWindows_CUI_CXaml_CControls_CICalendarDatePicker* This,
        enum __x_ABI_CWindows_CGlobalization_CDayOfWeek value);
    HRESULT (STDMETHODCALLTYPE* get_DayOfWeekFormat)(__x_ABI_CWindows_CUI_CXaml_CControls_CICalendarDatePicker* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* put_DayOfWeekFormat)(__x_ABI_CWindows_CUI_CXaml_CControls_CICalendarDatePicker* This,
        HSTRING value);
    HRESULT (STDMETHODCALLTYPE* get_CalendarIdentifier)(__x_ABI_CWindows_CUI_CXaml_CControls_CICalendarDatePicker* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* put_CalendarIdentifier)(__x_ABI_CWindows_CUI_CXaml_CControls_CICalendarDatePicker* This,
        HSTRING value);
    HRESULT (STDMETHODCALLTYPE* get_IsOutOfScopeEnabled)(__x_ABI_CWindows_CUI_CXaml_CControls_CICalendarDatePicker* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* put_IsOutOfScopeEnabled)(__x_ABI_CWindows_CUI_CXaml_CControls_CICalendarDatePicker* This,
        boolean value);
    HRESULT (STDMETHODCALLTYPE* get_IsGroupLabelVisible)(__x_ABI_CWindows_CUI_CXaml_CControls_CICalendarDatePicker* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* put_IsGroupLabelVisible)(__x_ABI_CWindows_CUI_CXaml_CControls_CICalendarDatePicker* This,
        boolean value);
    HRESULT (STDMETHODCALLTYPE* add_CalendarViewDayItemChanging)(__x_ABI_CWindows_CUI_CXaml_CControls_CICalendarDatePicker* This,
        __x_ABI_CWindows_CUI_CXaml_CControls_CICalendarViewDayItemChangingEventHandler* handler,
        EventRegistrationToken* token);
    HRESULT (STDMETHODCALLTYPE* remove_CalendarViewDayItemChanging)(__x_ABI_CWindows_CUI_CXaml_CControls_CICalendarDatePicker* This,
        EventRegistrationToken token);
    HRESULT (STDMETHODCALLTYPE* add_DateChanged)(__x_ABI_CWindows_CUI_CXaml_CControls_CICalendarDatePicker* This,
        __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CCalendarDatePicker___x_ABI_CWindows__CUI__CXaml__CControls__CCalendarDatePickerDateChangedEventArgs* handler,
        EventRegistrationToken* token);
    HRESULT (STDMETHODCALLTYPE* remove_DateChanged)(__x_ABI_CWindows_CUI_CXaml_CControls_CICalendarDatePicker* This,
        EventRegistrationToken token);
    HRESULT (STDMETHODCALLTYPE* add_Opened)(__x_ABI_CWindows_CUI_CXaml_CControls_CICalendarDatePicker* This,
        __x_ABI_C__FIEventHandler_1_IInspectable* handler,
        EventRegistrationToken* token);
    HRESULT (STDMETHODCALLTYPE* remove_Opened)(__x_ABI_CWindows_CUI_CXaml_CControls_CICalendarDatePicker* This,
        EventRegistrationToken token);
    HRESULT (STDMETHODCALLTYPE* add_Closed)(__x_ABI_CWindows_CUI_CXaml_CControls_CICalendarDatePicker* This,
        __x_ABI_C__FIEventHandler_1_IInspectable* handler,
        EventRegistrationToken* token);
    HRESULT (STDMETHODCALLTYPE* remove_Closed)(__x_ABI_CWindows_CUI_CXaml_CControls_CICalendarDatePicker* This,
        EventRegistrationToken token);
    HRESULT (STDMETHODCALLTYPE* SetDisplayDate)(__x_ABI_CWindows_CUI_CXaml_CControls_CICalendarDatePicker* This,
        struct __x_ABI_CWindows_CFoundation_CDateTime date);
    HRESULT (STDMETHODCALLTYPE* SetYearDecadeDisplayDimensions)(__x_ABI_CWindows_CUI_CXaml_CControls_CICalendarDatePicker* This,
        INT32 columns,
        INT32 rows);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CICalendarDatePickerVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CICalendarDatePicker
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CICalendarDatePickerVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CICalendarDatePicker;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CICalendarDatePicker_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CICalendarDatePicker2_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CControls_CICalendarDatePicker2_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CICalendarDatePicker2Vtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CControls_CICalendarDatePicker2* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CControls_CICalendarDatePicker2* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CControls_CICalendarDatePicker2* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CControls_CICalendarDatePicker2* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CControls_CICalendarDatePicker2* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CControls_CICalendarDatePicker2* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_LightDismissOverlayMode)(__x_ABI_CWindows_CUI_CXaml_CControls_CICalendarDatePicker2* This,
        enum __x_ABI_CWindows_CUI_CXaml_CControls_CLightDismissOverlayMode* value);
    HRESULT (STDMETHODCALLTYPE* put_LightDismissOverlayMode)(__x_ABI_CWindows_CUI_CXaml_CControls_CICalendarDatePicker2* This,
        enum __x_ABI_CWindows_CUI_CXaml_CControls_CLightDismissOverlayMode value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CICalendarDatePicker2Vtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CICalendarDatePicker2
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CICalendarDatePicker2Vtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CICalendarDatePicker2;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CICalendarDatePicker2_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CICalendarDatePicker3_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CControls_CICalendarDatePicker3_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CICalendarDatePicker3Vtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CControls_CICalendarDatePicker3* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CControls_CICalendarDatePicker3* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CControls_CICalendarDatePicker3* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CControls_CICalendarDatePicker3* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CControls_CICalendarDatePicker3* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CControls_CICalendarDatePicker3* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Description)(__x_ABI_CWindows_CUI_CXaml_CControls_CICalendarDatePicker3* This,
        IInspectable** value);
    HRESULT (STDMETHODCALLTYPE* put_Description)(__x_ABI_CWindows_CUI_CXaml_CControls_CICalendarDatePicker3* This,
        IInspectable* value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CICalendarDatePicker3Vtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CICalendarDatePicker3
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CICalendarDatePicker3Vtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CICalendarDatePicker3;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CICalendarDatePicker3_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CICalendarDatePickerDateChangedEventArgs_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CControls_CICalendarDatePickerDateChangedEventArgs_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CICalendarDatePickerDateChangedEventArgsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CControls_CICalendarDatePickerDateChangedEventArgs* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CControls_CICalendarDatePickerDateChangedEventArgs* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CControls_CICalendarDatePickerDateChangedEventArgs* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CControls_CICalendarDatePickerDateChangedEventArgs* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CControls_CICalendarDatePickerDateChangedEventArgs* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CControls_CICalendarDatePickerDateChangedEventArgs* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_NewDate)(__x_ABI_CWindows_CUI_CXaml_CControls_CICalendarDatePickerDateChangedEventArgs* This,
        __x_ABI_C__FIReference_1___x_ABI_CWindows__CFoundation__CDateTime** value);
    HRESULT (STDMETHODCALLTYPE* get_OldDate)(__x_ABI_CWindows_CUI_CXaml_CControls_CICalendarDatePickerDateChangedEventArgs* This,
        __x_ABI_C__FIReference_1___x_ABI_CWindows__CFoundation__CDateTime** value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CICalendarDatePickerDateChangedEventArgsVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CICalendarDatePickerDateChangedEventArgs
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CICalendarDatePickerDateChangedEventArgsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CICalendarDatePickerDateChangedEventArgs;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CICalendarDatePickerDateChangedEventArgs_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CICalendarDatePickerFactory_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CControls_CICalendarDatePickerFactory_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CICalendarDatePickerFactoryVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CControls_CICalendarDatePickerFactory* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CControls_CICalendarDatePickerFactory* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CControls_CICalendarDatePickerFactory* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CControls_CICalendarDatePickerFactory* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CControls_CICalendarDatePickerFactory* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CControls_CICalendarDatePickerFactory* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* CreateInstance)(__x_ABI_CWindows_CUI_CXaml_CControls_CICalendarDatePickerFactory* This,
        IInspectable* baseInterface,
        IInspectable** innerInterface,
        __x_ABI_CWindows_CUI_CXaml_CControls_CICalendarDatePicker** value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CICalendarDatePickerFactoryVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CICalendarDatePickerFactory
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CICalendarDatePickerFactoryVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CICalendarDatePickerFactory;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CICalendarDatePickerFactory_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CICalendarDatePickerStatics_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CControls_CICalendarDatePickerStatics_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CICalendarDatePickerStaticsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CControls_CICalendarDatePickerStatics* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CControls_CICalendarDatePickerStatics* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CControls_CICalendarDatePickerStatics* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CControls_CICalendarDatePickerStatics* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CControls_CICalendarDatePickerStatics* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CControls_CICalendarDatePickerStatics* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_DateProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CICalendarDatePickerStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_IsCalendarOpenProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CICalendarDatePickerStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_DateFormatProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CICalendarDatePickerStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_PlaceholderTextProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CICalendarDatePickerStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_HeaderProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CICalendarDatePickerStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_HeaderTemplateProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CICalendarDatePickerStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_CalendarViewStyleProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CICalendarDatePickerStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_MinDateProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CICalendarDatePickerStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_MaxDateProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CICalendarDatePickerStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_IsTodayHighlightedProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CICalendarDatePickerStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_DisplayModeProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CICalendarDatePickerStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_FirstDayOfWeekProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CICalendarDatePickerStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_DayOfWeekFormatProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CICalendarDatePickerStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_CalendarIdentifierProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CICalendarDatePickerStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_IsOutOfScopeEnabledProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CICalendarDatePickerStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_IsGroupLabelVisibleProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CICalendarDatePickerStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CICalendarDatePickerStaticsVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CICalendarDatePickerStatics
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CICalendarDatePickerStaticsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CICalendarDatePickerStatics;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CICalendarDatePickerStatics_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CICalendarDatePickerStatics2_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CControls_CICalendarDatePickerStatics2_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CICalendarDatePickerStatics2Vtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CControls_CICalendarDatePickerStatics2* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CControls_CICalendarDatePickerStatics2* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CControls_CICalendarDatePickerStatics2* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CControls_CICalendarDatePickerStatics2* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CControls_CICalendarDatePickerStatics2* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CControls_CICalendarDatePickerStatics2* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_LightDismissOverlayModeProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CICalendarDatePickerStatics2* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CICalendarDatePickerStatics2Vtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CICalendarDatePickerStatics2
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CICalendarDatePickerStatics2Vtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CICalendarDatePickerStatics2;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CICalendarDatePickerStatics2_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CICalendarDatePickerStatics3_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CControls_CICalendarDatePickerStatics3_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CICalendarDatePickerStatics3Vtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CControls_CICalendarDatePickerStatics3* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CControls_CICalendarDatePickerStatics3* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CControls_CICalendarDatePickerStatics3* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CControls_CICalendarDatePickerStatics3* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CControls_CICalendarDatePickerStatics3* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CControls_CICalendarDatePickerStatics3* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_DescriptionProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CICalendarDatePickerStatics3* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CICalendarDatePickerStatics3Vtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CICalendarDatePickerStatics3
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CICalendarDatePickerStatics3Vtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CICalendarDatePickerStatics3;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CICalendarDatePickerStatics3_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CICalendarView_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CControls_CICalendarView_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CICalendarViewVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CControls_CICalendarView* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CControls_CICalendarView* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CControls_CICalendarView* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CControls_CICalendarView* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CControls_CICalendarView* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CControls_CICalendarView* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_CalendarIdentifier)(__x_ABI_CWindows_CUI_CXaml_CControls_CICalendarView* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* put_CalendarIdentifier)(__x_ABI_CWindows_CUI_CXaml_CControls_CICalendarView* This,
        HSTRING value);
    HRESULT (STDMETHODCALLTYPE* get_DayOfWeekFormat)(__x_ABI_CWindows_CUI_CXaml_CControls_CICalendarView* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* put_DayOfWeekFormat)(__x_ABI_CWindows_CUI_CXaml_CControls_CICalendarView* This,
        HSTRING value);
    HRESULT (STDMETHODCALLTYPE* get_IsGroupLabelVisible)(__x_ABI_CWindows_CUI_CXaml_CControls_CICalendarView* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* put_IsGroupLabelVisible)(__x_ABI_CWindows_CUI_CXaml_CControls_CICalendarView* This,
        boolean value);
    HRESULT (STDMETHODCALLTYPE* get_DisplayMode)(__x_ABI_CWindows_CUI_CXaml_CControls_CICalendarView* This,
        enum __x_ABI_CWindows_CUI_CXaml_CControls_CCalendarViewDisplayMode* value);
    HRESULT (STDMETHODCALLTYPE* put_DisplayMode)(__x_ABI_CWindows_CUI_CXaml_CControls_CICalendarView* This,
        enum __x_ABI_CWindows_CUI_CXaml_CControls_CCalendarViewDisplayMode value);
    HRESULT (STDMETHODCALLTYPE* get_FirstDayOfWeek)(__x_ABI_CWindows_CUI_CXaml_CControls_CICalendarView* This,
        enum __x_ABI_CWindows_CGlobalization_CDayOfWeek* value);
    HRESULT (STDMETHODCALLTYPE* put_FirstDayOfWeek)(__x_ABI_CWindows_CUI_CXaml_CControls_CICalendarView* This,
        enum __x_ABI_CWindows_CGlobalization_CDayOfWeek value);
    HRESULT (STDMETHODCALLTYPE* get_IsOutOfScopeEnabled)(__x_ABI_CWindows_CUI_CXaml_CControls_CICalendarView* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* put_IsOutOfScopeEnabled)(__x_ABI_CWindows_CUI_CXaml_CControls_CICalendarView* This,
        boolean value);
    HRESULT (STDMETHODCALLTYPE* get_IsTodayHighlighted)(__x_ABI_CWindows_CUI_CXaml_CControls_CICalendarView* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* put_IsTodayHighlighted)(__x_ABI_CWindows_CUI_CXaml_CControls_CICalendarView* This,
        boolean value);
    HRESULT (STDMETHODCALLTYPE* get_MaxDate)(__x_ABI_CWindows_CUI_CXaml_CControls_CICalendarView* This,
        struct __x_ABI_CWindows_CFoundation_CDateTime* value);
    HRESULT (STDMETHODCALLTYPE* put_MaxDate)(__x_ABI_CWindows_CUI_CXaml_CControls_CICalendarView* This,
        struct __x_ABI_CWindows_CFoundation_CDateTime value);
    HRESULT (STDMETHODCALLTYPE* get_MinDate)(__x_ABI_CWindows_CUI_CXaml_CControls_CICalendarView* This,
        struct __x_ABI_CWindows_CFoundation_CDateTime* value);
    HRESULT (STDMETHODCALLTYPE* put_MinDate)(__x_ABI_CWindows_CUI_CXaml_CControls_CICalendarView* This,
        struct __x_ABI_CWindows_CFoundation_CDateTime value);
    HRESULT (STDMETHODCALLTYPE* get_NumberOfWeeksInView)(__x_ABI_CWindows_CUI_CXaml_CControls_CICalendarView* This,
        INT32* value);
    HRESULT (STDMETHODCALLTYPE* put_NumberOfWeeksInView)(__x_ABI_CWindows_CUI_CXaml_CControls_CICalendarView* This,
        INT32 value);
    HRESULT (STDMETHODCALLTYPE* get_SelectedDates)(__x_ABI_CWindows_CUI_CXaml_CControls_CICalendarView* This,
        __x_ABI_C__FIVector_1___x_ABI_CWindows__CFoundation__CDateTime** value);
    HRESULT (STDMETHODCALLTYPE* get_SelectionMode)(__x_ABI_CWindows_CUI_CXaml_CControls_CICalendarView* This,
        enum __x_ABI_CWindows_CUI_CXaml_CControls_CCalendarViewSelectionMode* value);
    HRESULT (STDMETHODCALLTYPE* put_SelectionMode)(__x_ABI_CWindows_CUI_CXaml_CControls_CICalendarView* This,
        enum __x_ABI_CWindows_CUI_CXaml_CControls_CCalendarViewSelectionMode value);
    HRESULT (STDMETHODCALLTYPE* get_TemplateSettings)(__x_ABI_CWindows_CUI_CXaml_CControls_CICalendarView* This,
        __x_ABI_CWindows_CUI_CXaml_CControls_CPrimitives_CICalendarViewTemplateSettings** value);
    HRESULT (STDMETHODCALLTYPE* get_FocusBorderBrush)(__x_ABI_CWindows_CUI_CXaml_CControls_CICalendarView* This,
        __x_ABI_CWindows_CUI_CXaml_CMedia_CIBrush** value);
    HRESULT (STDMETHODCALLTYPE* put_FocusBorderBrush)(__x_ABI_CWindows_CUI_CXaml_CControls_CICalendarView* This,
        __x_ABI_CWindows_CUI_CXaml_CMedia_CIBrush* value);
    HRESULT (STDMETHODCALLTYPE* get_SelectedHoverBorderBrush)(__x_ABI_CWindows_CUI_CXaml_CControls_CICalendarView* This,
        __x_ABI_CWindows_CUI_CXaml_CMedia_CIBrush** value);
    HRESULT (STDMETHODCALLTYPE* put_SelectedHoverBorderBrush)(__x_ABI_CWindows_CUI_CXaml_CControls_CICalendarView* This,
        __x_ABI_CWindows_CUI_CXaml_CMedia_CIBrush* value);
    HRESULT (STDMETHODCALLTYPE* get_SelectedPressedBorderBrush)(__x_ABI_CWindows_CUI_CXaml_CControls_CICalendarView* This,
        __x_ABI_CWindows_CUI_CXaml_CMedia_CIBrush** value);
    HRESULT (STDMETHODCALLTYPE* put_SelectedPressedBorderBrush)(__x_ABI_CWindows_CUI_CXaml_CControls_CICalendarView* This,
        __x_ABI_CWindows_CUI_CXaml_CMedia_CIBrush* value);
    HRESULT (STDMETHODCALLTYPE* get_SelectedBorderBrush)(__x_ABI_CWindows_CUI_CXaml_CControls_CICalendarView* This,
        __x_ABI_CWindows_CUI_CXaml_CMedia_CIBrush** value);
    HRESULT (STDMETHODCALLTYPE* put_SelectedBorderBrush)(__x_ABI_CWindows_CUI_CXaml_CControls_CICalendarView* This,
        __x_ABI_CWindows_CUI_CXaml_CMedia_CIBrush* value);
    HRESULT (STDMETHODCALLTYPE* get_HoverBorderBrush)(__x_ABI_CWindows_CUI_CXaml_CControls_CICalendarView* This,
        __x_ABI_CWindows_CUI_CXaml_CMedia_CIBrush** value);
    HRESULT (STDMETHODCALLTYPE* put_HoverBorderBrush)(__x_ABI_CWindows_CUI_CXaml_CControls_CICalendarView* This,
        __x_ABI_CWindows_CUI_CXaml_CMedia_CIBrush* value);
    HRESULT (STDMETHODCALLTYPE* get_PressedBorderBrush)(__x_ABI_CWindows_CUI_CXaml_CControls_CICalendarView* This,
        __x_ABI_CWindows_CUI_CXaml_CMedia_CIBrush** value);
    HRESULT (STDMETHODCALLTYPE* put_PressedBorderBrush)(__x_ABI_CWindows_CUI_CXaml_CControls_CICalendarView* This,
        __x_ABI_CWindows_CUI_CXaml_CMedia_CIBrush* value);
    HRESULT (STDMETHODCALLTYPE* get_CalendarItemBorderBrush)(__x_ABI_CWindows_CUI_CXaml_CControls_CICalendarView* This,
        __x_ABI_CWindows_CUI_CXaml_CMedia_CIBrush** value);
    HRESULT (STDMETHODCALLTYPE* put_CalendarItemBorderBrush)(__x_ABI_CWindows_CUI_CXaml_CControls_CICalendarView* This,
        __x_ABI_CWindows_CUI_CXaml_CMedia_CIBrush* value);
    HRESULT (STDMETHODCALLTYPE* get_OutOfScopeBackground)(__x_ABI_CWindows_CUI_CXaml_CControls_CICalendarView* This,
        __x_ABI_CWindows_CUI_CXaml_CMedia_CIBrush** value);
    HRESULT (STDMETHODCALLTYPE* put_OutOfScopeBackground)(__x_ABI_CWindows_CUI_CXaml_CControls_CICalendarView* This,
        __x_ABI_CWindows_CUI_CXaml_CMedia_CIBrush* value);
    HRESULT (STDMETHODCALLTYPE* get_CalendarItemBackground)(__x_ABI_CWindows_CUI_CXaml_CControls_CICalendarView* This,
        __x_ABI_CWindows_CUI_CXaml_CMedia_CIBrush** value);
    HRESULT (STDMETHODCALLTYPE* put_CalendarItemBackground)(__x_ABI_CWindows_CUI_CXaml_CControls_CICalendarView* This,
        __x_ABI_CWindows_CUI_CXaml_CMedia_CIBrush* value);
    HRESULT (STDMETHODCALLTYPE* get_PressedForeground)(__x_ABI_CWindows_CUI_CXaml_CControls_CICalendarView* This,
        __x_ABI_CWindows_CUI_CXaml_CMedia_CIBrush** value);
    HRESULT (STDMETHODCALLTYPE* put_PressedForeground)(__x_ABI_CWindows_CUI_CXaml_CControls_CICalendarView* This,
        __x_ABI_CWindows_CUI_CXaml_CMedia_CIBrush* value);
    HRESULT (STDMETHODCALLTYPE* get_TodayForeground)(__x_ABI_CWindows_CUI_CXaml_CControls_CICalendarView* This,
        __x_ABI_CWindows_CUI_CXaml_CMedia_CIBrush** value);
    HRESULT (STDMETHODCALLTYPE* put_TodayForeground)(__x_ABI_CWindows_CUI_CXaml_CControls_CICalendarView* This,
        __x_ABI_CWindows_CUI_CXaml_CMedia_CIBrush* value);
    HRESULT (STDMETHODCALLTYPE* get_BlackoutForeground)(__x_ABI_CWindows_CUI_CXaml_CControls_CICalendarView* This,
        __x_ABI_CWindows_CUI_CXaml_CMedia_CIBrush** value);
    HRESULT (STDMETHODCALLTYPE* put_BlackoutForeground)(__x_ABI_CWindows_CUI_CXaml_CControls_CICalendarView* This,
        __x_ABI_CWindows_CUI_CXaml_CMedia_CIBrush* value);
    HRESULT (STDMETHODCALLTYPE* get_SelectedForeground)(__x_ABI_CWindows_CUI_CXaml_CControls_CICalendarView* This,
        __x_ABI_CWindows_CUI_CXaml_CMedia_CIBrush** value);
    HRESULT (STDMETHODCALLTYPE* put_SelectedForeground)(__x_ABI_CWindows_CUI_CXaml_CControls_CICalendarView* This,
        __x_ABI_CWindows_CUI_CXaml_CMedia_CIBrush* value);
    HRESULT (STDMETHODCALLTYPE* get_OutOfScopeForeground)(__x_ABI_CWindows_CUI_CXaml_CControls_CICalendarView* This,
        __x_ABI_CWindows_CUI_CXaml_CMedia_CIBrush** value);
    HRESULT (STDMETHODCALLTYPE* put_OutOfScopeForeground)(__x_ABI_CWindows_CUI_CXaml_CControls_CICalendarView* This,
        __x_ABI_CWindows_CUI_CXaml_CMedia_CIBrush* value);
    HRESULT (STDMETHODCALLTYPE* get_CalendarItemForeground)(__x_ABI_CWindows_CUI_CXaml_CControls_CICalendarView* This,
        __x_ABI_CWindows_CUI_CXaml_CMedia_CIBrush** value);
    HRESULT (STDMETHODCALLTYPE* put_CalendarItemForeground)(__x_ABI_CWindows_CUI_CXaml_CControls_CICalendarView* This,
        __x_ABI_CWindows_CUI_CXaml_CMedia_CIBrush* value);
    HRESULT (STDMETHODCALLTYPE* get_DayItemFontFamily)(__x_ABI_CWindows_CUI_CXaml_CControls_CICalendarView* This,
        __x_ABI_CWindows_CUI_CXaml_CMedia_CIFontFamily** value);
    HRESULT (STDMETHODCALLTYPE* put_DayItemFontFamily)(__x_ABI_CWindows_CUI_CXaml_CControls_CICalendarView* This,
        __x_ABI_CWindows_CUI_CXaml_CMedia_CIFontFamily* value);
    HRESULT (STDMETHODCALLTYPE* get_DayItemFontSize)(__x_ABI_CWindows_CUI_CXaml_CControls_CICalendarView* This,
        DOUBLE* value);
    HRESULT (STDMETHODCALLTYPE* put_DayItemFontSize)(__x_ABI_CWindows_CUI_CXaml_CControls_CICalendarView* This,
        DOUBLE value);
    HRESULT (STDMETHODCALLTYPE* get_DayItemFontStyle)(__x_ABI_CWindows_CUI_CXaml_CControls_CICalendarView* This,
        enum __x_ABI_CWindows_CUI_CText_CFontStyle* value);
    HRESULT (STDMETHODCALLTYPE* put_DayItemFontStyle)(__x_ABI_CWindows_CUI_CXaml_CControls_CICalendarView* This,
        enum __x_ABI_CWindows_CUI_CText_CFontStyle value);
    HRESULT (STDMETHODCALLTYPE* get_DayItemFontWeight)(__x_ABI_CWindows_CUI_CXaml_CControls_CICalendarView* This,
        struct __x_ABI_CWindows_CUI_CText_CFontWeight* value);
    HRESULT (STDMETHODCALLTYPE* put_DayItemFontWeight)(__x_ABI_CWindows_CUI_CXaml_CControls_CICalendarView* This,
        struct __x_ABI_CWindows_CUI_CText_CFontWeight value);
    HRESULT (STDMETHODCALLTYPE* get_TodayFontWeight)(__x_ABI_CWindows_CUI_CXaml_CControls_CICalendarView* This,
        struct __x_ABI_CWindows_CUI_CText_CFontWeight* value);
    HRESULT (STDMETHODCALLTYPE* put_TodayFontWeight)(__x_ABI_CWindows_CUI_CXaml_CControls_CICalendarView* This,
        struct __x_ABI_CWindows_CUI_CText_CFontWeight value);
    HRESULT (STDMETHODCALLTYPE* get_FirstOfMonthLabelFontFamily)(__x_ABI_CWindows_CUI_CXaml_CControls_CICalendarView* This,
        __x_ABI_CWindows_CUI_CXaml_CMedia_CIFontFamily** value);
    HRESULT (STDMETHODCALLTYPE* put_FirstOfMonthLabelFontFamily)(__x_ABI_CWindows_CUI_CXaml_CControls_CICalendarView* This,
        __x_ABI_CWindows_CUI_CXaml_CMedia_CIFontFamily* value);
    HRESULT (STDMETHODCALLTYPE* get_FirstOfMonthLabelFontSize)(__x_ABI_CWindows_CUI_CXaml_CControls_CICalendarView* This,
        DOUBLE* value);
    HRESULT (STDMETHODCALLTYPE* put_FirstOfMonthLabelFontSize)(__x_ABI_CWindows_CUI_CXaml_CControls_CICalendarView* This,
        DOUBLE value);
    HRESULT (STDMETHODCALLTYPE* get_FirstOfMonthLabelFontStyle)(__x_ABI_CWindows_CUI_CXaml_CControls_CICalendarView* This,
        enum __x_ABI_CWindows_CUI_CText_CFontStyle* value);
    HRESULT (STDMETHODCALLTYPE* put_FirstOfMonthLabelFontStyle)(__x_ABI_CWindows_CUI_CXaml_CControls_CICalendarView* This,
        enum __x_ABI_CWindows_CUI_CText_CFontStyle value);
    HRESULT (STDMETHODCALLTYPE* get_FirstOfMonthLabelFontWeight)(__x_ABI_CWindows_CUI_CXaml_CControls_CICalendarView* This,
        struct __x_ABI_CWindows_CUI_CText_CFontWeight* value);
    HRESULT (STDMETHODCALLTYPE* put_FirstOfMonthLabelFontWeight)(__x_ABI_CWindows_CUI_CXaml_CControls_CICalendarView* This,
        struct __x_ABI_CWindows_CUI_CText_CFontWeight value);
    HRESULT (STDMETHODCALLTYPE* get_MonthYearItemFontFamily)(__x_ABI_CWindows_CUI_CXaml_CControls_CICalendarView* This,
        __x_ABI_CWindows_CUI_CXaml_CMedia_CIFontFamily** value);
    HRESULT (STDMETHODCALLTYPE* put_MonthYearItemFontFamily)(__x_ABI_CWindows_CUI_CXaml_CControls_CICalendarView* This,
        __x_ABI_CWindows_CUI_CXaml_CMedia_CIFontFamily* value);
    HRESULT (STDMETHODCALLTYPE* get_MonthYearItemFontSize)(__x_ABI_CWindows_CUI_CXaml_CControls_CICalendarView* This,
        DOUBLE* value);
    HRESULT (STDMETHODCALLTYPE* put_MonthYearItemFontSize)(__x_ABI_CWindows_CUI_CXaml_CControls_CICalendarView* This,
        DOUBLE value);
    HRESULT (STDMETHODCALLTYPE* get_MonthYearItemFontStyle)(__x_ABI_CWindows_CUI_CXaml_CControls_CICalendarView* This,
        enum __x_ABI_CWindows_CUI_CText_CFontStyle* value);
    HRESULT (STDMETHODCALLTYPE* put_MonthYearItemFontStyle)(__x_ABI_CWindows_CUI_CXaml_CControls_CICalendarView* This,
        enum __x_ABI_CWindows_CUI_CText_CFontStyle value);
    HRESULT (STDMETHODCALLTYPE* get_MonthYearItemFontWeight)(__x_ABI_CWindows_CUI_CXaml_CControls_CICalendarView* This,
        struct __x_ABI_CWindows_CUI_CText_CFontWeight* value);
    HRESULT (STDMETHODCALLTYPE* put_MonthYearItemFontWeight)(__x_ABI_CWindows_CUI_CXaml_CControls_CICalendarView* This,
        struct __x_ABI_CWindows_CUI_CText_CFontWeight value);
    HRESULT (STDMETHODCALLTYPE* get_FirstOfYearDecadeLabelFontFamily)(__x_ABI_CWindows_CUI_CXaml_CControls_CICalendarView* This,
        __x_ABI_CWindows_CUI_CXaml_CMedia_CIFontFamily** value);
    HRESULT (STDMETHODCALLTYPE* put_FirstOfYearDecadeLabelFontFamily)(__x_ABI_CWindows_CUI_CXaml_CControls_CICalendarView* This,
        __x_ABI_CWindows_CUI_CXaml_CMedia_CIFontFamily* value);
    HRESULT (STDMETHODCALLTYPE* get_FirstOfYearDecadeLabelFontSize)(__x_ABI_CWindows_CUI_CXaml_CControls_CICalendarView* This,
        DOUBLE* value);
    HRESULT (STDMETHODCALLTYPE* put_FirstOfYearDecadeLabelFontSize)(__x_ABI_CWindows_CUI_CXaml_CControls_CICalendarView* This,
        DOUBLE value);
    HRESULT (STDMETHODCALLTYPE* get_FirstOfYearDecadeLabelFontStyle)(__x_ABI_CWindows_CUI_CXaml_CControls_CICalendarView* This,
        enum __x_ABI_CWindows_CUI_CText_CFontStyle* value);
    HRESULT (STDMETHODCALLTYPE* put_FirstOfYearDecadeLabelFontStyle)(__x_ABI_CWindows_CUI_CXaml_CControls_CICalendarView* This,
        enum __x_ABI_CWindows_CUI_CText_CFontStyle value);
    HRESULT (STDMETHODCALLTYPE* get_FirstOfYearDecadeLabelFontWeight)(__x_ABI_CWindows_CUI_CXaml_CControls_CICalendarView* This,
        struct __x_ABI_CWindows_CUI_CText_CFontWeight* value);
    HRESULT (STDMETHODCALLTYPE* put_FirstOfYearDecadeLabelFontWeight)(__x_ABI_CWindows_CUI_CXaml_CControls_CICalendarView* This,
        struct __x_ABI_CWindows_CUI_CText_CFontWeight value);
    HRESULT (STDMETHODCALLTYPE* get_HorizontalDayItemAlignment)(__x_ABI_CWindows_CUI_CXaml_CControls_CICalendarView* This,
        enum __x_ABI_CWindows_CUI_CXaml_CHorizontalAlignment* value);
    HRESULT (STDMETHODCALLTYPE* put_HorizontalDayItemAlignment)(__x_ABI_CWindows_CUI_CXaml_CControls_CICalendarView* This,
        enum __x_ABI_CWindows_CUI_CXaml_CHorizontalAlignment value);
    HRESULT (STDMETHODCALLTYPE* get_VerticalDayItemAlignment)(__x_ABI_CWindows_CUI_CXaml_CControls_CICalendarView* This,
        enum __x_ABI_CWindows_CUI_CXaml_CVerticalAlignment* value);
    HRESULT (STDMETHODCALLTYPE* put_VerticalDayItemAlignment)(__x_ABI_CWindows_CUI_CXaml_CControls_CICalendarView* This,
        enum __x_ABI_CWindows_CUI_CXaml_CVerticalAlignment value);
    HRESULT (STDMETHODCALLTYPE* get_HorizontalFirstOfMonthLabelAlignment)(__x_ABI_CWindows_CUI_CXaml_CControls_CICalendarView* This,
        enum __x_ABI_CWindows_CUI_CXaml_CHorizontalAlignment* value);
    HRESULT (STDMETHODCALLTYPE* put_HorizontalFirstOfMonthLabelAlignment)(__x_ABI_CWindows_CUI_CXaml_CControls_CICalendarView* This,
        enum __x_ABI_CWindows_CUI_CXaml_CHorizontalAlignment value);
    HRESULT (STDMETHODCALLTYPE* get_VerticalFirstOfMonthLabelAlignment)(__x_ABI_CWindows_CUI_CXaml_CControls_CICalendarView* This,
        enum __x_ABI_CWindows_CUI_CXaml_CVerticalAlignment* value);
    HRESULT (STDMETHODCALLTYPE* put_VerticalFirstOfMonthLabelAlignment)(__x_ABI_CWindows_CUI_CXaml_CControls_CICalendarView* This,
        enum __x_ABI_CWindows_CUI_CXaml_CVerticalAlignment value);
    HRESULT (STDMETHODCALLTYPE* get_CalendarItemBorderThickness)(__x_ABI_CWindows_CUI_CXaml_CControls_CICalendarView* This,
        struct __x_ABI_CWindows_CUI_CXaml_CThickness* value);
    HRESULT (STDMETHODCALLTYPE* put_CalendarItemBorderThickness)(__x_ABI_CWindows_CUI_CXaml_CControls_CICalendarView* This,
        struct __x_ABI_CWindows_CUI_CXaml_CThickness value);
    HRESULT (STDMETHODCALLTYPE* get_CalendarViewDayItemStyle)(__x_ABI_CWindows_CUI_CXaml_CControls_CICalendarView* This,
        __x_ABI_CWindows_CUI_CXaml_CIStyle** value);
    HRESULT (STDMETHODCALLTYPE* put_CalendarViewDayItemStyle)(__x_ABI_CWindows_CUI_CXaml_CControls_CICalendarView* This,
        __x_ABI_CWindows_CUI_CXaml_CIStyle* value);
    HRESULT (STDMETHODCALLTYPE* add_CalendarViewDayItemChanging)(__x_ABI_CWindows_CUI_CXaml_CControls_CICalendarView* This,
        __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CCalendarView___x_ABI_CWindows__CUI__CXaml__CControls__CCalendarViewDayItemChangingEventArgs* handler,
        EventRegistrationToken* token);
    HRESULT (STDMETHODCALLTYPE* remove_CalendarViewDayItemChanging)(__x_ABI_CWindows_CUI_CXaml_CControls_CICalendarView* This,
        EventRegistrationToken token);
    HRESULT (STDMETHODCALLTYPE* add_SelectedDatesChanged)(__x_ABI_CWindows_CUI_CXaml_CControls_CICalendarView* This,
        __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CCalendarView___x_ABI_CWindows__CUI__CXaml__CControls__CCalendarViewSelectedDatesChangedEventArgs* handler,
        EventRegistrationToken* token);
    HRESULT (STDMETHODCALLTYPE* remove_SelectedDatesChanged)(__x_ABI_CWindows_CUI_CXaml_CControls_CICalendarView* This,
        EventRegistrationToken token);
    HRESULT (STDMETHODCALLTYPE* SetDisplayDate)(__x_ABI_CWindows_CUI_CXaml_CControls_CICalendarView* This,
        struct __x_ABI_CWindows_CFoundation_CDateTime date);
    HRESULT (STDMETHODCALLTYPE* SetYearDecadeDisplayDimensions)(__x_ABI_CWindows_CUI_CXaml_CControls_CICalendarView* This,
        INT32 columns,
        INT32 rows);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CICalendarViewVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CICalendarView
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CICalendarViewVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CICalendarView;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CICalendarView_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CICalendarViewDayItem_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CControls_CICalendarViewDayItem_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CICalendarViewDayItemVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CControls_CICalendarViewDayItem* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CControls_CICalendarViewDayItem* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CControls_CICalendarViewDayItem* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CControls_CICalendarViewDayItem* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CControls_CICalendarViewDayItem* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CControls_CICalendarViewDayItem* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_IsBlackout)(__x_ABI_CWindows_CUI_CXaml_CControls_CICalendarViewDayItem* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* put_IsBlackout)(__x_ABI_CWindows_CUI_CXaml_CControls_CICalendarViewDayItem* This,
        boolean value);
    HRESULT (STDMETHODCALLTYPE* get_Date)(__x_ABI_CWindows_CUI_CXaml_CControls_CICalendarViewDayItem* This,
        struct __x_ABI_CWindows_CFoundation_CDateTime* value);
    HRESULT (STDMETHODCALLTYPE* SetDensityColors)(__x_ABI_CWindows_CUI_CXaml_CControls_CICalendarViewDayItem* This,
        __x_ABI_C__FIIterable_1___x_ABI_CWindows__CUI__CColor* colors);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CICalendarViewDayItemVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CICalendarViewDayItem
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CICalendarViewDayItemVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CICalendarViewDayItem;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CICalendarViewDayItem_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CICalendarViewDayItemChangingEventArgs_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CControls_CICalendarViewDayItemChangingEventArgs_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CICalendarViewDayItemChangingEventArgsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CControls_CICalendarViewDayItemChangingEventArgs* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CControls_CICalendarViewDayItemChangingEventArgs* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CControls_CICalendarViewDayItemChangingEventArgs* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CControls_CICalendarViewDayItemChangingEventArgs* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CControls_CICalendarViewDayItemChangingEventArgs* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CControls_CICalendarViewDayItemChangingEventArgs* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_InRecycleQueue)(__x_ABI_CWindows_CUI_CXaml_CControls_CICalendarViewDayItemChangingEventArgs* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* get_Item)(__x_ABI_CWindows_CUI_CXaml_CControls_CICalendarViewDayItemChangingEventArgs* This,
        __x_ABI_CWindows_CUI_CXaml_CControls_CICalendarViewDayItem** value);
    HRESULT (STDMETHODCALLTYPE* get_Phase)(__x_ABI_CWindows_CUI_CXaml_CControls_CICalendarViewDayItemChangingEventArgs* This,
        UINT32* value);
    HRESULT (STDMETHODCALLTYPE* RegisterUpdateCallback)(__x_ABI_CWindows_CUI_CXaml_CControls_CICalendarViewDayItemChangingEventArgs* This,
        __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CCalendarView___x_ABI_CWindows__CUI__CXaml__CControls__CCalendarViewDayItemChangingEventArgs* callback);
    HRESULT (STDMETHODCALLTYPE* RegisterUpdateCallbackWithPhase)(__x_ABI_CWindows_CUI_CXaml_CControls_CICalendarViewDayItemChangingEventArgs* This,
        UINT32 callbackPhase,
        __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CCalendarView___x_ABI_CWindows__CUI__CXaml__CControls__CCalendarViewDayItemChangingEventArgs* callback);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CICalendarViewDayItemChangingEventArgsVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CICalendarViewDayItemChangingEventArgs
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CICalendarViewDayItemChangingEventArgsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CICalendarViewDayItemChangingEventArgs;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CICalendarViewDayItemChangingEventArgs_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CICalendarViewDayItemFactory_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CControls_CICalendarViewDayItemFactory_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CICalendarViewDayItemFactoryVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CControls_CICalendarViewDayItemFactory* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CControls_CICalendarViewDayItemFactory* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CControls_CICalendarViewDayItemFactory* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CControls_CICalendarViewDayItemFactory* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CControls_CICalendarViewDayItemFactory* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CControls_CICalendarViewDayItemFactory* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* CreateInstance)(__x_ABI_CWindows_CUI_CXaml_CControls_CICalendarViewDayItemFactory* This,
        IInspectable* baseInterface,
        IInspectable** innerInterface,
        __x_ABI_CWindows_CUI_CXaml_CControls_CICalendarViewDayItem** value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CICalendarViewDayItemFactoryVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CICalendarViewDayItemFactory
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CICalendarViewDayItemFactoryVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CICalendarViewDayItemFactory;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CICalendarViewDayItemFactory_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CICalendarViewDayItemStatics_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CControls_CICalendarViewDayItemStatics_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CICalendarViewDayItemStaticsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CControls_CICalendarViewDayItemStatics* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CControls_CICalendarViewDayItemStatics* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CControls_CICalendarViewDayItemStatics* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CControls_CICalendarViewDayItemStatics* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CControls_CICalendarViewDayItemStatics* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CControls_CICalendarViewDayItemStatics* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_IsBlackoutProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CICalendarViewDayItemStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_DateProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CICalendarViewDayItemStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CICalendarViewDayItemStaticsVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CICalendarViewDayItemStatics
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CICalendarViewDayItemStaticsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CICalendarViewDayItemStatics;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CICalendarViewDayItemStatics_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CICalendarViewFactory_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CControls_CICalendarViewFactory_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CICalendarViewFactoryVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CControls_CICalendarViewFactory* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CControls_CICalendarViewFactory* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CControls_CICalendarViewFactory* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CControls_CICalendarViewFactory* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CControls_CICalendarViewFactory* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CControls_CICalendarViewFactory* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* CreateInstance)(__x_ABI_CWindows_CUI_CXaml_CControls_CICalendarViewFactory* This,
        IInspectable* baseInterface,
        IInspectable** innerInterface,
        __x_ABI_CWindows_CUI_CXaml_CControls_CICalendarView** value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CICalendarViewFactoryVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CICalendarViewFactory
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CICalendarViewFactoryVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CICalendarViewFactory;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CICalendarViewFactory_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CICalendarViewSelectedDatesChangedEventArgs_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CControls_CICalendarViewSelectedDatesChangedEventArgs_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CICalendarViewSelectedDatesChangedEventArgsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CControls_CICalendarViewSelectedDatesChangedEventArgs* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CControls_CICalendarViewSelectedDatesChangedEventArgs* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CControls_CICalendarViewSelectedDatesChangedEventArgs* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CControls_CICalendarViewSelectedDatesChangedEventArgs* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CControls_CICalendarViewSelectedDatesChangedEventArgs* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CControls_CICalendarViewSelectedDatesChangedEventArgs* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_AddedDates)(__x_ABI_CWindows_CUI_CXaml_CControls_CICalendarViewSelectedDatesChangedEventArgs* This,
        __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CFoundation__CDateTime** value);
    HRESULT (STDMETHODCALLTYPE* get_RemovedDates)(__x_ABI_CWindows_CUI_CXaml_CControls_CICalendarViewSelectedDatesChangedEventArgs* This,
        __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CFoundation__CDateTime** value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CICalendarViewSelectedDatesChangedEventArgsVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CICalendarViewSelectedDatesChangedEventArgs
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CICalendarViewSelectedDatesChangedEventArgsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CICalendarViewSelectedDatesChangedEventArgs;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CICalendarViewSelectedDatesChangedEventArgs_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CICalendarViewStatics_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CControls_CICalendarViewStatics_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CICalendarViewStaticsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CControls_CICalendarViewStatics* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CControls_CICalendarViewStatics* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CControls_CICalendarViewStatics* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CControls_CICalendarViewStatics* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CControls_CICalendarViewStatics* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CControls_CICalendarViewStatics* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_CalendarIdentifierProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CICalendarViewStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_DayOfWeekFormatProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CICalendarViewStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_IsGroupLabelVisibleProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CICalendarViewStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_DisplayModeProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CICalendarViewStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_FirstDayOfWeekProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CICalendarViewStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_IsOutOfScopeEnabledProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CICalendarViewStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_IsTodayHighlightedProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CICalendarViewStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_MaxDateProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CICalendarViewStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_MinDateProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CICalendarViewStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_NumberOfWeeksInViewProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CICalendarViewStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_SelectedDatesProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CICalendarViewStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_SelectionModeProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CICalendarViewStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_TemplateSettingsProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CICalendarViewStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_FocusBorderBrushProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CICalendarViewStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_SelectedHoverBorderBrushProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CICalendarViewStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_SelectedPressedBorderBrushProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CICalendarViewStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_SelectedBorderBrushProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CICalendarViewStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_HoverBorderBrushProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CICalendarViewStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_PressedBorderBrushProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CICalendarViewStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_CalendarItemBorderBrushProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CICalendarViewStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_OutOfScopeBackgroundProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CICalendarViewStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_CalendarItemBackgroundProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CICalendarViewStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_PressedForegroundProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CICalendarViewStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_TodayForegroundProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CICalendarViewStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_BlackoutForegroundProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CICalendarViewStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_SelectedForegroundProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CICalendarViewStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_OutOfScopeForegroundProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CICalendarViewStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_CalendarItemForegroundProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CICalendarViewStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_DayItemFontFamilyProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CICalendarViewStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_DayItemFontSizeProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CICalendarViewStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_DayItemFontStyleProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CICalendarViewStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_DayItemFontWeightProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CICalendarViewStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_TodayFontWeightProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CICalendarViewStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_FirstOfMonthLabelFontFamilyProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CICalendarViewStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_FirstOfMonthLabelFontSizeProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CICalendarViewStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_FirstOfMonthLabelFontStyleProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CICalendarViewStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_FirstOfMonthLabelFontWeightProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CICalendarViewStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_MonthYearItemFontFamilyProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CICalendarViewStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_MonthYearItemFontSizeProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CICalendarViewStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_MonthYearItemFontStyleProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CICalendarViewStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_MonthYearItemFontWeightProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CICalendarViewStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_FirstOfYearDecadeLabelFontFamilyProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CICalendarViewStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_FirstOfYearDecadeLabelFontSizeProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CICalendarViewStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_FirstOfYearDecadeLabelFontStyleProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CICalendarViewStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_FirstOfYearDecadeLabelFontWeightProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CICalendarViewStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_HorizontalDayItemAlignmentProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CICalendarViewStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_VerticalDayItemAlignmentProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CICalendarViewStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_HorizontalFirstOfMonthLabelAlignmentProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CICalendarViewStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_VerticalFirstOfMonthLabelAlignmentProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CICalendarViewStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_CalendarItemBorderThicknessProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CICalendarViewStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_CalendarViewDayItemStyleProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CICalendarViewStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CICalendarViewStaticsVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CICalendarViewStatics
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CICalendarViewStaticsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CICalendarViewStatics;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CICalendarViewStatics_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CICandidateWindowBoundsChangedEventArgs_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CControls_CICandidateWindowBoundsChangedEventArgs_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CICandidateWindowBoundsChangedEventArgsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CControls_CICandidateWindowBoundsChangedEventArgs* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CControls_CICandidateWindowBoundsChangedEventArgs* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CControls_CICandidateWindowBoundsChangedEventArgs* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CControls_CICandidateWindowBoundsChangedEventArgs* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CControls_CICandidateWindowBoundsChangedEventArgs* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CControls_CICandidateWindowBoundsChangedEventArgs* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Bounds)(__x_ABI_CWindows_CUI_CXaml_CControls_CICandidateWindowBoundsChangedEventArgs* This,
        struct __x_ABI_CWindows_CFoundation_CRect* value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CICandidateWindowBoundsChangedEventArgsVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CICandidateWindowBoundsChangedEventArgs
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CICandidateWindowBoundsChangedEventArgsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CICandidateWindowBoundsChangedEventArgs;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CICandidateWindowBoundsChangedEventArgs_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CICanvas_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CControls_CICanvas_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CICanvasVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CControls_CICanvas* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CControls_CICanvas* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CControls_CICanvas* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CControls_CICanvas* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CControls_CICanvas* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CControls_CICanvas* This,
            TrustLevel* trustLevel);
    
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CICanvasVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CICanvas
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CICanvasVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CICanvas;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CICanvas_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CICanvasFactory_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CControls_CICanvasFactory_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CICanvasFactoryVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CControls_CICanvasFactory* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CControls_CICanvasFactory* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CControls_CICanvasFactory* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CControls_CICanvasFactory* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CControls_CICanvasFactory* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CControls_CICanvasFactory* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* CreateInstance)(__x_ABI_CWindows_CUI_CXaml_CControls_CICanvasFactory* This,
        IInspectable* baseInterface,
        IInspectable** innerInterface,
        __x_ABI_CWindows_CUI_CXaml_CControls_CICanvas** value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CICanvasFactoryVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CICanvasFactory
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CICanvasFactoryVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CICanvasFactory;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CICanvasFactory_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CICanvasStatics_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CControls_CICanvasStatics_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CICanvasStaticsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CControls_CICanvasStatics* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CControls_CICanvasStatics* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CControls_CICanvasStatics* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CControls_CICanvasStatics* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CControls_CICanvasStatics* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CControls_CICanvasStatics* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_LeftProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CICanvasStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* GetLeft)(__x_ABI_CWindows_CUI_CXaml_CControls_CICanvasStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIUIElement* element,
        DOUBLE* result);
    HRESULT (STDMETHODCALLTYPE* SetLeft)(__x_ABI_CWindows_CUI_CXaml_CControls_CICanvasStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIUIElement* element,
        DOUBLE length);
    HRESULT (STDMETHODCALLTYPE* get_TopProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CICanvasStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* GetTop)(__x_ABI_CWindows_CUI_CXaml_CControls_CICanvasStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIUIElement* element,
        DOUBLE* result);
    HRESULT (STDMETHODCALLTYPE* SetTop)(__x_ABI_CWindows_CUI_CXaml_CControls_CICanvasStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIUIElement* element,
        DOUBLE length);
    HRESULT (STDMETHODCALLTYPE* get_ZIndexProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CICanvasStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* GetZIndex)(__x_ABI_CWindows_CUI_CXaml_CControls_CICanvasStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIUIElement* element,
        INT32* result);
    HRESULT (STDMETHODCALLTYPE* SetZIndex)(__x_ABI_CWindows_CUI_CXaml_CControls_CICanvasStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIUIElement* element,
        INT32 value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CICanvasStaticsVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CICanvasStatics
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CICanvasStaticsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CICanvasStatics;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CICanvasStatics_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CICaptureElement_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CControls_CICaptureElement_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CICaptureElementVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CControls_CICaptureElement* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CControls_CICaptureElement* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CControls_CICaptureElement* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CControls_CICaptureElement* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CControls_CICaptureElement* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CControls_CICaptureElement* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Source)(__x_ABI_CWindows_CUI_CXaml_CControls_CICaptureElement* This,
        __x_ABI_CWindows_CMedia_CCapture_CIMediaCapture** value);
    HRESULT (STDMETHODCALLTYPE* put_Source)(__x_ABI_CWindows_CUI_CXaml_CControls_CICaptureElement* This,
        __x_ABI_CWindows_CMedia_CCapture_CIMediaCapture* value);
    HRESULT (STDMETHODCALLTYPE* get_Stretch)(__x_ABI_CWindows_CUI_CXaml_CControls_CICaptureElement* This,
        enum __x_ABI_CWindows_CUI_CXaml_CMedia_CStretch* value);
    HRESULT (STDMETHODCALLTYPE* put_Stretch)(__x_ABI_CWindows_CUI_CXaml_CControls_CICaptureElement* This,
        enum __x_ABI_CWindows_CUI_CXaml_CMedia_CStretch value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CICaptureElementVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CICaptureElement
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CICaptureElementVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CICaptureElement;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CICaptureElement_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CICaptureElementStatics_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CControls_CICaptureElementStatics_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CICaptureElementStaticsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CControls_CICaptureElementStatics* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CControls_CICaptureElementStatics* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CControls_CICaptureElementStatics* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CControls_CICaptureElementStatics* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CControls_CICaptureElementStatics* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CControls_CICaptureElementStatics* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_SourceProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CICaptureElementStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_StretchProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CICaptureElementStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CICaptureElementStaticsVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CICaptureElementStatics
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CICaptureElementStaticsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CICaptureElementStatics;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CICaptureElementStatics_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CICheckBox_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CControls_CICheckBox_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CICheckBoxVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CControls_CICheckBox* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CControls_CICheckBox* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CControls_CICheckBox* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CControls_CICheckBox* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CControls_CICheckBox* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CControls_CICheckBox* This,
            TrustLevel* trustLevel);
    
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CICheckBoxVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CICheckBox
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CICheckBoxVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CICheckBox;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CICheckBox_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CICheckBoxFactory_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CControls_CICheckBoxFactory_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CICheckBoxFactoryVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CControls_CICheckBoxFactory* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CControls_CICheckBoxFactory* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CControls_CICheckBoxFactory* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CControls_CICheckBoxFactory* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CControls_CICheckBoxFactory* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CControls_CICheckBoxFactory* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* CreateInstance)(__x_ABI_CWindows_CUI_CXaml_CControls_CICheckBoxFactory* This,
        IInspectable* baseInterface,
        IInspectable** innerInterface,
        __x_ABI_CWindows_CUI_CXaml_CControls_CICheckBox** value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CICheckBoxFactoryVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CICheckBoxFactory
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CICheckBoxFactoryVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CICheckBoxFactory;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CICheckBoxFactory_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIChoosingGroupHeaderContainerEventArgs_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CControls_CIChoosingGroupHeaderContainerEventArgs_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIChoosingGroupHeaderContainerEventArgsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CControls_CIChoosingGroupHeaderContainerEventArgs* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CControls_CIChoosingGroupHeaderContainerEventArgs* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CControls_CIChoosingGroupHeaderContainerEventArgs* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CControls_CIChoosingGroupHeaderContainerEventArgs* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CControls_CIChoosingGroupHeaderContainerEventArgs* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CControls_CIChoosingGroupHeaderContainerEventArgs* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_GroupHeaderContainer)(__x_ABI_CWindows_CUI_CXaml_CControls_CIChoosingGroupHeaderContainerEventArgs* This,
        __x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBaseHeaderItem** value);
    HRESULT (STDMETHODCALLTYPE* put_GroupHeaderContainer)(__x_ABI_CWindows_CUI_CXaml_CControls_CIChoosingGroupHeaderContainerEventArgs* This,
        __x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBaseHeaderItem* value);
    HRESULT (STDMETHODCALLTYPE* get_GroupIndex)(__x_ABI_CWindows_CUI_CXaml_CControls_CIChoosingGroupHeaderContainerEventArgs* This,
        INT32* value);
    HRESULT (STDMETHODCALLTYPE* get_Group)(__x_ABI_CWindows_CUI_CXaml_CControls_CIChoosingGroupHeaderContainerEventArgs* This,
        IInspectable** value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CIChoosingGroupHeaderContainerEventArgsVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CIChoosingGroupHeaderContainerEventArgs
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIChoosingGroupHeaderContainerEventArgsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIChoosingGroupHeaderContainerEventArgs;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIChoosingGroupHeaderContainerEventArgs_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIChoosingItemContainerEventArgs_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CControls_CIChoosingItemContainerEventArgs_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIChoosingItemContainerEventArgsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CControls_CIChoosingItemContainerEventArgs* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CControls_CIChoosingItemContainerEventArgs* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CControls_CIChoosingItemContainerEventArgs* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CControls_CIChoosingItemContainerEventArgs* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CControls_CIChoosingItemContainerEventArgs* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CControls_CIChoosingItemContainerEventArgs* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_ItemIndex)(__x_ABI_CWindows_CUI_CXaml_CControls_CIChoosingItemContainerEventArgs* This,
        INT32* value);
    HRESULT (STDMETHODCALLTYPE* get_Item)(__x_ABI_CWindows_CUI_CXaml_CControls_CIChoosingItemContainerEventArgs* This,
        IInspectable** value);
    HRESULT (STDMETHODCALLTYPE* get_ItemContainer)(__x_ABI_CWindows_CUI_CXaml_CControls_CIChoosingItemContainerEventArgs* This,
        __x_ABI_CWindows_CUI_CXaml_CControls_CPrimitives_CISelectorItem** value);
    HRESULT (STDMETHODCALLTYPE* put_ItemContainer)(__x_ABI_CWindows_CUI_CXaml_CControls_CIChoosingItemContainerEventArgs* This,
        __x_ABI_CWindows_CUI_CXaml_CControls_CPrimitives_CISelectorItem* value);
    HRESULT (STDMETHODCALLTYPE* get_IsContainerPrepared)(__x_ABI_CWindows_CUI_CXaml_CControls_CIChoosingItemContainerEventArgs* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* put_IsContainerPrepared)(__x_ABI_CWindows_CUI_CXaml_CControls_CIChoosingItemContainerEventArgs* This,
        boolean value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CIChoosingItemContainerEventArgsVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CIChoosingItemContainerEventArgs
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIChoosingItemContainerEventArgsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIChoosingItemContainerEventArgs;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIChoosingItemContainerEventArgs_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CICleanUpVirtualizedItemEventArgs_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CControls_CICleanUpVirtualizedItemEventArgs_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CICleanUpVirtualizedItemEventArgsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CControls_CICleanUpVirtualizedItemEventArgs* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CControls_CICleanUpVirtualizedItemEventArgs* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CControls_CICleanUpVirtualizedItemEventArgs* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CControls_CICleanUpVirtualizedItemEventArgs* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CControls_CICleanUpVirtualizedItemEventArgs* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CControls_CICleanUpVirtualizedItemEventArgs* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Value)(__x_ABI_CWindows_CUI_CXaml_CControls_CICleanUpVirtualizedItemEventArgs* This,
        IInspectable** value);
    HRESULT (STDMETHODCALLTYPE* get_UIElement)(__x_ABI_CWindows_CUI_CXaml_CControls_CICleanUpVirtualizedItemEventArgs* This,
        __x_ABI_CWindows_CUI_CXaml_CIUIElement** value);
    HRESULT (STDMETHODCALLTYPE* get_Cancel)(__x_ABI_CWindows_CUI_CXaml_CControls_CICleanUpVirtualizedItemEventArgs* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* put_Cancel)(__x_ABI_CWindows_CUI_CXaml_CControls_CICleanUpVirtualizedItemEventArgs* This,
        boolean value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CICleanUpVirtualizedItemEventArgsVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CICleanUpVirtualizedItemEventArgs
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CICleanUpVirtualizedItemEventArgsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CICleanUpVirtualizedItemEventArgs;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CICleanUpVirtualizedItemEventArgs_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIColorChangedEventArgs_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CControls_CIColorChangedEventArgs_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIColorChangedEventArgsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CControls_CIColorChangedEventArgs* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CControls_CIColorChangedEventArgs* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CControls_CIColorChangedEventArgs* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CControls_CIColorChangedEventArgs* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CControls_CIColorChangedEventArgs* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CControls_CIColorChangedEventArgs* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_OldColor)(__x_ABI_CWindows_CUI_CXaml_CControls_CIColorChangedEventArgs* This,
        struct __x_ABI_CWindows_CUI_CColor* value);
    HRESULT (STDMETHODCALLTYPE* get_NewColor)(__x_ABI_CWindows_CUI_CXaml_CControls_CIColorChangedEventArgs* This,
        struct __x_ABI_CWindows_CUI_CColor* value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CIColorChangedEventArgsVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CIColorChangedEventArgs
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIColorChangedEventArgsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIColorChangedEventArgs;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIColorChangedEventArgs_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIColorPicker_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CControls_CIColorPicker_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIColorPickerVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CControls_CIColorPicker* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CControls_CIColorPicker* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CControls_CIColorPicker* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CControls_CIColorPicker* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CControls_CIColorPicker* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CControls_CIColorPicker* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Color)(__x_ABI_CWindows_CUI_CXaml_CControls_CIColorPicker* This,
        struct __x_ABI_CWindows_CUI_CColor* value);
    HRESULT (STDMETHODCALLTYPE* put_Color)(__x_ABI_CWindows_CUI_CXaml_CControls_CIColorPicker* This,
        struct __x_ABI_CWindows_CUI_CColor value);
    HRESULT (STDMETHODCALLTYPE* get_PreviousColor)(__x_ABI_CWindows_CUI_CXaml_CControls_CIColorPicker* This,
        __x_ABI_C__FIReference_1___x_ABI_CWindows__CUI__CColor** value);
    HRESULT (STDMETHODCALLTYPE* put_PreviousColor)(__x_ABI_CWindows_CUI_CXaml_CControls_CIColorPicker* This,
        __x_ABI_C__FIReference_1___x_ABI_CWindows__CUI__CColor* value);
    HRESULT (STDMETHODCALLTYPE* get_IsAlphaEnabled)(__x_ABI_CWindows_CUI_CXaml_CControls_CIColorPicker* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* put_IsAlphaEnabled)(__x_ABI_CWindows_CUI_CXaml_CControls_CIColorPicker* This,
        boolean value);
    HRESULT (STDMETHODCALLTYPE* get_IsColorSpectrumVisible)(__x_ABI_CWindows_CUI_CXaml_CControls_CIColorPicker* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* put_IsColorSpectrumVisible)(__x_ABI_CWindows_CUI_CXaml_CControls_CIColorPicker* This,
        boolean value);
    HRESULT (STDMETHODCALLTYPE* get_IsColorPreviewVisible)(__x_ABI_CWindows_CUI_CXaml_CControls_CIColorPicker* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* put_IsColorPreviewVisible)(__x_ABI_CWindows_CUI_CXaml_CControls_CIColorPicker* This,
        boolean value);
    HRESULT (STDMETHODCALLTYPE* get_IsColorSliderVisible)(__x_ABI_CWindows_CUI_CXaml_CControls_CIColorPicker* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* put_IsColorSliderVisible)(__x_ABI_CWindows_CUI_CXaml_CControls_CIColorPicker* This,
        boolean value);
    HRESULT (STDMETHODCALLTYPE* get_IsAlphaSliderVisible)(__x_ABI_CWindows_CUI_CXaml_CControls_CIColorPicker* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* put_IsAlphaSliderVisible)(__x_ABI_CWindows_CUI_CXaml_CControls_CIColorPicker* This,
        boolean value);
    HRESULT (STDMETHODCALLTYPE* get_IsMoreButtonVisible)(__x_ABI_CWindows_CUI_CXaml_CControls_CIColorPicker* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* put_IsMoreButtonVisible)(__x_ABI_CWindows_CUI_CXaml_CControls_CIColorPicker* This,
        boolean value);
    HRESULT (STDMETHODCALLTYPE* get_IsColorChannelTextInputVisible)(__x_ABI_CWindows_CUI_CXaml_CControls_CIColorPicker* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* put_IsColorChannelTextInputVisible)(__x_ABI_CWindows_CUI_CXaml_CControls_CIColorPicker* This,
        boolean value);
    HRESULT (STDMETHODCALLTYPE* get_IsAlphaTextInputVisible)(__x_ABI_CWindows_CUI_CXaml_CControls_CIColorPicker* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* put_IsAlphaTextInputVisible)(__x_ABI_CWindows_CUI_CXaml_CControls_CIColorPicker* This,
        boolean value);
    HRESULT (STDMETHODCALLTYPE* get_IsHexInputVisible)(__x_ABI_CWindows_CUI_CXaml_CControls_CIColorPicker* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* put_IsHexInputVisible)(__x_ABI_CWindows_CUI_CXaml_CControls_CIColorPicker* This,
        boolean value);
    HRESULT (STDMETHODCALLTYPE* get_MinHue)(__x_ABI_CWindows_CUI_CXaml_CControls_CIColorPicker* This,
        INT32* value);
    HRESULT (STDMETHODCALLTYPE* put_MinHue)(__x_ABI_CWindows_CUI_CXaml_CControls_CIColorPicker* This,
        INT32 value);
    HRESULT (STDMETHODCALLTYPE* get_MaxHue)(__x_ABI_CWindows_CUI_CXaml_CControls_CIColorPicker* This,
        INT32* value);
    HRESULT (STDMETHODCALLTYPE* put_MaxHue)(__x_ABI_CWindows_CUI_CXaml_CControls_CIColorPicker* This,
        INT32 value);
    HRESULT (STDMETHODCALLTYPE* get_MinSaturation)(__x_ABI_CWindows_CUI_CXaml_CControls_CIColorPicker* This,
        INT32* value);
    HRESULT (STDMETHODCALLTYPE* put_MinSaturation)(__x_ABI_CWindows_CUI_CXaml_CControls_CIColorPicker* This,
        INT32 value);
    HRESULT (STDMETHODCALLTYPE* get_MaxSaturation)(__x_ABI_CWindows_CUI_CXaml_CControls_CIColorPicker* This,
        INT32* value);
    HRESULT (STDMETHODCALLTYPE* put_MaxSaturation)(__x_ABI_CWindows_CUI_CXaml_CControls_CIColorPicker* This,
        INT32 value);
    HRESULT (STDMETHODCALLTYPE* get_MinValue)(__x_ABI_CWindows_CUI_CXaml_CControls_CIColorPicker* This,
        INT32* value);
    HRESULT (STDMETHODCALLTYPE* put_MinValue)(__x_ABI_CWindows_CUI_CXaml_CControls_CIColorPicker* This,
        INT32 value);
    HRESULT (STDMETHODCALLTYPE* get_MaxValue)(__x_ABI_CWindows_CUI_CXaml_CControls_CIColorPicker* This,
        INT32* value);
    HRESULT (STDMETHODCALLTYPE* put_MaxValue)(__x_ABI_CWindows_CUI_CXaml_CControls_CIColorPicker* This,
        INT32 value);
    HRESULT (STDMETHODCALLTYPE* get_ColorSpectrumShape)(__x_ABI_CWindows_CUI_CXaml_CControls_CIColorPicker* This,
        enum __x_ABI_CWindows_CUI_CXaml_CControls_CColorSpectrumShape* value);
    HRESULT (STDMETHODCALLTYPE* put_ColorSpectrumShape)(__x_ABI_CWindows_CUI_CXaml_CControls_CIColorPicker* This,
        enum __x_ABI_CWindows_CUI_CXaml_CControls_CColorSpectrumShape value);
    HRESULT (STDMETHODCALLTYPE* get_ColorSpectrumComponents)(__x_ABI_CWindows_CUI_CXaml_CControls_CIColorPicker* This,
        enum __x_ABI_CWindows_CUI_CXaml_CControls_CColorSpectrumComponents* value);
    HRESULT (STDMETHODCALLTYPE* put_ColorSpectrumComponents)(__x_ABI_CWindows_CUI_CXaml_CControls_CIColorPicker* This,
        enum __x_ABI_CWindows_CUI_CXaml_CControls_CColorSpectrumComponents value);
    HRESULT (STDMETHODCALLTYPE* add_ColorChanged)(__x_ABI_CWindows_CUI_CXaml_CControls_CIColorPicker* This,
        __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CColorPicker___x_ABI_CWindows__CUI__CXaml__CControls__CColorChangedEventArgs* handler,
        EventRegistrationToken* token);
    HRESULT (STDMETHODCALLTYPE* remove_ColorChanged)(__x_ABI_CWindows_CUI_CXaml_CControls_CIColorPicker* This,
        EventRegistrationToken token);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CIColorPickerVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CIColorPicker
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIColorPickerVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIColorPicker;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIColorPicker_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIColorPickerFactory_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CControls_CIColorPickerFactory_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIColorPickerFactoryVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CControls_CIColorPickerFactory* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CControls_CIColorPickerFactory* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CControls_CIColorPickerFactory* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CControls_CIColorPickerFactory* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CControls_CIColorPickerFactory* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CControls_CIColorPickerFactory* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* CreateInstance)(__x_ABI_CWindows_CUI_CXaml_CControls_CIColorPickerFactory* This,
        IInspectable* baseInterface,
        IInspectable** innerInterface,
        __x_ABI_CWindows_CUI_CXaml_CControls_CIColorPicker** value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CIColorPickerFactoryVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CIColorPickerFactory
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIColorPickerFactoryVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIColorPickerFactory;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIColorPickerFactory_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIColorPickerStatics_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CControls_CIColorPickerStatics_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIColorPickerStaticsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CControls_CIColorPickerStatics* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CControls_CIColorPickerStatics* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CControls_CIColorPickerStatics* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CControls_CIColorPickerStatics* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CControls_CIColorPickerStatics* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CControls_CIColorPickerStatics* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_ColorProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CIColorPickerStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_PreviousColorProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CIColorPickerStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_IsAlphaEnabledProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CIColorPickerStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_IsColorSpectrumVisibleProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CIColorPickerStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_IsColorPreviewVisibleProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CIColorPickerStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_IsColorSliderVisibleProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CIColorPickerStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_IsAlphaSliderVisibleProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CIColorPickerStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_IsMoreButtonVisibleProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CIColorPickerStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_IsColorChannelTextInputVisibleProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CIColorPickerStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_IsAlphaTextInputVisibleProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CIColorPickerStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_IsHexInputVisibleProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CIColorPickerStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_MinHueProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CIColorPickerStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_MaxHueProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CIColorPickerStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_MinSaturationProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CIColorPickerStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_MaxSaturationProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CIColorPickerStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_MinValueProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CIColorPickerStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_MaxValueProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CIColorPickerStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_ColorSpectrumShapeProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CIColorPickerStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_ColorSpectrumComponentsProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CIColorPickerStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CIColorPickerStaticsVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CIColorPickerStatics
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIColorPickerStaticsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIColorPickerStatics;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIColorPickerStatics_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIColumnDefinition_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CControls_CIColumnDefinition_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIColumnDefinitionVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CControls_CIColumnDefinition* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CControls_CIColumnDefinition* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CControls_CIColumnDefinition* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CControls_CIColumnDefinition* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CControls_CIColumnDefinition* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CControls_CIColumnDefinition* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Width)(__x_ABI_CWindows_CUI_CXaml_CControls_CIColumnDefinition* This,
        struct __x_ABI_CWindows_CUI_CXaml_CGridLength* value);
    HRESULT (STDMETHODCALLTYPE* put_Width)(__x_ABI_CWindows_CUI_CXaml_CControls_CIColumnDefinition* This,
        struct __x_ABI_CWindows_CUI_CXaml_CGridLength value);
    HRESULT (STDMETHODCALLTYPE* get_MaxWidth)(__x_ABI_CWindows_CUI_CXaml_CControls_CIColumnDefinition* This,
        DOUBLE* value);
    HRESULT (STDMETHODCALLTYPE* put_MaxWidth)(__x_ABI_CWindows_CUI_CXaml_CControls_CIColumnDefinition* This,
        DOUBLE value);
    HRESULT (STDMETHODCALLTYPE* get_MinWidth)(__x_ABI_CWindows_CUI_CXaml_CControls_CIColumnDefinition* This,
        DOUBLE* value);
    HRESULT (STDMETHODCALLTYPE* put_MinWidth)(__x_ABI_CWindows_CUI_CXaml_CControls_CIColumnDefinition* This,
        DOUBLE value);
    HRESULT (STDMETHODCALLTYPE* get_ActualWidth)(__x_ABI_CWindows_CUI_CXaml_CControls_CIColumnDefinition* This,
        DOUBLE* value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CIColumnDefinitionVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CIColumnDefinition
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIColumnDefinitionVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIColumnDefinition;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIColumnDefinition_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIColumnDefinitionStatics_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CControls_CIColumnDefinitionStatics_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIColumnDefinitionStaticsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CControls_CIColumnDefinitionStatics* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CControls_CIColumnDefinitionStatics* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CControls_CIColumnDefinitionStatics* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CControls_CIColumnDefinitionStatics* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CControls_CIColumnDefinitionStatics* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CControls_CIColumnDefinitionStatics* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_WidthProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CIColumnDefinitionStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_MaxWidthProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CIColumnDefinitionStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_MinWidthProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CIColumnDefinitionStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CIColumnDefinitionStaticsVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CIColumnDefinitionStatics
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIColumnDefinitionStaticsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIColumnDefinitionStatics;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIColumnDefinitionStatics_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIComboBox_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CControls_CIComboBox_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIComboBoxVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CControls_CIComboBox* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CControls_CIComboBox* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CControls_CIComboBox* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CControls_CIComboBox* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CControls_CIComboBox* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CControls_CIComboBox* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_IsDropDownOpen)(__x_ABI_CWindows_CUI_CXaml_CControls_CIComboBox* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* put_IsDropDownOpen)(__x_ABI_CWindows_CUI_CXaml_CControls_CIComboBox* This,
        boolean value);
    HRESULT (STDMETHODCALLTYPE* get_IsEditable)(__x_ABI_CWindows_CUI_CXaml_CControls_CIComboBox* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* get_IsSelectionBoxHighlighted)(__x_ABI_CWindows_CUI_CXaml_CControls_CIComboBox* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* get_MaxDropDownHeight)(__x_ABI_CWindows_CUI_CXaml_CControls_CIComboBox* This,
        DOUBLE* value);
    HRESULT (STDMETHODCALLTYPE* put_MaxDropDownHeight)(__x_ABI_CWindows_CUI_CXaml_CControls_CIComboBox* This,
        DOUBLE value);
    HRESULT (STDMETHODCALLTYPE* get_SelectionBoxItem)(__x_ABI_CWindows_CUI_CXaml_CControls_CIComboBox* This,
        IInspectable** value);
    HRESULT (STDMETHODCALLTYPE* get_SelectionBoxItemTemplate)(__x_ABI_CWindows_CUI_CXaml_CControls_CIComboBox* This,
        __x_ABI_CWindows_CUI_CXaml_CIDataTemplate** value);
    HRESULT (STDMETHODCALLTYPE* get_TemplateSettings)(__x_ABI_CWindows_CUI_CXaml_CControls_CIComboBox* This,
        __x_ABI_CWindows_CUI_CXaml_CControls_CPrimitives_CIComboBoxTemplateSettings** value);
    HRESULT (STDMETHODCALLTYPE* add_DropDownClosed)(__x_ABI_CWindows_CUI_CXaml_CControls_CIComboBox* This,
        __x_ABI_C__FIEventHandler_1_IInspectable* handler,
        EventRegistrationToken* token);
    HRESULT (STDMETHODCALLTYPE* remove_DropDownClosed)(__x_ABI_CWindows_CUI_CXaml_CControls_CIComboBox* This,
        EventRegistrationToken token);
    HRESULT (STDMETHODCALLTYPE* add_DropDownOpened)(__x_ABI_CWindows_CUI_CXaml_CControls_CIComboBox* This,
        __x_ABI_C__FIEventHandler_1_IInspectable* handler,
        EventRegistrationToken* token);
    HRESULT (STDMETHODCALLTYPE* remove_DropDownOpened)(__x_ABI_CWindows_CUI_CXaml_CControls_CIComboBox* This,
        EventRegistrationToken token);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CIComboBoxVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CIComboBox
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIComboBoxVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIComboBox;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIComboBox_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIComboBox2_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CControls_CIComboBox2_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIComboBox2Vtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CControls_CIComboBox2* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CControls_CIComboBox2* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CControls_CIComboBox2* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CControls_CIComboBox2* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CControls_CIComboBox2* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CControls_CIComboBox2* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Header)(__x_ABI_CWindows_CUI_CXaml_CControls_CIComboBox2* This,
        IInspectable** value);
    HRESULT (STDMETHODCALLTYPE* put_Header)(__x_ABI_CWindows_CUI_CXaml_CControls_CIComboBox2* This,
        IInspectable* value);
    HRESULT (STDMETHODCALLTYPE* get_HeaderTemplate)(__x_ABI_CWindows_CUI_CXaml_CControls_CIComboBox2* This,
        __x_ABI_CWindows_CUI_CXaml_CIDataTemplate** value);
    HRESULT (STDMETHODCALLTYPE* put_HeaderTemplate)(__x_ABI_CWindows_CUI_CXaml_CControls_CIComboBox2* This,
        __x_ABI_CWindows_CUI_CXaml_CIDataTemplate* value);
    HRESULT (STDMETHODCALLTYPE* get_PlaceholderText)(__x_ABI_CWindows_CUI_CXaml_CControls_CIComboBox2* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* put_PlaceholderText)(__x_ABI_CWindows_CUI_CXaml_CControls_CIComboBox2* This,
        HSTRING value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CIComboBox2Vtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CIComboBox2
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIComboBox2Vtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIComboBox2;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIComboBox2_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIComboBox3_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CControls_CIComboBox3_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIComboBox3Vtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CControls_CIComboBox3* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CControls_CIComboBox3* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CControls_CIComboBox3* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CControls_CIComboBox3* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CControls_CIComboBox3* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CControls_CIComboBox3* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_LightDismissOverlayMode)(__x_ABI_CWindows_CUI_CXaml_CControls_CIComboBox3* This,
        enum __x_ABI_CWindows_CUI_CXaml_CControls_CLightDismissOverlayMode* value);
    HRESULT (STDMETHODCALLTYPE* put_LightDismissOverlayMode)(__x_ABI_CWindows_CUI_CXaml_CControls_CIComboBox3* This,
        enum __x_ABI_CWindows_CUI_CXaml_CControls_CLightDismissOverlayMode value);
    HRESULT (STDMETHODCALLTYPE* get_IsTextSearchEnabled)(__x_ABI_CWindows_CUI_CXaml_CControls_CIComboBox3* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* put_IsTextSearchEnabled)(__x_ABI_CWindows_CUI_CXaml_CControls_CIComboBox3* This,
        boolean value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CIComboBox3Vtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CIComboBox3
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIComboBox3Vtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIComboBox3;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIComboBox3_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIComboBox4_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CControls_CIComboBox4_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIComboBox4Vtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CControls_CIComboBox4* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CControls_CIComboBox4* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CControls_CIComboBox4* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CControls_CIComboBox4* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CControls_CIComboBox4* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CControls_CIComboBox4* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_SelectionChangedTrigger)(__x_ABI_CWindows_CUI_CXaml_CControls_CIComboBox4* This,
        enum __x_ABI_CWindows_CUI_CXaml_CControls_CComboBoxSelectionChangedTrigger* value);
    HRESULT (STDMETHODCALLTYPE* put_SelectionChangedTrigger)(__x_ABI_CWindows_CUI_CXaml_CControls_CIComboBox4* This,
        enum __x_ABI_CWindows_CUI_CXaml_CControls_CComboBoxSelectionChangedTrigger value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CIComboBox4Vtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CIComboBox4
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIComboBox4Vtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIComboBox4;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIComboBox4_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIComboBox5_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CControls_CIComboBox5_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIComboBox5Vtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CControls_CIComboBox5* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CControls_CIComboBox5* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CControls_CIComboBox5* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CControls_CIComboBox5* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CControls_CIComboBox5* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CControls_CIComboBox5* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_PlaceholderForeground)(__x_ABI_CWindows_CUI_CXaml_CControls_CIComboBox5* This,
        __x_ABI_CWindows_CUI_CXaml_CMedia_CIBrush** value);
    HRESULT (STDMETHODCALLTYPE* put_PlaceholderForeground)(__x_ABI_CWindows_CUI_CXaml_CControls_CIComboBox5* This,
        __x_ABI_CWindows_CUI_CXaml_CMedia_CIBrush* value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CIComboBox5Vtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CIComboBox5
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIComboBox5Vtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIComboBox5;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIComboBox5_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIComboBox6_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CControls_CIComboBox6_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIComboBox6Vtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CControls_CIComboBox6* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CControls_CIComboBox6* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CControls_CIComboBox6* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CControls_CIComboBox6* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CControls_CIComboBox6* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CControls_CIComboBox6* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* put_IsEditable)(__x_ABI_CWindows_CUI_CXaml_CControls_CIComboBox6* This,
        boolean value);
    HRESULT (STDMETHODCALLTYPE* get_Text)(__x_ABI_CWindows_CUI_CXaml_CControls_CIComboBox6* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* put_Text)(__x_ABI_CWindows_CUI_CXaml_CControls_CIComboBox6* This,
        HSTRING value);
    HRESULT (STDMETHODCALLTYPE* get_TextBoxStyle)(__x_ABI_CWindows_CUI_CXaml_CControls_CIComboBox6* This,
        __x_ABI_CWindows_CUI_CXaml_CIStyle** value);
    HRESULT (STDMETHODCALLTYPE* put_TextBoxStyle)(__x_ABI_CWindows_CUI_CXaml_CControls_CIComboBox6* This,
        __x_ABI_CWindows_CUI_CXaml_CIStyle* value);
    HRESULT (STDMETHODCALLTYPE* get_Description)(__x_ABI_CWindows_CUI_CXaml_CControls_CIComboBox6* This,
        IInspectable** value);
    HRESULT (STDMETHODCALLTYPE* put_Description)(__x_ABI_CWindows_CUI_CXaml_CControls_CIComboBox6* This,
        IInspectable* value);
    HRESULT (STDMETHODCALLTYPE* add_TextSubmitted)(__x_ABI_CWindows_CUI_CXaml_CControls_CIComboBox6* This,
        __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CComboBox___x_ABI_CWindows__CUI__CXaml__CControls__CComboBoxTextSubmittedEventArgs* handler,
        EventRegistrationToken* token);
    HRESULT (STDMETHODCALLTYPE* remove_TextSubmitted)(__x_ABI_CWindows_CUI_CXaml_CControls_CIComboBox6* This,
        EventRegistrationToken token);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CIComboBox6Vtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CIComboBox6
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIComboBox6Vtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIComboBox6;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIComboBox6_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIComboBoxFactory_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CControls_CIComboBoxFactory_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIComboBoxFactoryVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CControls_CIComboBoxFactory* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CControls_CIComboBoxFactory* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CControls_CIComboBoxFactory* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CControls_CIComboBoxFactory* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CControls_CIComboBoxFactory* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CControls_CIComboBoxFactory* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* CreateInstance)(__x_ABI_CWindows_CUI_CXaml_CControls_CIComboBoxFactory* This,
        IInspectable* baseInterface,
        IInspectable** innerInterface,
        __x_ABI_CWindows_CUI_CXaml_CControls_CIComboBox** value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CIComboBoxFactoryVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CIComboBoxFactory
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIComboBoxFactoryVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIComboBoxFactory;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIComboBoxFactory_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIComboBoxItem_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CControls_CIComboBoxItem_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIComboBoxItemVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CControls_CIComboBoxItem* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CControls_CIComboBoxItem* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CControls_CIComboBoxItem* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CControls_CIComboBoxItem* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CControls_CIComboBoxItem* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CControls_CIComboBoxItem* This,
            TrustLevel* trustLevel);
    
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CIComboBoxItemVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CIComboBoxItem
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIComboBoxItemVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIComboBoxItem;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIComboBoxItem_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIComboBoxItemFactory_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CControls_CIComboBoxItemFactory_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIComboBoxItemFactoryVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CControls_CIComboBoxItemFactory* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CControls_CIComboBoxItemFactory* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CControls_CIComboBoxItemFactory* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CControls_CIComboBoxItemFactory* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CControls_CIComboBoxItemFactory* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CControls_CIComboBoxItemFactory* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* CreateInstance)(__x_ABI_CWindows_CUI_CXaml_CControls_CIComboBoxItemFactory* This,
        IInspectable* baseInterface,
        IInspectable** innerInterface,
        __x_ABI_CWindows_CUI_CXaml_CControls_CIComboBoxItem** value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CIComboBoxItemFactoryVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CIComboBoxItemFactory
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIComboBoxItemFactoryVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIComboBoxItemFactory;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIComboBoxItemFactory_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIComboBoxOverrides_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CControls_CIComboBoxOverrides_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIComboBoxOverridesVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CControls_CIComboBoxOverrides* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CControls_CIComboBoxOverrides* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CControls_CIComboBoxOverrides* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CControls_CIComboBoxOverrides* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CControls_CIComboBoxOverrides* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CControls_CIComboBoxOverrides* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* OnDropDownClosed)(__x_ABI_CWindows_CUI_CXaml_CControls_CIComboBoxOverrides* This,
        IInspectable* e);
    HRESULT (STDMETHODCALLTYPE* OnDropDownOpened)(__x_ABI_CWindows_CUI_CXaml_CControls_CIComboBoxOverrides* This,
        IInspectable* e);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CIComboBoxOverridesVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CIComboBoxOverrides
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIComboBoxOverridesVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIComboBoxOverrides;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIComboBoxOverrides_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIComboBoxStatics_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CControls_CIComboBoxStatics_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIComboBoxStaticsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CControls_CIComboBoxStatics* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CControls_CIComboBoxStatics* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CControls_CIComboBoxStatics* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CControls_CIComboBoxStatics* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CControls_CIComboBoxStatics* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CControls_CIComboBoxStatics* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_IsDropDownOpenProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CIComboBoxStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_MaxDropDownHeightProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CIComboBoxStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CIComboBoxStaticsVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CIComboBoxStatics
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIComboBoxStaticsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIComboBoxStatics;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIComboBoxStatics_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIComboBoxStatics2_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CControls_CIComboBoxStatics2_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIComboBoxStatics2Vtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CControls_CIComboBoxStatics2* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CControls_CIComboBoxStatics2* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CControls_CIComboBoxStatics2* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CControls_CIComboBoxStatics2* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CControls_CIComboBoxStatics2* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CControls_CIComboBoxStatics2* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_HeaderProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CIComboBoxStatics2* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_HeaderTemplateProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CIComboBoxStatics2* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_PlaceholderTextProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CIComboBoxStatics2* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CIComboBoxStatics2Vtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CIComboBoxStatics2
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIComboBoxStatics2Vtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIComboBoxStatics2;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIComboBoxStatics2_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIComboBoxStatics3_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CControls_CIComboBoxStatics3_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIComboBoxStatics3Vtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CControls_CIComboBoxStatics3* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CControls_CIComboBoxStatics3* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CControls_CIComboBoxStatics3* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CControls_CIComboBoxStatics3* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CControls_CIComboBoxStatics3* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CControls_CIComboBoxStatics3* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_LightDismissOverlayModeProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CIComboBoxStatics3* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_IsTextSearchEnabledProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CIComboBoxStatics3* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CIComboBoxStatics3Vtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CIComboBoxStatics3
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIComboBoxStatics3Vtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIComboBoxStatics3;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIComboBoxStatics3_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIComboBoxStatics4_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CControls_CIComboBoxStatics4_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIComboBoxStatics4Vtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CControls_CIComboBoxStatics4* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CControls_CIComboBoxStatics4* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CControls_CIComboBoxStatics4* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CControls_CIComboBoxStatics4* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CControls_CIComboBoxStatics4* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CControls_CIComboBoxStatics4* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_SelectionChangedTriggerProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CIComboBoxStatics4* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CIComboBoxStatics4Vtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CIComboBoxStatics4
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIComboBoxStatics4Vtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIComboBoxStatics4;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIComboBoxStatics4_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIComboBoxStatics5_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CControls_CIComboBoxStatics5_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIComboBoxStatics5Vtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CControls_CIComboBoxStatics5* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CControls_CIComboBoxStatics5* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CControls_CIComboBoxStatics5* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CControls_CIComboBoxStatics5* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CControls_CIComboBoxStatics5* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CControls_CIComboBoxStatics5* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_PlaceholderForegroundProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CIComboBoxStatics5* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CIComboBoxStatics5Vtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CIComboBoxStatics5
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIComboBoxStatics5Vtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIComboBoxStatics5;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIComboBoxStatics5_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIComboBoxStatics6_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CControls_CIComboBoxStatics6_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIComboBoxStatics6Vtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CControls_CIComboBoxStatics6* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CControls_CIComboBoxStatics6* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CControls_CIComboBoxStatics6* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CControls_CIComboBoxStatics6* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CControls_CIComboBoxStatics6* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CControls_CIComboBoxStatics6* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_IsEditableProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CIComboBoxStatics6* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_TextProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CIComboBoxStatics6* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_TextBoxStyleProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CIComboBoxStatics6* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_DescriptionProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CIComboBoxStatics6* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CIComboBoxStatics6Vtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CIComboBoxStatics6
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIComboBoxStatics6Vtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIComboBoxStatics6;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIComboBoxStatics6_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIComboBoxTextSubmittedEventArgs_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CControls_CIComboBoxTextSubmittedEventArgs_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIComboBoxTextSubmittedEventArgsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CControls_CIComboBoxTextSubmittedEventArgs* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CControls_CIComboBoxTextSubmittedEventArgs* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CControls_CIComboBoxTextSubmittedEventArgs* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CControls_CIComboBoxTextSubmittedEventArgs* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CControls_CIComboBoxTextSubmittedEventArgs* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CControls_CIComboBoxTextSubmittedEventArgs* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Text)(__x_ABI_CWindows_CUI_CXaml_CControls_CIComboBoxTextSubmittedEventArgs* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* get_Handled)(__x_ABI_CWindows_CUI_CXaml_CControls_CIComboBoxTextSubmittedEventArgs* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* put_Handled)(__x_ABI_CWindows_CUI_CXaml_CControls_CIComboBoxTextSubmittedEventArgs* This,
        boolean value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CIComboBoxTextSubmittedEventArgsVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CIComboBoxTextSubmittedEventArgs
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIComboBoxTextSubmittedEventArgsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIComboBoxTextSubmittedEventArgs;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIComboBoxTextSubmittedEventArgs_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CICommandBar_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CControls_CICommandBar_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CICommandBarVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CControls_CICommandBar* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CControls_CICommandBar* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CControls_CICommandBar* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CControls_CICommandBar* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CControls_CICommandBar* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CControls_CICommandBar* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_PrimaryCommands)(__x_ABI_CWindows_CUI_CXaml_CControls_CICommandBar* This,
        __x_ABI_C__FIObservableVector_1___x_ABI_CWindows__CUI__CXaml__CControls__CICommandBarElement** value);
    HRESULT (STDMETHODCALLTYPE* get_SecondaryCommands)(__x_ABI_CWindows_CUI_CXaml_CControls_CICommandBar* This,
        __x_ABI_C__FIObservableVector_1___x_ABI_CWindows__CUI__CXaml__CControls__CICommandBarElement** value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CICommandBarVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CICommandBar
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CICommandBarVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CICommandBar;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CICommandBar_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CICommandBar2_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CControls_CICommandBar2_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CICommandBar2Vtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CControls_CICommandBar2* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CControls_CICommandBar2* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CControls_CICommandBar2* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CControls_CICommandBar2* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CControls_CICommandBar2* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CControls_CICommandBar2* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_CommandBarOverflowPresenterStyle)(__x_ABI_CWindows_CUI_CXaml_CControls_CICommandBar2* This,
        __x_ABI_CWindows_CUI_CXaml_CIStyle** value);
    HRESULT (STDMETHODCALLTYPE* put_CommandBarOverflowPresenterStyle)(__x_ABI_CWindows_CUI_CXaml_CControls_CICommandBar2* This,
        __x_ABI_CWindows_CUI_CXaml_CIStyle* value);
    HRESULT (STDMETHODCALLTYPE* get_CommandBarTemplateSettings)(__x_ABI_CWindows_CUI_CXaml_CControls_CICommandBar2* This,
        __x_ABI_CWindows_CUI_CXaml_CControls_CPrimitives_CICommandBarTemplateSettings** value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CICommandBar2Vtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CICommandBar2
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CICommandBar2Vtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CICommandBar2;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CICommandBar2_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CICommandBar3_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CControls_CICommandBar3_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CICommandBar3Vtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CControls_CICommandBar3* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CControls_CICommandBar3* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CControls_CICommandBar3* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CControls_CICommandBar3* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CControls_CICommandBar3* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CControls_CICommandBar3* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_DefaultLabelPosition)(__x_ABI_CWindows_CUI_CXaml_CControls_CICommandBar3* This,
        enum __x_ABI_CWindows_CUI_CXaml_CControls_CCommandBarDefaultLabelPosition* value);
    HRESULT (STDMETHODCALLTYPE* put_DefaultLabelPosition)(__x_ABI_CWindows_CUI_CXaml_CControls_CICommandBar3* This,
        enum __x_ABI_CWindows_CUI_CXaml_CControls_CCommandBarDefaultLabelPosition value);
    HRESULT (STDMETHODCALLTYPE* get_OverflowButtonVisibility)(__x_ABI_CWindows_CUI_CXaml_CControls_CICommandBar3* This,
        enum __x_ABI_CWindows_CUI_CXaml_CControls_CCommandBarOverflowButtonVisibility* value);
    HRESULT (STDMETHODCALLTYPE* put_OverflowButtonVisibility)(__x_ABI_CWindows_CUI_CXaml_CControls_CICommandBar3* This,
        enum __x_ABI_CWindows_CUI_CXaml_CControls_CCommandBarOverflowButtonVisibility value);
    HRESULT (STDMETHODCALLTYPE* get_IsDynamicOverflowEnabled)(__x_ABI_CWindows_CUI_CXaml_CControls_CICommandBar3* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* put_IsDynamicOverflowEnabled)(__x_ABI_CWindows_CUI_CXaml_CControls_CICommandBar3* This,
        boolean value);
    HRESULT (STDMETHODCALLTYPE* add_DynamicOverflowItemsChanging)(__x_ABI_CWindows_CUI_CXaml_CControls_CICommandBar3* This,
        __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CCommandBar___x_ABI_CWindows__CUI__CXaml__CControls__CDynamicOverflowItemsChangingEventArgs* handler,
        EventRegistrationToken* token);
    HRESULT (STDMETHODCALLTYPE* remove_DynamicOverflowItemsChanging)(__x_ABI_CWindows_CUI_CXaml_CControls_CICommandBar3* This,
        EventRegistrationToken token);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CICommandBar3Vtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CICommandBar3
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CICommandBar3Vtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CICommandBar3;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CICommandBar3_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CICommandBarElement_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CControls_CICommandBarElement_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CICommandBarElementVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CControls_CICommandBarElement* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CControls_CICommandBarElement* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CControls_CICommandBarElement* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CControls_CICommandBarElement* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CControls_CICommandBarElement* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CControls_CICommandBarElement* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_IsCompact)(__x_ABI_CWindows_CUI_CXaml_CControls_CICommandBarElement* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* put_IsCompact)(__x_ABI_CWindows_CUI_CXaml_CControls_CICommandBarElement* This,
        boolean value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CICommandBarElementVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CICommandBarElement
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CICommandBarElementVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CICommandBarElement;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CICommandBarElement_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CICommandBarElement2_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CControls_CICommandBarElement2_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CICommandBarElement2Vtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CControls_CICommandBarElement2* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CControls_CICommandBarElement2* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CControls_CICommandBarElement2* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CControls_CICommandBarElement2* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CControls_CICommandBarElement2* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CControls_CICommandBarElement2* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_IsInOverflow)(__x_ABI_CWindows_CUI_CXaml_CControls_CICommandBarElement2* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* get_DynamicOverflowOrder)(__x_ABI_CWindows_CUI_CXaml_CControls_CICommandBarElement2* This,
        INT32* value);
    HRESULT (STDMETHODCALLTYPE* put_DynamicOverflowOrder)(__x_ABI_CWindows_CUI_CXaml_CControls_CICommandBarElement2* This,
        INT32 value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CICommandBarElement2Vtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CICommandBarElement2
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CICommandBarElement2Vtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CICommandBarElement2;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CICommandBarElement2_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CICommandBarFactory_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CControls_CICommandBarFactory_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CICommandBarFactoryVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CControls_CICommandBarFactory* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CControls_CICommandBarFactory* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CControls_CICommandBarFactory* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CControls_CICommandBarFactory* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CControls_CICommandBarFactory* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CControls_CICommandBarFactory* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* CreateInstance)(__x_ABI_CWindows_CUI_CXaml_CControls_CICommandBarFactory* This,
        IInspectable* baseInterface,
        IInspectable** innerInterface,
        __x_ABI_CWindows_CUI_CXaml_CControls_CICommandBar** value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CICommandBarFactoryVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CICommandBarFactory
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CICommandBarFactoryVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CICommandBarFactory;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CICommandBarFactory_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CICommandBarFlyout_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CControls_CICommandBarFlyout_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CICommandBarFlyoutVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CControls_CICommandBarFlyout* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CControls_CICommandBarFlyout* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CControls_CICommandBarFlyout* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CControls_CICommandBarFlyout* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CControls_CICommandBarFlyout* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CControls_CICommandBarFlyout* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_PrimaryCommands)(__x_ABI_CWindows_CUI_CXaml_CControls_CICommandBarFlyout* This,
        __x_ABI_C__FIObservableVector_1___x_ABI_CWindows__CUI__CXaml__CControls__CICommandBarElement** value);
    HRESULT (STDMETHODCALLTYPE* get_SecondaryCommands)(__x_ABI_CWindows_CUI_CXaml_CControls_CICommandBarFlyout* This,
        __x_ABI_C__FIObservableVector_1___x_ABI_CWindows__CUI__CXaml__CControls__CICommandBarElement** value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CICommandBarFlyoutVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CICommandBarFlyout
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CICommandBarFlyoutVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CICommandBarFlyout;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CICommandBarFlyout_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CICommandBarFlyoutFactory_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CControls_CICommandBarFlyoutFactory_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CICommandBarFlyoutFactoryVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CControls_CICommandBarFlyoutFactory* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CControls_CICommandBarFlyoutFactory* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CControls_CICommandBarFlyoutFactory* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CControls_CICommandBarFlyoutFactory* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CControls_CICommandBarFlyoutFactory* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CControls_CICommandBarFlyoutFactory* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* CreateInstance)(__x_ABI_CWindows_CUI_CXaml_CControls_CICommandBarFlyoutFactory* This,
        IInspectable* baseInterface,
        IInspectable** innerInterface,
        __x_ABI_CWindows_CUI_CXaml_CControls_CICommandBarFlyout** value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CICommandBarFlyoutFactoryVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CICommandBarFlyoutFactory
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CICommandBarFlyoutFactoryVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CICommandBarFlyoutFactory;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CICommandBarFlyoutFactory_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CICommandBarOverflowPresenter_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CControls_CICommandBarOverflowPresenter_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CICommandBarOverflowPresenterVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CControls_CICommandBarOverflowPresenter* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CControls_CICommandBarOverflowPresenter* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CControls_CICommandBarOverflowPresenter* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CControls_CICommandBarOverflowPresenter* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CControls_CICommandBarOverflowPresenter* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CControls_CICommandBarOverflowPresenter* This,
            TrustLevel* trustLevel);
    
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CICommandBarOverflowPresenterVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CICommandBarOverflowPresenter
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CICommandBarOverflowPresenterVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CICommandBarOverflowPresenter;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CICommandBarOverflowPresenter_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CICommandBarOverflowPresenterFactory_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CControls_CICommandBarOverflowPresenterFactory_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CICommandBarOverflowPresenterFactoryVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CControls_CICommandBarOverflowPresenterFactory* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CControls_CICommandBarOverflowPresenterFactory* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CControls_CICommandBarOverflowPresenterFactory* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CControls_CICommandBarOverflowPresenterFactory* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CControls_CICommandBarOverflowPresenterFactory* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CControls_CICommandBarOverflowPresenterFactory* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* CreateInstance)(__x_ABI_CWindows_CUI_CXaml_CControls_CICommandBarOverflowPresenterFactory* This,
        IInspectable* baseInterface,
        IInspectable** innerInterface,
        __x_ABI_CWindows_CUI_CXaml_CControls_CICommandBarOverflowPresenter** value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CICommandBarOverflowPresenterFactoryVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CICommandBarOverflowPresenterFactory
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CICommandBarOverflowPresenterFactoryVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CICommandBarOverflowPresenterFactory;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CICommandBarOverflowPresenterFactory_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CICommandBarStatics_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CControls_CICommandBarStatics_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CICommandBarStaticsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CControls_CICommandBarStatics* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CControls_CICommandBarStatics* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CControls_CICommandBarStatics* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CControls_CICommandBarStatics* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CControls_CICommandBarStatics* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CControls_CICommandBarStatics* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_PrimaryCommandsProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CICommandBarStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_SecondaryCommandsProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CICommandBarStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CICommandBarStaticsVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CICommandBarStatics
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CICommandBarStaticsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CICommandBarStatics;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CICommandBarStatics_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CICommandBarStatics2_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CControls_CICommandBarStatics2_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CICommandBarStatics2Vtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CControls_CICommandBarStatics2* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CControls_CICommandBarStatics2* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CControls_CICommandBarStatics2* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CControls_CICommandBarStatics2* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CControls_CICommandBarStatics2* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CControls_CICommandBarStatics2* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_CommandBarOverflowPresenterStyleProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CICommandBarStatics2* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CICommandBarStatics2Vtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CICommandBarStatics2
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CICommandBarStatics2Vtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CICommandBarStatics2;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CICommandBarStatics2_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CICommandBarStatics3_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CControls_CICommandBarStatics3_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CICommandBarStatics3Vtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CControls_CICommandBarStatics3* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CControls_CICommandBarStatics3* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CControls_CICommandBarStatics3* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CControls_CICommandBarStatics3* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CControls_CICommandBarStatics3* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CControls_CICommandBarStatics3* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_DefaultLabelPositionProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CICommandBarStatics3* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_OverflowButtonVisibilityProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CICommandBarStatics3* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_IsDynamicOverflowEnabledProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CICommandBarStatics3* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CICommandBarStatics3Vtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CICommandBarStatics3
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CICommandBarStatics3Vtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CICommandBarStatics3;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CICommandBarStatics3_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIContainerContentChangingEventArgs_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CControls_CIContainerContentChangingEventArgs_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIContainerContentChangingEventArgsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CControls_CIContainerContentChangingEventArgs* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CControls_CIContainerContentChangingEventArgs* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CControls_CIContainerContentChangingEventArgs* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CControls_CIContainerContentChangingEventArgs* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CControls_CIContainerContentChangingEventArgs* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CControls_CIContainerContentChangingEventArgs* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_ItemContainer)(__x_ABI_CWindows_CUI_CXaml_CControls_CIContainerContentChangingEventArgs* This,
        __x_ABI_CWindows_CUI_CXaml_CControls_CPrimitives_CISelectorItem** value);
    HRESULT (STDMETHODCALLTYPE* get_InRecycleQueue)(__x_ABI_CWindows_CUI_CXaml_CControls_CIContainerContentChangingEventArgs* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* get_ItemIndex)(__x_ABI_CWindows_CUI_CXaml_CControls_CIContainerContentChangingEventArgs* This,
        INT32* value);
    HRESULT (STDMETHODCALLTYPE* get_Item)(__x_ABI_CWindows_CUI_CXaml_CControls_CIContainerContentChangingEventArgs* This,
        IInspectable** value);
    HRESULT (STDMETHODCALLTYPE* get_Phase)(__x_ABI_CWindows_CUI_CXaml_CControls_CIContainerContentChangingEventArgs* This,
        UINT32* value);
    HRESULT (STDMETHODCALLTYPE* get_Handled)(__x_ABI_CWindows_CUI_CXaml_CControls_CIContainerContentChangingEventArgs* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* put_Handled)(__x_ABI_CWindows_CUI_CXaml_CControls_CIContainerContentChangingEventArgs* This,
        boolean value);
    HRESULT (STDMETHODCALLTYPE* RegisterUpdateCallback)(__x_ABI_CWindows_CUI_CXaml_CControls_CIContainerContentChangingEventArgs* This,
        __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CListViewBase___x_ABI_CWindows__CUI__CXaml__CControls__CContainerContentChangingEventArgs* callback);
    HRESULT (STDMETHODCALLTYPE* RegisterUpdateCallbackWithPhase)(__x_ABI_CWindows_CUI_CXaml_CControls_CIContainerContentChangingEventArgs* This,
        UINT32 callbackPhase,
        __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CListViewBase___x_ABI_CWindows__CUI__CXaml__CControls__CContainerContentChangingEventArgs* callback);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CIContainerContentChangingEventArgsVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CIContainerContentChangingEventArgs
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIContainerContentChangingEventArgsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIContainerContentChangingEventArgs;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIContainerContentChangingEventArgs_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIContentControl_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CControls_CIContentControl_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIContentControlVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CControls_CIContentControl* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CControls_CIContentControl* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CControls_CIContentControl* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CControls_CIContentControl* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CControls_CIContentControl* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CControls_CIContentControl* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Content)(__x_ABI_CWindows_CUI_CXaml_CControls_CIContentControl* This,
        IInspectable** value);
    HRESULT (STDMETHODCALLTYPE* put_Content)(__x_ABI_CWindows_CUI_CXaml_CControls_CIContentControl* This,
        IInspectable* value);
    HRESULT (STDMETHODCALLTYPE* get_ContentTemplate)(__x_ABI_CWindows_CUI_CXaml_CControls_CIContentControl* This,
        __x_ABI_CWindows_CUI_CXaml_CIDataTemplate** value);
    HRESULT (STDMETHODCALLTYPE* put_ContentTemplate)(__x_ABI_CWindows_CUI_CXaml_CControls_CIContentControl* This,
        __x_ABI_CWindows_CUI_CXaml_CIDataTemplate* value);
    HRESULT (STDMETHODCALLTYPE* get_ContentTemplateSelector)(__x_ABI_CWindows_CUI_CXaml_CControls_CIContentControl* This,
        __x_ABI_CWindows_CUI_CXaml_CControls_CIDataTemplateSelector** value);
    HRESULT (STDMETHODCALLTYPE* put_ContentTemplateSelector)(__x_ABI_CWindows_CUI_CXaml_CControls_CIContentControl* This,
        __x_ABI_CWindows_CUI_CXaml_CControls_CIDataTemplateSelector* value);
    HRESULT (STDMETHODCALLTYPE* get_ContentTransitions)(__x_ABI_CWindows_CUI_CXaml_CControls_CIContentControl* This,
        __x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CXaml__CMedia__CAnimation__CTransition** value);
    HRESULT (STDMETHODCALLTYPE* put_ContentTransitions)(__x_ABI_CWindows_CUI_CXaml_CControls_CIContentControl* This,
        __x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CXaml__CMedia__CAnimation__CTransition* value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CIContentControlVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CIContentControl
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIContentControlVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIContentControl;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIContentControl_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIContentControl2_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CControls_CIContentControl2_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIContentControl2Vtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CControls_CIContentControl2* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CControls_CIContentControl2* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CControls_CIContentControl2* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CControls_CIContentControl2* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CControls_CIContentControl2* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CControls_CIContentControl2* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_ContentTemplateRoot)(__x_ABI_CWindows_CUI_CXaml_CControls_CIContentControl2* This,
        __x_ABI_CWindows_CUI_CXaml_CIUIElement** value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CIContentControl2Vtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CIContentControl2
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIContentControl2Vtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIContentControl2;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIContentControl2_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIContentControlFactory_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CControls_CIContentControlFactory_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIContentControlFactoryVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CControls_CIContentControlFactory* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CControls_CIContentControlFactory* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CControls_CIContentControlFactory* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CControls_CIContentControlFactory* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CControls_CIContentControlFactory* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CControls_CIContentControlFactory* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* CreateInstance)(__x_ABI_CWindows_CUI_CXaml_CControls_CIContentControlFactory* This,
        IInspectable* baseInterface,
        IInspectable** innerInterface,
        __x_ABI_CWindows_CUI_CXaml_CControls_CIContentControl** value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CIContentControlFactoryVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CIContentControlFactory
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIContentControlFactoryVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIContentControlFactory;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIContentControlFactory_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIContentControlOverrides_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CControls_CIContentControlOverrides_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIContentControlOverridesVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CControls_CIContentControlOverrides* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CControls_CIContentControlOverrides* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CControls_CIContentControlOverrides* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CControls_CIContentControlOverrides* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CControls_CIContentControlOverrides* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CControls_CIContentControlOverrides* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* OnContentChanged)(__x_ABI_CWindows_CUI_CXaml_CControls_CIContentControlOverrides* This,
        IInspectable* oldContent,
        IInspectable* newContent);
    HRESULT (STDMETHODCALLTYPE* OnContentTemplateChanged)(__x_ABI_CWindows_CUI_CXaml_CControls_CIContentControlOverrides* This,
        __x_ABI_CWindows_CUI_CXaml_CIDataTemplate* oldContentTemplate,
        __x_ABI_CWindows_CUI_CXaml_CIDataTemplate* newContentTemplate);
    HRESULT (STDMETHODCALLTYPE* OnContentTemplateSelectorChanged)(__x_ABI_CWindows_CUI_CXaml_CControls_CIContentControlOverrides* This,
        __x_ABI_CWindows_CUI_CXaml_CControls_CIDataTemplateSelector* oldContentTemplateSelector,
        __x_ABI_CWindows_CUI_CXaml_CControls_CIDataTemplateSelector* newContentTemplateSelector);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CIContentControlOverridesVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CIContentControlOverrides
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIContentControlOverridesVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIContentControlOverrides;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIContentControlOverrides_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIContentControlStatics_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CControls_CIContentControlStatics_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIContentControlStaticsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CControls_CIContentControlStatics* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CControls_CIContentControlStatics* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CControls_CIContentControlStatics* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CControls_CIContentControlStatics* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CControls_CIContentControlStatics* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CControls_CIContentControlStatics* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_ContentProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CIContentControlStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_ContentTemplateProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CIContentControlStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_ContentTemplateSelectorProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CIContentControlStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_ContentTransitionsProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CIContentControlStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CIContentControlStaticsVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CIContentControlStatics
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIContentControlStaticsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIContentControlStatics;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIContentControlStatics_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIContentDialog_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CControls_CIContentDialog_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIContentDialogVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CControls_CIContentDialog* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CControls_CIContentDialog* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CControls_CIContentDialog* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CControls_CIContentDialog* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CControls_CIContentDialog* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CControls_CIContentDialog* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Title)(__x_ABI_CWindows_CUI_CXaml_CControls_CIContentDialog* This,
        IInspectable** value);
    HRESULT (STDMETHODCALLTYPE* put_Title)(__x_ABI_CWindows_CUI_CXaml_CControls_CIContentDialog* This,
        IInspectable* value);
    HRESULT (STDMETHODCALLTYPE* get_TitleTemplate)(__x_ABI_CWindows_CUI_CXaml_CControls_CIContentDialog* This,
        __x_ABI_CWindows_CUI_CXaml_CIDataTemplate** value);
    HRESULT (STDMETHODCALLTYPE* put_TitleTemplate)(__x_ABI_CWindows_CUI_CXaml_CControls_CIContentDialog* This,
        __x_ABI_CWindows_CUI_CXaml_CIDataTemplate* value);
    HRESULT (STDMETHODCALLTYPE* get_FullSizeDesired)(__x_ABI_CWindows_CUI_CXaml_CControls_CIContentDialog* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* put_FullSizeDesired)(__x_ABI_CWindows_CUI_CXaml_CControls_CIContentDialog* This,
        boolean value);
    HRESULT (STDMETHODCALLTYPE* get_PrimaryButtonText)(__x_ABI_CWindows_CUI_CXaml_CControls_CIContentDialog* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* put_PrimaryButtonText)(__x_ABI_CWindows_CUI_CXaml_CControls_CIContentDialog* This,
        HSTRING value);
    HRESULT (STDMETHODCALLTYPE* get_SecondaryButtonText)(__x_ABI_CWindows_CUI_CXaml_CControls_CIContentDialog* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* put_SecondaryButtonText)(__x_ABI_CWindows_CUI_CXaml_CControls_CIContentDialog* This,
        HSTRING value);
    HRESULT (STDMETHODCALLTYPE* get_PrimaryButtonCommand)(__x_ABI_CWindows_CUI_CXaml_CControls_CIContentDialog* This,
        __x_ABI_CWindows_CUI_CXaml_CInput_CICommand** value);
    HRESULT (STDMETHODCALLTYPE* put_PrimaryButtonCommand)(__x_ABI_CWindows_CUI_CXaml_CControls_CIContentDialog* This,
        __x_ABI_CWindows_CUI_CXaml_CInput_CICommand* value);
    HRESULT (STDMETHODCALLTYPE* get_SecondaryButtonCommand)(__x_ABI_CWindows_CUI_CXaml_CControls_CIContentDialog* This,
        __x_ABI_CWindows_CUI_CXaml_CInput_CICommand** value);
    HRESULT (STDMETHODCALLTYPE* put_SecondaryButtonCommand)(__x_ABI_CWindows_CUI_CXaml_CControls_CIContentDialog* This,
        __x_ABI_CWindows_CUI_CXaml_CInput_CICommand* value);
    HRESULT (STDMETHODCALLTYPE* get_PrimaryButtonCommandParameter)(__x_ABI_CWindows_CUI_CXaml_CControls_CIContentDialog* This,
        IInspectable** value);
    HRESULT (STDMETHODCALLTYPE* put_PrimaryButtonCommandParameter)(__x_ABI_CWindows_CUI_CXaml_CControls_CIContentDialog* This,
        IInspectable* value);
    HRESULT (STDMETHODCALLTYPE* get_SecondaryButtonCommandParameter)(__x_ABI_CWindows_CUI_CXaml_CControls_CIContentDialog* This,
        IInspectable** value);
    HRESULT (STDMETHODCALLTYPE* put_SecondaryButtonCommandParameter)(__x_ABI_CWindows_CUI_CXaml_CControls_CIContentDialog* This,
        IInspectable* value);
    HRESULT (STDMETHODCALLTYPE* get_IsPrimaryButtonEnabled)(__x_ABI_CWindows_CUI_CXaml_CControls_CIContentDialog* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* put_IsPrimaryButtonEnabled)(__x_ABI_CWindows_CUI_CXaml_CControls_CIContentDialog* This,
        boolean value);
    HRESULT (STDMETHODCALLTYPE* get_IsSecondaryButtonEnabled)(__x_ABI_CWindows_CUI_CXaml_CControls_CIContentDialog* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* put_IsSecondaryButtonEnabled)(__x_ABI_CWindows_CUI_CXaml_CControls_CIContentDialog* This,
        boolean value);
    HRESULT (STDMETHODCALLTYPE* add_Closing)(__x_ABI_CWindows_CUI_CXaml_CControls_CIContentDialog* This,
        __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CContentDialog___x_ABI_CWindows__CUI__CXaml__CControls__CContentDialogClosingEventArgs* handler,
        EventRegistrationToken* token);
    HRESULT (STDMETHODCALLTYPE* remove_Closing)(__x_ABI_CWindows_CUI_CXaml_CControls_CIContentDialog* This,
        EventRegistrationToken token);
    HRESULT (STDMETHODCALLTYPE* add_Closed)(__x_ABI_CWindows_CUI_CXaml_CControls_CIContentDialog* This,
        __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CContentDialog___x_ABI_CWindows__CUI__CXaml__CControls__CContentDialogClosedEventArgs* handler,
        EventRegistrationToken* token);
    HRESULT (STDMETHODCALLTYPE* remove_Closed)(__x_ABI_CWindows_CUI_CXaml_CControls_CIContentDialog* This,
        EventRegistrationToken token);
    HRESULT (STDMETHODCALLTYPE* add_Opened)(__x_ABI_CWindows_CUI_CXaml_CControls_CIContentDialog* This,
        __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CContentDialog___x_ABI_CWindows__CUI__CXaml__CControls__CContentDialogOpenedEventArgs* handler,
        EventRegistrationToken* token);
    HRESULT (STDMETHODCALLTYPE* remove_Opened)(__x_ABI_CWindows_CUI_CXaml_CControls_CIContentDialog* This,
        EventRegistrationToken token);
    HRESULT (STDMETHODCALLTYPE* add_PrimaryButtonClick)(__x_ABI_CWindows_CUI_CXaml_CControls_CIContentDialog* This,
        __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CContentDialog___x_ABI_CWindows__CUI__CXaml__CControls__CContentDialogButtonClickEventArgs* handler,
        EventRegistrationToken* token);
    HRESULT (STDMETHODCALLTYPE* remove_PrimaryButtonClick)(__x_ABI_CWindows_CUI_CXaml_CControls_CIContentDialog* This,
        EventRegistrationToken token);
    HRESULT (STDMETHODCALLTYPE* add_SecondaryButtonClick)(__x_ABI_CWindows_CUI_CXaml_CControls_CIContentDialog* This,
        __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CContentDialog___x_ABI_CWindows__CUI__CXaml__CControls__CContentDialogButtonClickEventArgs* handler,
        EventRegistrationToken* token);
    HRESULT (STDMETHODCALLTYPE* remove_SecondaryButtonClick)(__x_ABI_CWindows_CUI_CXaml_CControls_CIContentDialog* This,
        EventRegistrationToken token);
    HRESULT (STDMETHODCALLTYPE* Hide)(__x_ABI_CWindows_CUI_CXaml_CControls_CIContentDialog* This);
    HRESULT (STDMETHODCALLTYPE* ShowAsync)(__x_ABI_CWindows_CUI_CXaml_CControls_CIContentDialog* This,
        __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CUI__CXaml__CControls__CContentDialogResult** operation);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CIContentDialogVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CIContentDialog
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIContentDialogVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIContentDialog;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIContentDialog_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIContentDialog2_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CControls_CIContentDialog2_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIContentDialog2Vtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CControls_CIContentDialog2* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CControls_CIContentDialog2* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CControls_CIContentDialog2* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CControls_CIContentDialog2* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CControls_CIContentDialog2* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CControls_CIContentDialog2* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_CloseButtonText)(__x_ABI_CWindows_CUI_CXaml_CControls_CIContentDialog2* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* put_CloseButtonText)(__x_ABI_CWindows_CUI_CXaml_CControls_CIContentDialog2* This,
        HSTRING value);
    HRESULT (STDMETHODCALLTYPE* get_CloseButtonCommand)(__x_ABI_CWindows_CUI_CXaml_CControls_CIContentDialog2* This,
        __x_ABI_CWindows_CUI_CXaml_CInput_CICommand** value);
    HRESULT (STDMETHODCALLTYPE* put_CloseButtonCommand)(__x_ABI_CWindows_CUI_CXaml_CControls_CIContentDialog2* This,
        __x_ABI_CWindows_CUI_CXaml_CInput_CICommand* value);
    HRESULT (STDMETHODCALLTYPE* get_CloseButtonCommandParameter)(__x_ABI_CWindows_CUI_CXaml_CControls_CIContentDialog2* This,
        IInspectable** value);
    HRESULT (STDMETHODCALLTYPE* put_CloseButtonCommandParameter)(__x_ABI_CWindows_CUI_CXaml_CControls_CIContentDialog2* This,
        IInspectable* value);
    HRESULT (STDMETHODCALLTYPE* get_PrimaryButtonStyle)(__x_ABI_CWindows_CUI_CXaml_CControls_CIContentDialog2* This,
        __x_ABI_CWindows_CUI_CXaml_CIStyle** value);
    HRESULT (STDMETHODCALLTYPE* put_PrimaryButtonStyle)(__x_ABI_CWindows_CUI_CXaml_CControls_CIContentDialog2* This,
        __x_ABI_CWindows_CUI_CXaml_CIStyle* value);
    HRESULT (STDMETHODCALLTYPE* get_SecondaryButtonStyle)(__x_ABI_CWindows_CUI_CXaml_CControls_CIContentDialog2* This,
        __x_ABI_CWindows_CUI_CXaml_CIStyle** value);
    HRESULT (STDMETHODCALLTYPE* put_SecondaryButtonStyle)(__x_ABI_CWindows_CUI_CXaml_CControls_CIContentDialog2* This,
        __x_ABI_CWindows_CUI_CXaml_CIStyle* value);
    HRESULT (STDMETHODCALLTYPE* get_CloseButtonStyle)(__x_ABI_CWindows_CUI_CXaml_CControls_CIContentDialog2* This,
        __x_ABI_CWindows_CUI_CXaml_CIStyle** value);
    HRESULT (STDMETHODCALLTYPE* put_CloseButtonStyle)(__x_ABI_CWindows_CUI_CXaml_CControls_CIContentDialog2* This,
        __x_ABI_CWindows_CUI_CXaml_CIStyle* value);
    HRESULT (STDMETHODCALLTYPE* get_DefaultButton)(__x_ABI_CWindows_CUI_CXaml_CControls_CIContentDialog2* This,
        enum __x_ABI_CWindows_CUI_CXaml_CControls_CContentDialogButton* value);
    HRESULT (STDMETHODCALLTYPE* put_DefaultButton)(__x_ABI_CWindows_CUI_CXaml_CControls_CIContentDialog2* This,
        enum __x_ABI_CWindows_CUI_CXaml_CControls_CContentDialogButton value);
    HRESULT (STDMETHODCALLTYPE* add_CloseButtonClick)(__x_ABI_CWindows_CUI_CXaml_CControls_CIContentDialog2* This,
        __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CContentDialog___x_ABI_CWindows__CUI__CXaml__CControls__CContentDialogButtonClickEventArgs* handler,
        EventRegistrationToken* token);
    HRESULT (STDMETHODCALLTYPE* remove_CloseButtonClick)(__x_ABI_CWindows_CUI_CXaml_CControls_CIContentDialog2* This,
        EventRegistrationToken token);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CIContentDialog2Vtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CIContentDialog2
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIContentDialog2Vtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIContentDialog2;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIContentDialog2_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIContentDialog3_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CControls_CIContentDialog3_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIContentDialog3Vtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CControls_CIContentDialog3* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CControls_CIContentDialog3* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CControls_CIContentDialog3* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CControls_CIContentDialog3* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CControls_CIContentDialog3* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CControls_CIContentDialog3* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* ShowAsyncWithPlacement)(__x_ABI_CWindows_CUI_CXaml_CControls_CIContentDialog3* This,
        enum __x_ABI_CWindows_CUI_CXaml_CControls_CContentDialogPlacement placement,
        __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CUI__CXaml__CControls__CContentDialogResult** operation);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CIContentDialog3Vtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CIContentDialog3
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIContentDialog3Vtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIContentDialog3;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIContentDialog3_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIContentDialogButtonClickDeferral_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CControls_CIContentDialogButtonClickDeferral_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIContentDialogButtonClickDeferralVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CControls_CIContentDialogButtonClickDeferral* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CControls_CIContentDialogButtonClickDeferral* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CControls_CIContentDialogButtonClickDeferral* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CControls_CIContentDialogButtonClickDeferral* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CControls_CIContentDialogButtonClickDeferral* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CControls_CIContentDialogButtonClickDeferral* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* Complete)(__x_ABI_CWindows_CUI_CXaml_CControls_CIContentDialogButtonClickDeferral* This);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CIContentDialogButtonClickDeferralVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CIContentDialogButtonClickDeferral
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIContentDialogButtonClickDeferralVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIContentDialogButtonClickDeferral;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIContentDialogButtonClickDeferral_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIContentDialogButtonClickEventArgs_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CControls_CIContentDialogButtonClickEventArgs_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIContentDialogButtonClickEventArgsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CControls_CIContentDialogButtonClickEventArgs* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CControls_CIContentDialogButtonClickEventArgs* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CControls_CIContentDialogButtonClickEventArgs* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CControls_CIContentDialogButtonClickEventArgs* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CControls_CIContentDialogButtonClickEventArgs* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CControls_CIContentDialogButtonClickEventArgs* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Cancel)(__x_ABI_CWindows_CUI_CXaml_CControls_CIContentDialogButtonClickEventArgs* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* put_Cancel)(__x_ABI_CWindows_CUI_CXaml_CControls_CIContentDialogButtonClickEventArgs* This,
        boolean value);
    HRESULT (STDMETHODCALLTYPE* GetDeferral)(__x_ABI_CWindows_CUI_CXaml_CControls_CIContentDialogButtonClickEventArgs* This,
        __x_ABI_CWindows_CUI_CXaml_CControls_CIContentDialogButtonClickDeferral** result);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CIContentDialogButtonClickEventArgsVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CIContentDialogButtonClickEventArgs
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIContentDialogButtonClickEventArgsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIContentDialogButtonClickEventArgs;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIContentDialogButtonClickEventArgs_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIContentDialogClosedEventArgs_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CControls_CIContentDialogClosedEventArgs_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIContentDialogClosedEventArgsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CControls_CIContentDialogClosedEventArgs* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CControls_CIContentDialogClosedEventArgs* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CControls_CIContentDialogClosedEventArgs* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CControls_CIContentDialogClosedEventArgs* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CControls_CIContentDialogClosedEventArgs* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CControls_CIContentDialogClosedEventArgs* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Result)(__x_ABI_CWindows_CUI_CXaml_CControls_CIContentDialogClosedEventArgs* This,
        enum __x_ABI_CWindows_CUI_CXaml_CControls_CContentDialogResult* value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CIContentDialogClosedEventArgsVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CIContentDialogClosedEventArgs
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIContentDialogClosedEventArgsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIContentDialogClosedEventArgs;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIContentDialogClosedEventArgs_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIContentDialogClosingDeferral_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CControls_CIContentDialogClosingDeferral_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIContentDialogClosingDeferralVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CControls_CIContentDialogClosingDeferral* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CControls_CIContentDialogClosingDeferral* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CControls_CIContentDialogClosingDeferral* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CControls_CIContentDialogClosingDeferral* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CControls_CIContentDialogClosingDeferral* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CControls_CIContentDialogClosingDeferral* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* Complete)(__x_ABI_CWindows_CUI_CXaml_CControls_CIContentDialogClosingDeferral* This);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CIContentDialogClosingDeferralVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CIContentDialogClosingDeferral
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIContentDialogClosingDeferralVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIContentDialogClosingDeferral;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIContentDialogClosingDeferral_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIContentDialogClosingEventArgs_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CControls_CIContentDialogClosingEventArgs_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIContentDialogClosingEventArgsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CControls_CIContentDialogClosingEventArgs* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CControls_CIContentDialogClosingEventArgs* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CControls_CIContentDialogClosingEventArgs* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CControls_CIContentDialogClosingEventArgs* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CControls_CIContentDialogClosingEventArgs* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CControls_CIContentDialogClosingEventArgs* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Result)(__x_ABI_CWindows_CUI_CXaml_CControls_CIContentDialogClosingEventArgs* This,
        enum __x_ABI_CWindows_CUI_CXaml_CControls_CContentDialogResult* value);
    HRESULT (STDMETHODCALLTYPE* get_Cancel)(__x_ABI_CWindows_CUI_CXaml_CControls_CIContentDialogClosingEventArgs* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* put_Cancel)(__x_ABI_CWindows_CUI_CXaml_CControls_CIContentDialogClosingEventArgs* This,
        boolean value);
    HRESULT (STDMETHODCALLTYPE* GetDeferral)(__x_ABI_CWindows_CUI_CXaml_CControls_CIContentDialogClosingEventArgs* This,
        __x_ABI_CWindows_CUI_CXaml_CControls_CIContentDialogClosingDeferral** result);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CIContentDialogClosingEventArgsVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CIContentDialogClosingEventArgs
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIContentDialogClosingEventArgsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIContentDialogClosingEventArgs;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIContentDialogClosingEventArgs_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIContentDialogFactory_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CControls_CIContentDialogFactory_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIContentDialogFactoryVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CControls_CIContentDialogFactory* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CControls_CIContentDialogFactory* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CControls_CIContentDialogFactory* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CControls_CIContentDialogFactory* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CControls_CIContentDialogFactory* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CControls_CIContentDialogFactory* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* CreateInstance)(__x_ABI_CWindows_CUI_CXaml_CControls_CIContentDialogFactory* This,
        IInspectable* baseInterface,
        IInspectable** innerInterface,
        __x_ABI_CWindows_CUI_CXaml_CControls_CIContentDialog** value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CIContentDialogFactoryVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CIContentDialogFactory
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIContentDialogFactoryVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIContentDialogFactory;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIContentDialogFactory_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIContentDialogOpenedEventArgs_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CControls_CIContentDialogOpenedEventArgs_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIContentDialogOpenedEventArgsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CControls_CIContentDialogOpenedEventArgs* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CControls_CIContentDialogOpenedEventArgs* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CControls_CIContentDialogOpenedEventArgs* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CControls_CIContentDialogOpenedEventArgs* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CControls_CIContentDialogOpenedEventArgs* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CControls_CIContentDialogOpenedEventArgs* This,
            TrustLevel* trustLevel);
    
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CIContentDialogOpenedEventArgsVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CIContentDialogOpenedEventArgs
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIContentDialogOpenedEventArgsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIContentDialogOpenedEventArgs;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIContentDialogOpenedEventArgs_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIContentDialogStatics_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CControls_CIContentDialogStatics_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIContentDialogStaticsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CControls_CIContentDialogStatics* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CControls_CIContentDialogStatics* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CControls_CIContentDialogStatics* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CControls_CIContentDialogStatics* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CControls_CIContentDialogStatics* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CControls_CIContentDialogStatics* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_TitleProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CIContentDialogStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_TitleTemplateProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CIContentDialogStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_FullSizeDesiredProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CIContentDialogStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_PrimaryButtonTextProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CIContentDialogStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_SecondaryButtonTextProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CIContentDialogStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_PrimaryButtonCommandProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CIContentDialogStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_SecondaryButtonCommandProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CIContentDialogStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_PrimaryButtonCommandParameterProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CIContentDialogStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_SecondaryButtonCommandParameterProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CIContentDialogStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_IsPrimaryButtonEnabledProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CIContentDialogStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_IsSecondaryButtonEnabledProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CIContentDialogStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CIContentDialogStaticsVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CIContentDialogStatics
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIContentDialogStaticsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIContentDialogStatics;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIContentDialogStatics_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIContentDialogStatics2_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CControls_CIContentDialogStatics2_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIContentDialogStatics2Vtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CControls_CIContentDialogStatics2* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CControls_CIContentDialogStatics2* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CControls_CIContentDialogStatics2* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CControls_CIContentDialogStatics2* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CControls_CIContentDialogStatics2* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CControls_CIContentDialogStatics2* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_CloseButtonTextProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CIContentDialogStatics2* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_CloseButtonCommandProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CIContentDialogStatics2* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_CloseButtonCommandParameterProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CIContentDialogStatics2* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_PrimaryButtonStyleProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CIContentDialogStatics2* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_SecondaryButtonStyleProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CIContentDialogStatics2* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_CloseButtonStyleProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CIContentDialogStatics2* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_DefaultButtonProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CIContentDialogStatics2* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CIContentDialogStatics2Vtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CIContentDialogStatics2
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIContentDialogStatics2Vtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIContentDialogStatics2;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIContentDialogStatics2_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIContentLinkChangedEventArgs_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CControls_CIContentLinkChangedEventArgs_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIContentLinkChangedEventArgsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CControls_CIContentLinkChangedEventArgs* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CControls_CIContentLinkChangedEventArgs* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CControls_CIContentLinkChangedEventArgs* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CControls_CIContentLinkChangedEventArgs* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CControls_CIContentLinkChangedEventArgs* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CControls_CIContentLinkChangedEventArgs* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_ChangeKind)(__x_ABI_CWindows_CUI_CXaml_CControls_CIContentLinkChangedEventArgs* This,
        enum __x_ABI_CWindows_CUI_CXaml_CControls_CContentLinkChangeKind* value);
    HRESULT (STDMETHODCALLTYPE* get_ContentLinkInfo)(__x_ABI_CWindows_CUI_CXaml_CControls_CIContentLinkChangedEventArgs* This,
        __x_ABI_CWindows_CUI_CText_CIContentLinkInfo** value);
    HRESULT (STDMETHODCALLTYPE* get_TextRange)(__x_ABI_CWindows_CUI_CXaml_CControls_CIContentLinkChangedEventArgs* This,
        struct __x_ABI_CWindows_CUI_CXaml_CDocuments_CTextRange* value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CIContentLinkChangedEventArgsVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CIContentLinkChangedEventArgs
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIContentLinkChangedEventArgsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIContentLinkChangedEventArgs;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIContentLinkChangedEventArgs_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIContentPresenter_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CControls_CIContentPresenter_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIContentPresenterVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CControls_CIContentPresenter* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CControls_CIContentPresenter* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CControls_CIContentPresenter* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CControls_CIContentPresenter* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CControls_CIContentPresenter* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CControls_CIContentPresenter* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Content)(__x_ABI_CWindows_CUI_CXaml_CControls_CIContentPresenter* This,
        IInspectable** value);
    HRESULT (STDMETHODCALLTYPE* put_Content)(__x_ABI_CWindows_CUI_CXaml_CControls_CIContentPresenter* This,
        IInspectable* value);
    HRESULT (STDMETHODCALLTYPE* get_ContentTemplate)(__x_ABI_CWindows_CUI_CXaml_CControls_CIContentPresenter* This,
        __x_ABI_CWindows_CUI_CXaml_CIDataTemplate** value);
    HRESULT (STDMETHODCALLTYPE* put_ContentTemplate)(__x_ABI_CWindows_CUI_CXaml_CControls_CIContentPresenter* This,
        __x_ABI_CWindows_CUI_CXaml_CIDataTemplate* value);
    HRESULT (STDMETHODCALLTYPE* get_ContentTemplateSelector)(__x_ABI_CWindows_CUI_CXaml_CControls_CIContentPresenter* This,
        __x_ABI_CWindows_CUI_CXaml_CControls_CIDataTemplateSelector** value);
    HRESULT (STDMETHODCALLTYPE* put_ContentTemplateSelector)(__x_ABI_CWindows_CUI_CXaml_CControls_CIContentPresenter* This,
        __x_ABI_CWindows_CUI_CXaml_CControls_CIDataTemplateSelector* value);
    HRESULT (STDMETHODCALLTYPE* get_ContentTransitions)(__x_ABI_CWindows_CUI_CXaml_CControls_CIContentPresenter* This,
        __x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CXaml__CMedia__CAnimation__CTransition** value);
    HRESULT (STDMETHODCALLTYPE* put_ContentTransitions)(__x_ABI_CWindows_CUI_CXaml_CControls_CIContentPresenter* This,
        __x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CXaml__CMedia__CAnimation__CTransition* value);
    HRESULT (STDMETHODCALLTYPE* get_FontSize)(__x_ABI_CWindows_CUI_CXaml_CControls_CIContentPresenter* This,
        DOUBLE* value);
    HRESULT (STDMETHODCALLTYPE* put_FontSize)(__x_ABI_CWindows_CUI_CXaml_CControls_CIContentPresenter* This,
        DOUBLE value);
    HRESULT (STDMETHODCALLTYPE* get_FontFamily)(__x_ABI_CWindows_CUI_CXaml_CControls_CIContentPresenter* This,
        __x_ABI_CWindows_CUI_CXaml_CMedia_CIFontFamily** value);
    HRESULT (STDMETHODCALLTYPE* put_FontFamily)(__x_ABI_CWindows_CUI_CXaml_CControls_CIContentPresenter* This,
        __x_ABI_CWindows_CUI_CXaml_CMedia_CIFontFamily* value);
    HRESULT (STDMETHODCALLTYPE* get_FontWeight)(__x_ABI_CWindows_CUI_CXaml_CControls_CIContentPresenter* This,
        struct __x_ABI_CWindows_CUI_CText_CFontWeight* value);
    HRESULT (STDMETHODCALLTYPE* put_FontWeight)(__x_ABI_CWindows_CUI_CXaml_CControls_CIContentPresenter* This,
        struct __x_ABI_CWindows_CUI_CText_CFontWeight value);
    HRESULT (STDMETHODCALLTYPE* get_FontStyle)(__x_ABI_CWindows_CUI_CXaml_CControls_CIContentPresenter* This,
        enum __x_ABI_CWindows_CUI_CText_CFontStyle* value);
    HRESULT (STDMETHODCALLTYPE* put_FontStyle)(__x_ABI_CWindows_CUI_CXaml_CControls_CIContentPresenter* This,
        enum __x_ABI_CWindows_CUI_CText_CFontStyle value);
    HRESULT (STDMETHODCALLTYPE* get_FontStretch)(__x_ABI_CWindows_CUI_CXaml_CControls_CIContentPresenter* This,
        enum __x_ABI_CWindows_CUI_CText_CFontStretch* value);
    HRESULT (STDMETHODCALLTYPE* put_FontStretch)(__x_ABI_CWindows_CUI_CXaml_CControls_CIContentPresenter* This,
        enum __x_ABI_CWindows_CUI_CText_CFontStretch value);
    HRESULT (STDMETHODCALLTYPE* get_CharacterSpacing)(__x_ABI_CWindows_CUI_CXaml_CControls_CIContentPresenter* This,
        INT32* value);
    HRESULT (STDMETHODCALLTYPE* put_CharacterSpacing)(__x_ABI_CWindows_CUI_CXaml_CControls_CIContentPresenter* This,
        INT32 value);
    HRESULT (STDMETHODCALLTYPE* get_Foreground)(__x_ABI_CWindows_CUI_CXaml_CControls_CIContentPresenter* This,
        __x_ABI_CWindows_CUI_CXaml_CMedia_CIBrush** value);
    HRESULT (STDMETHODCALLTYPE* put_Foreground)(__x_ABI_CWindows_CUI_CXaml_CControls_CIContentPresenter* This,
        __x_ABI_CWindows_CUI_CXaml_CMedia_CIBrush* value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CIContentPresenterVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CIContentPresenter
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIContentPresenterVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIContentPresenter;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIContentPresenter_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIContentPresenter2_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CControls_CIContentPresenter2_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIContentPresenter2Vtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CControls_CIContentPresenter2* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CControls_CIContentPresenter2* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CControls_CIContentPresenter2* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CControls_CIContentPresenter2* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CControls_CIContentPresenter2* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CControls_CIContentPresenter2* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_OpticalMarginAlignment)(__x_ABI_CWindows_CUI_CXaml_CControls_CIContentPresenter2* This,
        enum __x_ABI_CWindows_CUI_CXaml_COpticalMarginAlignment* value);
    HRESULT (STDMETHODCALLTYPE* put_OpticalMarginAlignment)(__x_ABI_CWindows_CUI_CXaml_CControls_CIContentPresenter2* This,
        enum __x_ABI_CWindows_CUI_CXaml_COpticalMarginAlignment value);
    HRESULT (STDMETHODCALLTYPE* get_TextLineBounds)(__x_ABI_CWindows_CUI_CXaml_CControls_CIContentPresenter2* This,
        enum __x_ABI_CWindows_CUI_CXaml_CTextLineBounds* value);
    HRESULT (STDMETHODCALLTYPE* put_TextLineBounds)(__x_ABI_CWindows_CUI_CXaml_CControls_CIContentPresenter2* This,
        enum __x_ABI_CWindows_CUI_CXaml_CTextLineBounds value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CIContentPresenter2Vtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CIContentPresenter2
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIContentPresenter2Vtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIContentPresenter2;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIContentPresenter2_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIContentPresenter3_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CControls_CIContentPresenter3_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIContentPresenter3Vtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CControls_CIContentPresenter3* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CControls_CIContentPresenter3* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CControls_CIContentPresenter3* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CControls_CIContentPresenter3* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CControls_CIContentPresenter3* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CControls_CIContentPresenter3* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_IsTextScaleFactorEnabled)(__x_ABI_CWindows_CUI_CXaml_CControls_CIContentPresenter3* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* put_IsTextScaleFactorEnabled)(__x_ABI_CWindows_CUI_CXaml_CControls_CIContentPresenter3* This,
        boolean value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CIContentPresenter3Vtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CIContentPresenter3
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIContentPresenter3Vtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIContentPresenter3;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIContentPresenter3_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIContentPresenter4_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CControls_CIContentPresenter4_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIContentPresenter4Vtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CControls_CIContentPresenter4* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CControls_CIContentPresenter4* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CControls_CIContentPresenter4* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CControls_CIContentPresenter4* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CControls_CIContentPresenter4* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CControls_CIContentPresenter4* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_TextWrapping)(__x_ABI_CWindows_CUI_CXaml_CControls_CIContentPresenter4* This,
        enum __x_ABI_CWindows_CUI_CXaml_CTextWrapping* value);
    HRESULT (STDMETHODCALLTYPE* put_TextWrapping)(__x_ABI_CWindows_CUI_CXaml_CControls_CIContentPresenter4* This,
        enum __x_ABI_CWindows_CUI_CXaml_CTextWrapping value);
    HRESULT (STDMETHODCALLTYPE* get_MaxLines)(__x_ABI_CWindows_CUI_CXaml_CControls_CIContentPresenter4* This,
        INT32* value);
    HRESULT (STDMETHODCALLTYPE* put_MaxLines)(__x_ABI_CWindows_CUI_CXaml_CControls_CIContentPresenter4* This,
        INT32 value);
    HRESULT (STDMETHODCALLTYPE* get_LineStackingStrategy)(__x_ABI_CWindows_CUI_CXaml_CControls_CIContentPresenter4* This,
        enum __x_ABI_CWindows_CUI_CXaml_CLineStackingStrategy* value);
    HRESULT (STDMETHODCALLTYPE* put_LineStackingStrategy)(__x_ABI_CWindows_CUI_CXaml_CControls_CIContentPresenter4* This,
        enum __x_ABI_CWindows_CUI_CXaml_CLineStackingStrategy value);
    HRESULT (STDMETHODCALLTYPE* get_LineHeight)(__x_ABI_CWindows_CUI_CXaml_CControls_CIContentPresenter4* This,
        DOUBLE* value);
    HRESULT (STDMETHODCALLTYPE* put_LineHeight)(__x_ABI_CWindows_CUI_CXaml_CControls_CIContentPresenter4* This,
        DOUBLE value);
    HRESULT (STDMETHODCALLTYPE* get_BorderBrush)(__x_ABI_CWindows_CUI_CXaml_CControls_CIContentPresenter4* This,
        __x_ABI_CWindows_CUI_CXaml_CMedia_CIBrush** value);
    HRESULT (STDMETHODCALLTYPE* put_BorderBrush)(__x_ABI_CWindows_CUI_CXaml_CControls_CIContentPresenter4* This,
        __x_ABI_CWindows_CUI_CXaml_CMedia_CIBrush* value);
    HRESULT (STDMETHODCALLTYPE* get_BorderThickness)(__x_ABI_CWindows_CUI_CXaml_CControls_CIContentPresenter4* This,
        struct __x_ABI_CWindows_CUI_CXaml_CThickness* value);
    HRESULT (STDMETHODCALLTYPE* put_BorderThickness)(__x_ABI_CWindows_CUI_CXaml_CControls_CIContentPresenter4* This,
        struct __x_ABI_CWindows_CUI_CXaml_CThickness value);
    HRESULT (STDMETHODCALLTYPE* get_CornerRadius)(__x_ABI_CWindows_CUI_CXaml_CControls_CIContentPresenter4* This,
        struct __x_ABI_CWindows_CUI_CXaml_CCornerRadius* value);
    HRESULT (STDMETHODCALLTYPE* put_CornerRadius)(__x_ABI_CWindows_CUI_CXaml_CControls_CIContentPresenter4* This,
        struct __x_ABI_CWindows_CUI_CXaml_CCornerRadius value);
    HRESULT (STDMETHODCALLTYPE* get_Padding)(__x_ABI_CWindows_CUI_CXaml_CControls_CIContentPresenter4* This,
        struct __x_ABI_CWindows_CUI_CXaml_CThickness* value);
    HRESULT (STDMETHODCALLTYPE* put_Padding)(__x_ABI_CWindows_CUI_CXaml_CControls_CIContentPresenter4* This,
        struct __x_ABI_CWindows_CUI_CXaml_CThickness value);
    HRESULT (STDMETHODCALLTYPE* get_Background)(__x_ABI_CWindows_CUI_CXaml_CControls_CIContentPresenter4* This,
        __x_ABI_CWindows_CUI_CXaml_CMedia_CIBrush** value);
    HRESULT (STDMETHODCALLTYPE* put_Background)(__x_ABI_CWindows_CUI_CXaml_CControls_CIContentPresenter4* This,
        __x_ABI_CWindows_CUI_CXaml_CMedia_CIBrush* value);
    HRESULT (STDMETHODCALLTYPE* get_HorizontalContentAlignment)(__x_ABI_CWindows_CUI_CXaml_CControls_CIContentPresenter4* This,
        enum __x_ABI_CWindows_CUI_CXaml_CHorizontalAlignment* value);
    HRESULT (STDMETHODCALLTYPE* put_HorizontalContentAlignment)(__x_ABI_CWindows_CUI_CXaml_CControls_CIContentPresenter4* This,
        enum __x_ABI_CWindows_CUI_CXaml_CHorizontalAlignment value);
    HRESULT (STDMETHODCALLTYPE* get_VerticalContentAlignment)(__x_ABI_CWindows_CUI_CXaml_CControls_CIContentPresenter4* This,
        enum __x_ABI_CWindows_CUI_CXaml_CVerticalAlignment* value);
    HRESULT (STDMETHODCALLTYPE* put_VerticalContentAlignment)(__x_ABI_CWindows_CUI_CXaml_CControls_CIContentPresenter4* This,
        enum __x_ABI_CWindows_CUI_CXaml_CVerticalAlignment value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CIContentPresenter4Vtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CIContentPresenter4
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIContentPresenter4Vtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIContentPresenter4;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIContentPresenter4_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIContentPresenter5_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CControls_CIContentPresenter5_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIContentPresenter5Vtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CControls_CIContentPresenter5* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CControls_CIContentPresenter5* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CControls_CIContentPresenter5* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CControls_CIContentPresenter5* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CControls_CIContentPresenter5* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CControls_CIContentPresenter5* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_BackgroundTransition)(__x_ABI_CWindows_CUI_CXaml_CControls_CIContentPresenter5* This,
        __x_ABI_CWindows_CUI_CXaml_CIBrushTransition** value);
    HRESULT (STDMETHODCALLTYPE* put_BackgroundTransition)(__x_ABI_CWindows_CUI_CXaml_CControls_CIContentPresenter5* This,
        __x_ABI_CWindows_CUI_CXaml_CIBrushTransition* value);
    HRESULT (STDMETHODCALLTYPE* get_BackgroundSizing)(__x_ABI_CWindows_CUI_CXaml_CControls_CIContentPresenter5* This,
        enum __x_ABI_CWindows_CUI_CXaml_CControls_CBackgroundSizing* value);
    HRESULT (STDMETHODCALLTYPE* put_BackgroundSizing)(__x_ABI_CWindows_CUI_CXaml_CControls_CIContentPresenter5* This,
        enum __x_ABI_CWindows_CUI_CXaml_CControls_CBackgroundSizing value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CIContentPresenter5Vtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CIContentPresenter5
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIContentPresenter5Vtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIContentPresenter5;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIContentPresenter5_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIContentPresenterFactory_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CControls_CIContentPresenterFactory_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIContentPresenterFactoryVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CControls_CIContentPresenterFactory* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CControls_CIContentPresenterFactory* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CControls_CIContentPresenterFactory* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CControls_CIContentPresenterFactory* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CControls_CIContentPresenterFactory* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CControls_CIContentPresenterFactory* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* CreateInstance)(__x_ABI_CWindows_CUI_CXaml_CControls_CIContentPresenterFactory* This,
        IInspectable* baseInterface,
        IInspectable** innerInterface,
        __x_ABI_CWindows_CUI_CXaml_CControls_CIContentPresenter** value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CIContentPresenterFactoryVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CIContentPresenterFactory
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIContentPresenterFactoryVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIContentPresenterFactory;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIContentPresenterFactory_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIContentPresenterOverrides_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CControls_CIContentPresenterOverrides_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIContentPresenterOverridesVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CControls_CIContentPresenterOverrides* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CControls_CIContentPresenterOverrides* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CControls_CIContentPresenterOverrides* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CControls_CIContentPresenterOverrides* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CControls_CIContentPresenterOverrides* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CControls_CIContentPresenterOverrides* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* OnContentTemplateChanged)(__x_ABI_CWindows_CUI_CXaml_CControls_CIContentPresenterOverrides* This,
        __x_ABI_CWindows_CUI_CXaml_CIDataTemplate* oldContentTemplate,
        __x_ABI_CWindows_CUI_CXaml_CIDataTemplate* newContentTemplate);
    HRESULT (STDMETHODCALLTYPE* OnContentTemplateSelectorChanged)(__x_ABI_CWindows_CUI_CXaml_CControls_CIContentPresenterOverrides* This,
        __x_ABI_CWindows_CUI_CXaml_CControls_CIDataTemplateSelector* oldContentTemplateSelector,
        __x_ABI_CWindows_CUI_CXaml_CControls_CIDataTemplateSelector* newContentTemplateSelector);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CIContentPresenterOverridesVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CIContentPresenterOverrides
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIContentPresenterOverridesVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIContentPresenterOverrides;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIContentPresenterOverrides_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIContentPresenterStatics_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CControls_CIContentPresenterStatics_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIContentPresenterStaticsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CControls_CIContentPresenterStatics* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CControls_CIContentPresenterStatics* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CControls_CIContentPresenterStatics* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CControls_CIContentPresenterStatics* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CControls_CIContentPresenterStatics* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CControls_CIContentPresenterStatics* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_ContentProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CIContentPresenterStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_ContentTemplateProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CIContentPresenterStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_ContentTemplateSelectorProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CIContentPresenterStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_ContentTransitionsProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CIContentPresenterStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_FontSizeProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CIContentPresenterStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_FontFamilyProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CIContentPresenterStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_FontWeightProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CIContentPresenterStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_FontStyleProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CIContentPresenterStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_FontStretchProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CIContentPresenterStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_CharacterSpacingProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CIContentPresenterStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_ForegroundProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CIContentPresenterStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CIContentPresenterStaticsVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CIContentPresenterStatics
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIContentPresenterStaticsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIContentPresenterStatics;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIContentPresenterStatics_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIContentPresenterStatics2_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CControls_CIContentPresenterStatics2_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIContentPresenterStatics2Vtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CControls_CIContentPresenterStatics2* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CControls_CIContentPresenterStatics2* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CControls_CIContentPresenterStatics2* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CControls_CIContentPresenterStatics2* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CControls_CIContentPresenterStatics2* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CControls_CIContentPresenterStatics2* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_OpticalMarginAlignmentProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CIContentPresenterStatics2* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_TextLineBoundsProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CIContentPresenterStatics2* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CIContentPresenterStatics2Vtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CIContentPresenterStatics2
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIContentPresenterStatics2Vtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIContentPresenterStatics2;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIContentPresenterStatics2_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIContentPresenterStatics3_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CControls_CIContentPresenterStatics3_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIContentPresenterStatics3Vtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CControls_CIContentPresenterStatics3* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CControls_CIContentPresenterStatics3* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CControls_CIContentPresenterStatics3* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CControls_CIContentPresenterStatics3* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CControls_CIContentPresenterStatics3* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CControls_CIContentPresenterStatics3* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_IsTextScaleFactorEnabledProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CIContentPresenterStatics3* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CIContentPresenterStatics3Vtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CIContentPresenterStatics3
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIContentPresenterStatics3Vtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIContentPresenterStatics3;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIContentPresenterStatics3_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIContentPresenterStatics4_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CControls_CIContentPresenterStatics4_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIContentPresenterStatics4Vtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CControls_CIContentPresenterStatics4* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CControls_CIContentPresenterStatics4* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CControls_CIContentPresenterStatics4* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CControls_CIContentPresenterStatics4* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CControls_CIContentPresenterStatics4* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CControls_CIContentPresenterStatics4* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_TextWrappingProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CIContentPresenterStatics4* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_MaxLinesProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CIContentPresenterStatics4* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_LineStackingStrategyProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CIContentPresenterStatics4* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_LineHeightProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CIContentPresenterStatics4* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_BorderBrushProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CIContentPresenterStatics4* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_BorderThicknessProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CIContentPresenterStatics4* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_CornerRadiusProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CIContentPresenterStatics4* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_PaddingProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CIContentPresenterStatics4* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_BackgroundProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CIContentPresenterStatics4* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_HorizontalContentAlignmentProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CIContentPresenterStatics4* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_VerticalContentAlignmentProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CIContentPresenterStatics4* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CIContentPresenterStatics4Vtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CIContentPresenterStatics4
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIContentPresenterStatics4Vtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIContentPresenterStatics4;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIContentPresenterStatics4_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIContentPresenterStatics5_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CControls_CIContentPresenterStatics5_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIContentPresenterStatics5Vtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CControls_CIContentPresenterStatics5* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CControls_CIContentPresenterStatics5* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CControls_CIContentPresenterStatics5* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CControls_CIContentPresenterStatics5* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CControls_CIContentPresenterStatics5* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CControls_CIContentPresenterStatics5* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_BackgroundSizingProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CIContentPresenterStatics5* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CIContentPresenterStatics5Vtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CIContentPresenterStatics5
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIContentPresenterStatics5Vtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIContentPresenterStatics5;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIContentPresenterStatics5_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIContextMenuEventArgs_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CControls_CIContextMenuEventArgs_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIContextMenuEventArgsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CControls_CIContextMenuEventArgs* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CControls_CIContextMenuEventArgs* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CControls_CIContextMenuEventArgs* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CControls_CIContextMenuEventArgs* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CControls_CIContextMenuEventArgs* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CControls_CIContextMenuEventArgs* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Handled)(__x_ABI_CWindows_CUI_CXaml_CControls_CIContextMenuEventArgs* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* put_Handled)(__x_ABI_CWindows_CUI_CXaml_CControls_CIContextMenuEventArgs* This,
        boolean value);
    HRESULT (STDMETHODCALLTYPE* get_CursorLeft)(__x_ABI_CWindows_CUI_CXaml_CControls_CIContextMenuEventArgs* This,
        DOUBLE* value);
    HRESULT (STDMETHODCALLTYPE* get_CursorTop)(__x_ABI_CWindows_CUI_CXaml_CControls_CIContextMenuEventArgs* This,
        DOUBLE* value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CIContextMenuEventArgsVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CIContextMenuEventArgs
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIContextMenuEventArgsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIContextMenuEventArgs;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIContextMenuEventArgs_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIControl_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CControls_CIControl_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIControlVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CControls_CIControl* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CControls_CIControl* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CControls_CIControl* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CControls_CIControl* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CControls_CIControl* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CControls_CIControl* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_FontSize)(__x_ABI_CWindows_CUI_CXaml_CControls_CIControl* This,
        DOUBLE* value);
    HRESULT (STDMETHODCALLTYPE* put_FontSize)(__x_ABI_CWindows_CUI_CXaml_CControls_CIControl* This,
        DOUBLE value);
    HRESULT (STDMETHODCALLTYPE* get_FontFamily)(__x_ABI_CWindows_CUI_CXaml_CControls_CIControl* This,
        __x_ABI_CWindows_CUI_CXaml_CMedia_CIFontFamily** value);
    HRESULT (STDMETHODCALLTYPE* put_FontFamily)(__x_ABI_CWindows_CUI_CXaml_CControls_CIControl* This,
        __x_ABI_CWindows_CUI_CXaml_CMedia_CIFontFamily* value);
    HRESULT (STDMETHODCALLTYPE* get_FontWeight)(__x_ABI_CWindows_CUI_CXaml_CControls_CIControl* This,
        struct __x_ABI_CWindows_CUI_CText_CFontWeight* value);
    HRESULT (STDMETHODCALLTYPE* put_FontWeight)(__x_ABI_CWindows_CUI_CXaml_CControls_CIControl* This,
        struct __x_ABI_CWindows_CUI_CText_CFontWeight value);
    HRESULT (STDMETHODCALLTYPE* get_FontStyle)(__x_ABI_CWindows_CUI_CXaml_CControls_CIControl* This,
        enum __x_ABI_CWindows_CUI_CText_CFontStyle* value);
    HRESULT (STDMETHODCALLTYPE* put_FontStyle)(__x_ABI_CWindows_CUI_CXaml_CControls_CIControl* This,
        enum __x_ABI_CWindows_CUI_CText_CFontStyle value);
    HRESULT (STDMETHODCALLTYPE* get_FontStretch)(__x_ABI_CWindows_CUI_CXaml_CControls_CIControl* This,
        enum __x_ABI_CWindows_CUI_CText_CFontStretch* value);
    HRESULT (STDMETHODCALLTYPE* put_FontStretch)(__x_ABI_CWindows_CUI_CXaml_CControls_CIControl* This,
        enum __x_ABI_CWindows_CUI_CText_CFontStretch value);
    HRESULT (STDMETHODCALLTYPE* get_CharacterSpacing)(__x_ABI_CWindows_CUI_CXaml_CControls_CIControl* This,
        INT32* value);
    HRESULT (STDMETHODCALLTYPE* put_CharacterSpacing)(__x_ABI_CWindows_CUI_CXaml_CControls_CIControl* This,
        INT32 value);
    HRESULT (STDMETHODCALLTYPE* get_Foreground)(__x_ABI_CWindows_CUI_CXaml_CControls_CIControl* This,
        __x_ABI_CWindows_CUI_CXaml_CMedia_CIBrush** value);
    HRESULT (STDMETHODCALLTYPE* put_Foreground)(__x_ABI_CWindows_CUI_CXaml_CControls_CIControl* This,
        __x_ABI_CWindows_CUI_CXaml_CMedia_CIBrush* value);
    HRESULT (STDMETHODCALLTYPE* get_IsTabStop)(__x_ABI_CWindows_CUI_CXaml_CControls_CIControl* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* put_IsTabStop)(__x_ABI_CWindows_CUI_CXaml_CControls_CIControl* This,
        boolean value);
    HRESULT (STDMETHODCALLTYPE* get_IsEnabled)(__x_ABI_CWindows_CUI_CXaml_CControls_CIControl* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* put_IsEnabled)(__x_ABI_CWindows_CUI_CXaml_CControls_CIControl* This,
        boolean value);
    HRESULT (STDMETHODCALLTYPE* get_TabIndex)(__x_ABI_CWindows_CUI_CXaml_CControls_CIControl* This,
        INT32* value);
    HRESULT (STDMETHODCALLTYPE* put_TabIndex)(__x_ABI_CWindows_CUI_CXaml_CControls_CIControl* This,
        INT32 value);
    HRESULT (STDMETHODCALLTYPE* get_TabNavigation)(__x_ABI_CWindows_CUI_CXaml_CControls_CIControl* This,
        enum __x_ABI_CWindows_CUI_CXaml_CInput_CKeyboardNavigationMode* value);
    HRESULT (STDMETHODCALLTYPE* put_TabNavigation)(__x_ABI_CWindows_CUI_CXaml_CControls_CIControl* This,
        enum __x_ABI_CWindows_CUI_CXaml_CInput_CKeyboardNavigationMode value);
    HRESULT (STDMETHODCALLTYPE* get_Template)(__x_ABI_CWindows_CUI_CXaml_CControls_CIControl* This,
        __x_ABI_CWindows_CUI_CXaml_CControls_CIControlTemplate** value);
    HRESULT (STDMETHODCALLTYPE* put_Template)(__x_ABI_CWindows_CUI_CXaml_CControls_CIControl* This,
        __x_ABI_CWindows_CUI_CXaml_CControls_CIControlTemplate* value);
    HRESULT (STDMETHODCALLTYPE* get_Padding)(__x_ABI_CWindows_CUI_CXaml_CControls_CIControl* This,
        struct __x_ABI_CWindows_CUI_CXaml_CThickness* value);
    HRESULT (STDMETHODCALLTYPE* put_Padding)(__x_ABI_CWindows_CUI_CXaml_CControls_CIControl* This,
        struct __x_ABI_CWindows_CUI_CXaml_CThickness value);
    HRESULT (STDMETHODCALLTYPE* get_HorizontalContentAlignment)(__x_ABI_CWindows_CUI_CXaml_CControls_CIControl* This,
        enum __x_ABI_CWindows_CUI_CXaml_CHorizontalAlignment* value);
    HRESULT (STDMETHODCALLTYPE* put_HorizontalContentAlignment)(__x_ABI_CWindows_CUI_CXaml_CControls_CIControl* This,
        enum __x_ABI_CWindows_CUI_CXaml_CHorizontalAlignment value);
    HRESULT (STDMETHODCALLTYPE* get_VerticalContentAlignment)(__x_ABI_CWindows_CUI_CXaml_CControls_CIControl* This,
        enum __x_ABI_CWindows_CUI_CXaml_CVerticalAlignment* value);
    HRESULT (STDMETHODCALLTYPE* put_VerticalContentAlignment)(__x_ABI_CWindows_CUI_CXaml_CControls_CIControl* This,
        enum __x_ABI_CWindows_CUI_CXaml_CVerticalAlignment value);
    HRESULT (STDMETHODCALLTYPE* get_Background)(__x_ABI_CWindows_CUI_CXaml_CControls_CIControl* This,
        __x_ABI_CWindows_CUI_CXaml_CMedia_CIBrush** value);
    HRESULT (STDMETHODCALLTYPE* put_Background)(__x_ABI_CWindows_CUI_CXaml_CControls_CIControl* This,
        __x_ABI_CWindows_CUI_CXaml_CMedia_CIBrush* value);
    HRESULT (STDMETHODCALLTYPE* get_BorderThickness)(__x_ABI_CWindows_CUI_CXaml_CControls_CIControl* This,
        struct __x_ABI_CWindows_CUI_CXaml_CThickness* value);
    HRESULT (STDMETHODCALLTYPE* put_BorderThickness)(__x_ABI_CWindows_CUI_CXaml_CControls_CIControl* This,
        struct __x_ABI_CWindows_CUI_CXaml_CThickness value);
    HRESULT (STDMETHODCALLTYPE* get_BorderBrush)(__x_ABI_CWindows_CUI_CXaml_CControls_CIControl* This,
        __x_ABI_CWindows_CUI_CXaml_CMedia_CIBrush** value);
    HRESULT (STDMETHODCALLTYPE* put_BorderBrush)(__x_ABI_CWindows_CUI_CXaml_CControls_CIControl* This,
        __x_ABI_CWindows_CUI_CXaml_CMedia_CIBrush* value);
    HRESULT (STDMETHODCALLTYPE* get_FocusState)(__x_ABI_CWindows_CUI_CXaml_CControls_CIControl* This,
        enum __x_ABI_CWindows_CUI_CXaml_CFocusState* value);
    HRESULT (STDMETHODCALLTYPE* add_IsEnabledChanged)(__x_ABI_CWindows_CUI_CXaml_CControls_CIControl* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyPropertyChangedEventHandler* handler,
        EventRegistrationToken* token);
    HRESULT (STDMETHODCALLTYPE* remove_IsEnabledChanged)(__x_ABI_CWindows_CUI_CXaml_CControls_CIControl* This,
        EventRegistrationToken token);
    HRESULT (STDMETHODCALLTYPE* ApplyTemplate)(__x_ABI_CWindows_CUI_CXaml_CControls_CIControl* This,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* Focus)(__x_ABI_CWindows_CUI_CXaml_CControls_CIControl* This,
        enum __x_ABI_CWindows_CUI_CXaml_CFocusState value,
        boolean* result);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CIControlVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CIControl
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIControlVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIControl;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIControl_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIControl2_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CControls_CIControl2_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIControl2Vtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CControls_CIControl2* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CControls_CIControl2* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CControls_CIControl2* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CControls_CIControl2* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CControls_CIControl2* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CControls_CIControl2* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_IsTextScaleFactorEnabled)(__x_ABI_CWindows_CUI_CXaml_CControls_CIControl2* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* put_IsTextScaleFactorEnabled)(__x_ABI_CWindows_CUI_CXaml_CControls_CIControl2* This,
        boolean value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CIControl2Vtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CIControl2
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIControl2Vtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIControl2;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIControl2_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIControl3_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CControls_CIControl3_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIControl3Vtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CControls_CIControl3* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CControls_CIControl3* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CControls_CIControl3* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CControls_CIControl3* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CControls_CIControl3* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CControls_CIControl3* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_UseSystemFocusVisuals)(__x_ABI_CWindows_CUI_CXaml_CControls_CIControl3* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* put_UseSystemFocusVisuals)(__x_ABI_CWindows_CUI_CXaml_CControls_CIControl3* This,
        boolean value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CIControl3Vtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CIControl3
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIControl3Vtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIControl3;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIControl3_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIControl4_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CControls_CIControl4_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIControl4Vtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CControls_CIControl4* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CControls_CIControl4* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CControls_CIControl4* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CControls_CIControl4* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CControls_CIControl4* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CControls_CIControl4* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_IsFocusEngagementEnabled)(__x_ABI_CWindows_CUI_CXaml_CControls_CIControl4* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* put_IsFocusEngagementEnabled)(__x_ABI_CWindows_CUI_CXaml_CControls_CIControl4* This,
        boolean value);
    HRESULT (STDMETHODCALLTYPE* get_IsFocusEngaged)(__x_ABI_CWindows_CUI_CXaml_CControls_CIControl4* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* put_IsFocusEngaged)(__x_ABI_CWindows_CUI_CXaml_CControls_CIControl4* This,
        boolean value);
    HRESULT (STDMETHODCALLTYPE* get_RequiresPointer)(__x_ABI_CWindows_CUI_CXaml_CControls_CIControl4* This,
        enum __x_ABI_CWindows_CUI_CXaml_CControls_CRequiresPointer* value);
    HRESULT (STDMETHODCALLTYPE* put_RequiresPointer)(__x_ABI_CWindows_CUI_CXaml_CControls_CIControl4* This,
        enum __x_ABI_CWindows_CUI_CXaml_CControls_CRequiresPointer value);
    HRESULT (STDMETHODCALLTYPE* get_XYFocusLeft)(__x_ABI_CWindows_CUI_CXaml_CControls_CIControl4* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyObject** value);
    HRESULT (STDMETHODCALLTYPE* put_XYFocusLeft)(__x_ABI_CWindows_CUI_CXaml_CControls_CIControl4* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyObject* value);
    HRESULT (STDMETHODCALLTYPE* get_XYFocusRight)(__x_ABI_CWindows_CUI_CXaml_CControls_CIControl4* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyObject** value);
    HRESULT (STDMETHODCALLTYPE* put_XYFocusRight)(__x_ABI_CWindows_CUI_CXaml_CControls_CIControl4* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyObject* value);
    HRESULT (STDMETHODCALLTYPE* get_XYFocusUp)(__x_ABI_CWindows_CUI_CXaml_CControls_CIControl4* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyObject** value);
    HRESULT (STDMETHODCALLTYPE* put_XYFocusUp)(__x_ABI_CWindows_CUI_CXaml_CControls_CIControl4* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyObject* value);
    HRESULT (STDMETHODCALLTYPE* get_XYFocusDown)(__x_ABI_CWindows_CUI_CXaml_CControls_CIControl4* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyObject** value);
    HRESULT (STDMETHODCALLTYPE* put_XYFocusDown)(__x_ABI_CWindows_CUI_CXaml_CControls_CIControl4* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyObject* value);
    HRESULT (STDMETHODCALLTYPE* get_ElementSoundMode)(__x_ABI_CWindows_CUI_CXaml_CControls_CIControl4* This,
        enum __x_ABI_CWindows_CUI_CXaml_CElementSoundMode* value);
    HRESULT (STDMETHODCALLTYPE* put_ElementSoundMode)(__x_ABI_CWindows_CUI_CXaml_CControls_CIControl4* This,
        enum __x_ABI_CWindows_CUI_CXaml_CElementSoundMode value);
    HRESULT (STDMETHODCALLTYPE* add_FocusEngaged)(__x_ABI_CWindows_CUI_CXaml_CControls_CIControl4* This,
        __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CControl___x_ABI_CWindows__CUI__CXaml__CControls__CFocusEngagedEventArgs* handler,
        EventRegistrationToken* token);
    HRESULT (STDMETHODCALLTYPE* remove_FocusEngaged)(__x_ABI_CWindows_CUI_CXaml_CControls_CIControl4* This,
        EventRegistrationToken token);
    HRESULT (STDMETHODCALLTYPE* add_FocusDisengaged)(__x_ABI_CWindows_CUI_CXaml_CControls_CIControl4* This,
        __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CControl___x_ABI_CWindows__CUI__CXaml__CControls__CFocusDisengagedEventArgs* handler,
        EventRegistrationToken* token);
    HRESULT (STDMETHODCALLTYPE* remove_FocusDisengaged)(__x_ABI_CWindows_CUI_CXaml_CControls_CIControl4* This,
        EventRegistrationToken token);
    HRESULT (STDMETHODCALLTYPE* RemoveFocusEngagement)(__x_ABI_CWindows_CUI_CXaml_CControls_CIControl4* This);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CIControl4Vtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CIControl4
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIControl4Vtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIControl4;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIControl4_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIControl5_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CControls_CIControl5_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIControl5Vtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CControls_CIControl5* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CControls_CIControl5* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CControls_CIControl5* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CControls_CIControl5* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CControls_CIControl5* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CControls_CIControl5* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_DefaultStyleResourceUri)(__x_ABI_CWindows_CUI_CXaml_CControls_CIControl5* This,
        __x_ABI_CWindows_CFoundation_CIUriRuntimeClass** value);
    HRESULT (STDMETHODCALLTYPE* put_DefaultStyleResourceUri)(__x_ABI_CWindows_CUI_CXaml_CControls_CIControl5* This,
        __x_ABI_CWindows_CFoundation_CIUriRuntimeClass* value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CIControl5Vtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CIControl5
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIControl5Vtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIControl5;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIControl5_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIControl7_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CControls_CIControl7_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIControl7Vtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CControls_CIControl7* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CControls_CIControl7* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CControls_CIControl7* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CControls_CIControl7* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CControls_CIControl7* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CControls_CIControl7* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_BackgroundSizing)(__x_ABI_CWindows_CUI_CXaml_CControls_CIControl7* This,
        enum __x_ABI_CWindows_CUI_CXaml_CControls_CBackgroundSizing* value);
    HRESULT (STDMETHODCALLTYPE* put_BackgroundSizing)(__x_ABI_CWindows_CUI_CXaml_CControls_CIControl7* This,
        enum __x_ABI_CWindows_CUI_CXaml_CControls_CBackgroundSizing value);
    HRESULT (STDMETHODCALLTYPE* get_CornerRadius)(__x_ABI_CWindows_CUI_CXaml_CControls_CIControl7* This,
        struct __x_ABI_CWindows_CUI_CXaml_CCornerRadius* value);
    HRESULT (STDMETHODCALLTYPE* put_CornerRadius)(__x_ABI_CWindows_CUI_CXaml_CControls_CIControl7* This,
        struct __x_ABI_CWindows_CUI_CXaml_CCornerRadius value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CIControl7Vtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CIControl7
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIControl7Vtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIControl7;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIControl7_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIControlFactory_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CControls_CIControlFactory_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIControlFactoryVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CControls_CIControlFactory* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CControls_CIControlFactory* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CControls_CIControlFactory* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CControls_CIControlFactory* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CControls_CIControlFactory* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CControls_CIControlFactory* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* CreateInstance)(__x_ABI_CWindows_CUI_CXaml_CControls_CIControlFactory* This,
        IInspectable* baseInterface,
        IInspectable** innerInterface,
        __x_ABI_CWindows_CUI_CXaml_CControls_CIControl** value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CIControlFactoryVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CIControlFactory
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIControlFactoryVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIControlFactory;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIControlFactory_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIControlOverrides_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CControls_CIControlOverrides_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIControlOverridesVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CControls_CIControlOverrides* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CControls_CIControlOverrides* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CControls_CIControlOverrides* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CControls_CIControlOverrides* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CControls_CIControlOverrides* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CControls_CIControlOverrides* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* OnPointerEntered)(__x_ABI_CWindows_CUI_CXaml_CControls_CIControlOverrides* This,
        __x_ABI_CWindows_CUI_CXaml_CInput_CIPointerRoutedEventArgs* e);
    HRESULT (STDMETHODCALLTYPE* OnPointerPressed)(__x_ABI_CWindows_CUI_CXaml_CControls_CIControlOverrides* This,
        __x_ABI_CWindows_CUI_CXaml_CInput_CIPointerRoutedEventArgs* e);
    HRESULT (STDMETHODCALLTYPE* OnPointerMoved)(__x_ABI_CWindows_CUI_CXaml_CControls_CIControlOverrides* This,
        __x_ABI_CWindows_CUI_CXaml_CInput_CIPointerRoutedEventArgs* e);
    HRESULT (STDMETHODCALLTYPE* OnPointerReleased)(__x_ABI_CWindows_CUI_CXaml_CControls_CIControlOverrides* This,
        __x_ABI_CWindows_CUI_CXaml_CInput_CIPointerRoutedEventArgs* e);
    HRESULT (STDMETHODCALLTYPE* OnPointerExited)(__x_ABI_CWindows_CUI_CXaml_CControls_CIControlOverrides* This,
        __x_ABI_CWindows_CUI_CXaml_CInput_CIPointerRoutedEventArgs* e);
    HRESULT (STDMETHODCALLTYPE* OnPointerCaptureLost)(__x_ABI_CWindows_CUI_CXaml_CControls_CIControlOverrides* This,
        __x_ABI_CWindows_CUI_CXaml_CInput_CIPointerRoutedEventArgs* e);
    HRESULT (STDMETHODCALLTYPE* OnPointerCanceled)(__x_ABI_CWindows_CUI_CXaml_CControls_CIControlOverrides* This,
        __x_ABI_CWindows_CUI_CXaml_CInput_CIPointerRoutedEventArgs* e);
    HRESULT (STDMETHODCALLTYPE* OnPointerWheelChanged)(__x_ABI_CWindows_CUI_CXaml_CControls_CIControlOverrides* This,
        __x_ABI_CWindows_CUI_CXaml_CInput_CIPointerRoutedEventArgs* e);
    HRESULT (STDMETHODCALLTYPE* OnTapped)(__x_ABI_CWindows_CUI_CXaml_CControls_CIControlOverrides* This,
        __x_ABI_CWindows_CUI_CXaml_CInput_CITappedRoutedEventArgs* e);
    HRESULT (STDMETHODCALLTYPE* OnDoubleTapped)(__x_ABI_CWindows_CUI_CXaml_CControls_CIControlOverrides* This,
        __x_ABI_CWindows_CUI_CXaml_CInput_CIDoubleTappedRoutedEventArgs* e);
    HRESULT (STDMETHODCALLTYPE* OnHolding)(__x_ABI_CWindows_CUI_CXaml_CControls_CIControlOverrides* This,
        __x_ABI_CWindows_CUI_CXaml_CInput_CIHoldingRoutedEventArgs* e);
    HRESULT (STDMETHODCALLTYPE* OnRightTapped)(__x_ABI_CWindows_CUI_CXaml_CControls_CIControlOverrides* This,
        __x_ABI_CWindows_CUI_CXaml_CInput_CIRightTappedRoutedEventArgs* e);
    HRESULT (STDMETHODCALLTYPE* OnManipulationStarting)(__x_ABI_CWindows_CUI_CXaml_CControls_CIControlOverrides* This,
        __x_ABI_CWindows_CUI_CXaml_CInput_CIManipulationStartingRoutedEventArgs* e);
    HRESULT (STDMETHODCALLTYPE* OnManipulationInertiaStarting)(__x_ABI_CWindows_CUI_CXaml_CControls_CIControlOverrides* This,
        __x_ABI_CWindows_CUI_CXaml_CInput_CIManipulationInertiaStartingRoutedEventArgs* e);
    HRESULT (STDMETHODCALLTYPE* OnManipulationStarted)(__x_ABI_CWindows_CUI_CXaml_CControls_CIControlOverrides* This,
        __x_ABI_CWindows_CUI_CXaml_CInput_CIManipulationStartedRoutedEventArgs* e);
    HRESULT (STDMETHODCALLTYPE* OnManipulationDelta)(__x_ABI_CWindows_CUI_CXaml_CControls_CIControlOverrides* This,
        __x_ABI_CWindows_CUI_CXaml_CInput_CIManipulationDeltaRoutedEventArgs* e);
    HRESULT (STDMETHODCALLTYPE* OnManipulationCompleted)(__x_ABI_CWindows_CUI_CXaml_CControls_CIControlOverrides* This,
        __x_ABI_CWindows_CUI_CXaml_CInput_CIManipulationCompletedRoutedEventArgs* e);
    HRESULT (STDMETHODCALLTYPE* OnKeyUp)(__x_ABI_CWindows_CUI_CXaml_CControls_CIControlOverrides* This,
        __x_ABI_CWindows_CUI_CXaml_CInput_CIKeyRoutedEventArgs* e);
    HRESULT (STDMETHODCALLTYPE* OnKeyDown)(__x_ABI_CWindows_CUI_CXaml_CControls_CIControlOverrides* This,
        __x_ABI_CWindows_CUI_CXaml_CInput_CIKeyRoutedEventArgs* e);
    HRESULT (STDMETHODCALLTYPE* OnGotFocus)(__x_ABI_CWindows_CUI_CXaml_CControls_CIControlOverrides* This,
        __x_ABI_CWindows_CUI_CXaml_CIRoutedEventArgs* e);
    HRESULT (STDMETHODCALLTYPE* OnLostFocus)(__x_ABI_CWindows_CUI_CXaml_CControls_CIControlOverrides* This,
        __x_ABI_CWindows_CUI_CXaml_CIRoutedEventArgs* e);
    HRESULT (STDMETHODCALLTYPE* OnDragEnter)(__x_ABI_CWindows_CUI_CXaml_CControls_CIControlOverrides* This,
        __x_ABI_CWindows_CUI_CXaml_CIDragEventArgs* e);
    HRESULT (STDMETHODCALLTYPE* OnDragLeave)(__x_ABI_CWindows_CUI_CXaml_CControls_CIControlOverrides* This,
        __x_ABI_CWindows_CUI_CXaml_CIDragEventArgs* e);
    HRESULT (STDMETHODCALLTYPE* OnDragOver)(__x_ABI_CWindows_CUI_CXaml_CControls_CIControlOverrides* This,
        __x_ABI_CWindows_CUI_CXaml_CIDragEventArgs* e);
    HRESULT (STDMETHODCALLTYPE* OnDrop)(__x_ABI_CWindows_CUI_CXaml_CControls_CIControlOverrides* This,
        __x_ABI_CWindows_CUI_CXaml_CIDragEventArgs* e);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CIControlOverridesVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CIControlOverrides
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIControlOverridesVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIControlOverrides;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIControlOverrides_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIControlOverrides6_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CControls_CIControlOverrides6_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIControlOverrides6Vtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CControls_CIControlOverrides6* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CControls_CIControlOverrides6* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CControls_CIControlOverrides6* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CControls_CIControlOverrides6* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CControls_CIControlOverrides6* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CControls_CIControlOverrides6* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* OnPreviewKeyDown)(__x_ABI_CWindows_CUI_CXaml_CControls_CIControlOverrides6* This,
        __x_ABI_CWindows_CUI_CXaml_CInput_CIKeyRoutedEventArgs* e);
    HRESULT (STDMETHODCALLTYPE* OnPreviewKeyUp)(__x_ABI_CWindows_CUI_CXaml_CControls_CIControlOverrides6* This,
        __x_ABI_CWindows_CUI_CXaml_CInput_CIKeyRoutedEventArgs* e);
    HRESULT (STDMETHODCALLTYPE* OnCharacterReceived)(__x_ABI_CWindows_CUI_CXaml_CControls_CIControlOverrides6* This,
        __x_ABI_CWindows_CUI_CXaml_CInput_CICharacterReceivedRoutedEventArgs* e);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CIControlOverrides6Vtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CIControlOverrides6
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIControlOverrides6Vtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIControlOverrides6;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIControlOverrides6_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIControlProtected_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CControls_CIControlProtected_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIControlProtectedVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CControls_CIControlProtected* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CControls_CIControlProtected* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CControls_CIControlProtected* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CControls_CIControlProtected* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CControls_CIControlProtected* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CControls_CIControlProtected* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_DefaultStyleKey)(__x_ABI_CWindows_CUI_CXaml_CControls_CIControlProtected* This,
        IInspectable** value);
    HRESULT (STDMETHODCALLTYPE* put_DefaultStyleKey)(__x_ABI_CWindows_CUI_CXaml_CControls_CIControlProtected* This,
        IInspectable* value);
    HRESULT (STDMETHODCALLTYPE* GetTemplateChild)(__x_ABI_CWindows_CUI_CXaml_CControls_CIControlProtected* This,
        HSTRING childName,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyObject** result);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CIControlProtectedVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CIControlProtected
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIControlProtectedVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIControlProtected;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIControlProtected_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIControlStatics_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CControls_CIControlStatics_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIControlStaticsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CControls_CIControlStatics* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CControls_CIControlStatics* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CControls_CIControlStatics* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CControls_CIControlStatics* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CControls_CIControlStatics* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CControls_CIControlStatics* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_FontSizeProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CIControlStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_FontFamilyProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CIControlStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_FontWeightProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CIControlStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_FontStyleProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CIControlStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_FontStretchProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CIControlStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_CharacterSpacingProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CIControlStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_ForegroundProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CIControlStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_IsTabStopProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CIControlStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_IsEnabledProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CIControlStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_TabIndexProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CIControlStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_TabNavigationProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CIControlStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_TemplateProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CIControlStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_PaddingProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CIControlStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_HorizontalContentAlignmentProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CIControlStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_VerticalContentAlignmentProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CIControlStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_BackgroundProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CIControlStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_BorderThicknessProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CIControlStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_BorderBrushProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CIControlStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_DefaultStyleKeyProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CIControlStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_FocusStateProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CIControlStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CIControlStaticsVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CIControlStatics
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIControlStaticsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIControlStatics;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIControlStatics_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIControlStatics2_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CControls_CIControlStatics2_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIControlStatics2Vtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CControls_CIControlStatics2* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CControls_CIControlStatics2* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CControls_CIControlStatics2* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CControls_CIControlStatics2* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CControls_CIControlStatics2* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CControls_CIControlStatics2* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_IsTextScaleFactorEnabledProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CIControlStatics2* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CIControlStatics2Vtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CIControlStatics2
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIControlStatics2Vtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIControlStatics2;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIControlStatics2_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIControlStatics3_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CControls_CIControlStatics3_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIControlStatics3Vtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CControls_CIControlStatics3* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CControls_CIControlStatics3* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CControls_CIControlStatics3* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CControls_CIControlStatics3* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CControls_CIControlStatics3* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CControls_CIControlStatics3* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_UseSystemFocusVisualsProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CIControlStatics3* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_IsTemplateFocusTargetProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CIControlStatics3* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* GetIsTemplateFocusTarget)(__x_ABI_CWindows_CUI_CXaml_CControls_CIControlStatics3* This,
        __x_ABI_CWindows_CUI_CXaml_CIFrameworkElement* element,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* SetIsTemplateFocusTarget)(__x_ABI_CWindows_CUI_CXaml_CControls_CIControlStatics3* This,
        __x_ABI_CWindows_CUI_CXaml_CIFrameworkElement* element,
        boolean value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CIControlStatics3Vtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CIControlStatics3
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIControlStatics3Vtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIControlStatics3;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIControlStatics3_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIControlStatics4_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CControls_CIControlStatics4_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIControlStatics4Vtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CControls_CIControlStatics4* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CControls_CIControlStatics4* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CControls_CIControlStatics4* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CControls_CIControlStatics4* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CControls_CIControlStatics4* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CControls_CIControlStatics4* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_IsFocusEngagementEnabledProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CIControlStatics4* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_IsFocusEngagedProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CIControlStatics4* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_RequiresPointerProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CIControlStatics4* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_XYFocusLeftProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CIControlStatics4* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_XYFocusRightProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CIControlStatics4* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_XYFocusUpProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CIControlStatics4* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_XYFocusDownProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CIControlStatics4* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_ElementSoundModeProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CIControlStatics4* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CIControlStatics4Vtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CIControlStatics4
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIControlStatics4Vtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIControlStatics4;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIControlStatics4_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIControlStatics5_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CControls_CIControlStatics5_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIControlStatics5Vtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CControls_CIControlStatics5* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CControls_CIControlStatics5* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CControls_CIControlStatics5* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CControls_CIControlStatics5* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CControls_CIControlStatics5* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CControls_CIControlStatics5* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_DefaultStyleResourceUriProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CIControlStatics5* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_IsTemplateKeyTipTargetProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CIControlStatics5* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* GetIsTemplateKeyTipTarget)(__x_ABI_CWindows_CUI_CXaml_CControls_CIControlStatics5* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyObject* element,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* SetIsTemplateKeyTipTarget)(__x_ABI_CWindows_CUI_CXaml_CControls_CIControlStatics5* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyObject* element,
        boolean value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CIControlStatics5Vtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CIControlStatics5
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIControlStatics5Vtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIControlStatics5;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIControlStatics5_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIControlStatics7_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CControls_CIControlStatics7_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIControlStatics7Vtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CControls_CIControlStatics7* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CControls_CIControlStatics7* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CControls_CIControlStatics7* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CControls_CIControlStatics7* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CControls_CIControlStatics7* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CControls_CIControlStatics7* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_BackgroundSizingProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CIControlStatics7* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_CornerRadiusProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CIControlStatics7* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CIControlStatics7Vtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CIControlStatics7
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIControlStatics7Vtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIControlStatics7;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIControlStatics7_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIControlTemplate_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CControls_CIControlTemplate_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIControlTemplateVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CControls_CIControlTemplate* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CControls_CIControlTemplate* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CControls_CIControlTemplate* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CControls_CIControlTemplate* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CControls_CIControlTemplate* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CControls_CIControlTemplate* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_TargetType)(__x_ABI_CWindows_CUI_CXaml_CControls_CIControlTemplate* This,
        struct __x_ABI_CWindows_CUI_CXaml_CInterop_CTypeName* value);
    HRESULT (STDMETHODCALLTYPE* put_TargetType)(__x_ABI_CWindows_CUI_CXaml_CControls_CIControlTemplate* This,
        struct __x_ABI_CWindows_CUI_CXaml_CInterop_CTypeName value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CIControlTemplateVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CIControlTemplate
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIControlTemplateVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIControlTemplate;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIControlTemplate_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIDataTemplateSelector_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CControls_CIDataTemplateSelector_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIDataTemplateSelectorVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CControls_CIDataTemplateSelector* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CControls_CIDataTemplateSelector* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CControls_CIDataTemplateSelector* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CControls_CIDataTemplateSelector* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CControls_CIDataTemplateSelector* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CControls_CIDataTemplateSelector* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* SelectTemplate)(__x_ABI_CWindows_CUI_CXaml_CControls_CIDataTemplateSelector* This,
        IInspectable* item,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyObject* container,
        __x_ABI_CWindows_CUI_CXaml_CIDataTemplate** result);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CIDataTemplateSelectorVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CIDataTemplateSelector
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIDataTemplateSelectorVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIDataTemplateSelector;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIDataTemplateSelector_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIDataTemplateSelector2_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CControls_CIDataTemplateSelector2_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIDataTemplateSelector2Vtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CControls_CIDataTemplateSelector2* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CControls_CIDataTemplateSelector2* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CControls_CIDataTemplateSelector2* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CControls_CIDataTemplateSelector2* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CControls_CIDataTemplateSelector2* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CControls_CIDataTemplateSelector2* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* SelectTemplateForItem)(__x_ABI_CWindows_CUI_CXaml_CControls_CIDataTemplateSelector2* This,
        IInspectable* item,
        __x_ABI_CWindows_CUI_CXaml_CIDataTemplate** result);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CIDataTemplateSelector2Vtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CIDataTemplateSelector2
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIDataTemplateSelector2Vtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIDataTemplateSelector2;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIDataTemplateSelector2_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIDataTemplateSelectorFactory_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CControls_CIDataTemplateSelectorFactory_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIDataTemplateSelectorFactoryVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CControls_CIDataTemplateSelectorFactory* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CControls_CIDataTemplateSelectorFactory* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CControls_CIDataTemplateSelectorFactory* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CControls_CIDataTemplateSelectorFactory* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CControls_CIDataTemplateSelectorFactory* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CControls_CIDataTemplateSelectorFactory* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* CreateInstance)(__x_ABI_CWindows_CUI_CXaml_CControls_CIDataTemplateSelectorFactory* This,
        IInspectable* baseInterface,
        IInspectable** innerInterface,
        __x_ABI_CWindows_CUI_CXaml_CControls_CIDataTemplateSelector** value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CIDataTemplateSelectorFactoryVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CIDataTemplateSelectorFactory
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIDataTemplateSelectorFactoryVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIDataTemplateSelectorFactory;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIDataTemplateSelectorFactory_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIDataTemplateSelectorOverrides_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CControls_CIDataTemplateSelectorOverrides_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIDataTemplateSelectorOverridesVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CControls_CIDataTemplateSelectorOverrides* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CControls_CIDataTemplateSelectorOverrides* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CControls_CIDataTemplateSelectorOverrides* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CControls_CIDataTemplateSelectorOverrides* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CControls_CIDataTemplateSelectorOverrides* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CControls_CIDataTemplateSelectorOverrides* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* SelectTemplateCore)(__x_ABI_CWindows_CUI_CXaml_CControls_CIDataTemplateSelectorOverrides* This,
        IInspectable* item,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyObject* container,
        __x_ABI_CWindows_CUI_CXaml_CIDataTemplate** result);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CIDataTemplateSelectorOverridesVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CIDataTemplateSelectorOverrides
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIDataTemplateSelectorOverridesVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIDataTemplateSelectorOverrides;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIDataTemplateSelectorOverrides_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIDataTemplateSelectorOverrides2_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CControls_CIDataTemplateSelectorOverrides2_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIDataTemplateSelectorOverrides2Vtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CControls_CIDataTemplateSelectorOverrides2* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CControls_CIDataTemplateSelectorOverrides2* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CControls_CIDataTemplateSelectorOverrides2* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CControls_CIDataTemplateSelectorOverrides2* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CControls_CIDataTemplateSelectorOverrides2* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CControls_CIDataTemplateSelectorOverrides2* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* SelectTemplateForItemCore)(__x_ABI_CWindows_CUI_CXaml_CControls_CIDataTemplateSelectorOverrides2* This,
        IInspectable* item,
        __x_ABI_CWindows_CUI_CXaml_CIDataTemplate** result);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CIDataTemplateSelectorOverrides2Vtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CIDataTemplateSelectorOverrides2
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIDataTemplateSelectorOverrides2Vtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIDataTemplateSelectorOverrides2;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIDataTemplateSelectorOverrides2_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIDatePickedEventArgs_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CControls_CIDatePickedEventArgs_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIDatePickedEventArgsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CControls_CIDatePickedEventArgs* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CControls_CIDatePickedEventArgs* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CControls_CIDatePickedEventArgs* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CControls_CIDatePickedEventArgs* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CControls_CIDatePickedEventArgs* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CControls_CIDatePickedEventArgs* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_OldDate)(__x_ABI_CWindows_CUI_CXaml_CControls_CIDatePickedEventArgs* This,
        struct __x_ABI_CWindows_CFoundation_CDateTime* value);
    HRESULT (STDMETHODCALLTYPE* get_NewDate)(__x_ABI_CWindows_CUI_CXaml_CControls_CIDatePickedEventArgs* This,
        struct __x_ABI_CWindows_CFoundation_CDateTime* value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CIDatePickedEventArgsVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CIDatePickedEventArgs
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIDatePickedEventArgsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIDatePickedEventArgs;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIDatePickedEventArgs_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIDatePicker_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CControls_CIDatePicker_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIDatePickerVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CControls_CIDatePicker* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CControls_CIDatePicker* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CControls_CIDatePicker* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CControls_CIDatePicker* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CControls_CIDatePicker* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CControls_CIDatePicker* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Header)(__x_ABI_CWindows_CUI_CXaml_CControls_CIDatePicker* This,
        IInspectable** value);
    HRESULT (STDMETHODCALLTYPE* put_Header)(__x_ABI_CWindows_CUI_CXaml_CControls_CIDatePicker* This,
        IInspectable* value);
    HRESULT (STDMETHODCALLTYPE* get_HeaderTemplate)(__x_ABI_CWindows_CUI_CXaml_CControls_CIDatePicker* This,
        __x_ABI_CWindows_CUI_CXaml_CIDataTemplate** value);
    HRESULT (STDMETHODCALLTYPE* put_HeaderTemplate)(__x_ABI_CWindows_CUI_CXaml_CControls_CIDatePicker* This,
        __x_ABI_CWindows_CUI_CXaml_CIDataTemplate* value);
    HRESULT (STDMETHODCALLTYPE* get_CalendarIdentifier)(__x_ABI_CWindows_CUI_CXaml_CControls_CIDatePicker* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* put_CalendarIdentifier)(__x_ABI_CWindows_CUI_CXaml_CControls_CIDatePicker* This,
        HSTRING value);
    HRESULT (STDMETHODCALLTYPE* get_Date)(__x_ABI_CWindows_CUI_CXaml_CControls_CIDatePicker* This,
        struct __x_ABI_CWindows_CFoundation_CDateTime* value);
    HRESULT (STDMETHODCALLTYPE* put_Date)(__x_ABI_CWindows_CUI_CXaml_CControls_CIDatePicker* This,
        struct __x_ABI_CWindows_CFoundation_CDateTime value);
    HRESULT (STDMETHODCALLTYPE* get_DayVisible)(__x_ABI_CWindows_CUI_CXaml_CControls_CIDatePicker* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* put_DayVisible)(__x_ABI_CWindows_CUI_CXaml_CControls_CIDatePicker* This,
        boolean value);
    HRESULT (STDMETHODCALLTYPE* get_MonthVisible)(__x_ABI_CWindows_CUI_CXaml_CControls_CIDatePicker* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* put_MonthVisible)(__x_ABI_CWindows_CUI_CXaml_CControls_CIDatePicker* This,
        boolean value);
    HRESULT (STDMETHODCALLTYPE* get_YearVisible)(__x_ABI_CWindows_CUI_CXaml_CControls_CIDatePicker* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* put_YearVisible)(__x_ABI_CWindows_CUI_CXaml_CControls_CIDatePicker* This,
        boolean value);
    HRESULT (STDMETHODCALLTYPE* get_DayFormat)(__x_ABI_CWindows_CUI_CXaml_CControls_CIDatePicker* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* put_DayFormat)(__x_ABI_CWindows_CUI_CXaml_CControls_CIDatePicker* This,
        HSTRING value);
    HRESULT (STDMETHODCALLTYPE* get_MonthFormat)(__x_ABI_CWindows_CUI_CXaml_CControls_CIDatePicker* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* put_MonthFormat)(__x_ABI_CWindows_CUI_CXaml_CControls_CIDatePicker* This,
        HSTRING value);
    HRESULT (STDMETHODCALLTYPE* get_YearFormat)(__x_ABI_CWindows_CUI_CXaml_CControls_CIDatePicker* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* put_YearFormat)(__x_ABI_CWindows_CUI_CXaml_CControls_CIDatePicker* This,
        HSTRING value);
    HRESULT (STDMETHODCALLTYPE* get_MinYear)(__x_ABI_CWindows_CUI_CXaml_CControls_CIDatePicker* This,
        struct __x_ABI_CWindows_CFoundation_CDateTime* value);
    HRESULT (STDMETHODCALLTYPE* put_MinYear)(__x_ABI_CWindows_CUI_CXaml_CControls_CIDatePicker* This,
        struct __x_ABI_CWindows_CFoundation_CDateTime value);
    HRESULT (STDMETHODCALLTYPE* get_MaxYear)(__x_ABI_CWindows_CUI_CXaml_CControls_CIDatePicker* This,
        struct __x_ABI_CWindows_CFoundation_CDateTime* value);
    HRESULT (STDMETHODCALLTYPE* put_MaxYear)(__x_ABI_CWindows_CUI_CXaml_CControls_CIDatePicker* This,
        struct __x_ABI_CWindows_CFoundation_CDateTime value);
    HRESULT (STDMETHODCALLTYPE* get_Orientation)(__x_ABI_CWindows_CUI_CXaml_CControls_CIDatePicker* This,
        enum __x_ABI_CWindows_CUI_CXaml_CControls_COrientation* value);
    HRESULT (STDMETHODCALLTYPE* put_Orientation)(__x_ABI_CWindows_CUI_CXaml_CControls_CIDatePicker* This,
        enum __x_ABI_CWindows_CUI_CXaml_CControls_COrientation value);
    HRESULT (STDMETHODCALLTYPE* add_DateChanged)(__x_ABI_CWindows_CUI_CXaml_CControls_CIDatePicker* This,
        __x_ABI_C__FIEventHandler_1___x_ABI_CWindows__CUI__CXaml__CControls__CDatePickerValueChangedEventArgs* handler,
        EventRegistrationToken* token);
    HRESULT (STDMETHODCALLTYPE* remove_DateChanged)(__x_ABI_CWindows_CUI_CXaml_CControls_CIDatePicker* This,
        EventRegistrationToken token);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CIDatePickerVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CIDatePicker
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIDatePickerVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIDatePicker;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIDatePicker_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIDatePicker2_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CControls_CIDatePicker2_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIDatePicker2Vtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CControls_CIDatePicker2* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CControls_CIDatePicker2* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CControls_CIDatePicker2* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CControls_CIDatePicker2* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CControls_CIDatePicker2* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CControls_CIDatePicker2* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_LightDismissOverlayMode)(__x_ABI_CWindows_CUI_CXaml_CControls_CIDatePicker2* This,
        enum __x_ABI_CWindows_CUI_CXaml_CControls_CLightDismissOverlayMode* value);
    HRESULT (STDMETHODCALLTYPE* put_LightDismissOverlayMode)(__x_ABI_CWindows_CUI_CXaml_CControls_CIDatePicker2* This,
        enum __x_ABI_CWindows_CUI_CXaml_CControls_CLightDismissOverlayMode value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CIDatePicker2Vtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CIDatePicker2
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIDatePicker2Vtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIDatePicker2;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIDatePicker2_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIDatePicker3_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CControls_CIDatePicker3_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIDatePicker3Vtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CControls_CIDatePicker3* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CControls_CIDatePicker3* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CControls_CIDatePicker3* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CControls_CIDatePicker3* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CControls_CIDatePicker3* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CControls_CIDatePicker3* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_SelectedDate)(__x_ABI_CWindows_CUI_CXaml_CControls_CIDatePicker3* This,
        __x_ABI_C__FIReference_1___x_ABI_CWindows__CFoundation__CDateTime** value);
    HRESULT (STDMETHODCALLTYPE* put_SelectedDate)(__x_ABI_CWindows_CUI_CXaml_CControls_CIDatePicker3* This,
        __x_ABI_C__FIReference_1___x_ABI_CWindows__CFoundation__CDateTime* value);
    HRESULT (STDMETHODCALLTYPE* add_SelectedDateChanged)(__x_ABI_CWindows_CUI_CXaml_CControls_CIDatePicker3* This,
        __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CDatePicker___x_ABI_CWindows__CUI__CXaml__CControls__CDatePickerSelectedValueChangedEventArgs* handler,
        EventRegistrationToken* token);
    HRESULT (STDMETHODCALLTYPE* remove_SelectedDateChanged)(__x_ABI_CWindows_CUI_CXaml_CControls_CIDatePicker3* This,
        EventRegistrationToken token);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CIDatePicker3Vtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CIDatePicker3
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIDatePicker3Vtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIDatePicker3;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIDatePicker3_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIDatePickerFactory_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CControls_CIDatePickerFactory_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIDatePickerFactoryVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CControls_CIDatePickerFactory* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CControls_CIDatePickerFactory* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CControls_CIDatePickerFactory* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CControls_CIDatePickerFactory* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CControls_CIDatePickerFactory* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CControls_CIDatePickerFactory* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* CreateInstance)(__x_ABI_CWindows_CUI_CXaml_CControls_CIDatePickerFactory* This,
        IInspectable* baseInterface,
        IInspectable** innerInterface,
        __x_ABI_CWindows_CUI_CXaml_CControls_CIDatePicker** value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CIDatePickerFactoryVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CIDatePickerFactory
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIDatePickerFactoryVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIDatePickerFactory;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIDatePickerFactory_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIDatePickerFlyout_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CControls_CIDatePickerFlyout_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIDatePickerFlyoutVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CControls_CIDatePickerFlyout* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CControls_CIDatePickerFlyout* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CControls_CIDatePickerFlyout* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CControls_CIDatePickerFlyout* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CControls_CIDatePickerFlyout* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CControls_CIDatePickerFlyout* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_CalendarIdentifier)(__x_ABI_CWindows_CUI_CXaml_CControls_CIDatePickerFlyout* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* put_CalendarIdentifier)(__x_ABI_CWindows_CUI_CXaml_CControls_CIDatePickerFlyout* This,
        HSTRING value);
    HRESULT (STDMETHODCALLTYPE* get_Date)(__x_ABI_CWindows_CUI_CXaml_CControls_CIDatePickerFlyout* This,
        struct __x_ABI_CWindows_CFoundation_CDateTime* value);
    HRESULT (STDMETHODCALLTYPE* put_Date)(__x_ABI_CWindows_CUI_CXaml_CControls_CIDatePickerFlyout* This,
        struct __x_ABI_CWindows_CFoundation_CDateTime value);
    HRESULT (STDMETHODCALLTYPE* get_DayVisible)(__x_ABI_CWindows_CUI_CXaml_CControls_CIDatePickerFlyout* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* put_DayVisible)(__x_ABI_CWindows_CUI_CXaml_CControls_CIDatePickerFlyout* This,
        boolean value);
    HRESULT (STDMETHODCALLTYPE* get_MonthVisible)(__x_ABI_CWindows_CUI_CXaml_CControls_CIDatePickerFlyout* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* put_MonthVisible)(__x_ABI_CWindows_CUI_CXaml_CControls_CIDatePickerFlyout* This,
        boolean value);
    HRESULT (STDMETHODCALLTYPE* get_YearVisible)(__x_ABI_CWindows_CUI_CXaml_CControls_CIDatePickerFlyout* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* put_YearVisible)(__x_ABI_CWindows_CUI_CXaml_CControls_CIDatePickerFlyout* This,
        boolean value);
    HRESULT (STDMETHODCALLTYPE* get_MinYear)(__x_ABI_CWindows_CUI_CXaml_CControls_CIDatePickerFlyout* This,
        struct __x_ABI_CWindows_CFoundation_CDateTime* value);
    HRESULT (STDMETHODCALLTYPE* put_MinYear)(__x_ABI_CWindows_CUI_CXaml_CControls_CIDatePickerFlyout* This,
        struct __x_ABI_CWindows_CFoundation_CDateTime value);
    HRESULT (STDMETHODCALLTYPE* get_MaxYear)(__x_ABI_CWindows_CUI_CXaml_CControls_CIDatePickerFlyout* This,
        struct __x_ABI_CWindows_CFoundation_CDateTime* value);
    HRESULT (STDMETHODCALLTYPE* put_MaxYear)(__x_ABI_CWindows_CUI_CXaml_CControls_CIDatePickerFlyout* This,
        struct __x_ABI_CWindows_CFoundation_CDateTime value);
    HRESULT (STDMETHODCALLTYPE* add_DatePicked)(__x_ABI_CWindows_CUI_CXaml_CControls_CIDatePickerFlyout* This,
        __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CDatePickerFlyout___x_ABI_CWindows__CUI__CXaml__CControls__CDatePickedEventArgs* handler,
        EventRegistrationToken* token);
    HRESULT (STDMETHODCALLTYPE* remove_DatePicked)(__x_ABI_CWindows_CUI_CXaml_CControls_CIDatePickerFlyout* This,
        EventRegistrationToken token);
    HRESULT (STDMETHODCALLTYPE* ShowAtAsync)(__x_ABI_CWindows_CUI_CXaml_CControls_CIDatePickerFlyout* This,
        __x_ABI_CWindows_CUI_CXaml_CIFrameworkElement* target,
        __x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIReference_1___x_ABI_CWindows__CFoundation__CDateTime** operation);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CIDatePickerFlyoutVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CIDatePickerFlyout
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIDatePickerFlyoutVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIDatePickerFlyout;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIDatePickerFlyout_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIDatePickerFlyout2_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CControls_CIDatePickerFlyout2_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIDatePickerFlyout2Vtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CControls_CIDatePickerFlyout2* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CControls_CIDatePickerFlyout2* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CControls_CIDatePickerFlyout2* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CControls_CIDatePickerFlyout2* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CControls_CIDatePickerFlyout2* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CControls_CIDatePickerFlyout2* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_DayFormat)(__x_ABI_CWindows_CUI_CXaml_CControls_CIDatePickerFlyout2* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* put_DayFormat)(__x_ABI_CWindows_CUI_CXaml_CControls_CIDatePickerFlyout2* This,
        HSTRING value);
    HRESULT (STDMETHODCALLTYPE* get_MonthFormat)(__x_ABI_CWindows_CUI_CXaml_CControls_CIDatePickerFlyout2* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* put_MonthFormat)(__x_ABI_CWindows_CUI_CXaml_CControls_CIDatePickerFlyout2* This,
        HSTRING value);
    HRESULT (STDMETHODCALLTYPE* get_YearFormat)(__x_ABI_CWindows_CUI_CXaml_CControls_CIDatePickerFlyout2* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* put_YearFormat)(__x_ABI_CWindows_CUI_CXaml_CControls_CIDatePickerFlyout2* This,
        HSTRING value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CIDatePickerFlyout2Vtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CIDatePickerFlyout2
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIDatePickerFlyout2Vtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIDatePickerFlyout2;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIDatePickerFlyout2_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIDatePickerFlyoutItem_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CControls_CIDatePickerFlyoutItem_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIDatePickerFlyoutItemVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CControls_CIDatePickerFlyoutItem* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CControls_CIDatePickerFlyoutItem* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CControls_CIDatePickerFlyoutItem* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CControls_CIDatePickerFlyoutItem* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CControls_CIDatePickerFlyoutItem* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CControls_CIDatePickerFlyoutItem* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_PrimaryText)(__x_ABI_CWindows_CUI_CXaml_CControls_CIDatePickerFlyoutItem* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* put_PrimaryText)(__x_ABI_CWindows_CUI_CXaml_CControls_CIDatePickerFlyoutItem* This,
        HSTRING value);
    HRESULT (STDMETHODCALLTYPE* get_SecondaryText)(__x_ABI_CWindows_CUI_CXaml_CControls_CIDatePickerFlyoutItem* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* put_SecondaryText)(__x_ABI_CWindows_CUI_CXaml_CControls_CIDatePickerFlyoutItem* This,
        HSTRING value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CIDatePickerFlyoutItemVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CIDatePickerFlyoutItem
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIDatePickerFlyoutItemVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIDatePickerFlyoutItem;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIDatePickerFlyoutItem_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIDatePickerFlyoutItemStatics_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CControls_CIDatePickerFlyoutItemStatics_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIDatePickerFlyoutItemStaticsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CControls_CIDatePickerFlyoutItemStatics* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CControls_CIDatePickerFlyoutItemStatics* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CControls_CIDatePickerFlyoutItemStatics* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CControls_CIDatePickerFlyoutItemStatics* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CControls_CIDatePickerFlyoutItemStatics* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CControls_CIDatePickerFlyoutItemStatics* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_PrimaryTextProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CIDatePickerFlyoutItemStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_SecondaryTextProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CIDatePickerFlyoutItemStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CIDatePickerFlyoutItemStaticsVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CIDatePickerFlyoutItemStatics
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIDatePickerFlyoutItemStaticsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIDatePickerFlyoutItemStatics;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIDatePickerFlyoutItemStatics_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIDatePickerFlyoutPresenter_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CControls_CIDatePickerFlyoutPresenter_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIDatePickerFlyoutPresenterVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CControls_CIDatePickerFlyoutPresenter* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CControls_CIDatePickerFlyoutPresenter* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CControls_CIDatePickerFlyoutPresenter* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CControls_CIDatePickerFlyoutPresenter* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CControls_CIDatePickerFlyoutPresenter* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CControls_CIDatePickerFlyoutPresenter* This,
            TrustLevel* trustLevel);
    
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CIDatePickerFlyoutPresenterVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CIDatePickerFlyoutPresenter
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIDatePickerFlyoutPresenterVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIDatePickerFlyoutPresenter;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIDatePickerFlyoutPresenter_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIDatePickerFlyoutPresenter2_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CControls_CIDatePickerFlyoutPresenter2_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIDatePickerFlyoutPresenter2Vtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CControls_CIDatePickerFlyoutPresenter2* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CControls_CIDatePickerFlyoutPresenter2* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CControls_CIDatePickerFlyoutPresenter2* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CControls_CIDatePickerFlyoutPresenter2* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CControls_CIDatePickerFlyoutPresenter2* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CControls_CIDatePickerFlyoutPresenter2* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_IsDefaultShadowEnabled)(__x_ABI_CWindows_CUI_CXaml_CControls_CIDatePickerFlyoutPresenter2* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* put_IsDefaultShadowEnabled)(__x_ABI_CWindows_CUI_CXaml_CControls_CIDatePickerFlyoutPresenter2* This,
        boolean value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CIDatePickerFlyoutPresenter2Vtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CIDatePickerFlyoutPresenter2
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIDatePickerFlyoutPresenter2Vtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIDatePickerFlyoutPresenter2;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIDatePickerFlyoutPresenter2_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIDatePickerFlyoutPresenterStatics2_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CControls_CIDatePickerFlyoutPresenterStatics2_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIDatePickerFlyoutPresenterStatics2Vtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CControls_CIDatePickerFlyoutPresenterStatics2* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CControls_CIDatePickerFlyoutPresenterStatics2* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CControls_CIDatePickerFlyoutPresenterStatics2* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CControls_CIDatePickerFlyoutPresenterStatics2* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CControls_CIDatePickerFlyoutPresenterStatics2* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CControls_CIDatePickerFlyoutPresenterStatics2* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_IsDefaultShadowEnabledProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CIDatePickerFlyoutPresenterStatics2* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CIDatePickerFlyoutPresenterStatics2Vtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CIDatePickerFlyoutPresenterStatics2
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIDatePickerFlyoutPresenterStatics2Vtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIDatePickerFlyoutPresenterStatics2;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIDatePickerFlyoutPresenterStatics2_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIDatePickerFlyoutStatics_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CControls_CIDatePickerFlyoutStatics_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIDatePickerFlyoutStaticsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CControls_CIDatePickerFlyoutStatics* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CControls_CIDatePickerFlyoutStatics* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CControls_CIDatePickerFlyoutStatics* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CControls_CIDatePickerFlyoutStatics* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CControls_CIDatePickerFlyoutStatics* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CControls_CIDatePickerFlyoutStatics* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_CalendarIdentifierProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CIDatePickerFlyoutStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_DateProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CIDatePickerFlyoutStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_DayVisibleProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CIDatePickerFlyoutStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_MonthVisibleProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CIDatePickerFlyoutStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_YearVisibleProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CIDatePickerFlyoutStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_MinYearProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CIDatePickerFlyoutStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_MaxYearProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CIDatePickerFlyoutStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CIDatePickerFlyoutStaticsVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CIDatePickerFlyoutStatics
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIDatePickerFlyoutStaticsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIDatePickerFlyoutStatics;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIDatePickerFlyoutStatics_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIDatePickerFlyoutStatics2_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CControls_CIDatePickerFlyoutStatics2_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIDatePickerFlyoutStatics2Vtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CControls_CIDatePickerFlyoutStatics2* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CControls_CIDatePickerFlyoutStatics2* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CControls_CIDatePickerFlyoutStatics2* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CControls_CIDatePickerFlyoutStatics2* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CControls_CIDatePickerFlyoutStatics2* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CControls_CIDatePickerFlyoutStatics2* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_DayFormatProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CIDatePickerFlyoutStatics2* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_MonthFormatProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CIDatePickerFlyoutStatics2* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_YearFormatProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CIDatePickerFlyoutStatics2* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CIDatePickerFlyoutStatics2Vtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CIDatePickerFlyoutStatics2
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIDatePickerFlyoutStatics2Vtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIDatePickerFlyoutStatics2;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIDatePickerFlyoutStatics2_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIDatePickerSelectedValueChangedEventArgs_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CControls_CIDatePickerSelectedValueChangedEventArgs_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIDatePickerSelectedValueChangedEventArgsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CControls_CIDatePickerSelectedValueChangedEventArgs* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CControls_CIDatePickerSelectedValueChangedEventArgs* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CControls_CIDatePickerSelectedValueChangedEventArgs* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CControls_CIDatePickerSelectedValueChangedEventArgs* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CControls_CIDatePickerSelectedValueChangedEventArgs* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CControls_CIDatePickerSelectedValueChangedEventArgs* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_OldDate)(__x_ABI_CWindows_CUI_CXaml_CControls_CIDatePickerSelectedValueChangedEventArgs* This,
        __x_ABI_C__FIReference_1___x_ABI_CWindows__CFoundation__CDateTime** value);
    HRESULT (STDMETHODCALLTYPE* get_NewDate)(__x_ABI_CWindows_CUI_CXaml_CControls_CIDatePickerSelectedValueChangedEventArgs* This,
        __x_ABI_C__FIReference_1___x_ABI_CWindows__CFoundation__CDateTime** value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CIDatePickerSelectedValueChangedEventArgsVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CIDatePickerSelectedValueChangedEventArgs
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIDatePickerSelectedValueChangedEventArgsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIDatePickerSelectedValueChangedEventArgs;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIDatePickerSelectedValueChangedEventArgs_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIDatePickerStatics_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CControls_CIDatePickerStatics_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIDatePickerStaticsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CControls_CIDatePickerStatics* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CControls_CIDatePickerStatics* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CControls_CIDatePickerStatics* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CControls_CIDatePickerStatics* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CControls_CIDatePickerStatics* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CControls_CIDatePickerStatics* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_HeaderProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CIDatePickerStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_HeaderTemplateProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CIDatePickerStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_CalendarIdentifierProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CIDatePickerStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_DateProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CIDatePickerStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_DayVisibleProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CIDatePickerStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_MonthVisibleProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CIDatePickerStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_YearVisibleProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CIDatePickerStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_DayFormatProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CIDatePickerStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_MonthFormatProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CIDatePickerStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_YearFormatProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CIDatePickerStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_MinYearProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CIDatePickerStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_MaxYearProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CIDatePickerStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_OrientationProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CIDatePickerStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CIDatePickerStaticsVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CIDatePickerStatics
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIDatePickerStaticsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIDatePickerStatics;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIDatePickerStatics_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIDatePickerStatics2_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CControls_CIDatePickerStatics2_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIDatePickerStatics2Vtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CControls_CIDatePickerStatics2* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CControls_CIDatePickerStatics2* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CControls_CIDatePickerStatics2* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CControls_CIDatePickerStatics2* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CControls_CIDatePickerStatics2* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CControls_CIDatePickerStatics2* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_LightDismissOverlayModeProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CIDatePickerStatics2* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CIDatePickerStatics2Vtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CIDatePickerStatics2
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIDatePickerStatics2Vtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIDatePickerStatics2;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIDatePickerStatics2_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIDatePickerStatics3_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CControls_CIDatePickerStatics3_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIDatePickerStatics3Vtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CControls_CIDatePickerStatics3* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CControls_CIDatePickerStatics3* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CControls_CIDatePickerStatics3* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CControls_CIDatePickerStatics3* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CControls_CIDatePickerStatics3* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CControls_CIDatePickerStatics3* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_SelectedDateProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CIDatePickerStatics3* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CIDatePickerStatics3Vtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CIDatePickerStatics3
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIDatePickerStatics3Vtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIDatePickerStatics3;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIDatePickerStatics3_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIDatePickerValueChangedEventArgs_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CControls_CIDatePickerValueChangedEventArgs_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIDatePickerValueChangedEventArgsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CControls_CIDatePickerValueChangedEventArgs* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CControls_CIDatePickerValueChangedEventArgs* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CControls_CIDatePickerValueChangedEventArgs* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CControls_CIDatePickerValueChangedEventArgs* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CControls_CIDatePickerValueChangedEventArgs* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CControls_CIDatePickerValueChangedEventArgs* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_OldDate)(__x_ABI_CWindows_CUI_CXaml_CControls_CIDatePickerValueChangedEventArgs* This,
        struct __x_ABI_CWindows_CFoundation_CDateTime* value);
    HRESULT (STDMETHODCALLTYPE* get_NewDate)(__x_ABI_CWindows_CUI_CXaml_CControls_CIDatePickerValueChangedEventArgs* This,
        struct __x_ABI_CWindows_CFoundation_CDateTime* value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CIDatePickerValueChangedEventArgsVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CIDatePickerValueChangedEventArgs
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIDatePickerValueChangedEventArgsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIDatePickerValueChangedEventArgs;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIDatePickerValueChangedEventArgs_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIDragItemsCompletedEventArgs_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CControls_CIDragItemsCompletedEventArgs_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIDragItemsCompletedEventArgsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CControls_CIDragItemsCompletedEventArgs* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CControls_CIDragItemsCompletedEventArgs* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CControls_CIDragItemsCompletedEventArgs* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CControls_CIDragItemsCompletedEventArgs* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CControls_CIDragItemsCompletedEventArgs* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CControls_CIDragItemsCompletedEventArgs* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Items)(__x_ABI_CWindows_CUI_CXaml_CControls_CIDragItemsCompletedEventArgs* This,
        __x_ABI_C__FIVectorView_1_IInspectable** value);
    HRESULT (STDMETHODCALLTYPE* get_DropResult)(__x_ABI_CWindows_CUI_CXaml_CControls_CIDragItemsCompletedEventArgs* This,
        enum __x_ABI_CWindows_CApplicationModel_CDataTransfer_CDataPackageOperation* value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CIDragItemsCompletedEventArgsVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CIDragItemsCompletedEventArgs
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIDragItemsCompletedEventArgsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIDragItemsCompletedEventArgs;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIDragItemsCompletedEventArgs_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIDragItemsStartingEventArgs_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CControls_CIDragItemsStartingEventArgs_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIDragItemsStartingEventArgsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CControls_CIDragItemsStartingEventArgs* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CControls_CIDragItemsStartingEventArgs* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CControls_CIDragItemsStartingEventArgs* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CControls_CIDragItemsStartingEventArgs* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CControls_CIDragItemsStartingEventArgs* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CControls_CIDragItemsStartingEventArgs* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Cancel)(__x_ABI_CWindows_CUI_CXaml_CControls_CIDragItemsStartingEventArgs* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* put_Cancel)(__x_ABI_CWindows_CUI_CXaml_CControls_CIDragItemsStartingEventArgs* This,
        boolean value);
    HRESULT (STDMETHODCALLTYPE* get_Items)(__x_ABI_CWindows_CUI_CXaml_CControls_CIDragItemsStartingEventArgs* This,
        __x_ABI_C__FIVector_1_IInspectable** value);
    HRESULT (STDMETHODCALLTYPE* get_Data)(__x_ABI_CWindows_CUI_CXaml_CControls_CIDragItemsStartingEventArgs* This,
        __x_ABI_CWindows_CApplicationModel_CDataTransfer_CIDataPackage** value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CIDragItemsStartingEventArgsVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CIDragItemsStartingEventArgs
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIDragItemsStartingEventArgsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIDragItemsStartingEventArgs;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIDragItemsStartingEventArgs_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIDropDownButton_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CControls_CIDropDownButton_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIDropDownButtonVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CControls_CIDropDownButton* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CControls_CIDropDownButton* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CControls_CIDropDownButton* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CControls_CIDropDownButton* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CControls_CIDropDownButton* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CControls_CIDropDownButton* This,
            TrustLevel* trustLevel);
    
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CIDropDownButtonVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CIDropDownButton
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIDropDownButtonVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIDropDownButton;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIDropDownButton_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIDropDownButtonAutomationPeer_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CControls_CIDropDownButtonAutomationPeer_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIDropDownButtonAutomationPeerVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CControls_CIDropDownButtonAutomationPeer* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CControls_CIDropDownButtonAutomationPeer* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CControls_CIDropDownButtonAutomationPeer* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CControls_CIDropDownButtonAutomationPeer* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CControls_CIDropDownButtonAutomationPeer* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CControls_CIDropDownButtonAutomationPeer* This,
            TrustLevel* trustLevel);
    
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CIDropDownButtonAutomationPeerVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CIDropDownButtonAutomationPeer
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIDropDownButtonAutomationPeerVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIDropDownButtonAutomationPeer;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIDropDownButtonAutomationPeer_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIDropDownButtonAutomationPeerFactory_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CControls_CIDropDownButtonAutomationPeerFactory_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIDropDownButtonAutomationPeerFactoryVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CControls_CIDropDownButtonAutomationPeerFactory* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CControls_CIDropDownButtonAutomationPeerFactory* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CControls_CIDropDownButtonAutomationPeerFactory* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CControls_CIDropDownButtonAutomationPeerFactory* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CControls_CIDropDownButtonAutomationPeerFactory* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CControls_CIDropDownButtonAutomationPeerFactory* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* CreateInstance)(__x_ABI_CWindows_CUI_CXaml_CControls_CIDropDownButtonAutomationPeerFactory* This,
        __x_ABI_CWindows_CUI_CXaml_CControls_CIDropDownButton* owner,
        IInspectable* baseInterface,
        IInspectable** innerInterface,
        __x_ABI_CWindows_CUI_CXaml_CControls_CIDropDownButtonAutomationPeer** value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CIDropDownButtonAutomationPeerFactoryVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CIDropDownButtonAutomationPeerFactory
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIDropDownButtonAutomationPeerFactoryVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIDropDownButtonAutomationPeerFactory;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIDropDownButtonAutomationPeerFactory_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIDropDownButtonFactory_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CControls_CIDropDownButtonFactory_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIDropDownButtonFactoryVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CControls_CIDropDownButtonFactory* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CControls_CIDropDownButtonFactory* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CControls_CIDropDownButtonFactory* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CControls_CIDropDownButtonFactory* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CControls_CIDropDownButtonFactory* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CControls_CIDropDownButtonFactory* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* CreateInstance)(__x_ABI_CWindows_CUI_CXaml_CControls_CIDropDownButtonFactory* This,
        IInspectable* baseInterface,
        IInspectable** innerInterface,
        __x_ABI_CWindows_CUI_CXaml_CControls_CIDropDownButton** value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CIDropDownButtonFactoryVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CIDropDownButtonFactory
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIDropDownButtonFactoryVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIDropDownButtonFactory;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIDropDownButtonFactory_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIDynamicOverflowItemsChangingEventArgs_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CControls_CIDynamicOverflowItemsChangingEventArgs_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIDynamicOverflowItemsChangingEventArgsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CControls_CIDynamicOverflowItemsChangingEventArgs* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CControls_CIDynamicOverflowItemsChangingEventArgs* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CControls_CIDynamicOverflowItemsChangingEventArgs* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CControls_CIDynamicOverflowItemsChangingEventArgs* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CControls_CIDynamicOverflowItemsChangingEventArgs* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CControls_CIDynamicOverflowItemsChangingEventArgs* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Action)(__x_ABI_CWindows_CUI_CXaml_CControls_CIDynamicOverflowItemsChangingEventArgs* This,
        enum __x_ABI_CWindows_CUI_CXaml_CControls_CCommandBarDynamicOverflowAction* value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CIDynamicOverflowItemsChangingEventArgsVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CIDynamicOverflowItemsChangingEventArgs
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIDynamicOverflowItemsChangingEventArgsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIDynamicOverflowItemsChangingEventArgs;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIDynamicOverflowItemsChangingEventArgs_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIFlipView_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CControls_CIFlipView_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIFlipViewVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CControls_CIFlipView* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CControls_CIFlipView* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CControls_CIFlipView* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CControls_CIFlipView* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CControls_CIFlipView* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CControls_CIFlipView* This,
            TrustLevel* trustLevel);
    
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CIFlipViewVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CIFlipView
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIFlipViewVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIFlipView;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIFlipView_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIFlipView2_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CControls_CIFlipView2_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIFlipView2Vtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CControls_CIFlipView2* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CControls_CIFlipView2* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CControls_CIFlipView2* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CControls_CIFlipView2* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CControls_CIFlipView2* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CControls_CIFlipView2* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_UseTouchAnimationsForAllNavigation)(__x_ABI_CWindows_CUI_CXaml_CControls_CIFlipView2* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* put_UseTouchAnimationsForAllNavigation)(__x_ABI_CWindows_CUI_CXaml_CControls_CIFlipView2* This,
        boolean value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CIFlipView2Vtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CIFlipView2
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIFlipView2Vtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIFlipView2;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIFlipView2_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIFlipViewFactory_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CControls_CIFlipViewFactory_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIFlipViewFactoryVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CControls_CIFlipViewFactory* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CControls_CIFlipViewFactory* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CControls_CIFlipViewFactory* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CControls_CIFlipViewFactory* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CControls_CIFlipViewFactory* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CControls_CIFlipViewFactory* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* CreateInstance)(__x_ABI_CWindows_CUI_CXaml_CControls_CIFlipViewFactory* This,
        IInspectable* baseInterface,
        IInspectable** innerInterface,
        __x_ABI_CWindows_CUI_CXaml_CControls_CIFlipView** value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CIFlipViewFactoryVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CIFlipViewFactory
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIFlipViewFactoryVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIFlipViewFactory;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIFlipViewFactory_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIFlipViewItem_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CControls_CIFlipViewItem_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIFlipViewItemVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CControls_CIFlipViewItem* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CControls_CIFlipViewItem* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CControls_CIFlipViewItem* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CControls_CIFlipViewItem* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CControls_CIFlipViewItem* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CControls_CIFlipViewItem* This,
            TrustLevel* trustLevel);
    
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CIFlipViewItemVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CIFlipViewItem
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIFlipViewItemVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIFlipViewItem;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIFlipViewItem_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIFlipViewItemFactory_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CControls_CIFlipViewItemFactory_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIFlipViewItemFactoryVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CControls_CIFlipViewItemFactory* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CControls_CIFlipViewItemFactory* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CControls_CIFlipViewItemFactory* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CControls_CIFlipViewItemFactory* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CControls_CIFlipViewItemFactory* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CControls_CIFlipViewItemFactory* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* CreateInstance)(__x_ABI_CWindows_CUI_CXaml_CControls_CIFlipViewItemFactory* This,
        IInspectable* baseInterface,
        IInspectable** innerInterface,
        __x_ABI_CWindows_CUI_CXaml_CControls_CIFlipViewItem** value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CIFlipViewItemFactoryVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CIFlipViewItemFactory
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIFlipViewItemFactoryVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIFlipViewItemFactory;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIFlipViewItemFactory_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIFlipViewStatics2_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CControls_CIFlipViewStatics2_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIFlipViewStatics2Vtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CControls_CIFlipViewStatics2* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CControls_CIFlipViewStatics2* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CControls_CIFlipViewStatics2* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CControls_CIFlipViewStatics2* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CControls_CIFlipViewStatics2* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CControls_CIFlipViewStatics2* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_UseTouchAnimationsForAllNavigationProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CIFlipViewStatics2* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CIFlipViewStatics2Vtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CIFlipViewStatics2
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIFlipViewStatics2Vtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIFlipViewStatics2;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIFlipViewStatics2_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIFlyout_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CControls_CIFlyout_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIFlyoutVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CControls_CIFlyout* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CControls_CIFlyout* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CControls_CIFlyout* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CControls_CIFlyout* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CControls_CIFlyout* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CControls_CIFlyout* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Content)(__x_ABI_CWindows_CUI_CXaml_CControls_CIFlyout* This,
        __x_ABI_CWindows_CUI_CXaml_CIUIElement** value);
    HRESULT (STDMETHODCALLTYPE* put_Content)(__x_ABI_CWindows_CUI_CXaml_CControls_CIFlyout* This,
        __x_ABI_CWindows_CUI_CXaml_CIUIElement* value);
    HRESULT (STDMETHODCALLTYPE* get_FlyoutPresenterStyle)(__x_ABI_CWindows_CUI_CXaml_CControls_CIFlyout* This,
        __x_ABI_CWindows_CUI_CXaml_CIStyle** value);
    HRESULT (STDMETHODCALLTYPE* put_FlyoutPresenterStyle)(__x_ABI_CWindows_CUI_CXaml_CControls_CIFlyout* This,
        __x_ABI_CWindows_CUI_CXaml_CIStyle* value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CIFlyoutVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CIFlyout
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIFlyoutVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIFlyout;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIFlyout_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIFlyoutFactory_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CControls_CIFlyoutFactory_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIFlyoutFactoryVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CControls_CIFlyoutFactory* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CControls_CIFlyoutFactory* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CControls_CIFlyoutFactory* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CControls_CIFlyoutFactory* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CControls_CIFlyoutFactory* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CControls_CIFlyoutFactory* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* CreateInstance)(__x_ABI_CWindows_CUI_CXaml_CControls_CIFlyoutFactory* This,
        IInspectable* baseInterface,
        IInspectable** innerInterface,
        __x_ABI_CWindows_CUI_CXaml_CControls_CIFlyout** value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CIFlyoutFactoryVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CIFlyoutFactory
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIFlyoutFactoryVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIFlyoutFactory;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIFlyoutFactory_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIFlyoutPresenter_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CControls_CIFlyoutPresenter_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIFlyoutPresenterVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CControls_CIFlyoutPresenter* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CControls_CIFlyoutPresenter* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CControls_CIFlyoutPresenter* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CControls_CIFlyoutPresenter* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CControls_CIFlyoutPresenter* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CControls_CIFlyoutPresenter* This,
            TrustLevel* trustLevel);
    
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CIFlyoutPresenterVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CIFlyoutPresenter
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIFlyoutPresenterVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIFlyoutPresenter;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIFlyoutPresenter_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIFlyoutPresenter2_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CControls_CIFlyoutPresenter2_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIFlyoutPresenter2Vtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CControls_CIFlyoutPresenter2* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CControls_CIFlyoutPresenter2* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CControls_CIFlyoutPresenter2* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CControls_CIFlyoutPresenter2* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CControls_CIFlyoutPresenter2* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CControls_CIFlyoutPresenter2* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_IsDefaultShadowEnabled)(__x_ABI_CWindows_CUI_CXaml_CControls_CIFlyoutPresenter2* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* put_IsDefaultShadowEnabled)(__x_ABI_CWindows_CUI_CXaml_CControls_CIFlyoutPresenter2* This,
        boolean value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CIFlyoutPresenter2Vtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CIFlyoutPresenter2
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIFlyoutPresenter2Vtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIFlyoutPresenter2;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIFlyoutPresenter2_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIFlyoutPresenterFactory_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CControls_CIFlyoutPresenterFactory_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIFlyoutPresenterFactoryVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CControls_CIFlyoutPresenterFactory* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CControls_CIFlyoutPresenterFactory* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CControls_CIFlyoutPresenterFactory* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CControls_CIFlyoutPresenterFactory* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CControls_CIFlyoutPresenterFactory* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CControls_CIFlyoutPresenterFactory* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* CreateInstance)(__x_ABI_CWindows_CUI_CXaml_CControls_CIFlyoutPresenterFactory* This,
        IInspectable* baseInterface,
        IInspectable** innerInterface,
        __x_ABI_CWindows_CUI_CXaml_CControls_CIFlyoutPresenter** value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CIFlyoutPresenterFactoryVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CIFlyoutPresenterFactory
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIFlyoutPresenterFactoryVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIFlyoutPresenterFactory;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIFlyoutPresenterFactory_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIFlyoutPresenterStatics2_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CControls_CIFlyoutPresenterStatics2_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIFlyoutPresenterStatics2Vtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CControls_CIFlyoutPresenterStatics2* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CControls_CIFlyoutPresenterStatics2* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CControls_CIFlyoutPresenterStatics2* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CControls_CIFlyoutPresenterStatics2* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CControls_CIFlyoutPresenterStatics2* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CControls_CIFlyoutPresenterStatics2* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_IsDefaultShadowEnabledProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CIFlyoutPresenterStatics2* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CIFlyoutPresenterStatics2Vtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CIFlyoutPresenterStatics2
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIFlyoutPresenterStatics2Vtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIFlyoutPresenterStatics2;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIFlyoutPresenterStatics2_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIFlyoutStatics_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CControls_CIFlyoutStatics_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIFlyoutStaticsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CControls_CIFlyoutStatics* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CControls_CIFlyoutStatics* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CControls_CIFlyoutStatics* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CControls_CIFlyoutStatics* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CControls_CIFlyoutStatics* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CControls_CIFlyoutStatics* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_ContentProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CIFlyoutStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_FlyoutPresenterStyleProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CIFlyoutStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CIFlyoutStaticsVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CIFlyoutStatics
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIFlyoutStaticsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIFlyoutStatics;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIFlyoutStatics_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIFocusDisengagedEventArgs_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CControls_CIFocusDisengagedEventArgs_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIFocusDisengagedEventArgsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CControls_CIFocusDisengagedEventArgs* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CControls_CIFocusDisengagedEventArgs* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CControls_CIFocusDisengagedEventArgs* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CControls_CIFocusDisengagedEventArgs* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CControls_CIFocusDisengagedEventArgs* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CControls_CIFocusDisengagedEventArgs* This,
            TrustLevel* trustLevel);
    
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CIFocusDisengagedEventArgsVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CIFocusDisengagedEventArgs
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIFocusDisengagedEventArgsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIFocusDisengagedEventArgs;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIFocusDisengagedEventArgs_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIFocusEngagedEventArgs_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CControls_CIFocusEngagedEventArgs_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIFocusEngagedEventArgsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CControls_CIFocusEngagedEventArgs* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CControls_CIFocusEngagedEventArgs* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CControls_CIFocusEngagedEventArgs* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CControls_CIFocusEngagedEventArgs* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CControls_CIFocusEngagedEventArgs* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CControls_CIFocusEngagedEventArgs* This,
            TrustLevel* trustLevel);
    
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CIFocusEngagedEventArgsVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CIFocusEngagedEventArgs
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIFocusEngagedEventArgsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIFocusEngagedEventArgs;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIFocusEngagedEventArgs_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIFocusEngagedEventArgs2_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CControls_CIFocusEngagedEventArgs2_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIFocusEngagedEventArgs2Vtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CControls_CIFocusEngagedEventArgs2* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CControls_CIFocusEngagedEventArgs2* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CControls_CIFocusEngagedEventArgs2* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CControls_CIFocusEngagedEventArgs2* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CControls_CIFocusEngagedEventArgs2* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CControls_CIFocusEngagedEventArgs2* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Handled)(__x_ABI_CWindows_CUI_CXaml_CControls_CIFocusEngagedEventArgs2* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* put_Handled)(__x_ABI_CWindows_CUI_CXaml_CControls_CIFocusEngagedEventArgs2* This,
        boolean value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CIFocusEngagedEventArgs2Vtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CIFocusEngagedEventArgs2
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIFocusEngagedEventArgs2Vtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIFocusEngagedEventArgs2;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIFocusEngagedEventArgs2_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIFontIcon_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CControls_CIFontIcon_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIFontIconVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CControls_CIFontIcon* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CControls_CIFontIcon* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CControls_CIFontIcon* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CControls_CIFontIcon* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CControls_CIFontIcon* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CControls_CIFontIcon* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Glyph)(__x_ABI_CWindows_CUI_CXaml_CControls_CIFontIcon* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* put_Glyph)(__x_ABI_CWindows_CUI_CXaml_CControls_CIFontIcon* This,
        HSTRING value);
    HRESULT (STDMETHODCALLTYPE* get_FontSize)(__x_ABI_CWindows_CUI_CXaml_CControls_CIFontIcon* This,
        DOUBLE* value);
    HRESULT (STDMETHODCALLTYPE* put_FontSize)(__x_ABI_CWindows_CUI_CXaml_CControls_CIFontIcon* This,
        DOUBLE value);
    HRESULT (STDMETHODCALLTYPE* get_FontFamily)(__x_ABI_CWindows_CUI_CXaml_CControls_CIFontIcon* This,
        __x_ABI_CWindows_CUI_CXaml_CMedia_CIFontFamily** value);
    HRESULT (STDMETHODCALLTYPE* put_FontFamily)(__x_ABI_CWindows_CUI_CXaml_CControls_CIFontIcon* This,
        __x_ABI_CWindows_CUI_CXaml_CMedia_CIFontFamily* value);
    HRESULT (STDMETHODCALLTYPE* get_FontWeight)(__x_ABI_CWindows_CUI_CXaml_CControls_CIFontIcon* This,
        struct __x_ABI_CWindows_CUI_CText_CFontWeight* value);
    HRESULT (STDMETHODCALLTYPE* put_FontWeight)(__x_ABI_CWindows_CUI_CXaml_CControls_CIFontIcon* This,
        struct __x_ABI_CWindows_CUI_CText_CFontWeight value);
    HRESULT (STDMETHODCALLTYPE* get_FontStyle)(__x_ABI_CWindows_CUI_CXaml_CControls_CIFontIcon* This,
        enum __x_ABI_CWindows_CUI_CText_CFontStyle* value);
    HRESULT (STDMETHODCALLTYPE* put_FontStyle)(__x_ABI_CWindows_CUI_CXaml_CControls_CIFontIcon* This,
        enum __x_ABI_CWindows_CUI_CText_CFontStyle value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CIFontIconVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CIFontIcon
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIFontIconVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIFontIcon;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIFontIcon_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIFontIcon2_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CControls_CIFontIcon2_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIFontIcon2Vtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CControls_CIFontIcon2* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CControls_CIFontIcon2* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CControls_CIFontIcon2* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CControls_CIFontIcon2* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CControls_CIFontIcon2* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CControls_CIFontIcon2* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_IsTextScaleFactorEnabled)(__x_ABI_CWindows_CUI_CXaml_CControls_CIFontIcon2* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* put_IsTextScaleFactorEnabled)(__x_ABI_CWindows_CUI_CXaml_CControls_CIFontIcon2* This,
        boolean value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CIFontIcon2Vtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CIFontIcon2
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIFontIcon2Vtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIFontIcon2;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIFontIcon2_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIFontIcon3_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CControls_CIFontIcon3_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIFontIcon3Vtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CControls_CIFontIcon3* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CControls_CIFontIcon3* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CControls_CIFontIcon3* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CControls_CIFontIcon3* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CControls_CIFontIcon3* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CControls_CIFontIcon3* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_MirroredWhenRightToLeft)(__x_ABI_CWindows_CUI_CXaml_CControls_CIFontIcon3* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* put_MirroredWhenRightToLeft)(__x_ABI_CWindows_CUI_CXaml_CControls_CIFontIcon3* This,
        boolean value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CIFontIcon3Vtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CIFontIcon3
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIFontIcon3Vtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIFontIcon3;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIFontIcon3_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIFontIconFactory_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CControls_CIFontIconFactory_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIFontIconFactoryVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CControls_CIFontIconFactory* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CControls_CIFontIconFactory* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CControls_CIFontIconFactory* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CControls_CIFontIconFactory* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CControls_CIFontIconFactory* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CControls_CIFontIconFactory* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* CreateInstance)(__x_ABI_CWindows_CUI_CXaml_CControls_CIFontIconFactory* This,
        IInspectable* baseInterface,
        IInspectable** innerInterface,
        __x_ABI_CWindows_CUI_CXaml_CControls_CIFontIcon** value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CIFontIconFactoryVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CIFontIconFactory
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIFontIconFactoryVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIFontIconFactory;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIFontIconFactory_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIFontIconSource_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CControls_CIFontIconSource_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIFontIconSourceVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CControls_CIFontIconSource* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CControls_CIFontIconSource* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CControls_CIFontIconSource* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CControls_CIFontIconSource* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CControls_CIFontIconSource* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CControls_CIFontIconSource* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Glyph)(__x_ABI_CWindows_CUI_CXaml_CControls_CIFontIconSource* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* put_Glyph)(__x_ABI_CWindows_CUI_CXaml_CControls_CIFontIconSource* This,
        HSTRING value);
    HRESULT (STDMETHODCALLTYPE* get_FontSize)(__x_ABI_CWindows_CUI_CXaml_CControls_CIFontIconSource* This,
        DOUBLE* value);
    HRESULT (STDMETHODCALLTYPE* put_FontSize)(__x_ABI_CWindows_CUI_CXaml_CControls_CIFontIconSource* This,
        DOUBLE value);
    HRESULT (STDMETHODCALLTYPE* get_FontFamily)(__x_ABI_CWindows_CUI_CXaml_CControls_CIFontIconSource* This,
        __x_ABI_CWindows_CUI_CXaml_CMedia_CIFontFamily** value);
    HRESULT (STDMETHODCALLTYPE* put_FontFamily)(__x_ABI_CWindows_CUI_CXaml_CControls_CIFontIconSource* This,
        __x_ABI_CWindows_CUI_CXaml_CMedia_CIFontFamily* value);
    HRESULT (STDMETHODCALLTYPE* get_FontWeight)(__x_ABI_CWindows_CUI_CXaml_CControls_CIFontIconSource* This,
        struct __x_ABI_CWindows_CUI_CText_CFontWeight* value);
    HRESULT (STDMETHODCALLTYPE* put_FontWeight)(__x_ABI_CWindows_CUI_CXaml_CControls_CIFontIconSource* This,
        struct __x_ABI_CWindows_CUI_CText_CFontWeight value);
    HRESULT (STDMETHODCALLTYPE* get_FontStyle)(__x_ABI_CWindows_CUI_CXaml_CControls_CIFontIconSource* This,
        enum __x_ABI_CWindows_CUI_CText_CFontStyle* value);
    HRESULT (STDMETHODCALLTYPE* put_FontStyle)(__x_ABI_CWindows_CUI_CXaml_CControls_CIFontIconSource* This,
        enum __x_ABI_CWindows_CUI_CText_CFontStyle value);
    HRESULT (STDMETHODCALLTYPE* get_IsTextScaleFactorEnabled)(__x_ABI_CWindows_CUI_CXaml_CControls_CIFontIconSource* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* put_IsTextScaleFactorEnabled)(__x_ABI_CWindows_CUI_CXaml_CControls_CIFontIconSource* This,
        boolean value);
    HRESULT (STDMETHODCALLTYPE* get_MirroredWhenRightToLeft)(__x_ABI_CWindows_CUI_CXaml_CControls_CIFontIconSource* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* put_MirroredWhenRightToLeft)(__x_ABI_CWindows_CUI_CXaml_CControls_CIFontIconSource* This,
        boolean value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CIFontIconSourceVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CIFontIconSource
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIFontIconSourceVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIFontIconSource;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIFontIconSource_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIFontIconSourceFactory_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CControls_CIFontIconSourceFactory_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIFontIconSourceFactoryVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CControls_CIFontIconSourceFactory* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CControls_CIFontIconSourceFactory* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CControls_CIFontIconSourceFactory* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CControls_CIFontIconSourceFactory* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CControls_CIFontIconSourceFactory* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CControls_CIFontIconSourceFactory* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* CreateInstance)(__x_ABI_CWindows_CUI_CXaml_CControls_CIFontIconSourceFactory* This,
        IInspectable* baseInterface,
        IInspectable** innerInterface,
        __x_ABI_CWindows_CUI_CXaml_CControls_CIFontIconSource** value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CIFontIconSourceFactoryVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CIFontIconSourceFactory
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIFontIconSourceFactoryVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIFontIconSourceFactory;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIFontIconSourceFactory_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIFontIconSourceStatics_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CControls_CIFontIconSourceStatics_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIFontIconSourceStaticsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CControls_CIFontIconSourceStatics* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CControls_CIFontIconSourceStatics* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CControls_CIFontIconSourceStatics* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CControls_CIFontIconSourceStatics* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CControls_CIFontIconSourceStatics* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CControls_CIFontIconSourceStatics* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_GlyphProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CIFontIconSourceStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_FontSizeProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CIFontIconSourceStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_FontFamilyProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CIFontIconSourceStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_FontWeightProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CIFontIconSourceStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_FontStyleProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CIFontIconSourceStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_IsTextScaleFactorEnabledProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CIFontIconSourceStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_MirroredWhenRightToLeftProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CIFontIconSourceStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CIFontIconSourceStaticsVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CIFontIconSourceStatics
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIFontIconSourceStaticsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIFontIconSourceStatics;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIFontIconSourceStatics_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIFontIconStatics_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CControls_CIFontIconStatics_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIFontIconStaticsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CControls_CIFontIconStatics* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CControls_CIFontIconStatics* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CControls_CIFontIconStatics* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CControls_CIFontIconStatics* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CControls_CIFontIconStatics* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CControls_CIFontIconStatics* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_GlyphProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CIFontIconStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_FontSizeProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CIFontIconStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_FontFamilyProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CIFontIconStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_FontWeightProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CIFontIconStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_FontStyleProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CIFontIconStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CIFontIconStaticsVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CIFontIconStatics
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIFontIconStaticsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIFontIconStatics;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIFontIconStatics_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIFontIconStatics2_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CControls_CIFontIconStatics2_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIFontIconStatics2Vtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CControls_CIFontIconStatics2* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CControls_CIFontIconStatics2* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CControls_CIFontIconStatics2* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CControls_CIFontIconStatics2* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CControls_CIFontIconStatics2* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CControls_CIFontIconStatics2* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_IsTextScaleFactorEnabledProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CIFontIconStatics2* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CIFontIconStatics2Vtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CIFontIconStatics2
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIFontIconStatics2Vtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIFontIconStatics2;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIFontIconStatics2_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIFontIconStatics3_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CControls_CIFontIconStatics3_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIFontIconStatics3Vtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CControls_CIFontIconStatics3* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CControls_CIFontIconStatics3* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CControls_CIFontIconStatics3* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CControls_CIFontIconStatics3* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CControls_CIFontIconStatics3* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CControls_CIFontIconStatics3* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_MirroredWhenRightToLeftProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CIFontIconStatics3* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CIFontIconStatics3Vtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CIFontIconStatics3
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIFontIconStatics3Vtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIFontIconStatics3;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIFontIconStatics3_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIFrame_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CControls_CIFrame_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIFrameVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CControls_CIFrame* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CControls_CIFrame* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CControls_CIFrame* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CControls_CIFrame* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CControls_CIFrame* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CControls_CIFrame* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_CacheSize)(__x_ABI_CWindows_CUI_CXaml_CControls_CIFrame* This,
        INT32* value);
    HRESULT (STDMETHODCALLTYPE* put_CacheSize)(__x_ABI_CWindows_CUI_CXaml_CControls_CIFrame* This,
        INT32 value);
    HRESULT (STDMETHODCALLTYPE* get_CanGoBack)(__x_ABI_CWindows_CUI_CXaml_CControls_CIFrame* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* get_CanGoForward)(__x_ABI_CWindows_CUI_CXaml_CControls_CIFrame* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* get_CurrentSourcePageType)(__x_ABI_CWindows_CUI_CXaml_CControls_CIFrame* This,
        struct __x_ABI_CWindows_CUI_CXaml_CInterop_CTypeName* value);
    HRESULT (STDMETHODCALLTYPE* get_SourcePageType)(__x_ABI_CWindows_CUI_CXaml_CControls_CIFrame* This,
        struct __x_ABI_CWindows_CUI_CXaml_CInterop_CTypeName* value);
    HRESULT (STDMETHODCALLTYPE* put_SourcePageType)(__x_ABI_CWindows_CUI_CXaml_CControls_CIFrame* This,
        struct __x_ABI_CWindows_CUI_CXaml_CInterop_CTypeName value);
    HRESULT (STDMETHODCALLTYPE* get_BackStackDepth)(__x_ABI_CWindows_CUI_CXaml_CControls_CIFrame* This,
        INT32* value);
    HRESULT (STDMETHODCALLTYPE* add_Navigated)(__x_ABI_CWindows_CUI_CXaml_CControls_CIFrame* This,
        __x_ABI_CWindows_CUI_CXaml_CNavigation_CINavigatedEventHandler* handler,
        EventRegistrationToken* token);
    HRESULT (STDMETHODCALLTYPE* remove_Navigated)(__x_ABI_CWindows_CUI_CXaml_CControls_CIFrame* This,
        EventRegistrationToken token);
    HRESULT (STDMETHODCALLTYPE* add_Navigating)(__x_ABI_CWindows_CUI_CXaml_CControls_CIFrame* This,
        __x_ABI_CWindows_CUI_CXaml_CNavigation_CINavigatingCancelEventHandler* handler,
        EventRegistrationToken* token);
    HRESULT (STDMETHODCALLTYPE* remove_Navigating)(__x_ABI_CWindows_CUI_CXaml_CControls_CIFrame* This,
        EventRegistrationToken token);
    HRESULT (STDMETHODCALLTYPE* add_NavigationFailed)(__x_ABI_CWindows_CUI_CXaml_CControls_CIFrame* This,
        __x_ABI_CWindows_CUI_CXaml_CNavigation_CINavigationFailedEventHandler* handler,
        EventRegistrationToken* token);
    HRESULT (STDMETHODCALLTYPE* remove_NavigationFailed)(__x_ABI_CWindows_CUI_CXaml_CControls_CIFrame* This,
        EventRegistrationToken token);
    HRESULT (STDMETHODCALLTYPE* add_NavigationStopped)(__x_ABI_CWindows_CUI_CXaml_CControls_CIFrame* This,
        __x_ABI_CWindows_CUI_CXaml_CNavigation_CINavigationStoppedEventHandler* handler,
        EventRegistrationToken* token);
    HRESULT (STDMETHODCALLTYPE* remove_NavigationStopped)(__x_ABI_CWindows_CUI_CXaml_CControls_CIFrame* This,
        EventRegistrationToken token);
    HRESULT (STDMETHODCALLTYPE* GoBack)(__x_ABI_CWindows_CUI_CXaml_CControls_CIFrame* This);
    HRESULT (STDMETHODCALLTYPE* GoForward)(__x_ABI_CWindows_CUI_CXaml_CControls_CIFrame* This);
    HRESULT (STDMETHODCALLTYPE* Navigate)(__x_ABI_CWindows_CUI_CXaml_CControls_CIFrame* This,
        struct __x_ABI_CWindows_CUI_CXaml_CInterop_CTypeName sourcePageType,
        IInspectable* parameter,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* GetNavigationState)(__x_ABI_CWindows_CUI_CXaml_CControls_CIFrame* This,
        HSTRING* result);
    HRESULT (STDMETHODCALLTYPE* SetNavigationState)(__x_ABI_CWindows_CUI_CXaml_CControls_CIFrame* This,
        HSTRING navigationState);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CIFrameVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CIFrame
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIFrameVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIFrame;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIFrame_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIFrame2_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CControls_CIFrame2_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIFrame2Vtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CControls_CIFrame2* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CControls_CIFrame2* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CControls_CIFrame2* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CControls_CIFrame2* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CControls_CIFrame2* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CControls_CIFrame2* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_BackStack)(__x_ABI_CWindows_CUI_CXaml_CControls_CIFrame2* This,
        __x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CXaml__CNavigation__CPageStackEntry** value);
    HRESULT (STDMETHODCALLTYPE* get_ForwardStack)(__x_ABI_CWindows_CUI_CXaml_CControls_CIFrame2* This,
        __x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CXaml__CNavigation__CPageStackEntry** value);
    HRESULT (STDMETHODCALLTYPE* Navigate)(__x_ABI_CWindows_CUI_CXaml_CControls_CIFrame2* This,
        struct __x_ABI_CWindows_CUI_CXaml_CInterop_CTypeName sourcePageType,
        IInspectable* parameter,
        __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CINavigationTransitionInfo* infoOverride,
        boolean* result);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CIFrame2Vtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CIFrame2
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIFrame2Vtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIFrame2;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIFrame2_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIFrame3_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CControls_CIFrame3_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIFrame3Vtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CControls_CIFrame3* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CControls_CIFrame3* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CControls_CIFrame3* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CControls_CIFrame3* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CControls_CIFrame3* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CControls_CIFrame3* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* GoBack)(__x_ABI_CWindows_CUI_CXaml_CControls_CIFrame3* This,
        __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CINavigationTransitionInfo* transitionInfoOverride);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CIFrame3Vtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CIFrame3
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIFrame3Vtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIFrame3;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIFrame3_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIFrame4_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CControls_CIFrame4_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIFrame4Vtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CControls_CIFrame4* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CControls_CIFrame4* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CControls_CIFrame4* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CControls_CIFrame4* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CControls_CIFrame4* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CControls_CIFrame4* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* SetNavigationStateWithNavigationControl)(__x_ABI_CWindows_CUI_CXaml_CControls_CIFrame4* This,
        HSTRING navigationState,
        boolean suppressNavigate);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CIFrame4Vtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CIFrame4
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIFrame4Vtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIFrame4;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIFrame4_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIFrame5_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CControls_CIFrame5_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIFrame5Vtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CControls_CIFrame5* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CControls_CIFrame5* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CControls_CIFrame5* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CControls_CIFrame5* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CControls_CIFrame5* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CControls_CIFrame5* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_IsNavigationStackEnabled)(__x_ABI_CWindows_CUI_CXaml_CControls_CIFrame5* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* put_IsNavigationStackEnabled)(__x_ABI_CWindows_CUI_CXaml_CControls_CIFrame5* This,
        boolean value);
    HRESULT (STDMETHODCALLTYPE* NavigateToType)(__x_ABI_CWindows_CUI_CXaml_CControls_CIFrame5* This,
        struct __x_ABI_CWindows_CUI_CXaml_CInterop_CTypeName sourcePageType,
        IInspectable* parameter,
        __x_ABI_CWindows_CUI_CXaml_CNavigation_CIFrameNavigationOptions* navigationOptions,
        boolean* result);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CIFrame5Vtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CIFrame5
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIFrame5Vtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIFrame5;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIFrame5_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIFrameFactory_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CControls_CIFrameFactory_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIFrameFactoryVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CControls_CIFrameFactory* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CControls_CIFrameFactory* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CControls_CIFrameFactory* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CControls_CIFrameFactory* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CControls_CIFrameFactory* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CControls_CIFrameFactory* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* CreateInstance)(__x_ABI_CWindows_CUI_CXaml_CControls_CIFrameFactory* This,
        IInspectable* baseInterface,
        IInspectable** innerInterface,
        __x_ABI_CWindows_CUI_CXaml_CControls_CIFrame** value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CIFrameFactoryVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CIFrameFactory
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIFrameFactoryVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIFrameFactory;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIFrameFactory_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIFrameStatics_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CControls_CIFrameStatics_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIFrameStaticsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CControls_CIFrameStatics* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CControls_CIFrameStatics* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CControls_CIFrameStatics* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CControls_CIFrameStatics* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CControls_CIFrameStatics* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CControls_CIFrameStatics* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_CacheSizeProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CIFrameStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_CanGoBackProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CIFrameStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_CanGoForwardProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CIFrameStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_CurrentSourcePageTypeProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CIFrameStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_SourcePageTypeProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CIFrameStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_BackStackDepthProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CIFrameStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CIFrameStaticsVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CIFrameStatics
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIFrameStaticsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIFrameStatics;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIFrameStatics_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIFrameStatics2_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CControls_CIFrameStatics2_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIFrameStatics2Vtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CControls_CIFrameStatics2* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CControls_CIFrameStatics2* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CControls_CIFrameStatics2* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CControls_CIFrameStatics2* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CControls_CIFrameStatics2* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CControls_CIFrameStatics2* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_BackStackProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CIFrameStatics2* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_ForwardStackProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CIFrameStatics2* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CIFrameStatics2Vtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CIFrameStatics2
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIFrameStatics2Vtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIFrameStatics2;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIFrameStatics2_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIFrameStatics5_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CControls_CIFrameStatics5_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIFrameStatics5Vtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CControls_CIFrameStatics5* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CControls_CIFrameStatics5* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CControls_CIFrameStatics5* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CControls_CIFrameStatics5* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CControls_CIFrameStatics5* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CControls_CIFrameStatics5* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_IsNavigationStackEnabledProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CIFrameStatics5* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CIFrameStatics5Vtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CIFrameStatics5
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIFrameStatics5Vtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIFrameStatics5;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIFrameStatics5_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIGrid_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CControls_CIGrid_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIGridVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CControls_CIGrid* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CControls_CIGrid* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CControls_CIGrid* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CControls_CIGrid* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CControls_CIGrid* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CControls_CIGrid* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_RowDefinitions)(__x_ABI_CWindows_CUI_CXaml_CControls_CIGrid* This,
        __x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CXaml__CControls__CRowDefinition** value);
    HRESULT (STDMETHODCALLTYPE* get_ColumnDefinitions)(__x_ABI_CWindows_CUI_CXaml_CControls_CIGrid* This,
        __x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CXaml__CControls__CColumnDefinition** value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CIGridVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CIGrid
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIGridVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIGrid;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIGrid_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIGrid2_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CControls_CIGrid2_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIGrid2Vtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CControls_CIGrid2* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CControls_CIGrid2* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CControls_CIGrid2* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CControls_CIGrid2* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CControls_CIGrid2* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CControls_CIGrid2* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_BorderBrush)(__x_ABI_CWindows_CUI_CXaml_CControls_CIGrid2* This,
        __x_ABI_CWindows_CUI_CXaml_CMedia_CIBrush** value);
    HRESULT (STDMETHODCALLTYPE* put_BorderBrush)(__x_ABI_CWindows_CUI_CXaml_CControls_CIGrid2* This,
        __x_ABI_CWindows_CUI_CXaml_CMedia_CIBrush* value);
    HRESULT (STDMETHODCALLTYPE* get_BorderThickness)(__x_ABI_CWindows_CUI_CXaml_CControls_CIGrid2* This,
        struct __x_ABI_CWindows_CUI_CXaml_CThickness* value);
    HRESULT (STDMETHODCALLTYPE* put_BorderThickness)(__x_ABI_CWindows_CUI_CXaml_CControls_CIGrid2* This,
        struct __x_ABI_CWindows_CUI_CXaml_CThickness value);
    HRESULT (STDMETHODCALLTYPE* get_CornerRadius)(__x_ABI_CWindows_CUI_CXaml_CControls_CIGrid2* This,
        struct __x_ABI_CWindows_CUI_CXaml_CCornerRadius* value);
    HRESULT (STDMETHODCALLTYPE* put_CornerRadius)(__x_ABI_CWindows_CUI_CXaml_CControls_CIGrid2* This,
        struct __x_ABI_CWindows_CUI_CXaml_CCornerRadius value);
    HRESULT (STDMETHODCALLTYPE* get_Padding)(__x_ABI_CWindows_CUI_CXaml_CControls_CIGrid2* This,
        struct __x_ABI_CWindows_CUI_CXaml_CThickness* value);
    HRESULT (STDMETHODCALLTYPE* put_Padding)(__x_ABI_CWindows_CUI_CXaml_CControls_CIGrid2* This,
        struct __x_ABI_CWindows_CUI_CXaml_CThickness value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CIGrid2Vtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CIGrid2
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIGrid2Vtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIGrid2;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIGrid2_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIGrid3_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CControls_CIGrid3_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIGrid3Vtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CControls_CIGrid3* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CControls_CIGrid3* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CControls_CIGrid3* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CControls_CIGrid3* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CControls_CIGrid3* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CControls_CIGrid3* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_RowSpacing)(__x_ABI_CWindows_CUI_CXaml_CControls_CIGrid3* This,
        DOUBLE* value);
    HRESULT (STDMETHODCALLTYPE* put_RowSpacing)(__x_ABI_CWindows_CUI_CXaml_CControls_CIGrid3* This,
        DOUBLE value);
    HRESULT (STDMETHODCALLTYPE* get_ColumnSpacing)(__x_ABI_CWindows_CUI_CXaml_CControls_CIGrid3* This,
        DOUBLE* value);
    HRESULT (STDMETHODCALLTYPE* put_ColumnSpacing)(__x_ABI_CWindows_CUI_CXaml_CControls_CIGrid3* This,
        DOUBLE value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CIGrid3Vtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CIGrid3
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIGrid3Vtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIGrid3;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIGrid3_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIGrid4_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CControls_CIGrid4_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIGrid4Vtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CControls_CIGrid4* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CControls_CIGrid4* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CControls_CIGrid4* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CControls_CIGrid4* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CControls_CIGrid4* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CControls_CIGrid4* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_BackgroundSizing)(__x_ABI_CWindows_CUI_CXaml_CControls_CIGrid4* This,
        enum __x_ABI_CWindows_CUI_CXaml_CControls_CBackgroundSizing* value);
    HRESULT (STDMETHODCALLTYPE* put_BackgroundSizing)(__x_ABI_CWindows_CUI_CXaml_CControls_CIGrid4* This,
        enum __x_ABI_CWindows_CUI_CXaml_CControls_CBackgroundSizing value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CIGrid4Vtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CIGrid4
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIGrid4Vtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIGrid4;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIGrid4_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIGridFactory_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CControls_CIGridFactory_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIGridFactoryVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CControls_CIGridFactory* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CControls_CIGridFactory* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CControls_CIGridFactory* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CControls_CIGridFactory* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CControls_CIGridFactory* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CControls_CIGridFactory* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* CreateInstance)(__x_ABI_CWindows_CUI_CXaml_CControls_CIGridFactory* This,
        IInspectable* baseInterface,
        IInspectable** innerInterface,
        __x_ABI_CWindows_CUI_CXaml_CControls_CIGrid** value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CIGridFactoryVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CIGridFactory
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIGridFactoryVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIGridFactory;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIGridFactory_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIGridStatics_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CControls_CIGridStatics_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIGridStaticsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CControls_CIGridStatics* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CControls_CIGridStatics* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CControls_CIGridStatics* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CControls_CIGridStatics* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CControls_CIGridStatics* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CControls_CIGridStatics* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_RowProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CIGridStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* GetRow)(__x_ABI_CWindows_CUI_CXaml_CControls_CIGridStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIFrameworkElement* element,
        INT32* result);
    HRESULT (STDMETHODCALLTYPE* SetRow)(__x_ABI_CWindows_CUI_CXaml_CControls_CIGridStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIFrameworkElement* element,
        INT32 value);
    HRESULT (STDMETHODCALLTYPE* get_ColumnProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CIGridStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* GetColumn)(__x_ABI_CWindows_CUI_CXaml_CControls_CIGridStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIFrameworkElement* element,
        INT32* result);
    HRESULT (STDMETHODCALLTYPE* SetColumn)(__x_ABI_CWindows_CUI_CXaml_CControls_CIGridStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIFrameworkElement* element,
        INT32 value);
    HRESULT (STDMETHODCALLTYPE* get_RowSpanProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CIGridStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* GetRowSpan)(__x_ABI_CWindows_CUI_CXaml_CControls_CIGridStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIFrameworkElement* element,
        INT32* result);
    HRESULT (STDMETHODCALLTYPE* SetRowSpan)(__x_ABI_CWindows_CUI_CXaml_CControls_CIGridStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIFrameworkElement* element,
        INT32 value);
    HRESULT (STDMETHODCALLTYPE* get_ColumnSpanProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CIGridStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* GetColumnSpan)(__x_ABI_CWindows_CUI_CXaml_CControls_CIGridStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIFrameworkElement* element,
        INT32* result);
    HRESULT (STDMETHODCALLTYPE* SetColumnSpan)(__x_ABI_CWindows_CUI_CXaml_CControls_CIGridStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIFrameworkElement* element,
        INT32 value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CIGridStaticsVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CIGridStatics
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIGridStaticsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIGridStatics;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIGridStatics_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIGridStatics2_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CControls_CIGridStatics2_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIGridStatics2Vtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CControls_CIGridStatics2* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CControls_CIGridStatics2* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CControls_CIGridStatics2* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CControls_CIGridStatics2* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CControls_CIGridStatics2* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CControls_CIGridStatics2* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_BorderBrushProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CIGridStatics2* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_BorderThicknessProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CIGridStatics2* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_CornerRadiusProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CIGridStatics2* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_PaddingProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CIGridStatics2* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CIGridStatics2Vtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CIGridStatics2
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIGridStatics2Vtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIGridStatics2;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIGridStatics2_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIGridStatics3_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CControls_CIGridStatics3_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIGridStatics3Vtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CControls_CIGridStatics3* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CControls_CIGridStatics3* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CControls_CIGridStatics3* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CControls_CIGridStatics3* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CControls_CIGridStatics3* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CControls_CIGridStatics3* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_RowSpacingProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CIGridStatics3* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_ColumnSpacingProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CIGridStatics3* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CIGridStatics3Vtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CIGridStatics3
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIGridStatics3Vtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIGridStatics3;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIGridStatics3_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIGridStatics4_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CControls_CIGridStatics4_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIGridStatics4Vtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CControls_CIGridStatics4* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CControls_CIGridStatics4* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CControls_CIGridStatics4* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CControls_CIGridStatics4* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CControls_CIGridStatics4* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CControls_CIGridStatics4* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_BackgroundSizingProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CIGridStatics4* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CIGridStatics4Vtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CIGridStatics4
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIGridStatics4Vtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIGridStatics4;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIGridStatics4_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIGridView_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CControls_CIGridView_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIGridViewVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CControls_CIGridView* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CControls_CIGridView* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CControls_CIGridView* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CControls_CIGridView* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CControls_CIGridView* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CControls_CIGridView* This,
            TrustLevel* trustLevel);
    
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CIGridViewVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CIGridView
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIGridViewVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIGridView;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIGridView_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIGridViewFactory_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CControls_CIGridViewFactory_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIGridViewFactoryVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CControls_CIGridViewFactory* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CControls_CIGridViewFactory* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CControls_CIGridViewFactory* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CControls_CIGridViewFactory* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CControls_CIGridViewFactory* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CControls_CIGridViewFactory* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* CreateInstance)(__x_ABI_CWindows_CUI_CXaml_CControls_CIGridViewFactory* This,
        IInspectable* baseInterface,
        IInspectable** innerInterface,
        __x_ABI_CWindows_CUI_CXaml_CControls_CIGridView** value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CIGridViewFactoryVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CIGridViewFactory
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIGridViewFactoryVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIGridViewFactory;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIGridViewFactory_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIGridViewHeaderItem_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CControls_CIGridViewHeaderItem_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIGridViewHeaderItemVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CControls_CIGridViewHeaderItem* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CControls_CIGridViewHeaderItem* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CControls_CIGridViewHeaderItem* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CControls_CIGridViewHeaderItem* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CControls_CIGridViewHeaderItem* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CControls_CIGridViewHeaderItem* This,
            TrustLevel* trustLevel);
    
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CIGridViewHeaderItemVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CIGridViewHeaderItem
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIGridViewHeaderItemVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIGridViewHeaderItem;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIGridViewHeaderItem_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIGridViewHeaderItemFactory_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CControls_CIGridViewHeaderItemFactory_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIGridViewHeaderItemFactoryVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CControls_CIGridViewHeaderItemFactory* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CControls_CIGridViewHeaderItemFactory* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CControls_CIGridViewHeaderItemFactory* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CControls_CIGridViewHeaderItemFactory* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CControls_CIGridViewHeaderItemFactory* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CControls_CIGridViewHeaderItemFactory* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* CreateInstance)(__x_ABI_CWindows_CUI_CXaml_CControls_CIGridViewHeaderItemFactory* This,
        IInspectable* baseInterface,
        IInspectable** innerInterface,
        __x_ABI_CWindows_CUI_CXaml_CControls_CIGridViewHeaderItem** value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CIGridViewHeaderItemFactoryVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CIGridViewHeaderItemFactory
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIGridViewHeaderItemFactoryVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIGridViewHeaderItemFactory;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIGridViewHeaderItemFactory_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIGridViewItem_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CControls_CIGridViewItem_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIGridViewItemVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CControls_CIGridViewItem* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CControls_CIGridViewItem* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CControls_CIGridViewItem* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CControls_CIGridViewItem* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CControls_CIGridViewItem* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CControls_CIGridViewItem* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_TemplateSettings)(__x_ABI_CWindows_CUI_CXaml_CControls_CIGridViewItem* This,
        __x_ABI_CWindows_CUI_CXaml_CControls_CPrimitives_CIGridViewItemTemplateSettings** value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CIGridViewItemVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CIGridViewItem
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIGridViewItemVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIGridViewItem;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIGridViewItem_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIGridViewItemFactory_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CControls_CIGridViewItemFactory_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIGridViewItemFactoryVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CControls_CIGridViewItemFactory* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CControls_CIGridViewItemFactory* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CControls_CIGridViewItemFactory* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CControls_CIGridViewItemFactory* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CControls_CIGridViewItemFactory* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CControls_CIGridViewItemFactory* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* CreateInstance)(__x_ABI_CWindows_CUI_CXaml_CControls_CIGridViewItemFactory* This,
        IInspectable* baseInterface,
        IInspectable** innerInterface,
        __x_ABI_CWindows_CUI_CXaml_CControls_CIGridViewItem** value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CIGridViewItemFactoryVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CIGridViewItemFactory
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIGridViewItemFactoryVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIGridViewItemFactory;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIGridViewItemFactory_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIGroupItem_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CControls_CIGroupItem_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIGroupItemVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CControls_CIGroupItem* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CControls_CIGroupItem* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CControls_CIGroupItem* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CControls_CIGroupItem* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CControls_CIGroupItem* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CControls_CIGroupItem* This,
            TrustLevel* trustLevel);
    
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CIGroupItemVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CIGroupItem
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIGroupItemVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIGroupItem;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIGroupItem_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIGroupItemFactory_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CControls_CIGroupItemFactory_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIGroupItemFactoryVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CControls_CIGroupItemFactory* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CControls_CIGroupItemFactory* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CControls_CIGroupItemFactory* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CControls_CIGroupItemFactory* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CControls_CIGroupItemFactory* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CControls_CIGroupItemFactory* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* CreateInstance)(__x_ABI_CWindows_CUI_CXaml_CControls_CIGroupItemFactory* This,
        IInspectable* baseInterface,
        IInspectable** innerInterface,
        __x_ABI_CWindows_CUI_CXaml_CControls_CIGroupItem** value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CIGroupItemFactoryVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CIGroupItemFactory
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIGroupItemFactoryVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIGroupItemFactory;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIGroupItemFactory_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIGroupStyle_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CControls_CIGroupStyle_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIGroupStyleVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CControls_CIGroupStyle* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CControls_CIGroupStyle* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CControls_CIGroupStyle* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CControls_CIGroupStyle* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CControls_CIGroupStyle* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CControls_CIGroupStyle* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Panel)(__x_ABI_CWindows_CUI_CXaml_CControls_CIGroupStyle* This,
        __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsPanelTemplate** value);
    HRESULT (STDMETHODCALLTYPE* put_Panel)(__x_ABI_CWindows_CUI_CXaml_CControls_CIGroupStyle* This,
        __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsPanelTemplate* value);
    HRESULT (STDMETHODCALLTYPE* get_ContainerStyle)(__x_ABI_CWindows_CUI_CXaml_CControls_CIGroupStyle* This,
        __x_ABI_CWindows_CUI_CXaml_CIStyle** value);
    HRESULT (STDMETHODCALLTYPE* put_ContainerStyle)(__x_ABI_CWindows_CUI_CXaml_CControls_CIGroupStyle* This,
        __x_ABI_CWindows_CUI_CXaml_CIStyle* value);
    HRESULT (STDMETHODCALLTYPE* get_ContainerStyleSelector)(__x_ABI_CWindows_CUI_CXaml_CControls_CIGroupStyle* This,
        __x_ABI_CWindows_CUI_CXaml_CControls_CIStyleSelector** value);
    HRESULT (STDMETHODCALLTYPE* put_ContainerStyleSelector)(__x_ABI_CWindows_CUI_CXaml_CControls_CIGroupStyle* This,
        __x_ABI_CWindows_CUI_CXaml_CControls_CIStyleSelector* value);
    HRESULT (STDMETHODCALLTYPE* get_HeaderTemplate)(__x_ABI_CWindows_CUI_CXaml_CControls_CIGroupStyle* This,
        __x_ABI_CWindows_CUI_CXaml_CIDataTemplate** value);
    HRESULT (STDMETHODCALLTYPE* put_HeaderTemplate)(__x_ABI_CWindows_CUI_CXaml_CControls_CIGroupStyle* This,
        __x_ABI_CWindows_CUI_CXaml_CIDataTemplate* value);
    HRESULT (STDMETHODCALLTYPE* get_HeaderTemplateSelector)(__x_ABI_CWindows_CUI_CXaml_CControls_CIGroupStyle* This,
        __x_ABI_CWindows_CUI_CXaml_CControls_CIDataTemplateSelector** value);
    HRESULT (STDMETHODCALLTYPE* put_HeaderTemplateSelector)(__x_ABI_CWindows_CUI_CXaml_CControls_CIGroupStyle* This,
        __x_ABI_CWindows_CUI_CXaml_CControls_CIDataTemplateSelector* value);
    HRESULT (STDMETHODCALLTYPE* get_HidesIfEmpty)(__x_ABI_CWindows_CUI_CXaml_CControls_CIGroupStyle* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* put_HidesIfEmpty)(__x_ABI_CWindows_CUI_CXaml_CControls_CIGroupStyle* This,
        boolean value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CIGroupStyleVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CIGroupStyle
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIGroupStyleVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIGroupStyle;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIGroupStyle_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIGroupStyle2_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CControls_CIGroupStyle2_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIGroupStyle2Vtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CControls_CIGroupStyle2* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CControls_CIGroupStyle2* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CControls_CIGroupStyle2* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CControls_CIGroupStyle2* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CControls_CIGroupStyle2* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CControls_CIGroupStyle2* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_HeaderContainerStyle)(__x_ABI_CWindows_CUI_CXaml_CControls_CIGroupStyle2* This,
        __x_ABI_CWindows_CUI_CXaml_CIStyle** value);
    HRESULT (STDMETHODCALLTYPE* put_HeaderContainerStyle)(__x_ABI_CWindows_CUI_CXaml_CControls_CIGroupStyle2* This,
        __x_ABI_CWindows_CUI_CXaml_CIStyle* value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CIGroupStyle2Vtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CIGroupStyle2
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIGroupStyle2Vtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIGroupStyle2;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIGroupStyle2_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIGroupStyleFactory_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CControls_CIGroupStyleFactory_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIGroupStyleFactoryVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CControls_CIGroupStyleFactory* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CControls_CIGroupStyleFactory* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CControls_CIGroupStyleFactory* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CControls_CIGroupStyleFactory* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CControls_CIGroupStyleFactory* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CControls_CIGroupStyleFactory* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* CreateInstance)(__x_ABI_CWindows_CUI_CXaml_CControls_CIGroupStyleFactory* This,
        IInspectable* baseInterface,
        IInspectable** innerInterface,
        __x_ABI_CWindows_CUI_CXaml_CControls_CIGroupStyle** value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CIGroupStyleFactoryVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CIGroupStyleFactory
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIGroupStyleFactoryVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIGroupStyleFactory;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIGroupStyleFactory_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIGroupStyleSelector_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CControls_CIGroupStyleSelector_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIGroupStyleSelectorVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CControls_CIGroupStyleSelector* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CControls_CIGroupStyleSelector* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CControls_CIGroupStyleSelector* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CControls_CIGroupStyleSelector* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CControls_CIGroupStyleSelector* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CControls_CIGroupStyleSelector* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* SelectGroupStyle)(__x_ABI_CWindows_CUI_CXaml_CControls_CIGroupStyleSelector* This,
        IInspectable* group,
        UINT32 level,
        __x_ABI_CWindows_CUI_CXaml_CControls_CIGroupStyle** result);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CIGroupStyleSelectorVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CIGroupStyleSelector
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIGroupStyleSelectorVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIGroupStyleSelector;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIGroupStyleSelector_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIGroupStyleSelectorFactory_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CControls_CIGroupStyleSelectorFactory_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIGroupStyleSelectorFactoryVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CControls_CIGroupStyleSelectorFactory* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CControls_CIGroupStyleSelectorFactory* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CControls_CIGroupStyleSelectorFactory* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CControls_CIGroupStyleSelectorFactory* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CControls_CIGroupStyleSelectorFactory* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CControls_CIGroupStyleSelectorFactory* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* CreateInstance)(__x_ABI_CWindows_CUI_CXaml_CControls_CIGroupStyleSelectorFactory* This,
        IInspectable* baseInterface,
        IInspectable** innerInterface,
        __x_ABI_CWindows_CUI_CXaml_CControls_CIGroupStyleSelector** value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CIGroupStyleSelectorFactoryVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CIGroupStyleSelectorFactory
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIGroupStyleSelectorFactoryVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIGroupStyleSelectorFactory;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIGroupStyleSelectorFactory_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIGroupStyleSelectorOverrides_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CControls_CIGroupStyleSelectorOverrides_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIGroupStyleSelectorOverridesVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CControls_CIGroupStyleSelectorOverrides* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CControls_CIGroupStyleSelectorOverrides* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CControls_CIGroupStyleSelectorOverrides* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CControls_CIGroupStyleSelectorOverrides* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CControls_CIGroupStyleSelectorOverrides* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CControls_CIGroupStyleSelectorOverrides* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* SelectGroupStyleCore)(__x_ABI_CWindows_CUI_CXaml_CControls_CIGroupStyleSelectorOverrides* This,
        IInspectable* group,
        UINT32 level,
        __x_ABI_CWindows_CUI_CXaml_CControls_CIGroupStyle** result);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CIGroupStyleSelectorOverridesVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CIGroupStyleSelectorOverrides
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIGroupStyleSelectorOverridesVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIGroupStyleSelectorOverrides;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIGroupStyleSelectorOverrides_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIHandwritingPanelClosedEventArgs_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CControls_CIHandwritingPanelClosedEventArgs_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIHandwritingPanelClosedEventArgsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CControls_CIHandwritingPanelClosedEventArgs* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CControls_CIHandwritingPanelClosedEventArgs* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CControls_CIHandwritingPanelClosedEventArgs* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CControls_CIHandwritingPanelClosedEventArgs* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CControls_CIHandwritingPanelClosedEventArgs* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CControls_CIHandwritingPanelClosedEventArgs* This,
            TrustLevel* trustLevel);
    
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CIHandwritingPanelClosedEventArgsVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CIHandwritingPanelClosedEventArgs
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIHandwritingPanelClosedEventArgsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIHandwritingPanelClosedEventArgs;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIHandwritingPanelClosedEventArgs_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIHandwritingPanelOpenedEventArgs_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CControls_CIHandwritingPanelOpenedEventArgs_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIHandwritingPanelOpenedEventArgsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CControls_CIHandwritingPanelOpenedEventArgs* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CControls_CIHandwritingPanelOpenedEventArgs* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CControls_CIHandwritingPanelOpenedEventArgs* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CControls_CIHandwritingPanelOpenedEventArgs* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CControls_CIHandwritingPanelOpenedEventArgs* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CControls_CIHandwritingPanelOpenedEventArgs* This,
            TrustLevel* trustLevel);
    
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CIHandwritingPanelOpenedEventArgsVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CIHandwritingPanelOpenedEventArgs
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIHandwritingPanelOpenedEventArgsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIHandwritingPanelOpenedEventArgs;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIHandwritingPanelOpenedEventArgs_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIHandwritingView_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CControls_CIHandwritingView_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIHandwritingViewVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CControls_CIHandwritingView* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CControls_CIHandwritingView* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CControls_CIHandwritingView* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CControls_CIHandwritingView* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CControls_CIHandwritingView* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CControls_CIHandwritingView* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_PlacementTarget)(__x_ABI_CWindows_CUI_CXaml_CControls_CIHandwritingView* This,
        __x_ABI_CWindows_CUI_CXaml_CIUIElement** value);
    HRESULT (STDMETHODCALLTYPE* put_PlacementTarget)(__x_ABI_CWindows_CUI_CXaml_CControls_CIHandwritingView* This,
        __x_ABI_CWindows_CUI_CXaml_CIUIElement* value);
    HRESULT (STDMETHODCALLTYPE* get_PlacementAlignment)(__x_ABI_CWindows_CUI_CXaml_CControls_CIHandwritingView* This,
        enum __x_ABI_CWindows_CUI_CXaml_CControls_CHandwritingPanelPlacementAlignment* value);
    HRESULT (STDMETHODCALLTYPE* put_PlacementAlignment)(__x_ABI_CWindows_CUI_CXaml_CControls_CIHandwritingView* This,
        enum __x_ABI_CWindows_CUI_CXaml_CControls_CHandwritingPanelPlacementAlignment value);
    HRESULT (STDMETHODCALLTYPE* get_IsOpen)(__x_ABI_CWindows_CUI_CXaml_CControls_CIHandwritingView* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* get_AreCandidatesEnabled)(__x_ABI_CWindows_CUI_CXaml_CControls_CIHandwritingView* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* put_AreCandidatesEnabled)(__x_ABI_CWindows_CUI_CXaml_CControls_CIHandwritingView* This,
        boolean value);
    HRESULT (STDMETHODCALLTYPE* add_Opened)(__x_ABI_CWindows_CUI_CXaml_CControls_CIHandwritingView* This,
        __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CHandwritingView___x_ABI_CWindows__CUI__CXaml__CControls__CHandwritingPanelOpenedEventArgs* handler,
        EventRegistrationToken* token);
    HRESULT (STDMETHODCALLTYPE* remove_Opened)(__x_ABI_CWindows_CUI_CXaml_CControls_CIHandwritingView* This,
        EventRegistrationToken token);
    HRESULT (STDMETHODCALLTYPE* add_Closed)(__x_ABI_CWindows_CUI_CXaml_CControls_CIHandwritingView* This,
        __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CHandwritingView___x_ABI_CWindows__CUI__CXaml__CControls__CHandwritingPanelClosedEventArgs* handler,
        EventRegistrationToken* token);
    HRESULT (STDMETHODCALLTYPE* remove_Closed)(__x_ABI_CWindows_CUI_CXaml_CControls_CIHandwritingView* This,
        EventRegistrationToken token);
    HRESULT (STDMETHODCALLTYPE* TryClose)(__x_ABI_CWindows_CUI_CXaml_CControls_CIHandwritingView* This,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* TryOpen)(__x_ABI_CWindows_CUI_CXaml_CControls_CIHandwritingView* This,
        boolean* result);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CIHandwritingViewVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CIHandwritingView
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIHandwritingViewVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIHandwritingView;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIHandwritingView_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIHandwritingViewFactory_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CControls_CIHandwritingViewFactory_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIHandwritingViewFactoryVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CControls_CIHandwritingViewFactory* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CControls_CIHandwritingViewFactory* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CControls_CIHandwritingViewFactory* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CControls_CIHandwritingViewFactory* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CControls_CIHandwritingViewFactory* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CControls_CIHandwritingViewFactory* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* CreateInstance)(__x_ABI_CWindows_CUI_CXaml_CControls_CIHandwritingViewFactory* This,
        IInspectable* baseInterface,
        IInspectable** innerInterface,
        __x_ABI_CWindows_CUI_CXaml_CControls_CIHandwritingView** value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CIHandwritingViewFactoryVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CIHandwritingViewFactory
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIHandwritingViewFactoryVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIHandwritingViewFactory;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIHandwritingViewFactory_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIHandwritingViewStatics_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CControls_CIHandwritingViewStatics_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIHandwritingViewStaticsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CControls_CIHandwritingViewStatics* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CControls_CIHandwritingViewStatics* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CControls_CIHandwritingViewStatics* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CControls_CIHandwritingViewStatics* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CControls_CIHandwritingViewStatics* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CControls_CIHandwritingViewStatics* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_PlacementTargetProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CIHandwritingViewStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_PlacementAlignmentProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CIHandwritingViewStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_IsOpenProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CIHandwritingViewStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_AreCandidatesEnabledProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CIHandwritingViewStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CIHandwritingViewStaticsVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CIHandwritingViewStatics
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIHandwritingViewStaticsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIHandwritingViewStatics;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIHandwritingViewStatics_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIHub_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CControls_CIHub_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIHubVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CControls_CIHub* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CControls_CIHub* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CControls_CIHub* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CControls_CIHub* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CControls_CIHub* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CControls_CIHub* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Header)(__x_ABI_CWindows_CUI_CXaml_CControls_CIHub* This,
        IInspectable** value);
    HRESULT (STDMETHODCALLTYPE* put_Header)(__x_ABI_CWindows_CUI_CXaml_CControls_CIHub* This,
        IInspectable* value);
    HRESULT (STDMETHODCALLTYPE* get_HeaderTemplate)(__x_ABI_CWindows_CUI_CXaml_CControls_CIHub* This,
        __x_ABI_CWindows_CUI_CXaml_CIDataTemplate** value);
    HRESULT (STDMETHODCALLTYPE* put_HeaderTemplate)(__x_ABI_CWindows_CUI_CXaml_CControls_CIHub* This,
        __x_ABI_CWindows_CUI_CXaml_CIDataTemplate* value);
    HRESULT (STDMETHODCALLTYPE* get_Orientation)(__x_ABI_CWindows_CUI_CXaml_CControls_CIHub* This,
        enum __x_ABI_CWindows_CUI_CXaml_CControls_COrientation* value);
    HRESULT (STDMETHODCALLTYPE* put_Orientation)(__x_ABI_CWindows_CUI_CXaml_CControls_CIHub* This,
        enum __x_ABI_CWindows_CUI_CXaml_CControls_COrientation value);
    HRESULT (STDMETHODCALLTYPE* get_DefaultSectionIndex)(__x_ABI_CWindows_CUI_CXaml_CControls_CIHub* This,
        INT32* value);
    HRESULT (STDMETHODCALLTYPE* put_DefaultSectionIndex)(__x_ABI_CWindows_CUI_CXaml_CControls_CIHub* This,
        INT32 value);
    HRESULT (STDMETHODCALLTYPE* get_Sections)(__x_ABI_CWindows_CUI_CXaml_CControls_CIHub* This,
        __x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CXaml__CControls__CHubSection** value);
    HRESULT (STDMETHODCALLTYPE* get_SectionsInView)(__x_ABI_CWindows_CUI_CXaml_CControls_CIHub* This,
        __x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CXaml__CControls__CHubSection** value);
    HRESULT (STDMETHODCALLTYPE* get_SectionHeaders)(__x_ABI_CWindows_CUI_CXaml_CControls_CIHub* This,
        __x_ABI_C__FIObservableVector_1_IInspectable** value);
    HRESULT (STDMETHODCALLTYPE* add_SectionHeaderClick)(__x_ABI_CWindows_CUI_CXaml_CControls_CIHub* This,
        __x_ABI_CWindows_CUI_CXaml_CControls_CIHubSectionHeaderClickEventHandler* handler,
        EventRegistrationToken* token);
    HRESULT (STDMETHODCALLTYPE* remove_SectionHeaderClick)(__x_ABI_CWindows_CUI_CXaml_CControls_CIHub* This,
        EventRegistrationToken token);
    HRESULT (STDMETHODCALLTYPE* add_SectionsInViewChanged)(__x_ABI_CWindows_CUI_CXaml_CControls_CIHub* This,
        __x_ABI_CWindows_CUI_CXaml_CControls_CISectionsInViewChangedEventHandler* handler,
        EventRegistrationToken* token);
    HRESULT (STDMETHODCALLTYPE* remove_SectionsInViewChanged)(__x_ABI_CWindows_CUI_CXaml_CControls_CIHub* This,
        EventRegistrationToken token);
    HRESULT (STDMETHODCALLTYPE* ScrollToSection)(__x_ABI_CWindows_CUI_CXaml_CControls_CIHub* This,
        __x_ABI_CWindows_CUI_CXaml_CControls_CIHubSection* section);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CIHubVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CIHub
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIHubVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIHub;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIHub_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIHubFactory_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CControls_CIHubFactory_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIHubFactoryVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CControls_CIHubFactory* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CControls_CIHubFactory* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CControls_CIHubFactory* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CControls_CIHubFactory* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CControls_CIHubFactory* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CControls_CIHubFactory* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* CreateInstance)(__x_ABI_CWindows_CUI_CXaml_CControls_CIHubFactory* This,
        IInspectable* baseInterface,
        IInspectable** innerInterface,
        __x_ABI_CWindows_CUI_CXaml_CControls_CIHub** value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CIHubFactoryVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CIHubFactory
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIHubFactoryVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIHubFactory;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIHubFactory_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIHubSection_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CControls_CIHubSection_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIHubSectionVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CControls_CIHubSection* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CControls_CIHubSection* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CControls_CIHubSection* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CControls_CIHubSection* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CControls_CIHubSection* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CControls_CIHubSection* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Header)(__x_ABI_CWindows_CUI_CXaml_CControls_CIHubSection* This,
        IInspectable** value);
    HRESULT (STDMETHODCALLTYPE* put_Header)(__x_ABI_CWindows_CUI_CXaml_CControls_CIHubSection* This,
        IInspectable* value);
    HRESULT (STDMETHODCALLTYPE* get_HeaderTemplate)(__x_ABI_CWindows_CUI_CXaml_CControls_CIHubSection* This,
        __x_ABI_CWindows_CUI_CXaml_CIDataTemplate** value);
    HRESULT (STDMETHODCALLTYPE* put_HeaderTemplate)(__x_ABI_CWindows_CUI_CXaml_CControls_CIHubSection* This,
        __x_ABI_CWindows_CUI_CXaml_CIDataTemplate* value);
    HRESULT (STDMETHODCALLTYPE* get_ContentTemplate)(__x_ABI_CWindows_CUI_CXaml_CControls_CIHubSection* This,
        __x_ABI_CWindows_CUI_CXaml_CIDataTemplate** value);
    HRESULT (STDMETHODCALLTYPE* put_ContentTemplate)(__x_ABI_CWindows_CUI_CXaml_CControls_CIHubSection* This,
        __x_ABI_CWindows_CUI_CXaml_CIDataTemplate* value);
    HRESULT (STDMETHODCALLTYPE* get_IsHeaderInteractive)(__x_ABI_CWindows_CUI_CXaml_CControls_CIHubSection* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* put_IsHeaderInteractive)(__x_ABI_CWindows_CUI_CXaml_CControls_CIHubSection* This,
        boolean value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CIHubSectionVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CIHubSection
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIHubSectionVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIHubSection;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIHubSection_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIHubSectionFactory_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CControls_CIHubSectionFactory_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIHubSectionFactoryVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CControls_CIHubSectionFactory* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CControls_CIHubSectionFactory* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CControls_CIHubSectionFactory* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CControls_CIHubSectionFactory* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CControls_CIHubSectionFactory* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CControls_CIHubSectionFactory* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* CreateInstance)(__x_ABI_CWindows_CUI_CXaml_CControls_CIHubSectionFactory* This,
        IInspectable* baseInterface,
        IInspectable** innerInterface,
        __x_ABI_CWindows_CUI_CXaml_CControls_CIHubSection** value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CIHubSectionFactoryVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CIHubSectionFactory
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIHubSectionFactoryVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIHubSectionFactory;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIHubSectionFactory_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIHubSectionHeaderClickEventArgs_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CControls_CIHubSectionHeaderClickEventArgs_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIHubSectionHeaderClickEventArgsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CControls_CIHubSectionHeaderClickEventArgs* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CControls_CIHubSectionHeaderClickEventArgs* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CControls_CIHubSectionHeaderClickEventArgs* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CControls_CIHubSectionHeaderClickEventArgs* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CControls_CIHubSectionHeaderClickEventArgs* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CControls_CIHubSectionHeaderClickEventArgs* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Section)(__x_ABI_CWindows_CUI_CXaml_CControls_CIHubSectionHeaderClickEventArgs* This,
        __x_ABI_CWindows_CUI_CXaml_CControls_CIHubSection** value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CIHubSectionHeaderClickEventArgsVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CIHubSectionHeaderClickEventArgs
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIHubSectionHeaderClickEventArgsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIHubSectionHeaderClickEventArgs;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIHubSectionHeaderClickEventArgs_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIHubSectionStatics_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CControls_CIHubSectionStatics_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIHubSectionStaticsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CControls_CIHubSectionStatics* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CControls_CIHubSectionStatics* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CControls_CIHubSectionStatics* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CControls_CIHubSectionStatics* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CControls_CIHubSectionStatics* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CControls_CIHubSectionStatics* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_HeaderProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CIHubSectionStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_HeaderTemplateProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CIHubSectionStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_ContentTemplateProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CIHubSectionStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_IsHeaderInteractiveProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CIHubSectionStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CIHubSectionStaticsVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CIHubSectionStatics
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIHubSectionStaticsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIHubSectionStatics;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIHubSectionStatics_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIHubStatics_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CControls_CIHubStatics_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIHubStaticsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CControls_CIHubStatics* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CControls_CIHubStatics* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CControls_CIHubStatics* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CControls_CIHubStatics* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CControls_CIHubStatics* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CControls_CIHubStatics* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_HeaderProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CIHubStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_HeaderTemplateProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CIHubStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_OrientationProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CIHubStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_DefaultSectionIndexProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CIHubStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_SemanticZoomOwnerProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CIHubStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_IsActiveViewProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CIHubStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_IsZoomedInViewProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CIHubStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CIHubStaticsVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CIHubStatics
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIHubStaticsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIHubStatics;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIHubStatics_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIHyperlinkButton_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CControls_CIHyperlinkButton_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIHyperlinkButtonVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CControls_CIHyperlinkButton* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CControls_CIHyperlinkButton* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CControls_CIHyperlinkButton* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CControls_CIHyperlinkButton* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CControls_CIHyperlinkButton* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CControls_CIHyperlinkButton* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_NavigateUri)(__x_ABI_CWindows_CUI_CXaml_CControls_CIHyperlinkButton* This,
        __x_ABI_CWindows_CFoundation_CIUriRuntimeClass** value);
    HRESULT (STDMETHODCALLTYPE* put_NavigateUri)(__x_ABI_CWindows_CUI_CXaml_CControls_CIHyperlinkButton* This,
        __x_ABI_CWindows_CFoundation_CIUriRuntimeClass* value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CIHyperlinkButtonVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CIHyperlinkButton
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIHyperlinkButtonVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIHyperlinkButton;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIHyperlinkButton_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIHyperlinkButtonFactory_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CControls_CIHyperlinkButtonFactory_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIHyperlinkButtonFactoryVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CControls_CIHyperlinkButtonFactory* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CControls_CIHyperlinkButtonFactory* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CControls_CIHyperlinkButtonFactory* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CControls_CIHyperlinkButtonFactory* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CControls_CIHyperlinkButtonFactory* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CControls_CIHyperlinkButtonFactory* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* CreateInstance)(__x_ABI_CWindows_CUI_CXaml_CControls_CIHyperlinkButtonFactory* This,
        IInspectable* baseInterface,
        IInspectable** innerInterface,
        __x_ABI_CWindows_CUI_CXaml_CControls_CIHyperlinkButton** value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CIHyperlinkButtonFactoryVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CIHyperlinkButtonFactory
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIHyperlinkButtonFactoryVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIHyperlinkButtonFactory;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIHyperlinkButtonFactory_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIHyperlinkButtonStatics_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CControls_CIHyperlinkButtonStatics_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIHyperlinkButtonStaticsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CControls_CIHyperlinkButtonStatics* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CControls_CIHyperlinkButtonStatics* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CControls_CIHyperlinkButtonStatics* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CControls_CIHyperlinkButtonStatics* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CControls_CIHyperlinkButtonStatics* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CControls_CIHyperlinkButtonStatics* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_NavigateUriProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CIHyperlinkButtonStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CIHyperlinkButtonStaticsVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CIHyperlinkButtonStatics
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIHyperlinkButtonStaticsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIHyperlinkButtonStatics;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIHyperlinkButtonStatics_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIIconElement_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CControls_CIIconElement_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIIconElementVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CControls_CIIconElement* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CControls_CIIconElement* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CControls_CIIconElement* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CControls_CIIconElement* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CControls_CIIconElement* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CControls_CIIconElement* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Foreground)(__x_ABI_CWindows_CUI_CXaml_CControls_CIIconElement* This,
        __x_ABI_CWindows_CUI_CXaml_CMedia_CIBrush** value);
    HRESULT (STDMETHODCALLTYPE* put_Foreground)(__x_ABI_CWindows_CUI_CXaml_CControls_CIIconElement* This,
        __x_ABI_CWindows_CUI_CXaml_CMedia_CIBrush* value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CIIconElementVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CIIconElement
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIIconElementVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIIconElement;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIIconElement_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIIconElementFactory_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CControls_CIIconElementFactory_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIIconElementFactoryVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CControls_CIIconElementFactory* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CControls_CIIconElementFactory* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CControls_CIIconElementFactory* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CControls_CIIconElementFactory* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CControls_CIIconElementFactory* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CControls_CIIconElementFactory* This,
            TrustLevel* trustLevel);
    
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CIIconElementFactoryVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CIIconElementFactory
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIIconElementFactoryVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIIconElementFactory;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIIconElementFactory_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIIconElementStatics_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CControls_CIIconElementStatics_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIIconElementStaticsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CControls_CIIconElementStatics* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CControls_CIIconElementStatics* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CControls_CIIconElementStatics* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CControls_CIIconElementStatics* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CControls_CIIconElementStatics* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CControls_CIIconElementStatics* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_ForegroundProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CIIconElementStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CIIconElementStaticsVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CIIconElementStatics
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIIconElementStaticsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIIconElementStatics;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIIconElementStatics_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIIconSource_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CControls_CIIconSource_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIIconSourceVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CControls_CIIconSource* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CControls_CIIconSource* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CControls_CIIconSource* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CControls_CIIconSource* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CControls_CIIconSource* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CControls_CIIconSource* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Foreground)(__x_ABI_CWindows_CUI_CXaml_CControls_CIIconSource* This,
        __x_ABI_CWindows_CUI_CXaml_CMedia_CIBrush** value);
    HRESULT (STDMETHODCALLTYPE* put_Foreground)(__x_ABI_CWindows_CUI_CXaml_CControls_CIIconSource* This,
        __x_ABI_CWindows_CUI_CXaml_CMedia_CIBrush* value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CIIconSourceVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CIIconSource
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIIconSourceVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIIconSource;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIIconSource_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIIconSourceElement_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CControls_CIIconSourceElement_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIIconSourceElementVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CControls_CIIconSourceElement* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CControls_CIIconSourceElement* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CControls_CIIconSourceElement* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CControls_CIIconSourceElement* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CControls_CIIconSourceElement* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CControls_CIIconSourceElement* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_IconSource)(__x_ABI_CWindows_CUI_CXaml_CControls_CIIconSourceElement* This,
        __x_ABI_CWindows_CUI_CXaml_CControls_CIIconSource** value);
    HRESULT (STDMETHODCALLTYPE* put_IconSource)(__x_ABI_CWindows_CUI_CXaml_CControls_CIIconSourceElement* This,
        __x_ABI_CWindows_CUI_CXaml_CControls_CIIconSource* value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CIIconSourceElementVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CIIconSourceElement
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIIconSourceElementVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIIconSourceElement;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIIconSourceElement_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIIconSourceElementFactory_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CControls_CIIconSourceElementFactory_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIIconSourceElementFactoryVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CControls_CIIconSourceElementFactory* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CControls_CIIconSourceElementFactory* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CControls_CIIconSourceElementFactory* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CControls_CIIconSourceElementFactory* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CControls_CIIconSourceElementFactory* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CControls_CIIconSourceElementFactory* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* CreateInstance)(__x_ABI_CWindows_CUI_CXaml_CControls_CIIconSourceElementFactory* This,
        IInspectable* baseInterface,
        IInspectable** innerInterface,
        __x_ABI_CWindows_CUI_CXaml_CControls_CIIconSourceElement** value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CIIconSourceElementFactoryVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CIIconSourceElementFactory
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIIconSourceElementFactoryVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIIconSourceElementFactory;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIIconSourceElementFactory_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIIconSourceElementStatics_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CControls_CIIconSourceElementStatics_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIIconSourceElementStaticsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CControls_CIIconSourceElementStatics* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CControls_CIIconSourceElementStatics* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CControls_CIIconSourceElementStatics* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CControls_CIIconSourceElementStatics* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CControls_CIIconSourceElementStatics* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CControls_CIIconSourceElementStatics* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_IconSourceProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CIIconSourceElementStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CIIconSourceElementStaticsVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CIIconSourceElementStatics
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIIconSourceElementStaticsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIIconSourceElementStatics;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIIconSourceElementStatics_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIIconSourceFactory_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CControls_CIIconSourceFactory_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIIconSourceFactoryVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CControls_CIIconSourceFactory* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CControls_CIIconSourceFactory* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CControls_CIIconSourceFactory* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CControls_CIIconSourceFactory* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CControls_CIIconSourceFactory* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CControls_CIIconSourceFactory* This,
            TrustLevel* trustLevel);
    
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CIIconSourceFactoryVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CIIconSourceFactory
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIIconSourceFactoryVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIIconSourceFactory;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIIconSourceFactory_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIIconSourceStatics_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CControls_CIIconSourceStatics_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIIconSourceStaticsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CControls_CIIconSourceStatics* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CControls_CIIconSourceStatics* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CControls_CIIconSourceStatics* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CControls_CIIconSourceStatics* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CControls_CIIconSourceStatics* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CControls_CIIconSourceStatics* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_ForegroundProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CIIconSourceStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CIIconSourceStaticsVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CIIconSourceStatics
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIIconSourceStaticsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIIconSourceStatics;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIIconSourceStatics_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIImage_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CControls_CIImage_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIImageVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CControls_CIImage* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CControls_CIImage* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CControls_CIImage* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CControls_CIImage* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CControls_CIImage* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CControls_CIImage* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Source)(__x_ABI_CWindows_CUI_CXaml_CControls_CIImage* This,
        __x_ABI_CWindows_CUI_CXaml_CMedia_CIImageSource** value);
    HRESULT (STDMETHODCALLTYPE* put_Source)(__x_ABI_CWindows_CUI_CXaml_CControls_CIImage* This,
        __x_ABI_CWindows_CUI_CXaml_CMedia_CIImageSource* value);
    HRESULT (STDMETHODCALLTYPE* get_Stretch)(__x_ABI_CWindows_CUI_CXaml_CControls_CIImage* This,
        enum __x_ABI_CWindows_CUI_CXaml_CMedia_CStretch* value);
    HRESULT (STDMETHODCALLTYPE* put_Stretch)(__x_ABI_CWindows_CUI_CXaml_CControls_CIImage* This,
        enum __x_ABI_CWindows_CUI_CXaml_CMedia_CStretch value);
    HRESULT (STDMETHODCALLTYPE* get_NineGrid)(__x_ABI_CWindows_CUI_CXaml_CControls_CIImage* This,
        struct __x_ABI_CWindows_CUI_CXaml_CThickness* value);
    HRESULT (STDMETHODCALLTYPE* put_NineGrid)(__x_ABI_CWindows_CUI_CXaml_CControls_CIImage* This,
        struct __x_ABI_CWindows_CUI_CXaml_CThickness value);
    HRESULT (STDMETHODCALLTYPE* get_PlayToSource)(__x_ABI_CWindows_CUI_CXaml_CControls_CIImage* This,
        __x_ABI_CWindows_CMedia_CPlayTo_CIPlayToSource** value);
    HRESULT (STDMETHODCALLTYPE* add_ImageFailed)(__x_ABI_CWindows_CUI_CXaml_CControls_CIImage* This,
        __x_ABI_CWindows_CUI_CXaml_CIExceptionRoutedEventHandler* handler,
        EventRegistrationToken* token);
    HRESULT (STDMETHODCALLTYPE* remove_ImageFailed)(__x_ABI_CWindows_CUI_CXaml_CControls_CIImage* This,
        EventRegistrationToken token);
    HRESULT (STDMETHODCALLTYPE* add_ImageOpened)(__x_ABI_CWindows_CUI_CXaml_CControls_CIImage* This,
        __x_ABI_CWindows_CUI_CXaml_CIRoutedEventHandler* handler,
        EventRegistrationToken* token);
    HRESULT (STDMETHODCALLTYPE* remove_ImageOpened)(__x_ABI_CWindows_CUI_CXaml_CControls_CIImage* This,
        EventRegistrationToken token);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CIImageVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CIImage
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIImageVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIImage;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIImage_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIImage2_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CControls_CIImage2_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIImage2Vtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CControls_CIImage2* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CControls_CIImage2* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CControls_CIImage2* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CControls_CIImage2* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CControls_CIImage2* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CControls_CIImage2* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* GetAsCastingSource)(__x_ABI_CWindows_CUI_CXaml_CControls_CIImage2* This,
        __x_ABI_CWindows_CMedia_CCasting_CICastingSource** result);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CIImage2Vtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CIImage2
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIImage2Vtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIImage2;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIImage2_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIImage3_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CControls_CIImage3_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIImage3Vtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CControls_CIImage3* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CControls_CIImage3* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CControls_CIImage3* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CControls_CIImage3* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CControls_CIImage3* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CControls_CIImage3* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* GetAlphaMask)(__x_ABI_CWindows_CUI_CXaml_CControls_CIImage3* This,
        __x_ABI_CWindows_CUI_CComposition_CICompositionBrush** result);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CIImage3Vtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CIImage3
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIImage3Vtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIImage3;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIImage3_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIImageStatics_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CControls_CIImageStatics_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIImageStaticsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CControls_CIImageStatics* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CControls_CIImageStatics* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CControls_CIImageStatics* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CControls_CIImageStatics* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CControls_CIImageStatics* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CControls_CIImageStatics* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_SourceProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CIImageStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_StretchProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CIImageStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_NineGridProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CIImageStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_PlayToSourceProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CIImageStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CIImageStaticsVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CIImageStatics
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIImageStaticsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIImageStatics;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIImageStatics_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIInkCanvas_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CControls_CIInkCanvas_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIInkCanvasVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CControls_CIInkCanvas* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CControls_CIInkCanvas* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CControls_CIInkCanvas* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CControls_CIInkCanvas* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CControls_CIInkCanvas* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CControls_CIInkCanvas* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_InkPresenter)(__x_ABI_CWindows_CUI_CXaml_CControls_CIInkCanvas* This,
        __x_ABI_CWindows_CUI_CInput_CInking_CIInkPresenter** value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CIInkCanvasVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CIInkCanvas
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIInkCanvasVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIInkCanvas;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIInkCanvas_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIInkCanvasFactory_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CControls_CIInkCanvasFactory_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIInkCanvasFactoryVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CControls_CIInkCanvasFactory* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CControls_CIInkCanvasFactory* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CControls_CIInkCanvasFactory* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CControls_CIInkCanvasFactory* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CControls_CIInkCanvasFactory* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CControls_CIInkCanvasFactory* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* CreateInstance)(__x_ABI_CWindows_CUI_CXaml_CControls_CIInkCanvasFactory* This,
        IInspectable* baseInterface,
        IInspectable** innerInterface,
        __x_ABI_CWindows_CUI_CXaml_CControls_CIInkCanvas** value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CIInkCanvasFactoryVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CIInkCanvasFactory
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIInkCanvasFactoryVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIInkCanvasFactory;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIInkCanvasFactory_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbar_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbar_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbar* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbar* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbar* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbar* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbar* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbar* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_InitialControls)(__x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbar* This,
        enum __x_ABI_CWindows_CUI_CXaml_CControls_CInkToolbarInitialControls* value);
    HRESULT (STDMETHODCALLTYPE* put_InitialControls)(__x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbar* This,
        enum __x_ABI_CWindows_CUI_CXaml_CControls_CInkToolbarInitialControls value);
    HRESULT (STDMETHODCALLTYPE* get_Children)(__x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbar* This,
        __x_ABI_C__FIObservableVector_1___x_ABI_CWindows__CUI__CXaml__CDependencyObject** value);
    HRESULT (STDMETHODCALLTYPE* get_ActiveTool)(__x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbar* This,
        __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarToolButton** value);
    HRESULT (STDMETHODCALLTYPE* put_ActiveTool)(__x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbar* This,
        __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarToolButton* value);
    HRESULT (STDMETHODCALLTYPE* get_InkDrawingAttributes)(__x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbar* This,
        __x_ABI_CWindows_CUI_CInput_CInking_CIInkDrawingAttributes** value);
    HRESULT (STDMETHODCALLTYPE* get_IsRulerButtonChecked)(__x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbar* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* put_IsRulerButtonChecked)(__x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbar* This,
        boolean value);
    HRESULT (STDMETHODCALLTYPE* get_TargetInkCanvas)(__x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbar* This,
        __x_ABI_CWindows_CUI_CXaml_CControls_CIInkCanvas** value);
    HRESULT (STDMETHODCALLTYPE* put_TargetInkCanvas)(__x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbar* This,
        __x_ABI_CWindows_CUI_CXaml_CControls_CIInkCanvas* value);
    HRESULT (STDMETHODCALLTYPE* add_ActiveToolChanged)(__x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbar* This,
        __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CInkToolbar_IInspectable* handler,
        EventRegistrationToken* token);
    HRESULT (STDMETHODCALLTYPE* remove_ActiveToolChanged)(__x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbar* This,
        EventRegistrationToken token);
    HRESULT (STDMETHODCALLTYPE* add_InkDrawingAttributesChanged)(__x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbar* This,
        __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CInkToolbar_IInspectable* handler,
        EventRegistrationToken* token);
    HRESULT (STDMETHODCALLTYPE* remove_InkDrawingAttributesChanged)(__x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbar* This,
        EventRegistrationToken token);
    HRESULT (STDMETHODCALLTYPE* add_EraseAllClicked)(__x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbar* This,
        __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CInkToolbar_IInspectable* handler,
        EventRegistrationToken* token);
    HRESULT (STDMETHODCALLTYPE* remove_EraseAllClicked)(__x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbar* This,
        EventRegistrationToken token);
    HRESULT (STDMETHODCALLTYPE* add_IsRulerButtonCheckedChanged)(__x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbar* This,
        __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CInkToolbar_IInspectable* handler,
        EventRegistrationToken* token);
    HRESULT (STDMETHODCALLTYPE* remove_IsRulerButtonCheckedChanged)(__x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbar* This,
        EventRegistrationToken token);
    HRESULT (STDMETHODCALLTYPE* GetToolButton)(__x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbar* This,
        enum __x_ABI_CWindows_CUI_CXaml_CControls_CInkToolbarTool tool,
        __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarToolButton** result);
    HRESULT (STDMETHODCALLTYPE* GetToggleButton)(__x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbar* This,
        enum __x_ABI_CWindows_CUI_CXaml_CControls_CInkToolbarToggle tool,
        __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarToggleButton** result);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbar
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbar;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbar_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbar2_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbar2_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbar2Vtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbar2* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbar2* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbar2* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbar2* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbar2* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbar2* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_IsStencilButtonChecked)(__x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbar2* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* put_IsStencilButtonChecked)(__x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbar2* This,
        boolean value);
    HRESULT (STDMETHODCALLTYPE* get_ButtonFlyoutPlacement)(__x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbar2* This,
        enum __x_ABI_CWindows_CUI_CXaml_CControls_CInkToolbarButtonFlyoutPlacement* value);
    HRESULT (STDMETHODCALLTYPE* put_ButtonFlyoutPlacement)(__x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbar2* This,
        enum __x_ABI_CWindows_CUI_CXaml_CControls_CInkToolbarButtonFlyoutPlacement value);
    HRESULT (STDMETHODCALLTYPE* get_Orientation)(__x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbar2* This,
        enum __x_ABI_CWindows_CUI_CXaml_CControls_COrientation* value);
    HRESULT (STDMETHODCALLTYPE* put_Orientation)(__x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbar2* This,
        enum __x_ABI_CWindows_CUI_CXaml_CControls_COrientation value);
    HRESULT (STDMETHODCALLTYPE* add_IsStencilButtonCheckedChanged)(__x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbar2* This,
        __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CInkToolbar___x_ABI_CWindows__CUI__CXaml__CControls__CInkToolbarIsStencilButtonCheckedChangedEventArgs* handler,
        EventRegistrationToken* token);
    HRESULT (STDMETHODCALLTYPE* remove_IsStencilButtonCheckedChanged)(__x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbar2* This,
        EventRegistrationToken token);
    HRESULT (STDMETHODCALLTYPE* GetMenuButton)(__x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbar2* This,
        enum __x_ABI_CWindows_CUI_CXaml_CControls_CInkToolbarMenuKind menu,
        __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarMenuButton** result);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbar2Vtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbar2
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbar2Vtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbar2;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbar2_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbar3_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbar3_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbar3Vtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbar3* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbar3* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbar3* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbar3* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbar3* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbar3* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_TargetInkPresenter)(__x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbar3* This,
        __x_ABI_CWindows_CUI_CInput_CInking_CIInkPresenter** value);
    HRESULT (STDMETHODCALLTYPE* put_TargetInkPresenter)(__x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbar3* This,
        __x_ABI_CWindows_CUI_CInput_CInking_CIInkPresenter* value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbar3Vtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbar3
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbar3Vtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbar3;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbar3_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarBallpointPenButton_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarBallpointPenButton_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarBallpointPenButtonVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarBallpointPenButton* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarBallpointPenButton* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarBallpointPenButton* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarBallpointPenButton* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarBallpointPenButton* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarBallpointPenButton* This,
            TrustLevel* trustLevel);
    
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarBallpointPenButtonVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarBallpointPenButton
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarBallpointPenButtonVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarBallpointPenButton;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarBallpointPenButton_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarBallpointPenButtonFactory_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarBallpointPenButtonFactory_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarBallpointPenButtonFactoryVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarBallpointPenButtonFactory* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarBallpointPenButtonFactory* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarBallpointPenButtonFactory* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarBallpointPenButtonFactory* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarBallpointPenButtonFactory* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarBallpointPenButtonFactory* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* CreateInstance)(__x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarBallpointPenButtonFactory* This,
        IInspectable* baseInterface,
        IInspectable** innerInterface,
        __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarBallpointPenButton** value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarBallpointPenButtonFactoryVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarBallpointPenButtonFactory
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarBallpointPenButtonFactoryVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarBallpointPenButtonFactory;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarBallpointPenButtonFactory_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarCustomPen_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarCustomPen_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarCustomPenVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarCustomPen* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarCustomPen* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarCustomPen* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarCustomPen* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarCustomPen* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarCustomPen* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* CreateInkDrawingAttributes)(__x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarCustomPen* This,
        __x_ABI_CWindows_CUI_CXaml_CMedia_CIBrush* brush,
        DOUBLE strokeWidth,
        __x_ABI_CWindows_CUI_CInput_CInking_CIInkDrawingAttributes** result);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarCustomPenVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarCustomPen
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarCustomPenVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarCustomPen;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarCustomPen_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarCustomPenButton_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarCustomPenButton_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarCustomPenButtonVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarCustomPenButton* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarCustomPenButton* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarCustomPenButton* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarCustomPenButton* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarCustomPenButton* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarCustomPenButton* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_CustomPen)(__x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarCustomPenButton* This,
        __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarCustomPen** value);
    HRESULT (STDMETHODCALLTYPE* put_CustomPen)(__x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarCustomPenButton* This,
        __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarCustomPen* value);
    HRESULT (STDMETHODCALLTYPE* get_ConfigurationContent)(__x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarCustomPenButton* This,
        __x_ABI_CWindows_CUI_CXaml_CIUIElement** value);
    HRESULT (STDMETHODCALLTYPE* put_ConfigurationContent)(__x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarCustomPenButton* This,
        __x_ABI_CWindows_CUI_CXaml_CIUIElement* value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarCustomPenButtonVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarCustomPenButton
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarCustomPenButtonVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarCustomPenButton;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarCustomPenButton_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarCustomPenButtonFactory_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarCustomPenButtonFactory_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarCustomPenButtonFactoryVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarCustomPenButtonFactory* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarCustomPenButtonFactory* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarCustomPenButtonFactory* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarCustomPenButtonFactory* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarCustomPenButtonFactory* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarCustomPenButtonFactory* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* CreateInstance)(__x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarCustomPenButtonFactory* This,
        IInspectable* baseInterface,
        IInspectable** innerInterface,
        __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarCustomPenButton** value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarCustomPenButtonFactoryVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarCustomPenButtonFactory
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarCustomPenButtonFactoryVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarCustomPenButtonFactory;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarCustomPenButtonFactory_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarCustomPenButtonStatics_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarCustomPenButtonStatics_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarCustomPenButtonStaticsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarCustomPenButtonStatics* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarCustomPenButtonStatics* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarCustomPenButtonStatics* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarCustomPenButtonStatics* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarCustomPenButtonStatics* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarCustomPenButtonStatics* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_CustomPenProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarCustomPenButtonStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_ConfigurationContentProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarCustomPenButtonStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarCustomPenButtonStaticsVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarCustomPenButtonStatics
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarCustomPenButtonStaticsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarCustomPenButtonStatics;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarCustomPenButtonStatics_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarCustomPenFactory_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarCustomPenFactory_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarCustomPenFactoryVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarCustomPenFactory* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarCustomPenFactory* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarCustomPenFactory* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarCustomPenFactory* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarCustomPenFactory* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarCustomPenFactory* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* CreateInstance)(__x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarCustomPenFactory* This,
        IInspectable* baseInterface,
        IInspectable** innerInterface,
        __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarCustomPen** value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarCustomPenFactoryVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarCustomPenFactory
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarCustomPenFactoryVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarCustomPenFactory;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarCustomPenFactory_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarCustomPenOverrides_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarCustomPenOverrides_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarCustomPenOverridesVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarCustomPenOverrides* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarCustomPenOverrides* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarCustomPenOverrides* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarCustomPenOverrides* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarCustomPenOverrides* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarCustomPenOverrides* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* CreateInkDrawingAttributesCore)(__x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarCustomPenOverrides* This,
        __x_ABI_CWindows_CUI_CXaml_CMedia_CIBrush* brush,
        DOUBLE strokeWidth,
        __x_ABI_CWindows_CUI_CInput_CInking_CIInkDrawingAttributes** result);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarCustomPenOverridesVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarCustomPenOverrides
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarCustomPenOverridesVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarCustomPenOverrides;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarCustomPenOverrides_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarCustomToggleButton_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarCustomToggleButton_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarCustomToggleButtonVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarCustomToggleButton* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarCustomToggleButton* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarCustomToggleButton* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarCustomToggleButton* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarCustomToggleButton* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarCustomToggleButton* This,
            TrustLevel* trustLevel);
    
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarCustomToggleButtonVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarCustomToggleButton
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarCustomToggleButtonVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarCustomToggleButton;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarCustomToggleButton_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarCustomToggleButtonFactory_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarCustomToggleButtonFactory_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarCustomToggleButtonFactoryVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarCustomToggleButtonFactory* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarCustomToggleButtonFactory* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarCustomToggleButtonFactory* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarCustomToggleButtonFactory* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarCustomToggleButtonFactory* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarCustomToggleButtonFactory* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* CreateInstance)(__x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarCustomToggleButtonFactory* This,
        IInspectable* baseInterface,
        IInspectable** innerInterface,
        __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarCustomToggleButton** value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarCustomToggleButtonFactoryVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarCustomToggleButtonFactory
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarCustomToggleButtonFactoryVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarCustomToggleButtonFactory;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarCustomToggleButtonFactory_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarCustomToolButton_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarCustomToolButton_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarCustomToolButtonVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarCustomToolButton* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarCustomToolButton* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarCustomToolButton* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarCustomToolButton* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarCustomToolButton* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarCustomToolButton* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_ConfigurationContent)(__x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarCustomToolButton* This,
        __x_ABI_CWindows_CUI_CXaml_CIUIElement** value);
    HRESULT (STDMETHODCALLTYPE* put_ConfigurationContent)(__x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarCustomToolButton* This,
        __x_ABI_CWindows_CUI_CXaml_CIUIElement* value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarCustomToolButtonVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarCustomToolButton
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarCustomToolButtonVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarCustomToolButton;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarCustomToolButton_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarCustomToolButtonFactory_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarCustomToolButtonFactory_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarCustomToolButtonFactoryVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarCustomToolButtonFactory* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarCustomToolButtonFactory* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarCustomToolButtonFactory* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarCustomToolButtonFactory* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarCustomToolButtonFactory* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarCustomToolButtonFactory* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* CreateInstance)(__x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarCustomToolButtonFactory* This,
        IInspectable* baseInterface,
        IInspectable** innerInterface,
        __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarCustomToolButton** value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarCustomToolButtonFactoryVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarCustomToolButtonFactory
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarCustomToolButtonFactoryVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarCustomToolButtonFactory;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarCustomToolButtonFactory_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarCustomToolButtonStatics_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarCustomToolButtonStatics_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarCustomToolButtonStaticsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarCustomToolButtonStatics* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarCustomToolButtonStatics* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarCustomToolButtonStatics* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarCustomToolButtonStatics* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarCustomToolButtonStatics* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarCustomToolButtonStatics* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_ConfigurationContentProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarCustomToolButtonStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarCustomToolButtonStaticsVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarCustomToolButtonStatics
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarCustomToolButtonStaticsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarCustomToolButtonStatics;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarCustomToolButtonStatics_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarEraserButton_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarEraserButton_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarEraserButtonVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarEraserButton* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarEraserButton* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarEraserButton* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarEraserButton* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarEraserButton* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarEraserButton* This,
            TrustLevel* trustLevel);
    
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarEraserButtonVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarEraserButton
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarEraserButtonVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarEraserButton;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarEraserButton_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarEraserButton2_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarEraserButton2_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarEraserButton2Vtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarEraserButton2* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarEraserButton2* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarEraserButton2* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarEraserButton2* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarEraserButton2* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarEraserButton2* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_IsClearAllVisible)(__x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarEraserButton2* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* put_IsClearAllVisible)(__x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarEraserButton2* This,
        boolean value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarEraserButton2Vtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarEraserButton2
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarEraserButton2Vtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarEraserButton2;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarEraserButton2_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarEraserButtonFactory_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarEraserButtonFactory_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarEraserButtonFactoryVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarEraserButtonFactory* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarEraserButtonFactory* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarEraserButtonFactory* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarEraserButtonFactory* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarEraserButtonFactory* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarEraserButtonFactory* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* CreateInstance)(__x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarEraserButtonFactory* This,
        IInspectable* baseInterface,
        IInspectable** innerInterface,
        __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarEraserButton** value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarEraserButtonFactoryVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarEraserButtonFactory
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarEraserButtonFactoryVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarEraserButtonFactory;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarEraserButtonFactory_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarEraserButtonStatics2_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarEraserButtonStatics2_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarEraserButtonStatics2Vtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarEraserButtonStatics2* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarEraserButtonStatics2* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarEraserButtonStatics2* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarEraserButtonStatics2* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarEraserButtonStatics2* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarEraserButtonStatics2* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_IsClearAllVisibleProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarEraserButtonStatics2* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarEraserButtonStatics2Vtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarEraserButtonStatics2
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarEraserButtonStatics2Vtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarEraserButtonStatics2;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarEraserButtonStatics2_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarFactory_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarFactory_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarFactoryVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarFactory* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarFactory* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarFactory* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarFactory* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarFactory* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarFactory* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* CreateInstance)(__x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarFactory* This,
        IInspectable* baseInterface,
        IInspectable** innerInterface,
        __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbar** value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarFactoryVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarFactory
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarFactoryVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarFactory;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarFactory_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarFlyoutItem_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarFlyoutItem_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarFlyoutItemVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarFlyoutItem* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarFlyoutItem* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarFlyoutItem* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarFlyoutItem* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarFlyoutItem* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarFlyoutItem* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Kind)(__x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarFlyoutItem* This,
        enum __x_ABI_CWindows_CUI_CXaml_CControls_CInkToolbarFlyoutItemKind* value);
    HRESULT (STDMETHODCALLTYPE* put_Kind)(__x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarFlyoutItem* This,
        enum __x_ABI_CWindows_CUI_CXaml_CControls_CInkToolbarFlyoutItemKind value);
    HRESULT (STDMETHODCALLTYPE* get_IsChecked)(__x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarFlyoutItem* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* put_IsChecked)(__x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarFlyoutItem* This,
        boolean value);
    HRESULT (STDMETHODCALLTYPE* add_Checked)(__x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarFlyoutItem* This,
        __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CInkToolbarFlyoutItem_IInspectable* handler,
        EventRegistrationToken* token);
    HRESULT (STDMETHODCALLTYPE* remove_Checked)(__x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarFlyoutItem* This,
        EventRegistrationToken token);
    HRESULT (STDMETHODCALLTYPE* add_Unchecked)(__x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarFlyoutItem* This,
        __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CInkToolbarFlyoutItem_IInspectable* handler,
        EventRegistrationToken* token);
    HRESULT (STDMETHODCALLTYPE* remove_Unchecked)(__x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarFlyoutItem* This,
        EventRegistrationToken token);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarFlyoutItemVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarFlyoutItem
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarFlyoutItemVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarFlyoutItem;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarFlyoutItem_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarFlyoutItemFactory_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarFlyoutItemFactory_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarFlyoutItemFactoryVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarFlyoutItemFactory* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarFlyoutItemFactory* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarFlyoutItemFactory* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarFlyoutItemFactory* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarFlyoutItemFactory* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarFlyoutItemFactory* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* CreateInstance)(__x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarFlyoutItemFactory* This,
        IInspectable* baseInterface,
        IInspectable** innerInterface,
        __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarFlyoutItem** value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarFlyoutItemFactoryVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarFlyoutItemFactory
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarFlyoutItemFactoryVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarFlyoutItemFactory;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarFlyoutItemFactory_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarFlyoutItemStatics_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarFlyoutItemStatics_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarFlyoutItemStaticsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarFlyoutItemStatics* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarFlyoutItemStatics* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarFlyoutItemStatics* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarFlyoutItemStatics* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarFlyoutItemStatics* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarFlyoutItemStatics* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_KindProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarFlyoutItemStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_IsCheckedProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarFlyoutItemStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarFlyoutItemStaticsVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarFlyoutItemStatics
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarFlyoutItemStaticsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarFlyoutItemStatics;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarFlyoutItemStatics_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarHighlighterButton_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarHighlighterButton_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarHighlighterButtonVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarHighlighterButton* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarHighlighterButton* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarHighlighterButton* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarHighlighterButton* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarHighlighterButton* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarHighlighterButton* This,
            TrustLevel* trustLevel);
    
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarHighlighterButtonVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarHighlighterButton
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarHighlighterButtonVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarHighlighterButton;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarHighlighterButton_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarHighlighterButtonFactory_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarHighlighterButtonFactory_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarHighlighterButtonFactoryVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarHighlighterButtonFactory* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarHighlighterButtonFactory* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarHighlighterButtonFactory* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarHighlighterButtonFactory* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarHighlighterButtonFactory* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarHighlighterButtonFactory* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* CreateInstance)(__x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarHighlighterButtonFactory* This,
        IInspectable* baseInterface,
        IInspectable** innerInterface,
        __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarHighlighterButton** value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarHighlighterButtonFactoryVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarHighlighterButtonFactory
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarHighlighterButtonFactoryVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarHighlighterButtonFactory;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarHighlighterButtonFactory_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarIsStencilButtonCheckedChangedEventArgs_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarIsStencilButtonCheckedChangedEventArgs_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarIsStencilButtonCheckedChangedEventArgsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarIsStencilButtonCheckedChangedEventArgs* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarIsStencilButtonCheckedChangedEventArgs* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarIsStencilButtonCheckedChangedEventArgs* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarIsStencilButtonCheckedChangedEventArgs* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarIsStencilButtonCheckedChangedEventArgs* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarIsStencilButtonCheckedChangedEventArgs* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_StencilButton)(__x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarIsStencilButtonCheckedChangedEventArgs* This,
        __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarStencilButton** value);
    HRESULT (STDMETHODCALLTYPE* get_StencilKind)(__x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarIsStencilButtonCheckedChangedEventArgs* This,
        enum __x_ABI_CWindows_CUI_CXaml_CControls_CInkToolbarStencilKind* value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarIsStencilButtonCheckedChangedEventArgsVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarIsStencilButtonCheckedChangedEventArgs
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarIsStencilButtonCheckedChangedEventArgsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarIsStencilButtonCheckedChangedEventArgs;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarIsStencilButtonCheckedChangedEventArgs_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarMenuButton_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarMenuButton_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarMenuButtonVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarMenuButton* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarMenuButton* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarMenuButton* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarMenuButton* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarMenuButton* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarMenuButton* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_MenuKind)(__x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarMenuButton* This,
        enum __x_ABI_CWindows_CUI_CXaml_CControls_CInkToolbarMenuKind* value);
    HRESULT (STDMETHODCALLTYPE* get_IsExtensionGlyphShown)(__x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarMenuButton* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* put_IsExtensionGlyphShown)(__x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarMenuButton* This,
        boolean value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarMenuButtonVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarMenuButton
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarMenuButtonVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarMenuButton;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarMenuButton_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarMenuButtonFactory_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarMenuButtonFactory_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarMenuButtonFactoryVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarMenuButtonFactory* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarMenuButtonFactory* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarMenuButtonFactory* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarMenuButtonFactory* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarMenuButtonFactory* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarMenuButtonFactory* This,
            TrustLevel* trustLevel);
    
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarMenuButtonFactoryVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarMenuButtonFactory
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarMenuButtonFactoryVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarMenuButtonFactory;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarMenuButtonFactory_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarMenuButtonStatics_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarMenuButtonStatics_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarMenuButtonStaticsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarMenuButtonStatics* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarMenuButtonStatics* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarMenuButtonStatics* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarMenuButtonStatics* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarMenuButtonStatics* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarMenuButtonStatics* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_IsExtensionGlyphShownProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarMenuButtonStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarMenuButtonStaticsVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarMenuButtonStatics
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarMenuButtonStaticsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarMenuButtonStatics;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarMenuButtonStatics_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarPenButton_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarPenButton_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarPenButtonVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarPenButton* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarPenButton* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarPenButton* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarPenButton* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarPenButton* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarPenButton* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Palette)(__x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarPenButton* This,
        __x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CXaml__CMedia__CBrush** value);
    HRESULT (STDMETHODCALLTYPE* put_Palette)(__x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarPenButton* This,
        __x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CXaml__CMedia__CBrush* value);
    HRESULT (STDMETHODCALLTYPE* get_MinStrokeWidth)(__x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarPenButton* This,
        DOUBLE* value);
    HRESULT (STDMETHODCALLTYPE* put_MinStrokeWidth)(__x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarPenButton* This,
        DOUBLE value);
    HRESULT (STDMETHODCALLTYPE* get_MaxStrokeWidth)(__x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarPenButton* This,
        DOUBLE* value);
    HRESULT (STDMETHODCALLTYPE* put_MaxStrokeWidth)(__x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarPenButton* This,
        DOUBLE value);
    HRESULT (STDMETHODCALLTYPE* get_SelectedBrush)(__x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarPenButton* This,
        __x_ABI_CWindows_CUI_CXaml_CMedia_CIBrush** value);
    HRESULT (STDMETHODCALLTYPE* get_SelectedBrushIndex)(__x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarPenButton* This,
        INT32* value);
    HRESULT (STDMETHODCALLTYPE* put_SelectedBrushIndex)(__x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarPenButton* This,
        INT32 value);
    HRESULT (STDMETHODCALLTYPE* get_SelectedStrokeWidth)(__x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarPenButton* This,
        DOUBLE* value);
    HRESULT (STDMETHODCALLTYPE* put_SelectedStrokeWidth)(__x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarPenButton* This,
        DOUBLE value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarPenButtonVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarPenButton
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarPenButtonVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarPenButton;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarPenButton_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarPenButtonFactory_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarPenButtonFactory_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarPenButtonFactoryVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarPenButtonFactory* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarPenButtonFactory* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarPenButtonFactory* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarPenButtonFactory* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarPenButtonFactory* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarPenButtonFactory* This,
            TrustLevel* trustLevel);
    
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarPenButtonFactoryVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarPenButtonFactory
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarPenButtonFactoryVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarPenButtonFactory;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarPenButtonFactory_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarPenButtonStatics_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarPenButtonStatics_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarPenButtonStaticsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarPenButtonStatics* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarPenButtonStatics* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarPenButtonStatics* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarPenButtonStatics* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarPenButtonStatics* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarPenButtonStatics* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_PaletteProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarPenButtonStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_MinStrokeWidthProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarPenButtonStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_MaxStrokeWidthProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarPenButtonStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_SelectedBrushProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarPenButtonStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_SelectedBrushIndexProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarPenButtonStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_SelectedStrokeWidthProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarPenButtonStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarPenButtonStaticsVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarPenButtonStatics
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarPenButtonStaticsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarPenButtonStatics;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarPenButtonStatics_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarPenConfigurationControl_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarPenConfigurationControl_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarPenConfigurationControlVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarPenConfigurationControl* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarPenConfigurationControl* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarPenConfigurationControl* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarPenConfigurationControl* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarPenConfigurationControl* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarPenConfigurationControl* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_PenButton)(__x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarPenConfigurationControl* This,
        __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarPenButton** value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarPenConfigurationControlVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarPenConfigurationControl
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarPenConfigurationControlVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarPenConfigurationControl;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarPenConfigurationControl_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarPenConfigurationControlFactory_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarPenConfigurationControlFactory_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarPenConfigurationControlFactoryVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarPenConfigurationControlFactory* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarPenConfigurationControlFactory* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarPenConfigurationControlFactory* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarPenConfigurationControlFactory* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarPenConfigurationControlFactory* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarPenConfigurationControlFactory* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* CreateInstance)(__x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarPenConfigurationControlFactory* This,
        IInspectable* baseInterface,
        IInspectable** innerInterface,
        __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarPenConfigurationControl** value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarPenConfigurationControlFactoryVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarPenConfigurationControlFactory
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarPenConfigurationControlFactoryVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarPenConfigurationControlFactory;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarPenConfigurationControlFactory_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarPenConfigurationControlStatics_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarPenConfigurationControlStatics_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarPenConfigurationControlStaticsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarPenConfigurationControlStatics* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarPenConfigurationControlStatics* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarPenConfigurationControlStatics* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarPenConfigurationControlStatics* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarPenConfigurationControlStatics* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarPenConfigurationControlStatics* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_PenButtonProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarPenConfigurationControlStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarPenConfigurationControlStaticsVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarPenConfigurationControlStatics
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarPenConfigurationControlStaticsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarPenConfigurationControlStatics;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarPenConfigurationControlStatics_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarPencilButton_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarPencilButton_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarPencilButtonVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarPencilButton* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarPencilButton* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarPencilButton* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarPencilButton* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarPencilButton* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarPencilButton* This,
            TrustLevel* trustLevel);
    
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarPencilButtonVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarPencilButton
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarPencilButtonVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarPencilButton;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarPencilButton_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarPencilButtonFactory_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarPencilButtonFactory_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarPencilButtonFactoryVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarPencilButtonFactory* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarPencilButtonFactory* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarPencilButtonFactory* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarPencilButtonFactory* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarPencilButtonFactory* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarPencilButtonFactory* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* CreateInstance)(__x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarPencilButtonFactory* This,
        IInspectable* baseInterface,
        IInspectable** innerInterface,
        __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarPencilButton** value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarPencilButtonFactoryVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarPencilButtonFactory
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarPencilButtonFactoryVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarPencilButtonFactory;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarPencilButtonFactory_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarRulerButton_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarRulerButton_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarRulerButtonVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarRulerButton* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarRulerButton* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarRulerButton* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarRulerButton* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarRulerButton* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarRulerButton* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Ruler)(__x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarRulerButton* This,
        __x_ABI_CWindows_CUI_CInput_CInking_CIInkPresenterRuler** value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarRulerButtonVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarRulerButton
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarRulerButtonVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarRulerButton;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarRulerButton_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarRulerButtonFactory_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarRulerButtonFactory_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarRulerButtonFactoryVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarRulerButtonFactory* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarRulerButtonFactory* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarRulerButtonFactory* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarRulerButtonFactory* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarRulerButtonFactory* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarRulerButtonFactory* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* CreateInstance)(__x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarRulerButtonFactory* This,
        IInspectable* baseInterface,
        IInspectable** innerInterface,
        __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarRulerButton** value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarRulerButtonFactoryVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarRulerButtonFactory
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarRulerButtonFactoryVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarRulerButtonFactory;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarRulerButtonFactory_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarRulerButtonStatics_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarRulerButtonStatics_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarRulerButtonStaticsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarRulerButtonStatics* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarRulerButtonStatics* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarRulerButtonStatics* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarRulerButtonStatics* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarRulerButtonStatics* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarRulerButtonStatics* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_RulerProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarRulerButtonStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarRulerButtonStaticsVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarRulerButtonStatics
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarRulerButtonStaticsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarRulerButtonStatics;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarRulerButtonStatics_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarStatics_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarStatics_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarStaticsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarStatics* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarStatics* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarStatics* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarStatics* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarStatics* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarStatics* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_InitialControlsProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_ChildrenProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_ActiveToolProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_InkDrawingAttributesProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_IsRulerButtonCheckedProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_TargetInkCanvasProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarStaticsVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarStatics
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarStaticsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarStatics;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarStatics_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarStatics2_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarStatics2_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarStatics2Vtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarStatics2* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarStatics2* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarStatics2* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarStatics2* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarStatics2* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarStatics2* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_IsStencilButtonCheckedProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarStatics2* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_ButtonFlyoutPlacementProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarStatics2* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_OrientationProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarStatics2* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarStatics2Vtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarStatics2
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarStatics2Vtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarStatics2;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarStatics2_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarStatics3_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarStatics3_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarStatics3Vtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarStatics3* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarStatics3* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarStatics3* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarStatics3* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarStatics3* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarStatics3* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_TargetInkPresenterProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarStatics3* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarStatics3Vtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarStatics3
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarStatics3Vtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarStatics3;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarStatics3_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarStencilButton_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarStencilButton_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarStencilButtonVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarStencilButton* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarStencilButton* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarStencilButton* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarStencilButton* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarStencilButton* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarStencilButton* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Ruler)(__x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarStencilButton* This,
        __x_ABI_CWindows_CUI_CInput_CInking_CIInkPresenterRuler** value);
    HRESULT (STDMETHODCALLTYPE* get_Protractor)(__x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarStencilButton* This,
        __x_ABI_CWindows_CUI_CInput_CInking_CIInkPresenterProtractor** value);
    HRESULT (STDMETHODCALLTYPE* get_SelectedStencil)(__x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarStencilButton* This,
        enum __x_ABI_CWindows_CUI_CXaml_CControls_CInkToolbarStencilKind* value);
    HRESULT (STDMETHODCALLTYPE* put_SelectedStencil)(__x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarStencilButton* This,
        enum __x_ABI_CWindows_CUI_CXaml_CControls_CInkToolbarStencilKind value);
    HRESULT (STDMETHODCALLTYPE* get_IsRulerItemVisible)(__x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarStencilButton* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* put_IsRulerItemVisible)(__x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarStencilButton* This,
        boolean value);
    HRESULT (STDMETHODCALLTYPE* get_IsProtractorItemVisible)(__x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarStencilButton* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* put_IsProtractorItemVisible)(__x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarStencilButton* This,
        boolean value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarStencilButtonVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarStencilButton
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarStencilButtonVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarStencilButton;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarStencilButton_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarStencilButtonFactory_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarStencilButtonFactory_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarStencilButtonFactoryVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarStencilButtonFactory* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarStencilButtonFactory* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarStencilButtonFactory* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarStencilButtonFactory* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarStencilButtonFactory* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarStencilButtonFactory* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* CreateInstance)(__x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarStencilButtonFactory* This,
        IInspectable* baseInterface,
        IInspectable** innerInterface,
        __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarStencilButton** value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarStencilButtonFactoryVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarStencilButtonFactory
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarStencilButtonFactoryVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarStencilButtonFactory;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarStencilButtonFactory_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarStencilButtonStatics_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarStencilButtonStatics_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarStencilButtonStaticsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarStencilButtonStatics* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarStencilButtonStatics* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarStencilButtonStatics* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarStencilButtonStatics* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarStencilButtonStatics* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarStencilButtonStatics* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_RulerProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarStencilButtonStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_ProtractorProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarStencilButtonStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_SelectedStencilProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarStencilButtonStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_IsRulerItemVisibleProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarStencilButtonStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_IsProtractorItemVisibleProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarStencilButtonStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarStencilButtonStaticsVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarStencilButtonStatics
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarStencilButtonStaticsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarStencilButtonStatics;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarStencilButtonStatics_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarToggleButton_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarToggleButton_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarToggleButtonVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarToggleButton* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarToggleButton* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarToggleButton* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarToggleButton* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarToggleButton* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarToggleButton* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_ToggleKind)(__x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarToggleButton* This,
        enum __x_ABI_CWindows_CUI_CXaml_CControls_CInkToolbarToggle* value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarToggleButtonVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarToggleButton
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarToggleButtonVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarToggleButton;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarToggleButton_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarToggleButtonFactory_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarToggleButtonFactory_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarToggleButtonFactoryVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarToggleButtonFactory* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarToggleButtonFactory* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarToggleButtonFactory* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarToggleButtonFactory* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarToggleButtonFactory* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarToggleButtonFactory* This,
            TrustLevel* trustLevel);
    
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarToggleButtonFactoryVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarToggleButtonFactory
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarToggleButtonFactoryVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarToggleButtonFactory;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarToggleButtonFactory_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarToolButton_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarToolButton_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarToolButtonVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarToolButton* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarToolButton* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarToolButton* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarToolButton* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarToolButton* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarToolButton* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_ToolKind)(__x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarToolButton* This,
        enum __x_ABI_CWindows_CUI_CXaml_CControls_CInkToolbarTool* value);
    HRESULT (STDMETHODCALLTYPE* get_IsExtensionGlyphShown)(__x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarToolButton* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* put_IsExtensionGlyphShown)(__x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarToolButton* This,
        boolean value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarToolButtonVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarToolButton
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarToolButtonVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarToolButton;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarToolButton_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarToolButtonFactory_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarToolButtonFactory_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarToolButtonFactoryVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarToolButtonFactory* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarToolButtonFactory* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarToolButtonFactory* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarToolButtonFactory* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarToolButtonFactory* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarToolButtonFactory* This,
            TrustLevel* trustLevel);
    
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarToolButtonFactoryVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarToolButtonFactory
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarToolButtonFactoryVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarToolButtonFactory;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarToolButtonFactory_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarToolButtonStatics_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarToolButtonStatics_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarToolButtonStaticsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarToolButtonStatics* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarToolButtonStatics* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarToolButtonStatics* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarToolButtonStatics* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarToolButtonStatics* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarToolButtonStatics* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_IsExtensionGlyphShownProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarToolButtonStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarToolButtonStaticsVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarToolButtonStatics
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarToolButtonStaticsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarToolButtonStatics;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIInkToolbarToolButtonStatics_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIInsertionPanel_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CControls_CIInsertionPanel_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIInsertionPanelVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CControls_CIInsertionPanel* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CControls_CIInsertionPanel* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CControls_CIInsertionPanel* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CControls_CIInsertionPanel* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CControls_CIInsertionPanel* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CControls_CIInsertionPanel* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* GetInsertionIndexes)(__x_ABI_CWindows_CUI_CXaml_CControls_CIInsertionPanel* This,
        struct __x_ABI_CWindows_CFoundation_CPoint position,
        INT32* first,
        INT32* second);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CIInsertionPanelVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CIInsertionPanel
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIInsertionPanelVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIInsertionPanel;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIInsertionPanel_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIIsTextTrimmedChangedEventArgs_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CControls_CIIsTextTrimmedChangedEventArgs_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIIsTextTrimmedChangedEventArgsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CControls_CIIsTextTrimmedChangedEventArgs* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CControls_CIIsTextTrimmedChangedEventArgs* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CControls_CIIsTextTrimmedChangedEventArgs* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CControls_CIIsTextTrimmedChangedEventArgs* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CControls_CIIsTextTrimmedChangedEventArgs* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CControls_CIIsTextTrimmedChangedEventArgs* This,
            TrustLevel* trustLevel);
    
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CIIsTextTrimmedChangedEventArgsVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CIIsTextTrimmedChangedEventArgs
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIIsTextTrimmedChangedEventArgsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIIsTextTrimmedChangedEventArgs;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIIsTextTrimmedChangedEventArgs_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIItemClickEventArgs_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CControls_CIItemClickEventArgs_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIItemClickEventArgsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CControls_CIItemClickEventArgs* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CControls_CIItemClickEventArgs* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CControls_CIItemClickEventArgs* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CControls_CIItemClickEventArgs* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CControls_CIItemClickEventArgs* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CControls_CIItemClickEventArgs* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_ClickedItem)(__x_ABI_CWindows_CUI_CXaml_CControls_CIItemClickEventArgs* This,
        IInspectable** value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CIItemClickEventArgsVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CIItemClickEventArgs
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIItemClickEventArgsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIItemClickEventArgs;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIItemClickEventArgs_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIItemContainerGenerator_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CControls_CIItemContainerGenerator_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIItemContainerGeneratorVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CControls_CIItemContainerGenerator* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CControls_CIItemContainerGenerator* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CControls_CIItemContainerGenerator* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CControls_CIItemContainerGenerator* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CControls_CIItemContainerGenerator* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CControls_CIItemContainerGenerator* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* add_ItemsChanged)(__x_ABI_CWindows_CUI_CXaml_CControls_CIItemContainerGenerator* This,
        __x_ABI_CWindows_CUI_CXaml_CControls_CPrimitives_CIItemsChangedEventHandler* handler,
        EventRegistrationToken* token);
    HRESULT (STDMETHODCALLTYPE* remove_ItemsChanged)(__x_ABI_CWindows_CUI_CXaml_CControls_CIItemContainerGenerator* This,
        EventRegistrationToken token);
    HRESULT (STDMETHODCALLTYPE* ItemFromContainer)(__x_ABI_CWindows_CUI_CXaml_CControls_CIItemContainerGenerator* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyObject* container,
        IInspectable** result);
    HRESULT (STDMETHODCALLTYPE* ContainerFromItem)(__x_ABI_CWindows_CUI_CXaml_CControls_CIItemContainerGenerator* This,
        IInspectable* item,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyObject** result);
    HRESULT (STDMETHODCALLTYPE* IndexFromContainer)(__x_ABI_CWindows_CUI_CXaml_CControls_CIItemContainerGenerator* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyObject* container,
        INT32* result);
    HRESULT (STDMETHODCALLTYPE* ContainerFromIndex)(__x_ABI_CWindows_CUI_CXaml_CControls_CIItemContainerGenerator* This,
        INT32 index,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyObject** result);
    HRESULT (STDMETHODCALLTYPE* GetItemContainerGeneratorForPanel)(__x_ABI_CWindows_CUI_CXaml_CControls_CIItemContainerGenerator* This,
        __x_ABI_CWindows_CUI_CXaml_CControls_CIPanel* panel,
        __x_ABI_CWindows_CUI_CXaml_CControls_CIItemContainerGenerator** result);
    HRESULT (STDMETHODCALLTYPE* StartAt)(__x_ABI_CWindows_CUI_CXaml_CControls_CIItemContainerGenerator* This,
        struct __x_ABI_CWindows_CUI_CXaml_CControls_CPrimitives_CGeneratorPosition position,
        enum __x_ABI_CWindows_CUI_CXaml_CControls_CPrimitives_CGeneratorDirection direction,
        boolean allowStartAtRealizedItem);
    HRESULT (STDMETHODCALLTYPE* Stop)(__x_ABI_CWindows_CUI_CXaml_CControls_CIItemContainerGenerator* This);
    HRESULT (STDMETHODCALLTYPE* GenerateNext)(__x_ABI_CWindows_CUI_CXaml_CControls_CIItemContainerGenerator* This,
        boolean* isNewlyRealized,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyObject** returnValue);
    HRESULT (STDMETHODCALLTYPE* PrepareItemContainer)(__x_ABI_CWindows_CUI_CXaml_CControls_CIItemContainerGenerator* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyObject* container);
    HRESULT (STDMETHODCALLTYPE* RemoveAll)(__x_ABI_CWindows_CUI_CXaml_CControls_CIItemContainerGenerator* This);
    HRESULT (STDMETHODCALLTYPE* Remove)(__x_ABI_CWindows_CUI_CXaml_CControls_CIItemContainerGenerator* This,
        struct __x_ABI_CWindows_CUI_CXaml_CControls_CPrimitives_CGeneratorPosition position,
        INT32 count);
    HRESULT (STDMETHODCALLTYPE* GeneratorPositionFromIndex)(__x_ABI_CWindows_CUI_CXaml_CControls_CIItemContainerGenerator* This,
        INT32 itemIndex,
        struct __x_ABI_CWindows_CUI_CXaml_CControls_CPrimitives_CGeneratorPosition* result);
    HRESULT (STDMETHODCALLTYPE* IndexFromGeneratorPosition)(__x_ABI_CWindows_CUI_CXaml_CControls_CIItemContainerGenerator* This,
        struct __x_ABI_CWindows_CUI_CXaml_CControls_CPrimitives_CGeneratorPosition position,
        INT32* result);
    HRESULT (STDMETHODCALLTYPE* Recycle)(__x_ABI_CWindows_CUI_CXaml_CControls_CIItemContainerGenerator* This,
        struct __x_ABI_CWindows_CUI_CXaml_CControls_CPrimitives_CGeneratorPosition position,
        INT32 count);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CIItemContainerGeneratorVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CIItemContainerGenerator
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIItemContainerGeneratorVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIItemContainerGenerator;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIItemContainerGenerator_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIItemContainerMapping_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CControls_CIItemContainerMapping_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIItemContainerMappingVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CControls_CIItemContainerMapping* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CControls_CIItemContainerMapping* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CControls_CIItemContainerMapping* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CControls_CIItemContainerMapping* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CControls_CIItemContainerMapping* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CControls_CIItemContainerMapping* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* ItemFromContainer)(__x_ABI_CWindows_CUI_CXaml_CControls_CIItemContainerMapping* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyObject* container,
        IInspectable** result);
    HRESULT (STDMETHODCALLTYPE* ContainerFromItem)(__x_ABI_CWindows_CUI_CXaml_CControls_CIItemContainerMapping* This,
        IInspectable* item,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyObject** result);
    HRESULT (STDMETHODCALLTYPE* IndexFromContainer)(__x_ABI_CWindows_CUI_CXaml_CControls_CIItemContainerMapping* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyObject* container,
        INT32* result);
    HRESULT (STDMETHODCALLTYPE* ContainerFromIndex)(__x_ABI_CWindows_CUI_CXaml_CControls_CIItemContainerMapping* This,
        INT32 index,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyObject** result);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CIItemContainerMappingVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CIItemContainerMapping
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIItemContainerMappingVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIItemContainerMapping;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIItemContainerMapping_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIItemsControl_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CControls_CIItemsControl_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsControlVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CControls_CIItemsControl* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CControls_CIItemsControl* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CControls_CIItemsControl* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CControls_CIItemsControl* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CControls_CIItemsControl* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CControls_CIItemsControl* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_ItemsSource)(__x_ABI_CWindows_CUI_CXaml_CControls_CIItemsControl* This,
        IInspectable** value);
    HRESULT (STDMETHODCALLTYPE* put_ItemsSource)(__x_ABI_CWindows_CUI_CXaml_CControls_CIItemsControl* This,
        IInspectable* value);
    HRESULT (STDMETHODCALLTYPE* get_Items)(__x_ABI_CWindows_CUI_CXaml_CControls_CIItemsControl* This,
        __x_ABI_C__FIObservableVector_1_IInspectable** value);
    HRESULT (STDMETHODCALLTYPE* get_ItemTemplate)(__x_ABI_CWindows_CUI_CXaml_CControls_CIItemsControl* This,
        __x_ABI_CWindows_CUI_CXaml_CIDataTemplate** value);
    HRESULT (STDMETHODCALLTYPE* put_ItemTemplate)(__x_ABI_CWindows_CUI_CXaml_CControls_CIItemsControl* This,
        __x_ABI_CWindows_CUI_CXaml_CIDataTemplate* value);
    HRESULT (STDMETHODCALLTYPE* get_ItemTemplateSelector)(__x_ABI_CWindows_CUI_CXaml_CControls_CIItemsControl* This,
        __x_ABI_CWindows_CUI_CXaml_CControls_CIDataTemplateSelector** value);
    HRESULT (STDMETHODCALLTYPE* put_ItemTemplateSelector)(__x_ABI_CWindows_CUI_CXaml_CControls_CIItemsControl* This,
        __x_ABI_CWindows_CUI_CXaml_CControls_CIDataTemplateSelector* value);
    HRESULT (STDMETHODCALLTYPE* get_ItemsPanel)(__x_ABI_CWindows_CUI_CXaml_CControls_CIItemsControl* This,
        __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsPanelTemplate** value);
    HRESULT (STDMETHODCALLTYPE* put_ItemsPanel)(__x_ABI_CWindows_CUI_CXaml_CControls_CIItemsControl* This,
        __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsPanelTemplate* value);
    HRESULT (STDMETHODCALLTYPE* get_DisplayMemberPath)(__x_ABI_CWindows_CUI_CXaml_CControls_CIItemsControl* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* put_DisplayMemberPath)(__x_ABI_CWindows_CUI_CXaml_CControls_CIItemsControl* This,
        HSTRING value);
    HRESULT (STDMETHODCALLTYPE* get_ItemContainerStyle)(__x_ABI_CWindows_CUI_CXaml_CControls_CIItemsControl* This,
        __x_ABI_CWindows_CUI_CXaml_CIStyle** value);
    HRESULT (STDMETHODCALLTYPE* put_ItemContainerStyle)(__x_ABI_CWindows_CUI_CXaml_CControls_CIItemsControl* This,
        __x_ABI_CWindows_CUI_CXaml_CIStyle* value);
    HRESULT (STDMETHODCALLTYPE* get_ItemContainerStyleSelector)(__x_ABI_CWindows_CUI_CXaml_CControls_CIItemsControl* This,
        __x_ABI_CWindows_CUI_CXaml_CControls_CIStyleSelector** value);
    HRESULT (STDMETHODCALLTYPE* put_ItemContainerStyleSelector)(__x_ABI_CWindows_CUI_CXaml_CControls_CIItemsControl* This,
        __x_ABI_CWindows_CUI_CXaml_CControls_CIStyleSelector* value);
    HRESULT (STDMETHODCALLTYPE* get_ItemContainerGenerator)(__x_ABI_CWindows_CUI_CXaml_CControls_CIItemsControl* This,
        __x_ABI_CWindows_CUI_CXaml_CControls_CIItemContainerGenerator** value);
    HRESULT (STDMETHODCALLTYPE* get_ItemContainerTransitions)(__x_ABI_CWindows_CUI_CXaml_CControls_CIItemsControl* This,
        __x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CXaml__CMedia__CAnimation__CTransition** value);
    HRESULT (STDMETHODCALLTYPE* put_ItemContainerTransitions)(__x_ABI_CWindows_CUI_CXaml_CControls_CIItemsControl* This,
        __x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CXaml__CMedia__CAnimation__CTransition* value);
    HRESULT (STDMETHODCALLTYPE* get_GroupStyle)(__x_ABI_CWindows_CUI_CXaml_CControls_CIItemsControl* This,
        __x_ABI_C__FIObservableVector_1___x_ABI_CWindows__CUI__CXaml__CControls__CGroupStyle** value);
    HRESULT (STDMETHODCALLTYPE* get_GroupStyleSelector)(__x_ABI_CWindows_CUI_CXaml_CControls_CIItemsControl* This,
        __x_ABI_CWindows_CUI_CXaml_CControls_CIGroupStyleSelector** value);
    HRESULT (STDMETHODCALLTYPE* put_GroupStyleSelector)(__x_ABI_CWindows_CUI_CXaml_CControls_CIItemsControl* This,
        __x_ABI_CWindows_CUI_CXaml_CControls_CIGroupStyleSelector* value);
    HRESULT (STDMETHODCALLTYPE* get_IsGrouping)(__x_ABI_CWindows_CUI_CXaml_CControls_CIItemsControl* This,
        boolean* value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsControlVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsControl
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsControlVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIItemsControl;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIItemsControl_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIItemsControl2_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CControls_CIItemsControl2_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsControl2Vtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CControls_CIItemsControl2* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CControls_CIItemsControl2* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CControls_CIItemsControl2* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CControls_CIItemsControl2* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CControls_CIItemsControl2* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CControls_CIItemsControl2* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_ItemsPanelRoot)(__x_ABI_CWindows_CUI_CXaml_CControls_CIItemsControl2* This,
        __x_ABI_CWindows_CUI_CXaml_CControls_CIPanel** value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsControl2Vtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsControl2
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsControl2Vtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIItemsControl2;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIItemsControl2_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIItemsControl3_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CControls_CIItemsControl3_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsControl3Vtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CControls_CIItemsControl3* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CControls_CIItemsControl3* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CControls_CIItemsControl3* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CControls_CIItemsControl3* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CControls_CIItemsControl3* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CControls_CIItemsControl3* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* GroupHeaderContainerFromItemContainer)(__x_ABI_CWindows_CUI_CXaml_CControls_CIItemsControl3* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyObject* itemContainer,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyObject** result);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsControl3Vtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsControl3
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsControl3Vtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIItemsControl3;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIItemsControl3_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIItemsControlFactory_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CControls_CIItemsControlFactory_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsControlFactoryVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CControls_CIItemsControlFactory* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CControls_CIItemsControlFactory* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CControls_CIItemsControlFactory* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CControls_CIItemsControlFactory* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CControls_CIItemsControlFactory* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CControls_CIItemsControlFactory* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* CreateInstance)(__x_ABI_CWindows_CUI_CXaml_CControls_CIItemsControlFactory* This,
        IInspectable* baseInterface,
        IInspectable** innerInterface,
        __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsControl** value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsControlFactoryVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsControlFactory
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsControlFactoryVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIItemsControlFactory;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIItemsControlFactory_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIItemsControlOverrides_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CControls_CIItemsControlOverrides_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsControlOverridesVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CControls_CIItemsControlOverrides* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CControls_CIItemsControlOverrides* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CControls_CIItemsControlOverrides* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CControls_CIItemsControlOverrides* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CControls_CIItemsControlOverrides* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CControls_CIItemsControlOverrides* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* IsItemItsOwnContainerOverride)(__x_ABI_CWindows_CUI_CXaml_CControls_CIItemsControlOverrides* This,
        IInspectable* item,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* GetContainerForItemOverride)(__x_ABI_CWindows_CUI_CXaml_CControls_CIItemsControlOverrides* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyObject** result);
    HRESULT (STDMETHODCALLTYPE* ClearContainerForItemOverride)(__x_ABI_CWindows_CUI_CXaml_CControls_CIItemsControlOverrides* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyObject* element,
        IInspectable* item);
    HRESULT (STDMETHODCALLTYPE* PrepareContainerForItemOverride)(__x_ABI_CWindows_CUI_CXaml_CControls_CIItemsControlOverrides* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyObject* element,
        IInspectable* item);
    HRESULT (STDMETHODCALLTYPE* OnItemsChanged)(__x_ABI_CWindows_CUI_CXaml_CControls_CIItemsControlOverrides* This,
        IInspectable* e);
    HRESULT (STDMETHODCALLTYPE* OnItemContainerStyleChanged)(__x_ABI_CWindows_CUI_CXaml_CControls_CIItemsControlOverrides* This,
        __x_ABI_CWindows_CUI_CXaml_CIStyle* oldItemContainerStyle,
        __x_ABI_CWindows_CUI_CXaml_CIStyle* newItemContainerStyle);
    HRESULT (STDMETHODCALLTYPE* OnItemContainerStyleSelectorChanged)(__x_ABI_CWindows_CUI_CXaml_CControls_CIItemsControlOverrides* This,
        __x_ABI_CWindows_CUI_CXaml_CControls_CIStyleSelector* oldItemContainerStyleSelector,
        __x_ABI_CWindows_CUI_CXaml_CControls_CIStyleSelector* newItemContainerStyleSelector);
    HRESULT (STDMETHODCALLTYPE* OnItemTemplateChanged)(__x_ABI_CWindows_CUI_CXaml_CControls_CIItemsControlOverrides* This,
        __x_ABI_CWindows_CUI_CXaml_CIDataTemplate* oldItemTemplate,
        __x_ABI_CWindows_CUI_CXaml_CIDataTemplate* newItemTemplate);
    HRESULT (STDMETHODCALLTYPE* OnItemTemplateSelectorChanged)(__x_ABI_CWindows_CUI_CXaml_CControls_CIItemsControlOverrides* This,
        __x_ABI_CWindows_CUI_CXaml_CControls_CIDataTemplateSelector* oldItemTemplateSelector,
        __x_ABI_CWindows_CUI_CXaml_CControls_CIDataTemplateSelector* newItemTemplateSelector);
    HRESULT (STDMETHODCALLTYPE* OnGroupStyleSelectorChanged)(__x_ABI_CWindows_CUI_CXaml_CControls_CIItemsControlOverrides* This,
        __x_ABI_CWindows_CUI_CXaml_CControls_CIGroupStyleSelector* oldGroupStyleSelector,
        __x_ABI_CWindows_CUI_CXaml_CControls_CIGroupStyleSelector* newGroupStyleSelector);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsControlOverridesVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsControlOverrides
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsControlOverridesVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIItemsControlOverrides;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIItemsControlOverrides_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIItemsControlStatics_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CControls_CIItemsControlStatics_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsControlStaticsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CControls_CIItemsControlStatics* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CControls_CIItemsControlStatics* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CControls_CIItemsControlStatics* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CControls_CIItemsControlStatics* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CControls_CIItemsControlStatics* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CControls_CIItemsControlStatics* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_ItemsSourceProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CIItemsControlStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_ItemTemplateProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CIItemsControlStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_ItemTemplateSelectorProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CIItemsControlStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_ItemsPanelProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CIItemsControlStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_DisplayMemberPathProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CIItemsControlStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_ItemContainerStyleProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CIItemsControlStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_ItemContainerStyleSelectorProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CIItemsControlStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_ItemContainerTransitionsProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CIItemsControlStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_GroupStyleSelectorProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CIItemsControlStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_IsGroupingProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CIItemsControlStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* GetItemsOwner)(__x_ABI_CWindows_CUI_CXaml_CControls_CIItemsControlStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyObject* element,
        __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsControl** result);
    HRESULT (STDMETHODCALLTYPE* ItemsControlFromItemContainer)(__x_ABI_CWindows_CUI_CXaml_CControls_CIItemsControlStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyObject* container,
        __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsControl** result);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsControlStaticsVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsControlStatics
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsControlStaticsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIItemsControlStatics;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIItemsControlStatics_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIItemsPanelTemplate_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CControls_CIItemsPanelTemplate_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsPanelTemplateVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CControls_CIItemsPanelTemplate* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CControls_CIItemsPanelTemplate* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CControls_CIItemsPanelTemplate* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CControls_CIItemsPanelTemplate* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CControls_CIItemsPanelTemplate* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CControls_CIItemsPanelTemplate* This,
            TrustLevel* trustLevel);
    
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsPanelTemplateVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsPanelTemplate
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsPanelTemplateVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIItemsPanelTemplate;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIItemsPanelTemplate_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIItemsPickedEventArgs_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CControls_CIItemsPickedEventArgs_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsPickedEventArgsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CControls_CIItemsPickedEventArgs* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CControls_CIItemsPickedEventArgs* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CControls_CIItemsPickedEventArgs* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CControls_CIItemsPickedEventArgs* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CControls_CIItemsPickedEventArgs* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CControls_CIItemsPickedEventArgs* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_AddedItems)(__x_ABI_CWindows_CUI_CXaml_CControls_CIItemsPickedEventArgs* This,
        __x_ABI_C__FIVector_1_IInspectable** value);
    HRESULT (STDMETHODCALLTYPE* get_RemovedItems)(__x_ABI_CWindows_CUI_CXaml_CControls_CIItemsPickedEventArgs* This,
        __x_ABI_C__FIVector_1_IInspectable** value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsPickedEventArgsVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsPickedEventArgs
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsPickedEventArgsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIItemsPickedEventArgs;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIItemsPickedEventArgs_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIItemsPresenter_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CControls_CIItemsPresenter_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsPresenterVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CControls_CIItemsPresenter* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CControls_CIItemsPresenter* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CControls_CIItemsPresenter* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CControls_CIItemsPresenter* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CControls_CIItemsPresenter* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CControls_CIItemsPresenter* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Header)(__x_ABI_CWindows_CUI_CXaml_CControls_CIItemsPresenter* This,
        IInspectable** value);
    HRESULT (STDMETHODCALLTYPE* put_Header)(__x_ABI_CWindows_CUI_CXaml_CControls_CIItemsPresenter* This,
        IInspectable* value);
    HRESULT (STDMETHODCALLTYPE* get_HeaderTemplate)(__x_ABI_CWindows_CUI_CXaml_CControls_CIItemsPresenter* This,
        __x_ABI_CWindows_CUI_CXaml_CIDataTemplate** value);
    HRESULT (STDMETHODCALLTYPE* put_HeaderTemplate)(__x_ABI_CWindows_CUI_CXaml_CControls_CIItemsPresenter* This,
        __x_ABI_CWindows_CUI_CXaml_CIDataTemplate* value);
    HRESULT (STDMETHODCALLTYPE* get_HeaderTransitions)(__x_ABI_CWindows_CUI_CXaml_CControls_CIItemsPresenter* This,
        __x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CXaml__CMedia__CAnimation__CTransition** value);
    HRESULT (STDMETHODCALLTYPE* put_HeaderTransitions)(__x_ABI_CWindows_CUI_CXaml_CControls_CIItemsPresenter* This,
        __x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CXaml__CMedia__CAnimation__CTransition* value);
    HRESULT (STDMETHODCALLTYPE* get_Padding)(__x_ABI_CWindows_CUI_CXaml_CControls_CIItemsPresenter* This,
        struct __x_ABI_CWindows_CUI_CXaml_CThickness* value);
    HRESULT (STDMETHODCALLTYPE* put_Padding)(__x_ABI_CWindows_CUI_CXaml_CControls_CIItemsPresenter* This,
        struct __x_ABI_CWindows_CUI_CXaml_CThickness value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsPresenterVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsPresenter
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsPresenterVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIItemsPresenter;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIItemsPresenter_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIItemsPresenter2_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CControls_CIItemsPresenter2_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsPresenter2Vtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CControls_CIItemsPresenter2* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CControls_CIItemsPresenter2* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CControls_CIItemsPresenter2* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CControls_CIItemsPresenter2* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CControls_CIItemsPresenter2* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CControls_CIItemsPresenter2* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Footer)(__x_ABI_CWindows_CUI_CXaml_CControls_CIItemsPresenter2* This,
        IInspectable** value);
    HRESULT (STDMETHODCALLTYPE* put_Footer)(__x_ABI_CWindows_CUI_CXaml_CControls_CIItemsPresenter2* This,
        IInspectable* value);
    HRESULT (STDMETHODCALLTYPE* get_FooterTemplate)(__x_ABI_CWindows_CUI_CXaml_CControls_CIItemsPresenter2* This,
        __x_ABI_CWindows_CUI_CXaml_CIDataTemplate** value);
    HRESULT (STDMETHODCALLTYPE* put_FooterTemplate)(__x_ABI_CWindows_CUI_CXaml_CControls_CIItemsPresenter2* This,
        __x_ABI_CWindows_CUI_CXaml_CIDataTemplate* value);
    HRESULT (STDMETHODCALLTYPE* get_FooterTransitions)(__x_ABI_CWindows_CUI_CXaml_CControls_CIItemsPresenter2* This,
        __x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CXaml__CMedia__CAnimation__CTransition** value);
    HRESULT (STDMETHODCALLTYPE* put_FooterTransitions)(__x_ABI_CWindows_CUI_CXaml_CControls_CIItemsPresenter2* This,
        __x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CXaml__CMedia__CAnimation__CTransition* value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsPresenter2Vtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsPresenter2
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsPresenter2Vtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIItemsPresenter2;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIItemsPresenter2_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIItemsPresenterStatics_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CControls_CIItemsPresenterStatics_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsPresenterStaticsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CControls_CIItemsPresenterStatics* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CControls_CIItemsPresenterStatics* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CControls_CIItemsPresenterStatics* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CControls_CIItemsPresenterStatics* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CControls_CIItemsPresenterStatics* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CControls_CIItemsPresenterStatics* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_HeaderProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CIItemsPresenterStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_HeaderTemplateProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CIItemsPresenterStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_HeaderTransitionsProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CIItemsPresenterStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_PaddingProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CIItemsPresenterStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsPresenterStaticsVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsPresenterStatics
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsPresenterStaticsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIItemsPresenterStatics;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIItemsPresenterStatics_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIItemsPresenterStatics2_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CControls_CIItemsPresenterStatics2_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsPresenterStatics2Vtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CControls_CIItemsPresenterStatics2* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CControls_CIItemsPresenterStatics2* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CControls_CIItemsPresenterStatics2* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CControls_CIItemsPresenterStatics2* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CControls_CIItemsPresenterStatics2* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CControls_CIItemsPresenterStatics2* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_FooterProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CIItemsPresenterStatics2* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_FooterTemplateProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CIItemsPresenterStatics2* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_FooterTransitionsProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CIItemsPresenterStatics2* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsPresenterStatics2Vtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsPresenterStatics2
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsPresenterStatics2Vtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIItemsPresenterStatics2;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIItemsPresenterStatics2_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIItemsStackPanel_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CControls_CIItemsStackPanel_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsStackPanelVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CControls_CIItemsStackPanel* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CControls_CIItemsStackPanel* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CControls_CIItemsStackPanel* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CControls_CIItemsStackPanel* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CControls_CIItemsStackPanel* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CControls_CIItemsStackPanel* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_GroupPadding)(__x_ABI_CWindows_CUI_CXaml_CControls_CIItemsStackPanel* This,
        struct __x_ABI_CWindows_CUI_CXaml_CThickness* value);
    HRESULT (STDMETHODCALLTYPE* put_GroupPadding)(__x_ABI_CWindows_CUI_CXaml_CControls_CIItemsStackPanel* This,
        struct __x_ABI_CWindows_CUI_CXaml_CThickness value);
    HRESULT (STDMETHODCALLTYPE* get_Orientation)(__x_ABI_CWindows_CUI_CXaml_CControls_CIItemsStackPanel* This,
        enum __x_ABI_CWindows_CUI_CXaml_CControls_COrientation* value);
    HRESULT (STDMETHODCALLTYPE* put_Orientation)(__x_ABI_CWindows_CUI_CXaml_CControls_CIItemsStackPanel* This,
        enum __x_ABI_CWindows_CUI_CXaml_CControls_COrientation value);
    HRESULT (STDMETHODCALLTYPE* get_FirstCacheIndex)(__x_ABI_CWindows_CUI_CXaml_CControls_CIItemsStackPanel* This,
        INT32* value);
    HRESULT (STDMETHODCALLTYPE* get_FirstVisibleIndex)(__x_ABI_CWindows_CUI_CXaml_CControls_CIItemsStackPanel* This,
        INT32* value);
    HRESULT (STDMETHODCALLTYPE* get_LastVisibleIndex)(__x_ABI_CWindows_CUI_CXaml_CControls_CIItemsStackPanel* This,
        INT32* value);
    HRESULT (STDMETHODCALLTYPE* get_LastCacheIndex)(__x_ABI_CWindows_CUI_CXaml_CControls_CIItemsStackPanel* This,
        INT32* value);
    HRESULT (STDMETHODCALLTYPE* get_ScrollingDirection)(__x_ABI_CWindows_CUI_CXaml_CControls_CIItemsStackPanel* This,
        enum __x_ABI_CWindows_CUI_CXaml_CControls_CPanelScrollingDirection* value);
    HRESULT (STDMETHODCALLTYPE* get_GroupHeaderPlacement)(__x_ABI_CWindows_CUI_CXaml_CControls_CIItemsStackPanel* This,
        enum __x_ABI_CWindows_CUI_CXaml_CControls_CPrimitives_CGroupHeaderPlacement* value);
    HRESULT (STDMETHODCALLTYPE* put_GroupHeaderPlacement)(__x_ABI_CWindows_CUI_CXaml_CControls_CIItemsStackPanel* This,
        enum __x_ABI_CWindows_CUI_CXaml_CControls_CPrimitives_CGroupHeaderPlacement value);
    HRESULT (STDMETHODCALLTYPE* get_ItemsUpdatingScrollMode)(__x_ABI_CWindows_CUI_CXaml_CControls_CIItemsStackPanel* This,
        enum __x_ABI_CWindows_CUI_CXaml_CControls_CItemsUpdatingScrollMode* value);
    HRESULT (STDMETHODCALLTYPE* put_ItemsUpdatingScrollMode)(__x_ABI_CWindows_CUI_CXaml_CControls_CIItemsStackPanel* This,
        enum __x_ABI_CWindows_CUI_CXaml_CControls_CItemsUpdatingScrollMode value);
    HRESULT (STDMETHODCALLTYPE* get_CacheLength)(__x_ABI_CWindows_CUI_CXaml_CControls_CIItemsStackPanel* This,
        DOUBLE* value);
    HRESULT (STDMETHODCALLTYPE* put_CacheLength)(__x_ABI_CWindows_CUI_CXaml_CControls_CIItemsStackPanel* This,
        DOUBLE value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsStackPanelVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsStackPanel
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsStackPanelVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIItemsStackPanel;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIItemsStackPanel_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIItemsStackPanel2_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CControls_CIItemsStackPanel2_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsStackPanel2Vtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CControls_CIItemsStackPanel2* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CControls_CIItemsStackPanel2* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CControls_CIItemsStackPanel2* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CControls_CIItemsStackPanel2* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CControls_CIItemsStackPanel2* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CControls_CIItemsStackPanel2* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_AreStickyGroupHeadersEnabled)(__x_ABI_CWindows_CUI_CXaml_CControls_CIItemsStackPanel2* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* put_AreStickyGroupHeadersEnabled)(__x_ABI_CWindows_CUI_CXaml_CControls_CIItemsStackPanel2* This,
        boolean value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsStackPanel2Vtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsStackPanel2
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsStackPanel2Vtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIItemsStackPanel2;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIItemsStackPanel2_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIItemsStackPanelStatics_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CControls_CIItemsStackPanelStatics_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsStackPanelStaticsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CControls_CIItemsStackPanelStatics* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CControls_CIItemsStackPanelStatics* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CControls_CIItemsStackPanelStatics* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CControls_CIItemsStackPanelStatics* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CControls_CIItemsStackPanelStatics* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CControls_CIItemsStackPanelStatics* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_GroupPaddingProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CIItemsStackPanelStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_OrientationProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CIItemsStackPanelStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_GroupHeaderPlacementProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CIItemsStackPanelStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_CacheLengthProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CIItemsStackPanelStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsStackPanelStaticsVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsStackPanelStatics
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsStackPanelStaticsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIItemsStackPanelStatics;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIItemsStackPanelStatics_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIItemsStackPanelStatics2_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CControls_CIItemsStackPanelStatics2_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsStackPanelStatics2Vtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CControls_CIItemsStackPanelStatics2* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CControls_CIItemsStackPanelStatics2* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CControls_CIItemsStackPanelStatics2* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CControls_CIItemsStackPanelStatics2* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CControls_CIItemsStackPanelStatics2* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CControls_CIItemsStackPanelStatics2* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_AreStickyGroupHeadersEnabledProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CIItemsStackPanelStatics2* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsStackPanelStatics2Vtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsStackPanelStatics2
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsStackPanelStatics2Vtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIItemsStackPanelStatics2;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIItemsStackPanelStatics2_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIItemsWrapGrid_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CControls_CIItemsWrapGrid_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsWrapGridVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CControls_CIItemsWrapGrid* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CControls_CIItemsWrapGrid* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CControls_CIItemsWrapGrid* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CControls_CIItemsWrapGrid* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CControls_CIItemsWrapGrid* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CControls_CIItemsWrapGrid* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_GroupPadding)(__x_ABI_CWindows_CUI_CXaml_CControls_CIItemsWrapGrid* This,
        struct __x_ABI_CWindows_CUI_CXaml_CThickness* value);
    HRESULT (STDMETHODCALLTYPE* put_GroupPadding)(__x_ABI_CWindows_CUI_CXaml_CControls_CIItemsWrapGrid* This,
        struct __x_ABI_CWindows_CUI_CXaml_CThickness value);
    HRESULT (STDMETHODCALLTYPE* get_Orientation)(__x_ABI_CWindows_CUI_CXaml_CControls_CIItemsWrapGrid* This,
        enum __x_ABI_CWindows_CUI_CXaml_CControls_COrientation* value);
    HRESULT (STDMETHODCALLTYPE* put_Orientation)(__x_ABI_CWindows_CUI_CXaml_CControls_CIItemsWrapGrid* This,
        enum __x_ABI_CWindows_CUI_CXaml_CControls_COrientation value);
    HRESULT (STDMETHODCALLTYPE* get_MaximumRowsOrColumns)(__x_ABI_CWindows_CUI_CXaml_CControls_CIItemsWrapGrid* This,
        INT32* value);
    HRESULT (STDMETHODCALLTYPE* put_MaximumRowsOrColumns)(__x_ABI_CWindows_CUI_CXaml_CControls_CIItemsWrapGrid* This,
        INT32 value);
    HRESULT (STDMETHODCALLTYPE* get_ItemWidth)(__x_ABI_CWindows_CUI_CXaml_CControls_CIItemsWrapGrid* This,
        DOUBLE* value);
    HRESULT (STDMETHODCALLTYPE* put_ItemWidth)(__x_ABI_CWindows_CUI_CXaml_CControls_CIItemsWrapGrid* This,
        DOUBLE value);
    HRESULT (STDMETHODCALLTYPE* get_ItemHeight)(__x_ABI_CWindows_CUI_CXaml_CControls_CIItemsWrapGrid* This,
        DOUBLE* value);
    HRESULT (STDMETHODCALLTYPE* put_ItemHeight)(__x_ABI_CWindows_CUI_CXaml_CControls_CIItemsWrapGrid* This,
        DOUBLE value);
    HRESULT (STDMETHODCALLTYPE* get_FirstCacheIndex)(__x_ABI_CWindows_CUI_CXaml_CControls_CIItemsWrapGrid* This,
        INT32* value);
    HRESULT (STDMETHODCALLTYPE* get_FirstVisibleIndex)(__x_ABI_CWindows_CUI_CXaml_CControls_CIItemsWrapGrid* This,
        INT32* value);
    HRESULT (STDMETHODCALLTYPE* get_LastVisibleIndex)(__x_ABI_CWindows_CUI_CXaml_CControls_CIItemsWrapGrid* This,
        INT32* value);
    HRESULT (STDMETHODCALLTYPE* get_LastCacheIndex)(__x_ABI_CWindows_CUI_CXaml_CControls_CIItemsWrapGrid* This,
        INT32* value);
    HRESULT (STDMETHODCALLTYPE* get_ScrollingDirection)(__x_ABI_CWindows_CUI_CXaml_CControls_CIItemsWrapGrid* This,
        enum __x_ABI_CWindows_CUI_CXaml_CControls_CPanelScrollingDirection* value);
    HRESULT (STDMETHODCALLTYPE* get_GroupHeaderPlacement)(__x_ABI_CWindows_CUI_CXaml_CControls_CIItemsWrapGrid* This,
        enum __x_ABI_CWindows_CUI_CXaml_CControls_CPrimitives_CGroupHeaderPlacement* value);
    HRESULT (STDMETHODCALLTYPE* put_GroupHeaderPlacement)(__x_ABI_CWindows_CUI_CXaml_CControls_CIItemsWrapGrid* This,
        enum __x_ABI_CWindows_CUI_CXaml_CControls_CPrimitives_CGroupHeaderPlacement value);
    HRESULT (STDMETHODCALLTYPE* get_CacheLength)(__x_ABI_CWindows_CUI_CXaml_CControls_CIItemsWrapGrid* This,
        DOUBLE* value);
    HRESULT (STDMETHODCALLTYPE* put_CacheLength)(__x_ABI_CWindows_CUI_CXaml_CControls_CIItemsWrapGrid* This,
        DOUBLE value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsWrapGridVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsWrapGrid
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsWrapGridVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIItemsWrapGrid;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIItemsWrapGrid_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIItemsWrapGrid2_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CControls_CIItemsWrapGrid2_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsWrapGrid2Vtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CControls_CIItemsWrapGrid2* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CControls_CIItemsWrapGrid2* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CControls_CIItemsWrapGrid2* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CControls_CIItemsWrapGrid2* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CControls_CIItemsWrapGrid2* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CControls_CIItemsWrapGrid2* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_AreStickyGroupHeadersEnabled)(__x_ABI_CWindows_CUI_CXaml_CControls_CIItemsWrapGrid2* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* put_AreStickyGroupHeadersEnabled)(__x_ABI_CWindows_CUI_CXaml_CControls_CIItemsWrapGrid2* This,
        boolean value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsWrapGrid2Vtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsWrapGrid2
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsWrapGrid2Vtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIItemsWrapGrid2;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIItemsWrapGrid2_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIItemsWrapGridStatics_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CControls_CIItemsWrapGridStatics_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsWrapGridStaticsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CControls_CIItemsWrapGridStatics* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CControls_CIItemsWrapGridStatics* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CControls_CIItemsWrapGridStatics* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CControls_CIItemsWrapGridStatics* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CControls_CIItemsWrapGridStatics* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CControls_CIItemsWrapGridStatics* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_GroupPaddingProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CIItemsWrapGridStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_OrientationProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CIItemsWrapGridStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_MaximumRowsOrColumnsProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CIItemsWrapGridStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_ItemWidthProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CIItemsWrapGridStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_ItemHeightProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CIItemsWrapGridStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_GroupHeaderPlacementProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CIItemsWrapGridStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_CacheLengthProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CIItemsWrapGridStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsWrapGridStaticsVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsWrapGridStatics
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsWrapGridStaticsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIItemsWrapGridStatics;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIItemsWrapGridStatics_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIItemsWrapGridStatics2_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CControls_CIItemsWrapGridStatics2_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsWrapGridStatics2Vtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CControls_CIItemsWrapGridStatics2* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CControls_CIItemsWrapGridStatics2* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CControls_CIItemsWrapGridStatics2* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CControls_CIItemsWrapGridStatics2* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CControls_CIItemsWrapGridStatics2* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CControls_CIItemsWrapGridStatics2* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_AreStickyGroupHeadersEnabledProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CIItemsWrapGridStatics2* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsWrapGridStatics2Vtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsWrapGridStatics2
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsWrapGridStatics2Vtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIItemsWrapGridStatics2;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIItemsWrapGridStatics2_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIListBox_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CControls_CIListBox_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIListBoxVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CControls_CIListBox* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CControls_CIListBox* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CControls_CIListBox* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CControls_CIListBox* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CControls_CIListBox* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CControls_CIListBox* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_SelectedItems)(__x_ABI_CWindows_CUI_CXaml_CControls_CIListBox* This,
        __x_ABI_C__FIVector_1_IInspectable** value);
    HRESULT (STDMETHODCALLTYPE* get_SelectionMode)(__x_ABI_CWindows_CUI_CXaml_CControls_CIListBox* This,
        enum __x_ABI_CWindows_CUI_CXaml_CControls_CSelectionMode* value);
    HRESULT (STDMETHODCALLTYPE* put_SelectionMode)(__x_ABI_CWindows_CUI_CXaml_CControls_CIListBox* This,
        enum __x_ABI_CWindows_CUI_CXaml_CControls_CSelectionMode value);
    HRESULT (STDMETHODCALLTYPE* ScrollIntoView)(__x_ABI_CWindows_CUI_CXaml_CControls_CIListBox* This,
        IInspectable* item);
    HRESULT (STDMETHODCALLTYPE* SelectAll)(__x_ABI_CWindows_CUI_CXaml_CControls_CIListBox* This);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CIListBoxVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CIListBox
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIListBoxVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIListBox;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIListBox_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIListBox2_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CControls_CIListBox2_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIListBox2Vtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CControls_CIListBox2* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CControls_CIListBox2* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CControls_CIListBox2* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CControls_CIListBox2* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CControls_CIListBox2* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CControls_CIListBox2* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_SingleSelectionFollowsFocus)(__x_ABI_CWindows_CUI_CXaml_CControls_CIListBox2* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* put_SingleSelectionFollowsFocus)(__x_ABI_CWindows_CUI_CXaml_CControls_CIListBox2* This,
        boolean value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CIListBox2Vtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CIListBox2
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIListBox2Vtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIListBox2;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIListBox2_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIListBoxFactory_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CControls_CIListBoxFactory_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIListBoxFactoryVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CControls_CIListBoxFactory* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CControls_CIListBoxFactory* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CControls_CIListBoxFactory* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CControls_CIListBoxFactory* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CControls_CIListBoxFactory* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CControls_CIListBoxFactory* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* CreateInstance)(__x_ABI_CWindows_CUI_CXaml_CControls_CIListBoxFactory* This,
        IInspectable* baseInterface,
        IInspectable** innerInterface,
        __x_ABI_CWindows_CUI_CXaml_CControls_CIListBox** value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CIListBoxFactoryVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CIListBoxFactory
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIListBoxFactoryVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIListBoxFactory;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIListBoxFactory_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIListBoxItem_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CControls_CIListBoxItem_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIListBoxItemVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CControls_CIListBoxItem* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CControls_CIListBoxItem* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CControls_CIListBoxItem* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CControls_CIListBoxItem* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CControls_CIListBoxItem* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CControls_CIListBoxItem* This,
            TrustLevel* trustLevel);
    
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CIListBoxItemVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CIListBoxItem
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIListBoxItemVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIListBoxItem;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIListBoxItem_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIListBoxItemFactory_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CControls_CIListBoxItemFactory_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIListBoxItemFactoryVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CControls_CIListBoxItemFactory* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CControls_CIListBoxItemFactory* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CControls_CIListBoxItemFactory* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CControls_CIListBoxItemFactory* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CControls_CIListBoxItemFactory* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CControls_CIListBoxItemFactory* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* CreateInstance)(__x_ABI_CWindows_CUI_CXaml_CControls_CIListBoxItemFactory* This,
        IInspectable* baseInterface,
        IInspectable** innerInterface,
        __x_ABI_CWindows_CUI_CXaml_CControls_CIListBoxItem** value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CIListBoxItemFactoryVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CIListBoxItemFactory
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIListBoxItemFactoryVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIListBoxItemFactory;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIListBoxItemFactory_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIListBoxStatics_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CControls_CIListBoxStatics_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIListBoxStaticsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CControls_CIListBoxStatics* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CControls_CIListBoxStatics* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CControls_CIListBoxStatics* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CControls_CIListBoxStatics* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CControls_CIListBoxStatics* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CControls_CIListBoxStatics* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_SelectionModeProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CIListBoxStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CIListBoxStaticsVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CIListBoxStatics
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIListBoxStaticsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIListBoxStatics;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIListBoxStatics_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIListBoxStatics2_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CControls_CIListBoxStatics2_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIListBoxStatics2Vtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CControls_CIListBoxStatics2* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CControls_CIListBoxStatics2* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CControls_CIListBoxStatics2* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CControls_CIListBoxStatics2* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CControls_CIListBoxStatics2* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CControls_CIListBoxStatics2* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_SingleSelectionFollowsFocusProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CIListBoxStatics2* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CIListBoxStatics2Vtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CIListBoxStatics2
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIListBoxStatics2Vtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIListBoxStatics2;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIListBoxStatics2_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIListPickerFlyout_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CControls_CIListPickerFlyout_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIListPickerFlyoutVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CControls_CIListPickerFlyout* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CControls_CIListPickerFlyout* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CControls_CIListPickerFlyout* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CControls_CIListPickerFlyout* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CControls_CIListPickerFlyout* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CControls_CIListPickerFlyout* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_ItemsSource)(__x_ABI_CWindows_CUI_CXaml_CControls_CIListPickerFlyout* This,
        IInspectable** value);
    HRESULT (STDMETHODCALLTYPE* put_ItemsSource)(__x_ABI_CWindows_CUI_CXaml_CControls_CIListPickerFlyout* This,
        IInspectable* value);
    HRESULT (STDMETHODCALLTYPE* get_ItemTemplate)(__x_ABI_CWindows_CUI_CXaml_CControls_CIListPickerFlyout* This,
        __x_ABI_CWindows_CUI_CXaml_CIDataTemplate** value);
    HRESULT (STDMETHODCALLTYPE* put_ItemTemplate)(__x_ABI_CWindows_CUI_CXaml_CControls_CIListPickerFlyout* This,
        __x_ABI_CWindows_CUI_CXaml_CIDataTemplate* value);
    HRESULT (STDMETHODCALLTYPE* get_DisplayMemberPath)(__x_ABI_CWindows_CUI_CXaml_CControls_CIListPickerFlyout* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* put_DisplayMemberPath)(__x_ABI_CWindows_CUI_CXaml_CControls_CIListPickerFlyout* This,
        HSTRING value);
    HRESULT (STDMETHODCALLTYPE* get_SelectionMode)(__x_ABI_CWindows_CUI_CXaml_CControls_CIListPickerFlyout* This,
        enum __x_ABI_CWindows_CUI_CXaml_CControls_CListPickerFlyoutSelectionMode* value);
    HRESULT (STDMETHODCALLTYPE* put_SelectionMode)(__x_ABI_CWindows_CUI_CXaml_CControls_CIListPickerFlyout* This,
        enum __x_ABI_CWindows_CUI_CXaml_CControls_CListPickerFlyoutSelectionMode value);
    HRESULT (STDMETHODCALLTYPE* get_SelectedIndex)(__x_ABI_CWindows_CUI_CXaml_CControls_CIListPickerFlyout* This,
        INT32* value);
    HRESULT (STDMETHODCALLTYPE* put_SelectedIndex)(__x_ABI_CWindows_CUI_CXaml_CControls_CIListPickerFlyout* This,
        INT32 value);
    HRESULT (STDMETHODCALLTYPE* get_SelectedItem)(__x_ABI_CWindows_CUI_CXaml_CControls_CIListPickerFlyout* This,
        IInspectable** value);
    HRESULT (STDMETHODCALLTYPE* put_SelectedItem)(__x_ABI_CWindows_CUI_CXaml_CControls_CIListPickerFlyout* This,
        IInspectable* value);
    HRESULT (STDMETHODCALLTYPE* get_SelectedValue)(__x_ABI_CWindows_CUI_CXaml_CControls_CIListPickerFlyout* This,
        IInspectable** value);
    HRESULT (STDMETHODCALLTYPE* put_SelectedValue)(__x_ABI_CWindows_CUI_CXaml_CControls_CIListPickerFlyout* This,
        IInspectable* value);
    HRESULT (STDMETHODCALLTYPE* get_SelectedValuePath)(__x_ABI_CWindows_CUI_CXaml_CControls_CIListPickerFlyout* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* put_SelectedValuePath)(__x_ABI_CWindows_CUI_CXaml_CControls_CIListPickerFlyout* This,
        HSTRING value);
    HRESULT (STDMETHODCALLTYPE* get_SelectedItems)(__x_ABI_CWindows_CUI_CXaml_CControls_CIListPickerFlyout* This,
        __x_ABI_C__FIVector_1_IInspectable** value);
    HRESULT (STDMETHODCALLTYPE* add_ItemsPicked)(__x_ABI_CWindows_CUI_CXaml_CControls_CIListPickerFlyout* This,
        __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CListPickerFlyout___x_ABI_CWindows__CUI__CXaml__CControls__CItemsPickedEventArgs* handler,
        EventRegistrationToken* token);
    HRESULT (STDMETHODCALLTYPE* remove_ItemsPicked)(__x_ABI_CWindows_CUI_CXaml_CControls_CIListPickerFlyout* This,
        EventRegistrationToken token);
    HRESULT (STDMETHODCALLTYPE* ShowAtAsync)(__x_ABI_CWindows_CUI_CXaml_CControls_CIListPickerFlyout* This,
        __x_ABI_CWindows_CUI_CXaml_CIFrameworkElement* target,
        __x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1_IInspectable** operation);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CIListPickerFlyoutVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CIListPickerFlyout
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIListPickerFlyoutVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIListPickerFlyout;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIListPickerFlyout_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIListPickerFlyoutPresenter_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CControls_CIListPickerFlyoutPresenter_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIListPickerFlyoutPresenterVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CControls_CIListPickerFlyoutPresenter* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CControls_CIListPickerFlyoutPresenter* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CControls_CIListPickerFlyoutPresenter* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CControls_CIListPickerFlyoutPresenter* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CControls_CIListPickerFlyoutPresenter* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CControls_CIListPickerFlyoutPresenter* This,
            TrustLevel* trustLevel);
    
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CIListPickerFlyoutPresenterVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CIListPickerFlyoutPresenter
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIListPickerFlyoutPresenterVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIListPickerFlyoutPresenter;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIListPickerFlyoutPresenter_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIListPickerFlyoutStatics_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CControls_CIListPickerFlyoutStatics_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIListPickerFlyoutStaticsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CControls_CIListPickerFlyoutStatics* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CControls_CIListPickerFlyoutStatics* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CControls_CIListPickerFlyoutStatics* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CControls_CIListPickerFlyoutStatics* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CControls_CIListPickerFlyoutStatics* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CControls_CIListPickerFlyoutStatics* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_ItemsSourceProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CIListPickerFlyoutStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_ItemTemplateProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CIListPickerFlyoutStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_DisplayMemberPathProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CIListPickerFlyoutStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_SelectionModeProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CIListPickerFlyoutStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_SelectedIndexProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CIListPickerFlyoutStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_SelectedItemProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CIListPickerFlyoutStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_SelectedValueProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CIListPickerFlyoutStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_SelectedValuePathProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CIListPickerFlyoutStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CIListPickerFlyoutStaticsVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CIListPickerFlyoutStatics
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIListPickerFlyoutStaticsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIListPickerFlyoutStatics;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIListPickerFlyoutStatics_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIListView_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CControls_CIListView_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIListViewVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CControls_CIListView* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CControls_CIListView* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CControls_CIListView* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CControls_CIListView* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CControls_CIListView* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CControls_CIListView* This,
            TrustLevel* trustLevel);
    
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CIListViewVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CIListView
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIListViewVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIListView;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIListView_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBase_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBase_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBaseVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBase* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBase* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBase* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBase* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBase* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBase* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_SelectedItems)(__x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBase* This,
        __x_ABI_C__FIVector_1_IInspectable** value);
    HRESULT (STDMETHODCALLTYPE* get_SelectionMode)(__x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBase* This,
        enum __x_ABI_CWindows_CUI_CXaml_CControls_CListViewSelectionMode* value);
    HRESULT (STDMETHODCALLTYPE* put_SelectionMode)(__x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBase* This,
        enum __x_ABI_CWindows_CUI_CXaml_CControls_CListViewSelectionMode value);
    HRESULT (STDMETHODCALLTYPE* get_IsSwipeEnabled)(__x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBase* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* put_IsSwipeEnabled)(__x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBase* This,
        boolean value);
    HRESULT (STDMETHODCALLTYPE* get_CanDragItems)(__x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBase* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* put_CanDragItems)(__x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBase* This,
        boolean value);
    HRESULT (STDMETHODCALLTYPE* get_CanReorderItems)(__x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBase* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* put_CanReorderItems)(__x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBase* This,
        boolean value);
    HRESULT (STDMETHODCALLTYPE* get_IsItemClickEnabled)(__x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBase* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* put_IsItemClickEnabled)(__x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBase* This,
        boolean value);
    HRESULT (STDMETHODCALLTYPE* get_DataFetchSize)(__x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBase* This,
        DOUBLE* value);
    HRESULT (STDMETHODCALLTYPE* put_DataFetchSize)(__x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBase* This,
        DOUBLE value);
    HRESULT (STDMETHODCALLTYPE* get_IncrementalLoadingThreshold)(__x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBase* This,
        DOUBLE* value);
    HRESULT (STDMETHODCALLTYPE* put_IncrementalLoadingThreshold)(__x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBase* This,
        DOUBLE value);
    HRESULT (STDMETHODCALLTYPE* get_IncrementalLoadingTrigger)(__x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBase* This,
        enum __x_ABI_CWindows_CUI_CXaml_CControls_CIncrementalLoadingTrigger* value);
    HRESULT (STDMETHODCALLTYPE* put_IncrementalLoadingTrigger)(__x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBase* This,
        enum __x_ABI_CWindows_CUI_CXaml_CControls_CIncrementalLoadingTrigger value);
    HRESULT (STDMETHODCALLTYPE* add_ItemClick)(__x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBase* This,
        __x_ABI_CWindows_CUI_CXaml_CControls_CIItemClickEventHandler* handler,
        EventRegistrationToken* token);
    HRESULT (STDMETHODCALLTYPE* remove_ItemClick)(__x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBase* This,
        EventRegistrationToken token);
    HRESULT (STDMETHODCALLTYPE* add_DragItemsStarting)(__x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBase* This,
        __x_ABI_CWindows_CUI_CXaml_CControls_CIDragItemsStartingEventHandler* handler,
        EventRegistrationToken* token);
    HRESULT (STDMETHODCALLTYPE* remove_DragItemsStarting)(__x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBase* This,
        EventRegistrationToken token);
    HRESULT (STDMETHODCALLTYPE* ScrollIntoView)(__x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBase* This,
        IInspectable* item);
    HRESULT (STDMETHODCALLTYPE* SelectAll)(__x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBase* This);
    HRESULT (STDMETHODCALLTYPE* LoadMoreItemsAsync)(__x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBase* This,
        __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CUI__CXaml__CData__CLoadMoreItemsResult** operation);
    HRESULT (STDMETHODCALLTYPE* ScrollIntoViewWithAlignment)(__x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBase* This,
        IInspectable* item,
        enum __x_ABI_CWindows_CUI_CXaml_CControls_CScrollIntoViewAlignment alignment);
    HRESULT (STDMETHODCALLTYPE* get_Header)(__x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBase* This,
        IInspectable** value);
    HRESULT (STDMETHODCALLTYPE* put_Header)(__x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBase* This,
        IInspectable* value);
    HRESULT (STDMETHODCALLTYPE* get_HeaderTemplate)(__x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBase* This,
        __x_ABI_CWindows_CUI_CXaml_CIDataTemplate** value);
    HRESULT (STDMETHODCALLTYPE* put_HeaderTemplate)(__x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBase* This,
        __x_ABI_CWindows_CUI_CXaml_CIDataTemplate* value);
    HRESULT (STDMETHODCALLTYPE* get_HeaderTransitions)(__x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBase* This,
        __x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CXaml__CMedia__CAnimation__CTransition** value);
    HRESULT (STDMETHODCALLTYPE* put_HeaderTransitions)(__x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBase* This,
        __x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CXaml__CMedia__CAnimation__CTransition* value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBaseVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBase
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBaseVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBase;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBase_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBase2_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBase2_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBase2Vtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBase2* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBase2* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBase2* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBase2* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBase2* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBase2* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_ShowsScrollingPlaceholders)(__x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBase2* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* put_ShowsScrollingPlaceholders)(__x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBase2* This,
        boolean value);
    HRESULT (STDMETHODCALLTYPE* add_ContainerContentChanging)(__x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBase2* This,
        __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CListViewBase___x_ABI_CWindows__CUI__CXaml__CControls__CContainerContentChangingEventArgs* handler,
        EventRegistrationToken* token);
    HRESULT (STDMETHODCALLTYPE* remove_ContainerContentChanging)(__x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBase2* This,
        EventRegistrationToken token);
    HRESULT (STDMETHODCALLTYPE* SetDesiredContainerUpdateDuration)(__x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBase2* This,
        struct __x_ABI_CWindows_CFoundation_CTimeSpan duration);
    HRESULT (STDMETHODCALLTYPE* get_Footer)(__x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBase2* This,
        IInspectable** value);
    HRESULT (STDMETHODCALLTYPE* put_Footer)(__x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBase2* This,
        IInspectable* value);
    HRESULT (STDMETHODCALLTYPE* get_FooterTemplate)(__x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBase2* This,
        __x_ABI_CWindows_CUI_CXaml_CIDataTemplate** value);
    HRESULT (STDMETHODCALLTYPE* put_FooterTemplate)(__x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBase2* This,
        __x_ABI_CWindows_CUI_CXaml_CIDataTemplate* value);
    HRESULT (STDMETHODCALLTYPE* get_FooterTransitions)(__x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBase2* This,
        __x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CXaml__CMedia__CAnimation__CTransition** value);
    HRESULT (STDMETHODCALLTYPE* put_FooterTransitions)(__x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBase2* This,
        __x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CXaml__CMedia__CAnimation__CTransition* value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBase2Vtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBase2
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBase2Vtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBase2;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBase2_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBase3_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBase3_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBase3Vtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBase3* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBase3* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBase3* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBase3* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBase3* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBase3* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_ReorderMode)(__x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBase3* This,
        enum __x_ABI_CWindows_CUI_CXaml_CControls_CListViewReorderMode* value);
    HRESULT (STDMETHODCALLTYPE* put_ReorderMode)(__x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBase3* This,
        enum __x_ABI_CWindows_CUI_CXaml_CControls_CListViewReorderMode value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBase3Vtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBase3
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBase3Vtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBase3;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBase3_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBase4_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBase4_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBase4Vtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBase4* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBase4* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBase4* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBase4* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBase4* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBase4* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_SelectedRanges)(__x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBase4* This,
        __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CXaml__CData__CItemIndexRange** value);
    HRESULT (STDMETHODCALLTYPE* get_IsMultiSelectCheckBoxEnabled)(__x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBase4* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* put_IsMultiSelectCheckBoxEnabled)(__x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBase4* This,
        boolean value);
    HRESULT (STDMETHODCALLTYPE* add_DragItemsCompleted)(__x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBase4* This,
        __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CListViewBase___x_ABI_CWindows__CUI__CXaml__CControls__CDragItemsCompletedEventArgs* handler,
        EventRegistrationToken* token);
    HRESULT (STDMETHODCALLTYPE* remove_DragItemsCompleted)(__x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBase4* This,
        EventRegistrationToken token);
    HRESULT (STDMETHODCALLTYPE* add_ChoosingItemContainer)(__x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBase4* This,
        __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CListViewBase___x_ABI_CWindows__CUI__CXaml__CControls__CChoosingItemContainerEventArgs* handler,
        EventRegistrationToken* token);
    HRESULT (STDMETHODCALLTYPE* remove_ChoosingItemContainer)(__x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBase4* This,
        EventRegistrationToken token);
    HRESULT (STDMETHODCALLTYPE* add_ChoosingGroupHeaderContainer)(__x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBase4* This,
        __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CListViewBase___x_ABI_CWindows__CUI__CXaml__CControls__CChoosingGroupHeaderContainerEventArgs* handler,
        EventRegistrationToken* token);
    HRESULT (STDMETHODCALLTYPE* remove_ChoosingGroupHeaderContainer)(__x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBase4* This,
        EventRegistrationToken token);
    HRESULT (STDMETHODCALLTYPE* SelectRange)(__x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBase4* This,
        __x_ABI_CWindows_CUI_CXaml_CData_CIItemIndexRange* itemIndexRange);
    HRESULT (STDMETHODCALLTYPE* DeselectRange)(__x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBase4* This,
        __x_ABI_CWindows_CUI_CXaml_CData_CIItemIndexRange* itemIndexRange);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBase4Vtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBase4
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBase4Vtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBase4;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBase4_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBase5_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBase5_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBase5Vtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBase5* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBase5* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBase5* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBase5* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBase5* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBase5* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_SingleSelectionFollowsFocus)(__x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBase5* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* put_SingleSelectionFollowsFocus)(__x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBase5* This,
        boolean value);
    HRESULT (STDMETHODCALLTYPE* IsDragSource)(__x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBase5* This,
        boolean* result);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBase5Vtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBase5
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBase5Vtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBase5;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBase5_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBase6_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBase6_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBase6Vtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBase6* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBase6* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBase6* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBase6* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBase6* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBase6* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* TryStartConnectedAnimationAsync)(__x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBase6* This,
        __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIConnectedAnimation* animation,
        IInspectable* item,
        HSTRING elementName,
        __x_ABI_C__FIAsyncOperation_1_boolean** operation);
    HRESULT (STDMETHODCALLTYPE* PrepareConnectedAnimation)(__x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBase6* This,
        HSTRING key,
        IInspectable* item,
        HSTRING elementName,
        __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIConnectedAnimation** result);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBase6Vtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBase6
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBase6Vtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBase6;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBase6_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBaseFactory_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBaseFactory_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBaseFactoryVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBaseFactory* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBaseFactory* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBaseFactory* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBaseFactory* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBaseFactory* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBaseFactory* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* CreateInstance)(__x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBaseFactory* This,
        IInspectable* baseInterface,
        IInspectable** innerInterface,
        __x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBase** value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBaseFactoryVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBaseFactory
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBaseFactoryVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBaseFactory;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBaseFactory_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBaseHeaderItem_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBaseHeaderItem_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBaseHeaderItemVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBaseHeaderItem* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBaseHeaderItem* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBaseHeaderItem* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBaseHeaderItem* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBaseHeaderItem* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBaseHeaderItem* This,
            TrustLevel* trustLevel);
    
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBaseHeaderItemVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBaseHeaderItem
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBaseHeaderItemVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBaseHeaderItem;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBaseHeaderItem_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBaseHeaderItemFactory_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBaseHeaderItemFactory_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBaseHeaderItemFactoryVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBaseHeaderItemFactory* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBaseHeaderItemFactory* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBaseHeaderItemFactory* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBaseHeaderItemFactory* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBaseHeaderItemFactory* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBaseHeaderItemFactory* This,
            TrustLevel* trustLevel);
    
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBaseHeaderItemFactoryVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBaseHeaderItemFactory
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBaseHeaderItemFactoryVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBaseHeaderItemFactory;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBaseHeaderItemFactory_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBaseStatics_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBaseStatics_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBaseStaticsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBaseStatics* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBaseStatics* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBaseStatics* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBaseStatics* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBaseStatics* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBaseStatics* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_SelectionModeProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBaseStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_IsSwipeEnabledProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBaseStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_CanDragItemsProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBaseStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_CanReorderItemsProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBaseStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_IsItemClickEnabledProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBaseStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_DataFetchSizeProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBaseStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_IncrementalLoadingThresholdProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBaseStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_IncrementalLoadingTriggerProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBaseStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_SemanticZoomOwnerProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBaseStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_IsActiveViewProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBaseStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_IsZoomedInViewProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBaseStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_HeaderProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBaseStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_HeaderTemplateProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBaseStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_HeaderTransitionsProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBaseStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBaseStaticsVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBaseStatics
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBaseStaticsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBaseStatics;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBaseStatics_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBaseStatics2_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBaseStatics2_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBaseStatics2Vtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBaseStatics2* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBaseStatics2* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBaseStatics2* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBaseStatics2* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBaseStatics2* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBaseStatics2* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_ShowsScrollingPlaceholdersProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBaseStatics2* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_FooterProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBaseStatics2* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_FooterTemplateProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBaseStatics2* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_FooterTransitionsProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBaseStatics2* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBaseStatics2Vtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBaseStatics2
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBaseStatics2Vtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBaseStatics2;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBaseStatics2_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBaseStatics3_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBaseStatics3_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBaseStatics3Vtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBaseStatics3* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBaseStatics3* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBaseStatics3* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBaseStatics3* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBaseStatics3* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBaseStatics3* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_ReorderModeProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBaseStatics3* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBaseStatics3Vtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBaseStatics3
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBaseStatics3Vtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBaseStatics3;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBaseStatics3_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBaseStatics4_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBaseStatics4_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBaseStatics4Vtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBaseStatics4* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBaseStatics4* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBaseStatics4* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBaseStatics4* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBaseStatics4* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBaseStatics4* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_IsMultiSelectCheckBoxEnabledProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBaseStatics4* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBaseStatics4Vtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBaseStatics4
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBaseStatics4Vtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBaseStatics4;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBaseStatics4_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBaseStatics5_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBaseStatics5_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBaseStatics5Vtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBaseStatics5* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBaseStatics5* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBaseStatics5* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBaseStatics5* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBaseStatics5* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBaseStatics5* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_SingleSelectionFollowsFocusProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBaseStatics5* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBaseStatics5Vtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBaseStatics5
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBaseStatics5Vtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBaseStatics5;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBaseStatics5_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIListViewFactory_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CControls_CIListViewFactory_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIListViewFactoryVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CControls_CIListViewFactory* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CControls_CIListViewFactory* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CControls_CIListViewFactory* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CControls_CIListViewFactory* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CControls_CIListViewFactory* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CControls_CIListViewFactory* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* CreateInstance)(__x_ABI_CWindows_CUI_CXaml_CControls_CIListViewFactory* This,
        IInspectable* baseInterface,
        IInspectable** innerInterface,
        __x_ABI_CWindows_CUI_CXaml_CControls_CIListView** value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CIListViewFactoryVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CIListViewFactory
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIListViewFactoryVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIListViewFactory;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIListViewFactory_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIListViewHeaderItem_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CControls_CIListViewHeaderItem_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIListViewHeaderItemVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CControls_CIListViewHeaderItem* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CControls_CIListViewHeaderItem* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CControls_CIListViewHeaderItem* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CControls_CIListViewHeaderItem* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CControls_CIListViewHeaderItem* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CControls_CIListViewHeaderItem* This,
            TrustLevel* trustLevel);
    
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CIListViewHeaderItemVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CIListViewHeaderItem
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIListViewHeaderItemVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIListViewHeaderItem;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIListViewHeaderItem_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIListViewHeaderItemFactory_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CControls_CIListViewHeaderItemFactory_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIListViewHeaderItemFactoryVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CControls_CIListViewHeaderItemFactory* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CControls_CIListViewHeaderItemFactory* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CControls_CIListViewHeaderItemFactory* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CControls_CIListViewHeaderItemFactory* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CControls_CIListViewHeaderItemFactory* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CControls_CIListViewHeaderItemFactory* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* CreateInstance)(__x_ABI_CWindows_CUI_CXaml_CControls_CIListViewHeaderItemFactory* This,
        IInspectable* baseInterface,
        IInspectable** innerInterface,
        __x_ABI_CWindows_CUI_CXaml_CControls_CIListViewHeaderItem** value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CIListViewHeaderItemFactoryVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CIListViewHeaderItemFactory
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIListViewHeaderItemFactoryVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIListViewHeaderItemFactory;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIListViewHeaderItemFactory_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIListViewItem_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CControls_CIListViewItem_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIListViewItemVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CControls_CIListViewItem* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CControls_CIListViewItem* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CControls_CIListViewItem* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CControls_CIListViewItem* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CControls_CIListViewItem* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CControls_CIListViewItem* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_TemplateSettings)(__x_ABI_CWindows_CUI_CXaml_CControls_CIListViewItem* This,
        __x_ABI_CWindows_CUI_CXaml_CControls_CPrimitives_CIListViewItemTemplateSettings** value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CIListViewItemVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CIListViewItem
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIListViewItemVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIListViewItem;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIListViewItem_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIListViewItemFactory_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CControls_CIListViewItemFactory_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIListViewItemFactoryVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CControls_CIListViewItemFactory* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CControls_CIListViewItemFactory* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CControls_CIListViewItemFactory* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CControls_CIListViewItemFactory* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CControls_CIListViewItemFactory* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CControls_CIListViewItemFactory* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* CreateInstance)(__x_ABI_CWindows_CUI_CXaml_CControls_CIListViewItemFactory* This,
        IInspectable* baseInterface,
        IInspectable** innerInterface,
        __x_ABI_CWindows_CUI_CXaml_CControls_CIListViewItem** value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CIListViewItemFactoryVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CIListViewItemFactory
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIListViewItemFactoryVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIListViewItemFactory;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIListViewItemFactory_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIListViewPersistenceHelper_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CControls_CIListViewPersistenceHelper_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIListViewPersistenceHelperVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CControls_CIListViewPersistenceHelper* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CControls_CIListViewPersistenceHelper* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CControls_CIListViewPersistenceHelper* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CControls_CIListViewPersistenceHelper* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CControls_CIListViewPersistenceHelper* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CControls_CIListViewPersistenceHelper* This,
            TrustLevel* trustLevel);
    
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CIListViewPersistenceHelperVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CIListViewPersistenceHelper
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIListViewPersistenceHelperVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIListViewPersistenceHelper;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIListViewPersistenceHelper_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIListViewPersistenceHelperStatics_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CControls_CIListViewPersistenceHelperStatics_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIListViewPersistenceHelperStaticsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CControls_CIListViewPersistenceHelperStatics* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CControls_CIListViewPersistenceHelperStatics* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CControls_CIListViewPersistenceHelperStatics* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CControls_CIListViewPersistenceHelperStatics* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CControls_CIListViewPersistenceHelperStatics* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CControls_CIListViewPersistenceHelperStatics* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* GetRelativeScrollPosition)(__x_ABI_CWindows_CUI_CXaml_CControls_CIListViewPersistenceHelperStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBase* listViewBase,
        __x_ABI_CWindows_CUI_CXaml_CControls_CIListViewItemToKeyHandler* itemToKeyHandler,
        HSTRING* result);
    HRESULT (STDMETHODCALLTYPE* SetRelativeScrollPositionAsync)(__x_ABI_CWindows_CUI_CXaml_CControls_CIListViewPersistenceHelperStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBase* listViewBase,
        HSTRING relativeScrollPosition,
        __x_ABI_CWindows_CUI_CXaml_CControls_CIListViewKeyToItemHandler* keyToItemHandler,
        __x_ABI_CWindows_CFoundation_CIAsyncAction** operation);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CIListViewPersistenceHelperStaticsVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CIListViewPersistenceHelperStatics
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIListViewPersistenceHelperStaticsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIListViewPersistenceHelperStatics;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIListViewPersistenceHelperStatics_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIMediaElement_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CControls_CIMediaElement_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaElementVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CControls_CIMediaElement* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CControls_CIMediaElement* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CControls_CIMediaElement* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CControls_CIMediaElement* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CControls_CIMediaElement* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CControls_CIMediaElement* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_PosterSource)(__x_ABI_CWindows_CUI_CXaml_CControls_CIMediaElement* This,
        __x_ABI_CWindows_CUI_CXaml_CMedia_CIImageSource** value);
    HRESULT (STDMETHODCALLTYPE* put_PosterSource)(__x_ABI_CWindows_CUI_CXaml_CControls_CIMediaElement* This,
        __x_ABI_CWindows_CUI_CXaml_CMedia_CIImageSource* value);
    HRESULT (STDMETHODCALLTYPE* get_Source)(__x_ABI_CWindows_CUI_CXaml_CControls_CIMediaElement* This,
        __x_ABI_CWindows_CFoundation_CIUriRuntimeClass** value);
    HRESULT (STDMETHODCALLTYPE* put_Source)(__x_ABI_CWindows_CUI_CXaml_CControls_CIMediaElement* This,
        __x_ABI_CWindows_CFoundation_CIUriRuntimeClass* value);
    HRESULT (STDMETHODCALLTYPE* get_IsMuted)(__x_ABI_CWindows_CUI_CXaml_CControls_CIMediaElement* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* put_IsMuted)(__x_ABI_CWindows_CUI_CXaml_CControls_CIMediaElement* This,
        boolean value);
    HRESULT (STDMETHODCALLTYPE* get_IsAudioOnly)(__x_ABI_CWindows_CUI_CXaml_CControls_CIMediaElement* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* get_AutoPlay)(__x_ABI_CWindows_CUI_CXaml_CControls_CIMediaElement* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* put_AutoPlay)(__x_ABI_CWindows_CUI_CXaml_CControls_CIMediaElement* This,
        boolean value);
    HRESULT (STDMETHODCALLTYPE* get_Volume)(__x_ABI_CWindows_CUI_CXaml_CControls_CIMediaElement* This,
        DOUBLE* value);
    HRESULT (STDMETHODCALLTYPE* put_Volume)(__x_ABI_CWindows_CUI_CXaml_CControls_CIMediaElement* This,
        DOUBLE value);
    HRESULT (STDMETHODCALLTYPE* get_Balance)(__x_ABI_CWindows_CUI_CXaml_CControls_CIMediaElement* This,
        DOUBLE* value);
    HRESULT (STDMETHODCALLTYPE* put_Balance)(__x_ABI_CWindows_CUI_CXaml_CControls_CIMediaElement* This,
        DOUBLE value);
    HRESULT (STDMETHODCALLTYPE* get_NaturalVideoHeight)(__x_ABI_CWindows_CUI_CXaml_CControls_CIMediaElement* This,
        INT32* value);
    HRESULT (STDMETHODCALLTYPE* get_NaturalVideoWidth)(__x_ABI_CWindows_CUI_CXaml_CControls_CIMediaElement* This,
        INT32* value);
    HRESULT (STDMETHODCALLTYPE* get_NaturalDuration)(__x_ABI_CWindows_CUI_CXaml_CControls_CIMediaElement* This,
        struct __x_ABI_CWindows_CUI_CXaml_CDuration* value);
    HRESULT (STDMETHODCALLTYPE* get_Position)(__x_ABI_CWindows_CUI_CXaml_CControls_CIMediaElement* This,
        struct __x_ABI_CWindows_CFoundation_CTimeSpan* value);
    HRESULT (STDMETHODCALLTYPE* put_Position)(__x_ABI_CWindows_CUI_CXaml_CControls_CIMediaElement* This,
        struct __x_ABI_CWindows_CFoundation_CTimeSpan value);
    HRESULT (STDMETHODCALLTYPE* get_DownloadProgress)(__x_ABI_CWindows_CUI_CXaml_CControls_CIMediaElement* This,
        DOUBLE* value);
    HRESULT (STDMETHODCALLTYPE* get_BufferingProgress)(__x_ABI_CWindows_CUI_CXaml_CControls_CIMediaElement* This,
        DOUBLE* value);
    HRESULT (STDMETHODCALLTYPE* get_DownloadProgressOffset)(__x_ABI_CWindows_CUI_CXaml_CControls_CIMediaElement* This,
        DOUBLE* value);
    HRESULT (STDMETHODCALLTYPE* get_CurrentState)(__x_ABI_CWindows_CUI_CXaml_CControls_CIMediaElement* This,
        enum __x_ABI_CWindows_CUI_CXaml_CMedia_CMediaElementState* value);
    HRESULT (STDMETHODCALLTYPE* get_Markers)(__x_ABI_CWindows_CUI_CXaml_CControls_CIMediaElement* This,
        __x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CXaml__CMedia__CTimelineMarker** value);
    HRESULT (STDMETHODCALLTYPE* get_CanSeek)(__x_ABI_CWindows_CUI_CXaml_CControls_CIMediaElement* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* get_CanPause)(__x_ABI_CWindows_CUI_CXaml_CControls_CIMediaElement* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* get_AudioStreamCount)(__x_ABI_CWindows_CUI_CXaml_CControls_CIMediaElement* This,
        INT32* value);
    HRESULT (STDMETHODCALLTYPE* get_AudioStreamIndex)(__x_ABI_CWindows_CUI_CXaml_CControls_CIMediaElement* This,
        __x_ABI_C__FIReference_1_int** value);
    HRESULT (STDMETHODCALLTYPE* put_AudioStreamIndex)(__x_ABI_CWindows_CUI_CXaml_CControls_CIMediaElement* This,
        __x_ABI_C__FIReference_1_int* value);
    HRESULT (STDMETHODCALLTYPE* get_PlaybackRate)(__x_ABI_CWindows_CUI_CXaml_CControls_CIMediaElement* This,
        DOUBLE* value);
    HRESULT (STDMETHODCALLTYPE* put_PlaybackRate)(__x_ABI_CWindows_CUI_CXaml_CControls_CIMediaElement* This,
        DOUBLE value);
    HRESULT (STDMETHODCALLTYPE* get_IsLooping)(__x_ABI_CWindows_CUI_CXaml_CControls_CIMediaElement* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* put_IsLooping)(__x_ABI_CWindows_CUI_CXaml_CControls_CIMediaElement* This,
        boolean value);
    HRESULT (STDMETHODCALLTYPE* get_PlayToSource)(__x_ABI_CWindows_CUI_CXaml_CControls_CIMediaElement* This,
        __x_ABI_CWindows_CMedia_CPlayTo_CIPlayToSource** value);
    HRESULT (STDMETHODCALLTYPE* get_DefaultPlaybackRate)(__x_ABI_CWindows_CUI_CXaml_CControls_CIMediaElement* This,
        DOUBLE* value);
    HRESULT (STDMETHODCALLTYPE* put_DefaultPlaybackRate)(__x_ABI_CWindows_CUI_CXaml_CControls_CIMediaElement* This,
        DOUBLE value);
    HRESULT (STDMETHODCALLTYPE* get_AspectRatioWidth)(__x_ABI_CWindows_CUI_CXaml_CControls_CIMediaElement* This,
        INT32* value);
    HRESULT (STDMETHODCALLTYPE* get_AspectRatioHeight)(__x_ABI_CWindows_CUI_CXaml_CControls_CIMediaElement* This,
        INT32* value);
    HRESULT (STDMETHODCALLTYPE* get_RealTimePlayback)(__x_ABI_CWindows_CUI_CXaml_CControls_CIMediaElement* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* put_RealTimePlayback)(__x_ABI_CWindows_CUI_CXaml_CControls_CIMediaElement* This,
        boolean value);
    HRESULT (STDMETHODCALLTYPE* get_AudioCategory)(__x_ABI_CWindows_CUI_CXaml_CControls_CIMediaElement* This,
        enum __x_ABI_CWindows_CUI_CXaml_CMedia_CAudioCategory* value);
    HRESULT (STDMETHODCALLTYPE* put_AudioCategory)(__x_ABI_CWindows_CUI_CXaml_CControls_CIMediaElement* This,
        enum __x_ABI_CWindows_CUI_CXaml_CMedia_CAudioCategory value);
    HRESULT (STDMETHODCALLTYPE* get_AudioDeviceType)(__x_ABI_CWindows_CUI_CXaml_CControls_CIMediaElement* This,
        enum __x_ABI_CWindows_CUI_CXaml_CMedia_CAudioDeviceType* value);
    HRESULT (STDMETHODCALLTYPE* put_AudioDeviceType)(__x_ABI_CWindows_CUI_CXaml_CControls_CIMediaElement* This,
        enum __x_ABI_CWindows_CUI_CXaml_CMedia_CAudioDeviceType value);
    HRESULT (STDMETHODCALLTYPE* get_ProtectionManager)(__x_ABI_CWindows_CUI_CXaml_CControls_CIMediaElement* This,
        __x_ABI_CWindows_CMedia_CProtection_CIMediaProtectionManager** value);
    HRESULT (STDMETHODCALLTYPE* put_ProtectionManager)(__x_ABI_CWindows_CUI_CXaml_CControls_CIMediaElement* This,
        __x_ABI_CWindows_CMedia_CProtection_CIMediaProtectionManager* value);
    HRESULT (STDMETHODCALLTYPE* get_Stereo3DVideoPackingMode)(__x_ABI_CWindows_CUI_CXaml_CControls_CIMediaElement* This,
        enum __x_ABI_CWindows_CUI_CXaml_CMedia_CStereo3DVideoPackingMode* value);
    HRESULT (STDMETHODCALLTYPE* put_Stereo3DVideoPackingMode)(__x_ABI_CWindows_CUI_CXaml_CControls_CIMediaElement* This,
        enum __x_ABI_CWindows_CUI_CXaml_CMedia_CStereo3DVideoPackingMode value);
    HRESULT (STDMETHODCALLTYPE* get_Stereo3DVideoRenderMode)(__x_ABI_CWindows_CUI_CXaml_CControls_CIMediaElement* This,
        enum __x_ABI_CWindows_CUI_CXaml_CMedia_CStereo3DVideoRenderMode* value);
    HRESULT (STDMETHODCALLTYPE* put_Stereo3DVideoRenderMode)(__x_ABI_CWindows_CUI_CXaml_CControls_CIMediaElement* This,
        enum __x_ABI_CWindows_CUI_CXaml_CMedia_CStereo3DVideoRenderMode value);
    HRESULT (STDMETHODCALLTYPE* get_IsStereo3DVideo)(__x_ABI_CWindows_CUI_CXaml_CControls_CIMediaElement* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* add_MediaOpened)(__x_ABI_CWindows_CUI_CXaml_CControls_CIMediaElement* This,
        __x_ABI_CWindows_CUI_CXaml_CIRoutedEventHandler* handler,
        EventRegistrationToken* token);
    HRESULT (STDMETHODCALLTYPE* remove_MediaOpened)(__x_ABI_CWindows_CUI_CXaml_CControls_CIMediaElement* This,
        EventRegistrationToken token);
    HRESULT (STDMETHODCALLTYPE* add_MediaEnded)(__x_ABI_CWindows_CUI_CXaml_CControls_CIMediaElement* This,
        __x_ABI_CWindows_CUI_CXaml_CIRoutedEventHandler* handler,
        EventRegistrationToken* token);
    HRESULT (STDMETHODCALLTYPE* remove_MediaEnded)(__x_ABI_CWindows_CUI_CXaml_CControls_CIMediaElement* This,
        EventRegistrationToken token);
    HRESULT (STDMETHODCALLTYPE* add_MediaFailed)(__x_ABI_CWindows_CUI_CXaml_CControls_CIMediaElement* This,
        __x_ABI_CWindows_CUI_CXaml_CIExceptionRoutedEventHandler* handler,
        EventRegistrationToken* token);
    HRESULT (STDMETHODCALLTYPE* remove_MediaFailed)(__x_ABI_CWindows_CUI_CXaml_CControls_CIMediaElement* This,
        EventRegistrationToken token);
    HRESULT (STDMETHODCALLTYPE* add_DownloadProgressChanged)(__x_ABI_CWindows_CUI_CXaml_CControls_CIMediaElement* This,
        __x_ABI_CWindows_CUI_CXaml_CIRoutedEventHandler* handler,
        EventRegistrationToken* token);
    HRESULT (STDMETHODCALLTYPE* remove_DownloadProgressChanged)(__x_ABI_CWindows_CUI_CXaml_CControls_CIMediaElement* This,
        EventRegistrationToken token);
    HRESULT (STDMETHODCALLTYPE* add_BufferingProgressChanged)(__x_ABI_CWindows_CUI_CXaml_CControls_CIMediaElement* This,
        __x_ABI_CWindows_CUI_CXaml_CIRoutedEventHandler* handler,
        EventRegistrationToken* token);
    HRESULT (STDMETHODCALLTYPE* remove_BufferingProgressChanged)(__x_ABI_CWindows_CUI_CXaml_CControls_CIMediaElement* This,
        EventRegistrationToken token);
    HRESULT (STDMETHODCALLTYPE* add_CurrentStateChanged)(__x_ABI_CWindows_CUI_CXaml_CControls_CIMediaElement* This,
        __x_ABI_CWindows_CUI_CXaml_CIRoutedEventHandler* handler,
        EventRegistrationToken* token);
    HRESULT (STDMETHODCALLTYPE* remove_CurrentStateChanged)(__x_ABI_CWindows_CUI_CXaml_CControls_CIMediaElement* This,
        EventRegistrationToken token);
    HRESULT (STDMETHODCALLTYPE* add_MarkerReached)(__x_ABI_CWindows_CUI_CXaml_CControls_CIMediaElement* This,
        __x_ABI_CWindows_CUI_CXaml_CMedia_CITimelineMarkerRoutedEventHandler* handler,
        EventRegistrationToken* token);
    HRESULT (STDMETHODCALLTYPE* remove_MarkerReached)(__x_ABI_CWindows_CUI_CXaml_CControls_CIMediaElement* This,
        EventRegistrationToken token);
    HRESULT (STDMETHODCALLTYPE* add_RateChanged)(__x_ABI_CWindows_CUI_CXaml_CControls_CIMediaElement* This,
        __x_ABI_CWindows_CUI_CXaml_CMedia_CIRateChangedRoutedEventHandler* handler,
        EventRegistrationToken* token);
    HRESULT (STDMETHODCALLTYPE* remove_RateChanged)(__x_ABI_CWindows_CUI_CXaml_CControls_CIMediaElement* This,
        EventRegistrationToken token);
    HRESULT (STDMETHODCALLTYPE* add_VolumeChanged)(__x_ABI_CWindows_CUI_CXaml_CControls_CIMediaElement* This,
        __x_ABI_CWindows_CUI_CXaml_CIRoutedEventHandler* handler,
        EventRegistrationToken* token);
    HRESULT (STDMETHODCALLTYPE* remove_VolumeChanged)(__x_ABI_CWindows_CUI_CXaml_CControls_CIMediaElement* This,
        EventRegistrationToken token);
    HRESULT (STDMETHODCALLTYPE* add_SeekCompleted)(__x_ABI_CWindows_CUI_CXaml_CControls_CIMediaElement* This,
        __x_ABI_CWindows_CUI_CXaml_CIRoutedEventHandler* handler,
        EventRegistrationToken* token);
    HRESULT (STDMETHODCALLTYPE* remove_SeekCompleted)(__x_ABI_CWindows_CUI_CXaml_CControls_CIMediaElement* This,
        EventRegistrationToken token);
    HRESULT (STDMETHODCALLTYPE* Stop)(__x_ABI_CWindows_CUI_CXaml_CControls_CIMediaElement* This);
    HRESULT (STDMETHODCALLTYPE* Play)(__x_ABI_CWindows_CUI_CXaml_CControls_CIMediaElement* This);
    HRESULT (STDMETHODCALLTYPE* Pause)(__x_ABI_CWindows_CUI_CXaml_CControls_CIMediaElement* This);
    HRESULT (STDMETHODCALLTYPE* CanPlayType)(__x_ABI_CWindows_CUI_CXaml_CControls_CIMediaElement* This,
        HSTRING type,
        enum __x_ABI_CWindows_CUI_CXaml_CMedia_CMediaCanPlayResponse* result);
    HRESULT (STDMETHODCALLTYPE* SetSource)(__x_ABI_CWindows_CUI_CXaml_CControls_CIMediaElement* This,
        __x_ABI_CWindows_CStorage_CStreams_CIRandomAccessStream* stream,
        HSTRING mimeType);
    HRESULT (STDMETHODCALLTYPE* GetAudioStreamLanguage)(__x_ABI_CWindows_CUI_CXaml_CControls_CIMediaElement* This,
        __x_ABI_C__FIReference_1_int* index,
        HSTRING* result);
    HRESULT (STDMETHODCALLTYPE* AddAudioEffect)(__x_ABI_CWindows_CUI_CXaml_CControls_CIMediaElement* This,
        HSTRING effectID,
        boolean effectOptional,
        __x_ABI_CWindows_CFoundation_CCollections_CIPropertySet* effectConfiguration);
    HRESULT (STDMETHODCALLTYPE* AddVideoEffect)(__x_ABI_CWindows_CUI_CXaml_CControls_CIMediaElement* This,
        HSTRING effectID,
        boolean effectOptional,
        __x_ABI_CWindows_CFoundation_CCollections_CIPropertySet* effectConfiguration);
    HRESULT (STDMETHODCALLTYPE* RemoveAllEffects)(__x_ABI_CWindows_CUI_CXaml_CControls_CIMediaElement* This);
    HRESULT (STDMETHODCALLTYPE* get_ActualStereo3DVideoPackingMode)(__x_ABI_CWindows_CUI_CXaml_CControls_CIMediaElement* This,
        enum __x_ABI_CWindows_CUI_CXaml_CMedia_CStereo3DVideoPackingMode* value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaElementVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaElement
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaElementVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIMediaElement;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIMediaElement_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIMediaElement2_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CControls_CIMediaElement2_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaElement2Vtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CControls_CIMediaElement2* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CControls_CIMediaElement2* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CControls_CIMediaElement2* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CControls_CIMediaElement2* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CControls_CIMediaElement2* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CControls_CIMediaElement2* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_AreTransportControlsEnabled)(__x_ABI_CWindows_CUI_CXaml_CControls_CIMediaElement2* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* put_AreTransportControlsEnabled)(__x_ABI_CWindows_CUI_CXaml_CControls_CIMediaElement2* This,
        boolean value);
    HRESULT (STDMETHODCALLTYPE* get_Stretch)(__x_ABI_CWindows_CUI_CXaml_CControls_CIMediaElement2* This,
        enum __x_ABI_CWindows_CUI_CXaml_CMedia_CStretch* value);
    HRESULT (STDMETHODCALLTYPE* put_Stretch)(__x_ABI_CWindows_CUI_CXaml_CControls_CIMediaElement2* This,
        enum __x_ABI_CWindows_CUI_CXaml_CMedia_CStretch value);
    HRESULT (STDMETHODCALLTYPE* get_IsFullWindow)(__x_ABI_CWindows_CUI_CXaml_CControls_CIMediaElement2* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* put_IsFullWindow)(__x_ABI_CWindows_CUI_CXaml_CControls_CIMediaElement2* This,
        boolean value);
    HRESULT (STDMETHODCALLTYPE* SetMediaStreamSource)(__x_ABI_CWindows_CUI_CXaml_CControls_CIMediaElement2* This,
        __x_ABI_CWindows_CMedia_CCore_CIMediaSource* source);
    HRESULT (STDMETHODCALLTYPE* get_PlayToPreferredSourceUri)(__x_ABI_CWindows_CUI_CXaml_CControls_CIMediaElement2* This,
        __x_ABI_CWindows_CFoundation_CIUriRuntimeClass** value);
    HRESULT (STDMETHODCALLTYPE* put_PlayToPreferredSourceUri)(__x_ABI_CWindows_CUI_CXaml_CControls_CIMediaElement2* This,
        __x_ABI_CWindows_CFoundation_CIUriRuntimeClass* value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaElement2Vtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaElement2
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaElement2Vtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIMediaElement2;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIMediaElement2_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIMediaElement3_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CControls_CIMediaElement3_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaElement3Vtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CControls_CIMediaElement3* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CControls_CIMediaElement3* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CControls_CIMediaElement3* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CControls_CIMediaElement3* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CControls_CIMediaElement3* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CControls_CIMediaElement3* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_TransportControls)(__x_ABI_CWindows_CUI_CXaml_CControls_CIMediaElement3* This,
        __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaTransportControls** value);
    HRESULT (STDMETHODCALLTYPE* put_TransportControls)(__x_ABI_CWindows_CUI_CXaml_CControls_CIMediaElement3* This,
        __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaTransportControls* value);
    HRESULT (STDMETHODCALLTYPE* add_PartialMediaFailureDetected)(__x_ABI_CWindows_CUI_CXaml_CControls_CIMediaElement3* This,
        __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CMediaElement___x_ABI_CWindows__CUI__CXaml__CMedia__CPartialMediaFailureDetectedEventArgs* handler,
        EventRegistrationToken* token);
    HRESULT (STDMETHODCALLTYPE* remove_PartialMediaFailureDetected)(__x_ABI_CWindows_CUI_CXaml_CControls_CIMediaElement3* This,
        EventRegistrationToken token);
    HRESULT (STDMETHODCALLTYPE* SetPlaybackSource)(__x_ABI_CWindows_CUI_CXaml_CControls_CIMediaElement3* This,
        __x_ABI_CWindows_CMedia_CPlayback_CIMediaPlaybackSource* source);
    HRESULT (STDMETHODCALLTYPE* GetAsCastingSource)(__x_ABI_CWindows_CUI_CXaml_CControls_CIMediaElement3* This,
        __x_ABI_CWindows_CMedia_CCasting_CICastingSource** result);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaElement3Vtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaElement3
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaElement3Vtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIMediaElement3;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIMediaElement3_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIMediaElementStatics_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CControls_CIMediaElementStatics_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaElementStaticsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CControls_CIMediaElementStatics* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CControls_CIMediaElementStatics* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CControls_CIMediaElementStatics* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CControls_CIMediaElementStatics* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CControls_CIMediaElementStatics* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CControls_CIMediaElementStatics* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_PosterSourceProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CIMediaElementStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_SourceProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CIMediaElementStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_IsMutedProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CIMediaElementStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_IsAudioOnlyProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CIMediaElementStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_AutoPlayProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CIMediaElementStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_VolumeProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CIMediaElementStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_BalanceProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CIMediaElementStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_NaturalVideoHeightProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CIMediaElementStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_NaturalVideoWidthProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CIMediaElementStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_NaturalDurationProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CIMediaElementStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_PositionProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CIMediaElementStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_DownloadProgressProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CIMediaElementStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_BufferingProgressProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CIMediaElementStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_DownloadProgressOffsetProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CIMediaElementStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_CurrentStateProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CIMediaElementStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_CanSeekProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CIMediaElementStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_CanPauseProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CIMediaElementStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_AudioStreamCountProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CIMediaElementStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_AudioStreamIndexProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CIMediaElementStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_PlaybackRateProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CIMediaElementStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_IsLoopingProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CIMediaElementStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_PlayToSourceProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CIMediaElementStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_DefaultPlaybackRateProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CIMediaElementStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_AspectRatioWidthProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CIMediaElementStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_AspectRatioHeightProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CIMediaElementStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_RealTimePlaybackProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CIMediaElementStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_AudioCategoryProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CIMediaElementStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_AudioDeviceTypeProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CIMediaElementStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_ProtectionManagerProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CIMediaElementStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_Stereo3DVideoPackingModeProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CIMediaElementStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_Stereo3DVideoRenderModeProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CIMediaElementStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_IsStereo3DVideoProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CIMediaElementStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_ActualStereo3DVideoPackingModeProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CIMediaElementStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaElementStaticsVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaElementStatics
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaElementStaticsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIMediaElementStatics;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIMediaElementStatics_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIMediaElementStatics2_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CControls_CIMediaElementStatics2_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaElementStatics2Vtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CControls_CIMediaElementStatics2* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CControls_CIMediaElementStatics2* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CControls_CIMediaElementStatics2* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CControls_CIMediaElementStatics2* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CControls_CIMediaElementStatics2* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CControls_CIMediaElementStatics2* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_AreTransportControlsEnabledProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CIMediaElementStatics2* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_StretchProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CIMediaElementStatics2* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_IsFullWindowProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CIMediaElementStatics2* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_PlayToPreferredSourceUriProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CIMediaElementStatics2* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaElementStatics2Vtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaElementStatics2
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaElementStatics2Vtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIMediaElementStatics2;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIMediaElementStatics2_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIMediaPlayerElement_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CControls_CIMediaPlayerElement_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaPlayerElementVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CControls_CIMediaPlayerElement* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CControls_CIMediaPlayerElement* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CControls_CIMediaPlayerElement* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CControls_CIMediaPlayerElement* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CControls_CIMediaPlayerElement* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CControls_CIMediaPlayerElement* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Source)(__x_ABI_CWindows_CUI_CXaml_CControls_CIMediaPlayerElement* This,
        __x_ABI_CWindows_CMedia_CPlayback_CIMediaPlaybackSource** value);
    HRESULT (STDMETHODCALLTYPE* put_Source)(__x_ABI_CWindows_CUI_CXaml_CControls_CIMediaPlayerElement* This,
        __x_ABI_CWindows_CMedia_CPlayback_CIMediaPlaybackSource* value);
    HRESULT (STDMETHODCALLTYPE* get_TransportControls)(__x_ABI_CWindows_CUI_CXaml_CControls_CIMediaPlayerElement* This,
        __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaTransportControls** value);
    HRESULT (STDMETHODCALLTYPE* put_TransportControls)(__x_ABI_CWindows_CUI_CXaml_CControls_CIMediaPlayerElement* This,
        __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaTransportControls* value);
    HRESULT (STDMETHODCALLTYPE* get_AreTransportControlsEnabled)(__x_ABI_CWindows_CUI_CXaml_CControls_CIMediaPlayerElement* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* put_AreTransportControlsEnabled)(__x_ABI_CWindows_CUI_CXaml_CControls_CIMediaPlayerElement* This,
        boolean value);
    HRESULT (STDMETHODCALLTYPE* get_PosterSource)(__x_ABI_CWindows_CUI_CXaml_CControls_CIMediaPlayerElement* This,
        __x_ABI_CWindows_CUI_CXaml_CMedia_CIImageSource** value);
    HRESULT (STDMETHODCALLTYPE* put_PosterSource)(__x_ABI_CWindows_CUI_CXaml_CControls_CIMediaPlayerElement* This,
        __x_ABI_CWindows_CUI_CXaml_CMedia_CIImageSource* value);
    HRESULT (STDMETHODCALLTYPE* get_Stretch)(__x_ABI_CWindows_CUI_CXaml_CControls_CIMediaPlayerElement* This,
        enum __x_ABI_CWindows_CUI_CXaml_CMedia_CStretch* value);
    HRESULT (STDMETHODCALLTYPE* put_Stretch)(__x_ABI_CWindows_CUI_CXaml_CControls_CIMediaPlayerElement* This,
        enum __x_ABI_CWindows_CUI_CXaml_CMedia_CStretch value);
    HRESULT (STDMETHODCALLTYPE* get_AutoPlay)(__x_ABI_CWindows_CUI_CXaml_CControls_CIMediaPlayerElement* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* put_AutoPlay)(__x_ABI_CWindows_CUI_CXaml_CControls_CIMediaPlayerElement* This,
        boolean value);
    HRESULT (STDMETHODCALLTYPE* get_IsFullWindow)(__x_ABI_CWindows_CUI_CXaml_CControls_CIMediaPlayerElement* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* put_IsFullWindow)(__x_ABI_CWindows_CUI_CXaml_CControls_CIMediaPlayerElement* This,
        boolean value);
    HRESULT (STDMETHODCALLTYPE* get_MediaPlayer)(__x_ABI_CWindows_CUI_CXaml_CControls_CIMediaPlayerElement* This,
        __x_ABI_CWindows_CMedia_CPlayback_CIMediaPlayer** value);
    HRESULT (STDMETHODCALLTYPE* SetMediaPlayer)(__x_ABI_CWindows_CUI_CXaml_CControls_CIMediaPlayerElement* This,
        __x_ABI_CWindows_CMedia_CPlayback_CIMediaPlayer* mediaPlayer);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaPlayerElementVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaPlayerElement
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaPlayerElementVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIMediaPlayerElement;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIMediaPlayerElement_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIMediaPlayerElementFactory_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CControls_CIMediaPlayerElementFactory_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaPlayerElementFactoryVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CControls_CIMediaPlayerElementFactory* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CControls_CIMediaPlayerElementFactory* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CControls_CIMediaPlayerElementFactory* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CControls_CIMediaPlayerElementFactory* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CControls_CIMediaPlayerElementFactory* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CControls_CIMediaPlayerElementFactory* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* CreateInstance)(__x_ABI_CWindows_CUI_CXaml_CControls_CIMediaPlayerElementFactory* This,
        IInspectable* baseInterface,
        IInspectable** innerInterface,
        __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaPlayerElement** value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaPlayerElementFactoryVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaPlayerElementFactory
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaPlayerElementFactoryVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIMediaPlayerElementFactory;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIMediaPlayerElementFactory_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIMediaPlayerElementStatics_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CControls_CIMediaPlayerElementStatics_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaPlayerElementStaticsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CControls_CIMediaPlayerElementStatics* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CControls_CIMediaPlayerElementStatics* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CControls_CIMediaPlayerElementStatics* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CControls_CIMediaPlayerElementStatics* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CControls_CIMediaPlayerElementStatics* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CControls_CIMediaPlayerElementStatics* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_SourceProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CIMediaPlayerElementStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_AreTransportControlsEnabledProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CIMediaPlayerElementStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_PosterSourceProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CIMediaPlayerElementStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_StretchProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CIMediaPlayerElementStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_AutoPlayProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CIMediaPlayerElementStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_IsFullWindowProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CIMediaPlayerElementStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_MediaPlayerProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CIMediaPlayerElementStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaPlayerElementStaticsVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaPlayerElementStatics
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaPlayerElementStaticsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIMediaPlayerElementStatics;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIMediaPlayerElementStatics_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIMediaPlayerPresenter_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CControls_CIMediaPlayerPresenter_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaPlayerPresenterVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CControls_CIMediaPlayerPresenter* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CControls_CIMediaPlayerPresenter* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CControls_CIMediaPlayerPresenter* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CControls_CIMediaPlayerPresenter* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CControls_CIMediaPlayerPresenter* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CControls_CIMediaPlayerPresenter* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_MediaPlayer)(__x_ABI_CWindows_CUI_CXaml_CControls_CIMediaPlayerPresenter* This,
        __x_ABI_CWindows_CMedia_CPlayback_CIMediaPlayer** value);
    HRESULT (STDMETHODCALLTYPE* put_MediaPlayer)(__x_ABI_CWindows_CUI_CXaml_CControls_CIMediaPlayerPresenter* This,
        __x_ABI_CWindows_CMedia_CPlayback_CIMediaPlayer* value);
    HRESULT (STDMETHODCALLTYPE* get_Stretch)(__x_ABI_CWindows_CUI_CXaml_CControls_CIMediaPlayerPresenter* This,
        enum __x_ABI_CWindows_CUI_CXaml_CMedia_CStretch* value);
    HRESULT (STDMETHODCALLTYPE* put_Stretch)(__x_ABI_CWindows_CUI_CXaml_CControls_CIMediaPlayerPresenter* This,
        enum __x_ABI_CWindows_CUI_CXaml_CMedia_CStretch value);
    HRESULT (STDMETHODCALLTYPE* get_IsFullWindow)(__x_ABI_CWindows_CUI_CXaml_CControls_CIMediaPlayerPresenter* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* put_IsFullWindow)(__x_ABI_CWindows_CUI_CXaml_CControls_CIMediaPlayerPresenter* This,
        boolean value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaPlayerPresenterVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaPlayerPresenter
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaPlayerPresenterVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIMediaPlayerPresenter;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIMediaPlayerPresenter_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIMediaPlayerPresenterFactory_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CControls_CIMediaPlayerPresenterFactory_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaPlayerPresenterFactoryVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CControls_CIMediaPlayerPresenterFactory* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CControls_CIMediaPlayerPresenterFactory* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CControls_CIMediaPlayerPresenterFactory* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CControls_CIMediaPlayerPresenterFactory* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CControls_CIMediaPlayerPresenterFactory* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CControls_CIMediaPlayerPresenterFactory* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* CreateInstance)(__x_ABI_CWindows_CUI_CXaml_CControls_CIMediaPlayerPresenterFactory* This,
        IInspectable* baseInterface,
        IInspectable** innerInterface,
        __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaPlayerPresenter** value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaPlayerPresenterFactoryVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaPlayerPresenterFactory
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaPlayerPresenterFactoryVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIMediaPlayerPresenterFactory;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIMediaPlayerPresenterFactory_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIMediaPlayerPresenterStatics_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CControls_CIMediaPlayerPresenterStatics_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaPlayerPresenterStaticsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CControls_CIMediaPlayerPresenterStatics* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CControls_CIMediaPlayerPresenterStatics* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CControls_CIMediaPlayerPresenterStatics* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CControls_CIMediaPlayerPresenterStatics* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CControls_CIMediaPlayerPresenterStatics* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CControls_CIMediaPlayerPresenterStatics* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_MediaPlayerProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CIMediaPlayerPresenterStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_StretchProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CIMediaPlayerPresenterStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_IsFullWindowProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CIMediaPlayerPresenterStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaPlayerPresenterStaticsVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaPlayerPresenterStatics
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaPlayerPresenterStaticsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIMediaPlayerPresenterStatics;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIMediaPlayerPresenterStatics_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIMediaTransportControls_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CControls_CIMediaTransportControls_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaTransportControlsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CControls_CIMediaTransportControls* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CControls_CIMediaTransportControls* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CControls_CIMediaTransportControls* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CControls_CIMediaTransportControls* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CControls_CIMediaTransportControls* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CControls_CIMediaTransportControls* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_IsFullWindowButtonVisible)(__x_ABI_CWindows_CUI_CXaml_CControls_CIMediaTransportControls* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* put_IsFullWindowButtonVisible)(__x_ABI_CWindows_CUI_CXaml_CControls_CIMediaTransportControls* This,
        boolean value);
    HRESULT (STDMETHODCALLTYPE* get_IsFullWindowEnabled)(__x_ABI_CWindows_CUI_CXaml_CControls_CIMediaTransportControls* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* put_IsFullWindowEnabled)(__x_ABI_CWindows_CUI_CXaml_CControls_CIMediaTransportControls* This,
        boolean value);
    HRESULT (STDMETHODCALLTYPE* get_IsZoomButtonVisible)(__x_ABI_CWindows_CUI_CXaml_CControls_CIMediaTransportControls* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* put_IsZoomButtonVisible)(__x_ABI_CWindows_CUI_CXaml_CControls_CIMediaTransportControls* This,
        boolean value);
    HRESULT (STDMETHODCALLTYPE* get_IsZoomEnabled)(__x_ABI_CWindows_CUI_CXaml_CControls_CIMediaTransportControls* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* put_IsZoomEnabled)(__x_ABI_CWindows_CUI_CXaml_CControls_CIMediaTransportControls* This,
        boolean value);
    HRESULT (STDMETHODCALLTYPE* get_IsFastForwardButtonVisible)(__x_ABI_CWindows_CUI_CXaml_CControls_CIMediaTransportControls* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* put_IsFastForwardButtonVisible)(__x_ABI_CWindows_CUI_CXaml_CControls_CIMediaTransportControls* This,
        boolean value);
    HRESULT (STDMETHODCALLTYPE* get_IsFastForwardEnabled)(__x_ABI_CWindows_CUI_CXaml_CControls_CIMediaTransportControls* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* put_IsFastForwardEnabled)(__x_ABI_CWindows_CUI_CXaml_CControls_CIMediaTransportControls* This,
        boolean value);
    HRESULT (STDMETHODCALLTYPE* get_IsFastRewindButtonVisible)(__x_ABI_CWindows_CUI_CXaml_CControls_CIMediaTransportControls* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* put_IsFastRewindButtonVisible)(__x_ABI_CWindows_CUI_CXaml_CControls_CIMediaTransportControls* This,
        boolean value);
    HRESULT (STDMETHODCALLTYPE* get_IsFastRewindEnabled)(__x_ABI_CWindows_CUI_CXaml_CControls_CIMediaTransportControls* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* put_IsFastRewindEnabled)(__x_ABI_CWindows_CUI_CXaml_CControls_CIMediaTransportControls* This,
        boolean value);
    HRESULT (STDMETHODCALLTYPE* get_IsStopButtonVisible)(__x_ABI_CWindows_CUI_CXaml_CControls_CIMediaTransportControls* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* put_IsStopButtonVisible)(__x_ABI_CWindows_CUI_CXaml_CControls_CIMediaTransportControls* This,
        boolean value);
    HRESULT (STDMETHODCALLTYPE* get_IsStopEnabled)(__x_ABI_CWindows_CUI_CXaml_CControls_CIMediaTransportControls* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* put_IsStopEnabled)(__x_ABI_CWindows_CUI_CXaml_CControls_CIMediaTransportControls* This,
        boolean value);
    HRESULT (STDMETHODCALLTYPE* get_IsVolumeButtonVisible)(__x_ABI_CWindows_CUI_CXaml_CControls_CIMediaTransportControls* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* put_IsVolumeButtonVisible)(__x_ABI_CWindows_CUI_CXaml_CControls_CIMediaTransportControls* This,
        boolean value);
    HRESULT (STDMETHODCALLTYPE* get_IsVolumeEnabled)(__x_ABI_CWindows_CUI_CXaml_CControls_CIMediaTransportControls* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* put_IsVolumeEnabled)(__x_ABI_CWindows_CUI_CXaml_CControls_CIMediaTransportControls* This,
        boolean value);
    HRESULT (STDMETHODCALLTYPE* get_IsPlaybackRateButtonVisible)(__x_ABI_CWindows_CUI_CXaml_CControls_CIMediaTransportControls* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* put_IsPlaybackRateButtonVisible)(__x_ABI_CWindows_CUI_CXaml_CControls_CIMediaTransportControls* This,
        boolean value);
    HRESULT (STDMETHODCALLTYPE* get_IsPlaybackRateEnabled)(__x_ABI_CWindows_CUI_CXaml_CControls_CIMediaTransportControls* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* put_IsPlaybackRateEnabled)(__x_ABI_CWindows_CUI_CXaml_CControls_CIMediaTransportControls* This,
        boolean value);
    HRESULT (STDMETHODCALLTYPE* get_IsSeekBarVisible)(__x_ABI_CWindows_CUI_CXaml_CControls_CIMediaTransportControls* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* put_IsSeekBarVisible)(__x_ABI_CWindows_CUI_CXaml_CControls_CIMediaTransportControls* This,
        boolean value);
    HRESULT (STDMETHODCALLTYPE* get_IsSeekEnabled)(__x_ABI_CWindows_CUI_CXaml_CControls_CIMediaTransportControls* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* put_IsSeekEnabled)(__x_ABI_CWindows_CUI_CXaml_CControls_CIMediaTransportControls* This,
        boolean value);
    HRESULT (STDMETHODCALLTYPE* get_IsCompact)(__x_ABI_CWindows_CUI_CXaml_CControls_CIMediaTransportControls* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* put_IsCompact)(__x_ABI_CWindows_CUI_CXaml_CControls_CIMediaTransportControls* This,
        boolean value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaTransportControlsVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaTransportControls
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaTransportControlsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIMediaTransportControls;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIMediaTransportControls_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIMediaTransportControls2_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CControls_CIMediaTransportControls2_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaTransportControls2Vtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CControls_CIMediaTransportControls2* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CControls_CIMediaTransportControls2* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CControls_CIMediaTransportControls2* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CControls_CIMediaTransportControls2* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CControls_CIMediaTransportControls2* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CControls_CIMediaTransportControls2* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_IsSkipForwardButtonVisible)(__x_ABI_CWindows_CUI_CXaml_CControls_CIMediaTransportControls2* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* put_IsSkipForwardButtonVisible)(__x_ABI_CWindows_CUI_CXaml_CControls_CIMediaTransportControls2* This,
        boolean value);
    HRESULT (STDMETHODCALLTYPE* get_IsSkipForwardEnabled)(__x_ABI_CWindows_CUI_CXaml_CControls_CIMediaTransportControls2* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* put_IsSkipForwardEnabled)(__x_ABI_CWindows_CUI_CXaml_CControls_CIMediaTransportControls2* This,
        boolean value);
    HRESULT (STDMETHODCALLTYPE* get_IsSkipBackwardButtonVisible)(__x_ABI_CWindows_CUI_CXaml_CControls_CIMediaTransportControls2* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* put_IsSkipBackwardButtonVisible)(__x_ABI_CWindows_CUI_CXaml_CControls_CIMediaTransportControls2* This,
        boolean value);
    HRESULT (STDMETHODCALLTYPE* get_IsSkipBackwardEnabled)(__x_ABI_CWindows_CUI_CXaml_CControls_CIMediaTransportControls2* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* put_IsSkipBackwardEnabled)(__x_ABI_CWindows_CUI_CXaml_CControls_CIMediaTransportControls2* This,
        boolean value);
    HRESULT (STDMETHODCALLTYPE* get_IsNextTrackButtonVisible)(__x_ABI_CWindows_CUI_CXaml_CControls_CIMediaTransportControls2* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* put_IsNextTrackButtonVisible)(__x_ABI_CWindows_CUI_CXaml_CControls_CIMediaTransportControls2* This,
        boolean value);
    HRESULT (STDMETHODCALLTYPE* get_IsPreviousTrackButtonVisible)(__x_ABI_CWindows_CUI_CXaml_CControls_CIMediaTransportControls2* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* put_IsPreviousTrackButtonVisible)(__x_ABI_CWindows_CUI_CXaml_CControls_CIMediaTransportControls2* This,
        boolean value);
    HRESULT (STDMETHODCALLTYPE* get_FastPlayFallbackBehaviour)(__x_ABI_CWindows_CUI_CXaml_CControls_CIMediaTransportControls2* This,
        enum __x_ABI_CWindows_CUI_CXaml_CMedia_CFastPlayFallbackBehaviour* value);
    HRESULT (STDMETHODCALLTYPE* put_FastPlayFallbackBehaviour)(__x_ABI_CWindows_CUI_CXaml_CControls_CIMediaTransportControls2* This,
        enum __x_ABI_CWindows_CUI_CXaml_CMedia_CFastPlayFallbackBehaviour value);
    HRESULT (STDMETHODCALLTYPE* add_ThumbnailRequested)(__x_ABI_CWindows_CUI_CXaml_CControls_CIMediaTransportControls2* This,
        __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CMediaTransportControls___x_ABI_CWindows__CUI__CXaml__CMedia__CMediaTransportControlsThumbnailRequestedEventArgs* handler,
        EventRegistrationToken* token);
    HRESULT (STDMETHODCALLTYPE* remove_ThumbnailRequested)(__x_ABI_CWindows_CUI_CXaml_CControls_CIMediaTransportControls2* This,
        EventRegistrationToken token);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaTransportControls2Vtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaTransportControls2
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaTransportControls2Vtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIMediaTransportControls2;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIMediaTransportControls2_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIMediaTransportControls3_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CControls_CIMediaTransportControls3_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaTransportControls3Vtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CControls_CIMediaTransportControls3* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CControls_CIMediaTransportControls3* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CControls_CIMediaTransportControls3* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CControls_CIMediaTransportControls3* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CControls_CIMediaTransportControls3* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CControls_CIMediaTransportControls3* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_ShowAndHideAutomatically)(__x_ABI_CWindows_CUI_CXaml_CControls_CIMediaTransportControls3* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* put_ShowAndHideAutomatically)(__x_ABI_CWindows_CUI_CXaml_CControls_CIMediaTransportControls3* This,
        boolean value);
    HRESULT (STDMETHODCALLTYPE* get_IsRepeatEnabled)(__x_ABI_CWindows_CUI_CXaml_CControls_CIMediaTransportControls3* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* put_IsRepeatEnabled)(__x_ABI_CWindows_CUI_CXaml_CControls_CIMediaTransportControls3* This,
        boolean value);
    HRESULT (STDMETHODCALLTYPE* get_IsRepeatButtonVisible)(__x_ABI_CWindows_CUI_CXaml_CControls_CIMediaTransportControls3* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* put_IsRepeatButtonVisible)(__x_ABI_CWindows_CUI_CXaml_CControls_CIMediaTransportControls3* This,
        boolean value);
    HRESULT (STDMETHODCALLTYPE* Show)(__x_ABI_CWindows_CUI_CXaml_CControls_CIMediaTransportControls3* This);
    HRESULT (STDMETHODCALLTYPE* Hide)(__x_ABI_CWindows_CUI_CXaml_CControls_CIMediaTransportControls3* This);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaTransportControls3Vtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaTransportControls3
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaTransportControls3Vtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIMediaTransportControls3;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIMediaTransportControls3_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIMediaTransportControls4_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CControls_CIMediaTransportControls4_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaTransportControls4Vtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CControls_CIMediaTransportControls4* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CControls_CIMediaTransportControls4* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CControls_CIMediaTransportControls4* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CControls_CIMediaTransportControls4* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CControls_CIMediaTransportControls4* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CControls_CIMediaTransportControls4* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_IsCompactOverlayButtonVisible)(__x_ABI_CWindows_CUI_CXaml_CControls_CIMediaTransportControls4* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* put_IsCompactOverlayButtonVisible)(__x_ABI_CWindows_CUI_CXaml_CControls_CIMediaTransportControls4* This,
        boolean value);
    HRESULT (STDMETHODCALLTYPE* get_IsCompactOverlayEnabled)(__x_ABI_CWindows_CUI_CXaml_CControls_CIMediaTransportControls4* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* put_IsCompactOverlayEnabled)(__x_ABI_CWindows_CUI_CXaml_CControls_CIMediaTransportControls4* This,
        boolean value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaTransportControls4Vtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaTransportControls4
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaTransportControls4Vtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIMediaTransportControls4;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIMediaTransportControls4_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIMediaTransportControlsFactory_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CControls_CIMediaTransportControlsFactory_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaTransportControlsFactoryVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CControls_CIMediaTransportControlsFactory* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CControls_CIMediaTransportControlsFactory* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CControls_CIMediaTransportControlsFactory* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CControls_CIMediaTransportControlsFactory* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CControls_CIMediaTransportControlsFactory* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CControls_CIMediaTransportControlsFactory* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* CreateInstance)(__x_ABI_CWindows_CUI_CXaml_CControls_CIMediaTransportControlsFactory* This,
        IInspectable* baseInterface,
        IInspectable** innerInterface,
        __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaTransportControls** value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaTransportControlsFactoryVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaTransportControlsFactory
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaTransportControlsFactoryVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIMediaTransportControlsFactory;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIMediaTransportControlsFactory_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIMediaTransportControlsHelper_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CControls_CIMediaTransportControlsHelper_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaTransportControlsHelperVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CControls_CIMediaTransportControlsHelper* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CControls_CIMediaTransportControlsHelper* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CControls_CIMediaTransportControlsHelper* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CControls_CIMediaTransportControlsHelper* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CControls_CIMediaTransportControlsHelper* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CControls_CIMediaTransportControlsHelper* This,
            TrustLevel* trustLevel);
    
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaTransportControlsHelperVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaTransportControlsHelper
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaTransportControlsHelperVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIMediaTransportControlsHelper;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIMediaTransportControlsHelper_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIMediaTransportControlsHelperStatics_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CControls_CIMediaTransportControlsHelperStatics_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaTransportControlsHelperStaticsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CControls_CIMediaTransportControlsHelperStatics* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CControls_CIMediaTransportControlsHelperStatics* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CControls_CIMediaTransportControlsHelperStatics* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CControls_CIMediaTransportControlsHelperStatics* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CControls_CIMediaTransportControlsHelperStatics* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CControls_CIMediaTransportControlsHelperStatics* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_DropoutOrderProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CIMediaTransportControlsHelperStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* GetDropoutOrder)(__x_ABI_CWindows_CUI_CXaml_CControls_CIMediaTransportControlsHelperStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIUIElement* element,
        __x_ABI_C__FIReference_1_int** result);
    HRESULT (STDMETHODCALLTYPE* SetDropoutOrder)(__x_ABI_CWindows_CUI_CXaml_CControls_CIMediaTransportControlsHelperStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIUIElement* element,
        __x_ABI_C__FIReference_1_int* value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaTransportControlsHelperStaticsVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaTransportControlsHelperStatics
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaTransportControlsHelperStaticsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIMediaTransportControlsHelperStatics;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIMediaTransportControlsHelperStatics_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIMediaTransportControlsStatics_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CControls_CIMediaTransportControlsStatics_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaTransportControlsStaticsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CControls_CIMediaTransportControlsStatics* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CControls_CIMediaTransportControlsStatics* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CControls_CIMediaTransportControlsStatics* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CControls_CIMediaTransportControlsStatics* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CControls_CIMediaTransportControlsStatics* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CControls_CIMediaTransportControlsStatics* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_IsFullWindowButtonVisibleProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CIMediaTransportControlsStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_IsFullWindowEnabledProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CIMediaTransportControlsStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_IsZoomButtonVisibleProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CIMediaTransportControlsStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_IsZoomEnabledProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CIMediaTransportControlsStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_IsFastForwardButtonVisibleProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CIMediaTransportControlsStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_IsFastForwardEnabledProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CIMediaTransportControlsStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_IsFastRewindButtonVisibleProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CIMediaTransportControlsStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_IsFastRewindEnabledProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CIMediaTransportControlsStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_IsStopButtonVisibleProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CIMediaTransportControlsStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_IsStopEnabledProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CIMediaTransportControlsStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_IsVolumeButtonVisibleProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CIMediaTransportControlsStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_IsVolumeEnabledProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CIMediaTransportControlsStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_IsPlaybackRateButtonVisibleProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CIMediaTransportControlsStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_IsPlaybackRateEnabledProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CIMediaTransportControlsStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_IsSeekBarVisibleProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CIMediaTransportControlsStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_IsSeekEnabledProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CIMediaTransportControlsStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_IsCompactProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CIMediaTransportControlsStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaTransportControlsStaticsVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaTransportControlsStatics
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaTransportControlsStaticsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIMediaTransportControlsStatics;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIMediaTransportControlsStatics_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIMediaTransportControlsStatics2_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CControls_CIMediaTransportControlsStatics2_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaTransportControlsStatics2Vtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CControls_CIMediaTransportControlsStatics2* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CControls_CIMediaTransportControlsStatics2* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CControls_CIMediaTransportControlsStatics2* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CControls_CIMediaTransportControlsStatics2* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CControls_CIMediaTransportControlsStatics2* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CControls_CIMediaTransportControlsStatics2* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_IsSkipForwardButtonVisibleProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CIMediaTransportControlsStatics2* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_IsSkipForwardEnabledProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CIMediaTransportControlsStatics2* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_IsSkipBackwardButtonVisibleProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CIMediaTransportControlsStatics2* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_IsSkipBackwardEnabledProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CIMediaTransportControlsStatics2* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_IsNextTrackButtonVisibleProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CIMediaTransportControlsStatics2* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_IsPreviousTrackButtonVisibleProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CIMediaTransportControlsStatics2* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_FastPlayFallbackBehaviourProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CIMediaTransportControlsStatics2* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaTransportControlsStatics2Vtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaTransportControlsStatics2
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaTransportControlsStatics2Vtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIMediaTransportControlsStatics2;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIMediaTransportControlsStatics2_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIMediaTransportControlsStatics3_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CControls_CIMediaTransportControlsStatics3_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaTransportControlsStatics3Vtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CControls_CIMediaTransportControlsStatics3* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CControls_CIMediaTransportControlsStatics3* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CControls_CIMediaTransportControlsStatics3* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CControls_CIMediaTransportControlsStatics3* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CControls_CIMediaTransportControlsStatics3* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CControls_CIMediaTransportControlsStatics3* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_ShowAndHideAutomaticallyProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CIMediaTransportControlsStatics3* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_IsRepeatEnabledProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CIMediaTransportControlsStatics3* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_IsRepeatButtonVisibleProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CIMediaTransportControlsStatics3* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaTransportControlsStatics3Vtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaTransportControlsStatics3
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaTransportControlsStatics3Vtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIMediaTransportControlsStatics3;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIMediaTransportControlsStatics3_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIMediaTransportControlsStatics4_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CControls_CIMediaTransportControlsStatics4_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaTransportControlsStatics4Vtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CControls_CIMediaTransportControlsStatics4* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CControls_CIMediaTransportControlsStatics4* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CControls_CIMediaTransportControlsStatics4* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CControls_CIMediaTransportControlsStatics4* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CControls_CIMediaTransportControlsStatics4* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CControls_CIMediaTransportControlsStatics4* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_IsCompactOverlayButtonVisibleProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CIMediaTransportControlsStatics4* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_IsCompactOverlayEnabledProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CIMediaTransportControlsStatics4* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaTransportControlsStatics4Vtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaTransportControlsStatics4
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaTransportControlsStatics4Vtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIMediaTransportControlsStatics4;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIMediaTransportControlsStatics4_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIMenuBar_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CControls_CIMenuBar_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuBarVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CControls_CIMenuBar* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CControls_CIMenuBar* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CControls_CIMenuBar* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CControls_CIMenuBar* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CControls_CIMenuBar* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CControls_CIMenuBar* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Items)(__x_ABI_CWindows_CUI_CXaml_CControls_CIMenuBar* This,
        __x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CXaml__CControls__CMenuBarItem** value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuBarVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuBar
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuBarVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIMenuBar;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIMenuBar_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIMenuBarFactory_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CControls_CIMenuBarFactory_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuBarFactoryVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CControls_CIMenuBarFactory* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CControls_CIMenuBarFactory* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CControls_CIMenuBarFactory* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CControls_CIMenuBarFactory* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CControls_CIMenuBarFactory* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CControls_CIMenuBarFactory* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* CreateInstance)(__x_ABI_CWindows_CUI_CXaml_CControls_CIMenuBarFactory* This,
        IInspectable* baseInterface,
        IInspectable** innerInterface,
        __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuBar** value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuBarFactoryVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuBarFactory
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuBarFactoryVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIMenuBarFactory;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIMenuBarFactory_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIMenuBarItem_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CControls_CIMenuBarItem_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuBarItemVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CControls_CIMenuBarItem* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CControls_CIMenuBarItem* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CControls_CIMenuBarItem* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CControls_CIMenuBarItem* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CControls_CIMenuBarItem* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CControls_CIMenuBarItem* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Title)(__x_ABI_CWindows_CUI_CXaml_CControls_CIMenuBarItem* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* put_Title)(__x_ABI_CWindows_CUI_CXaml_CControls_CIMenuBarItem* This,
        HSTRING value);
    HRESULT (STDMETHODCALLTYPE* get_Items)(__x_ABI_CWindows_CUI_CXaml_CControls_CIMenuBarItem* This,
        __x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CXaml__CControls__CMenuFlyoutItemBase** value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuBarItemVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuBarItem
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuBarItemVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIMenuBarItem;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIMenuBarItem_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIMenuBarItemFactory_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CControls_CIMenuBarItemFactory_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuBarItemFactoryVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CControls_CIMenuBarItemFactory* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CControls_CIMenuBarItemFactory* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CControls_CIMenuBarItemFactory* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CControls_CIMenuBarItemFactory* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CControls_CIMenuBarItemFactory* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CControls_CIMenuBarItemFactory* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* CreateInstance)(__x_ABI_CWindows_CUI_CXaml_CControls_CIMenuBarItemFactory* This,
        IInspectable* baseInterface,
        IInspectable** innerInterface,
        __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuBarItem** value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuBarItemFactoryVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuBarItemFactory
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuBarItemFactoryVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIMenuBarItemFactory;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIMenuBarItemFactory_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIMenuBarItemFlyout_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CControls_CIMenuBarItemFlyout_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuBarItemFlyoutVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CControls_CIMenuBarItemFlyout* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CControls_CIMenuBarItemFlyout* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CControls_CIMenuBarItemFlyout* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CControls_CIMenuBarItemFlyout* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CControls_CIMenuBarItemFlyout* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CControls_CIMenuBarItemFlyout* This,
            TrustLevel* trustLevel);
    
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuBarItemFlyoutVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuBarItemFlyout
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuBarItemFlyoutVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIMenuBarItemFlyout;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIMenuBarItemFlyout_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIMenuBarItemFlyoutFactory_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CControls_CIMenuBarItemFlyoutFactory_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuBarItemFlyoutFactoryVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CControls_CIMenuBarItemFlyoutFactory* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CControls_CIMenuBarItemFlyoutFactory* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CControls_CIMenuBarItemFlyoutFactory* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CControls_CIMenuBarItemFlyoutFactory* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CControls_CIMenuBarItemFlyoutFactory* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CControls_CIMenuBarItemFlyoutFactory* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* CreateInstance)(__x_ABI_CWindows_CUI_CXaml_CControls_CIMenuBarItemFlyoutFactory* This,
        IInspectable* baseInterface,
        IInspectable** innerInterface,
        __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuBarItemFlyout** value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuBarItemFlyoutFactoryVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuBarItemFlyoutFactory
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuBarItemFlyoutFactoryVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIMenuBarItemFlyoutFactory;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIMenuBarItemFlyoutFactory_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIMenuBarItemStatics_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CControls_CIMenuBarItemStatics_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuBarItemStaticsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CControls_CIMenuBarItemStatics* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CControls_CIMenuBarItemStatics* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CControls_CIMenuBarItemStatics* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CControls_CIMenuBarItemStatics* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CControls_CIMenuBarItemStatics* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CControls_CIMenuBarItemStatics* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_TitleProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CIMenuBarItemStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_ItemsProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CIMenuBarItemStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuBarItemStaticsVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuBarItemStatics
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuBarItemStaticsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIMenuBarItemStatics;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIMenuBarItemStatics_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIMenuBarStatics_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CControls_CIMenuBarStatics_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuBarStaticsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CControls_CIMenuBarStatics* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CControls_CIMenuBarStatics* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CControls_CIMenuBarStatics* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CControls_CIMenuBarStatics* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CControls_CIMenuBarStatics* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CControls_CIMenuBarStatics* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_ItemsProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CIMenuBarStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuBarStaticsVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuBarStatics
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuBarStaticsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIMenuBarStatics;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIMenuBarStatics_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyout_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyout_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyout* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyout* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyout* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyout* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyout* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyout* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Items)(__x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyout* This,
        __x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CXaml__CControls__CMenuFlyoutItemBase** value);
    HRESULT (STDMETHODCALLTYPE* get_MenuFlyoutPresenterStyle)(__x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyout* This,
        __x_ABI_CWindows_CUI_CXaml_CIStyle** value);
    HRESULT (STDMETHODCALLTYPE* put_MenuFlyoutPresenterStyle)(__x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyout* This,
        __x_ABI_CWindows_CUI_CXaml_CIStyle* value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyout
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyout;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyout_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyout2_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyout2_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyout2Vtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyout2* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyout2* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyout2* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyout2* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyout2* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyout2* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* ShowAt)(__x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyout2* This,
        __x_ABI_CWindows_CUI_CXaml_CIUIElement* targetElement,
        struct __x_ABI_CWindows_CFoundation_CPoint point);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyout2Vtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyout2
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyout2Vtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyout2;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyout2_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutFactory_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutFactory_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutFactoryVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutFactory* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutFactory* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutFactory* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutFactory* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutFactory* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutFactory* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* CreateInstance)(__x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutFactory* This,
        IInspectable* baseInterface,
        IInspectable** innerInterface,
        __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyout** value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutFactoryVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutFactory
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutFactoryVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutFactory;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutFactory_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutItem_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutItem_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutItemVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutItem* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutItem* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutItem* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutItem* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutItem* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutItem* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Text)(__x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutItem* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* put_Text)(__x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutItem* This,
        HSTRING value);
    HRESULT (STDMETHODCALLTYPE* get_Command)(__x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutItem* This,
        __x_ABI_CWindows_CUI_CXaml_CInput_CICommand** value);
    HRESULT (STDMETHODCALLTYPE* put_Command)(__x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutItem* This,
        __x_ABI_CWindows_CUI_CXaml_CInput_CICommand* value);
    HRESULT (STDMETHODCALLTYPE* get_CommandParameter)(__x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutItem* This,
        IInspectable** value);
    HRESULT (STDMETHODCALLTYPE* put_CommandParameter)(__x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutItem* This,
        IInspectable* value);
    HRESULT (STDMETHODCALLTYPE* add_Click)(__x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutItem* This,
        __x_ABI_CWindows_CUI_CXaml_CIRoutedEventHandler* handler,
        EventRegistrationToken* token);
    HRESULT (STDMETHODCALLTYPE* remove_Click)(__x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutItem* This,
        EventRegistrationToken token);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutItemVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutItem
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutItemVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutItem;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutItem_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutItem2_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutItem2_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutItem2Vtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutItem2* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutItem2* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutItem2* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutItem2* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutItem2* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutItem2* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Icon)(__x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutItem2* This,
        __x_ABI_CWindows_CUI_CXaml_CControls_CIIconElement** value);
    HRESULT (STDMETHODCALLTYPE* put_Icon)(__x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutItem2* This,
        __x_ABI_CWindows_CUI_CXaml_CControls_CIIconElement* value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutItem2Vtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutItem2
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutItem2Vtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutItem2;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutItem2_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutItem3_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutItem3_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutItem3Vtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutItem3* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutItem3* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutItem3* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutItem3* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutItem3* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutItem3* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_KeyboardAcceleratorTextOverride)(__x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutItem3* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* put_KeyboardAcceleratorTextOverride)(__x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutItem3* This,
        HSTRING value);
    HRESULT (STDMETHODCALLTYPE* get_TemplateSettings)(__x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutItem3* This,
        __x_ABI_CWindows_CUI_CXaml_CControls_CPrimitives_CIMenuFlyoutItemTemplateSettings** value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutItem3Vtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutItem3
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutItem3Vtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutItem3;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutItem3_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutItemBase_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutItemBase_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutItemBaseVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutItemBase* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutItemBase* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutItemBase* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutItemBase* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutItemBase* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutItemBase* This,
            TrustLevel* trustLevel);
    
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutItemBaseVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutItemBase
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutItemBaseVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutItemBase;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutItemBase_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutItemBaseFactory_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutItemBaseFactory_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutItemBaseFactoryVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutItemBaseFactory* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutItemBaseFactory* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutItemBaseFactory* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutItemBaseFactory* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutItemBaseFactory* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutItemBaseFactory* This,
            TrustLevel* trustLevel);
    
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutItemBaseFactoryVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutItemBaseFactory
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutItemBaseFactoryVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutItemBaseFactory;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutItemBaseFactory_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutItemFactory_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutItemFactory_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutItemFactoryVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutItemFactory* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutItemFactory* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutItemFactory* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutItemFactory* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutItemFactory* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutItemFactory* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* CreateInstance)(__x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutItemFactory* This,
        IInspectable* baseInterface,
        IInspectable** innerInterface,
        __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutItem** value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutItemFactoryVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutItemFactory
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutItemFactoryVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutItemFactory;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutItemFactory_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutItemStatics_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutItemStatics_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutItemStaticsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutItemStatics* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutItemStatics* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutItemStatics* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutItemStatics* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutItemStatics* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutItemStatics* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_TextProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutItemStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_CommandProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutItemStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_CommandParameterProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutItemStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutItemStaticsVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutItemStatics
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutItemStaticsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutItemStatics;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutItemStatics_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutItemStatics2_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutItemStatics2_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutItemStatics2Vtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutItemStatics2* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutItemStatics2* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutItemStatics2* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutItemStatics2* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutItemStatics2* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutItemStatics2* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_IconProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutItemStatics2* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutItemStatics2Vtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutItemStatics2
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutItemStatics2Vtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutItemStatics2;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutItemStatics2_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutItemStatics3_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutItemStatics3_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutItemStatics3Vtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutItemStatics3* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutItemStatics3* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutItemStatics3* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutItemStatics3* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutItemStatics3* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutItemStatics3* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_KeyboardAcceleratorTextOverrideProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutItemStatics3* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutItemStatics3Vtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutItemStatics3
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutItemStatics3Vtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutItemStatics3;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutItemStatics3_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutPresenter_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutPresenter_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutPresenterVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutPresenter* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutPresenter* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutPresenter* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutPresenter* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutPresenter* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutPresenter* This,
            TrustLevel* trustLevel);
    
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutPresenterVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutPresenter
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutPresenterVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutPresenter;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutPresenter_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutPresenter2_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutPresenter2_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutPresenter2Vtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutPresenter2* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutPresenter2* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutPresenter2* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutPresenter2* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutPresenter2* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutPresenter2* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_TemplateSettings)(__x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutPresenter2* This,
        __x_ABI_CWindows_CUI_CXaml_CControls_CPrimitives_CIMenuFlyoutPresenterTemplateSettings** value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutPresenter2Vtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutPresenter2
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutPresenter2Vtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutPresenter2;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutPresenter2_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutPresenter3_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutPresenter3_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutPresenter3Vtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutPresenter3* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutPresenter3* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutPresenter3* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutPresenter3* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutPresenter3* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutPresenter3* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_IsDefaultShadowEnabled)(__x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutPresenter3* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* put_IsDefaultShadowEnabled)(__x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutPresenter3* This,
        boolean value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutPresenter3Vtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutPresenter3
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutPresenter3Vtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutPresenter3;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutPresenter3_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutPresenterFactory_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutPresenterFactory_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutPresenterFactoryVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutPresenterFactory* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutPresenterFactory* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutPresenterFactory* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutPresenterFactory* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutPresenterFactory* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutPresenterFactory* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* CreateInstance)(__x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutPresenterFactory* This,
        IInspectable* baseInterface,
        IInspectable** innerInterface,
        __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutPresenter** value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutPresenterFactoryVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutPresenterFactory
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutPresenterFactoryVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutPresenterFactory;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutPresenterFactory_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutPresenterStatics3_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutPresenterStatics3_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutPresenterStatics3Vtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutPresenterStatics3* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutPresenterStatics3* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutPresenterStatics3* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutPresenterStatics3* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutPresenterStatics3* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutPresenterStatics3* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_IsDefaultShadowEnabledProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutPresenterStatics3* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutPresenterStatics3Vtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutPresenterStatics3
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutPresenterStatics3Vtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutPresenterStatics3;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutPresenterStatics3_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutSeparator_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutSeparator_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutSeparatorVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutSeparator* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutSeparator* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutSeparator* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutSeparator* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutSeparator* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutSeparator* This,
            TrustLevel* trustLevel);
    
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutSeparatorVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutSeparator
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutSeparatorVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutSeparator;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutSeparator_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutSeparatorFactory_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutSeparatorFactory_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutSeparatorFactoryVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutSeparatorFactory* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutSeparatorFactory* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutSeparatorFactory* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutSeparatorFactory* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutSeparatorFactory* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutSeparatorFactory* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* CreateInstance)(__x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutSeparatorFactory* This,
        IInspectable* baseInterface,
        IInspectable** innerInterface,
        __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutSeparator** value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutSeparatorFactoryVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutSeparatorFactory
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutSeparatorFactoryVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutSeparatorFactory;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutSeparatorFactory_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutStatics_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutStatics_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutStaticsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutStatics* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutStatics* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutStatics* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutStatics* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutStatics* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutStatics* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_MenuFlyoutPresenterStyleProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutStaticsVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutStatics
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutStaticsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutStatics;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutStatics_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutSubItem_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutSubItem_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutSubItemVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutSubItem* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutSubItem* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutSubItem* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutSubItem* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutSubItem* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutSubItem* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Items)(__x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutSubItem* This,
        __x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CXaml__CControls__CMenuFlyoutItemBase** value);
    HRESULT (STDMETHODCALLTYPE* get_Text)(__x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutSubItem* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* put_Text)(__x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutSubItem* This,
        HSTRING value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutSubItemVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutSubItem
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutSubItemVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutSubItem;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutSubItem_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutSubItem2_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutSubItem2_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutSubItem2Vtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutSubItem2* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutSubItem2* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutSubItem2* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutSubItem2* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutSubItem2* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutSubItem2* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Icon)(__x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutSubItem2* This,
        __x_ABI_CWindows_CUI_CXaml_CControls_CIIconElement** value);
    HRESULT (STDMETHODCALLTYPE* put_Icon)(__x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutSubItem2* This,
        __x_ABI_CWindows_CUI_CXaml_CControls_CIIconElement* value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutSubItem2Vtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutSubItem2
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutSubItem2Vtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutSubItem2;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutSubItem2_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutSubItemStatics_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutSubItemStatics_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutSubItemStaticsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutSubItemStatics* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutSubItemStatics* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutSubItemStatics* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutSubItemStatics* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutSubItemStatics* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutSubItemStatics* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_TextProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutSubItemStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutSubItemStaticsVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutSubItemStatics
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutSubItemStaticsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutSubItemStatics;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutSubItemStatics_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutSubItemStatics2_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutSubItemStatics2_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutSubItemStatics2Vtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutSubItemStatics2* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutSubItemStatics2* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutSubItemStatics2* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutSubItemStatics2* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutSubItemStatics2* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutSubItemStatics2* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_IconProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutSubItemStatics2* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutSubItemStatics2Vtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutSubItemStatics2
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutSubItemStatics2Vtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutSubItemStatics2;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutSubItemStatics2_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CINavigate_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CControls_CINavigate_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CINavigateVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CControls_CINavigate* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CControls_CINavigate* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CControls_CINavigate* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CControls_CINavigate* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CControls_CINavigate* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CControls_CINavigate* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* Navigate)(__x_ABI_CWindows_CUI_CXaml_CControls_CINavigate* This,
        struct __x_ABI_CWindows_CUI_CXaml_CInterop_CTypeName sourcePageType,
        boolean* result);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CINavigateVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CINavigate
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CINavigateVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CINavigate;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CINavigate_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CINavigationView_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CControls_CINavigationView_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CControls_CINavigationView* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CControls_CINavigationView* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CControls_CINavigationView* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CControls_CINavigationView* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CControls_CINavigationView* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CControls_CINavigationView* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_IsPaneOpen)(__x_ABI_CWindows_CUI_CXaml_CControls_CINavigationView* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* put_IsPaneOpen)(__x_ABI_CWindows_CUI_CXaml_CControls_CINavigationView* This,
        boolean value);
    HRESULT (STDMETHODCALLTYPE* get_CompactModeThresholdWidth)(__x_ABI_CWindows_CUI_CXaml_CControls_CINavigationView* This,
        DOUBLE* value);
    HRESULT (STDMETHODCALLTYPE* put_CompactModeThresholdWidth)(__x_ABI_CWindows_CUI_CXaml_CControls_CINavigationView* This,
        DOUBLE value);
    HRESULT (STDMETHODCALLTYPE* get_ExpandedModeThresholdWidth)(__x_ABI_CWindows_CUI_CXaml_CControls_CINavigationView* This,
        DOUBLE* value);
    HRESULT (STDMETHODCALLTYPE* put_ExpandedModeThresholdWidth)(__x_ABI_CWindows_CUI_CXaml_CControls_CINavigationView* This,
        DOUBLE value);
    HRESULT (STDMETHODCALLTYPE* get_PaneFooter)(__x_ABI_CWindows_CUI_CXaml_CControls_CINavigationView* This,
        __x_ABI_CWindows_CUI_CXaml_CIUIElement** value);
    HRESULT (STDMETHODCALLTYPE* put_PaneFooter)(__x_ABI_CWindows_CUI_CXaml_CControls_CINavigationView* This,
        __x_ABI_CWindows_CUI_CXaml_CIUIElement* value);
    HRESULT (STDMETHODCALLTYPE* get_Header)(__x_ABI_CWindows_CUI_CXaml_CControls_CINavigationView* This,
        IInspectable** value);
    HRESULT (STDMETHODCALLTYPE* put_Header)(__x_ABI_CWindows_CUI_CXaml_CControls_CINavigationView* This,
        IInspectable* value);
    HRESULT (STDMETHODCALLTYPE* get_HeaderTemplate)(__x_ABI_CWindows_CUI_CXaml_CControls_CINavigationView* This,
        __x_ABI_CWindows_CUI_CXaml_CIDataTemplate** value);
    HRESULT (STDMETHODCALLTYPE* put_HeaderTemplate)(__x_ABI_CWindows_CUI_CXaml_CControls_CINavigationView* This,
        __x_ABI_CWindows_CUI_CXaml_CIDataTemplate* value);
    HRESULT (STDMETHODCALLTYPE* get_DisplayMode)(__x_ABI_CWindows_CUI_CXaml_CControls_CINavigationView* This,
        enum __x_ABI_CWindows_CUI_CXaml_CControls_CNavigationViewDisplayMode* value);
    HRESULT (STDMETHODCALLTYPE* get_IsSettingsVisible)(__x_ABI_CWindows_CUI_CXaml_CControls_CINavigationView* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* put_IsSettingsVisible)(__x_ABI_CWindows_CUI_CXaml_CControls_CINavigationView* This,
        boolean value);
    HRESULT (STDMETHODCALLTYPE* get_IsPaneToggleButtonVisible)(__x_ABI_CWindows_CUI_CXaml_CControls_CINavigationView* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* put_IsPaneToggleButtonVisible)(__x_ABI_CWindows_CUI_CXaml_CControls_CINavigationView* This,
        boolean value);
    HRESULT (STDMETHODCALLTYPE* get_AlwaysShowHeader)(__x_ABI_CWindows_CUI_CXaml_CControls_CINavigationView* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* put_AlwaysShowHeader)(__x_ABI_CWindows_CUI_CXaml_CControls_CINavigationView* This,
        boolean value);
    HRESULT (STDMETHODCALLTYPE* get_CompactPaneLength)(__x_ABI_CWindows_CUI_CXaml_CControls_CINavigationView* This,
        DOUBLE* value);
    HRESULT (STDMETHODCALLTYPE* put_CompactPaneLength)(__x_ABI_CWindows_CUI_CXaml_CControls_CINavigationView* This,
        DOUBLE value);
    HRESULT (STDMETHODCALLTYPE* get_OpenPaneLength)(__x_ABI_CWindows_CUI_CXaml_CControls_CINavigationView* This,
        DOUBLE* value);
    HRESULT (STDMETHODCALLTYPE* put_OpenPaneLength)(__x_ABI_CWindows_CUI_CXaml_CControls_CINavigationView* This,
        DOUBLE value);
    HRESULT (STDMETHODCALLTYPE* get_PaneToggleButtonStyle)(__x_ABI_CWindows_CUI_CXaml_CControls_CINavigationView* This,
        __x_ABI_CWindows_CUI_CXaml_CIStyle** value);
    HRESULT (STDMETHODCALLTYPE* put_PaneToggleButtonStyle)(__x_ABI_CWindows_CUI_CXaml_CControls_CINavigationView* This,
        __x_ABI_CWindows_CUI_CXaml_CIStyle* value);
    HRESULT (STDMETHODCALLTYPE* get_SelectedItem)(__x_ABI_CWindows_CUI_CXaml_CControls_CINavigationView* This,
        IInspectable** value);
    HRESULT (STDMETHODCALLTYPE* put_SelectedItem)(__x_ABI_CWindows_CUI_CXaml_CControls_CINavigationView* This,
        IInspectable* value);
    HRESULT (STDMETHODCALLTYPE* get_MenuItems)(__x_ABI_CWindows_CUI_CXaml_CControls_CINavigationView* This,
        __x_ABI_C__FIVector_1_IInspectable** value);
    HRESULT (STDMETHODCALLTYPE* get_MenuItemsSource)(__x_ABI_CWindows_CUI_CXaml_CControls_CINavigationView* This,
        IInspectable** value);
    HRESULT (STDMETHODCALLTYPE* put_MenuItemsSource)(__x_ABI_CWindows_CUI_CXaml_CControls_CINavigationView* This,
        IInspectable* value);
    HRESULT (STDMETHODCALLTYPE* get_SettingsItem)(__x_ABI_CWindows_CUI_CXaml_CControls_CINavigationView* This,
        IInspectable** value);
    HRESULT (STDMETHODCALLTYPE* get_AutoSuggestBox)(__x_ABI_CWindows_CUI_CXaml_CControls_CINavigationView* This,
        __x_ABI_CWindows_CUI_CXaml_CControls_CIAutoSuggestBox** value);
    HRESULT (STDMETHODCALLTYPE* put_AutoSuggestBox)(__x_ABI_CWindows_CUI_CXaml_CControls_CINavigationView* This,
        __x_ABI_CWindows_CUI_CXaml_CControls_CIAutoSuggestBox* value);
    HRESULT (STDMETHODCALLTYPE* get_MenuItemTemplate)(__x_ABI_CWindows_CUI_CXaml_CControls_CINavigationView* This,
        __x_ABI_CWindows_CUI_CXaml_CIDataTemplate** value);
    HRESULT (STDMETHODCALLTYPE* put_MenuItemTemplate)(__x_ABI_CWindows_CUI_CXaml_CControls_CINavigationView* This,
        __x_ABI_CWindows_CUI_CXaml_CIDataTemplate* value);
    HRESULT (STDMETHODCALLTYPE* get_MenuItemTemplateSelector)(__x_ABI_CWindows_CUI_CXaml_CControls_CINavigationView* This,
        __x_ABI_CWindows_CUI_CXaml_CControls_CIDataTemplateSelector** value);
    HRESULT (STDMETHODCALLTYPE* put_MenuItemTemplateSelector)(__x_ABI_CWindows_CUI_CXaml_CControls_CINavigationView* This,
        __x_ABI_CWindows_CUI_CXaml_CControls_CIDataTemplateSelector* value);
    HRESULT (STDMETHODCALLTYPE* get_MenuItemContainerStyle)(__x_ABI_CWindows_CUI_CXaml_CControls_CINavigationView* This,
        __x_ABI_CWindows_CUI_CXaml_CIStyle** value);
    HRESULT (STDMETHODCALLTYPE* put_MenuItemContainerStyle)(__x_ABI_CWindows_CUI_CXaml_CControls_CINavigationView* This,
        __x_ABI_CWindows_CUI_CXaml_CIStyle* value);
    HRESULT (STDMETHODCALLTYPE* get_MenuItemContainerStyleSelector)(__x_ABI_CWindows_CUI_CXaml_CControls_CINavigationView* This,
        __x_ABI_CWindows_CUI_CXaml_CControls_CIStyleSelector** value);
    HRESULT (STDMETHODCALLTYPE* put_MenuItemContainerStyleSelector)(__x_ABI_CWindows_CUI_CXaml_CControls_CINavigationView* This,
        __x_ABI_CWindows_CUI_CXaml_CControls_CIStyleSelector* value);
    HRESULT (STDMETHODCALLTYPE* MenuItemFromContainer)(__x_ABI_CWindows_CUI_CXaml_CControls_CINavigationView* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyObject* container,
        IInspectable** result);
    HRESULT (STDMETHODCALLTYPE* ContainerFromMenuItem)(__x_ABI_CWindows_CUI_CXaml_CControls_CINavigationView* This,
        IInspectable* item,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyObject** result);
    HRESULT (STDMETHODCALLTYPE* add_SelectionChanged)(__x_ABI_CWindows_CUI_CXaml_CControls_CINavigationView* This,
        __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CNavigationView___x_ABI_CWindows__CUI__CXaml__CControls__CNavigationViewSelectionChangedEventArgs* handler,
        EventRegistrationToken* token);
    HRESULT (STDMETHODCALLTYPE* remove_SelectionChanged)(__x_ABI_CWindows_CUI_CXaml_CControls_CINavigationView* This,
        EventRegistrationToken token);
    HRESULT (STDMETHODCALLTYPE* add_ItemInvoked)(__x_ABI_CWindows_CUI_CXaml_CControls_CINavigationView* This,
        __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CNavigationView___x_ABI_CWindows__CUI__CXaml__CControls__CNavigationViewItemInvokedEventArgs* handler,
        EventRegistrationToken* token);
    HRESULT (STDMETHODCALLTYPE* remove_ItemInvoked)(__x_ABI_CWindows_CUI_CXaml_CControls_CINavigationView* This,
        EventRegistrationToken token);
    HRESULT (STDMETHODCALLTYPE* add_DisplayModeChanged)(__x_ABI_CWindows_CUI_CXaml_CControls_CINavigationView* This,
        __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CNavigationView___x_ABI_CWindows__CUI__CXaml__CControls__CNavigationViewDisplayModeChangedEventArgs* handler,
        EventRegistrationToken* token);
    HRESULT (STDMETHODCALLTYPE* remove_DisplayModeChanged)(__x_ABI_CWindows_CUI_CXaml_CControls_CINavigationView* This,
        EventRegistrationToken token);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CINavigationView
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CINavigationView;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CINavigationView_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CINavigationView2_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CControls_CINavigationView2_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CINavigationView2Vtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CControls_CINavigationView2* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CControls_CINavigationView2* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CControls_CINavigationView2* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CControls_CINavigationView2* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CControls_CINavigationView2* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CControls_CINavigationView2* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_IsBackButtonVisible)(__x_ABI_CWindows_CUI_CXaml_CControls_CINavigationView2* This,
        enum __x_ABI_CWindows_CUI_CXaml_CControls_CNavigationViewBackButtonVisible* value);
    HRESULT (STDMETHODCALLTYPE* put_IsBackButtonVisible)(__x_ABI_CWindows_CUI_CXaml_CControls_CINavigationView2* This,
        enum __x_ABI_CWindows_CUI_CXaml_CControls_CNavigationViewBackButtonVisible value);
    HRESULT (STDMETHODCALLTYPE* get_IsBackEnabled)(__x_ABI_CWindows_CUI_CXaml_CControls_CINavigationView2* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* put_IsBackEnabled)(__x_ABI_CWindows_CUI_CXaml_CControls_CINavigationView2* This,
        boolean value);
    HRESULT (STDMETHODCALLTYPE* get_PaneTitle)(__x_ABI_CWindows_CUI_CXaml_CControls_CINavigationView2* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* put_PaneTitle)(__x_ABI_CWindows_CUI_CXaml_CControls_CINavigationView2* This,
        HSTRING value);
    HRESULT (STDMETHODCALLTYPE* add_BackRequested)(__x_ABI_CWindows_CUI_CXaml_CControls_CINavigationView2* This,
        __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CNavigationView___x_ABI_CWindows__CUI__CXaml__CControls__CNavigationViewBackRequestedEventArgs* handler,
        EventRegistrationToken* token);
    HRESULT (STDMETHODCALLTYPE* remove_BackRequested)(__x_ABI_CWindows_CUI_CXaml_CControls_CINavigationView2* This,
        EventRegistrationToken token);
    HRESULT (STDMETHODCALLTYPE* add_PaneClosed)(__x_ABI_CWindows_CUI_CXaml_CControls_CINavigationView2* This,
        __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CNavigationView_IInspectable* handler,
        EventRegistrationToken* token);
    HRESULT (STDMETHODCALLTYPE* remove_PaneClosed)(__x_ABI_CWindows_CUI_CXaml_CControls_CINavigationView2* This,
        EventRegistrationToken token);
    HRESULT (STDMETHODCALLTYPE* add_PaneClosing)(__x_ABI_CWindows_CUI_CXaml_CControls_CINavigationView2* This,
        __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CNavigationView___x_ABI_CWindows__CUI__CXaml__CControls__CNavigationViewPaneClosingEventArgs* handler,
        EventRegistrationToken* token);
    HRESULT (STDMETHODCALLTYPE* remove_PaneClosing)(__x_ABI_CWindows_CUI_CXaml_CControls_CINavigationView2* This,
        EventRegistrationToken token);
    HRESULT (STDMETHODCALLTYPE* add_PaneOpened)(__x_ABI_CWindows_CUI_CXaml_CControls_CINavigationView2* This,
        __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CNavigationView_IInspectable* handler,
        EventRegistrationToken* token);
    HRESULT (STDMETHODCALLTYPE* remove_PaneOpened)(__x_ABI_CWindows_CUI_CXaml_CControls_CINavigationView2* This,
        EventRegistrationToken token);
    HRESULT (STDMETHODCALLTYPE* add_PaneOpening)(__x_ABI_CWindows_CUI_CXaml_CControls_CINavigationView2* This,
        __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CNavigationView_IInspectable* handler,
        EventRegistrationToken* token);
    HRESULT (STDMETHODCALLTYPE* remove_PaneOpening)(__x_ABI_CWindows_CUI_CXaml_CControls_CINavigationView2* This,
        EventRegistrationToken token);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CINavigationView2Vtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CINavigationView2
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CINavigationView2Vtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CINavigationView2;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CINavigationView2_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CINavigationView3_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CControls_CINavigationView3_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CINavigationView3Vtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CControls_CINavigationView3* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CControls_CINavigationView3* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CControls_CINavigationView3* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CControls_CINavigationView3* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CControls_CINavigationView3* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CControls_CINavigationView3* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_PaneDisplayMode)(__x_ABI_CWindows_CUI_CXaml_CControls_CINavigationView3* This,
        enum __x_ABI_CWindows_CUI_CXaml_CControls_CNavigationViewPaneDisplayMode* value);
    HRESULT (STDMETHODCALLTYPE* put_PaneDisplayMode)(__x_ABI_CWindows_CUI_CXaml_CControls_CINavigationView3* This,
        enum __x_ABI_CWindows_CUI_CXaml_CControls_CNavigationViewPaneDisplayMode value);
    HRESULT (STDMETHODCALLTYPE* get_PaneHeader)(__x_ABI_CWindows_CUI_CXaml_CControls_CINavigationView3* This,
        __x_ABI_CWindows_CUI_CXaml_CIUIElement** value);
    HRESULT (STDMETHODCALLTYPE* put_PaneHeader)(__x_ABI_CWindows_CUI_CXaml_CControls_CINavigationView3* This,
        __x_ABI_CWindows_CUI_CXaml_CIUIElement* value);
    HRESULT (STDMETHODCALLTYPE* get_PaneCustomContent)(__x_ABI_CWindows_CUI_CXaml_CControls_CINavigationView3* This,
        __x_ABI_CWindows_CUI_CXaml_CIUIElement** value);
    HRESULT (STDMETHODCALLTYPE* put_PaneCustomContent)(__x_ABI_CWindows_CUI_CXaml_CControls_CINavigationView3* This,
        __x_ABI_CWindows_CUI_CXaml_CIUIElement* value);
    HRESULT (STDMETHODCALLTYPE* get_ContentOverlay)(__x_ABI_CWindows_CUI_CXaml_CControls_CINavigationView3* This,
        __x_ABI_CWindows_CUI_CXaml_CIUIElement** value);
    HRESULT (STDMETHODCALLTYPE* put_ContentOverlay)(__x_ABI_CWindows_CUI_CXaml_CControls_CINavigationView3* This,
        __x_ABI_CWindows_CUI_CXaml_CIUIElement* value);
    HRESULT (STDMETHODCALLTYPE* get_IsPaneVisible)(__x_ABI_CWindows_CUI_CXaml_CControls_CINavigationView3* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* put_IsPaneVisible)(__x_ABI_CWindows_CUI_CXaml_CControls_CINavigationView3* This,
        boolean value);
    HRESULT (STDMETHODCALLTYPE* get_SelectionFollowsFocus)(__x_ABI_CWindows_CUI_CXaml_CControls_CINavigationView3* This,
        enum __x_ABI_CWindows_CUI_CXaml_CControls_CNavigationViewSelectionFollowsFocus* value);
    HRESULT (STDMETHODCALLTYPE* put_SelectionFollowsFocus)(__x_ABI_CWindows_CUI_CXaml_CControls_CINavigationView3* This,
        enum __x_ABI_CWindows_CUI_CXaml_CControls_CNavigationViewSelectionFollowsFocus value);
    HRESULT (STDMETHODCALLTYPE* get_TemplateSettings)(__x_ABI_CWindows_CUI_CXaml_CControls_CINavigationView3* This,
        __x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewTemplateSettings** value);
    HRESULT (STDMETHODCALLTYPE* get_ShoulderNavigationEnabled)(__x_ABI_CWindows_CUI_CXaml_CControls_CINavigationView3* This,
        enum __x_ABI_CWindows_CUI_CXaml_CControls_CNavigationViewShoulderNavigationEnabled* value);
    HRESULT (STDMETHODCALLTYPE* put_ShoulderNavigationEnabled)(__x_ABI_CWindows_CUI_CXaml_CControls_CINavigationView3* This,
        enum __x_ABI_CWindows_CUI_CXaml_CControls_CNavigationViewShoulderNavigationEnabled value);
    HRESULT (STDMETHODCALLTYPE* get_OverflowLabelMode)(__x_ABI_CWindows_CUI_CXaml_CControls_CINavigationView3* This,
        enum __x_ABI_CWindows_CUI_CXaml_CControls_CNavigationViewOverflowLabelMode* value);
    HRESULT (STDMETHODCALLTYPE* put_OverflowLabelMode)(__x_ABI_CWindows_CUI_CXaml_CControls_CINavigationView3* This,
        enum __x_ABI_CWindows_CUI_CXaml_CControls_CNavigationViewOverflowLabelMode value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CINavigationView3Vtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CINavigationView3
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CINavigationView3Vtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CINavigationView3;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CINavigationView3_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewBackRequestedEventArgs_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewBackRequestedEventArgs_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewBackRequestedEventArgsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewBackRequestedEventArgs* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewBackRequestedEventArgs* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewBackRequestedEventArgs* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewBackRequestedEventArgs* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewBackRequestedEventArgs* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewBackRequestedEventArgs* This,
            TrustLevel* trustLevel);
    
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewBackRequestedEventArgsVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewBackRequestedEventArgs
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewBackRequestedEventArgsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewBackRequestedEventArgs;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewBackRequestedEventArgs_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewDisplayModeChangedEventArgs_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewDisplayModeChangedEventArgs_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewDisplayModeChangedEventArgsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewDisplayModeChangedEventArgs* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewDisplayModeChangedEventArgs* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewDisplayModeChangedEventArgs* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewDisplayModeChangedEventArgs* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewDisplayModeChangedEventArgs* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewDisplayModeChangedEventArgs* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_DisplayMode)(__x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewDisplayModeChangedEventArgs* This,
        enum __x_ABI_CWindows_CUI_CXaml_CControls_CNavigationViewDisplayMode* value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewDisplayModeChangedEventArgsVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewDisplayModeChangedEventArgs
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewDisplayModeChangedEventArgsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewDisplayModeChangedEventArgs;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewDisplayModeChangedEventArgs_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewFactory_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewFactory_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewFactoryVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewFactory* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewFactory* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewFactory* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewFactory* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewFactory* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewFactory* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* CreateInstance)(__x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewFactory* This,
        IInspectable* baseInterface,
        IInspectable** innerInterface,
        __x_ABI_CWindows_CUI_CXaml_CControls_CINavigationView** value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewFactoryVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewFactory
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewFactoryVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewFactory;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewFactory_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewItem_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewItem_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewItemVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewItem* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewItem* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewItem* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewItem* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewItem* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewItem* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Icon)(__x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewItem* This,
        __x_ABI_CWindows_CUI_CXaml_CControls_CIIconElement** value);
    HRESULT (STDMETHODCALLTYPE* put_Icon)(__x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewItem* This,
        __x_ABI_CWindows_CUI_CXaml_CControls_CIIconElement* value);
    HRESULT (STDMETHODCALLTYPE* get_CompactPaneLength)(__x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewItem* This,
        DOUBLE* value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewItemVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewItem
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewItemVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewItem;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewItem_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewItem2_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewItem2_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewItem2Vtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewItem2* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewItem2* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewItem2* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewItem2* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewItem2* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewItem2* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_SelectsOnInvoked)(__x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewItem2* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* put_SelectsOnInvoked)(__x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewItem2* This,
        boolean value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewItem2Vtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewItem2
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewItem2Vtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewItem2;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewItem2_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewItemBase_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewItemBase_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewItemBaseVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewItemBase* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewItemBase* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewItemBase* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewItemBase* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewItemBase* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewItemBase* This,
            TrustLevel* trustLevel);
    
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewItemBaseVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewItemBase
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewItemBaseVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewItemBase;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewItemBase_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewItemBaseFactory_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewItemBaseFactory_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewItemBaseFactoryVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewItemBaseFactory* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewItemBaseFactory* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewItemBaseFactory* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewItemBaseFactory* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewItemBaseFactory* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewItemBaseFactory* This,
            TrustLevel* trustLevel);
    
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewItemBaseFactoryVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewItemBaseFactory
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewItemBaseFactoryVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewItemBaseFactory;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewItemBaseFactory_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewItemFactory_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewItemFactory_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewItemFactoryVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewItemFactory* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewItemFactory* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewItemFactory* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewItemFactory* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewItemFactory* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewItemFactory* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* CreateInstance)(__x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewItemFactory* This,
        IInspectable* baseInterface,
        IInspectable** innerInterface,
        __x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewItem** value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewItemFactoryVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewItemFactory
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewItemFactoryVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewItemFactory;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewItemFactory_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewItemHeader_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewItemHeader_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewItemHeaderVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewItemHeader* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewItemHeader* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewItemHeader* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewItemHeader* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewItemHeader* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewItemHeader* This,
            TrustLevel* trustLevel);
    
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewItemHeaderVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewItemHeader
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewItemHeaderVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewItemHeader;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewItemHeader_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewItemHeaderFactory_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewItemHeaderFactory_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewItemHeaderFactoryVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewItemHeaderFactory* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewItemHeaderFactory* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewItemHeaderFactory* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewItemHeaderFactory* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewItemHeaderFactory* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewItemHeaderFactory* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* CreateInstance)(__x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewItemHeaderFactory* This,
        IInspectable* baseInterface,
        IInspectable** innerInterface,
        __x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewItemHeader** value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewItemHeaderFactoryVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewItemHeaderFactory
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewItemHeaderFactoryVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewItemHeaderFactory;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewItemHeaderFactory_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewItemInvokedEventArgs_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewItemInvokedEventArgs_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewItemInvokedEventArgsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewItemInvokedEventArgs* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewItemInvokedEventArgs* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewItemInvokedEventArgs* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewItemInvokedEventArgs* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewItemInvokedEventArgs* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewItemInvokedEventArgs* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_InvokedItem)(__x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewItemInvokedEventArgs* This,
        IInspectable** value);
    HRESULT (STDMETHODCALLTYPE* get_IsSettingsInvoked)(__x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewItemInvokedEventArgs* This,
        boolean* value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewItemInvokedEventArgsVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewItemInvokedEventArgs
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewItemInvokedEventArgsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewItemInvokedEventArgs;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewItemInvokedEventArgs_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewItemInvokedEventArgs2_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewItemInvokedEventArgs2_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewItemInvokedEventArgs2Vtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewItemInvokedEventArgs2* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewItemInvokedEventArgs2* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewItemInvokedEventArgs2* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewItemInvokedEventArgs2* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewItemInvokedEventArgs2* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewItemInvokedEventArgs2* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_InvokedItemContainer)(__x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewItemInvokedEventArgs2* This,
        __x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewItemBase** value);
    HRESULT (STDMETHODCALLTYPE* get_RecommendedNavigationTransitionInfo)(__x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewItemInvokedEventArgs2* This,
        __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CINavigationTransitionInfo** value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewItemInvokedEventArgs2Vtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewItemInvokedEventArgs2
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewItemInvokedEventArgs2Vtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewItemInvokedEventArgs2;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewItemInvokedEventArgs2_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewItemSeparator_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewItemSeparator_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewItemSeparatorVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewItemSeparator* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewItemSeparator* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewItemSeparator* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewItemSeparator* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewItemSeparator* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewItemSeparator* This,
            TrustLevel* trustLevel);
    
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewItemSeparatorVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewItemSeparator
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewItemSeparatorVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewItemSeparator;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewItemSeparator_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewItemSeparatorFactory_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewItemSeparatorFactory_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewItemSeparatorFactoryVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewItemSeparatorFactory* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewItemSeparatorFactory* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewItemSeparatorFactory* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewItemSeparatorFactory* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewItemSeparatorFactory* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewItemSeparatorFactory* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* CreateInstance)(__x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewItemSeparatorFactory* This,
        IInspectable* baseInterface,
        IInspectable** innerInterface,
        __x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewItemSeparator** value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewItemSeparatorFactoryVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewItemSeparatorFactory
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewItemSeparatorFactoryVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewItemSeparatorFactory;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewItemSeparatorFactory_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewItemStatics_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewItemStatics_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewItemStaticsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewItemStatics* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewItemStatics* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewItemStatics* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewItemStatics* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewItemStatics* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewItemStatics* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_IconProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewItemStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_CompactPaneLengthProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewItemStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewItemStaticsVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewItemStatics
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewItemStaticsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewItemStatics;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewItemStatics_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewItemStatics2_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewItemStatics2_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewItemStatics2Vtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewItemStatics2* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewItemStatics2* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewItemStatics2* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewItemStatics2* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewItemStatics2* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewItemStatics2* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_SelectsOnInvokedProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewItemStatics2* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewItemStatics2Vtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewItemStatics2
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewItemStatics2Vtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewItemStatics2;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewItemStatics2_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewList_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewList_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewListVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewList* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewList* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewList* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewList* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewList* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewList* This,
            TrustLevel* trustLevel);
    
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewListVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewList
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewListVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewList;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewList_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewListFactory_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewListFactory_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewListFactoryVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewListFactory* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewListFactory* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewListFactory* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewListFactory* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewListFactory* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewListFactory* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* CreateInstance)(__x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewListFactory* This,
        IInspectable* baseInterface,
        IInspectable** innerInterface,
        __x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewList** value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewListFactoryVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewListFactory
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewListFactoryVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewListFactory;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewListFactory_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewPaneClosingEventArgs_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewPaneClosingEventArgs_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewPaneClosingEventArgsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewPaneClosingEventArgs* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewPaneClosingEventArgs* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewPaneClosingEventArgs* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewPaneClosingEventArgs* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewPaneClosingEventArgs* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewPaneClosingEventArgs* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Cancel)(__x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewPaneClosingEventArgs* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* put_Cancel)(__x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewPaneClosingEventArgs* This,
        boolean value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewPaneClosingEventArgsVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewPaneClosingEventArgs
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewPaneClosingEventArgsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewPaneClosingEventArgs;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewPaneClosingEventArgs_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewSelectionChangedEventArgs_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewSelectionChangedEventArgs_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewSelectionChangedEventArgsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewSelectionChangedEventArgs* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewSelectionChangedEventArgs* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewSelectionChangedEventArgs* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewSelectionChangedEventArgs* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewSelectionChangedEventArgs* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewSelectionChangedEventArgs* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_SelectedItem)(__x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewSelectionChangedEventArgs* This,
        IInspectable** value);
    HRESULT (STDMETHODCALLTYPE* get_IsSettingsSelected)(__x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewSelectionChangedEventArgs* This,
        boolean* value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewSelectionChangedEventArgsVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewSelectionChangedEventArgs
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewSelectionChangedEventArgsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewSelectionChangedEventArgs;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewSelectionChangedEventArgs_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewSelectionChangedEventArgs2_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewSelectionChangedEventArgs2_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewSelectionChangedEventArgs2Vtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewSelectionChangedEventArgs2* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewSelectionChangedEventArgs2* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewSelectionChangedEventArgs2* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewSelectionChangedEventArgs2* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewSelectionChangedEventArgs2* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewSelectionChangedEventArgs2* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_SelectedItemContainer)(__x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewSelectionChangedEventArgs2* This,
        __x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewItemBase** value);
    HRESULT (STDMETHODCALLTYPE* get_RecommendedNavigationTransitionInfo)(__x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewSelectionChangedEventArgs2* This,
        __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CINavigationTransitionInfo** value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewSelectionChangedEventArgs2Vtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewSelectionChangedEventArgs2
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewSelectionChangedEventArgs2Vtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewSelectionChangedEventArgs2;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewSelectionChangedEventArgs2_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewStatics_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewStatics_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewStaticsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewStatics* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewStatics* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewStatics* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewStatics* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewStatics* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewStatics* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_IsPaneOpenProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_CompactModeThresholdWidthProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_ExpandedModeThresholdWidthProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_PaneFooterProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_HeaderProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_HeaderTemplateProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_DisplayModeProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_IsSettingsVisibleProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_IsPaneToggleButtonVisibleProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_AlwaysShowHeaderProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_CompactPaneLengthProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_OpenPaneLengthProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_PaneToggleButtonStyleProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_MenuItemsProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_MenuItemsSourceProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_SelectedItemProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_SettingsItemProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_AutoSuggestBoxProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_MenuItemTemplateProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_MenuItemTemplateSelectorProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_MenuItemContainerStyleProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_MenuItemContainerStyleSelectorProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewStaticsVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewStatics
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewStaticsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewStatics;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewStatics_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewStatics2_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewStatics2_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewStatics2Vtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewStatics2* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewStatics2* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewStatics2* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewStatics2* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewStatics2* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewStatics2* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_IsBackButtonVisibleProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewStatics2* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_IsBackEnabledProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewStatics2* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_PaneTitleProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewStatics2* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewStatics2Vtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewStatics2
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewStatics2Vtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewStatics2;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewStatics2_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewStatics3_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewStatics3_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewStatics3Vtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewStatics3* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewStatics3* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewStatics3* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewStatics3* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewStatics3* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewStatics3* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_PaneDisplayModeProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewStatics3* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_PaneHeaderProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewStatics3* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_PaneCustomContentProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewStatics3* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_ContentOverlayProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewStatics3* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_IsPaneVisibleProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewStatics3* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_SelectionFollowsFocusProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewStatics3* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_TemplateSettingsProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewStatics3* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_ShoulderNavigationEnabledProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewStatics3* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_OverflowLabelModeProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewStatics3* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewStatics3Vtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewStatics3
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewStatics3Vtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewStatics3;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewStatics3_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewTemplateSettings_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewTemplateSettings_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewTemplateSettingsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewTemplateSettings* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewTemplateSettings* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewTemplateSettings* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewTemplateSettings* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewTemplateSettings* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewTemplateSettings* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_TopPadding)(__x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewTemplateSettings* This,
        DOUBLE* value);
    HRESULT (STDMETHODCALLTYPE* get_OverflowButtonVisibility)(__x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewTemplateSettings* This,
        enum __x_ABI_CWindows_CUI_CXaml_CVisibility* value);
    HRESULT (STDMETHODCALLTYPE* get_PaneToggleButtonVisibility)(__x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewTemplateSettings* This,
        enum __x_ABI_CWindows_CUI_CXaml_CVisibility* value);
    HRESULT (STDMETHODCALLTYPE* get_BackButtonVisibility)(__x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewTemplateSettings* This,
        enum __x_ABI_CWindows_CUI_CXaml_CVisibility* value);
    HRESULT (STDMETHODCALLTYPE* get_TopPaneVisibility)(__x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewTemplateSettings* This,
        enum __x_ABI_CWindows_CUI_CXaml_CVisibility* value);
    HRESULT (STDMETHODCALLTYPE* get_LeftPaneVisibility)(__x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewTemplateSettings* This,
        enum __x_ABI_CWindows_CUI_CXaml_CVisibility* value);
    HRESULT (STDMETHODCALLTYPE* get_SingleSelectionFollowsFocus)(__x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewTemplateSettings* This,
        boolean* value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewTemplateSettingsVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewTemplateSettings
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewTemplateSettingsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewTemplateSettings;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewTemplateSettings_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewTemplateSettingsFactory_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewTemplateSettingsFactory_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewTemplateSettingsFactoryVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewTemplateSettingsFactory* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewTemplateSettingsFactory* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewTemplateSettingsFactory* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewTemplateSettingsFactory* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewTemplateSettingsFactory* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewTemplateSettingsFactory* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* CreateInstance)(__x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewTemplateSettingsFactory* This,
        IInspectable* baseInterface,
        IInspectable** innerInterface,
        __x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewTemplateSettings** value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewTemplateSettingsFactoryVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewTemplateSettingsFactory
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewTemplateSettingsFactoryVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewTemplateSettingsFactory;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewTemplateSettingsFactory_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewTemplateSettingsStatics_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewTemplateSettingsStatics_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewTemplateSettingsStaticsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewTemplateSettingsStatics* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewTemplateSettingsStatics* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewTemplateSettingsStatics* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewTemplateSettingsStatics* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewTemplateSettingsStatics* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewTemplateSettingsStatics* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_TopPaddingProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewTemplateSettingsStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_OverflowButtonVisibilityProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewTemplateSettingsStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_PaneToggleButtonVisibilityProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewTemplateSettingsStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_BackButtonVisibilityProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewTemplateSettingsStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_TopPaneVisibilityProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewTemplateSettingsStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_LeftPaneVisibilityProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewTemplateSettingsStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_SingleSelectionFollowsFocusProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewTemplateSettingsStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewTemplateSettingsStaticsVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewTemplateSettingsStatics
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewTemplateSettingsStaticsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewTemplateSettingsStatics;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CINavigationViewTemplateSettingsStatics_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CINotifyEventArgs_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CControls_CINotifyEventArgs_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CINotifyEventArgsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CControls_CINotifyEventArgs* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CControls_CINotifyEventArgs* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CControls_CINotifyEventArgs* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CControls_CINotifyEventArgs* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CControls_CINotifyEventArgs* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CControls_CINotifyEventArgs* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Value)(__x_ABI_CWindows_CUI_CXaml_CControls_CINotifyEventArgs* This,
        HSTRING* value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CINotifyEventArgsVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CINotifyEventArgs
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CINotifyEventArgsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CINotifyEventArgs;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CINotifyEventArgs_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CINotifyEventArgs2_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CControls_CINotifyEventArgs2_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CINotifyEventArgs2Vtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CControls_CINotifyEventArgs2* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CControls_CINotifyEventArgs2* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CControls_CINotifyEventArgs2* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CControls_CINotifyEventArgs2* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CControls_CINotifyEventArgs2* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CControls_CINotifyEventArgs2* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_CallingUri)(__x_ABI_CWindows_CUI_CXaml_CControls_CINotifyEventArgs2* This,
        __x_ABI_CWindows_CFoundation_CIUriRuntimeClass** value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CINotifyEventArgs2Vtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CINotifyEventArgs2
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CINotifyEventArgs2Vtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CINotifyEventArgs2;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CINotifyEventArgs2_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIPage_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CControls_CIPage_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIPageVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CControls_CIPage* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CControls_CIPage* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CControls_CIPage* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CControls_CIPage* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CControls_CIPage* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CControls_CIPage* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Frame)(__x_ABI_CWindows_CUI_CXaml_CControls_CIPage* This,
        __x_ABI_CWindows_CUI_CXaml_CControls_CIFrame** value);
    HRESULT (STDMETHODCALLTYPE* get_NavigationCacheMode)(__x_ABI_CWindows_CUI_CXaml_CControls_CIPage* This,
        enum __x_ABI_CWindows_CUI_CXaml_CNavigation_CNavigationCacheMode* value);
    HRESULT (STDMETHODCALLTYPE* put_NavigationCacheMode)(__x_ABI_CWindows_CUI_CXaml_CControls_CIPage* This,
        enum __x_ABI_CWindows_CUI_CXaml_CNavigation_CNavigationCacheMode value);
    HRESULT (STDMETHODCALLTYPE* get_TopAppBar)(__x_ABI_CWindows_CUI_CXaml_CControls_CIPage* This,
        __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBar** value);
    HRESULT (STDMETHODCALLTYPE* put_TopAppBar)(__x_ABI_CWindows_CUI_CXaml_CControls_CIPage* This,
        __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBar* value);
    HRESULT (STDMETHODCALLTYPE* get_BottomAppBar)(__x_ABI_CWindows_CUI_CXaml_CControls_CIPage* This,
        __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBar** value);
    HRESULT (STDMETHODCALLTYPE* put_BottomAppBar)(__x_ABI_CWindows_CUI_CXaml_CControls_CIPage* This,
        __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBar* value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CIPageVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CIPage
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIPageVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIPage;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIPage_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIPageFactory_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CControls_CIPageFactory_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIPageFactoryVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CControls_CIPageFactory* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CControls_CIPageFactory* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CControls_CIPageFactory* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CControls_CIPageFactory* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CControls_CIPageFactory* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CControls_CIPageFactory* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* CreateInstance)(__x_ABI_CWindows_CUI_CXaml_CControls_CIPageFactory* This,
        IInspectable* baseInterface,
        IInspectable** innerInterface,
        __x_ABI_CWindows_CUI_CXaml_CControls_CIPage** value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CIPageFactoryVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CIPageFactory
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIPageFactoryVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIPageFactory;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIPageFactory_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIPageOverrides_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CControls_CIPageOverrides_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIPageOverridesVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CControls_CIPageOverrides* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CControls_CIPageOverrides* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CControls_CIPageOverrides* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CControls_CIPageOverrides* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CControls_CIPageOverrides* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CControls_CIPageOverrides* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* OnNavigatedFrom)(__x_ABI_CWindows_CUI_CXaml_CControls_CIPageOverrides* This,
        __x_ABI_CWindows_CUI_CXaml_CNavigation_CINavigationEventArgs* e);
    HRESULT (STDMETHODCALLTYPE* OnNavigatedTo)(__x_ABI_CWindows_CUI_CXaml_CControls_CIPageOverrides* This,
        __x_ABI_CWindows_CUI_CXaml_CNavigation_CINavigationEventArgs* e);
    HRESULT (STDMETHODCALLTYPE* OnNavigatingFrom)(__x_ABI_CWindows_CUI_CXaml_CControls_CIPageOverrides* This,
        __x_ABI_CWindows_CUI_CXaml_CNavigation_CINavigatingCancelEventArgs* e);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CIPageOverridesVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CIPageOverrides
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIPageOverridesVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIPageOverrides;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIPageOverrides_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIPageStatics_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CControls_CIPageStatics_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIPageStaticsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CControls_CIPageStatics* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CControls_CIPageStatics* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CControls_CIPageStatics* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CControls_CIPageStatics* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CControls_CIPageStatics* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CControls_CIPageStatics* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_FrameProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CIPageStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_TopAppBarProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CIPageStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_BottomAppBarProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CIPageStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CIPageStaticsVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CIPageStatics
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIPageStaticsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIPageStatics;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIPageStatics_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIPanel_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CControls_CIPanel_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIPanelVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CControls_CIPanel* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CControls_CIPanel* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CControls_CIPanel* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CControls_CIPanel* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CControls_CIPanel* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CControls_CIPanel* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Children)(__x_ABI_CWindows_CUI_CXaml_CControls_CIPanel* This,
        __x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CXaml__CUIElement** value);
    HRESULT (STDMETHODCALLTYPE* get_Background)(__x_ABI_CWindows_CUI_CXaml_CControls_CIPanel* This,
        __x_ABI_CWindows_CUI_CXaml_CMedia_CIBrush** value);
    HRESULT (STDMETHODCALLTYPE* put_Background)(__x_ABI_CWindows_CUI_CXaml_CControls_CIPanel* This,
        __x_ABI_CWindows_CUI_CXaml_CMedia_CIBrush* value);
    HRESULT (STDMETHODCALLTYPE* get_IsItemsHost)(__x_ABI_CWindows_CUI_CXaml_CControls_CIPanel* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* get_ChildrenTransitions)(__x_ABI_CWindows_CUI_CXaml_CControls_CIPanel* This,
        __x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CXaml__CMedia__CAnimation__CTransition** value);
    HRESULT (STDMETHODCALLTYPE* put_ChildrenTransitions)(__x_ABI_CWindows_CUI_CXaml_CControls_CIPanel* This,
        __x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CXaml__CMedia__CAnimation__CTransition* value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CIPanelVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CIPanel
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIPanelVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIPanel;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIPanel_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIPanel2_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CControls_CIPanel2_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIPanel2Vtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CControls_CIPanel2* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CControls_CIPanel2* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CControls_CIPanel2* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CControls_CIPanel2* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CControls_CIPanel2* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CControls_CIPanel2* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_BackgroundTransition)(__x_ABI_CWindows_CUI_CXaml_CControls_CIPanel2* This,
        __x_ABI_CWindows_CUI_CXaml_CIBrushTransition** value);
    HRESULT (STDMETHODCALLTYPE* put_BackgroundTransition)(__x_ABI_CWindows_CUI_CXaml_CControls_CIPanel2* This,
        __x_ABI_CWindows_CUI_CXaml_CIBrushTransition* value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CIPanel2Vtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CIPanel2
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIPanel2Vtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIPanel2;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIPanel2_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIPanelFactory_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CControls_CIPanelFactory_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIPanelFactoryVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CControls_CIPanelFactory* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CControls_CIPanelFactory* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CControls_CIPanelFactory* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CControls_CIPanelFactory* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CControls_CIPanelFactory* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CControls_CIPanelFactory* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* CreateInstance)(__x_ABI_CWindows_CUI_CXaml_CControls_CIPanelFactory* This,
        IInspectable* baseInterface,
        IInspectable** innerInterface,
        __x_ABI_CWindows_CUI_CXaml_CControls_CIPanel** value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CIPanelFactoryVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CIPanelFactory
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIPanelFactoryVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIPanelFactory;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIPanelFactory_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIPanelStatics_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CControls_CIPanelStatics_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIPanelStaticsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CControls_CIPanelStatics* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CControls_CIPanelStatics* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CControls_CIPanelStatics* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CControls_CIPanelStatics* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CControls_CIPanelStatics* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CControls_CIPanelStatics* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_BackgroundProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CIPanelStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_IsItemsHostProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CIPanelStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_ChildrenTransitionsProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CIPanelStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CIPanelStaticsVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CIPanelStatics
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIPanelStaticsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIPanelStatics;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIPanelStatics_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIParallaxView_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CControls_CIParallaxView_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIParallaxViewVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CControls_CIParallaxView* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CControls_CIParallaxView* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CControls_CIParallaxView* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CControls_CIParallaxView* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CControls_CIParallaxView* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CControls_CIParallaxView* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Child)(__x_ABI_CWindows_CUI_CXaml_CControls_CIParallaxView* This,
        __x_ABI_CWindows_CUI_CXaml_CIUIElement** value);
    HRESULT (STDMETHODCALLTYPE* put_Child)(__x_ABI_CWindows_CUI_CXaml_CControls_CIParallaxView* This,
        __x_ABI_CWindows_CUI_CXaml_CIUIElement* value);
    HRESULT (STDMETHODCALLTYPE* get_HorizontalShift)(__x_ABI_CWindows_CUI_CXaml_CControls_CIParallaxView* This,
        DOUBLE* value);
    HRESULT (STDMETHODCALLTYPE* put_HorizontalShift)(__x_ABI_CWindows_CUI_CXaml_CControls_CIParallaxView* This,
        DOUBLE value);
    HRESULT (STDMETHODCALLTYPE* get_HorizontalSourceEndOffset)(__x_ABI_CWindows_CUI_CXaml_CControls_CIParallaxView* This,
        DOUBLE* value);
    HRESULT (STDMETHODCALLTYPE* put_HorizontalSourceEndOffset)(__x_ABI_CWindows_CUI_CXaml_CControls_CIParallaxView* This,
        DOUBLE value);
    HRESULT (STDMETHODCALLTYPE* get_HorizontalSourceOffsetKind)(__x_ABI_CWindows_CUI_CXaml_CControls_CIParallaxView* This,
        enum __x_ABI_CWindows_CUI_CXaml_CControls_CParallaxSourceOffsetKind* value);
    HRESULT (STDMETHODCALLTYPE* put_HorizontalSourceOffsetKind)(__x_ABI_CWindows_CUI_CXaml_CControls_CIParallaxView* This,
        enum __x_ABI_CWindows_CUI_CXaml_CControls_CParallaxSourceOffsetKind value);
    HRESULT (STDMETHODCALLTYPE* get_HorizontalSourceStartOffset)(__x_ABI_CWindows_CUI_CXaml_CControls_CIParallaxView* This,
        DOUBLE* value);
    HRESULT (STDMETHODCALLTYPE* put_HorizontalSourceStartOffset)(__x_ABI_CWindows_CUI_CXaml_CControls_CIParallaxView* This,
        DOUBLE value);
    HRESULT (STDMETHODCALLTYPE* get_IsHorizontalShiftClamped)(__x_ABI_CWindows_CUI_CXaml_CControls_CIParallaxView* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* put_IsHorizontalShiftClamped)(__x_ABI_CWindows_CUI_CXaml_CControls_CIParallaxView* This,
        boolean value);
    HRESULT (STDMETHODCALLTYPE* get_IsVerticalShiftClamped)(__x_ABI_CWindows_CUI_CXaml_CControls_CIParallaxView* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* put_IsVerticalShiftClamped)(__x_ABI_CWindows_CUI_CXaml_CControls_CIParallaxView* This,
        boolean value);
    HRESULT (STDMETHODCALLTYPE* get_MaxHorizontalShiftRatio)(__x_ABI_CWindows_CUI_CXaml_CControls_CIParallaxView* This,
        DOUBLE* value);
    HRESULT (STDMETHODCALLTYPE* put_MaxHorizontalShiftRatio)(__x_ABI_CWindows_CUI_CXaml_CControls_CIParallaxView* This,
        DOUBLE value);
    HRESULT (STDMETHODCALLTYPE* get_MaxVerticalShiftRatio)(__x_ABI_CWindows_CUI_CXaml_CControls_CIParallaxView* This,
        DOUBLE* value);
    HRESULT (STDMETHODCALLTYPE* put_MaxVerticalShiftRatio)(__x_ABI_CWindows_CUI_CXaml_CControls_CIParallaxView* This,
        DOUBLE value);
    HRESULT (STDMETHODCALLTYPE* get_Source)(__x_ABI_CWindows_CUI_CXaml_CControls_CIParallaxView* This,
        __x_ABI_CWindows_CUI_CXaml_CIUIElement** value);
    HRESULT (STDMETHODCALLTYPE* put_Source)(__x_ABI_CWindows_CUI_CXaml_CControls_CIParallaxView* This,
        __x_ABI_CWindows_CUI_CXaml_CIUIElement* value);
    HRESULT (STDMETHODCALLTYPE* get_VerticalShift)(__x_ABI_CWindows_CUI_CXaml_CControls_CIParallaxView* This,
        DOUBLE* value);
    HRESULT (STDMETHODCALLTYPE* put_VerticalShift)(__x_ABI_CWindows_CUI_CXaml_CControls_CIParallaxView* This,
        DOUBLE value);
    HRESULT (STDMETHODCALLTYPE* get_VerticalSourceEndOffset)(__x_ABI_CWindows_CUI_CXaml_CControls_CIParallaxView* This,
        DOUBLE* value);
    HRESULT (STDMETHODCALLTYPE* put_VerticalSourceEndOffset)(__x_ABI_CWindows_CUI_CXaml_CControls_CIParallaxView* This,
        DOUBLE value);
    HRESULT (STDMETHODCALLTYPE* get_VerticalSourceOffsetKind)(__x_ABI_CWindows_CUI_CXaml_CControls_CIParallaxView* This,
        enum __x_ABI_CWindows_CUI_CXaml_CControls_CParallaxSourceOffsetKind* value);
    HRESULT (STDMETHODCALLTYPE* put_VerticalSourceOffsetKind)(__x_ABI_CWindows_CUI_CXaml_CControls_CIParallaxView* This,
        enum __x_ABI_CWindows_CUI_CXaml_CControls_CParallaxSourceOffsetKind value);
    HRESULT (STDMETHODCALLTYPE* get_VerticalSourceStartOffset)(__x_ABI_CWindows_CUI_CXaml_CControls_CIParallaxView* This,
        DOUBLE* value);
    HRESULT (STDMETHODCALLTYPE* put_VerticalSourceStartOffset)(__x_ABI_CWindows_CUI_CXaml_CControls_CIParallaxView* This,
        DOUBLE value);
    HRESULT (STDMETHODCALLTYPE* RefreshAutomaticHorizontalOffsets)(__x_ABI_CWindows_CUI_CXaml_CControls_CIParallaxView* This);
    HRESULT (STDMETHODCALLTYPE* RefreshAutomaticVerticalOffsets)(__x_ABI_CWindows_CUI_CXaml_CControls_CIParallaxView* This);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CIParallaxViewVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CIParallaxView
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIParallaxViewVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIParallaxView;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIParallaxView_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIParallaxViewFactory_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CControls_CIParallaxViewFactory_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIParallaxViewFactoryVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CControls_CIParallaxViewFactory* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CControls_CIParallaxViewFactory* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CControls_CIParallaxViewFactory* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CControls_CIParallaxViewFactory* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CControls_CIParallaxViewFactory* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CControls_CIParallaxViewFactory* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* CreateInstance)(__x_ABI_CWindows_CUI_CXaml_CControls_CIParallaxViewFactory* This,
        IInspectable* baseInterface,
        IInspectable** innerInterface,
        __x_ABI_CWindows_CUI_CXaml_CControls_CIParallaxView** value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CIParallaxViewFactoryVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CIParallaxViewFactory
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIParallaxViewFactoryVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIParallaxViewFactory;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIParallaxViewFactory_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIParallaxViewStatics_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CControls_CIParallaxViewStatics_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIParallaxViewStaticsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CControls_CIParallaxViewStatics* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CControls_CIParallaxViewStatics* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CControls_CIParallaxViewStatics* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CControls_CIParallaxViewStatics* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CControls_CIParallaxViewStatics* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CControls_CIParallaxViewStatics* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_ChildProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CIParallaxViewStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_HorizontalSourceEndOffsetProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CIParallaxViewStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_HorizontalSourceOffsetKindProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CIParallaxViewStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_HorizontalSourceStartOffsetProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CIParallaxViewStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_MaxHorizontalShiftRatioProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CIParallaxViewStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_HorizontalShiftProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CIParallaxViewStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_IsHorizontalShiftClampedProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CIParallaxViewStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_IsVerticalShiftClampedProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CIParallaxViewStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_SourceProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CIParallaxViewStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_VerticalSourceEndOffsetProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CIParallaxViewStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_VerticalSourceOffsetKindProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CIParallaxViewStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_VerticalSourceStartOffsetProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CIParallaxViewStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_MaxVerticalShiftRatioProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CIParallaxViewStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_VerticalShiftProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CIParallaxViewStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CIParallaxViewStaticsVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CIParallaxViewStatics
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIParallaxViewStaticsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIParallaxViewStatics;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIParallaxViewStatics_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIPasswordBox_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CControls_CIPasswordBox_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIPasswordBoxVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CControls_CIPasswordBox* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CControls_CIPasswordBox* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CControls_CIPasswordBox* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CControls_CIPasswordBox* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CControls_CIPasswordBox* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CControls_CIPasswordBox* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Password)(__x_ABI_CWindows_CUI_CXaml_CControls_CIPasswordBox* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* put_Password)(__x_ABI_CWindows_CUI_CXaml_CControls_CIPasswordBox* This,
        HSTRING value);
    HRESULT (STDMETHODCALLTYPE* get_PasswordChar)(__x_ABI_CWindows_CUI_CXaml_CControls_CIPasswordBox* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* put_PasswordChar)(__x_ABI_CWindows_CUI_CXaml_CControls_CIPasswordBox* This,
        HSTRING value);
    HRESULT (STDMETHODCALLTYPE* get_IsPasswordRevealButtonEnabled)(__x_ABI_CWindows_CUI_CXaml_CControls_CIPasswordBox* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* put_IsPasswordRevealButtonEnabled)(__x_ABI_CWindows_CUI_CXaml_CControls_CIPasswordBox* This,
        boolean value);
    HRESULT (STDMETHODCALLTYPE* get_MaxLength)(__x_ABI_CWindows_CUI_CXaml_CControls_CIPasswordBox* This,
        INT32* value);
    HRESULT (STDMETHODCALLTYPE* put_MaxLength)(__x_ABI_CWindows_CUI_CXaml_CControls_CIPasswordBox* This,
        INT32 value);
    HRESULT (STDMETHODCALLTYPE* add_PasswordChanged)(__x_ABI_CWindows_CUI_CXaml_CControls_CIPasswordBox* This,
        __x_ABI_CWindows_CUI_CXaml_CIRoutedEventHandler* handler,
        EventRegistrationToken* token);
    HRESULT (STDMETHODCALLTYPE* remove_PasswordChanged)(__x_ABI_CWindows_CUI_CXaml_CControls_CIPasswordBox* This,
        EventRegistrationToken token);
    HRESULT (STDMETHODCALLTYPE* add_ContextMenuOpening)(__x_ABI_CWindows_CUI_CXaml_CControls_CIPasswordBox* This,
        __x_ABI_CWindows_CUI_CXaml_CControls_CIContextMenuOpeningEventHandler* handler,
        EventRegistrationToken* token);
    HRESULT (STDMETHODCALLTYPE* remove_ContextMenuOpening)(__x_ABI_CWindows_CUI_CXaml_CControls_CIPasswordBox* This,
        EventRegistrationToken token);
    HRESULT (STDMETHODCALLTYPE* SelectAll)(__x_ABI_CWindows_CUI_CXaml_CControls_CIPasswordBox* This);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CIPasswordBoxVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CIPasswordBox
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIPasswordBoxVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIPasswordBox;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIPasswordBox_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIPasswordBox2_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CControls_CIPasswordBox2_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIPasswordBox2Vtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CControls_CIPasswordBox2* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CControls_CIPasswordBox2* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CControls_CIPasswordBox2* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CControls_CIPasswordBox2* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CControls_CIPasswordBox2* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CControls_CIPasswordBox2* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Header)(__x_ABI_CWindows_CUI_CXaml_CControls_CIPasswordBox2* This,
        IInspectable** value);
    HRESULT (STDMETHODCALLTYPE* put_Header)(__x_ABI_CWindows_CUI_CXaml_CControls_CIPasswordBox2* This,
        IInspectable* value);
    HRESULT (STDMETHODCALLTYPE* get_HeaderTemplate)(__x_ABI_CWindows_CUI_CXaml_CControls_CIPasswordBox2* This,
        __x_ABI_CWindows_CUI_CXaml_CIDataTemplate** value);
    HRESULT (STDMETHODCALLTYPE* put_HeaderTemplate)(__x_ABI_CWindows_CUI_CXaml_CControls_CIPasswordBox2* This,
        __x_ABI_CWindows_CUI_CXaml_CIDataTemplate* value);
    HRESULT (STDMETHODCALLTYPE* get_PlaceholderText)(__x_ABI_CWindows_CUI_CXaml_CControls_CIPasswordBox2* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* put_PlaceholderText)(__x_ABI_CWindows_CUI_CXaml_CControls_CIPasswordBox2* This,
        HSTRING value);
    HRESULT (STDMETHODCALLTYPE* get_SelectionHighlightColor)(__x_ABI_CWindows_CUI_CXaml_CControls_CIPasswordBox2* This,
        __x_ABI_CWindows_CUI_CXaml_CMedia_CISolidColorBrush** value);
    HRESULT (STDMETHODCALLTYPE* put_SelectionHighlightColor)(__x_ABI_CWindows_CUI_CXaml_CControls_CIPasswordBox2* This,
        __x_ABI_CWindows_CUI_CXaml_CMedia_CISolidColorBrush* value);
    HRESULT (STDMETHODCALLTYPE* get_PreventKeyboardDisplayOnProgrammaticFocus)(__x_ABI_CWindows_CUI_CXaml_CControls_CIPasswordBox2* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* put_PreventKeyboardDisplayOnProgrammaticFocus)(__x_ABI_CWindows_CUI_CXaml_CControls_CIPasswordBox2* This,
        boolean value);
    HRESULT (STDMETHODCALLTYPE* add_Paste)(__x_ABI_CWindows_CUI_CXaml_CControls_CIPasswordBox2* This,
        __x_ABI_CWindows_CUI_CXaml_CControls_CITextControlPasteEventHandler* handler,
        EventRegistrationToken* token);
    HRESULT (STDMETHODCALLTYPE* remove_Paste)(__x_ABI_CWindows_CUI_CXaml_CControls_CIPasswordBox2* This,
        EventRegistrationToken token);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CIPasswordBox2Vtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CIPasswordBox2
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIPasswordBox2Vtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIPasswordBox2;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIPasswordBox2_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIPasswordBox3_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CControls_CIPasswordBox3_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIPasswordBox3Vtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CControls_CIPasswordBox3* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CControls_CIPasswordBox3* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CControls_CIPasswordBox3* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CControls_CIPasswordBox3* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CControls_CIPasswordBox3* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CControls_CIPasswordBox3* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_PasswordRevealMode)(__x_ABI_CWindows_CUI_CXaml_CControls_CIPasswordBox3* This,
        enum __x_ABI_CWindows_CUI_CXaml_CControls_CPasswordRevealMode* value);
    HRESULT (STDMETHODCALLTYPE* put_PasswordRevealMode)(__x_ABI_CWindows_CUI_CXaml_CControls_CIPasswordBox3* This,
        enum __x_ABI_CWindows_CUI_CXaml_CControls_CPasswordRevealMode value);
    HRESULT (STDMETHODCALLTYPE* get_TextReadingOrder)(__x_ABI_CWindows_CUI_CXaml_CControls_CIPasswordBox3* This,
        enum __x_ABI_CWindows_CUI_CXaml_CTextReadingOrder* value);
    HRESULT (STDMETHODCALLTYPE* put_TextReadingOrder)(__x_ABI_CWindows_CUI_CXaml_CControls_CIPasswordBox3* This,
        enum __x_ABI_CWindows_CUI_CXaml_CTextReadingOrder value);
    HRESULT (STDMETHODCALLTYPE* get_InputScope)(__x_ABI_CWindows_CUI_CXaml_CControls_CIPasswordBox3* This,
        __x_ABI_CWindows_CUI_CXaml_CInput_CIInputScope** value);
    HRESULT (STDMETHODCALLTYPE* put_InputScope)(__x_ABI_CWindows_CUI_CXaml_CControls_CIPasswordBox3* This,
        __x_ABI_CWindows_CUI_CXaml_CInput_CIInputScope* value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CIPasswordBox3Vtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CIPasswordBox3
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIPasswordBox3Vtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIPasswordBox3;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIPasswordBox3_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIPasswordBox4_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CControls_CIPasswordBox4_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIPasswordBox4Vtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CControls_CIPasswordBox4* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CControls_CIPasswordBox4* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CControls_CIPasswordBox4* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CControls_CIPasswordBox4* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CControls_CIPasswordBox4* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CControls_CIPasswordBox4* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* add_PasswordChanging)(__x_ABI_CWindows_CUI_CXaml_CControls_CIPasswordBox4* This,
        __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CPasswordBox___x_ABI_CWindows__CUI__CXaml__CControls__CPasswordBoxPasswordChangingEventArgs* handler,
        EventRegistrationToken* token);
    HRESULT (STDMETHODCALLTYPE* remove_PasswordChanging)(__x_ABI_CWindows_CUI_CXaml_CControls_CIPasswordBox4* This,
        EventRegistrationToken token);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CIPasswordBox4Vtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CIPasswordBox4
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIPasswordBox4Vtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIPasswordBox4;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIPasswordBox4_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIPasswordBox5_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CControls_CIPasswordBox5_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIPasswordBox5Vtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CControls_CIPasswordBox5* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CControls_CIPasswordBox5* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CControls_CIPasswordBox5* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CControls_CIPasswordBox5* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CControls_CIPasswordBox5* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CControls_CIPasswordBox5* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_CanPasteClipboardContent)(__x_ABI_CWindows_CUI_CXaml_CControls_CIPasswordBox5* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* get_SelectionFlyout)(__x_ABI_CWindows_CUI_CXaml_CControls_CIPasswordBox5* This,
        __x_ABI_CWindows_CUI_CXaml_CControls_CPrimitives_CIFlyoutBase** value);
    HRESULT (STDMETHODCALLTYPE* put_SelectionFlyout)(__x_ABI_CWindows_CUI_CXaml_CControls_CIPasswordBox5* This,
        __x_ABI_CWindows_CUI_CXaml_CControls_CPrimitives_CIFlyoutBase* value);
    HRESULT (STDMETHODCALLTYPE* get_Description)(__x_ABI_CWindows_CUI_CXaml_CControls_CIPasswordBox5* This,
        IInspectable** value);
    HRESULT (STDMETHODCALLTYPE* put_Description)(__x_ABI_CWindows_CUI_CXaml_CControls_CIPasswordBox5* This,
        IInspectable* value);
    HRESULT (STDMETHODCALLTYPE* PasteFromClipboard)(__x_ABI_CWindows_CUI_CXaml_CControls_CIPasswordBox5* This);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CIPasswordBox5Vtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CIPasswordBox5
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIPasswordBox5Vtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIPasswordBox5;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIPasswordBox5_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIPasswordBoxPasswordChangingEventArgs_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CControls_CIPasswordBoxPasswordChangingEventArgs_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIPasswordBoxPasswordChangingEventArgsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CControls_CIPasswordBoxPasswordChangingEventArgs* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CControls_CIPasswordBoxPasswordChangingEventArgs* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CControls_CIPasswordBoxPasswordChangingEventArgs* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CControls_CIPasswordBoxPasswordChangingEventArgs* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CControls_CIPasswordBoxPasswordChangingEventArgs* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CControls_CIPasswordBoxPasswordChangingEventArgs* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_IsContentChanging)(__x_ABI_CWindows_CUI_CXaml_CControls_CIPasswordBoxPasswordChangingEventArgs* This,
        boolean* value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CIPasswordBoxPasswordChangingEventArgsVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CIPasswordBoxPasswordChangingEventArgs
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIPasswordBoxPasswordChangingEventArgsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIPasswordBoxPasswordChangingEventArgs;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIPasswordBoxPasswordChangingEventArgs_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIPasswordBoxStatics_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CControls_CIPasswordBoxStatics_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIPasswordBoxStaticsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CControls_CIPasswordBoxStatics* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CControls_CIPasswordBoxStatics* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CControls_CIPasswordBoxStatics* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CControls_CIPasswordBoxStatics* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CControls_CIPasswordBoxStatics* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CControls_CIPasswordBoxStatics* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_PasswordProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CIPasswordBoxStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_PasswordCharProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CIPasswordBoxStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_IsPasswordRevealButtonEnabledProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CIPasswordBoxStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_MaxLengthProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CIPasswordBoxStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CIPasswordBoxStaticsVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CIPasswordBoxStatics
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIPasswordBoxStaticsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIPasswordBoxStatics;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIPasswordBoxStatics_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIPasswordBoxStatics2_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CControls_CIPasswordBoxStatics2_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIPasswordBoxStatics2Vtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CControls_CIPasswordBoxStatics2* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CControls_CIPasswordBoxStatics2* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CControls_CIPasswordBoxStatics2* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CControls_CIPasswordBoxStatics2* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CControls_CIPasswordBoxStatics2* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CControls_CIPasswordBoxStatics2* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_HeaderProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CIPasswordBoxStatics2* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_HeaderTemplateProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CIPasswordBoxStatics2* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_PlaceholderTextProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CIPasswordBoxStatics2* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_SelectionHighlightColorProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CIPasswordBoxStatics2* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_PreventKeyboardDisplayOnProgrammaticFocusProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CIPasswordBoxStatics2* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CIPasswordBoxStatics2Vtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CIPasswordBoxStatics2
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIPasswordBoxStatics2Vtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIPasswordBoxStatics2;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIPasswordBoxStatics2_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIPasswordBoxStatics3_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CControls_CIPasswordBoxStatics3_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIPasswordBoxStatics3Vtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CControls_CIPasswordBoxStatics3* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CControls_CIPasswordBoxStatics3* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CControls_CIPasswordBoxStatics3* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CControls_CIPasswordBoxStatics3* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CControls_CIPasswordBoxStatics3* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CControls_CIPasswordBoxStatics3* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_PasswordRevealModeProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CIPasswordBoxStatics3* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_TextReadingOrderProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CIPasswordBoxStatics3* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_InputScopeProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CIPasswordBoxStatics3* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CIPasswordBoxStatics3Vtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CIPasswordBoxStatics3
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIPasswordBoxStatics3Vtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIPasswordBoxStatics3;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIPasswordBoxStatics3_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIPasswordBoxStatics5_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CControls_CIPasswordBoxStatics5_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIPasswordBoxStatics5Vtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CControls_CIPasswordBoxStatics5* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CControls_CIPasswordBoxStatics5* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CControls_CIPasswordBoxStatics5* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CControls_CIPasswordBoxStatics5* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CControls_CIPasswordBoxStatics5* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CControls_CIPasswordBoxStatics5* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_CanPasteClipboardContentProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CIPasswordBoxStatics5* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_SelectionFlyoutProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CIPasswordBoxStatics5* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_DescriptionProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CIPasswordBoxStatics5* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CIPasswordBoxStatics5Vtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CIPasswordBoxStatics5
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIPasswordBoxStatics5Vtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIPasswordBoxStatics5;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIPasswordBoxStatics5_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIPathIcon_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CControls_CIPathIcon_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIPathIconVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CControls_CIPathIcon* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CControls_CIPathIcon* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CControls_CIPathIcon* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CControls_CIPathIcon* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CControls_CIPathIcon* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CControls_CIPathIcon* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Data)(__x_ABI_CWindows_CUI_CXaml_CControls_CIPathIcon* This,
        __x_ABI_CWindows_CUI_CXaml_CMedia_CIGeometry** value);
    HRESULT (STDMETHODCALLTYPE* put_Data)(__x_ABI_CWindows_CUI_CXaml_CControls_CIPathIcon* This,
        __x_ABI_CWindows_CUI_CXaml_CMedia_CIGeometry* value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CIPathIconVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CIPathIcon
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIPathIconVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIPathIcon;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIPathIcon_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIPathIconFactory_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CControls_CIPathIconFactory_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIPathIconFactoryVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CControls_CIPathIconFactory* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CControls_CIPathIconFactory* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CControls_CIPathIconFactory* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CControls_CIPathIconFactory* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CControls_CIPathIconFactory* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CControls_CIPathIconFactory* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* CreateInstance)(__x_ABI_CWindows_CUI_CXaml_CControls_CIPathIconFactory* This,
        IInspectable* baseInterface,
        IInspectable** innerInterface,
        __x_ABI_CWindows_CUI_CXaml_CControls_CIPathIcon** value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CIPathIconFactoryVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CIPathIconFactory
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIPathIconFactoryVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIPathIconFactory;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIPathIconFactory_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIPathIconSource_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CControls_CIPathIconSource_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIPathIconSourceVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CControls_CIPathIconSource* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CControls_CIPathIconSource* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CControls_CIPathIconSource* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CControls_CIPathIconSource* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CControls_CIPathIconSource* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CControls_CIPathIconSource* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Data)(__x_ABI_CWindows_CUI_CXaml_CControls_CIPathIconSource* This,
        __x_ABI_CWindows_CUI_CXaml_CMedia_CIGeometry** value);
    HRESULT (STDMETHODCALLTYPE* put_Data)(__x_ABI_CWindows_CUI_CXaml_CControls_CIPathIconSource* This,
        __x_ABI_CWindows_CUI_CXaml_CMedia_CIGeometry* value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CIPathIconSourceVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CIPathIconSource
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIPathIconSourceVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIPathIconSource;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIPathIconSource_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIPathIconSourceFactory_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CControls_CIPathIconSourceFactory_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIPathIconSourceFactoryVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CControls_CIPathIconSourceFactory* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CControls_CIPathIconSourceFactory* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CControls_CIPathIconSourceFactory* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CControls_CIPathIconSourceFactory* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CControls_CIPathIconSourceFactory* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CControls_CIPathIconSourceFactory* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* CreateInstance)(__x_ABI_CWindows_CUI_CXaml_CControls_CIPathIconSourceFactory* This,
        IInspectable* baseInterface,
        IInspectable** innerInterface,
        __x_ABI_CWindows_CUI_CXaml_CControls_CIPathIconSource** value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CIPathIconSourceFactoryVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CIPathIconSourceFactory
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIPathIconSourceFactoryVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIPathIconSourceFactory;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIPathIconSourceFactory_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIPathIconSourceStatics_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CControls_CIPathIconSourceStatics_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIPathIconSourceStaticsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CControls_CIPathIconSourceStatics* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CControls_CIPathIconSourceStatics* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CControls_CIPathIconSourceStatics* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CControls_CIPathIconSourceStatics* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CControls_CIPathIconSourceStatics* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CControls_CIPathIconSourceStatics* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_DataProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CIPathIconSourceStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CIPathIconSourceStaticsVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CIPathIconSourceStatics
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIPathIconSourceStaticsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIPathIconSourceStatics;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIPathIconSourceStatics_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIPathIconStatics_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CControls_CIPathIconStatics_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIPathIconStaticsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CControls_CIPathIconStatics* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CControls_CIPathIconStatics* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CControls_CIPathIconStatics* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CControls_CIPathIconStatics* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CControls_CIPathIconStatics* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CControls_CIPathIconStatics* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_DataProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CIPathIconStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CIPathIconStaticsVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CIPathIconStatics
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIPathIconStaticsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIPathIconStatics;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIPathIconStatics_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIPersonPicture_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CControls_CIPersonPicture_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIPersonPictureVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CControls_CIPersonPicture* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CControls_CIPersonPicture* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CControls_CIPersonPicture* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CControls_CIPersonPicture* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CControls_CIPersonPicture* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CControls_CIPersonPicture* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_BadgeNumber)(__x_ABI_CWindows_CUI_CXaml_CControls_CIPersonPicture* This,
        INT32* value);
    HRESULT (STDMETHODCALLTYPE* put_BadgeNumber)(__x_ABI_CWindows_CUI_CXaml_CControls_CIPersonPicture* This,
        INT32 value);
    HRESULT (STDMETHODCALLTYPE* get_BadgeGlyph)(__x_ABI_CWindows_CUI_CXaml_CControls_CIPersonPicture* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* put_BadgeGlyph)(__x_ABI_CWindows_CUI_CXaml_CControls_CIPersonPicture* This,
        HSTRING value);
    HRESULT (STDMETHODCALLTYPE* get_BadgeImageSource)(__x_ABI_CWindows_CUI_CXaml_CControls_CIPersonPicture* This,
        __x_ABI_CWindows_CUI_CXaml_CMedia_CIImageSource** value);
    HRESULT (STDMETHODCALLTYPE* put_BadgeImageSource)(__x_ABI_CWindows_CUI_CXaml_CControls_CIPersonPicture* This,
        __x_ABI_CWindows_CUI_CXaml_CMedia_CIImageSource* value);
    HRESULT (STDMETHODCALLTYPE* get_BadgeText)(__x_ABI_CWindows_CUI_CXaml_CControls_CIPersonPicture* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* put_BadgeText)(__x_ABI_CWindows_CUI_CXaml_CControls_CIPersonPicture* This,
        HSTRING value);
    HRESULT (STDMETHODCALLTYPE* get_IsGroup)(__x_ABI_CWindows_CUI_CXaml_CControls_CIPersonPicture* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* put_IsGroup)(__x_ABI_CWindows_CUI_CXaml_CControls_CIPersonPicture* This,
        boolean value);
    HRESULT (STDMETHODCALLTYPE* get_Contact)(__x_ABI_CWindows_CUI_CXaml_CControls_CIPersonPicture* This,
        __x_ABI_CWindows_CApplicationModel_CContacts_CIContact** value);
    HRESULT (STDMETHODCALLTYPE* put_Contact)(__x_ABI_CWindows_CUI_CXaml_CControls_CIPersonPicture* This,
        __x_ABI_CWindows_CApplicationModel_CContacts_CIContact* value);
    HRESULT (STDMETHODCALLTYPE* get_DisplayName)(__x_ABI_CWindows_CUI_CXaml_CControls_CIPersonPicture* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* put_DisplayName)(__x_ABI_CWindows_CUI_CXaml_CControls_CIPersonPicture* This,
        HSTRING value);
    HRESULT (STDMETHODCALLTYPE* get_Initials)(__x_ABI_CWindows_CUI_CXaml_CControls_CIPersonPicture* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* put_Initials)(__x_ABI_CWindows_CUI_CXaml_CControls_CIPersonPicture* This,
        HSTRING value);
    HRESULT (STDMETHODCALLTYPE* get_PreferSmallImage)(__x_ABI_CWindows_CUI_CXaml_CControls_CIPersonPicture* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* put_PreferSmallImage)(__x_ABI_CWindows_CUI_CXaml_CControls_CIPersonPicture* This,
        boolean value);
    HRESULT (STDMETHODCALLTYPE* get_ProfilePicture)(__x_ABI_CWindows_CUI_CXaml_CControls_CIPersonPicture* This,
        __x_ABI_CWindows_CUI_CXaml_CMedia_CIImageSource** value);
    HRESULT (STDMETHODCALLTYPE* put_ProfilePicture)(__x_ABI_CWindows_CUI_CXaml_CControls_CIPersonPicture* This,
        __x_ABI_CWindows_CUI_CXaml_CMedia_CIImageSource* value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CIPersonPictureVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CIPersonPicture
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIPersonPictureVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIPersonPicture;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIPersonPicture_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIPersonPictureFactory_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CControls_CIPersonPictureFactory_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIPersonPictureFactoryVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CControls_CIPersonPictureFactory* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CControls_CIPersonPictureFactory* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CControls_CIPersonPictureFactory* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CControls_CIPersonPictureFactory* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CControls_CIPersonPictureFactory* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CControls_CIPersonPictureFactory* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* CreateInstance)(__x_ABI_CWindows_CUI_CXaml_CControls_CIPersonPictureFactory* This,
        IInspectable* baseInterface,
        IInspectable** innerInterface,
        __x_ABI_CWindows_CUI_CXaml_CControls_CIPersonPicture** value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CIPersonPictureFactoryVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CIPersonPictureFactory
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIPersonPictureFactoryVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIPersonPictureFactory;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIPersonPictureFactory_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIPersonPictureStatics_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CControls_CIPersonPictureStatics_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIPersonPictureStaticsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CControls_CIPersonPictureStatics* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CControls_CIPersonPictureStatics* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CControls_CIPersonPictureStatics* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CControls_CIPersonPictureStatics* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CControls_CIPersonPictureStatics* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CControls_CIPersonPictureStatics* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_BadgeNumberProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CIPersonPictureStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_BadgeGlyphProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CIPersonPictureStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_BadgeImageSourceProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CIPersonPictureStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_BadgeTextProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CIPersonPictureStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_IsGroupProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CIPersonPictureStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_ContactProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CIPersonPictureStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_DisplayNameProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CIPersonPictureStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_InitialsProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CIPersonPictureStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_PreferSmallImageProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CIPersonPictureStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_ProfilePictureProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CIPersonPictureStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CIPersonPictureStaticsVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CIPersonPictureStatics
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIPersonPictureStaticsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIPersonPictureStatics;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIPersonPictureStatics_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIPickerConfirmedEventArgs_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CControls_CIPickerConfirmedEventArgs_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIPickerConfirmedEventArgsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CControls_CIPickerConfirmedEventArgs* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CControls_CIPickerConfirmedEventArgs* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CControls_CIPickerConfirmedEventArgs* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CControls_CIPickerConfirmedEventArgs* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CControls_CIPickerConfirmedEventArgs* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CControls_CIPickerConfirmedEventArgs* This,
            TrustLevel* trustLevel);
    
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CIPickerConfirmedEventArgsVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CIPickerConfirmedEventArgs
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIPickerConfirmedEventArgsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIPickerConfirmedEventArgs;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIPickerConfirmedEventArgs_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIPickerFlyout_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CControls_CIPickerFlyout_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIPickerFlyoutVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CControls_CIPickerFlyout* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CControls_CIPickerFlyout* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CControls_CIPickerFlyout* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CControls_CIPickerFlyout* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CControls_CIPickerFlyout* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CControls_CIPickerFlyout* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Content)(__x_ABI_CWindows_CUI_CXaml_CControls_CIPickerFlyout* This,
        __x_ABI_CWindows_CUI_CXaml_CIUIElement** value);
    HRESULT (STDMETHODCALLTYPE* put_Content)(__x_ABI_CWindows_CUI_CXaml_CControls_CIPickerFlyout* This,
        __x_ABI_CWindows_CUI_CXaml_CIUIElement* value);
    HRESULT (STDMETHODCALLTYPE* get_ConfirmationButtonsVisible)(__x_ABI_CWindows_CUI_CXaml_CControls_CIPickerFlyout* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* put_ConfirmationButtonsVisible)(__x_ABI_CWindows_CUI_CXaml_CControls_CIPickerFlyout* This,
        boolean value);
    HRESULT (STDMETHODCALLTYPE* add_Confirmed)(__x_ABI_CWindows_CUI_CXaml_CControls_CIPickerFlyout* This,
        __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CPickerFlyout___x_ABI_CWindows__CUI__CXaml__CControls__CPickerConfirmedEventArgs* handler,
        EventRegistrationToken* token);
    HRESULT (STDMETHODCALLTYPE* remove_Confirmed)(__x_ABI_CWindows_CUI_CXaml_CControls_CIPickerFlyout* This,
        EventRegistrationToken token);
    HRESULT (STDMETHODCALLTYPE* ShowAtAsync)(__x_ABI_CWindows_CUI_CXaml_CControls_CIPickerFlyout* This,
        __x_ABI_CWindows_CUI_CXaml_CIFrameworkElement* target,
        __x_ABI_C__FIAsyncOperation_1_boolean** operation);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CIPickerFlyoutVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CIPickerFlyout
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIPickerFlyoutVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIPickerFlyout;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIPickerFlyout_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIPickerFlyoutPresenter_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CControls_CIPickerFlyoutPresenter_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIPickerFlyoutPresenterVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CControls_CIPickerFlyoutPresenter* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CControls_CIPickerFlyoutPresenter* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CControls_CIPickerFlyoutPresenter* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CControls_CIPickerFlyoutPresenter* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CControls_CIPickerFlyoutPresenter* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CControls_CIPickerFlyoutPresenter* This,
            TrustLevel* trustLevel);
    
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CIPickerFlyoutPresenterVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CIPickerFlyoutPresenter
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIPickerFlyoutPresenterVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIPickerFlyoutPresenter;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIPickerFlyoutPresenter_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIPickerFlyoutStatics_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CControls_CIPickerFlyoutStatics_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIPickerFlyoutStaticsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CControls_CIPickerFlyoutStatics* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CControls_CIPickerFlyoutStatics* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CControls_CIPickerFlyoutStatics* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CControls_CIPickerFlyoutStatics* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CControls_CIPickerFlyoutStatics* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CControls_CIPickerFlyoutStatics* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_ContentProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CIPickerFlyoutStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_ConfirmationButtonsVisibleProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CIPickerFlyoutStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CIPickerFlyoutStaticsVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CIPickerFlyoutStatics
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIPickerFlyoutStaticsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIPickerFlyoutStatics;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIPickerFlyoutStatics_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIPivot_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CControls_CIPivot_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIPivotVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CControls_CIPivot* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CControls_CIPivot* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CControls_CIPivot* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CControls_CIPivot* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CControls_CIPivot* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CControls_CIPivot* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Title)(__x_ABI_CWindows_CUI_CXaml_CControls_CIPivot* This,
        IInspectable** value);
    HRESULT (STDMETHODCALLTYPE* put_Title)(__x_ABI_CWindows_CUI_CXaml_CControls_CIPivot* This,
        IInspectable* value);
    HRESULT (STDMETHODCALLTYPE* get_TitleTemplate)(__x_ABI_CWindows_CUI_CXaml_CControls_CIPivot* This,
        __x_ABI_CWindows_CUI_CXaml_CIDataTemplate** value);
    HRESULT (STDMETHODCALLTYPE* put_TitleTemplate)(__x_ABI_CWindows_CUI_CXaml_CControls_CIPivot* This,
        __x_ABI_CWindows_CUI_CXaml_CIDataTemplate* value);
    HRESULT (STDMETHODCALLTYPE* get_HeaderTemplate)(__x_ABI_CWindows_CUI_CXaml_CControls_CIPivot* This,
        __x_ABI_CWindows_CUI_CXaml_CIDataTemplate** value);
    HRESULT (STDMETHODCALLTYPE* put_HeaderTemplate)(__x_ABI_CWindows_CUI_CXaml_CControls_CIPivot* This,
        __x_ABI_CWindows_CUI_CXaml_CIDataTemplate* value);
    HRESULT (STDMETHODCALLTYPE* get_SelectedIndex)(__x_ABI_CWindows_CUI_CXaml_CControls_CIPivot* This,
        INT32* value);
    HRESULT (STDMETHODCALLTYPE* put_SelectedIndex)(__x_ABI_CWindows_CUI_CXaml_CControls_CIPivot* This,
        INT32 value);
    HRESULT (STDMETHODCALLTYPE* get_SelectedItem)(__x_ABI_CWindows_CUI_CXaml_CControls_CIPivot* This,
        IInspectable** value);
    HRESULT (STDMETHODCALLTYPE* put_SelectedItem)(__x_ABI_CWindows_CUI_CXaml_CControls_CIPivot* This,
        IInspectable* value);
    HRESULT (STDMETHODCALLTYPE* get_IsLocked)(__x_ABI_CWindows_CUI_CXaml_CControls_CIPivot* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* put_IsLocked)(__x_ABI_CWindows_CUI_CXaml_CControls_CIPivot* This,
        boolean value);
    HRESULT (STDMETHODCALLTYPE* add_SelectionChanged)(__x_ABI_CWindows_CUI_CXaml_CControls_CIPivot* This,
        __x_ABI_CWindows_CUI_CXaml_CControls_CISelectionChangedEventHandler* handler,
        EventRegistrationToken* token);
    HRESULT (STDMETHODCALLTYPE* remove_SelectionChanged)(__x_ABI_CWindows_CUI_CXaml_CControls_CIPivot* This,
        EventRegistrationToken token);
    HRESULT (STDMETHODCALLTYPE* add_PivotItemLoading)(__x_ABI_CWindows_CUI_CXaml_CControls_CIPivot* This,
        __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CPivot___x_ABI_CWindows__CUI__CXaml__CControls__CPivotItemEventArgs* handler,
        EventRegistrationToken* token);
    HRESULT (STDMETHODCALLTYPE* remove_PivotItemLoading)(__x_ABI_CWindows_CUI_CXaml_CControls_CIPivot* This,
        EventRegistrationToken token);
    HRESULT (STDMETHODCALLTYPE* add_PivotItemLoaded)(__x_ABI_CWindows_CUI_CXaml_CControls_CIPivot* This,
        __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CPivot___x_ABI_CWindows__CUI__CXaml__CControls__CPivotItemEventArgs* handler,
        EventRegistrationToken* token);
    HRESULT (STDMETHODCALLTYPE* remove_PivotItemLoaded)(__x_ABI_CWindows_CUI_CXaml_CControls_CIPivot* This,
        EventRegistrationToken token);
    HRESULT (STDMETHODCALLTYPE* add_PivotItemUnloading)(__x_ABI_CWindows_CUI_CXaml_CControls_CIPivot* This,
        __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CPivot___x_ABI_CWindows__CUI__CXaml__CControls__CPivotItemEventArgs* handler,
        EventRegistrationToken* token);
    HRESULT (STDMETHODCALLTYPE* remove_PivotItemUnloading)(__x_ABI_CWindows_CUI_CXaml_CControls_CIPivot* This,
        EventRegistrationToken token);
    HRESULT (STDMETHODCALLTYPE* add_PivotItemUnloaded)(__x_ABI_CWindows_CUI_CXaml_CControls_CIPivot* This,
        __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CPivot___x_ABI_CWindows__CUI__CXaml__CControls__CPivotItemEventArgs* handler,
        EventRegistrationToken* token);
    HRESULT (STDMETHODCALLTYPE* remove_PivotItemUnloaded)(__x_ABI_CWindows_CUI_CXaml_CControls_CIPivot* This,
        EventRegistrationToken token);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CIPivotVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CIPivot
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIPivotVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIPivot;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIPivot_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIPivot2_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CControls_CIPivot2_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIPivot2Vtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CControls_CIPivot2* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CControls_CIPivot2* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CControls_CIPivot2* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CControls_CIPivot2* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CControls_CIPivot2* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CControls_CIPivot2* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_LeftHeader)(__x_ABI_CWindows_CUI_CXaml_CControls_CIPivot2* This,
        IInspectable** value);
    HRESULT (STDMETHODCALLTYPE* put_LeftHeader)(__x_ABI_CWindows_CUI_CXaml_CControls_CIPivot2* This,
        IInspectable* value);
    HRESULT (STDMETHODCALLTYPE* get_LeftHeaderTemplate)(__x_ABI_CWindows_CUI_CXaml_CControls_CIPivot2* This,
        __x_ABI_CWindows_CUI_CXaml_CIDataTemplate** value);
    HRESULT (STDMETHODCALLTYPE* put_LeftHeaderTemplate)(__x_ABI_CWindows_CUI_CXaml_CControls_CIPivot2* This,
        __x_ABI_CWindows_CUI_CXaml_CIDataTemplate* value);
    HRESULT (STDMETHODCALLTYPE* get_RightHeader)(__x_ABI_CWindows_CUI_CXaml_CControls_CIPivot2* This,
        IInspectable** value);
    HRESULT (STDMETHODCALLTYPE* put_RightHeader)(__x_ABI_CWindows_CUI_CXaml_CControls_CIPivot2* This,
        IInspectable* value);
    HRESULT (STDMETHODCALLTYPE* get_RightHeaderTemplate)(__x_ABI_CWindows_CUI_CXaml_CControls_CIPivot2* This,
        __x_ABI_CWindows_CUI_CXaml_CIDataTemplate** value);
    HRESULT (STDMETHODCALLTYPE* put_RightHeaderTemplate)(__x_ABI_CWindows_CUI_CXaml_CControls_CIPivot2* This,
        __x_ABI_CWindows_CUI_CXaml_CIDataTemplate* value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CIPivot2Vtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CIPivot2
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIPivot2Vtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIPivot2;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIPivot2_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIPivot3_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CControls_CIPivot3_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIPivot3Vtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CControls_CIPivot3* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CControls_CIPivot3* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CControls_CIPivot3* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CControls_CIPivot3* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CControls_CIPivot3* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CControls_CIPivot3* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_HeaderFocusVisualPlacement)(__x_ABI_CWindows_CUI_CXaml_CControls_CIPivot3* This,
        enum __x_ABI_CWindows_CUI_CXaml_CControls_CPivotHeaderFocusVisualPlacement* value);
    HRESULT (STDMETHODCALLTYPE* put_HeaderFocusVisualPlacement)(__x_ABI_CWindows_CUI_CXaml_CControls_CIPivot3* This,
        enum __x_ABI_CWindows_CUI_CXaml_CControls_CPivotHeaderFocusVisualPlacement value);
    HRESULT (STDMETHODCALLTYPE* get_IsHeaderItemsCarouselEnabled)(__x_ABI_CWindows_CUI_CXaml_CControls_CIPivot3* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* put_IsHeaderItemsCarouselEnabled)(__x_ABI_CWindows_CUI_CXaml_CControls_CIPivot3* This,
        boolean value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CIPivot3Vtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CIPivot3
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIPivot3Vtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIPivot3;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIPivot3_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIPivotFactory_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CControls_CIPivotFactory_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIPivotFactoryVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CControls_CIPivotFactory* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CControls_CIPivotFactory* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CControls_CIPivotFactory* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CControls_CIPivotFactory* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CControls_CIPivotFactory* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CControls_CIPivotFactory* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* CreateInstance)(__x_ABI_CWindows_CUI_CXaml_CControls_CIPivotFactory* This,
        IInspectable* baseInterface,
        IInspectable** innerInterface,
        __x_ABI_CWindows_CUI_CXaml_CControls_CIPivot** value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CIPivotFactoryVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CIPivotFactory
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIPivotFactoryVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIPivotFactory;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIPivotFactory_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIPivotItem_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CControls_CIPivotItem_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIPivotItemVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CControls_CIPivotItem* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CControls_CIPivotItem* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CControls_CIPivotItem* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CControls_CIPivotItem* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CControls_CIPivotItem* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CControls_CIPivotItem* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Header)(__x_ABI_CWindows_CUI_CXaml_CControls_CIPivotItem* This,
        IInspectable** value);
    HRESULT (STDMETHODCALLTYPE* put_Header)(__x_ABI_CWindows_CUI_CXaml_CControls_CIPivotItem* This,
        IInspectable* value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CIPivotItemVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CIPivotItem
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIPivotItemVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIPivotItem;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIPivotItem_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIPivotItemEventArgs_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CControls_CIPivotItemEventArgs_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIPivotItemEventArgsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CControls_CIPivotItemEventArgs* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CControls_CIPivotItemEventArgs* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CControls_CIPivotItemEventArgs* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CControls_CIPivotItemEventArgs* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CControls_CIPivotItemEventArgs* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CControls_CIPivotItemEventArgs* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Item)(__x_ABI_CWindows_CUI_CXaml_CControls_CIPivotItemEventArgs* This,
        __x_ABI_CWindows_CUI_CXaml_CControls_CIPivotItem** value);
    HRESULT (STDMETHODCALLTYPE* put_Item)(__x_ABI_CWindows_CUI_CXaml_CControls_CIPivotItemEventArgs* This,
        __x_ABI_CWindows_CUI_CXaml_CControls_CIPivotItem* value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CIPivotItemEventArgsVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CIPivotItemEventArgs
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIPivotItemEventArgsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIPivotItemEventArgs;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIPivotItemEventArgs_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIPivotItemFactory_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CControls_CIPivotItemFactory_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIPivotItemFactoryVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CControls_CIPivotItemFactory* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CControls_CIPivotItemFactory* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CControls_CIPivotItemFactory* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CControls_CIPivotItemFactory* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CControls_CIPivotItemFactory* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CControls_CIPivotItemFactory* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* CreateInstance)(__x_ABI_CWindows_CUI_CXaml_CControls_CIPivotItemFactory* This,
        IInspectable* baseInterface,
        IInspectable** innerInterface,
        __x_ABI_CWindows_CUI_CXaml_CControls_CIPivotItem** value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CIPivotItemFactoryVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CIPivotItemFactory
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIPivotItemFactoryVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIPivotItemFactory;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIPivotItemFactory_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIPivotItemStatics_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CControls_CIPivotItemStatics_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIPivotItemStaticsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CControls_CIPivotItemStatics* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CControls_CIPivotItemStatics* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CControls_CIPivotItemStatics* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CControls_CIPivotItemStatics* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CControls_CIPivotItemStatics* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CControls_CIPivotItemStatics* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_HeaderProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CIPivotItemStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CIPivotItemStaticsVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CIPivotItemStatics
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIPivotItemStaticsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIPivotItemStatics;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIPivotItemStatics_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIPivotStatics_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CControls_CIPivotStatics_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIPivotStaticsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CControls_CIPivotStatics* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CControls_CIPivotStatics* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CControls_CIPivotStatics* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CControls_CIPivotStatics* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CControls_CIPivotStatics* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CControls_CIPivotStatics* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_TitleProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CIPivotStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_TitleTemplateProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CIPivotStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_HeaderTemplateProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CIPivotStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_SelectedIndexProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CIPivotStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_SelectedItemProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CIPivotStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_IsLockedProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CIPivotStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_SlideInAnimationGroupProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CIPivotStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* GetSlideInAnimationGroup)(__x_ABI_CWindows_CUI_CXaml_CControls_CIPivotStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIFrameworkElement* element,
        enum __x_ABI_CWindows_CUI_CXaml_CControls_CPivotSlideInAnimationGroup* result);
    HRESULT (STDMETHODCALLTYPE* SetSlideInAnimationGroup)(__x_ABI_CWindows_CUI_CXaml_CControls_CIPivotStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIFrameworkElement* element,
        enum __x_ABI_CWindows_CUI_CXaml_CControls_CPivotSlideInAnimationGroup value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CIPivotStaticsVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CIPivotStatics
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIPivotStaticsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIPivotStatics;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIPivotStatics_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIPivotStatics2_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CControls_CIPivotStatics2_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIPivotStatics2Vtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CControls_CIPivotStatics2* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CControls_CIPivotStatics2* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CControls_CIPivotStatics2* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CControls_CIPivotStatics2* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CControls_CIPivotStatics2* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CControls_CIPivotStatics2* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_LeftHeaderProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CIPivotStatics2* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_LeftHeaderTemplateProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CIPivotStatics2* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_RightHeaderProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CIPivotStatics2* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_RightHeaderTemplateProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CIPivotStatics2* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CIPivotStatics2Vtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CIPivotStatics2
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIPivotStatics2Vtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIPivotStatics2;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIPivotStatics2_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIPivotStatics3_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CControls_CIPivotStatics3_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIPivotStatics3Vtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CControls_CIPivotStatics3* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CControls_CIPivotStatics3* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CControls_CIPivotStatics3* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CControls_CIPivotStatics3* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CControls_CIPivotStatics3* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CControls_CIPivotStatics3* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_HeaderFocusVisualPlacementProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CIPivotStatics3* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_IsHeaderItemsCarouselEnabledProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CIPivotStatics3* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CIPivotStatics3Vtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CIPivotStatics3
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIPivotStatics3Vtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIPivotStatics3;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIPivotStatics3_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIProgressBar_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CControls_CIProgressBar_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIProgressBarVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CControls_CIProgressBar* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CControls_CIProgressBar* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CControls_CIProgressBar* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CControls_CIProgressBar* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CControls_CIProgressBar* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CControls_CIProgressBar* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_IsIndeterminate)(__x_ABI_CWindows_CUI_CXaml_CControls_CIProgressBar* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* put_IsIndeterminate)(__x_ABI_CWindows_CUI_CXaml_CControls_CIProgressBar* This,
        boolean value);
    HRESULT (STDMETHODCALLTYPE* get_ShowError)(__x_ABI_CWindows_CUI_CXaml_CControls_CIProgressBar* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* put_ShowError)(__x_ABI_CWindows_CUI_CXaml_CControls_CIProgressBar* This,
        boolean value);
    HRESULT (STDMETHODCALLTYPE* get_ShowPaused)(__x_ABI_CWindows_CUI_CXaml_CControls_CIProgressBar* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* put_ShowPaused)(__x_ABI_CWindows_CUI_CXaml_CControls_CIProgressBar* This,
        boolean value);
    HRESULT (STDMETHODCALLTYPE* get_TemplateSettings)(__x_ABI_CWindows_CUI_CXaml_CControls_CIProgressBar* This,
        __x_ABI_CWindows_CUI_CXaml_CControls_CPrimitives_CIProgressBarTemplateSettings** value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CIProgressBarVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CIProgressBar
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIProgressBarVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIProgressBar;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIProgressBar_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIProgressBarFactory_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CControls_CIProgressBarFactory_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIProgressBarFactoryVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CControls_CIProgressBarFactory* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CControls_CIProgressBarFactory* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CControls_CIProgressBarFactory* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CControls_CIProgressBarFactory* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CControls_CIProgressBarFactory* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CControls_CIProgressBarFactory* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* CreateInstance)(__x_ABI_CWindows_CUI_CXaml_CControls_CIProgressBarFactory* This,
        IInspectable* baseInterface,
        IInspectable** innerInterface,
        __x_ABI_CWindows_CUI_CXaml_CControls_CIProgressBar** value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CIProgressBarFactoryVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CIProgressBarFactory
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIProgressBarFactoryVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIProgressBarFactory;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIProgressBarFactory_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIProgressBarStatics_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CControls_CIProgressBarStatics_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIProgressBarStaticsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CControls_CIProgressBarStatics* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CControls_CIProgressBarStatics* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CControls_CIProgressBarStatics* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CControls_CIProgressBarStatics* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CControls_CIProgressBarStatics* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CControls_CIProgressBarStatics* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_IsIndeterminateProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CIProgressBarStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_ShowErrorProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CIProgressBarStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_ShowPausedProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CIProgressBarStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CIProgressBarStaticsVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CIProgressBarStatics
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIProgressBarStaticsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIProgressBarStatics;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIProgressBarStatics_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIProgressRing_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CControls_CIProgressRing_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIProgressRingVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CControls_CIProgressRing* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CControls_CIProgressRing* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CControls_CIProgressRing* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CControls_CIProgressRing* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CControls_CIProgressRing* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CControls_CIProgressRing* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_IsActive)(__x_ABI_CWindows_CUI_CXaml_CControls_CIProgressRing* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* put_IsActive)(__x_ABI_CWindows_CUI_CXaml_CControls_CIProgressRing* This,
        boolean value);
    HRESULT (STDMETHODCALLTYPE* get_TemplateSettings)(__x_ABI_CWindows_CUI_CXaml_CControls_CIProgressRing* This,
        __x_ABI_CWindows_CUI_CXaml_CControls_CPrimitives_CIProgressRingTemplateSettings** value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CIProgressRingVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CIProgressRing
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIProgressRingVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIProgressRing;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIProgressRing_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIProgressRingStatics_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CControls_CIProgressRingStatics_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIProgressRingStaticsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CControls_CIProgressRingStatics* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CControls_CIProgressRingStatics* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CControls_CIProgressRingStatics* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CControls_CIProgressRingStatics* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CControls_CIProgressRingStatics* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CControls_CIProgressRingStatics* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_IsActiveProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CIProgressRingStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CIProgressRingStaticsVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CIProgressRingStatics
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIProgressRingStaticsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIProgressRingStatics;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIProgressRingStatics_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIRadioButton_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CControls_CIRadioButton_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIRadioButtonVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CControls_CIRadioButton* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CControls_CIRadioButton* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CControls_CIRadioButton* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CControls_CIRadioButton* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CControls_CIRadioButton* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CControls_CIRadioButton* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_GroupName)(__x_ABI_CWindows_CUI_CXaml_CControls_CIRadioButton* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* put_GroupName)(__x_ABI_CWindows_CUI_CXaml_CControls_CIRadioButton* This,
        HSTRING value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CIRadioButtonVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CIRadioButton
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIRadioButtonVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIRadioButton;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIRadioButton_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIRadioButtonFactory_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CControls_CIRadioButtonFactory_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIRadioButtonFactoryVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CControls_CIRadioButtonFactory* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CControls_CIRadioButtonFactory* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CControls_CIRadioButtonFactory* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CControls_CIRadioButtonFactory* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CControls_CIRadioButtonFactory* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CControls_CIRadioButtonFactory* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* CreateInstance)(__x_ABI_CWindows_CUI_CXaml_CControls_CIRadioButtonFactory* This,
        IInspectable* baseInterface,
        IInspectable** innerInterface,
        __x_ABI_CWindows_CUI_CXaml_CControls_CIRadioButton** value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CIRadioButtonFactoryVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CIRadioButtonFactory
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIRadioButtonFactoryVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIRadioButtonFactory;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIRadioButtonFactory_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIRadioButtonStatics_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CControls_CIRadioButtonStatics_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIRadioButtonStaticsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CControls_CIRadioButtonStatics* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CControls_CIRadioButtonStatics* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CControls_CIRadioButtonStatics* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CControls_CIRadioButtonStatics* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CControls_CIRadioButtonStatics* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CControls_CIRadioButtonStatics* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_GroupNameProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CIRadioButtonStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CIRadioButtonStaticsVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CIRadioButtonStatics
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIRadioButtonStaticsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIRadioButtonStatics;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIRadioButtonStatics_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIRatingControl_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CControls_CIRatingControl_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIRatingControlVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CControls_CIRatingControl* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CControls_CIRatingControl* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CControls_CIRatingControl* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CControls_CIRatingControl* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CControls_CIRatingControl* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CControls_CIRatingControl* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Caption)(__x_ABI_CWindows_CUI_CXaml_CControls_CIRatingControl* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* put_Caption)(__x_ABI_CWindows_CUI_CXaml_CControls_CIRatingControl* This,
        HSTRING value);
    HRESULT (STDMETHODCALLTYPE* get_InitialSetValue)(__x_ABI_CWindows_CUI_CXaml_CControls_CIRatingControl* This,
        INT32* value);
    HRESULT (STDMETHODCALLTYPE* put_InitialSetValue)(__x_ABI_CWindows_CUI_CXaml_CControls_CIRatingControl* This,
        INT32 value);
    HRESULT (STDMETHODCALLTYPE* get_IsClearEnabled)(__x_ABI_CWindows_CUI_CXaml_CControls_CIRatingControl* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* put_IsClearEnabled)(__x_ABI_CWindows_CUI_CXaml_CControls_CIRatingControl* This,
        boolean value);
    HRESULT (STDMETHODCALLTYPE* get_IsReadOnly)(__x_ABI_CWindows_CUI_CXaml_CControls_CIRatingControl* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* put_IsReadOnly)(__x_ABI_CWindows_CUI_CXaml_CControls_CIRatingControl* This,
        boolean value);
    HRESULT (STDMETHODCALLTYPE* get_MaxRating)(__x_ABI_CWindows_CUI_CXaml_CControls_CIRatingControl* This,
        INT32* value);
    HRESULT (STDMETHODCALLTYPE* put_MaxRating)(__x_ABI_CWindows_CUI_CXaml_CControls_CIRatingControl* This,
        INT32 value);
    HRESULT (STDMETHODCALLTYPE* get_PlaceholderValue)(__x_ABI_CWindows_CUI_CXaml_CControls_CIRatingControl* This,
        DOUBLE* value);
    HRESULT (STDMETHODCALLTYPE* put_PlaceholderValue)(__x_ABI_CWindows_CUI_CXaml_CControls_CIRatingControl* This,
        DOUBLE value);
    HRESULT (STDMETHODCALLTYPE* get_ItemInfo)(__x_ABI_CWindows_CUI_CXaml_CControls_CIRatingControl* This,
        __x_ABI_CWindows_CUI_CXaml_CControls_CIRatingItemInfo** value);
    HRESULT (STDMETHODCALLTYPE* put_ItemInfo)(__x_ABI_CWindows_CUI_CXaml_CControls_CIRatingControl* This,
        __x_ABI_CWindows_CUI_CXaml_CControls_CIRatingItemInfo* value);
    HRESULT (STDMETHODCALLTYPE* get_Value)(__x_ABI_CWindows_CUI_CXaml_CControls_CIRatingControl* This,
        DOUBLE* value);
    HRESULT (STDMETHODCALLTYPE* put_Value)(__x_ABI_CWindows_CUI_CXaml_CControls_CIRatingControl* This,
        DOUBLE value);
    HRESULT (STDMETHODCALLTYPE* add_ValueChanged)(__x_ABI_CWindows_CUI_CXaml_CControls_CIRatingControl* This,
        __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CRatingControl_IInspectable* handler,
        EventRegistrationToken* token);
    HRESULT (STDMETHODCALLTYPE* remove_ValueChanged)(__x_ABI_CWindows_CUI_CXaml_CControls_CIRatingControl* This,
        EventRegistrationToken token);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CIRatingControlVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CIRatingControl
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIRatingControlVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIRatingControl;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIRatingControl_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIRatingControlFactory_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CControls_CIRatingControlFactory_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIRatingControlFactoryVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CControls_CIRatingControlFactory* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CControls_CIRatingControlFactory* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CControls_CIRatingControlFactory* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CControls_CIRatingControlFactory* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CControls_CIRatingControlFactory* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CControls_CIRatingControlFactory* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* CreateInstance)(__x_ABI_CWindows_CUI_CXaml_CControls_CIRatingControlFactory* This,
        IInspectable* baseInterface,
        IInspectable** innerInterface,
        __x_ABI_CWindows_CUI_CXaml_CControls_CIRatingControl** value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CIRatingControlFactoryVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CIRatingControlFactory
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIRatingControlFactoryVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIRatingControlFactory;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIRatingControlFactory_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIRatingControlStatics_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CControls_CIRatingControlStatics_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIRatingControlStaticsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CControls_CIRatingControlStatics* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CControls_CIRatingControlStatics* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CControls_CIRatingControlStatics* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CControls_CIRatingControlStatics* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CControls_CIRatingControlStatics* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CControls_CIRatingControlStatics* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_CaptionProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CIRatingControlStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_InitialSetValueProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CIRatingControlStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_IsClearEnabledProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CIRatingControlStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_IsReadOnlyProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CIRatingControlStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_MaxRatingProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CIRatingControlStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_PlaceholderValueProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CIRatingControlStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_ItemInfoProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CIRatingControlStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_ValueProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CIRatingControlStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CIRatingControlStaticsVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CIRatingControlStatics
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIRatingControlStaticsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIRatingControlStatics;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIRatingControlStatics_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIRatingItemFontInfo_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CControls_CIRatingItemFontInfo_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIRatingItemFontInfoVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CControls_CIRatingItemFontInfo* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CControls_CIRatingItemFontInfo* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CControls_CIRatingItemFontInfo* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CControls_CIRatingItemFontInfo* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CControls_CIRatingItemFontInfo* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CControls_CIRatingItemFontInfo* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_DisabledGlyph)(__x_ABI_CWindows_CUI_CXaml_CControls_CIRatingItemFontInfo* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* put_DisabledGlyph)(__x_ABI_CWindows_CUI_CXaml_CControls_CIRatingItemFontInfo* This,
        HSTRING value);
    HRESULT (STDMETHODCALLTYPE* get_Glyph)(__x_ABI_CWindows_CUI_CXaml_CControls_CIRatingItemFontInfo* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* put_Glyph)(__x_ABI_CWindows_CUI_CXaml_CControls_CIRatingItemFontInfo* This,
        HSTRING value);
    HRESULT (STDMETHODCALLTYPE* get_PointerOverGlyph)(__x_ABI_CWindows_CUI_CXaml_CControls_CIRatingItemFontInfo* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* put_PointerOverGlyph)(__x_ABI_CWindows_CUI_CXaml_CControls_CIRatingItemFontInfo* This,
        HSTRING value);
    HRESULT (STDMETHODCALLTYPE* get_PointerOverPlaceholderGlyph)(__x_ABI_CWindows_CUI_CXaml_CControls_CIRatingItemFontInfo* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* put_PointerOverPlaceholderGlyph)(__x_ABI_CWindows_CUI_CXaml_CControls_CIRatingItemFontInfo* This,
        HSTRING value);
    HRESULT (STDMETHODCALLTYPE* get_PlaceholderGlyph)(__x_ABI_CWindows_CUI_CXaml_CControls_CIRatingItemFontInfo* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* put_PlaceholderGlyph)(__x_ABI_CWindows_CUI_CXaml_CControls_CIRatingItemFontInfo* This,
        HSTRING value);
    HRESULT (STDMETHODCALLTYPE* get_UnsetGlyph)(__x_ABI_CWindows_CUI_CXaml_CControls_CIRatingItemFontInfo* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* put_UnsetGlyph)(__x_ABI_CWindows_CUI_CXaml_CControls_CIRatingItemFontInfo* This,
        HSTRING value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CIRatingItemFontInfoVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CIRatingItemFontInfo
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIRatingItemFontInfoVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIRatingItemFontInfo;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIRatingItemFontInfo_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIRatingItemFontInfoFactory_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CControls_CIRatingItemFontInfoFactory_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIRatingItemFontInfoFactoryVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CControls_CIRatingItemFontInfoFactory* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CControls_CIRatingItemFontInfoFactory* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CControls_CIRatingItemFontInfoFactory* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CControls_CIRatingItemFontInfoFactory* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CControls_CIRatingItemFontInfoFactory* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CControls_CIRatingItemFontInfoFactory* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* CreateInstance)(__x_ABI_CWindows_CUI_CXaml_CControls_CIRatingItemFontInfoFactory* This,
        IInspectable* baseInterface,
        IInspectable** innerInterface,
        __x_ABI_CWindows_CUI_CXaml_CControls_CIRatingItemFontInfo** value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CIRatingItemFontInfoFactoryVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CIRatingItemFontInfoFactory
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIRatingItemFontInfoFactoryVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIRatingItemFontInfoFactory;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIRatingItemFontInfoFactory_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIRatingItemFontInfoStatics_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CControls_CIRatingItemFontInfoStatics_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIRatingItemFontInfoStaticsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CControls_CIRatingItemFontInfoStatics* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CControls_CIRatingItemFontInfoStatics* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CControls_CIRatingItemFontInfoStatics* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CControls_CIRatingItemFontInfoStatics* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CControls_CIRatingItemFontInfoStatics* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CControls_CIRatingItemFontInfoStatics* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_DisabledGlyphProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CIRatingItemFontInfoStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_GlyphProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CIRatingItemFontInfoStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_PlaceholderGlyphProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CIRatingItemFontInfoStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_PointerOverGlyphProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CIRatingItemFontInfoStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_PointerOverPlaceholderGlyphProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CIRatingItemFontInfoStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_UnsetGlyphProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CIRatingItemFontInfoStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CIRatingItemFontInfoStaticsVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CIRatingItemFontInfoStatics
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIRatingItemFontInfoStaticsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIRatingItemFontInfoStatics;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIRatingItemFontInfoStatics_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIRatingItemImageInfo_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CControls_CIRatingItemImageInfo_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIRatingItemImageInfoVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CControls_CIRatingItemImageInfo* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CControls_CIRatingItemImageInfo* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CControls_CIRatingItemImageInfo* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CControls_CIRatingItemImageInfo* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CControls_CIRatingItemImageInfo* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CControls_CIRatingItemImageInfo* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_DisabledImage)(__x_ABI_CWindows_CUI_CXaml_CControls_CIRatingItemImageInfo* This,
        __x_ABI_CWindows_CUI_CXaml_CMedia_CIImageSource** value);
    HRESULT (STDMETHODCALLTYPE* put_DisabledImage)(__x_ABI_CWindows_CUI_CXaml_CControls_CIRatingItemImageInfo* This,
        __x_ABI_CWindows_CUI_CXaml_CMedia_CIImageSource* value);
    HRESULT (STDMETHODCALLTYPE* get_Image)(__x_ABI_CWindows_CUI_CXaml_CControls_CIRatingItemImageInfo* This,
        __x_ABI_CWindows_CUI_CXaml_CMedia_CIImageSource** value);
    HRESULT (STDMETHODCALLTYPE* put_Image)(__x_ABI_CWindows_CUI_CXaml_CControls_CIRatingItemImageInfo* This,
        __x_ABI_CWindows_CUI_CXaml_CMedia_CIImageSource* value);
    HRESULT (STDMETHODCALLTYPE* get_PlaceholderImage)(__x_ABI_CWindows_CUI_CXaml_CControls_CIRatingItemImageInfo* This,
        __x_ABI_CWindows_CUI_CXaml_CMedia_CIImageSource** value);
    HRESULT (STDMETHODCALLTYPE* put_PlaceholderImage)(__x_ABI_CWindows_CUI_CXaml_CControls_CIRatingItemImageInfo* This,
        __x_ABI_CWindows_CUI_CXaml_CMedia_CIImageSource* value);
    HRESULT (STDMETHODCALLTYPE* get_PointerOverImage)(__x_ABI_CWindows_CUI_CXaml_CControls_CIRatingItemImageInfo* This,
        __x_ABI_CWindows_CUI_CXaml_CMedia_CIImageSource** value);
    HRESULT (STDMETHODCALLTYPE* put_PointerOverImage)(__x_ABI_CWindows_CUI_CXaml_CControls_CIRatingItemImageInfo* This,
        __x_ABI_CWindows_CUI_CXaml_CMedia_CIImageSource* value);
    HRESULT (STDMETHODCALLTYPE* get_PointerOverPlaceholderImage)(__x_ABI_CWindows_CUI_CXaml_CControls_CIRatingItemImageInfo* This,
        __x_ABI_CWindows_CUI_CXaml_CMedia_CIImageSource** value);
    HRESULT (STDMETHODCALLTYPE* put_PointerOverPlaceholderImage)(__x_ABI_CWindows_CUI_CXaml_CControls_CIRatingItemImageInfo* This,
        __x_ABI_CWindows_CUI_CXaml_CMedia_CIImageSource* value);
    HRESULT (STDMETHODCALLTYPE* get_UnsetImage)(__x_ABI_CWindows_CUI_CXaml_CControls_CIRatingItemImageInfo* This,
        __x_ABI_CWindows_CUI_CXaml_CMedia_CIImageSource** value);
    HRESULT (STDMETHODCALLTYPE* put_UnsetImage)(__x_ABI_CWindows_CUI_CXaml_CControls_CIRatingItemImageInfo* This,
        __x_ABI_CWindows_CUI_CXaml_CMedia_CIImageSource* value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CIRatingItemImageInfoVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CIRatingItemImageInfo
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIRatingItemImageInfoVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIRatingItemImageInfo;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIRatingItemImageInfo_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIRatingItemImageInfoFactory_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CControls_CIRatingItemImageInfoFactory_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIRatingItemImageInfoFactoryVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CControls_CIRatingItemImageInfoFactory* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CControls_CIRatingItemImageInfoFactory* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CControls_CIRatingItemImageInfoFactory* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CControls_CIRatingItemImageInfoFactory* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CControls_CIRatingItemImageInfoFactory* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CControls_CIRatingItemImageInfoFactory* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* CreateInstance)(__x_ABI_CWindows_CUI_CXaml_CControls_CIRatingItemImageInfoFactory* This,
        IInspectable* baseInterface,
        IInspectable** innerInterface,
        __x_ABI_CWindows_CUI_CXaml_CControls_CIRatingItemImageInfo** value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CIRatingItemImageInfoFactoryVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CIRatingItemImageInfoFactory
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIRatingItemImageInfoFactoryVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIRatingItemImageInfoFactory;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIRatingItemImageInfoFactory_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIRatingItemImageInfoStatics_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CControls_CIRatingItemImageInfoStatics_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIRatingItemImageInfoStaticsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CControls_CIRatingItemImageInfoStatics* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CControls_CIRatingItemImageInfoStatics* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CControls_CIRatingItemImageInfoStatics* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CControls_CIRatingItemImageInfoStatics* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CControls_CIRatingItemImageInfoStatics* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CControls_CIRatingItemImageInfoStatics* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_DisabledImageProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CIRatingItemImageInfoStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_ImageProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CIRatingItemImageInfoStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_PlaceholderImageProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CIRatingItemImageInfoStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_PointerOverImageProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CIRatingItemImageInfoStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_PointerOverPlaceholderImageProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CIRatingItemImageInfoStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_UnsetImageProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CIRatingItemImageInfoStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CIRatingItemImageInfoStaticsVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CIRatingItemImageInfoStatics
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIRatingItemImageInfoStaticsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIRatingItemImageInfoStatics;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIRatingItemImageInfoStatics_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIRatingItemInfo_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CControls_CIRatingItemInfo_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIRatingItemInfoVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CControls_CIRatingItemInfo* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CControls_CIRatingItemInfo* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CControls_CIRatingItemInfo* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CControls_CIRatingItemInfo* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CControls_CIRatingItemInfo* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CControls_CIRatingItemInfo* This,
            TrustLevel* trustLevel);
    
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CIRatingItemInfoVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CIRatingItemInfo
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIRatingItemInfoVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIRatingItemInfo;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIRatingItemInfo_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIRatingItemInfoFactory_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CControls_CIRatingItemInfoFactory_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIRatingItemInfoFactoryVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CControls_CIRatingItemInfoFactory* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CControls_CIRatingItemInfoFactory* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CControls_CIRatingItemInfoFactory* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CControls_CIRatingItemInfoFactory* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CControls_CIRatingItemInfoFactory* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CControls_CIRatingItemInfoFactory* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* CreateInstance)(__x_ABI_CWindows_CUI_CXaml_CControls_CIRatingItemInfoFactory* This,
        IInspectable* baseInterface,
        IInspectable** innerInterface,
        __x_ABI_CWindows_CUI_CXaml_CControls_CIRatingItemInfo** value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CIRatingItemInfoFactoryVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CIRatingItemInfoFactory
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIRatingItemInfoFactoryVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIRatingItemInfoFactory;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIRatingItemInfoFactory_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIRefreshContainer_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CControls_CIRefreshContainer_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIRefreshContainerVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CControls_CIRefreshContainer* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CControls_CIRefreshContainer* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CControls_CIRefreshContainer* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CControls_CIRefreshContainer* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CControls_CIRefreshContainer* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CControls_CIRefreshContainer* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Visualizer)(__x_ABI_CWindows_CUI_CXaml_CControls_CIRefreshContainer* This,
        __x_ABI_CWindows_CUI_CXaml_CControls_CIRefreshVisualizer** value);
    HRESULT (STDMETHODCALLTYPE* put_Visualizer)(__x_ABI_CWindows_CUI_CXaml_CControls_CIRefreshContainer* This,
        __x_ABI_CWindows_CUI_CXaml_CControls_CIRefreshVisualizer* value);
    HRESULT (STDMETHODCALLTYPE* get_PullDirection)(__x_ABI_CWindows_CUI_CXaml_CControls_CIRefreshContainer* This,
        enum __x_ABI_CWindows_CUI_CXaml_CControls_CRefreshPullDirection* value);
    HRESULT (STDMETHODCALLTYPE* put_PullDirection)(__x_ABI_CWindows_CUI_CXaml_CControls_CIRefreshContainer* This,
        enum __x_ABI_CWindows_CUI_CXaml_CControls_CRefreshPullDirection value);
    HRESULT (STDMETHODCALLTYPE* add_RefreshRequested)(__x_ABI_CWindows_CUI_CXaml_CControls_CIRefreshContainer* This,
        __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CRefreshContainer___x_ABI_CWindows__CUI__CXaml__CControls__CRefreshRequestedEventArgs* handler,
        EventRegistrationToken* token);
    HRESULT (STDMETHODCALLTYPE* remove_RefreshRequested)(__x_ABI_CWindows_CUI_CXaml_CControls_CIRefreshContainer* This,
        EventRegistrationToken token);
    HRESULT (STDMETHODCALLTYPE* RequestRefresh)(__x_ABI_CWindows_CUI_CXaml_CControls_CIRefreshContainer* This);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CIRefreshContainerVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CIRefreshContainer
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIRefreshContainerVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIRefreshContainer;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIRefreshContainer_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIRefreshContainerFactory_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CControls_CIRefreshContainerFactory_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIRefreshContainerFactoryVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CControls_CIRefreshContainerFactory* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CControls_CIRefreshContainerFactory* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CControls_CIRefreshContainerFactory* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CControls_CIRefreshContainerFactory* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CControls_CIRefreshContainerFactory* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CControls_CIRefreshContainerFactory* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* CreateInstance)(__x_ABI_CWindows_CUI_CXaml_CControls_CIRefreshContainerFactory* This,
        IInspectable* baseInterface,
        IInspectable** innerInterface,
        __x_ABI_CWindows_CUI_CXaml_CControls_CIRefreshContainer** value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CIRefreshContainerFactoryVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CIRefreshContainerFactory
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIRefreshContainerFactoryVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIRefreshContainerFactory;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIRefreshContainerFactory_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIRefreshContainerStatics_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CControls_CIRefreshContainerStatics_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIRefreshContainerStaticsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CControls_CIRefreshContainerStatics* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CControls_CIRefreshContainerStatics* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CControls_CIRefreshContainerStatics* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CControls_CIRefreshContainerStatics* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CControls_CIRefreshContainerStatics* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CControls_CIRefreshContainerStatics* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_VisualizerProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CIRefreshContainerStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_PullDirectionProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CIRefreshContainerStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CIRefreshContainerStaticsVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CIRefreshContainerStatics
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIRefreshContainerStaticsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIRefreshContainerStatics;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIRefreshContainerStatics_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIRefreshInteractionRatioChangedEventArgs_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CControls_CIRefreshInteractionRatioChangedEventArgs_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIRefreshInteractionRatioChangedEventArgsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CControls_CIRefreshInteractionRatioChangedEventArgs* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CControls_CIRefreshInteractionRatioChangedEventArgs* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CControls_CIRefreshInteractionRatioChangedEventArgs* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CControls_CIRefreshInteractionRatioChangedEventArgs* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CControls_CIRefreshInteractionRatioChangedEventArgs* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CControls_CIRefreshInteractionRatioChangedEventArgs* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_InteractionRatio)(__x_ABI_CWindows_CUI_CXaml_CControls_CIRefreshInteractionRatioChangedEventArgs* This,
        DOUBLE* value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CIRefreshInteractionRatioChangedEventArgsVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CIRefreshInteractionRatioChangedEventArgs
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIRefreshInteractionRatioChangedEventArgsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIRefreshInteractionRatioChangedEventArgs;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIRefreshInteractionRatioChangedEventArgs_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIRefreshRequestedEventArgs_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CControls_CIRefreshRequestedEventArgs_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIRefreshRequestedEventArgsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CControls_CIRefreshRequestedEventArgs* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CControls_CIRefreshRequestedEventArgs* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CControls_CIRefreshRequestedEventArgs* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CControls_CIRefreshRequestedEventArgs* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CControls_CIRefreshRequestedEventArgs* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CControls_CIRefreshRequestedEventArgs* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* GetDeferral)(__x_ABI_CWindows_CUI_CXaml_CControls_CIRefreshRequestedEventArgs* This,
        __x_ABI_CWindows_CFoundation_CIDeferral** result);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CIRefreshRequestedEventArgsVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CIRefreshRequestedEventArgs
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIRefreshRequestedEventArgsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIRefreshRequestedEventArgs;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIRefreshRequestedEventArgs_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIRefreshStateChangedEventArgs_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CControls_CIRefreshStateChangedEventArgs_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIRefreshStateChangedEventArgsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CControls_CIRefreshStateChangedEventArgs* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CControls_CIRefreshStateChangedEventArgs* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CControls_CIRefreshStateChangedEventArgs* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CControls_CIRefreshStateChangedEventArgs* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CControls_CIRefreshStateChangedEventArgs* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CControls_CIRefreshStateChangedEventArgs* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_OldState)(__x_ABI_CWindows_CUI_CXaml_CControls_CIRefreshStateChangedEventArgs* This,
        enum __x_ABI_CWindows_CUI_CXaml_CControls_CRefreshVisualizerState* value);
    HRESULT (STDMETHODCALLTYPE* get_NewState)(__x_ABI_CWindows_CUI_CXaml_CControls_CIRefreshStateChangedEventArgs* This,
        enum __x_ABI_CWindows_CUI_CXaml_CControls_CRefreshVisualizerState* value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CIRefreshStateChangedEventArgsVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CIRefreshStateChangedEventArgs
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIRefreshStateChangedEventArgsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIRefreshStateChangedEventArgs;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIRefreshStateChangedEventArgs_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIRefreshVisualizer_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CControls_CIRefreshVisualizer_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIRefreshVisualizerVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CControls_CIRefreshVisualizer* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CControls_CIRefreshVisualizer* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CControls_CIRefreshVisualizer* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CControls_CIRefreshVisualizer* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CControls_CIRefreshVisualizer* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CControls_CIRefreshVisualizer* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* RequestRefresh)(__x_ABI_CWindows_CUI_CXaml_CControls_CIRefreshVisualizer* This);
    HRESULT (STDMETHODCALLTYPE* get_Orientation)(__x_ABI_CWindows_CUI_CXaml_CControls_CIRefreshVisualizer* This,
        enum __x_ABI_CWindows_CUI_CXaml_CControls_CRefreshVisualizerOrientation* value);
    HRESULT (STDMETHODCALLTYPE* put_Orientation)(__x_ABI_CWindows_CUI_CXaml_CControls_CIRefreshVisualizer* This,
        enum __x_ABI_CWindows_CUI_CXaml_CControls_CRefreshVisualizerOrientation value);
    HRESULT (STDMETHODCALLTYPE* get_Content)(__x_ABI_CWindows_CUI_CXaml_CControls_CIRefreshVisualizer* This,
        __x_ABI_CWindows_CUI_CXaml_CIUIElement** value);
    HRESULT (STDMETHODCALLTYPE* put_Content)(__x_ABI_CWindows_CUI_CXaml_CControls_CIRefreshVisualizer* This,
        __x_ABI_CWindows_CUI_CXaml_CIUIElement* value);
    HRESULT (STDMETHODCALLTYPE* get_State)(__x_ABI_CWindows_CUI_CXaml_CControls_CIRefreshVisualizer* This,
        enum __x_ABI_CWindows_CUI_CXaml_CControls_CRefreshVisualizerState* value);
    HRESULT (STDMETHODCALLTYPE* add_RefreshRequested)(__x_ABI_CWindows_CUI_CXaml_CControls_CIRefreshVisualizer* This,
        __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CRefreshVisualizer___x_ABI_CWindows__CUI__CXaml__CControls__CRefreshRequestedEventArgs* handler,
        EventRegistrationToken* token);
    HRESULT (STDMETHODCALLTYPE* remove_RefreshRequested)(__x_ABI_CWindows_CUI_CXaml_CControls_CIRefreshVisualizer* This,
        EventRegistrationToken token);
    HRESULT (STDMETHODCALLTYPE* add_RefreshStateChanged)(__x_ABI_CWindows_CUI_CXaml_CControls_CIRefreshVisualizer* This,
        __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CRefreshVisualizer___x_ABI_CWindows__CUI__CXaml__CControls__CRefreshStateChangedEventArgs* handler,
        EventRegistrationToken* token);
    HRESULT (STDMETHODCALLTYPE* remove_RefreshStateChanged)(__x_ABI_CWindows_CUI_CXaml_CControls_CIRefreshVisualizer* This,
        EventRegistrationToken token);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CIRefreshVisualizerVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CIRefreshVisualizer
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIRefreshVisualizerVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIRefreshVisualizer;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIRefreshVisualizer_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIRefreshVisualizerFactory_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CControls_CIRefreshVisualizerFactory_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIRefreshVisualizerFactoryVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CControls_CIRefreshVisualizerFactory* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CControls_CIRefreshVisualizerFactory* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CControls_CIRefreshVisualizerFactory* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CControls_CIRefreshVisualizerFactory* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CControls_CIRefreshVisualizerFactory* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CControls_CIRefreshVisualizerFactory* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* CreateInstance)(__x_ABI_CWindows_CUI_CXaml_CControls_CIRefreshVisualizerFactory* This,
        IInspectable* baseInterface,
        IInspectable** innerInterface,
        __x_ABI_CWindows_CUI_CXaml_CControls_CIRefreshVisualizer** value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CIRefreshVisualizerFactoryVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CIRefreshVisualizerFactory
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIRefreshVisualizerFactoryVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIRefreshVisualizerFactory;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIRefreshVisualizerFactory_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIRefreshVisualizerStatics_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CControls_CIRefreshVisualizerStatics_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIRefreshVisualizerStaticsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CControls_CIRefreshVisualizerStatics* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CControls_CIRefreshVisualizerStatics* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CControls_CIRefreshVisualizerStatics* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CControls_CIRefreshVisualizerStatics* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CControls_CIRefreshVisualizerStatics* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CControls_CIRefreshVisualizerStatics* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_InfoProviderProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CIRefreshVisualizerStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_OrientationProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CIRefreshVisualizerStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_ContentProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CIRefreshVisualizerStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_StateProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CIRefreshVisualizerStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CIRefreshVisualizerStaticsVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CIRefreshVisualizerStatics
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIRefreshVisualizerStaticsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIRefreshVisualizerStatics;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIRefreshVisualizerStatics_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIRelativePanel_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CControls_CIRelativePanel_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIRelativePanelVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CControls_CIRelativePanel* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CControls_CIRelativePanel* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CControls_CIRelativePanel* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CControls_CIRelativePanel* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CControls_CIRelativePanel* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CControls_CIRelativePanel* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_BorderBrush)(__x_ABI_CWindows_CUI_CXaml_CControls_CIRelativePanel* This,
        __x_ABI_CWindows_CUI_CXaml_CMedia_CIBrush** value);
    HRESULT (STDMETHODCALLTYPE* put_BorderBrush)(__x_ABI_CWindows_CUI_CXaml_CControls_CIRelativePanel* This,
        __x_ABI_CWindows_CUI_CXaml_CMedia_CIBrush* value);
    HRESULT (STDMETHODCALLTYPE* get_BorderThickness)(__x_ABI_CWindows_CUI_CXaml_CControls_CIRelativePanel* This,
        struct __x_ABI_CWindows_CUI_CXaml_CThickness* value);
    HRESULT (STDMETHODCALLTYPE* put_BorderThickness)(__x_ABI_CWindows_CUI_CXaml_CControls_CIRelativePanel* This,
        struct __x_ABI_CWindows_CUI_CXaml_CThickness value);
    HRESULT (STDMETHODCALLTYPE* get_CornerRadius)(__x_ABI_CWindows_CUI_CXaml_CControls_CIRelativePanel* This,
        struct __x_ABI_CWindows_CUI_CXaml_CCornerRadius* value);
    HRESULT (STDMETHODCALLTYPE* put_CornerRadius)(__x_ABI_CWindows_CUI_CXaml_CControls_CIRelativePanel* This,
        struct __x_ABI_CWindows_CUI_CXaml_CCornerRadius value);
    HRESULT (STDMETHODCALLTYPE* get_Padding)(__x_ABI_CWindows_CUI_CXaml_CControls_CIRelativePanel* This,
        struct __x_ABI_CWindows_CUI_CXaml_CThickness* value);
    HRESULT (STDMETHODCALLTYPE* put_Padding)(__x_ABI_CWindows_CUI_CXaml_CControls_CIRelativePanel* This,
        struct __x_ABI_CWindows_CUI_CXaml_CThickness value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CIRelativePanelVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CIRelativePanel
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIRelativePanelVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIRelativePanel;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIRelativePanel_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIRelativePanel2_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CControls_CIRelativePanel2_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIRelativePanel2Vtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CControls_CIRelativePanel2* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CControls_CIRelativePanel2* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CControls_CIRelativePanel2* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CControls_CIRelativePanel2* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CControls_CIRelativePanel2* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CControls_CIRelativePanel2* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_BackgroundSizing)(__x_ABI_CWindows_CUI_CXaml_CControls_CIRelativePanel2* This,
        enum __x_ABI_CWindows_CUI_CXaml_CControls_CBackgroundSizing* value);
    HRESULT (STDMETHODCALLTYPE* put_BackgroundSizing)(__x_ABI_CWindows_CUI_CXaml_CControls_CIRelativePanel2* This,
        enum __x_ABI_CWindows_CUI_CXaml_CControls_CBackgroundSizing value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CIRelativePanel2Vtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CIRelativePanel2
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIRelativePanel2Vtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIRelativePanel2;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIRelativePanel2_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIRelativePanelFactory_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CControls_CIRelativePanelFactory_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIRelativePanelFactoryVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CControls_CIRelativePanelFactory* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CControls_CIRelativePanelFactory* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CControls_CIRelativePanelFactory* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CControls_CIRelativePanelFactory* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CControls_CIRelativePanelFactory* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CControls_CIRelativePanelFactory* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* CreateInstance)(__x_ABI_CWindows_CUI_CXaml_CControls_CIRelativePanelFactory* This,
        IInspectable* baseInterface,
        IInspectable** innerInterface,
        __x_ABI_CWindows_CUI_CXaml_CControls_CIRelativePanel** value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CIRelativePanelFactoryVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CIRelativePanelFactory
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIRelativePanelFactoryVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIRelativePanelFactory;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIRelativePanelFactory_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIRelativePanelStatics_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CControls_CIRelativePanelStatics_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIRelativePanelStaticsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CControls_CIRelativePanelStatics* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CControls_CIRelativePanelStatics* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CControls_CIRelativePanelStatics* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CControls_CIRelativePanelStatics* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CControls_CIRelativePanelStatics* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CControls_CIRelativePanelStatics* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_LeftOfProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CIRelativePanelStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* GetLeftOf)(__x_ABI_CWindows_CUI_CXaml_CControls_CIRelativePanelStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIUIElement* element,
        IInspectable** result);
    HRESULT (STDMETHODCALLTYPE* SetLeftOf)(__x_ABI_CWindows_CUI_CXaml_CControls_CIRelativePanelStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIUIElement* element,
        IInspectable* value);
    HRESULT (STDMETHODCALLTYPE* get_AboveProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CIRelativePanelStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* GetAbove)(__x_ABI_CWindows_CUI_CXaml_CControls_CIRelativePanelStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIUIElement* element,
        IInspectable** result);
    HRESULT (STDMETHODCALLTYPE* SetAbove)(__x_ABI_CWindows_CUI_CXaml_CControls_CIRelativePanelStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIUIElement* element,
        IInspectable* value);
    HRESULT (STDMETHODCALLTYPE* get_RightOfProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CIRelativePanelStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* GetRightOf)(__x_ABI_CWindows_CUI_CXaml_CControls_CIRelativePanelStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIUIElement* element,
        IInspectable** result);
    HRESULT (STDMETHODCALLTYPE* SetRightOf)(__x_ABI_CWindows_CUI_CXaml_CControls_CIRelativePanelStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIUIElement* element,
        IInspectable* value);
    HRESULT (STDMETHODCALLTYPE* get_BelowProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CIRelativePanelStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* GetBelow)(__x_ABI_CWindows_CUI_CXaml_CControls_CIRelativePanelStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIUIElement* element,
        IInspectable** result);
    HRESULT (STDMETHODCALLTYPE* SetBelow)(__x_ABI_CWindows_CUI_CXaml_CControls_CIRelativePanelStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIUIElement* element,
        IInspectable* value);
    HRESULT (STDMETHODCALLTYPE* get_AlignHorizontalCenterWithProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CIRelativePanelStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* GetAlignHorizontalCenterWith)(__x_ABI_CWindows_CUI_CXaml_CControls_CIRelativePanelStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIUIElement* element,
        IInspectable** result);
    HRESULT (STDMETHODCALLTYPE* SetAlignHorizontalCenterWith)(__x_ABI_CWindows_CUI_CXaml_CControls_CIRelativePanelStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIUIElement* element,
        IInspectable* value);
    HRESULT (STDMETHODCALLTYPE* get_AlignVerticalCenterWithProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CIRelativePanelStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* GetAlignVerticalCenterWith)(__x_ABI_CWindows_CUI_CXaml_CControls_CIRelativePanelStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIUIElement* element,
        IInspectable** result);
    HRESULT (STDMETHODCALLTYPE* SetAlignVerticalCenterWith)(__x_ABI_CWindows_CUI_CXaml_CControls_CIRelativePanelStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIUIElement* element,
        IInspectable* value);
    HRESULT (STDMETHODCALLTYPE* get_AlignLeftWithProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CIRelativePanelStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* GetAlignLeftWith)(__x_ABI_CWindows_CUI_CXaml_CControls_CIRelativePanelStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIUIElement* element,
        IInspectable** result);
    HRESULT (STDMETHODCALLTYPE* SetAlignLeftWith)(__x_ABI_CWindows_CUI_CXaml_CControls_CIRelativePanelStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIUIElement* element,
        IInspectable* value);
    HRESULT (STDMETHODCALLTYPE* get_AlignTopWithProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CIRelativePanelStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* GetAlignTopWith)(__x_ABI_CWindows_CUI_CXaml_CControls_CIRelativePanelStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIUIElement* element,
        IInspectable** result);
    HRESULT (STDMETHODCALLTYPE* SetAlignTopWith)(__x_ABI_CWindows_CUI_CXaml_CControls_CIRelativePanelStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIUIElement* element,
        IInspectable* value);
    HRESULT (STDMETHODCALLTYPE* get_AlignRightWithProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CIRelativePanelStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* GetAlignRightWith)(__x_ABI_CWindows_CUI_CXaml_CControls_CIRelativePanelStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIUIElement* element,
        IInspectable** result);
    HRESULT (STDMETHODCALLTYPE* SetAlignRightWith)(__x_ABI_CWindows_CUI_CXaml_CControls_CIRelativePanelStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIUIElement* element,
        IInspectable* value);
    HRESULT (STDMETHODCALLTYPE* get_AlignBottomWithProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CIRelativePanelStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* GetAlignBottomWith)(__x_ABI_CWindows_CUI_CXaml_CControls_CIRelativePanelStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIUIElement* element,
        IInspectable** result);
    HRESULT (STDMETHODCALLTYPE* SetAlignBottomWith)(__x_ABI_CWindows_CUI_CXaml_CControls_CIRelativePanelStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIUIElement* element,
        IInspectable* value);
    HRESULT (STDMETHODCALLTYPE* get_AlignLeftWithPanelProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CIRelativePanelStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* GetAlignLeftWithPanel)(__x_ABI_CWindows_CUI_CXaml_CControls_CIRelativePanelStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIUIElement* element,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* SetAlignLeftWithPanel)(__x_ABI_CWindows_CUI_CXaml_CControls_CIRelativePanelStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIUIElement* element,
        boolean value);
    HRESULT (STDMETHODCALLTYPE* get_AlignTopWithPanelProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CIRelativePanelStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* GetAlignTopWithPanel)(__x_ABI_CWindows_CUI_CXaml_CControls_CIRelativePanelStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIUIElement* element,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* SetAlignTopWithPanel)(__x_ABI_CWindows_CUI_CXaml_CControls_CIRelativePanelStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIUIElement* element,
        boolean value);
    HRESULT (STDMETHODCALLTYPE* get_AlignRightWithPanelProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CIRelativePanelStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* GetAlignRightWithPanel)(__x_ABI_CWindows_CUI_CXaml_CControls_CIRelativePanelStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIUIElement* element,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* SetAlignRightWithPanel)(__x_ABI_CWindows_CUI_CXaml_CControls_CIRelativePanelStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIUIElement* element,
        boolean value);
    HRESULT (STDMETHODCALLTYPE* get_AlignBottomWithPanelProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CIRelativePanelStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* GetAlignBottomWithPanel)(__x_ABI_CWindows_CUI_CXaml_CControls_CIRelativePanelStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIUIElement* element,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* SetAlignBottomWithPanel)(__x_ABI_CWindows_CUI_CXaml_CControls_CIRelativePanelStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIUIElement* element,
        boolean value);
    HRESULT (STDMETHODCALLTYPE* get_AlignHorizontalCenterWithPanelProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CIRelativePanelStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* GetAlignHorizontalCenterWithPanel)(__x_ABI_CWindows_CUI_CXaml_CControls_CIRelativePanelStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIUIElement* element,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* SetAlignHorizontalCenterWithPanel)(__x_ABI_CWindows_CUI_CXaml_CControls_CIRelativePanelStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIUIElement* element,
        boolean value);
    HRESULT (STDMETHODCALLTYPE* get_AlignVerticalCenterWithPanelProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CIRelativePanelStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* GetAlignVerticalCenterWithPanel)(__x_ABI_CWindows_CUI_CXaml_CControls_CIRelativePanelStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIUIElement* element,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* SetAlignVerticalCenterWithPanel)(__x_ABI_CWindows_CUI_CXaml_CControls_CIRelativePanelStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIUIElement* element,
        boolean value);
    HRESULT (STDMETHODCALLTYPE* get_BorderBrushProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CIRelativePanelStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_BorderThicknessProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CIRelativePanelStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_CornerRadiusProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CIRelativePanelStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_PaddingProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CIRelativePanelStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CIRelativePanelStaticsVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CIRelativePanelStatics
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIRelativePanelStaticsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIRelativePanelStatics;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIRelativePanelStatics_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIRelativePanelStatics2_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CControls_CIRelativePanelStatics2_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIRelativePanelStatics2Vtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CControls_CIRelativePanelStatics2* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CControls_CIRelativePanelStatics2* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CControls_CIRelativePanelStatics2* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CControls_CIRelativePanelStatics2* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CControls_CIRelativePanelStatics2* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CControls_CIRelativePanelStatics2* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_BackgroundSizingProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CIRelativePanelStatics2* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CIRelativePanelStatics2Vtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CIRelativePanelStatics2
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIRelativePanelStatics2Vtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIRelativePanelStatics2;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIRelativePanelStatics2_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBox_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBox_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBoxVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBox* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBox* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBox* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBox* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBox* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBox* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_IsReadOnly)(__x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBox* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* put_IsReadOnly)(__x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBox* This,
        boolean value);
    HRESULT (STDMETHODCALLTYPE* get_AcceptsReturn)(__x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBox* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* put_AcceptsReturn)(__x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBox* This,
        boolean value);
    HRESULT (STDMETHODCALLTYPE* get_TextAlignment)(__x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBox* This,
        enum __x_ABI_CWindows_CUI_CXaml_CTextAlignment* value);
    HRESULT (STDMETHODCALLTYPE* put_TextAlignment)(__x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBox* This,
        enum __x_ABI_CWindows_CUI_CXaml_CTextAlignment value);
    HRESULT (STDMETHODCALLTYPE* get_TextWrapping)(__x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBox* This,
        enum __x_ABI_CWindows_CUI_CXaml_CTextWrapping* value);
    HRESULT (STDMETHODCALLTYPE* put_TextWrapping)(__x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBox* This,
        enum __x_ABI_CWindows_CUI_CXaml_CTextWrapping value);
    HRESULT (STDMETHODCALLTYPE* get_IsSpellCheckEnabled)(__x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBox* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* put_IsSpellCheckEnabled)(__x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBox* This,
        boolean value);
    HRESULT (STDMETHODCALLTYPE* get_IsTextPredictionEnabled)(__x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBox* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* put_IsTextPredictionEnabled)(__x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBox* This,
        boolean value);
    HRESULT (STDMETHODCALLTYPE* get_Document)(__x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBox* This,
        __x_ABI_CWindows_CUI_CText_CITextDocument** value);
    HRESULT (STDMETHODCALLTYPE* get_InputScope)(__x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBox* This,
        __x_ABI_CWindows_CUI_CXaml_CInput_CIInputScope** value);
    HRESULT (STDMETHODCALLTYPE* put_InputScope)(__x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBox* This,
        __x_ABI_CWindows_CUI_CXaml_CInput_CIInputScope* value);
    HRESULT (STDMETHODCALLTYPE* add_TextChanged)(__x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBox* This,
        __x_ABI_CWindows_CUI_CXaml_CIRoutedEventHandler* handler,
        EventRegistrationToken* token);
    HRESULT (STDMETHODCALLTYPE* remove_TextChanged)(__x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBox* This,
        EventRegistrationToken token);
    HRESULT (STDMETHODCALLTYPE* add_SelectionChanged)(__x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBox* This,
        __x_ABI_CWindows_CUI_CXaml_CIRoutedEventHandler* handler,
        EventRegistrationToken* token);
    HRESULT (STDMETHODCALLTYPE* remove_SelectionChanged)(__x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBox* This,
        EventRegistrationToken token);
    HRESULT (STDMETHODCALLTYPE* add_ContextMenuOpening)(__x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBox* This,
        __x_ABI_CWindows_CUI_CXaml_CControls_CIContextMenuOpeningEventHandler* handler,
        EventRegistrationToken* token);
    HRESULT (STDMETHODCALLTYPE* remove_ContextMenuOpening)(__x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBox* This,
        EventRegistrationToken token);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBoxVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBox
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBoxVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBox;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBox_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBox2_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBox2_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBox2Vtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBox2* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBox2* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBox2* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBox2* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBox2* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBox2* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Header)(__x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBox2* This,
        IInspectable** value);
    HRESULT (STDMETHODCALLTYPE* put_Header)(__x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBox2* This,
        IInspectable* value);
    HRESULT (STDMETHODCALLTYPE* get_HeaderTemplate)(__x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBox2* This,
        __x_ABI_CWindows_CUI_CXaml_CIDataTemplate** value);
    HRESULT (STDMETHODCALLTYPE* put_HeaderTemplate)(__x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBox2* This,
        __x_ABI_CWindows_CUI_CXaml_CIDataTemplate* value);
    HRESULT (STDMETHODCALLTYPE* get_PlaceholderText)(__x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBox2* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* put_PlaceholderText)(__x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBox2* This,
        HSTRING value);
    HRESULT (STDMETHODCALLTYPE* get_SelectionHighlightColor)(__x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBox2* This,
        __x_ABI_CWindows_CUI_CXaml_CMedia_CISolidColorBrush** value);
    HRESULT (STDMETHODCALLTYPE* put_SelectionHighlightColor)(__x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBox2* This,
        __x_ABI_CWindows_CUI_CXaml_CMedia_CISolidColorBrush* value);
    HRESULT (STDMETHODCALLTYPE* get_PreventKeyboardDisplayOnProgrammaticFocus)(__x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBox2* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* put_PreventKeyboardDisplayOnProgrammaticFocus)(__x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBox2* This,
        boolean value);
    HRESULT (STDMETHODCALLTYPE* get_IsColorFontEnabled)(__x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBox2* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* put_IsColorFontEnabled)(__x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBox2* This,
        boolean value);
    HRESULT (STDMETHODCALLTYPE* add_Paste)(__x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBox2* This,
        __x_ABI_CWindows_CUI_CXaml_CControls_CITextControlPasteEventHandler* handler,
        EventRegistrationToken* token);
    HRESULT (STDMETHODCALLTYPE* remove_Paste)(__x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBox2* This,
        EventRegistrationToken token);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBox2Vtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBox2
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBox2Vtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBox2;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBox2_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBox3_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBox3_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBox3Vtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBox3* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBox3* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBox3* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBox3* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBox3* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBox3* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* add_TextCompositionStarted)(__x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBox3* This,
        __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CRichEditBox___x_ABI_CWindows__CUI__CXaml__CControls__CTextCompositionStartedEventArgs* handler,
        EventRegistrationToken* token);
    HRESULT (STDMETHODCALLTYPE* remove_TextCompositionStarted)(__x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBox3* This,
        EventRegistrationToken token);
    HRESULT (STDMETHODCALLTYPE* add_TextCompositionChanged)(__x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBox3* This,
        __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CRichEditBox___x_ABI_CWindows__CUI__CXaml__CControls__CTextCompositionChangedEventArgs* handler,
        EventRegistrationToken* token);
    HRESULT (STDMETHODCALLTYPE* remove_TextCompositionChanged)(__x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBox3* This,
        EventRegistrationToken token);
    HRESULT (STDMETHODCALLTYPE* add_TextCompositionEnded)(__x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBox3* This,
        __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CRichEditBox___x_ABI_CWindows__CUI__CXaml__CControls__CTextCompositionEndedEventArgs* handler,
        EventRegistrationToken* token);
    HRESULT (STDMETHODCALLTYPE* remove_TextCompositionEnded)(__x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBox3* This,
        EventRegistrationToken token);
    HRESULT (STDMETHODCALLTYPE* get_TextReadingOrder)(__x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBox3* This,
        enum __x_ABI_CWindows_CUI_CXaml_CTextReadingOrder* value);
    HRESULT (STDMETHODCALLTYPE* put_TextReadingOrder)(__x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBox3* This,
        enum __x_ABI_CWindows_CUI_CXaml_CTextReadingOrder value);
    HRESULT (STDMETHODCALLTYPE* get_DesiredCandidateWindowAlignment)(__x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBox3* This,
        enum __x_ABI_CWindows_CUI_CXaml_CControls_CCandidateWindowAlignment* value);
    HRESULT (STDMETHODCALLTYPE* put_DesiredCandidateWindowAlignment)(__x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBox3* This,
        enum __x_ABI_CWindows_CUI_CXaml_CControls_CCandidateWindowAlignment value);
    HRESULT (STDMETHODCALLTYPE* add_CandidateWindowBoundsChanged)(__x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBox3* This,
        __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CRichEditBox___x_ABI_CWindows__CUI__CXaml__CControls__CCandidateWindowBoundsChangedEventArgs* handler,
        EventRegistrationToken* token);
    HRESULT (STDMETHODCALLTYPE* remove_CandidateWindowBoundsChanged)(__x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBox3* This,
        EventRegistrationToken token);
    HRESULT (STDMETHODCALLTYPE* add_TextChanging)(__x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBox3* This,
        __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CRichEditBox___x_ABI_CWindows__CUI__CXaml__CControls__CRichEditBoxTextChangingEventArgs* handler,
        EventRegistrationToken* token);
    HRESULT (STDMETHODCALLTYPE* remove_TextChanging)(__x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBox3* This,
        EventRegistrationToken token);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBox3Vtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBox3
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBox3Vtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBox3;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBox3_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBox4_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBox4_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBox4Vtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBox4* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBox4* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBox4* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBox4* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBox4* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBox4* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* GetLinguisticAlternativesAsync)(__x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBox4* This,
        __x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1_HSTRING** operation);
    HRESULT (STDMETHODCALLTYPE* get_ClipboardCopyFormat)(__x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBox4* This,
        enum __x_ABI_CWindows_CUI_CXaml_CControls_CRichEditClipboardFormat* value);
    HRESULT (STDMETHODCALLTYPE* put_ClipboardCopyFormat)(__x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBox4* This,
        enum __x_ABI_CWindows_CUI_CXaml_CControls_CRichEditClipboardFormat value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBox4Vtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBox4
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBox4Vtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBox4;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBox4_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBox5_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBox5_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBox5Vtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBox5* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBox5* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBox5* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBox5* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBox5* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBox5* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_SelectionHighlightColorWhenNotFocused)(__x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBox5* This,
        __x_ABI_CWindows_CUI_CXaml_CMedia_CISolidColorBrush** value);
    HRESULT (STDMETHODCALLTYPE* put_SelectionHighlightColorWhenNotFocused)(__x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBox5* This,
        __x_ABI_CWindows_CUI_CXaml_CMedia_CISolidColorBrush* value);
    HRESULT (STDMETHODCALLTYPE* get_MaxLength)(__x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBox5* This,
        INT32* value);
    HRESULT (STDMETHODCALLTYPE* put_MaxLength)(__x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBox5* This,
        INT32 value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBox5Vtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBox5
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBox5Vtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBox5;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBox5_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBox6_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBox6_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBox6Vtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBox6* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBox6* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBox6* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBox6* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBox6* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBox6* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_HorizontalTextAlignment)(__x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBox6* This,
        enum __x_ABI_CWindows_CUI_CXaml_CTextAlignment* value);
    HRESULT (STDMETHODCALLTYPE* put_HorizontalTextAlignment)(__x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBox6* This,
        enum __x_ABI_CWindows_CUI_CXaml_CTextAlignment value);
    HRESULT (STDMETHODCALLTYPE* get_CharacterCasing)(__x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBox6* This,
        enum __x_ABI_CWindows_CUI_CXaml_CControls_CCharacterCasing* value);
    HRESULT (STDMETHODCALLTYPE* put_CharacterCasing)(__x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBox6* This,
        enum __x_ABI_CWindows_CUI_CXaml_CControls_CCharacterCasing value);
    HRESULT (STDMETHODCALLTYPE* get_DisabledFormattingAccelerators)(__x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBox6* This,
        enum __x_ABI_CWindows_CUI_CXaml_CControls_CDisabledFormattingAccelerators* value);
    HRESULT (STDMETHODCALLTYPE* put_DisabledFormattingAccelerators)(__x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBox6* This,
        enum __x_ABI_CWindows_CUI_CXaml_CControls_CDisabledFormattingAccelerators value);
    HRESULT (STDMETHODCALLTYPE* add_CopyingToClipboard)(__x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBox6* This,
        __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CRichEditBox___x_ABI_CWindows__CUI__CXaml__CControls__CTextControlCopyingToClipboardEventArgs* handler,
        EventRegistrationToken* token);
    HRESULT (STDMETHODCALLTYPE* remove_CopyingToClipboard)(__x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBox6* This,
        EventRegistrationToken token);
    HRESULT (STDMETHODCALLTYPE* add_CuttingToClipboard)(__x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBox6* This,
        __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CRichEditBox___x_ABI_CWindows__CUI__CXaml__CControls__CTextControlCuttingToClipboardEventArgs* handler,
        EventRegistrationToken* token);
    HRESULT (STDMETHODCALLTYPE* remove_CuttingToClipboard)(__x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBox6* This,
        EventRegistrationToken token);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBox6Vtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBox6
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBox6Vtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBox6;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBox6_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBox7_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBox7_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBox7Vtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBox7* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBox7* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBox7* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBox7* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBox7* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBox7* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_ContentLinkForegroundColor)(__x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBox7* This,
        __x_ABI_CWindows_CUI_CXaml_CMedia_CISolidColorBrush** value);
    HRESULT (STDMETHODCALLTYPE* put_ContentLinkForegroundColor)(__x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBox7* This,
        __x_ABI_CWindows_CUI_CXaml_CMedia_CISolidColorBrush* value);
    HRESULT (STDMETHODCALLTYPE* get_ContentLinkBackgroundColor)(__x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBox7* This,
        __x_ABI_CWindows_CUI_CXaml_CMedia_CISolidColorBrush** value);
    HRESULT (STDMETHODCALLTYPE* put_ContentLinkBackgroundColor)(__x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBox7* This,
        __x_ABI_CWindows_CUI_CXaml_CMedia_CISolidColorBrush* value);
    HRESULT (STDMETHODCALLTYPE* get_ContentLinkProviders)(__x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBox7* This,
        __x_ABI_CWindows_CUI_CXaml_CDocuments_CIContentLinkProviderCollection** value);
    HRESULT (STDMETHODCALLTYPE* put_ContentLinkProviders)(__x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBox7* This,
        __x_ABI_CWindows_CUI_CXaml_CDocuments_CIContentLinkProviderCollection* value);
    HRESULT (STDMETHODCALLTYPE* get_HandwritingView)(__x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBox7* This,
        __x_ABI_CWindows_CUI_CXaml_CControls_CIHandwritingView** value);
    HRESULT (STDMETHODCALLTYPE* put_HandwritingView)(__x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBox7* This,
        __x_ABI_CWindows_CUI_CXaml_CControls_CIHandwritingView* value);
    HRESULT (STDMETHODCALLTYPE* get_IsHandwritingViewEnabled)(__x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBox7* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* put_IsHandwritingViewEnabled)(__x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBox7* This,
        boolean value);
    HRESULT (STDMETHODCALLTYPE* add_ContentLinkChanged)(__x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBox7* This,
        __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CRichEditBox___x_ABI_CWindows__CUI__CXaml__CControls__CContentLinkChangedEventArgs* handler,
        EventRegistrationToken* token);
    HRESULT (STDMETHODCALLTYPE* remove_ContentLinkChanged)(__x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBox7* This,
        EventRegistrationToken token);
    HRESULT (STDMETHODCALLTYPE* add_ContentLinkInvoked)(__x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBox7* This,
        __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CRichEditBox___x_ABI_CWindows__CUI__CXaml__CDocuments__CContentLinkInvokedEventArgs* handler,
        EventRegistrationToken* token);
    HRESULT (STDMETHODCALLTYPE* remove_ContentLinkInvoked)(__x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBox7* This,
        EventRegistrationToken token);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBox7Vtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBox7
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBox7Vtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBox7;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBox7_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBox8_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBox8_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBox8Vtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBox8* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBox8* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBox8* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBox8* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBox8* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBox8* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_TextDocument)(__x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBox8* This,
        __x_ABI_CWindows_CUI_CText_CITextDocument** value);
    HRESULT (STDMETHODCALLTYPE* get_SelectionFlyout)(__x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBox8* This,
        __x_ABI_CWindows_CUI_CXaml_CControls_CPrimitives_CIFlyoutBase** value);
    HRESULT (STDMETHODCALLTYPE* put_SelectionFlyout)(__x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBox8* This,
        __x_ABI_CWindows_CUI_CXaml_CControls_CPrimitives_CIFlyoutBase* value);
    HRESULT (STDMETHODCALLTYPE* get_ProofingMenuFlyout)(__x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBox8* This,
        __x_ABI_CWindows_CUI_CXaml_CControls_CPrimitives_CIFlyoutBase** value);
    HRESULT (STDMETHODCALLTYPE* get_Description)(__x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBox8* This,
        IInspectable** value);
    HRESULT (STDMETHODCALLTYPE* put_Description)(__x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBox8* This,
        IInspectable* value);
    HRESULT (STDMETHODCALLTYPE* add_SelectionChanging)(__x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBox8* This,
        __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CRichEditBox___x_ABI_CWindows__CUI__CXaml__CControls__CRichEditBoxSelectionChangingEventArgs* handler,
        EventRegistrationToken* token);
    HRESULT (STDMETHODCALLTYPE* remove_SelectionChanging)(__x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBox8* This,
        EventRegistrationToken token);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBox8Vtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBox8
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBox8Vtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBox8;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBox8_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBoxFactory_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBoxFactory_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBoxFactoryVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBoxFactory* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBoxFactory* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBoxFactory* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBoxFactory* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBoxFactory* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBoxFactory* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* CreateInstance)(__x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBoxFactory* This,
        IInspectable* baseInterface,
        IInspectable** innerInterface,
        __x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBox** value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBoxFactoryVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBoxFactory
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBoxFactoryVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBoxFactory;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBoxFactory_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBoxSelectionChangingEventArgs_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBoxSelectionChangingEventArgs_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBoxSelectionChangingEventArgsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBoxSelectionChangingEventArgs* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBoxSelectionChangingEventArgs* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBoxSelectionChangingEventArgs* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBoxSelectionChangingEventArgs* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBoxSelectionChangingEventArgs* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBoxSelectionChangingEventArgs* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_SelectionStart)(__x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBoxSelectionChangingEventArgs* This,
        INT32* value);
    HRESULT (STDMETHODCALLTYPE* get_SelectionLength)(__x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBoxSelectionChangingEventArgs* This,
        INT32* value);
    HRESULT (STDMETHODCALLTYPE* get_Cancel)(__x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBoxSelectionChangingEventArgs* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* put_Cancel)(__x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBoxSelectionChangingEventArgs* This,
        boolean value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBoxSelectionChangingEventArgsVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBoxSelectionChangingEventArgs
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBoxSelectionChangingEventArgsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBoxSelectionChangingEventArgs;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBoxSelectionChangingEventArgs_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBoxStatics_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBoxStatics_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBoxStaticsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBoxStatics* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBoxStatics* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBoxStatics* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBoxStatics* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBoxStatics* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBoxStatics* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_IsReadOnlyProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBoxStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_AcceptsReturnProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBoxStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_TextAlignmentProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBoxStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_TextWrappingProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBoxStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_IsSpellCheckEnabledProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBoxStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_IsTextPredictionEnabledProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBoxStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_InputScopeProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBoxStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBoxStaticsVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBoxStatics
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBoxStaticsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBoxStatics;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBoxStatics_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBoxStatics2_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBoxStatics2_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBoxStatics2Vtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBoxStatics2* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBoxStatics2* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBoxStatics2* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBoxStatics2* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBoxStatics2* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBoxStatics2* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_HeaderProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBoxStatics2* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_HeaderTemplateProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBoxStatics2* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_PlaceholderTextProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBoxStatics2* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_SelectionHighlightColorProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBoxStatics2* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_PreventKeyboardDisplayOnProgrammaticFocusProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBoxStatics2* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_IsColorFontEnabledProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBoxStatics2* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBoxStatics2Vtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBoxStatics2
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBoxStatics2Vtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBoxStatics2;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBoxStatics2_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBoxStatics3_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBoxStatics3_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBoxStatics3Vtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBoxStatics3* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBoxStatics3* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBoxStatics3* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBoxStatics3* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBoxStatics3* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBoxStatics3* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_DesiredCandidateWindowAlignmentProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBoxStatics3* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_TextReadingOrderProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBoxStatics3* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBoxStatics3Vtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBoxStatics3
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBoxStatics3Vtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBoxStatics3;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBoxStatics3_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBoxStatics4_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBoxStatics4_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBoxStatics4Vtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBoxStatics4* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBoxStatics4* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBoxStatics4* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBoxStatics4* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBoxStatics4* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBoxStatics4* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_ClipboardCopyFormatProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBoxStatics4* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBoxStatics4Vtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBoxStatics4
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBoxStatics4Vtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBoxStatics4;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBoxStatics4_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBoxStatics5_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBoxStatics5_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBoxStatics5Vtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBoxStatics5* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBoxStatics5* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBoxStatics5* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBoxStatics5* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBoxStatics5* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBoxStatics5* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_SelectionHighlightColorWhenNotFocusedProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBoxStatics5* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_MaxLengthProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBoxStatics5* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBoxStatics5Vtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBoxStatics5
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBoxStatics5Vtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBoxStatics5;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBoxStatics5_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBoxStatics6_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBoxStatics6_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBoxStatics6Vtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBoxStatics6* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBoxStatics6* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBoxStatics6* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBoxStatics6* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBoxStatics6* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBoxStatics6* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_HorizontalTextAlignmentProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBoxStatics6* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_CharacterCasingProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBoxStatics6* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_DisabledFormattingAcceleratorsProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBoxStatics6* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBoxStatics6Vtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBoxStatics6
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBoxStatics6Vtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBoxStatics6;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBoxStatics6_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBoxStatics7_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBoxStatics7_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBoxStatics7Vtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBoxStatics7* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBoxStatics7* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBoxStatics7* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBoxStatics7* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBoxStatics7* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBoxStatics7* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_ContentLinkForegroundColorProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBoxStatics7* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_ContentLinkBackgroundColorProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBoxStatics7* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_ContentLinkProvidersProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBoxStatics7* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_HandwritingViewProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBoxStatics7* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_IsHandwritingViewEnabledProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBoxStatics7* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBoxStatics7Vtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBoxStatics7
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBoxStatics7Vtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBoxStatics7;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBoxStatics7_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBoxStatics8_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBoxStatics8_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBoxStatics8Vtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBoxStatics8* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBoxStatics8* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBoxStatics8* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBoxStatics8* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBoxStatics8* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBoxStatics8* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_SelectionFlyoutProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBoxStatics8* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_ProofingMenuFlyoutProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBoxStatics8* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_DescriptionProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBoxStatics8* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBoxStatics8Vtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBoxStatics8
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBoxStatics8Vtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBoxStatics8;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBoxStatics8_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBoxTextChangingEventArgs_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBoxTextChangingEventArgs_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBoxTextChangingEventArgsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBoxTextChangingEventArgs* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBoxTextChangingEventArgs* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBoxTextChangingEventArgs* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBoxTextChangingEventArgs* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBoxTextChangingEventArgs* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBoxTextChangingEventArgs* This,
            TrustLevel* trustLevel);
    
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBoxTextChangingEventArgsVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBoxTextChangingEventArgs
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBoxTextChangingEventArgsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBoxTextChangingEventArgs;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBoxTextChangingEventArgs_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBoxTextChangingEventArgs2_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBoxTextChangingEventArgs2_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBoxTextChangingEventArgs2Vtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBoxTextChangingEventArgs2* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBoxTextChangingEventArgs2* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBoxTextChangingEventArgs2* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBoxTextChangingEventArgs2* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBoxTextChangingEventArgs2* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBoxTextChangingEventArgs2* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_IsContentChanging)(__x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBoxTextChangingEventArgs2* This,
        boolean* value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBoxTextChangingEventArgs2Vtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBoxTextChangingEventArgs2
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBoxTextChangingEventArgs2Vtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBoxTextChangingEventArgs2;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBoxTextChangingEventArgs2_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlock_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlock_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlockVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlock* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlock* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlock* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlock* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlock* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlock* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_FontSize)(__x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlock* This,
        DOUBLE* value);
    HRESULT (STDMETHODCALLTYPE* put_FontSize)(__x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlock* This,
        DOUBLE value);
    HRESULT (STDMETHODCALLTYPE* get_FontFamily)(__x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlock* This,
        __x_ABI_CWindows_CUI_CXaml_CMedia_CIFontFamily** value);
    HRESULT (STDMETHODCALLTYPE* put_FontFamily)(__x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlock* This,
        __x_ABI_CWindows_CUI_CXaml_CMedia_CIFontFamily* value);
    HRESULT (STDMETHODCALLTYPE* get_FontWeight)(__x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlock* This,
        struct __x_ABI_CWindows_CUI_CText_CFontWeight* value);
    HRESULT (STDMETHODCALLTYPE* put_FontWeight)(__x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlock* This,
        struct __x_ABI_CWindows_CUI_CText_CFontWeight value);
    HRESULT (STDMETHODCALLTYPE* get_FontStyle)(__x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlock* This,
        enum __x_ABI_CWindows_CUI_CText_CFontStyle* value);
    HRESULT (STDMETHODCALLTYPE* put_FontStyle)(__x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlock* This,
        enum __x_ABI_CWindows_CUI_CText_CFontStyle value);
    HRESULT (STDMETHODCALLTYPE* get_FontStretch)(__x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlock* This,
        enum __x_ABI_CWindows_CUI_CText_CFontStretch* value);
    HRESULT (STDMETHODCALLTYPE* put_FontStretch)(__x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlock* This,
        enum __x_ABI_CWindows_CUI_CText_CFontStretch value);
    HRESULT (STDMETHODCALLTYPE* get_Foreground)(__x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlock* This,
        __x_ABI_CWindows_CUI_CXaml_CMedia_CIBrush** value);
    HRESULT (STDMETHODCALLTYPE* put_Foreground)(__x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlock* This,
        __x_ABI_CWindows_CUI_CXaml_CMedia_CIBrush* value);
    HRESULT (STDMETHODCALLTYPE* get_TextWrapping)(__x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlock* This,
        enum __x_ABI_CWindows_CUI_CXaml_CTextWrapping* value);
    HRESULT (STDMETHODCALLTYPE* put_TextWrapping)(__x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlock* This,
        enum __x_ABI_CWindows_CUI_CXaml_CTextWrapping value);
    HRESULT (STDMETHODCALLTYPE* get_TextTrimming)(__x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlock* This,
        enum __x_ABI_CWindows_CUI_CXaml_CTextTrimming* value);
    HRESULT (STDMETHODCALLTYPE* put_TextTrimming)(__x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlock* This,
        enum __x_ABI_CWindows_CUI_CXaml_CTextTrimming value);
    HRESULT (STDMETHODCALLTYPE* get_TextAlignment)(__x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlock* This,
        enum __x_ABI_CWindows_CUI_CXaml_CTextAlignment* value);
    HRESULT (STDMETHODCALLTYPE* put_TextAlignment)(__x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlock* This,
        enum __x_ABI_CWindows_CUI_CXaml_CTextAlignment value);
    HRESULT (STDMETHODCALLTYPE* get_Blocks)(__x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlock* This,
        __x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CXaml__CDocuments__CBlock** value);
    HRESULT (STDMETHODCALLTYPE* get_Padding)(__x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlock* This,
        struct __x_ABI_CWindows_CUI_CXaml_CThickness* value);
    HRESULT (STDMETHODCALLTYPE* put_Padding)(__x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlock* This,
        struct __x_ABI_CWindows_CUI_CXaml_CThickness value);
    HRESULT (STDMETHODCALLTYPE* get_LineHeight)(__x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlock* This,
        DOUBLE* value);
    HRESULT (STDMETHODCALLTYPE* put_LineHeight)(__x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlock* This,
        DOUBLE value);
    HRESULT (STDMETHODCALLTYPE* get_LineStackingStrategy)(__x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlock* This,
        enum __x_ABI_CWindows_CUI_CXaml_CLineStackingStrategy* value);
    HRESULT (STDMETHODCALLTYPE* put_LineStackingStrategy)(__x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlock* This,
        enum __x_ABI_CWindows_CUI_CXaml_CLineStackingStrategy value);
    HRESULT (STDMETHODCALLTYPE* get_CharacterSpacing)(__x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlock* This,
        INT32* value);
    HRESULT (STDMETHODCALLTYPE* put_CharacterSpacing)(__x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlock* This,
        INT32 value);
    HRESULT (STDMETHODCALLTYPE* get_OverflowContentTarget)(__x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlock* This,
        __x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlockOverflow** value);
    HRESULT (STDMETHODCALLTYPE* put_OverflowContentTarget)(__x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlock* This,
        __x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlockOverflow* value);
    HRESULT (STDMETHODCALLTYPE* get_IsTextSelectionEnabled)(__x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlock* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* put_IsTextSelectionEnabled)(__x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlock* This,
        boolean value);
    HRESULT (STDMETHODCALLTYPE* get_HasOverflowContent)(__x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlock* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* get_SelectedText)(__x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlock* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* get_ContentStart)(__x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlock* This,
        __x_ABI_CWindows_CUI_CXaml_CDocuments_CITextPointer** value);
    HRESULT (STDMETHODCALLTYPE* get_ContentEnd)(__x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlock* This,
        __x_ABI_CWindows_CUI_CXaml_CDocuments_CITextPointer** value);
    HRESULT (STDMETHODCALLTYPE* get_SelectionStart)(__x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlock* This,
        __x_ABI_CWindows_CUI_CXaml_CDocuments_CITextPointer** value);
    HRESULT (STDMETHODCALLTYPE* get_SelectionEnd)(__x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlock* This,
        __x_ABI_CWindows_CUI_CXaml_CDocuments_CITextPointer** value);
    HRESULT (STDMETHODCALLTYPE* get_BaselineOffset)(__x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlock* This,
        DOUBLE* value);
    HRESULT (STDMETHODCALLTYPE* add_SelectionChanged)(__x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlock* This,
        __x_ABI_CWindows_CUI_CXaml_CIRoutedEventHandler* handler,
        EventRegistrationToken* token);
    HRESULT (STDMETHODCALLTYPE* remove_SelectionChanged)(__x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlock* This,
        EventRegistrationToken token);
    HRESULT (STDMETHODCALLTYPE* add_ContextMenuOpening)(__x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlock* This,
        __x_ABI_CWindows_CUI_CXaml_CControls_CIContextMenuOpeningEventHandler* handler,
        EventRegistrationToken* token);
    HRESULT (STDMETHODCALLTYPE* remove_ContextMenuOpening)(__x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlock* This,
        EventRegistrationToken token);
    HRESULT (STDMETHODCALLTYPE* SelectAll)(__x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlock* This);
    HRESULT (STDMETHODCALLTYPE* Select)(__x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlock* This,
        __x_ABI_CWindows_CUI_CXaml_CDocuments_CITextPointer* start,
        __x_ABI_CWindows_CUI_CXaml_CDocuments_CITextPointer* end);
    HRESULT (STDMETHODCALLTYPE* GetPositionFromPoint)(__x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlock* This,
        struct __x_ABI_CWindows_CFoundation_CPoint point,
        __x_ABI_CWindows_CUI_CXaml_CDocuments_CITextPointer** result);
    HRESULT (STDMETHODCALLTYPE* Focus)(__x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlock* This,
        enum __x_ABI_CWindows_CUI_CXaml_CFocusState value,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* get_TextIndent)(__x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlock* This,
        DOUBLE* value);
    HRESULT (STDMETHODCALLTYPE* put_TextIndent)(__x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlock* This,
        DOUBLE value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlockVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlock
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlockVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlock;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlock_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlock2_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlock2_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlock2Vtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlock2* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlock2* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlock2* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlock2* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlock2* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlock2* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_MaxLines)(__x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlock2* This,
        INT32* value);
    HRESULT (STDMETHODCALLTYPE* put_MaxLines)(__x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlock2* This,
        INT32 value);
    HRESULT (STDMETHODCALLTYPE* get_TextLineBounds)(__x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlock2* This,
        enum __x_ABI_CWindows_CUI_CXaml_CTextLineBounds* value);
    HRESULT (STDMETHODCALLTYPE* put_TextLineBounds)(__x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlock2* This,
        enum __x_ABI_CWindows_CUI_CXaml_CTextLineBounds value);
    HRESULT (STDMETHODCALLTYPE* get_SelectionHighlightColor)(__x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlock2* This,
        __x_ABI_CWindows_CUI_CXaml_CMedia_CISolidColorBrush** value);
    HRESULT (STDMETHODCALLTYPE* put_SelectionHighlightColor)(__x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlock2* This,
        __x_ABI_CWindows_CUI_CXaml_CMedia_CISolidColorBrush* value);
    HRESULT (STDMETHODCALLTYPE* get_OpticalMarginAlignment)(__x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlock2* This,
        enum __x_ABI_CWindows_CUI_CXaml_COpticalMarginAlignment* value);
    HRESULT (STDMETHODCALLTYPE* put_OpticalMarginAlignment)(__x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlock2* This,
        enum __x_ABI_CWindows_CUI_CXaml_COpticalMarginAlignment value);
    HRESULT (STDMETHODCALLTYPE* get_IsColorFontEnabled)(__x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlock2* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* put_IsColorFontEnabled)(__x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlock2* This,
        boolean value);
    HRESULT (STDMETHODCALLTYPE* get_TextReadingOrder)(__x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlock2* This,
        enum __x_ABI_CWindows_CUI_CXaml_CTextReadingOrder* value);
    HRESULT (STDMETHODCALLTYPE* put_TextReadingOrder)(__x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlock2* This,
        enum __x_ABI_CWindows_CUI_CXaml_CTextReadingOrder value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlock2Vtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlock2
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlock2Vtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlock2;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlock2_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlock3_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlock3_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlock3Vtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlock3* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlock3* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlock3* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlock3* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlock3* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlock3* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_IsTextScaleFactorEnabled)(__x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlock3* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* put_IsTextScaleFactorEnabled)(__x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlock3* This,
        boolean value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlock3Vtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlock3
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlock3Vtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlock3;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlock3_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlock4_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlock4_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlock4Vtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlock4* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlock4* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlock4* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlock4* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlock4* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlock4* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_TextDecorations)(__x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlock4* This,
        enum __x_ABI_CWindows_CUI_CText_CTextDecorations* value);
    HRESULT (STDMETHODCALLTYPE* put_TextDecorations)(__x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlock4* This,
        enum __x_ABI_CWindows_CUI_CText_CTextDecorations value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlock4Vtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlock4
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlock4Vtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlock4;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlock4_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlock5_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlock5_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlock5Vtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlock5* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlock5* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlock5* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlock5* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlock5* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlock5* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_IsTextTrimmed)(__x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlock5* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* get_HorizontalTextAlignment)(__x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlock5* This,
        enum __x_ABI_CWindows_CUI_CXaml_CTextAlignment* value);
    HRESULT (STDMETHODCALLTYPE* put_HorizontalTextAlignment)(__x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlock5* This,
        enum __x_ABI_CWindows_CUI_CXaml_CTextAlignment value);
    HRESULT (STDMETHODCALLTYPE* get_TextHighlighters)(__x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlock5* This,
        __x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CXaml__CDocuments__CTextHighlighter** value);
    HRESULT (STDMETHODCALLTYPE* add_IsTextTrimmedChanged)(__x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlock5* This,
        __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CRichTextBlock___x_ABI_CWindows__CUI__CXaml__CControls__CIsTextTrimmedChangedEventArgs* handler,
        EventRegistrationToken* token);
    HRESULT (STDMETHODCALLTYPE* remove_IsTextTrimmedChanged)(__x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlock5* This,
        EventRegistrationToken token);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlock5Vtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlock5
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlock5Vtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlock5;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlock5_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlock6_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlock6_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlock6Vtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlock6* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlock6* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlock6* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlock6* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlock6* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlock6* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_SelectionFlyout)(__x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlock6* This,
        __x_ABI_CWindows_CUI_CXaml_CControls_CPrimitives_CIFlyoutBase** value);
    HRESULT (STDMETHODCALLTYPE* put_SelectionFlyout)(__x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlock6* This,
        __x_ABI_CWindows_CUI_CXaml_CControls_CPrimitives_CIFlyoutBase* value);
    HRESULT (STDMETHODCALLTYPE* CopySelectionToClipboard)(__x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlock6* This);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlock6Vtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlock6
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlock6Vtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlock6;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlock6_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlockOverflow_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlockOverflow_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlockOverflowVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlockOverflow* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlockOverflow* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlockOverflow* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlockOverflow* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlockOverflow* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlockOverflow* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_OverflowContentTarget)(__x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlockOverflow* This,
        __x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlockOverflow** value);
    HRESULT (STDMETHODCALLTYPE* put_OverflowContentTarget)(__x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlockOverflow* This,
        __x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlockOverflow* value);
    HRESULT (STDMETHODCALLTYPE* get_Padding)(__x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlockOverflow* This,
        struct __x_ABI_CWindows_CUI_CXaml_CThickness* value);
    HRESULT (STDMETHODCALLTYPE* put_Padding)(__x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlockOverflow* This,
        struct __x_ABI_CWindows_CUI_CXaml_CThickness value);
    HRESULT (STDMETHODCALLTYPE* get_ContentSource)(__x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlockOverflow* This,
        __x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlock** value);
    HRESULT (STDMETHODCALLTYPE* get_HasOverflowContent)(__x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlockOverflow* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* get_ContentStart)(__x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlockOverflow* This,
        __x_ABI_CWindows_CUI_CXaml_CDocuments_CITextPointer** value);
    HRESULT (STDMETHODCALLTYPE* get_ContentEnd)(__x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlockOverflow* This,
        __x_ABI_CWindows_CUI_CXaml_CDocuments_CITextPointer** value);
    HRESULT (STDMETHODCALLTYPE* get_BaselineOffset)(__x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlockOverflow* This,
        DOUBLE* value);
    HRESULT (STDMETHODCALLTYPE* GetPositionFromPoint)(__x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlockOverflow* This,
        struct __x_ABI_CWindows_CFoundation_CPoint point,
        __x_ABI_CWindows_CUI_CXaml_CDocuments_CITextPointer** result);
    HRESULT (STDMETHODCALLTYPE* Focus)(__x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlockOverflow* This,
        enum __x_ABI_CWindows_CUI_CXaml_CFocusState value,
        boolean* result);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlockOverflowVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlockOverflow
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlockOverflowVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlockOverflow;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlockOverflow_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlockOverflow2_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlockOverflow2_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlockOverflow2Vtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlockOverflow2* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlockOverflow2* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlockOverflow2* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlockOverflow2* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlockOverflow2* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlockOverflow2* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_MaxLines)(__x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlockOverflow2* This,
        INT32* value);
    HRESULT (STDMETHODCALLTYPE* put_MaxLines)(__x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlockOverflow2* This,
        INT32 value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlockOverflow2Vtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlockOverflow2
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlockOverflow2Vtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlockOverflow2;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlockOverflow2_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlockOverflow3_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlockOverflow3_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlockOverflow3Vtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlockOverflow3* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlockOverflow3* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlockOverflow3* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlockOverflow3* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlockOverflow3* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlockOverflow3* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_IsTextTrimmed)(__x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlockOverflow3* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* add_IsTextTrimmedChanged)(__x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlockOverflow3* This,
        __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CRichTextBlockOverflow___x_ABI_CWindows__CUI__CXaml__CControls__CIsTextTrimmedChangedEventArgs* handler,
        EventRegistrationToken* token);
    HRESULT (STDMETHODCALLTYPE* remove_IsTextTrimmedChanged)(__x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlockOverflow3* This,
        EventRegistrationToken token);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlockOverflow3Vtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlockOverflow3
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlockOverflow3Vtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlockOverflow3;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlockOverflow3_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlockOverflowStatics_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlockOverflowStatics_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlockOverflowStaticsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlockOverflowStatics* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlockOverflowStatics* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlockOverflowStatics* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlockOverflowStatics* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlockOverflowStatics* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlockOverflowStatics* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_OverflowContentTargetProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlockOverflowStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_PaddingProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlockOverflowStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_HasOverflowContentProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlockOverflowStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlockOverflowStaticsVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlockOverflowStatics
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlockOverflowStaticsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlockOverflowStatics;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlockOverflowStatics_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlockOverflowStatics2_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlockOverflowStatics2_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlockOverflowStatics2Vtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlockOverflowStatics2* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlockOverflowStatics2* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlockOverflowStatics2* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlockOverflowStatics2* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlockOverflowStatics2* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlockOverflowStatics2* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_MaxLinesProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlockOverflowStatics2* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlockOverflowStatics2Vtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlockOverflowStatics2
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlockOverflowStatics2Vtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlockOverflowStatics2;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlockOverflowStatics2_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlockOverflowStatics3_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlockOverflowStatics3_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlockOverflowStatics3Vtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlockOverflowStatics3* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlockOverflowStatics3* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlockOverflowStatics3* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlockOverflowStatics3* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlockOverflowStatics3* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlockOverflowStatics3* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_IsTextTrimmedProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlockOverflowStatics3* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlockOverflowStatics3Vtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlockOverflowStatics3
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlockOverflowStatics3Vtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlockOverflowStatics3;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlockOverflowStatics3_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlockStatics_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlockStatics_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlockStaticsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlockStatics* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlockStatics* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlockStatics* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlockStatics* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlockStatics* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlockStatics* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_FontSizeProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlockStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_FontFamilyProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlockStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_FontWeightProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlockStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_FontStyleProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlockStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_FontStretchProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlockStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_ForegroundProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlockStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_TextWrappingProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlockStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_TextTrimmingProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlockStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_TextAlignmentProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlockStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_PaddingProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlockStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_LineHeightProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlockStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_LineStackingStrategyProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlockStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_CharacterSpacingProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlockStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_OverflowContentTargetProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlockStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_IsTextSelectionEnabledProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlockStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_HasOverflowContentProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlockStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_SelectedTextProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlockStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_TextIndentProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlockStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlockStaticsVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlockStatics
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlockStaticsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlockStatics;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlockStatics_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlockStatics2_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlockStatics2_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlockStatics2Vtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlockStatics2* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlockStatics2* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlockStatics2* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlockStatics2* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlockStatics2* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlockStatics2* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_MaxLinesProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlockStatics2* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_TextLineBoundsProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlockStatics2* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_SelectionHighlightColorProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlockStatics2* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_OpticalMarginAlignmentProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlockStatics2* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_IsColorFontEnabledProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlockStatics2* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_TextReadingOrderProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlockStatics2* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlockStatics2Vtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlockStatics2
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlockStatics2Vtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlockStatics2;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlockStatics2_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlockStatics3_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlockStatics3_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlockStatics3Vtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlockStatics3* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlockStatics3* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlockStatics3* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlockStatics3* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlockStatics3* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlockStatics3* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_IsTextScaleFactorEnabledProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlockStatics3* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlockStatics3Vtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlockStatics3
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlockStatics3Vtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlockStatics3;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlockStatics3_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlockStatics4_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlockStatics4_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlockStatics4Vtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlockStatics4* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlockStatics4* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlockStatics4* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlockStatics4* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlockStatics4* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlockStatics4* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_TextDecorationsProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlockStatics4* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlockStatics4Vtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlockStatics4
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlockStatics4Vtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlockStatics4;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlockStatics4_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlockStatics5_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlockStatics5_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlockStatics5Vtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlockStatics5* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlockStatics5* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlockStatics5* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlockStatics5* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlockStatics5* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlockStatics5* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_IsTextTrimmedProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlockStatics5* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_HorizontalTextAlignmentProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlockStatics5* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlockStatics5Vtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlockStatics5
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlockStatics5Vtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlockStatics5;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlockStatics5_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlockStatics6_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlockStatics6_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlockStatics6Vtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlockStatics6* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlockStatics6* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlockStatics6* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlockStatics6* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlockStatics6* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlockStatics6* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_SelectionFlyoutProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlockStatics6* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlockStatics6Vtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlockStatics6
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlockStatics6Vtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlockStatics6;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlockStatics6_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIRowDefinition_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CControls_CIRowDefinition_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIRowDefinitionVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CControls_CIRowDefinition* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CControls_CIRowDefinition* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CControls_CIRowDefinition* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CControls_CIRowDefinition* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CControls_CIRowDefinition* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CControls_CIRowDefinition* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Height)(__x_ABI_CWindows_CUI_CXaml_CControls_CIRowDefinition* This,
        struct __x_ABI_CWindows_CUI_CXaml_CGridLength* value);
    HRESULT (STDMETHODCALLTYPE* put_Height)(__x_ABI_CWindows_CUI_CXaml_CControls_CIRowDefinition* This,
        struct __x_ABI_CWindows_CUI_CXaml_CGridLength value);
    HRESULT (STDMETHODCALLTYPE* get_MaxHeight)(__x_ABI_CWindows_CUI_CXaml_CControls_CIRowDefinition* This,
        DOUBLE* value);
    HRESULT (STDMETHODCALLTYPE* put_MaxHeight)(__x_ABI_CWindows_CUI_CXaml_CControls_CIRowDefinition* This,
        DOUBLE value);
    HRESULT (STDMETHODCALLTYPE* get_MinHeight)(__x_ABI_CWindows_CUI_CXaml_CControls_CIRowDefinition* This,
        DOUBLE* value);
    HRESULT (STDMETHODCALLTYPE* put_MinHeight)(__x_ABI_CWindows_CUI_CXaml_CControls_CIRowDefinition* This,
        DOUBLE value);
    HRESULT (STDMETHODCALLTYPE* get_ActualHeight)(__x_ABI_CWindows_CUI_CXaml_CControls_CIRowDefinition* This,
        DOUBLE* value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CIRowDefinitionVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CIRowDefinition
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIRowDefinitionVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIRowDefinition;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIRowDefinition_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIRowDefinitionStatics_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CControls_CIRowDefinitionStatics_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIRowDefinitionStaticsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CControls_CIRowDefinitionStatics* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CControls_CIRowDefinitionStatics* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CControls_CIRowDefinitionStatics* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CControls_CIRowDefinitionStatics* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CControls_CIRowDefinitionStatics* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CControls_CIRowDefinitionStatics* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_HeightProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CIRowDefinitionStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_MaxHeightProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CIRowDefinitionStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_MinHeightProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CIRowDefinitionStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CIRowDefinitionStaticsVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CIRowDefinitionStatics
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIRowDefinitionStaticsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIRowDefinitionStatics;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIRowDefinitionStatics_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIScrollAnchorProvider_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CControls_CIScrollAnchorProvider_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollAnchorProviderVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CControls_CIScrollAnchorProvider* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CControls_CIScrollAnchorProvider* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CControls_CIScrollAnchorProvider* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CControls_CIScrollAnchorProvider* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CControls_CIScrollAnchorProvider* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CControls_CIScrollAnchorProvider* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_CurrentAnchor)(__x_ABI_CWindows_CUI_CXaml_CControls_CIScrollAnchorProvider* This,
        __x_ABI_CWindows_CUI_CXaml_CIUIElement** value);
    HRESULT (STDMETHODCALLTYPE* RegisterAnchorCandidate)(__x_ABI_CWindows_CUI_CXaml_CControls_CIScrollAnchorProvider* This,
        __x_ABI_CWindows_CUI_CXaml_CIUIElement* element);
    HRESULT (STDMETHODCALLTYPE* UnregisterAnchorCandidate)(__x_ABI_CWindows_CUI_CXaml_CControls_CIScrollAnchorProvider* This,
        __x_ABI_CWindows_CUI_CXaml_CIUIElement* element);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollAnchorProviderVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollAnchorProvider
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollAnchorProviderVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIScrollAnchorProvider;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIScrollAnchorProvider_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIScrollContentPresenter_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CControls_CIScrollContentPresenter_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollContentPresenterVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CControls_CIScrollContentPresenter* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CControls_CIScrollContentPresenter* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CControls_CIScrollContentPresenter* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CControls_CIScrollContentPresenter* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CControls_CIScrollContentPresenter* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CControls_CIScrollContentPresenter* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_CanVerticallyScroll)(__x_ABI_CWindows_CUI_CXaml_CControls_CIScrollContentPresenter* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* put_CanVerticallyScroll)(__x_ABI_CWindows_CUI_CXaml_CControls_CIScrollContentPresenter* This,
        boolean value);
    HRESULT (STDMETHODCALLTYPE* get_CanHorizontallyScroll)(__x_ABI_CWindows_CUI_CXaml_CControls_CIScrollContentPresenter* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* put_CanHorizontallyScroll)(__x_ABI_CWindows_CUI_CXaml_CControls_CIScrollContentPresenter* This,
        boolean value);
    HRESULT (STDMETHODCALLTYPE* get_ExtentWidth)(__x_ABI_CWindows_CUI_CXaml_CControls_CIScrollContentPresenter* This,
        DOUBLE* value);
    HRESULT (STDMETHODCALLTYPE* get_ExtentHeight)(__x_ABI_CWindows_CUI_CXaml_CControls_CIScrollContentPresenter* This,
        DOUBLE* value);
    HRESULT (STDMETHODCALLTYPE* get_ViewportWidth)(__x_ABI_CWindows_CUI_CXaml_CControls_CIScrollContentPresenter* This,
        DOUBLE* value);
    HRESULT (STDMETHODCALLTYPE* get_ViewportHeight)(__x_ABI_CWindows_CUI_CXaml_CControls_CIScrollContentPresenter* This,
        DOUBLE* value);
    HRESULT (STDMETHODCALLTYPE* get_HorizontalOffset)(__x_ABI_CWindows_CUI_CXaml_CControls_CIScrollContentPresenter* This,
        DOUBLE* value);
    HRESULT (STDMETHODCALLTYPE* get_VerticalOffset)(__x_ABI_CWindows_CUI_CXaml_CControls_CIScrollContentPresenter* This,
        DOUBLE* value);
    HRESULT (STDMETHODCALLTYPE* get_ScrollOwner)(__x_ABI_CWindows_CUI_CXaml_CControls_CIScrollContentPresenter* This,
        IInspectable** value);
    HRESULT (STDMETHODCALLTYPE* put_ScrollOwner)(__x_ABI_CWindows_CUI_CXaml_CControls_CIScrollContentPresenter* This,
        IInspectable* value);
    HRESULT (STDMETHODCALLTYPE* LineUp)(__x_ABI_CWindows_CUI_CXaml_CControls_CIScrollContentPresenter* This);
    HRESULT (STDMETHODCALLTYPE* LineDown)(__x_ABI_CWindows_CUI_CXaml_CControls_CIScrollContentPresenter* This);
    HRESULT (STDMETHODCALLTYPE* LineLeft)(__x_ABI_CWindows_CUI_CXaml_CControls_CIScrollContentPresenter* This);
    HRESULT (STDMETHODCALLTYPE* LineRight)(__x_ABI_CWindows_CUI_CXaml_CControls_CIScrollContentPresenter* This);
    HRESULT (STDMETHODCALLTYPE* PageUp)(__x_ABI_CWindows_CUI_CXaml_CControls_CIScrollContentPresenter* This);
    HRESULT (STDMETHODCALLTYPE* PageDown)(__x_ABI_CWindows_CUI_CXaml_CControls_CIScrollContentPresenter* This);
    HRESULT (STDMETHODCALLTYPE* PageLeft)(__x_ABI_CWindows_CUI_CXaml_CControls_CIScrollContentPresenter* This);
    HRESULT (STDMETHODCALLTYPE* PageRight)(__x_ABI_CWindows_CUI_CXaml_CControls_CIScrollContentPresenter* This);
    HRESULT (STDMETHODCALLTYPE* MouseWheelUp)(__x_ABI_CWindows_CUI_CXaml_CControls_CIScrollContentPresenter* This);
    HRESULT (STDMETHODCALLTYPE* MouseWheelDown)(__x_ABI_CWindows_CUI_CXaml_CControls_CIScrollContentPresenter* This);
    HRESULT (STDMETHODCALLTYPE* MouseWheelLeft)(__x_ABI_CWindows_CUI_CXaml_CControls_CIScrollContentPresenter* This);
    HRESULT (STDMETHODCALLTYPE* MouseWheelRight)(__x_ABI_CWindows_CUI_CXaml_CControls_CIScrollContentPresenter* This);
    HRESULT (STDMETHODCALLTYPE* SetHorizontalOffset)(__x_ABI_CWindows_CUI_CXaml_CControls_CIScrollContentPresenter* This,
        DOUBLE offset);
    HRESULT (STDMETHODCALLTYPE* SetVerticalOffset)(__x_ABI_CWindows_CUI_CXaml_CControls_CIScrollContentPresenter* This,
        DOUBLE offset);
    HRESULT (STDMETHODCALLTYPE* MakeVisible)(__x_ABI_CWindows_CUI_CXaml_CControls_CIScrollContentPresenter* This,
        __x_ABI_CWindows_CUI_CXaml_CIUIElement* visual,
        struct __x_ABI_CWindows_CFoundation_CRect rectangle,
        struct __x_ABI_CWindows_CFoundation_CRect* result);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollContentPresenterVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollContentPresenter
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollContentPresenterVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIScrollContentPresenter;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIScrollContentPresenter_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIScrollContentPresenter2_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CControls_CIScrollContentPresenter2_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollContentPresenter2Vtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CControls_CIScrollContentPresenter2* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CControls_CIScrollContentPresenter2* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CControls_CIScrollContentPresenter2* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CControls_CIScrollContentPresenter2* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CControls_CIScrollContentPresenter2* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CControls_CIScrollContentPresenter2* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_CanContentRenderOutsideBounds)(__x_ABI_CWindows_CUI_CXaml_CControls_CIScrollContentPresenter2* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* put_CanContentRenderOutsideBounds)(__x_ABI_CWindows_CUI_CXaml_CControls_CIScrollContentPresenter2* This,
        boolean value);
    HRESULT (STDMETHODCALLTYPE* get_SizesContentToTemplatedParent)(__x_ABI_CWindows_CUI_CXaml_CControls_CIScrollContentPresenter2* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* put_SizesContentToTemplatedParent)(__x_ABI_CWindows_CUI_CXaml_CControls_CIScrollContentPresenter2* This,
        boolean value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollContentPresenter2Vtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollContentPresenter2
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollContentPresenter2Vtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIScrollContentPresenter2;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIScrollContentPresenter2_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIScrollContentPresenterStatics2_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CControls_CIScrollContentPresenterStatics2_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollContentPresenterStatics2Vtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CControls_CIScrollContentPresenterStatics2* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CControls_CIScrollContentPresenterStatics2* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CControls_CIScrollContentPresenterStatics2* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CControls_CIScrollContentPresenterStatics2* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CControls_CIScrollContentPresenterStatics2* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CControls_CIScrollContentPresenterStatics2* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_CanContentRenderOutsideBoundsProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CIScrollContentPresenterStatics2* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_SizesContentToTemplatedParentProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CIScrollContentPresenterStatics2* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollContentPresenterStatics2Vtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollContentPresenterStatics2
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollContentPresenterStatics2Vtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIScrollContentPresenterStatics2;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIScrollContentPresenterStatics2_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewer_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewer_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewerVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewer* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewer* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewer* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewer* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewer* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewer* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_HorizontalScrollBarVisibility)(__x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewer* This,
        enum __x_ABI_CWindows_CUI_CXaml_CControls_CScrollBarVisibility* value);
    HRESULT (STDMETHODCALLTYPE* put_HorizontalScrollBarVisibility)(__x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewer* This,
        enum __x_ABI_CWindows_CUI_CXaml_CControls_CScrollBarVisibility value);
    HRESULT (STDMETHODCALLTYPE* get_VerticalScrollBarVisibility)(__x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewer* This,
        enum __x_ABI_CWindows_CUI_CXaml_CControls_CScrollBarVisibility* value);
    HRESULT (STDMETHODCALLTYPE* put_VerticalScrollBarVisibility)(__x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewer* This,
        enum __x_ABI_CWindows_CUI_CXaml_CControls_CScrollBarVisibility value);
    HRESULT (STDMETHODCALLTYPE* get_IsHorizontalRailEnabled)(__x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewer* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* put_IsHorizontalRailEnabled)(__x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewer* This,
        boolean value);
    HRESULT (STDMETHODCALLTYPE* get_IsVerticalRailEnabled)(__x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewer* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* put_IsVerticalRailEnabled)(__x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewer* This,
        boolean value);
    HRESULT (STDMETHODCALLTYPE* get_IsHorizontalScrollChainingEnabled)(__x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewer* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* put_IsHorizontalScrollChainingEnabled)(__x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewer* This,
        boolean value);
    HRESULT (STDMETHODCALLTYPE* get_IsVerticalScrollChainingEnabled)(__x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewer* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* put_IsVerticalScrollChainingEnabled)(__x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewer* This,
        boolean value);
    HRESULT (STDMETHODCALLTYPE* get_IsZoomChainingEnabled)(__x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewer* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* put_IsZoomChainingEnabled)(__x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewer* This,
        boolean value);
    HRESULT (STDMETHODCALLTYPE* get_IsScrollInertiaEnabled)(__x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewer* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* put_IsScrollInertiaEnabled)(__x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewer* This,
        boolean value);
    HRESULT (STDMETHODCALLTYPE* get_IsZoomInertiaEnabled)(__x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewer* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* put_IsZoomInertiaEnabled)(__x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewer* This,
        boolean value);
    HRESULT (STDMETHODCALLTYPE* get_HorizontalScrollMode)(__x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewer* This,
        enum __x_ABI_CWindows_CUI_CXaml_CControls_CScrollMode* value);
    HRESULT (STDMETHODCALLTYPE* put_HorizontalScrollMode)(__x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewer* This,
        enum __x_ABI_CWindows_CUI_CXaml_CControls_CScrollMode value);
    HRESULT (STDMETHODCALLTYPE* get_VerticalScrollMode)(__x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewer* This,
        enum __x_ABI_CWindows_CUI_CXaml_CControls_CScrollMode* value);
    HRESULT (STDMETHODCALLTYPE* put_VerticalScrollMode)(__x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewer* This,
        enum __x_ABI_CWindows_CUI_CXaml_CControls_CScrollMode value);
    HRESULT (STDMETHODCALLTYPE* get_ZoomMode)(__x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewer* This,
        enum __x_ABI_CWindows_CUI_CXaml_CControls_CZoomMode* value);
    HRESULT (STDMETHODCALLTYPE* put_ZoomMode)(__x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewer* This,
        enum __x_ABI_CWindows_CUI_CXaml_CControls_CZoomMode value);
    HRESULT (STDMETHODCALLTYPE* get_HorizontalSnapPointsAlignment)(__x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewer* This,
        enum __x_ABI_CWindows_CUI_CXaml_CControls_CPrimitives_CSnapPointsAlignment* value);
    HRESULT (STDMETHODCALLTYPE* put_HorizontalSnapPointsAlignment)(__x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewer* This,
        enum __x_ABI_CWindows_CUI_CXaml_CControls_CPrimitives_CSnapPointsAlignment value);
    HRESULT (STDMETHODCALLTYPE* get_VerticalSnapPointsAlignment)(__x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewer* This,
        enum __x_ABI_CWindows_CUI_CXaml_CControls_CPrimitives_CSnapPointsAlignment* value);
    HRESULT (STDMETHODCALLTYPE* put_VerticalSnapPointsAlignment)(__x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewer* This,
        enum __x_ABI_CWindows_CUI_CXaml_CControls_CPrimitives_CSnapPointsAlignment value);
    HRESULT (STDMETHODCALLTYPE* get_HorizontalSnapPointsType)(__x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewer* This,
        enum __x_ABI_CWindows_CUI_CXaml_CControls_CSnapPointsType* value);
    HRESULT (STDMETHODCALLTYPE* put_HorizontalSnapPointsType)(__x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewer* This,
        enum __x_ABI_CWindows_CUI_CXaml_CControls_CSnapPointsType value);
    HRESULT (STDMETHODCALLTYPE* get_VerticalSnapPointsType)(__x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewer* This,
        enum __x_ABI_CWindows_CUI_CXaml_CControls_CSnapPointsType* value);
    HRESULT (STDMETHODCALLTYPE* put_VerticalSnapPointsType)(__x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewer* This,
        enum __x_ABI_CWindows_CUI_CXaml_CControls_CSnapPointsType value);
    HRESULT (STDMETHODCALLTYPE* get_ZoomSnapPointsType)(__x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewer* This,
        enum __x_ABI_CWindows_CUI_CXaml_CControls_CSnapPointsType* value);
    HRESULT (STDMETHODCALLTYPE* put_ZoomSnapPointsType)(__x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewer* This,
        enum __x_ABI_CWindows_CUI_CXaml_CControls_CSnapPointsType value);
    HRESULT (STDMETHODCALLTYPE* get_HorizontalOffset)(__x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewer* This,
        DOUBLE* value);
    HRESULT (STDMETHODCALLTYPE* get_ViewportWidth)(__x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewer* This,
        DOUBLE* value);
    HRESULT (STDMETHODCALLTYPE* get_ScrollableWidth)(__x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewer* This,
        DOUBLE* value);
    HRESULT (STDMETHODCALLTYPE* get_ComputedHorizontalScrollBarVisibility)(__x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewer* This,
        enum __x_ABI_CWindows_CUI_CXaml_CVisibility* value);
    HRESULT (STDMETHODCALLTYPE* get_ExtentWidth)(__x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewer* This,
        DOUBLE* value);
    HRESULT (STDMETHODCALLTYPE* get_VerticalOffset)(__x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewer* This,
        DOUBLE* value);
    HRESULT (STDMETHODCALLTYPE* get_ViewportHeight)(__x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewer* This,
        DOUBLE* value);
    HRESULT (STDMETHODCALLTYPE* get_ScrollableHeight)(__x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewer* This,
        DOUBLE* value);
    HRESULT (STDMETHODCALLTYPE* get_ComputedVerticalScrollBarVisibility)(__x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewer* This,
        enum __x_ABI_CWindows_CUI_CXaml_CVisibility* value);
    HRESULT (STDMETHODCALLTYPE* get_ExtentHeight)(__x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewer* This,
        DOUBLE* value);
    HRESULT (STDMETHODCALLTYPE* get_MinZoomFactor)(__x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewer* This,
        FLOAT* value);
    HRESULT (STDMETHODCALLTYPE* put_MinZoomFactor)(__x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewer* This,
        FLOAT value);
    HRESULT (STDMETHODCALLTYPE* get_MaxZoomFactor)(__x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewer* This,
        FLOAT* value);
    HRESULT (STDMETHODCALLTYPE* put_MaxZoomFactor)(__x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewer* This,
        FLOAT value);
    HRESULT (STDMETHODCALLTYPE* get_ZoomFactor)(__x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewer* This,
        FLOAT* value);
    HRESULT (STDMETHODCALLTYPE* get_ZoomSnapPoints)(__x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewer* This,
        __x_ABI_C__FIVector_1_float** value);
    HRESULT (STDMETHODCALLTYPE* add_ViewChanged)(__x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewer* This,
        __x_ABI_C__FIEventHandler_1___x_ABI_CWindows__CUI__CXaml__CControls__CScrollViewerViewChangedEventArgs* handler,
        EventRegistrationToken* token);
    HRESULT (STDMETHODCALLTYPE* remove_ViewChanged)(__x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewer* This,
        EventRegistrationToken token);
    HRESULT (STDMETHODCALLTYPE* ScrollToHorizontalOffset)(__x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewer* This,
        DOUBLE offset);
    HRESULT (STDMETHODCALLTYPE* ScrollToVerticalOffset)(__x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewer* This,
        DOUBLE offset);
    HRESULT (STDMETHODCALLTYPE* ZoomToFactor)(__x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewer* This,
        FLOAT factor);
    HRESULT (STDMETHODCALLTYPE* InvalidateScrollInfo)(__x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewer* This);
    HRESULT (STDMETHODCALLTYPE* get_IsDeferredScrollingEnabled)(__x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewer* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* put_IsDeferredScrollingEnabled)(__x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewer* This,
        boolean value);
    HRESULT (STDMETHODCALLTYPE* get_BringIntoViewOnFocusChange)(__x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewer* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* put_BringIntoViewOnFocusChange)(__x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewer* This,
        boolean value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewerVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewer
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewerVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewer;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewer_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewer2_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewer2_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewer2Vtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewer2* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewer2* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewer2* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewer2* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewer2* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewer2* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_TopLeftHeader)(__x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewer2* This,
        __x_ABI_CWindows_CUI_CXaml_CIUIElement** value);
    HRESULT (STDMETHODCALLTYPE* put_TopLeftHeader)(__x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewer2* This,
        __x_ABI_CWindows_CUI_CXaml_CIUIElement* value);
    HRESULT (STDMETHODCALLTYPE* get_LeftHeader)(__x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewer2* This,
        __x_ABI_CWindows_CUI_CXaml_CIUIElement** value);
    HRESULT (STDMETHODCALLTYPE* put_LeftHeader)(__x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewer2* This,
        __x_ABI_CWindows_CUI_CXaml_CIUIElement* value);
    HRESULT (STDMETHODCALLTYPE* get_TopHeader)(__x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewer2* This,
        __x_ABI_CWindows_CUI_CXaml_CIUIElement** value);
    HRESULT (STDMETHODCALLTYPE* put_TopHeader)(__x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewer2* This,
        __x_ABI_CWindows_CUI_CXaml_CIUIElement* value);
    HRESULT (STDMETHODCALLTYPE* add_ViewChanging)(__x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewer2* This,
        __x_ABI_C__FIEventHandler_1___x_ABI_CWindows__CUI__CXaml__CControls__CScrollViewerViewChangingEventArgs* handler,
        EventRegistrationToken* token);
    HRESULT (STDMETHODCALLTYPE* remove_ViewChanging)(__x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewer2* This,
        EventRegistrationToken token);
    HRESULT (STDMETHODCALLTYPE* ChangeView)(__x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewer2* This,
        __x_ABI_C__FIReference_1_double* horizontalOffset,
        __x_ABI_C__FIReference_1_double* verticalOffset,
        __x_ABI_C__FIReference_1_float* zoomFactor,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* ChangeViewWithOptionalAnimation)(__x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewer2* This,
        __x_ABI_C__FIReference_1_double* horizontalOffset,
        __x_ABI_C__FIReference_1_double* verticalOffset,
        __x_ABI_C__FIReference_1_float* zoomFactor,
        boolean disableAnimation,
        boolean* result);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewer2Vtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewer2
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewer2Vtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewer2;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewer2_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewer3_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewer3_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewer3Vtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewer3* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewer3* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewer3* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewer3* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewer3* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewer3* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* add_DirectManipulationStarted)(__x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewer3* This,
        __x_ABI_C__FIEventHandler_1_IInspectable* handler,
        EventRegistrationToken* token);
    HRESULT (STDMETHODCALLTYPE* remove_DirectManipulationStarted)(__x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewer3* This,
        EventRegistrationToken token);
    HRESULT (STDMETHODCALLTYPE* add_DirectManipulationCompleted)(__x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewer3* This,
        __x_ABI_C__FIEventHandler_1_IInspectable* handler,
        EventRegistrationToken* token);
    HRESULT (STDMETHODCALLTYPE* remove_DirectManipulationCompleted)(__x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewer3* This,
        EventRegistrationToken token);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewer3Vtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewer3
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewer3Vtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewer3;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewer3_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewer4_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewer4_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewer4Vtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewer4* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewer4* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewer4* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewer4* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewer4* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewer4* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_ReduceViewportForCoreInputViewOcclusions)(__x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewer4* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* put_ReduceViewportForCoreInputViewOcclusions)(__x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewer4* This,
        boolean value);
    HRESULT (STDMETHODCALLTYPE* get_HorizontalAnchorRatio)(__x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewer4* This,
        DOUBLE* value);
    HRESULT (STDMETHODCALLTYPE* put_HorizontalAnchorRatio)(__x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewer4* This,
        DOUBLE value);
    HRESULT (STDMETHODCALLTYPE* get_VerticalAnchorRatio)(__x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewer4* This,
        DOUBLE* value);
    HRESULT (STDMETHODCALLTYPE* put_VerticalAnchorRatio)(__x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewer4* This,
        DOUBLE value);
    HRESULT (STDMETHODCALLTYPE* get_CanContentRenderOutsideBounds)(__x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewer4* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* put_CanContentRenderOutsideBounds)(__x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewer4* This,
        boolean value);
    HRESULT (STDMETHODCALLTYPE* add_AnchorRequested)(__x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewer4* This,
        __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CScrollViewer___x_ABI_CWindows__CUI__CXaml__CControls__CAnchorRequestedEventArgs* handler,
        EventRegistrationToken* token);
    HRESULT (STDMETHODCALLTYPE* remove_AnchorRequested)(__x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewer4* This,
        EventRegistrationToken token);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewer4Vtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewer4
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewer4Vtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewer4;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewer4_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewerStatics_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewerStatics_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewerStaticsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewerStatics* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewerStatics* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewerStatics* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewerStatics* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewerStatics* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewerStatics* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_HorizontalSnapPointsAlignmentProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewerStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_VerticalSnapPointsAlignmentProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewerStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_HorizontalSnapPointsTypeProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewerStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_VerticalSnapPointsTypeProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewerStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_ZoomSnapPointsTypeProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewerStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_HorizontalOffsetProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewerStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_ViewportWidthProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewerStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_ScrollableWidthProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewerStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_ComputedHorizontalScrollBarVisibilityProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewerStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_ExtentWidthProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewerStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_VerticalOffsetProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewerStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_ViewportHeightProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewerStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_ScrollableHeightProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewerStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_ComputedVerticalScrollBarVisibilityProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewerStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_ExtentHeightProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewerStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_MinZoomFactorProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewerStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_MaxZoomFactorProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewerStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_ZoomFactorProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewerStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_ZoomSnapPointsProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewerStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_HorizontalScrollBarVisibilityProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewerStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* GetHorizontalScrollBarVisibility)(__x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewerStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyObject* element,
        enum __x_ABI_CWindows_CUI_CXaml_CControls_CScrollBarVisibility* result);
    HRESULT (STDMETHODCALLTYPE* SetHorizontalScrollBarVisibility)(__x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewerStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyObject* element,
        enum __x_ABI_CWindows_CUI_CXaml_CControls_CScrollBarVisibility horizontalScrollBarVisibility);
    HRESULT (STDMETHODCALLTYPE* get_VerticalScrollBarVisibilityProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewerStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* GetVerticalScrollBarVisibility)(__x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewerStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyObject* element,
        enum __x_ABI_CWindows_CUI_CXaml_CControls_CScrollBarVisibility* result);
    HRESULT (STDMETHODCALLTYPE* SetVerticalScrollBarVisibility)(__x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewerStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyObject* element,
        enum __x_ABI_CWindows_CUI_CXaml_CControls_CScrollBarVisibility verticalScrollBarVisibility);
    HRESULT (STDMETHODCALLTYPE* get_IsHorizontalRailEnabledProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewerStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* GetIsHorizontalRailEnabled)(__x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewerStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyObject* element,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* SetIsHorizontalRailEnabled)(__x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewerStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyObject* element,
        boolean isHorizontalRailEnabled);
    HRESULT (STDMETHODCALLTYPE* get_IsVerticalRailEnabledProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewerStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* GetIsVerticalRailEnabled)(__x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewerStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyObject* element,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* SetIsVerticalRailEnabled)(__x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewerStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyObject* element,
        boolean isVerticalRailEnabled);
    HRESULT (STDMETHODCALLTYPE* get_IsHorizontalScrollChainingEnabledProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewerStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* GetIsHorizontalScrollChainingEnabled)(__x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewerStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyObject* element,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* SetIsHorizontalScrollChainingEnabled)(__x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewerStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyObject* element,
        boolean isHorizontalScrollChainingEnabled);
    HRESULT (STDMETHODCALLTYPE* get_IsVerticalScrollChainingEnabledProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewerStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* GetIsVerticalScrollChainingEnabled)(__x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewerStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyObject* element,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* SetIsVerticalScrollChainingEnabled)(__x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewerStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyObject* element,
        boolean isVerticalScrollChainingEnabled);
    HRESULT (STDMETHODCALLTYPE* get_IsZoomChainingEnabledProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewerStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* GetIsZoomChainingEnabled)(__x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewerStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyObject* element,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* SetIsZoomChainingEnabled)(__x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewerStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyObject* element,
        boolean isZoomChainingEnabled);
    HRESULT (STDMETHODCALLTYPE* get_IsScrollInertiaEnabledProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewerStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* GetIsScrollInertiaEnabled)(__x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewerStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyObject* element,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* SetIsScrollInertiaEnabled)(__x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewerStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyObject* element,
        boolean isScrollInertiaEnabled);
    HRESULT (STDMETHODCALLTYPE* get_IsZoomInertiaEnabledProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewerStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* GetIsZoomInertiaEnabled)(__x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewerStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyObject* element,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* SetIsZoomInertiaEnabled)(__x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewerStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyObject* element,
        boolean isZoomInertiaEnabled);
    HRESULT (STDMETHODCALLTYPE* get_HorizontalScrollModeProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewerStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* GetHorizontalScrollMode)(__x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewerStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyObject* element,
        enum __x_ABI_CWindows_CUI_CXaml_CControls_CScrollMode* result);
    HRESULT (STDMETHODCALLTYPE* SetHorizontalScrollMode)(__x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewerStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyObject* element,
        enum __x_ABI_CWindows_CUI_CXaml_CControls_CScrollMode horizontalScrollMode);
    HRESULT (STDMETHODCALLTYPE* get_VerticalScrollModeProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewerStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* GetVerticalScrollMode)(__x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewerStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyObject* element,
        enum __x_ABI_CWindows_CUI_CXaml_CControls_CScrollMode* result);
    HRESULT (STDMETHODCALLTYPE* SetVerticalScrollMode)(__x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewerStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyObject* element,
        enum __x_ABI_CWindows_CUI_CXaml_CControls_CScrollMode verticalScrollMode);
    HRESULT (STDMETHODCALLTYPE* get_ZoomModeProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewerStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* GetZoomMode)(__x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewerStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyObject* element,
        enum __x_ABI_CWindows_CUI_CXaml_CControls_CZoomMode* result);
    HRESULT (STDMETHODCALLTYPE* SetZoomMode)(__x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewerStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyObject* element,
        enum __x_ABI_CWindows_CUI_CXaml_CControls_CZoomMode zoomMode);
    HRESULT (STDMETHODCALLTYPE* get_IsDeferredScrollingEnabledProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewerStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* GetIsDeferredScrollingEnabled)(__x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewerStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyObject* element,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* SetIsDeferredScrollingEnabled)(__x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewerStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyObject* element,
        boolean isDeferredScrollingEnabled);
    HRESULT (STDMETHODCALLTYPE* get_BringIntoViewOnFocusChangeProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewerStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* GetBringIntoViewOnFocusChange)(__x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewerStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyObject* element,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* SetBringIntoViewOnFocusChange)(__x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewerStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyObject* element,
        boolean bringIntoViewOnFocusChange);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewerStaticsVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewerStatics
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewerStaticsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewerStatics;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewerStatics_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewerStatics2_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewerStatics2_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewerStatics2Vtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewerStatics2* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewerStatics2* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewerStatics2* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewerStatics2* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewerStatics2* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewerStatics2* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_TopLeftHeaderProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewerStatics2* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_LeftHeaderProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewerStatics2* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_TopHeaderProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewerStatics2* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewerStatics2Vtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewerStatics2
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewerStatics2Vtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewerStatics2;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewerStatics2_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewerStatics4_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewerStatics4_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewerStatics4Vtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewerStatics4* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewerStatics4* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewerStatics4* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewerStatics4* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewerStatics4* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewerStatics4* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_ReduceViewportForCoreInputViewOcclusionsProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewerStatics4* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_HorizontalAnchorRatioProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewerStatics4* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_VerticalAnchorRatioProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewerStatics4* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_CanContentRenderOutsideBoundsProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewerStatics4* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* GetCanContentRenderOutsideBounds)(__x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewerStatics4* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyObject* element,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* SetCanContentRenderOutsideBounds)(__x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewerStatics4* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyObject* element,
        boolean canContentRenderOutsideBounds);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewerStatics4Vtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewerStatics4
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewerStatics4Vtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewerStatics4;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewerStatics4_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewerView_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewerView_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewerViewVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewerView* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewerView* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewerView* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewerView* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewerView* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewerView* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_HorizontalOffset)(__x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewerView* This,
        DOUBLE* value);
    HRESULT (STDMETHODCALLTYPE* get_VerticalOffset)(__x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewerView* This,
        DOUBLE* value);
    HRESULT (STDMETHODCALLTYPE* get_ZoomFactor)(__x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewerView* This,
        FLOAT* value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewerViewVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewerView
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewerViewVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewerView;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewerView_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewerViewChangedEventArgs_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewerViewChangedEventArgs_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewerViewChangedEventArgsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewerViewChangedEventArgs* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewerViewChangedEventArgs* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewerViewChangedEventArgs* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewerViewChangedEventArgs* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewerViewChangedEventArgs* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewerViewChangedEventArgs* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_IsIntermediate)(__x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewerViewChangedEventArgs* This,
        boolean* value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewerViewChangedEventArgsVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewerViewChangedEventArgs
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewerViewChangedEventArgsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewerViewChangedEventArgs;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewerViewChangedEventArgs_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewerViewChangingEventArgs_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewerViewChangingEventArgs_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewerViewChangingEventArgsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewerViewChangingEventArgs* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewerViewChangingEventArgs* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewerViewChangingEventArgs* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewerViewChangingEventArgs* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewerViewChangingEventArgs* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewerViewChangingEventArgs* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_NextView)(__x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewerViewChangingEventArgs* This,
        __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewerView** value);
    HRESULT (STDMETHODCALLTYPE* get_FinalView)(__x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewerViewChangingEventArgs* This,
        __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewerView** value);
    HRESULT (STDMETHODCALLTYPE* get_IsInertial)(__x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewerViewChangingEventArgs* This,
        boolean* value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewerViewChangingEventArgsVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewerViewChangingEventArgs
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewerViewChangingEventArgsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewerViewChangingEventArgs;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewerViewChangingEventArgs_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CISearchBox_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CControls_CISearchBox_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CISearchBoxVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CControls_CISearchBox* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CControls_CISearchBox* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CControls_CISearchBox* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CControls_CISearchBox* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CControls_CISearchBox* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CControls_CISearchBox* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_SearchHistoryEnabled)(__x_ABI_CWindows_CUI_CXaml_CControls_CISearchBox* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* put_SearchHistoryEnabled)(__x_ABI_CWindows_CUI_CXaml_CControls_CISearchBox* This,
        boolean value);
    HRESULT (STDMETHODCALLTYPE* get_SearchHistoryContext)(__x_ABI_CWindows_CUI_CXaml_CControls_CISearchBox* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* put_SearchHistoryContext)(__x_ABI_CWindows_CUI_CXaml_CControls_CISearchBox* This,
        HSTRING value);
    HRESULT (STDMETHODCALLTYPE* get_PlaceholderText)(__x_ABI_CWindows_CUI_CXaml_CControls_CISearchBox* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* put_PlaceholderText)(__x_ABI_CWindows_CUI_CXaml_CControls_CISearchBox* This,
        HSTRING value);
    HRESULT (STDMETHODCALLTYPE* get_QueryText)(__x_ABI_CWindows_CUI_CXaml_CControls_CISearchBox* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* put_QueryText)(__x_ABI_CWindows_CUI_CXaml_CControls_CISearchBox* This,
        HSTRING value);
    HRESULT (STDMETHODCALLTYPE* get_FocusOnKeyboardInput)(__x_ABI_CWindows_CUI_CXaml_CControls_CISearchBox* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* put_FocusOnKeyboardInput)(__x_ABI_CWindows_CUI_CXaml_CControls_CISearchBox* This,
        boolean value);
    HRESULT (STDMETHODCALLTYPE* get_ChooseSuggestionOnEnter)(__x_ABI_CWindows_CUI_CXaml_CControls_CISearchBox* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* put_ChooseSuggestionOnEnter)(__x_ABI_CWindows_CUI_CXaml_CControls_CISearchBox* This,
        boolean value);
    HRESULT (STDMETHODCALLTYPE* add_QueryChanged)(__x_ABI_CWindows_CUI_CXaml_CControls_CISearchBox* This,
        __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CSearchBox___x_ABI_CWindows__CUI__CXaml__CControls__CSearchBoxQueryChangedEventArgs* handler,
        EventRegistrationToken* token);
    HRESULT (STDMETHODCALLTYPE* remove_QueryChanged)(__x_ABI_CWindows_CUI_CXaml_CControls_CISearchBox* This,
        EventRegistrationToken token);
    HRESULT (STDMETHODCALLTYPE* add_SuggestionsRequested)(__x_ABI_CWindows_CUI_CXaml_CControls_CISearchBox* This,
        __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CSearchBox___x_ABI_CWindows__CUI__CXaml__CControls__CSearchBoxSuggestionsRequestedEventArgs* handler,
        EventRegistrationToken* token);
    HRESULT (STDMETHODCALLTYPE* remove_SuggestionsRequested)(__x_ABI_CWindows_CUI_CXaml_CControls_CISearchBox* This,
        EventRegistrationToken token);
    HRESULT (STDMETHODCALLTYPE* add_QuerySubmitted)(__x_ABI_CWindows_CUI_CXaml_CControls_CISearchBox* This,
        __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CSearchBox___x_ABI_CWindows__CUI__CXaml__CControls__CSearchBoxQuerySubmittedEventArgs* handler,
        EventRegistrationToken* token);
    HRESULT (STDMETHODCALLTYPE* remove_QuerySubmitted)(__x_ABI_CWindows_CUI_CXaml_CControls_CISearchBox* This,
        EventRegistrationToken token);
    HRESULT (STDMETHODCALLTYPE* add_ResultSuggestionChosen)(__x_ABI_CWindows_CUI_CXaml_CControls_CISearchBox* This,
        __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CSearchBox___x_ABI_CWindows__CUI__CXaml__CControls__CSearchBoxResultSuggestionChosenEventArgs* handler,
        EventRegistrationToken* token);
    HRESULT (STDMETHODCALLTYPE* remove_ResultSuggestionChosen)(__x_ABI_CWindows_CUI_CXaml_CControls_CISearchBox* This,
        EventRegistrationToken token);
    HRESULT (STDMETHODCALLTYPE* add_PrepareForFocusOnKeyboardInput)(__x_ABI_CWindows_CUI_CXaml_CControls_CISearchBox* This,
        __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CSearchBox___x_ABI_CWindows__CUI__CXaml__CRoutedEventArgs* handler,
        EventRegistrationToken* token);
    HRESULT (STDMETHODCALLTYPE* remove_PrepareForFocusOnKeyboardInput)(__x_ABI_CWindows_CUI_CXaml_CControls_CISearchBox* This,
        EventRegistrationToken token);
    HRESULT (STDMETHODCALLTYPE* SetLocalContentSuggestionSettings)(__x_ABI_CWindows_CUI_CXaml_CControls_CISearchBox* This,
        __x_ABI_CWindows_CApplicationModel_CSearch_CILocalContentSuggestionSettings* settings);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CISearchBoxVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CISearchBox
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CISearchBoxVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CISearchBox;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CISearchBox_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CISearchBoxFactory_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CControls_CISearchBoxFactory_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CISearchBoxFactoryVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CControls_CISearchBoxFactory* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CControls_CISearchBoxFactory* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CControls_CISearchBoxFactory* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CControls_CISearchBoxFactory* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CControls_CISearchBoxFactory* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CControls_CISearchBoxFactory* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* CreateInstance)(__x_ABI_CWindows_CUI_CXaml_CControls_CISearchBoxFactory* This,
        IInspectable* baseInterface,
        IInspectable** innerInterface,
        __x_ABI_CWindows_CUI_CXaml_CControls_CISearchBox** value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CISearchBoxFactoryVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CISearchBoxFactory
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CISearchBoxFactoryVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CISearchBoxFactory;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CISearchBoxFactory_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CISearchBoxQueryChangedEventArgs_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CControls_CISearchBoxQueryChangedEventArgs_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CISearchBoxQueryChangedEventArgsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CControls_CISearchBoxQueryChangedEventArgs* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CControls_CISearchBoxQueryChangedEventArgs* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CControls_CISearchBoxQueryChangedEventArgs* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CControls_CISearchBoxQueryChangedEventArgs* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CControls_CISearchBoxQueryChangedEventArgs* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CControls_CISearchBoxQueryChangedEventArgs* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_QueryText)(__x_ABI_CWindows_CUI_CXaml_CControls_CISearchBoxQueryChangedEventArgs* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* get_Language)(__x_ABI_CWindows_CUI_CXaml_CControls_CISearchBoxQueryChangedEventArgs* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* get_LinguisticDetails)(__x_ABI_CWindows_CUI_CXaml_CControls_CISearchBoxQueryChangedEventArgs* This,
        __x_ABI_CWindows_CApplicationModel_CSearch_CISearchQueryLinguisticDetails** value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CISearchBoxQueryChangedEventArgsVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CISearchBoxQueryChangedEventArgs
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CISearchBoxQueryChangedEventArgsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CISearchBoxQueryChangedEventArgs;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CISearchBoxQueryChangedEventArgs_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CISearchBoxQuerySubmittedEventArgs_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CControls_CISearchBoxQuerySubmittedEventArgs_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CISearchBoxQuerySubmittedEventArgsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CControls_CISearchBoxQuerySubmittedEventArgs* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CControls_CISearchBoxQuerySubmittedEventArgs* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CControls_CISearchBoxQuerySubmittedEventArgs* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CControls_CISearchBoxQuerySubmittedEventArgs* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CControls_CISearchBoxQuerySubmittedEventArgs* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CControls_CISearchBoxQuerySubmittedEventArgs* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_QueryText)(__x_ABI_CWindows_CUI_CXaml_CControls_CISearchBoxQuerySubmittedEventArgs* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* get_Language)(__x_ABI_CWindows_CUI_CXaml_CControls_CISearchBoxQuerySubmittedEventArgs* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* get_LinguisticDetails)(__x_ABI_CWindows_CUI_CXaml_CControls_CISearchBoxQuerySubmittedEventArgs* This,
        __x_ABI_CWindows_CApplicationModel_CSearch_CISearchQueryLinguisticDetails** value);
    HRESULT (STDMETHODCALLTYPE* get_KeyModifiers)(__x_ABI_CWindows_CUI_CXaml_CControls_CISearchBoxQuerySubmittedEventArgs* This,
        enum __x_ABI_CWindows_CSystem_CVirtualKeyModifiers* value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CISearchBoxQuerySubmittedEventArgsVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CISearchBoxQuerySubmittedEventArgs
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CISearchBoxQuerySubmittedEventArgsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CISearchBoxQuerySubmittedEventArgs;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CISearchBoxQuerySubmittedEventArgs_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CISearchBoxResultSuggestionChosenEventArgs_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CControls_CISearchBoxResultSuggestionChosenEventArgs_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CISearchBoxResultSuggestionChosenEventArgsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CControls_CISearchBoxResultSuggestionChosenEventArgs* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CControls_CISearchBoxResultSuggestionChosenEventArgs* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CControls_CISearchBoxResultSuggestionChosenEventArgs* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CControls_CISearchBoxResultSuggestionChosenEventArgs* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CControls_CISearchBoxResultSuggestionChosenEventArgs* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CControls_CISearchBoxResultSuggestionChosenEventArgs* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Tag)(__x_ABI_CWindows_CUI_CXaml_CControls_CISearchBoxResultSuggestionChosenEventArgs* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* get_KeyModifiers)(__x_ABI_CWindows_CUI_CXaml_CControls_CISearchBoxResultSuggestionChosenEventArgs* This,
        enum __x_ABI_CWindows_CSystem_CVirtualKeyModifiers* value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CISearchBoxResultSuggestionChosenEventArgsVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CISearchBoxResultSuggestionChosenEventArgs
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CISearchBoxResultSuggestionChosenEventArgsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CISearchBoxResultSuggestionChosenEventArgs;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CISearchBoxResultSuggestionChosenEventArgs_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CISearchBoxStatics_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CControls_CISearchBoxStatics_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CISearchBoxStaticsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CControls_CISearchBoxStatics* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CControls_CISearchBoxStatics* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CControls_CISearchBoxStatics* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CControls_CISearchBoxStatics* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CControls_CISearchBoxStatics* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CControls_CISearchBoxStatics* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_SearchHistoryEnabledProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CISearchBoxStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_SearchHistoryContextProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CISearchBoxStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_PlaceholderTextProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CISearchBoxStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_QueryTextProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CISearchBoxStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_FocusOnKeyboardInputProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CISearchBoxStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_ChooseSuggestionOnEnterProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CISearchBoxStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CISearchBoxStaticsVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CISearchBoxStatics
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CISearchBoxStaticsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CISearchBoxStatics;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CISearchBoxStatics_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CISearchBoxSuggestionsRequestedEventArgs_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CControls_CISearchBoxSuggestionsRequestedEventArgs_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CISearchBoxSuggestionsRequestedEventArgsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CControls_CISearchBoxSuggestionsRequestedEventArgs* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CControls_CISearchBoxSuggestionsRequestedEventArgs* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CControls_CISearchBoxSuggestionsRequestedEventArgs* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CControls_CISearchBoxSuggestionsRequestedEventArgs* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CControls_CISearchBoxSuggestionsRequestedEventArgs* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CControls_CISearchBoxSuggestionsRequestedEventArgs* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_QueryText)(__x_ABI_CWindows_CUI_CXaml_CControls_CISearchBoxSuggestionsRequestedEventArgs* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* get_Language)(__x_ABI_CWindows_CUI_CXaml_CControls_CISearchBoxSuggestionsRequestedEventArgs* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* get_LinguisticDetails)(__x_ABI_CWindows_CUI_CXaml_CControls_CISearchBoxSuggestionsRequestedEventArgs* This,
        __x_ABI_CWindows_CApplicationModel_CSearch_CISearchQueryLinguisticDetails** value);
    HRESULT (STDMETHODCALLTYPE* get_Request)(__x_ABI_CWindows_CUI_CXaml_CControls_CISearchBoxSuggestionsRequestedEventArgs* This,
        __x_ABI_CWindows_CApplicationModel_CSearch_CISearchSuggestionsRequest** value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CISearchBoxSuggestionsRequestedEventArgsVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CISearchBoxSuggestionsRequestedEventArgs
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CISearchBoxSuggestionsRequestedEventArgsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CISearchBoxSuggestionsRequestedEventArgs;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CISearchBoxSuggestionsRequestedEventArgs_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CISectionsInViewChangedEventArgs_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CControls_CISectionsInViewChangedEventArgs_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CISectionsInViewChangedEventArgsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CControls_CISectionsInViewChangedEventArgs* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CControls_CISectionsInViewChangedEventArgs* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CControls_CISectionsInViewChangedEventArgs* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CControls_CISectionsInViewChangedEventArgs* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CControls_CISectionsInViewChangedEventArgs* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CControls_CISectionsInViewChangedEventArgs* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_AddedSections)(__x_ABI_CWindows_CUI_CXaml_CControls_CISectionsInViewChangedEventArgs* This,
        __x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CXaml__CControls__CHubSection** value);
    HRESULT (STDMETHODCALLTYPE* get_RemovedSections)(__x_ABI_CWindows_CUI_CXaml_CControls_CISectionsInViewChangedEventArgs* This,
        __x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CXaml__CControls__CHubSection** value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CISectionsInViewChangedEventArgsVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CISectionsInViewChangedEventArgs
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CISectionsInViewChangedEventArgsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CISectionsInViewChangedEventArgs;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CISectionsInViewChangedEventArgs_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CISectionsInViewChangedEventArgsFactory_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CControls_CISectionsInViewChangedEventArgsFactory_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CISectionsInViewChangedEventArgsFactoryVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CControls_CISectionsInViewChangedEventArgsFactory* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CControls_CISectionsInViewChangedEventArgsFactory* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CControls_CISectionsInViewChangedEventArgsFactory* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CControls_CISectionsInViewChangedEventArgsFactory* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CControls_CISectionsInViewChangedEventArgsFactory* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CControls_CISectionsInViewChangedEventArgsFactory* This,
            TrustLevel* trustLevel);
    
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CISectionsInViewChangedEventArgsFactoryVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CISectionsInViewChangedEventArgsFactory
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CISectionsInViewChangedEventArgsFactoryVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CISectionsInViewChangedEventArgsFactory;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CISectionsInViewChangedEventArgsFactory_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CISelectionChangedEventArgs_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CControls_CISelectionChangedEventArgs_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CISelectionChangedEventArgsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CControls_CISelectionChangedEventArgs* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CControls_CISelectionChangedEventArgs* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CControls_CISelectionChangedEventArgs* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CControls_CISelectionChangedEventArgs* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CControls_CISelectionChangedEventArgs* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CControls_CISelectionChangedEventArgs* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_AddedItems)(__x_ABI_CWindows_CUI_CXaml_CControls_CISelectionChangedEventArgs* This,
        __x_ABI_C__FIVector_1_IInspectable** value);
    HRESULT (STDMETHODCALLTYPE* get_RemovedItems)(__x_ABI_CWindows_CUI_CXaml_CControls_CISelectionChangedEventArgs* This,
        __x_ABI_C__FIVector_1_IInspectable** value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CISelectionChangedEventArgsVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CISelectionChangedEventArgs
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CISelectionChangedEventArgsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CISelectionChangedEventArgs;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CISelectionChangedEventArgs_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CISelectionChangedEventArgsFactory_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CControls_CISelectionChangedEventArgsFactory_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CISelectionChangedEventArgsFactoryVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CControls_CISelectionChangedEventArgsFactory* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CControls_CISelectionChangedEventArgsFactory* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CControls_CISelectionChangedEventArgsFactory* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CControls_CISelectionChangedEventArgsFactory* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CControls_CISelectionChangedEventArgsFactory* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CControls_CISelectionChangedEventArgsFactory* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* CreateInstanceWithRemovedItemsAndAddedItems)(__x_ABI_CWindows_CUI_CXaml_CControls_CISelectionChangedEventArgsFactory* This,
        __x_ABI_C__FIVector_1_IInspectable* removedItems,
        __x_ABI_C__FIVector_1_IInspectable* addedItems,
        IInspectable* baseInterface,
        IInspectable** innerInterface,
        __x_ABI_CWindows_CUI_CXaml_CControls_CISelectionChangedEventArgs** value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CISelectionChangedEventArgsFactoryVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CISelectionChangedEventArgsFactory
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CISelectionChangedEventArgsFactoryVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CISelectionChangedEventArgsFactory;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CISelectionChangedEventArgsFactory_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CISemanticZoom_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CControls_CISemanticZoom_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CISemanticZoomVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CControls_CISemanticZoom* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CControls_CISemanticZoom* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CControls_CISemanticZoom* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CControls_CISemanticZoom* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CControls_CISemanticZoom* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CControls_CISemanticZoom* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_ZoomedInView)(__x_ABI_CWindows_CUI_CXaml_CControls_CISemanticZoom* This,
        __x_ABI_CWindows_CUI_CXaml_CControls_CISemanticZoomInformation** value);
    HRESULT (STDMETHODCALLTYPE* put_ZoomedInView)(__x_ABI_CWindows_CUI_CXaml_CControls_CISemanticZoom* This,
        __x_ABI_CWindows_CUI_CXaml_CControls_CISemanticZoomInformation* value);
    HRESULT (STDMETHODCALLTYPE* get_ZoomedOutView)(__x_ABI_CWindows_CUI_CXaml_CControls_CISemanticZoom* This,
        __x_ABI_CWindows_CUI_CXaml_CControls_CISemanticZoomInformation** value);
    HRESULT (STDMETHODCALLTYPE* put_ZoomedOutView)(__x_ABI_CWindows_CUI_CXaml_CControls_CISemanticZoom* This,
        __x_ABI_CWindows_CUI_CXaml_CControls_CISemanticZoomInformation* value);
    HRESULT (STDMETHODCALLTYPE* get_IsZoomedInViewActive)(__x_ABI_CWindows_CUI_CXaml_CControls_CISemanticZoom* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* put_IsZoomedInViewActive)(__x_ABI_CWindows_CUI_CXaml_CControls_CISemanticZoom* This,
        boolean value);
    HRESULT (STDMETHODCALLTYPE* get_CanChangeViews)(__x_ABI_CWindows_CUI_CXaml_CControls_CISemanticZoom* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* put_CanChangeViews)(__x_ABI_CWindows_CUI_CXaml_CControls_CISemanticZoom* This,
        boolean value);
    HRESULT (STDMETHODCALLTYPE* add_ViewChangeStarted)(__x_ABI_CWindows_CUI_CXaml_CControls_CISemanticZoom* This,
        __x_ABI_CWindows_CUI_CXaml_CControls_CISemanticZoomViewChangedEventHandler* handler,
        EventRegistrationToken* token);
    HRESULT (STDMETHODCALLTYPE* remove_ViewChangeStarted)(__x_ABI_CWindows_CUI_CXaml_CControls_CISemanticZoom* This,
        EventRegistrationToken token);
    HRESULT (STDMETHODCALLTYPE* add_ViewChangeCompleted)(__x_ABI_CWindows_CUI_CXaml_CControls_CISemanticZoom* This,
        __x_ABI_CWindows_CUI_CXaml_CControls_CISemanticZoomViewChangedEventHandler* handler,
        EventRegistrationToken* token);
    HRESULT (STDMETHODCALLTYPE* remove_ViewChangeCompleted)(__x_ABI_CWindows_CUI_CXaml_CControls_CISemanticZoom* This,
        EventRegistrationToken token);
    HRESULT (STDMETHODCALLTYPE* ToggleActiveView)(__x_ABI_CWindows_CUI_CXaml_CControls_CISemanticZoom* This);
    HRESULT (STDMETHODCALLTYPE* get_IsZoomOutButtonEnabled)(__x_ABI_CWindows_CUI_CXaml_CControls_CISemanticZoom* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* put_IsZoomOutButtonEnabled)(__x_ABI_CWindows_CUI_CXaml_CControls_CISemanticZoom* This,
        boolean value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CISemanticZoomVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CISemanticZoom
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CISemanticZoomVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CISemanticZoom;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CISemanticZoom_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CISemanticZoomInformation_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CControls_CISemanticZoomInformation_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CISemanticZoomInformationVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CControls_CISemanticZoomInformation* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CControls_CISemanticZoomInformation* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CControls_CISemanticZoomInformation* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CControls_CISemanticZoomInformation* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CControls_CISemanticZoomInformation* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CControls_CISemanticZoomInformation* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_SemanticZoomOwner)(__x_ABI_CWindows_CUI_CXaml_CControls_CISemanticZoomInformation* This,
        __x_ABI_CWindows_CUI_CXaml_CControls_CISemanticZoom** value);
    HRESULT (STDMETHODCALLTYPE* put_SemanticZoomOwner)(__x_ABI_CWindows_CUI_CXaml_CControls_CISemanticZoomInformation* This,
        __x_ABI_CWindows_CUI_CXaml_CControls_CISemanticZoom* value);
    HRESULT (STDMETHODCALLTYPE* get_IsActiveView)(__x_ABI_CWindows_CUI_CXaml_CControls_CISemanticZoomInformation* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* put_IsActiveView)(__x_ABI_CWindows_CUI_CXaml_CControls_CISemanticZoomInformation* This,
        boolean value);
    HRESULT (STDMETHODCALLTYPE* get_IsZoomedInView)(__x_ABI_CWindows_CUI_CXaml_CControls_CISemanticZoomInformation* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* put_IsZoomedInView)(__x_ABI_CWindows_CUI_CXaml_CControls_CISemanticZoomInformation* This,
        boolean value);
    HRESULT (STDMETHODCALLTYPE* InitializeViewChange)(__x_ABI_CWindows_CUI_CXaml_CControls_CISemanticZoomInformation* This);
    HRESULT (STDMETHODCALLTYPE* CompleteViewChange)(__x_ABI_CWindows_CUI_CXaml_CControls_CISemanticZoomInformation* This);
    HRESULT (STDMETHODCALLTYPE* MakeVisible)(__x_ABI_CWindows_CUI_CXaml_CControls_CISemanticZoomInformation* This,
        __x_ABI_CWindows_CUI_CXaml_CControls_CISemanticZoomLocation* item);
    HRESULT (STDMETHODCALLTYPE* StartViewChangeFrom)(__x_ABI_CWindows_CUI_CXaml_CControls_CISemanticZoomInformation* This,
        __x_ABI_CWindows_CUI_CXaml_CControls_CISemanticZoomLocation* source,
        __x_ABI_CWindows_CUI_CXaml_CControls_CISemanticZoomLocation* destination);
    HRESULT (STDMETHODCALLTYPE* StartViewChangeTo)(__x_ABI_CWindows_CUI_CXaml_CControls_CISemanticZoomInformation* This,
        __x_ABI_CWindows_CUI_CXaml_CControls_CISemanticZoomLocation* source,
        __x_ABI_CWindows_CUI_CXaml_CControls_CISemanticZoomLocation* destination);
    HRESULT (STDMETHODCALLTYPE* CompleteViewChangeFrom)(__x_ABI_CWindows_CUI_CXaml_CControls_CISemanticZoomInformation* This,
        __x_ABI_CWindows_CUI_CXaml_CControls_CISemanticZoomLocation* source,
        __x_ABI_CWindows_CUI_CXaml_CControls_CISemanticZoomLocation* destination);
    HRESULT (STDMETHODCALLTYPE* CompleteViewChangeTo)(__x_ABI_CWindows_CUI_CXaml_CControls_CISemanticZoomInformation* This,
        __x_ABI_CWindows_CUI_CXaml_CControls_CISemanticZoomLocation* source,
        __x_ABI_CWindows_CUI_CXaml_CControls_CISemanticZoomLocation* destination);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CISemanticZoomInformationVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CISemanticZoomInformation
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CISemanticZoomInformationVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CISemanticZoomInformation;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CISemanticZoomInformation_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CISemanticZoomLocation_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CControls_CISemanticZoomLocation_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CISemanticZoomLocationVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CControls_CISemanticZoomLocation* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CControls_CISemanticZoomLocation* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CControls_CISemanticZoomLocation* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CControls_CISemanticZoomLocation* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CControls_CISemanticZoomLocation* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CControls_CISemanticZoomLocation* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Item)(__x_ABI_CWindows_CUI_CXaml_CControls_CISemanticZoomLocation* This,
        IInspectable** value);
    HRESULT (STDMETHODCALLTYPE* put_Item)(__x_ABI_CWindows_CUI_CXaml_CControls_CISemanticZoomLocation* This,
        IInspectable* value);
    HRESULT (STDMETHODCALLTYPE* get_Bounds)(__x_ABI_CWindows_CUI_CXaml_CControls_CISemanticZoomLocation* This,
        struct __x_ABI_CWindows_CFoundation_CRect* value);
    HRESULT (STDMETHODCALLTYPE* put_Bounds)(__x_ABI_CWindows_CUI_CXaml_CControls_CISemanticZoomLocation* This,
        struct __x_ABI_CWindows_CFoundation_CRect value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CISemanticZoomLocationVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CISemanticZoomLocation
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CISemanticZoomLocationVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CISemanticZoomLocation;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CISemanticZoomLocation_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CISemanticZoomStatics_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CControls_CISemanticZoomStatics_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CISemanticZoomStaticsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CControls_CISemanticZoomStatics* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CControls_CISemanticZoomStatics* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CControls_CISemanticZoomStatics* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CControls_CISemanticZoomStatics* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CControls_CISemanticZoomStatics* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CControls_CISemanticZoomStatics* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_ZoomedInViewProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CISemanticZoomStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_ZoomedOutViewProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CISemanticZoomStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_IsZoomedInViewActiveProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CISemanticZoomStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_CanChangeViewsProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CISemanticZoomStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_IsZoomOutButtonEnabledProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CISemanticZoomStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CISemanticZoomStaticsVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CISemanticZoomStatics
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CISemanticZoomStaticsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CISemanticZoomStatics;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CISemanticZoomStatics_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CISemanticZoomViewChangedEventArgs_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CControls_CISemanticZoomViewChangedEventArgs_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CISemanticZoomViewChangedEventArgsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CControls_CISemanticZoomViewChangedEventArgs* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CControls_CISemanticZoomViewChangedEventArgs* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CControls_CISemanticZoomViewChangedEventArgs* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CControls_CISemanticZoomViewChangedEventArgs* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CControls_CISemanticZoomViewChangedEventArgs* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CControls_CISemanticZoomViewChangedEventArgs* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_IsSourceZoomedInView)(__x_ABI_CWindows_CUI_CXaml_CControls_CISemanticZoomViewChangedEventArgs* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* put_IsSourceZoomedInView)(__x_ABI_CWindows_CUI_CXaml_CControls_CISemanticZoomViewChangedEventArgs* This,
        boolean value);
    HRESULT (STDMETHODCALLTYPE* get_SourceItem)(__x_ABI_CWindows_CUI_CXaml_CControls_CISemanticZoomViewChangedEventArgs* This,
        __x_ABI_CWindows_CUI_CXaml_CControls_CISemanticZoomLocation** value);
    HRESULT (STDMETHODCALLTYPE* put_SourceItem)(__x_ABI_CWindows_CUI_CXaml_CControls_CISemanticZoomViewChangedEventArgs* This,
        __x_ABI_CWindows_CUI_CXaml_CControls_CISemanticZoomLocation* value);
    HRESULT (STDMETHODCALLTYPE* get_DestinationItem)(__x_ABI_CWindows_CUI_CXaml_CControls_CISemanticZoomViewChangedEventArgs* This,
        __x_ABI_CWindows_CUI_CXaml_CControls_CISemanticZoomLocation** value);
    HRESULT (STDMETHODCALLTYPE* put_DestinationItem)(__x_ABI_CWindows_CUI_CXaml_CControls_CISemanticZoomViewChangedEventArgs* This,
        __x_ABI_CWindows_CUI_CXaml_CControls_CISemanticZoomLocation* value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CISemanticZoomViewChangedEventArgsVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CISemanticZoomViewChangedEventArgs
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CISemanticZoomViewChangedEventArgsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CISemanticZoomViewChangedEventArgs;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CISemanticZoomViewChangedEventArgs_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CISettingsFlyout_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CControls_CISettingsFlyout_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CISettingsFlyoutVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CControls_CISettingsFlyout* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CControls_CISettingsFlyout* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CControls_CISettingsFlyout* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CControls_CISettingsFlyout* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CControls_CISettingsFlyout* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CControls_CISettingsFlyout* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Title)(__x_ABI_CWindows_CUI_CXaml_CControls_CISettingsFlyout* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* put_Title)(__x_ABI_CWindows_CUI_CXaml_CControls_CISettingsFlyout* This,
        HSTRING value);
    HRESULT (STDMETHODCALLTYPE* get_HeaderBackground)(__x_ABI_CWindows_CUI_CXaml_CControls_CISettingsFlyout* This,
        __x_ABI_CWindows_CUI_CXaml_CMedia_CIBrush** value);
    HRESULT (STDMETHODCALLTYPE* put_HeaderBackground)(__x_ABI_CWindows_CUI_CXaml_CControls_CISettingsFlyout* This,
        __x_ABI_CWindows_CUI_CXaml_CMedia_CIBrush* value);
    HRESULT (STDMETHODCALLTYPE* get_HeaderForeground)(__x_ABI_CWindows_CUI_CXaml_CControls_CISettingsFlyout* This,
        __x_ABI_CWindows_CUI_CXaml_CMedia_CIBrush** value);
    HRESULT (STDMETHODCALLTYPE* put_HeaderForeground)(__x_ABI_CWindows_CUI_CXaml_CControls_CISettingsFlyout* This,
        __x_ABI_CWindows_CUI_CXaml_CMedia_CIBrush* value);
    HRESULT (STDMETHODCALLTYPE* get_IconSource)(__x_ABI_CWindows_CUI_CXaml_CControls_CISettingsFlyout* This,
        __x_ABI_CWindows_CUI_CXaml_CMedia_CIImageSource** value);
    HRESULT (STDMETHODCALLTYPE* put_IconSource)(__x_ABI_CWindows_CUI_CXaml_CControls_CISettingsFlyout* This,
        __x_ABI_CWindows_CUI_CXaml_CMedia_CIImageSource* value);
    HRESULT (STDMETHODCALLTYPE* get_TemplateSettings)(__x_ABI_CWindows_CUI_CXaml_CControls_CISettingsFlyout* This,
        __x_ABI_CWindows_CUI_CXaml_CControls_CPrimitives_CISettingsFlyoutTemplateSettings** value);
    HRESULT (STDMETHODCALLTYPE* add_BackClick)(__x_ABI_CWindows_CUI_CXaml_CControls_CISettingsFlyout* This,
        __x_ABI_CWindows_CUI_CXaml_CControls_CIBackClickEventHandler* handler,
        EventRegistrationToken* token);
    HRESULT (STDMETHODCALLTYPE* remove_BackClick)(__x_ABI_CWindows_CUI_CXaml_CControls_CISettingsFlyout* This,
        EventRegistrationToken token);
    HRESULT (STDMETHODCALLTYPE* Show)(__x_ABI_CWindows_CUI_CXaml_CControls_CISettingsFlyout* This);
    HRESULT (STDMETHODCALLTYPE* ShowIndependent)(__x_ABI_CWindows_CUI_CXaml_CControls_CISettingsFlyout* This);
    HRESULT (STDMETHODCALLTYPE* Hide)(__x_ABI_CWindows_CUI_CXaml_CControls_CISettingsFlyout* This);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CISettingsFlyoutVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CISettingsFlyout
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CISettingsFlyoutVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CISettingsFlyout;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CISettingsFlyout_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CISettingsFlyoutFactory_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CControls_CISettingsFlyoutFactory_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CISettingsFlyoutFactoryVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CControls_CISettingsFlyoutFactory* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CControls_CISettingsFlyoutFactory* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CControls_CISettingsFlyoutFactory* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CControls_CISettingsFlyoutFactory* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CControls_CISettingsFlyoutFactory* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CControls_CISettingsFlyoutFactory* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* CreateInstance)(__x_ABI_CWindows_CUI_CXaml_CControls_CISettingsFlyoutFactory* This,
        IInspectable* baseInterface,
        IInspectable** innerInterface,
        __x_ABI_CWindows_CUI_CXaml_CControls_CISettingsFlyout** value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CISettingsFlyoutFactoryVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CISettingsFlyoutFactory
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CISettingsFlyoutFactoryVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CISettingsFlyoutFactory;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CISettingsFlyoutFactory_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CISettingsFlyoutStatics_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CControls_CISettingsFlyoutStatics_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CISettingsFlyoutStaticsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CControls_CISettingsFlyoutStatics* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CControls_CISettingsFlyoutStatics* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CControls_CISettingsFlyoutStatics* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CControls_CISettingsFlyoutStatics* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CControls_CISettingsFlyoutStatics* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CControls_CISettingsFlyoutStatics* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_TitleProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CISettingsFlyoutStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_HeaderBackgroundProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CISettingsFlyoutStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_HeaderForegroundProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CISettingsFlyoutStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_IconSourceProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CISettingsFlyoutStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CISettingsFlyoutStaticsVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CISettingsFlyoutStatics
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CISettingsFlyoutStaticsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CISettingsFlyoutStatics;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CISettingsFlyoutStatics_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CISlider_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CControls_CISlider_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CISliderVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CControls_CISlider* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CControls_CISlider* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CControls_CISlider* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CControls_CISlider* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CControls_CISlider* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CControls_CISlider* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_IntermediateValue)(__x_ABI_CWindows_CUI_CXaml_CControls_CISlider* This,
        DOUBLE* value);
    HRESULT (STDMETHODCALLTYPE* put_IntermediateValue)(__x_ABI_CWindows_CUI_CXaml_CControls_CISlider* This,
        DOUBLE value);
    HRESULT (STDMETHODCALLTYPE* get_StepFrequency)(__x_ABI_CWindows_CUI_CXaml_CControls_CISlider* This,
        DOUBLE* value);
    HRESULT (STDMETHODCALLTYPE* put_StepFrequency)(__x_ABI_CWindows_CUI_CXaml_CControls_CISlider* This,
        DOUBLE value);
    HRESULT (STDMETHODCALLTYPE* get_SnapsTo)(__x_ABI_CWindows_CUI_CXaml_CControls_CISlider* This,
        enum __x_ABI_CWindows_CUI_CXaml_CControls_CPrimitives_CSliderSnapsTo* value);
    HRESULT (STDMETHODCALLTYPE* put_SnapsTo)(__x_ABI_CWindows_CUI_CXaml_CControls_CISlider* This,
        enum __x_ABI_CWindows_CUI_CXaml_CControls_CPrimitives_CSliderSnapsTo value);
    HRESULT (STDMETHODCALLTYPE* get_TickFrequency)(__x_ABI_CWindows_CUI_CXaml_CControls_CISlider* This,
        DOUBLE* value);
    HRESULT (STDMETHODCALLTYPE* put_TickFrequency)(__x_ABI_CWindows_CUI_CXaml_CControls_CISlider* This,
        DOUBLE value);
    HRESULT (STDMETHODCALLTYPE* get_TickPlacement)(__x_ABI_CWindows_CUI_CXaml_CControls_CISlider* This,
        enum __x_ABI_CWindows_CUI_CXaml_CControls_CPrimitives_CTickPlacement* value);
    HRESULT (STDMETHODCALLTYPE* put_TickPlacement)(__x_ABI_CWindows_CUI_CXaml_CControls_CISlider* This,
        enum __x_ABI_CWindows_CUI_CXaml_CControls_CPrimitives_CTickPlacement value);
    HRESULT (STDMETHODCALLTYPE* get_Orientation)(__x_ABI_CWindows_CUI_CXaml_CControls_CISlider* This,
        enum __x_ABI_CWindows_CUI_CXaml_CControls_COrientation* value);
    HRESULT (STDMETHODCALLTYPE* put_Orientation)(__x_ABI_CWindows_CUI_CXaml_CControls_CISlider* This,
        enum __x_ABI_CWindows_CUI_CXaml_CControls_COrientation value);
    HRESULT (STDMETHODCALLTYPE* get_IsDirectionReversed)(__x_ABI_CWindows_CUI_CXaml_CControls_CISlider* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* put_IsDirectionReversed)(__x_ABI_CWindows_CUI_CXaml_CControls_CISlider* This,
        boolean value);
    HRESULT (STDMETHODCALLTYPE* get_IsThumbToolTipEnabled)(__x_ABI_CWindows_CUI_CXaml_CControls_CISlider* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* put_IsThumbToolTipEnabled)(__x_ABI_CWindows_CUI_CXaml_CControls_CISlider* This,
        boolean value);
    HRESULT (STDMETHODCALLTYPE* get_ThumbToolTipValueConverter)(__x_ABI_CWindows_CUI_CXaml_CControls_CISlider* This,
        __x_ABI_CWindows_CUI_CXaml_CData_CIValueConverter** value);
    HRESULT (STDMETHODCALLTYPE* put_ThumbToolTipValueConverter)(__x_ABI_CWindows_CUI_CXaml_CControls_CISlider* This,
        __x_ABI_CWindows_CUI_CXaml_CData_CIValueConverter* value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CISliderVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CISlider
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CISliderVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CISlider;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CISlider_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CISlider2_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CControls_CISlider2_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CISlider2Vtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CControls_CISlider2* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CControls_CISlider2* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CControls_CISlider2* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CControls_CISlider2* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CControls_CISlider2* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CControls_CISlider2* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Header)(__x_ABI_CWindows_CUI_CXaml_CControls_CISlider2* This,
        IInspectable** value);
    HRESULT (STDMETHODCALLTYPE* put_Header)(__x_ABI_CWindows_CUI_CXaml_CControls_CISlider2* This,
        IInspectable* value);
    HRESULT (STDMETHODCALLTYPE* get_HeaderTemplate)(__x_ABI_CWindows_CUI_CXaml_CControls_CISlider2* This,
        __x_ABI_CWindows_CUI_CXaml_CIDataTemplate** value);
    HRESULT (STDMETHODCALLTYPE* put_HeaderTemplate)(__x_ABI_CWindows_CUI_CXaml_CControls_CISlider2* This,
        __x_ABI_CWindows_CUI_CXaml_CIDataTemplate* value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CISlider2Vtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CISlider2
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CISlider2Vtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CISlider2;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CISlider2_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CISliderFactory_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CControls_CISliderFactory_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CISliderFactoryVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CControls_CISliderFactory* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CControls_CISliderFactory* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CControls_CISliderFactory* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CControls_CISliderFactory* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CControls_CISliderFactory* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CControls_CISliderFactory* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* CreateInstance)(__x_ABI_CWindows_CUI_CXaml_CControls_CISliderFactory* This,
        IInspectable* baseInterface,
        IInspectable** innerInterface,
        __x_ABI_CWindows_CUI_CXaml_CControls_CISlider** value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CISliderFactoryVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CISliderFactory
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CISliderFactoryVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CISliderFactory;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CISliderFactory_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CISliderStatics_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CControls_CISliderStatics_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CISliderStaticsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CControls_CISliderStatics* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CControls_CISliderStatics* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CControls_CISliderStatics* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CControls_CISliderStatics* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CControls_CISliderStatics* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CControls_CISliderStatics* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_IntermediateValueProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CISliderStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_StepFrequencyProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CISliderStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_SnapsToProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CISliderStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_TickFrequencyProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CISliderStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_TickPlacementProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CISliderStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_OrientationProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CISliderStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_IsDirectionReversedProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CISliderStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_IsThumbToolTipEnabledProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CISliderStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_ThumbToolTipValueConverterProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CISliderStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CISliderStaticsVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CISliderStatics
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CISliderStaticsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CISliderStatics;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CISliderStatics_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CISliderStatics2_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CControls_CISliderStatics2_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CISliderStatics2Vtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CControls_CISliderStatics2* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CControls_CISliderStatics2* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CControls_CISliderStatics2* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CControls_CISliderStatics2* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CControls_CISliderStatics2* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CControls_CISliderStatics2* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_HeaderProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CISliderStatics2* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_HeaderTemplateProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CISliderStatics2* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CISliderStatics2Vtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CISliderStatics2
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CISliderStatics2Vtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CISliderStatics2;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CISliderStatics2_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CISplitButton_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CControls_CISplitButton_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CISplitButtonVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CControls_CISplitButton* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CControls_CISplitButton* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CControls_CISplitButton* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CControls_CISplitButton* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CControls_CISplitButton* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CControls_CISplitButton* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Flyout)(__x_ABI_CWindows_CUI_CXaml_CControls_CISplitButton* This,
        __x_ABI_CWindows_CUI_CXaml_CControls_CPrimitives_CIFlyoutBase** value);
    HRESULT (STDMETHODCALLTYPE* put_Flyout)(__x_ABI_CWindows_CUI_CXaml_CControls_CISplitButton* This,
        __x_ABI_CWindows_CUI_CXaml_CControls_CPrimitives_CIFlyoutBase* value);
    HRESULT (STDMETHODCALLTYPE* get_Command)(__x_ABI_CWindows_CUI_CXaml_CControls_CISplitButton* This,
        __x_ABI_CWindows_CUI_CXaml_CInput_CICommand** value);
    HRESULT (STDMETHODCALLTYPE* put_Command)(__x_ABI_CWindows_CUI_CXaml_CControls_CISplitButton* This,
        __x_ABI_CWindows_CUI_CXaml_CInput_CICommand* value);
    HRESULT (STDMETHODCALLTYPE* get_CommandParameter)(__x_ABI_CWindows_CUI_CXaml_CControls_CISplitButton* This,
        IInspectable** value);
    HRESULT (STDMETHODCALLTYPE* put_CommandParameter)(__x_ABI_CWindows_CUI_CXaml_CControls_CISplitButton* This,
        IInspectable* value);
    HRESULT (STDMETHODCALLTYPE* add_Click)(__x_ABI_CWindows_CUI_CXaml_CControls_CISplitButton* This,
        __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CSplitButton___x_ABI_CWindows__CUI__CXaml__CControls__CSplitButtonClickEventArgs* handler,
        EventRegistrationToken* token);
    HRESULT (STDMETHODCALLTYPE* remove_Click)(__x_ABI_CWindows_CUI_CXaml_CControls_CISplitButton* This,
        EventRegistrationToken token);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CISplitButtonVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CISplitButton
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CISplitButtonVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CISplitButton;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CISplitButton_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CISplitButtonAutomationPeer_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CControls_CISplitButtonAutomationPeer_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CISplitButtonAutomationPeerVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CControls_CISplitButtonAutomationPeer* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CControls_CISplitButtonAutomationPeer* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CControls_CISplitButtonAutomationPeer* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CControls_CISplitButtonAutomationPeer* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CControls_CISplitButtonAutomationPeer* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CControls_CISplitButtonAutomationPeer* This,
            TrustLevel* trustLevel);
    
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CISplitButtonAutomationPeerVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CISplitButtonAutomationPeer
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CISplitButtonAutomationPeerVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CISplitButtonAutomationPeer;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CISplitButtonAutomationPeer_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CISplitButtonAutomationPeerFactory_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CControls_CISplitButtonAutomationPeerFactory_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CISplitButtonAutomationPeerFactoryVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CControls_CISplitButtonAutomationPeerFactory* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CControls_CISplitButtonAutomationPeerFactory* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CControls_CISplitButtonAutomationPeerFactory* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CControls_CISplitButtonAutomationPeerFactory* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CControls_CISplitButtonAutomationPeerFactory* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CControls_CISplitButtonAutomationPeerFactory* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* CreateInstance)(__x_ABI_CWindows_CUI_CXaml_CControls_CISplitButtonAutomationPeerFactory* This,
        __x_ABI_CWindows_CUI_CXaml_CControls_CISplitButton* owner,
        IInspectable* baseInterface,
        IInspectable** innerInterface,
        __x_ABI_CWindows_CUI_CXaml_CControls_CISplitButtonAutomationPeer** value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CISplitButtonAutomationPeerFactoryVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CISplitButtonAutomationPeerFactory
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CISplitButtonAutomationPeerFactoryVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CISplitButtonAutomationPeerFactory;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CISplitButtonAutomationPeerFactory_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CISplitButtonClickEventArgs_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CControls_CISplitButtonClickEventArgs_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CISplitButtonClickEventArgsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CControls_CISplitButtonClickEventArgs* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CControls_CISplitButtonClickEventArgs* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CControls_CISplitButtonClickEventArgs* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CControls_CISplitButtonClickEventArgs* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CControls_CISplitButtonClickEventArgs* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CControls_CISplitButtonClickEventArgs* This,
            TrustLevel* trustLevel);
    
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CISplitButtonClickEventArgsVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CISplitButtonClickEventArgs
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CISplitButtonClickEventArgsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CISplitButtonClickEventArgs;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CISplitButtonClickEventArgs_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CISplitButtonFactory_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CControls_CISplitButtonFactory_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CISplitButtonFactoryVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CControls_CISplitButtonFactory* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CControls_CISplitButtonFactory* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CControls_CISplitButtonFactory* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CControls_CISplitButtonFactory* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CControls_CISplitButtonFactory* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CControls_CISplitButtonFactory* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* CreateInstance)(__x_ABI_CWindows_CUI_CXaml_CControls_CISplitButtonFactory* This,
        IInspectable* baseInterface,
        IInspectable** innerInterface,
        __x_ABI_CWindows_CUI_CXaml_CControls_CISplitButton** value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CISplitButtonFactoryVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CISplitButtonFactory
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CISplitButtonFactoryVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CISplitButtonFactory;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CISplitButtonFactory_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CISplitButtonStatics_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CControls_CISplitButtonStatics_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CISplitButtonStaticsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CControls_CISplitButtonStatics* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CControls_CISplitButtonStatics* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CControls_CISplitButtonStatics* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CControls_CISplitButtonStatics* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CControls_CISplitButtonStatics* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CControls_CISplitButtonStatics* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_FlyoutProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CISplitButtonStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_CommandProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CISplitButtonStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_CommandParameterProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CISplitButtonStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CISplitButtonStaticsVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CISplitButtonStatics
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CISplitButtonStaticsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CISplitButtonStatics;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CISplitButtonStatics_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CISplitView_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CControls_CISplitView_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CISplitViewVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CControls_CISplitView* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CControls_CISplitView* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CControls_CISplitView* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CControls_CISplitView* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CControls_CISplitView* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CControls_CISplitView* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Content)(__x_ABI_CWindows_CUI_CXaml_CControls_CISplitView* This,
        __x_ABI_CWindows_CUI_CXaml_CIUIElement** value);
    HRESULT (STDMETHODCALLTYPE* put_Content)(__x_ABI_CWindows_CUI_CXaml_CControls_CISplitView* This,
        __x_ABI_CWindows_CUI_CXaml_CIUIElement* value);
    HRESULT (STDMETHODCALLTYPE* get_Pane)(__x_ABI_CWindows_CUI_CXaml_CControls_CISplitView* This,
        __x_ABI_CWindows_CUI_CXaml_CIUIElement** value);
    HRESULT (STDMETHODCALLTYPE* put_Pane)(__x_ABI_CWindows_CUI_CXaml_CControls_CISplitView* This,
        __x_ABI_CWindows_CUI_CXaml_CIUIElement* value);
    HRESULT (STDMETHODCALLTYPE* get_IsPaneOpen)(__x_ABI_CWindows_CUI_CXaml_CControls_CISplitView* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* put_IsPaneOpen)(__x_ABI_CWindows_CUI_CXaml_CControls_CISplitView* This,
        boolean value);
    HRESULT (STDMETHODCALLTYPE* get_OpenPaneLength)(__x_ABI_CWindows_CUI_CXaml_CControls_CISplitView* This,
        DOUBLE* value);
    HRESULT (STDMETHODCALLTYPE* put_OpenPaneLength)(__x_ABI_CWindows_CUI_CXaml_CControls_CISplitView* This,
        DOUBLE value);
    HRESULT (STDMETHODCALLTYPE* get_CompactPaneLength)(__x_ABI_CWindows_CUI_CXaml_CControls_CISplitView* This,
        DOUBLE* value);
    HRESULT (STDMETHODCALLTYPE* put_CompactPaneLength)(__x_ABI_CWindows_CUI_CXaml_CControls_CISplitView* This,
        DOUBLE value);
    HRESULT (STDMETHODCALLTYPE* get_PanePlacement)(__x_ABI_CWindows_CUI_CXaml_CControls_CISplitView* This,
        enum __x_ABI_CWindows_CUI_CXaml_CControls_CSplitViewPanePlacement* value);
    HRESULT (STDMETHODCALLTYPE* put_PanePlacement)(__x_ABI_CWindows_CUI_CXaml_CControls_CISplitView* This,
        enum __x_ABI_CWindows_CUI_CXaml_CControls_CSplitViewPanePlacement value);
    HRESULT (STDMETHODCALLTYPE* get_DisplayMode)(__x_ABI_CWindows_CUI_CXaml_CControls_CISplitView* This,
        enum __x_ABI_CWindows_CUI_CXaml_CControls_CSplitViewDisplayMode* value);
    HRESULT (STDMETHODCALLTYPE* put_DisplayMode)(__x_ABI_CWindows_CUI_CXaml_CControls_CISplitView* This,
        enum __x_ABI_CWindows_CUI_CXaml_CControls_CSplitViewDisplayMode value);
    HRESULT (STDMETHODCALLTYPE* get_TemplateSettings)(__x_ABI_CWindows_CUI_CXaml_CControls_CISplitView* This,
        __x_ABI_CWindows_CUI_CXaml_CControls_CPrimitives_CISplitViewTemplateSettings** value);
    HRESULT (STDMETHODCALLTYPE* get_PaneBackground)(__x_ABI_CWindows_CUI_CXaml_CControls_CISplitView* This,
        __x_ABI_CWindows_CUI_CXaml_CMedia_CIBrush** value);
    HRESULT (STDMETHODCALLTYPE* put_PaneBackground)(__x_ABI_CWindows_CUI_CXaml_CControls_CISplitView* This,
        __x_ABI_CWindows_CUI_CXaml_CMedia_CIBrush* value);
    HRESULT (STDMETHODCALLTYPE* add_PaneClosing)(__x_ABI_CWindows_CUI_CXaml_CControls_CISplitView* This,
        __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CSplitView___x_ABI_CWindows__CUI__CXaml__CControls__CSplitViewPaneClosingEventArgs* handler,
        EventRegistrationToken* token);
    HRESULT (STDMETHODCALLTYPE* remove_PaneClosing)(__x_ABI_CWindows_CUI_CXaml_CControls_CISplitView* This,
        EventRegistrationToken token);
    HRESULT (STDMETHODCALLTYPE* add_PaneClosed)(__x_ABI_CWindows_CUI_CXaml_CControls_CISplitView* This,
        __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CSplitView_IInspectable* handler,
        EventRegistrationToken* token);
    HRESULT (STDMETHODCALLTYPE* remove_PaneClosed)(__x_ABI_CWindows_CUI_CXaml_CControls_CISplitView* This,
        EventRegistrationToken token);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CISplitViewVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CISplitView
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CISplitViewVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CISplitView;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CISplitView_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CISplitView2_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CControls_CISplitView2_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CISplitView2Vtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CControls_CISplitView2* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CControls_CISplitView2* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CControls_CISplitView2* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CControls_CISplitView2* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CControls_CISplitView2* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CControls_CISplitView2* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_LightDismissOverlayMode)(__x_ABI_CWindows_CUI_CXaml_CControls_CISplitView2* This,
        enum __x_ABI_CWindows_CUI_CXaml_CControls_CLightDismissOverlayMode* value);
    HRESULT (STDMETHODCALLTYPE* put_LightDismissOverlayMode)(__x_ABI_CWindows_CUI_CXaml_CControls_CISplitView2* This,
        enum __x_ABI_CWindows_CUI_CXaml_CControls_CLightDismissOverlayMode value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CISplitView2Vtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CISplitView2
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CISplitView2Vtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CISplitView2;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CISplitView2_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CISplitView3_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CControls_CISplitView3_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CISplitView3Vtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CControls_CISplitView3* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CControls_CISplitView3* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CControls_CISplitView3* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CControls_CISplitView3* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CControls_CISplitView3* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CControls_CISplitView3* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* add_PaneOpening)(__x_ABI_CWindows_CUI_CXaml_CControls_CISplitView3* This,
        __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CSplitView_IInspectable* handler,
        EventRegistrationToken* token);
    HRESULT (STDMETHODCALLTYPE* remove_PaneOpening)(__x_ABI_CWindows_CUI_CXaml_CControls_CISplitView3* This,
        EventRegistrationToken token);
    HRESULT (STDMETHODCALLTYPE* add_PaneOpened)(__x_ABI_CWindows_CUI_CXaml_CControls_CISplitView3* This,
        __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CSplitView_IInspectable* handler,
        EventRegistrationToken* token);
    HRESULT (STDMETHODCALLTYPE* remove_PaneOpened)(__x_ABI_CWindows_CUI_CXaml_CControls_CISplitView3* This,
        EventRegistrationToken token);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CISplitView3Vtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CISplitView3
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CISplitView3Vtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CISplitView3;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CISplitView3_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CISplitViewFactory_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CControls_CISplitViewFactory_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CISplitViewFactoryVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CControls_CISplitViewFactory* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CControls_CISplitViewFactory* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CControls_CISplitViewFactory* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CControls_CISplitViewFactory* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CControls_CISplitViewFactory* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CControls_CISplitViewFactory* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* CreateInstance)(__x_ABI_CWindows_CUI_CXaml_CControls_CISplitViewFactory* This,
        IInspectable* baseInterface,
        IInspectable** innerInterface,
        __x_ABI_CWindows_CUI_CXaml_CControls_CISplitView** value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CISplitViewFactoryVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CISplitViewFactory
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CISplitViewFactoryVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CISplitViewFactory;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CISplitViewFactory_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CISplitViewPaneClosingEventArgs_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CControls_CISplitViewPaneClosingEventArgs_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CISplitViewPaneClosingEventArgsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CControls_CISplitViewPaneClosingEventArgs* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CControls_CISplitViewPaneClosingEventArgs* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CControls_CISplitViewPaneClosingEventArgs* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CControls_CISplitViewPaneClosingEventArgs* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CControls_CISplitViewPaneClosingEventArgs* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CControls_CISplitViewPaneClosingEventArgs* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Cancel)(__x_ABI_CWindows_CUI_CXaml_CControls_CISplitViewPaneClosingEventArgs* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* put_Cancel)(__x_ABI_CWindows_CUI_CXaml_CControls_CISplitViewPaneClosingEventArgs* This,
        boolean value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CISplitViewPaneClosingEventArgsVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CISplitViewPaneClosingEventArgs
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CISplitViewPaneClosingEventArgsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CISplitViewPaneClosingEventArgs;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CISplitViewPaneClosingEventArgs_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CISplitViewStatics_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CControls_CISplitViewStatics_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CISplitViewStaticsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CControls_CISplitViewStatics* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CControls_CISplitViewStatics* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CControls_CISplitViewStatics* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CControls_CISplitViewStatics* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CControls_CISplitViewStatics* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CControls_CISplitViewStatics* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_ContentProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CISplitViewStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_PaneProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CISplitViewStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_IsPaneOpenProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CISplitViewStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_OpenPaneLengthProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CISplitViewStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_CompactPaneLengthProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CISplitViewStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_PanePlacementProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CISplitViewStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_DisplayModeProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CISplitViewStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_TemplateSettingsProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CISplitViewStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_PaneBackgroundProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CISplitViewStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CISplitViewStaticsVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CISplitViewStatics
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CISplitViewStaticsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CISplitViewStatics;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CISplitViewStatics_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CISplitViewStatics2_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CControls_CISplitViewStatics2_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CISplitViewStatics2Vtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CControls_CISplitViewStatics2* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CControls_CISplitViewStatics2* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CControls_CISplitViewStatics2* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CControls_CISplitViewStatics2* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CControls_CISplitViewStatics2* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CControls_CISplitViewStatics2* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_LightDismissOverlayModeProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CISplitViewStatics2* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CISplitViewStatics2Vtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CISplitViewStatics2
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CISplitViewStatics2Vtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CISplitViewStatics2;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CISplitViewStatics2_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIStackPanel_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CControls_CIStackPanel_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIStackPanelVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CControls_CIStackPanel* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CControls_CIStackPanel* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CControls_CIStackPanel* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CControls_CIStackPanel* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CControls_CIStackPanel* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CControls_CIStackPanel* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_AreScrollSnapPointsRegular)(__x_ABI_CWindows_CUI_CXaml_CControls_CIStackPanel* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* put_AreScrollSnapPointsRegular)(__x_ABI_CWindows_CUI_CXaml_CControls_CIStackPanel* This,
        boolean value);
    HRESULT (STDMETHODCALLTYPE* get_Orientation)(__x_ABI_CWindows_CUI_CXaml_CControls_CIStackPanel* This,
        enum __x_ABI_CWindows_CUI_CXaml_CControls_COrientation* value);
    HRESULT (STDMETHODCALLTYPE* put_Orientation)(__x_ABI_CWindows_CUI_CXaml_CControls_CIStackPanel* This,
        enum __x_ABI_CWindows_CUI_CXaml_CControls_COrientation value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CIStackPanelVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CIStackPanel
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIStackPanelVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIStackPanel;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIStackPanel_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIStackPanel2_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CControls_CIStackPanel2_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIStackPanel2Vtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CControls_CIStackPanel2* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CControls_CIStackPanel2* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CControls_CIStackPanel2* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CControls_CIStackPanel2* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CControls_CIStackPanel2* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CControls_CIStackPanel2* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_BorderBrush)(__x_ABI_CWindows_CUI_CXaml_CControls_CIStackPanel2* This,
        __x_ABI_CWindows_CUI_CXaml_CMedia_CIBrush** value);
    HRESULT (STDMETHODCALLTYPE* put_BorderBrush)(__x_ABI_CWindows_CUI_CXaml_CControls_CIStackPanel2* This,
        __x_ABI_CWindows_CUI_CXaml_CMedia_CIBrush* value);
    HRESULT (STDMETHODCALLTYPE* get_BorderThickness)(__x_ABI_CWindows_CUI_CXaml_CControls_CIStackPanel2* This,
        struct __x_ABI_CWindows_CUI_CXaml_CThickness* value);
    HRESULT (STDMETHODCALLTYPE* put_BorderThickness)(__x_ABI_CWindows_CUI_CXaml_CControls_CIStackPanel2* This,
        struct __x_ABI_CWindows_CUI_CXaml_CThickness value);
    HRESULT (STDMETHODCALLTYPE* get_CornerRadius)(__x_ABI_CWindows_CUI_CXaml_CControls_CIStackPanel2* This,
        struct __x_ABI_CWindows_CUI_CXaml_CCornerRadius* value);
    HRESULT (STDMETHODCALLTYPE* put_CornerRadius)(__x_ABI_CWindows_CUI_CXaml_CControls_CIStackPanel2* This,
        struct __x_ABI_CWindows_CUI_CXaml_CCornerRadius value);
    HRESULT (STDMETHODCALLTYPE* get_Padding)(__x_ABI_CWindows_CUI_CXaml_CControls_CIStackPanel2* This,
        struct __x_ABI_CWindows_CUI_CXaml_CThickness* value);
    HRESULT (STDMETHODCALLTYPE* put_Padding)(__x_ABI_CWindows_CUI_CXaml_CControls_CIStackPanel2* This,
        struct __x_ABI_CWindows_CUI_CXaml_CThickness value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CIStackPanel2Vtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CIStackPanel2
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIStackPanel2Vtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIStackPanel2;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIStackPanel2_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIStackPanel4_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CControls_CIStackPanel4_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIStackPanel4Vtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CControls_CIStackPanel4* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CControls_CIStackPanel4* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CControls_CIStackPanel4* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CControls_CIStackPanel4* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CControls_CIStackPanel4* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CControls_CIStackPanel4* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Spacing)(__x_ABI_CWindows_CUI_CXaml_CControls_CIStackPanel4* This,
        DOUBLE* value);
    HRESULT (STDMETHODCALLTYPE* put_Spacing)(__x_ABI_CWindows_CUI_CXaml_CControls_CIStackPanel4* This,
        DOUBLE value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CIStackPanel4Vtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CIStackPanel4
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIStackPanel4Vtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIStackPanel4;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIStackPanel4_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIStackPanel5_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CControls_CIStackPanel5_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIStackPanel5Vtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CControls_CIStackPanel5* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CControls_CIStackPanel5* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CControls_CIStackPanel5* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CControls_CIStackPanel5* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CControls_CIStackPanel5* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CControls_CIStackPanel5* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_BackgroundSizing)(__x_ABI_CWindows_CUI_CXaml_CControls_CIStackPanel5* This,
        enum __x_ABI_CWindows_CUI_CXaml_CControls_CBackgroundSizing* value);
    HRESULT (STDMETHODCALLTYPE* put_BackgroundSizing)(__x_ABI_CWindows_CUI_CXaml_CControls_CIStackPanel5* This,
        enum __x_ABI_CWindows_CUI_CXaml_CControls_CBackgroundSizing value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CIStackPanel5Vtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CIStackPanel5
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIStackPanel5Vtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIStackPanel5;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIStackPanel5_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIStackPanelFactory_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CControls_CIStackPanelFactory_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIStackPanelFactoryVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CControls_CIStackPanelFactory* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CControls_CIStackPanelFactory* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CControls_CIStackPanelFactory* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CControls_CIStackPanelFactory* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CControls_CIStackPanelFactory* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CControls_CIStackPanelFactory* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* CreateInstance)(__x_ABI_CWindows_CUI_CXaml_CControls_CIStackPanelFactory* This,
        IInspectable* baseInterface,
        IInspectable** innerInterface,
        __x_ABI_CWindows_CUI_CXaml_CControls_CIStackPanel** value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CIStackPanelFactoryVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CIStackPanelFactory
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIStackPanelFactoryVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIStackPanelFactory;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIStackPanelFactory_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIStackPanelStatics_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CControls_CIStackPanelStatics_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIStackPanelStaticsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CControls_CIStackPanelStatics* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CControls_CIStackPanelStatics* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CControls_CIStackPanelStatics* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CControls_CIStackPanelStatics* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CControls_CIStackPanelStatics* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CControls_CIStackPanelStatics* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_AreScrollSnapPointsRegularProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CIStackPanelStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_OrientationProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CIStackPanelStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CIStackPanelStaticsVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CIStackPanelStatics
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIStackPanelStaticsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIStackPanelStatics;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIStackPanelStatics_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIStackPanelStatics2_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CControls_CIStackPanelStatics2_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIStackPanelStatics2Vtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CControls_CIStackPanelStatics2* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CControls_CIStackPanelStatics2* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CControls_CIStackPanelStatics2* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CControls_CIStackPanelStatics2* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CControls_CIStackPanelStatics2* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CControls_CIStackPanelStatics2* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_BorderBrushProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CIStackPanelStatics2* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_BorderThicknessProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CIStackPanelStatics2* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_CornerRadiusProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CIStackPanelStatics2* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_PaddingProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CIStackPanelStatics2* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CIStackPanelStatics2Vtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CIStackPanelStatics2
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIStackPanelStatics2Vtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIStackPanelStatics2;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIStackPanelStatics2_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIStackPanelStatics4_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CControls_CIStackPanelStatics4_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIStackPanelStatics4Vtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CControls_CIStackPanelStatics4* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CControls_CIStackPanelStatics4* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CControls_CIStackPanelStatics4* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CControls_CIStackPanelStatics4* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CControls_CIStackPanelStatics4* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CControls_CIStackPanelStatics4* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_SpacingProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CIStackPanelStatics4* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CIStackPanelStatics4Vtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CIStackPanelStatics4
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIStackPanelStatics4Vtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIStackPanelStatics4;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIStackPanelStatics4_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIStackPanelStatics5_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CControls_CIStackPanelStatics5_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIStackPanelStatics5Vtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CControls_CIStackPanelStatics5* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CControls_CIStackPanelStatics5* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CControls_CIStackPanelStatics5* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CControls_CIStackPanelStatics5* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CControls_CIStackPanelStatics5* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CControls_CIStackPanelStatics5* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_BackgroundSizingProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CIStackPanelStatics5* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CIStackPanelStatics5Vtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CIStackPanelStatics5
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIStackPanelStatics5Vtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIStackPanelStatics5;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIStackPanelStatics5_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIStyleSelector_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CControls_CIStyleSelector_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIStyleSelectorVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CControls_CIStyleSelector* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CControls_CIStyleSelector* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CControls_CIStyleSelector* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CControls_CIStyleSelector* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CControls_CIStyleSelector* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CControls_CIStyleSelector* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* SelectStyle)(__x_ABI_CWindows_CUI_CXaml_CControls_CIStyleSelector* This,
        IInspectable* item,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyObject* container,
        __x_ABI_CWindows_CUI_CXaml_CIStyle** result);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CIStyleSelectorVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CIStyleSelector
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIStyleSelectorVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIStyleSelector;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIStyleSelector_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIStyleSelectorFactory_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CControls_CIStyleSelectorFactory_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIStyleSelectorFactoryVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CControls_CIStyleSelectorFactory* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CControls_CIStyleSelectorFactory* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CControls_CIStyleSelectorFactory* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CControls_CIStyleSelectorFactory* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CControls_CIStyleSelectorFactory* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CControls_CIStyleSelectorFactory* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* CreateInstance)(__x_ABI_CWindows_CUI_CXaml_CControls_CIStyleSelectorFactory* This,
        IInspectable* baseInterface,
        IInspectable** innerInterface,
        __x_ABI_CWindows_CUI_CXaml_CControls_CIStyleSelector** value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CIStyleSelectorFactoryVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CIStyleSelectorFactory
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIStyleSelectorFactoryVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIStyleSelectorFactory;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIStyleSelectorFactory_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIStyleSelectorOverrides_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CControls_CIStyleSelectorOverrides_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIStyleSelectorOverridesVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CControls_CIStyleSelectorOverrides* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CControls_CIStyleSelectorOverrides* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CControls_CIStyleSelectorOverrides* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CControls_CIStyleSelectorOverrides* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CControls_CIStyleSelectorOverrides* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CControls_CIStyleSelectorOverrides* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* SelectStyleCore)(__x_ABI_CWindows_CUI_CXaml_CControls_CIStyleSelectorOverrides* This,
        IInspectable* item,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyObject* container,
        __x_ABI_CWindows_CUI_CXaml_CIStyle** result);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CIStyleSelectorOverridesVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CIStyleSelectorOverrides
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIStyleSelectorOverridesVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIStyleSelectorOverrides;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIStyleSelectorOverrides_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CISwapChainBackgroundPanel_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CControls_CISwapChainBackgroundPanel_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CISwapChainBackgroundPanelVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CControls_CISwapChainBackgroundPanel* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CControls_CISwapChainBackgroundPanel* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CControls_CISwapChainBackgroundPanel* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CControls_CISwapChainBackgroundPanel* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CControls_CISwapChainBackgroundPanel* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CControls_CISwapChainBackgroundPanel* This,
            TrustLevel* trustLevel);
    
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CISwapChainBackgroundPanelVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CISwapChainBackgroundPanel
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CISwapChainBackgroundPanelVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CISwapChainBackgroundPanel;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CISwapChainBackgroundPanel_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CISwapChainBackgroundPanel2_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CControls_CISwapChainBackgroundPanel2_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CISwapChainBackgroundPanel2Vtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CControls_CISwapChainBackgroundPanel2* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CControls_CISwapChainBackgroundPanel2* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CControls_CISwapChainBackgroundPanel2* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CControls_CISwapChainBackgroundPanel2* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CControls_CISwapChainBackgroundPanel2* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CControls_CISwapChainBackgroundPanel2* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* CreateCoreIndependentInputSource)(__x_ABI_CWindows_CUI_CXaml_CControls_CISwapChainBackgroundPanel2* This,
        enum __x_ABI_CWindows_CUI_CCore_CCoreInputDeviceTypes deviceTypes,
        __x_ABI_CWindows_CUI_CCore_CICoreInputSourceBase** result);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CISwapChainBackgroundPanel2Vtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CISwapChainBackgroundPanel2
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CISwapChainBackgroundPanel2Vtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CISwapChainBackgroundPanel2;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CISwapChainBackgroundPanel2_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CISwapChainBackgroundPanelFactory_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CControls_CISwapChainBackgroundPanelFactory_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CISwapChainBackgroundPanelFactoryVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CControls_CISwapChainBackgroundPanelFactory* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CControls_CISwapChainBackgroundPanelFactory* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CControls_CISwapChainBackgroundPanelFactory* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CControls_CISwapChainBackgroundPanelFactory* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CControls_CISwapChainBackgroundPanelFactory* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CControls_CISwapChainBackgroundPanelFactory* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* CreateInstance)(__x_ABI_CWindows_CUI_CXaml_CControls_CISwapChainBackgroundPanelFactory* This,
        IInspectable* baseInterface,
        IInspectable** innerInterface,
        __x_ABI_CWindows_CUI_CXaml_CControls_CISwapChainBackgroundPanel** value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CISwapChainBackgroundPanelFactoryVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CISwapChainBackgroundPanelFactory
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CISwapChainBackgroundPanelFactoryVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CISwapChainBackgroundPanelFactory;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CISwapChainBackgroundPanelFactory_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CISwapChainPanel_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CControls_CISwapChainPanel_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CISwapChainPanelVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CControls_CISwapChainPanel* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CControls_CISwapChainPanel* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CControls_CISwapChainPanel* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CControls_CISwapChainPanel* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CControls_CISwapChainPanel* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CControls_CISwapChainPanel* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_CompositionScaleX)(__x_ABI_CWindows_CUI_CXaml_CControls_CISwapChainPanel* This,
        FLOAT* value);
    HRESULT (STDMETHODCALLTYPE* get_CompositionScaleY)(__x_ABI_CWindows_CUI_CXaml_CControls_CISwapChainPanel* This,
        FLOAT* value);
    HRESULT (STDMETHODCALLTYPE* add_CompositionScaleChanged)(__x_ABI_CWindows_CUI_CXaml_CControls_CISwapChainPanel* This,
        __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CSwapChainPanel_IInspectable* handler,
        EventRegistrationToken* token);
    HRESULT (STDMETHODCALLTYPE* remove_CompositionScaleChanged)(__x_ABI_CWindows_CUI_CXaml_CControls_CISwapChainPanel* This,
        EventRegistrationToken token);
    HRESULT (STDMETHODCALLTYPE* CreateCoreIndependentInputSource)(__x_ABI_CWindows_CUI_CXaml_CControls_CISwapChainPanel* This,
        enum __x_ABI_CWindows_CUI_CCore_CCoreInputDeviceTypes deviceTypes,
        __x_ABI_CWindows_CUI_CCore_CICoreInputSourceBase** result);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CISwapChainPanelVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CISwapChainPanel
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CISwapChainPanelVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CISwapChainPanel;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CISwapChainPanel_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CISwapChainPanelFactory_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CControls_CISwapChainPanelFactory_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CISwapChainPanelFactoryVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CControls_CISwapChainPanelFactory* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CControls_CISwapChainPanelFactory* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CControls_CISwapChainPanelFactory* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CControls_CISwapChainPanelFactory* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CControls_CISwapChainPanelFactory* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CControls_CISwapChainPanelFactory* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* CreateInstance)(__x_ABI_CWindows_CUI_CXaml_CControls_CISwapChainPanelFactory* This,
        IInspectable* baseInterface,
        IInspectable** innerInterface,
        __x_ABI_CWindows_CUI_CXaml_CControls_CISwapChainPanel** value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CISwapChainPanelFactoryVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CISwapChainPanelFactory
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CISwapChainPanelFactoryVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CISwapChainPanelFactory;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CISwapChainPanelFactory_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CISwapChainPanelStatics_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CControls_CISwapChainPanelStatics_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CISwapChainPanelStaticsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CControls_CISwapChainPanelStatics* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CControls_CISwapChainPanelStatics* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CControls_CISwapChainPanelStatics* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CControls_CISwapChainPanelStatics* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CControls_CISwapChainPanelStatics* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CControls_CISwapChainPanelStatics* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_CompositionScaleXProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CISwapChainPanelStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_CompositionScaleYProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CISwapChainPanelStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CISwapChainPanelStaticsVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CISwapChainPanelStatics
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CISwapChainPanelStaticsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CISwapChainPanelStatics;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CISwapChainPanelStatics_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CISwipeControl_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CControls_CISwipeControl_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CISwipeControlVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CControls_CISwipeControl* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CControls_CISwipeControl* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CControls_CISwipeControl* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CControls_CISwipeControl* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CControls_CISwipeControl* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CControls_CISwipeControl* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_LeftItems)(__x_ABI_CWindows_CUI_CXaml_CControls_CISwipeControl* This,
        __x_ABI_CWindows_CUI_CXaml_CControls_CISwipeItems** value);
    HRESULT (STDMETHODCALLTYPE* put_LeftItems)(__x_ABI_CWindows_CUI_CXaml_CControls_CISwipeControl* This,
        __x_ABI_CWindows_CUI_CXaml_CControls_CISwipeItems* value);
    HRESULT (STDMETHODCALLTYPE* get_RightItems)(__x_ABI_CWindows_CUI_CXaml_CControls_CISwipeControl* This,
        __x_ABI_CWindows_CUI_CXaml_CControls_CISwipeItems** value);
    HRESULT (STDMETHODCALLTYPE* put_RightItems)(__x_ABI_CWindows_CUI_CXaml_CControls_CISwipeControl* This,
        __x_ABI_CWindows_CUI_CXaml_CControls_CISwipeItems* value);
    HRESULT (STDMETHODCALLTYPE* get_TopItems)(__x_ABI_CWindows_CUI_CXaml_CControls_CISwipeControl* This,
        __x_ABI_CWindows_CUI_CXaml_CControls_CISwipeItems** value);
    HRESULT (STDMETHODCALLTYPE* put_TopItems)(__x_ABI_CWindows_CUI_CXaml_CControls_CISwipeControl* This,
        __x_ABI_CWindows_CUI_CXaml_CControls_CISwipeItems* value);
    HRESULT (STDMETHODCALLTYPE* get_BottomItems)(__x_ABI_CWindows_CUI_CXaml_CControls_CISwipeControl* This,
        __x_ABI_CWindows_CUI_CXaml_CControls_CISwipeItems** value);
    HRESULT (STDMETHODCALLTYPE* put_BottomItems)(__x_ABI_CWindows_CUI_CXaml_CControls_CISwipeControl* This,
        __x_ABI_CWindows_CUI_CXaml_CControls_CISwipeItems* value);
    HRESULT (STDMETHODCALLTYPE* Close)(__x_ABI_CWindows_CUI_CXaml_CControls_CISwipeControl* This);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CISwipeControlVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CISwipeControl
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CISwipeControlVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CISwipeControl;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CISwipeControl_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CISwipeControlFactory_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CControls_CISwipeControlFactory_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CISwipeControlFactoryVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CControls_CISwipeControlFactory* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CControls_CISwipeControlFactory* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CControls_CISwipeControlFactory* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CControls_CISwipeControlFactory* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CControls_CISwipeControlFactory* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CControls_CISwipeControlFactory* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* CreateInstance)(__x_ABI_CWindows_CUI_CXaml_CControls_CISwipeControlFactory* This,
        IInspectable* baseInterface,
        IInspectable** innerInterface,
        __x_ABI_CWindows_CUI_CXaml_CControls_CISwipeControl** value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CISwipeControlFactoryVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CISwipeControlFactory
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CISwipeControlFactoryVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CISwipeControlFactory;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CISwipeControlFactory_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CISwipeControlStatics_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CControls_CISwipeControlStatics_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CISwipeControlStaticsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CControls_CISwipeControlStatics* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CControls_CISwipeControlStatics* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CControls_CISwipeControlStatics* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CControls_CISwipeControlStatics* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CControls_CISwipeControlStatics* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CControls_CISwipeControlStatics* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_LeftItemsProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CISwipeControlStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_RightItemsProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CISwipeControlStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_TopItemsProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CISwipeControlStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_BottomItemsProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CISwipeControlStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CISwipeControlStaticsVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CISwipeControlStatics
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CISwipeControlStaticsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CISwipeControlStatics;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CISwipeControlStatics_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CISwipeItem_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CControls_CISwipeItem_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CISwipeItemVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CControls_CISwipeItem* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CControls_CISwipeItem* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CControls_CISwipeItem* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CControls_CISwipeItem* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CControls_CISwipeItem* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CControls_CISwipeItem* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Text)(__x_ABI_CWindows_CUI_CXaml_CControls_CISwipeItem* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* put_Text)(__x_ABI_CWindows_CUI_CXaml_CControls_CISwipeItem* This,
        HSTRING value);
    HRESULT (STDMETHODCALLTYPE* get_IconSource)(__x_ABI_CWindows_CUI_CXaml_CControls_CISwipeItem* This,
        __x_ABI_CWindows_CUI_CXaml_CControls_CIIconSource** value);
    HRESULT (STDMETHODCALLTYPE* put_IconSource)(__x_ABI_CWindows_CUI_CXaml_CControls_CISwipeItem* This,
        __x_ABI_CWindows_CUI_CXaml_CControls_CIIconSource* value);
    HRESULT (STDMETHODCALLTYPE* get_Background)(__x_ABI_CWindows_CUI_CXaml_CControls_CISwipeItem* This,
        __x_ABI_CWindows_CUI_CXaml_CMedia_CIBrush** value);
    HRESULT (STDMETHODCALLTYPE* put_Background)(__x_ABI_CWindows_CUI_CXaml_CControls_CISwipeItem* This,
        __x_ABI_CWindows_CUI_CXaml_CMedia_CIBrush* value);
    HRESULT (STDMETHODCALLTYPE* get_Foreground)(__x_ABI_CWindows_CUI_CXaml_CControls_CISwipeItem* This,
        __x_ABI_CWindows_CUI_CXaml_CMedia_CIBrush** value);
    HRESULT (STDMETHODCALLTYPE* put_Foreground)(__x_ABI_CWindows_CUI_CXaml_CControls_CISwipeItem* This,
        __x_ABI_CWindows_CUI_CXaml_CMedia_CIBrush* value);
    HRESULT (STDMETHODCALLTYPE* get_Command)(__x_ABI_CWindows_CUI_CXaml_CControls_CISwipeItem* This,
        __x_ABI_CWindows_CUI_CXaml_CInput_CICommand** value);
    HRESULT (STDMETHODCALLTYPE* put_Command)(__x_ABI_CWindows_CUI_CXaml_CControls_CISwipeItem* This,
        __x_ABI_CWindows_CUI_CXaml_CInput_CICommand* value);
    HRESULT (STDMETHODCALLTYPE* get_CommandParameter)(__x_ABI_CWindows_CUI_CXaml_CControls_CISwipeItem* This,
        IInspectable** value);
    HRESULT (STDMETHODCALLTYPE* put_CommandParameter)(__x_ABI_CWindows_CUI_CXaml_CControls_CISwipeItem* This,
        IInspectable* value);
    HRESULT (STDMETHODCALLTYPE* get_BehaviorOnInvoked)(__x_ABI_CWindows_CUI_CXaml_CControls_CISwipeItem* This,
        enum __x_ABI_CWindows_CUI_CXaml_CControls_CSwipeBehaviorOnInvoked* value);
    HRESULT (STDMETHODCALLTYPE* put_BehaviorOnInvoked)(__x_ABI_CWindows_CUI_CXaml_CControls_CISwipeItem* This,
        enum __x_ABI_CWindows_CUI_CXaml_CControls_CSwipeBehaviorOnInvoked value);
    HRESULT (STDMETHODCALLTYPE* add_Invoked)(__x_ABI_CWindows_CUI_CXaml_CControls_CISwipeItem* This,
        __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CSwipeItem___x_ABI_CWindows__CUI__CXaml__CControls__CSwipeItemInvokedEventArgs* handler,
        EventRegistrationToken* token);
    HRESULT (STDMETHODCALLTYPE* remove_Invoked)(__x_ABI_CWindows_CUI_CXaml_CControls_CISwipeItem* This,
        EventRegistrationToken token);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CISwipeItemVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CISwipeItem
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CISwipeItemVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CISwipeItem;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CISwipeItem_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CISwipeItemFactory_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CControls_CISwipeItemFactory_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CISwipeItemFactoryVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CControls_CISwipeItemFactory* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CControls_CISwipeItemFactory* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CControls_CISwipeItemFactory* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CControls_CISwipeItemFactory* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CControls_CISwipeItemFactory* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CControls_CISwipeItemFactory* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* CreateInstance)(__x_ABI_CWindows_CUI_CXaml_CControls_CISwipeItemFactory* This,
        IInspectable* baseInterface,
        IInspectable** innerInterface,
        __x_ABI_CWindows_CUI_CXaml_CControls_CISwipeItem** value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CISwipeItemFactoryVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CISwipeItemFactory
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CISwipeItemFactoryVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CISwipeItemFactory;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CISwipeItemFactory_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CISwipeItemInvokedEventArgs_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CControls_CISwipeItemInvokedEventArgs_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CISwipeItemInvokedEventArgsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CControls_CISwipeItemInvokedEventArgs* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CControls_CISwipeItemInvokedEventArgs* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CControls_CISwipeItemInvokedEventArgs* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CControls_CISwipeItemInvokedEventArgs* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CControls_CISwipeItemInvokedEventArgs* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CControls_CISwipeItemInvokedEventArgs* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_SwipeControl)(__x_ABI_CWindows_CUI_CXaml_CControls_CISwipeItemInvokedEventArgs* This,
        __x_ABI_CWindows_CUI_CXaml_CControls_CISwipeControl** value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CISwipeItemInvokedEventArgsVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CISwipeItemInvokedEventArgs
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CISwipeItemInvokedEventArgsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CISwipeItemInvokedEventArgs;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CISwipeItemInvokedEventArgs_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CISwipeItemStatics_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CControls_CISwipeItemStatics_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CISwipeItemStaticsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CControls_CISwipeItemStatics* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CControls_CISwipeItemStatics* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CControls_CISwipeItemStatics* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CControls_CISwipeItemStatics* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CControls_CISwipeItemStatics* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CControls_CISwipeItemStatics* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_IconSourceProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CISwipeItemStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_TextProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CISwipeItemStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_BackgroundProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CISwipeItemStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_ForegroundProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CISwipeItemStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_CommandProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CISwipeItemStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_CommandParameterProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CISwipeItemStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_BehaviorOnInvokedProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CISwipeItemStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CISwipeItemStaticsVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CISwipeItemStatics
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CISwipeItemStaticsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CISwipeItemStatics;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CISwipeItemStatics_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CISwipeItems_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CControls_CISwipeItems_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CISwipeItemsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CControls_CISwipeItems* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CControls_CISwipeItems* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CControls_CISwipeItems* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CControls_CISwipeItems* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CControls_CISwipeItems* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CControls_CISwipeItems* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Mode)(__x_ABI_CWindows_CUI_CXaml_CControls_CISwipeItems* This,
        enum __x_ABI_CWindows_CUI_CXaml_CControls_CSwipeMode* value);
    HRESULT (STDMETHODCALLTYPE* put_Mode)(__x_ABI_CWindows_CUI_CXaml_CControls_CISwipeItems* This,
        enum __x_ABI_CWindows_CUI_CXaml_CControls_CSwipeMode value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CISwipeItemsVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CISwipeItems
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CISwipeItemsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CISwipeItems;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CISwipeItems_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CISwipeItemsFactory_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CControls_CISwipeItemsFactory_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CISwipeItemsFactoryVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CControls_CISwipeItemsFactory* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CControls_CISwipeItemsFactory* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CControls_CISwipeItemsFactory* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CControls_CISwipeItemsFactory* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CControls_CISwipeItemsFactory* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CControls_CISwipeItemsFactory* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* CreateInstance)(__x_ABI_CWindows_CUI_CXaml_CControls_CISwipeItemsFactory* This,
        IInspectable* baseInterface,
        IInspectable** innerInterface,
        __x_ABI_CWindows_CUI_CXaml_CControls_CISwipeItems** value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CISwipeItemsFactoryVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CISwipeItemsFactory
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CISwipeItemsFactoryVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CISwipeItemsFactory;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CISwipeItemsFactory_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CISwipeItemsStatics_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CControls_CISwipeItemsStatics_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CISwipeItemsStaticsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CControls_CISwipeItemsStatics* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CControls_CISwipeItemsStatics* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CControls_CISwipeItemsStatics* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CControls_CISwipeItemsStatics* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CControls_CISwipeItemsStatics* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CControls_CISwipeItemsStatics* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_ModeProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CISwipeItemsStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CISwipeItemsStaticsVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CISwipeItemsStatics
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CISwipeItemsStaticsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CISwipeItemsStatics;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CISwipeItemsStatics_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CISymbolIcon_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CControls_CISymbolIcon_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CISymbolIconVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CControls_CISymbolIcon* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CControls_CISymbolIcon* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CControls_CISymbolIcon* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CControls_CISymbolIcon* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CControls_CISymbolIcon* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CControls_CISymbolIcon* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Symbol)(__x_ABI_CWindows_CUI_CXaml_CControls_CISymbolIcon* This,
        enum __x_ABI_CWindows_CUI_CXaml_CControls_CSymbol* value);
    HRESULT (STDMETHODCALLTYPE* put_Symbol)(__x_ABI_CWindows_CUI_CXaml_CControls_CISymbolIcon* This,
        enum __x_ABI_CWindows_CUI_CXaml_CControls_CSymbol value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CISymbolIconVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CISymbolIcon
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CISymbolIconVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CISymbolIcon;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CISymbolIcon_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CISymbolIconFactory_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CControls_CISymbolIconFactory_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CISymbolIconFactoryVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CControls_CISymbolIconFactory* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CControls_CISymbolIconFactory* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CControls_CISymbolIconFactory* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CControls_CISymbolIconFactory* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CControls_CISymbolIconFactory* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CControls_CISymbolIconFactory* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* CreateInstanceWithSymbol)(__x_ABI_CWindows_CUI_CXaml_CControls_CISymbolIconFactory* This,
        enum __x_ABI_CWindows_CUI_CXaml_CControls_CSymbol symbol,
        __x_ABI_CWindows_CUI_CXaml_CControls_CISymbolIcon** value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CISymbolIconFactoryVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CISymbolIconFactory
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CISymbolIconFactoryVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CISymbolIconFactory;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CISymbolIconFactory_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CISymbolIconSource_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CControls_CISymbolIconSource_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CISymbolIconSourceVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CControls_CISymbolIconSource* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CControls_CISymbolIconSource* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CControls_CISymbolIconSource* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CControls_CISymbolIconSource* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CControls_CISymbolIconSource* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CControls_CISymbolIconSource* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Symbol)(__x_ABI_CWindows_CUI_CXaml_CControls_CISymbolIconSource* This,
        enum __x_ABI_CWindows_CUI_CXaml_CControls_CSymbol* value);
    HRESULT (STDMETHODCALLTYPE* put_Symbol)(__x_ABI_CWindows_CUI_CXaml_CControls_CISymbolIconSource* This,
        enum __x_ABI_CWindows_CUI_CXaml_CControls_CSymbol value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CISymbolIconSourceVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CISymbolIconSource
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CISymbolIconSourceVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CISymbolIconSource;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CISymbolIconSource_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CISymbolIconSourceFactory_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CControls_CISymbolIconSourceFactory_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CISymbolIconSourceFactoryVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CControls_CISymbolIconSourceFactory* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CControls_CISymbolIconSourceFactory* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CControls_CISymbolIconSourceFactory* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CControls_CISymbolIconSourceFactory* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CControls_CISymbolIconSourceFactory* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CControls_CISymbolIconSourceFactory* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* CreateInstance)(__x_ABI_CWindows_CUI_CXaml_CControls_CISymbolIconSourceFactory* This,
        IInspectable* baseInterface,
        IInspectable** innerInterface,
        __x_ABI_CWindows_CUI_CXaml_CControls_CISymbolIconSource** value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CISymbolIconSourceFactoryVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CISymbolIconSourceFactory
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CISymbolIconSourceFactoryVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CISymbolIconSourceFactory;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CISymbolIconSourceFactory_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CISymbolIconSourceStatics_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CControls_CISymbolIconSourceStatics_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CISymbolIconSourceStaticsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CControls_CISymbolIconSourceStatics* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CControls_CISymbolIconSourceStatics* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CControls_CISymbolIconSourceStatics* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CControls_CISymbolIconSourceStatics* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CControls_CISymbolIconSourceStatics* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CControls_CISymbolIconSourceStatics* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_SymbolProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CISymbolIconSourceStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CISymbolIconSourceStaticsVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CISymbolIconSourceStatics
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CISymbolIconSourceStaticsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CISymbolIconSourceStatics;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CISymbolIconSourceStatics_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CISymbolIconStatics_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CControls_CISymbolIconStatics_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CISymbolIconStaticsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CControls_CISymbolIconStatics* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CControls_CISymbolIconStatics* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CControls_CISymbolIconStatics* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CControls_CISymbolIconStatics* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CControls_CISymbolIconStatics* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CControls_CISymbolIconStatics* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_SymbolProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CISymbolIconStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CISymbolIconStaticsVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CISymbolIconStatics
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CISymbolIconStaticsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CISymbolIconStatics;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CISymbolIconStatics_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CITextBlock_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CControls_CITextBlock_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CITextBlockVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CControls_CITextBlock* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CControls_CITextBlock* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CControls_CITextBlock* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CControls_CITextBlock* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CControls_CITextBlock* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CControls_CITextBlock* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_FontSize)(__x_ABI_CWindows_CUI_CXaml_CControls_CITextBlock* This,
        DOUBLE* value);
    HRESULT (STDMETHODCALLTYPE* put_FontSize)(__x_ABI_CWindows_CUI_CXaml_CControls_CITextBlock* This,
        DOUBLE value);
    HRESULT (STDMETHODCALLTYPE* get_FontFamily)(__x_ABI_CWindows_CUI_CXaml_CControls_CITextBlock* This,
        __x_ABI_CWindows_CUI_CXaml_CMedia_CIFontFamily** value);
    HRESULT (STDMETHODCALLTYPE* put_FontFamily)(__x_ABI_CWindows_CUI_CXaml_CControls_CITextBlock* This,
        __x_ABI_CWindows_CUI_CXaml_CMedia_CIFontFamily* value);
    HRESULT (STDMETHODCALLTYPE* get_FontWeight)(__x_ABI_CWindows_CUI_CXaml_CControls_CITextBlock* This,
        struct __x_ABI_CWindows_CUI_CText_CFontWeight* value);
    HRESULT (STDMETHODCALLTYPE* put_FontWeight)(__x_ABI_CWindows_CUI_CXaml_CControls_CITextBlock* This,
        struct __x_ABI_CWindows_CUI_CText_CFontWeight value);
    HRESULT (STDMETHODCALLTYPE* get_FontStyle)(__x_ABI_CWindows_CUI_CXaml_CControls_CITextBlock* This,
        enum __x_ABI_CWindows_CUI_CText_CFontStyle* value);
    HRESULT (STDMETHODCALLTYPE* put_FontStyle)(__x_ABI_CWindows_CUI_CXaml_CControls_CITextBlock* This,
        enum __x_ABI_CWindows_CUI_CText_CFontStyle value);
    HRESULT (STDMETHODCALLTYPE* get_FontStretch)(__x_ABI_CWindows_CUI_CXaml_CControls_CITextBlock* This,
        enum __x_ABI_CWindows_CUI_CText_CFontStretch* value);
    HRESULT (STDMETHODCALLTYPE* put_FontStretch)(__x_ABI_CWindows_CUI_CXaml_CControls_CITextBlock* This,
        enum __x_ABI_CWindows_CUI_CText_CFontStretch value);
    HRESULT (STDMETHODCALLTYPE* get_CharacterSpacing)(__x_ABI_CWindows_CUI_CXaml_CControls_CITextBlock* This,
        INT32* value);
    HRESULT (STDMETHODCALLTYPE* put_CharacterSpacing)(__x_ABI_CWindows_CUI_CXaml_CControls_CITextBlock* This,
        INT32 value);
    HRESULT (STDMETHODCALLTYPE* get_Foreground)(__x_ABI_CWindows_CUI_CXaml_CControls_CITextBlock* This,
        __x_ABI_CWindows_CUI_CXaml_CMedia_CIBrush** value);
    HRESULT (STDMETHODCALLTYPE* put_Foreground)(__x_ABI_CWindows_CUI_CXaml_CControls_CITextBlock* This,
        __x_ABI_CWindows_CUI_CXaml_CMedia_CIBrush* value);
    HRESULT (STDMETHODCALLTYPE* get_TextWrapping)(__x_ABI_CWindows_CUI_CXaml_CControls_CITextBlock* This,
        enum __x_ABI_CWindows_CUI_CXaml_CTextWrapping* value);
    HRESULT (STDMETHODCALLTYPE* put_TextWrapping)(__x_ABI_CWindows_CUI_CXaml_CControls_CITextBlock* This,
        enum __x_ABI_CWindows_CUI_CXaml_CTextWrapping value);
    HRESULT (STDMETHODCALLTYPE* get_TextTrimming)(__x_ABI_CWindows_CUI_CXaml_CControls_CITextBlock* This,
        enum __x_ABI_CWindows_CUI_CXaml_CTextTrimming* value);
    HRESULT (STDMETHODCALLTYPE* put_TextTrimming)(__x_ABI_CWindows_CUI_CXaml_CControls_CITextBlock* This,
        enum __x_ABI_CWindows_CUI_CXaml_CTextTrimming value);
    HRESULT (STDMETHODCALLTYPE* get_TextAlignment)(__x_ABI_CWindows_CUI_CXaml_CControls_CITextBlock* This,
        enum __x_ABI_CWindows_CUI_CXaml_CTextAlignment* value);
    HRESULT (STDMETHODCALLTYPE* put_TextAlignment)(__x_ABI_CWindows_CUI_CXaml_CControls_CITextBlock* This,
        enum __x_ABI_CWindows_CUI_CXaml_CTextAlignment value);
    HRESULT (STDMETHODCALLTYPE* get_Text)(__x_ABI_CWindows_CUI_CXaml_CControls_CITextBlock* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* put_Text)(__x_ABI_CWindows_CUI_CXaml_CControls_CITextBlock* This,
        HSTRING value);
    HRESULT (STDMETHODCALLTYPE* get_Inlines)(__x_ABI_CWindows_CUI_CXaml_CControls_CITextBlock* This,
        __x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CXaml__CDocuments__CInline** value);
    HRESULT (STDMETHODCALLTYPE* get_Padding)(__x_ABI_CWindows_CUI_CXaml_CControls_CITextBlock* This,
        struct __x_ABI_CWindows_CUI_CXaml_CThickness* value);
    HRESULT (STDMETHODCALLTYPE* put_Padding)(__x_ABI_CWindows_CUI_CXaml_CControls_CITextBlock* This,
        struct __x_ABI_CWindows_CUI_CXaml_CThickness value);
    HRESULT (STDMETHODCALLTYPE* get_LineHeight)(__x_ABI_CWindows_CUI_CXaml_CControls_CITextBlock* This,
        DOUBLE* value);
    HRESULT (STDMETHODCALLTYPE* put_LineHeight)(__x_ABI_CWindows_CUI_CXaml_CControls_CITextBlock* This,
        DOUBLE value);
    HRESULT (STDMETHODCALLTYPE* get_LineStackingStrategy)(__x_ABI_CWindows_CUI_CXaml_CControls_CITextBlock* This,
        enum __x_ABI_CWindows_CUI_CXaml_CLineStackingStrategy* value);
    HRESULT (STDMETHODCALLTYPE* put_LineStackingStrategy)(__x_ABI_CWindows_CUI_CXaml_CControls_CITextBlock* This,
        enum __x_ABI_CWindows_CUI_CXaml_CLineStackingStrategy value);
    HRESULT (STDMETHODCALLTYPE* get_IsTextSelectionEnabled)(__x_ABI_CWindows_CUI_CXaml_CControls_CITextBlock* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* put_IsTextSelectionEnabled)(__x_ABI_CWindows_CUI_CXaml_CControls_CITextBlock* This,
        boolean value);
    HRESULT (STDMETHODCALLTYPE* get_SelectedText)(__x_ABI_CWindows_CUI_CXaml_CControls_CITextBlock* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* get_ContentStart)(__x_ABI_CWindows_CUI_CXaml_CControls_CITextBlock* This,
        __x_ABI_CWindows_CUI_CXaml_CDocuments_CITextPointer** value);
    HRESULT (STDMETHODCALLTYPE* get_ContentEnd)(__x_ABI_CWindows_CUI_CXaml_CControls_CITextBlock* This,
        __x_ABI_CWindows_CUI_CXaml_CDocuments_CITextPointer** value);
    HRESULT (STDMETHODCALLTYPE* get_SelectionStart)(__x_ABI_CWindows_CUI_CXaml_CControls_CITextBlock* This,
        __x_ABI_CWindows_CUI_CXaml_CDocuments_CITextPointer** value);
    HRESULT (STDMETHODCALLTYPE* get_SelectionEnd)(__x_ABI_CWindows_CUI_CXaml_CControls_CITextBlock* This,
        __x_ABI_CWindows_CUI_CXaml_CDocuments_CITextPointer** value);
    HRESULT (STDMETHODCALLTYPE* get_BaselineOffset)(__x_ABI_CWindows_CUI_CXaml_CControls_CITextBlock* This,
        DOUBLE* value);
    HRESULT (STDMETHODCALLTYPE* add_SelectionChanged)(__x_ABI_CWindows_CUI_CXaml_CControls_CITextBlock* This,
        __x_ABI_CWindows_CUI_CXaml_CIRoutedEventHandler* handler,
        EventRegistrationToken* token);
    HRESULT (STDMETHODCALLTYPE* remove_SelectionChanged)(__x_ABI_CWindows_CUI_CXaml_CControls_CITextBlock* This,
        EventRegistrationToken token);
    HRESULT (STDMETHODCALLTYPE* add_ContextMenuOpening)(__x_ABI_CWindows_CUI_CXaml_CControls_CITextBlock* This,
        __x_ABI_CWindows_CUI_CXaml_CControls_CIContextMenuOpeningEventHandler* handler,
        EventRegistrationToken* token);
    HRESULT (STDMETHODCALLTYPE* remove_ContextMenuOpening)(__x_ABI_CWindows_CUI_CXaml_CControls_CITextBlock* This,
        EventRegistrationToken token);
    HRESULT (STDMETHODCALLTYPE* SelectAll)(__x_ABI_CWindows_CUI_CXaml_CControls_CITextBlock* This);
    HRESULT (STDMETHODCALLTYPE* Select)(__x_ABI_CWindows_CUI_CXaml_CControls_CITextBlock* This,
        __x_ABI_CWindows_CUI_CXaml_CDocuments_CITextPointer* start,
        __x_ABI_CWindows_CUI_CXaml_CDocuments_CITextPointer* end);
    HRESULT (STDMETHODCALLTYPE* Focus)(__x_ABI_CWindows_CUI_CXaml_CControls_CITextBlock* This,
        enum __x_ABI_CWindows_CUI_CXaml_CFocusState value,
        boolean* result);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CITextBlockVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CITextBlock
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CITextBlockVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CITextBlock;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CITextBlock_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CITextBlock2_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CControls_CITextBlock2_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CITextBlock2Vtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CControls_CITextBlock2* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CControls_CITextBlock2* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CControls_CITextBlock2* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CControls_CITextBlock2* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CControls_CITextBlock2* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CControls_CITextBlock2* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_SelectionHighlightColor)(__x_ABI_CWindows_CUI_CXaml_CControls_CITextBlock2* This,
        __x_ABI_CWindows_CUI_CXaml_CMedia_CISolidColorBrush** value);
    HRESULT (STDMETHODCALLTYPE* put_SelectionHighlightColor)(__x_ABI_CWindows_CUI_CXaml_CControls_CITextBlock2* This,
        __x_ABI_CWindows_CUI_CXaml_CMedia_CISolidColorBrush* value);
    HRESULT (STDMETHODCALLTYPE* get_MaxLines)(__x_ABI_CWindows_CUI_CXaml_CControls_CITextBlock2* This,
        INT32* value);
    HRESULT (STDMETHODCALLTYPE* put_MaxLines)(__x_ABI_CWindows_CUI_CXaml_CControls_CITextBlock2* This,
        INT32 value);
    HRESULT (STDMETHODCALLTYPE* get_TextLineBounds)(__x_ABI_CWindows_CUI_CXaml_CControls_CITextBlock2* This,
        enum __x_ABI_CWindows_CUI_CXaml_CTextLineBounds* value);
    HRESULT (STDMETHODCALLTYPE* put_TextLineBounds)(__x_ABI_CWindows_CUI_CXaml_CControls_CITextBlock2* This,
        enum __x_ABI_CWindows_CUI_CXaml_CTextLineBounds value);
    HRESULT (STDMETHODCALLTYPE* get_OpticalMarginAlignment)(__x_ABI_CWindows_CUI_CXaml_CControls_CITextBlock2* This,
        enum __x_ABI_CWindows_CUI_CXaml_COpticalMarginAlignment* value);
    HRESULT (STDMETHODCALLTYPE* put_OpticalMarginAlignment)(__x_ABI_CWindows_CUI_CXaml_CControls_CITextBlock2* This,
        enum __x_ABI_CWindows_CUI_CXaml_COpticalMarginAlignment value);
    HRESULT (STDMETHODCALLTYPE* get_IsColorFontEnabled)(__x_ABI_CWindows_CUI_CXaml_CControls_CITextBlock2* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* put_IsColorFontEnabled)(__x_ABI_CWindows_CUI_CXaml_CControls_CITextBlock2* This,
        boolean value);
    HRESULT (STDMETHODCALLTYPE* get_TextReadingOrder)(__x_ABI_CWindows_CUI_CXaml_CControls_CITextBlock2* This,
        enum __x_ABI_CWindows_CUI_CXaml_CTextReadingOrder* value);
    HRESULT (STDMETHODCALLTYPE* put_TextReadingOrder)(__x_ABI_CWindows_CUI_CXaml_CControls_CITextBlock2* This,
        enum __x_ABI_CWindows_CUI_CXaml_CTextReadingOrder value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CITextBlock2Vtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CITextBlock2
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CITextBlock2Vtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CITextBlock2;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CITextBlock2_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CITextBlock3_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CControls_CITextBlock3_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CITextBlock3Vtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CControls_CITextBlock3* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CControls_CITextBlock3* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CControls_CITextBlock3* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CControls_CITextBlock3* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CControls_CITextBlock3* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CControls_CITextBlock3* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_IsTextScaleFactorEnabled)(__x_ABI_CWindows_CUI_CXaml_CControls_CITextBlock3* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* put_IsTextScaleFactorEnabled)(__x_ABI_CWindows_CUI_CXaml_CControls_CITextBlock3* This,
        boolean value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CITextBlock3Vtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CITextBlock3
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CITextBlock3Vtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CITextBlock3;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CITextBlock3_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CITextBlock4_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CControls_CITextBlock4_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CITextBlock4Vtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CControls_CITextBlock4* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CControls_CITextBlock4* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CControls_CITextBlock4* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CControls_CITextBlock4* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CControls_CITextBlock4* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CControls_CITextBlock4* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* GetAlphaMask)(__x_ABI_CWindows_CUI_CXaml_CControls_CITextBlock4* This,
        __x_ABI_CWindows_CUI_CComposition_CICompositionBrush** result);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CITextBlock4Vtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CITextBlock4
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CITextBlock4Vtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CITextBlock4;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CITextBlock4_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CITextBlock5_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CControls_CITextBlock5_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CITextBlock5Vtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CControls_CITextBlock5* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CControls_CITextBlock5* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CControls_CITextBlock5* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CControls_CITextBlock5* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CControls_CITextBlock5* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CControls_CITextBlock5* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_TextDecorations)(__x_ABI_CWindows_CUI_CXaml_CControls_CITextBlock5* This,
        enum __x_ABI_CWindows_CUI_CText_CTextDecorations* value);
    HRESULT (STDMETHODCALLTYPE* put_TextDecorations)(__x_ABI_CWindows_CUI_CXaml_CControls_CITextBlock5* This,
        enum __x_ABI_CWindows_CUI_CText_CTextDecorations value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CITextBlock5Vtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CITextBlock5
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CITextBlock5Vtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CITextBlock5;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CITextBlock5_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CITextBlock6_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CControls_CITextBlock6_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CITextBlock6Vtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CControls_CITextBlock6* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CControls_CITextBlock6* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CControls_CITextBlock6* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CControls_CITextBlock6* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CControls_CITextBlock6* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CControls_CITextBlock6* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_IsTextTrimmed)(__x_ABI_CWindows_CUI_CXaml_CControls_CITextBlock6* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* get_HorizontalTextAlignment)(__x_ABI_CWindows_CUI_CXaml_CControls_CITextBlock6* This,
        enum __x_ABI_CWindows_CUI_CXaml_CTextAlignment* value);
    HRESULT (STDMETHODCALLTYPE* put_HorizontalTextAlignment)(__x_ABI_CWindows_CUI_CXaml_CControls_CITextBlock6* This,
        enum __x_ABI_CWindows_CUI_CXaml_CTextAlignment value);
    HRESULT (STDMETHODCALLTYPE* get_TextHighlighters)(__x_ABI_CWindows_CUI_CXaml_CControls_CITextBlock6* This,
        __x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CXaml__CDocuments__CTextHighlighter** value);
    HRESULT (STDMETHODCALLTYPE* add_IsTextTrimmedChanged)(__x_ABI_CWindows_CUI_CXaml_CControls_CITextBlock6* This,
        __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CTextBlock___x_ABI_CWindows__CUI__CXaml__CControls__CIsTextTrimmedChangedEventArgs* handler,
        EventRegistrationToken* token);
    HRESULT (STDMETHODCALLTYPE* remove_IsTextTrimmedChanged)(__x_ABI_CWindows_CUI_CXaml_CControls_CITextBlock6* This,
        EventRegistrationToken token);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CITextBlock6Vtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CITextBlock6
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CITextBlock6Vtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CITextBlock6;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CITextBlock6_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CITextBlock7_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CControls_CITextBlock7_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CITextBlock7Vtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CControls_CITextBlock7* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CControls_CITextBlock7* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CControls_CITextBlock7* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CControls_CITextBlock7* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CControls_CITextBlock7* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CControls_CITextBlock7* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_SelectionFlyout)(__x_ABI_CWindows_CUI_CXaml_CControls_CITextBlock7* This,
        __x_ABI_CWindows_CUI_CXaml_CControls_CPrimitives_CIFlyoutBase** value);
    HRESULT (STDMETHODCALLTYPE* put_SelectionFlyout)(__x_ABI_CWindows_CUI_CXaml_CControls_CITextBlock7* This,
        __x_ABI_CWindows_CUI_CXaml_CControls_CPrimitives_CIFlyoutBase* value);
    HRESULT (STDMETHODCALLTYPE* CopySelectionToClipboard)(__x_ABI_CWindows_CUI_CXaml_CControls_CITextBlock7* This);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CITextBlock7Vtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CITextBlock7
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CITextBlock7Vtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CITextBlock7;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CITextBlock7_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CITextBlockStatics_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CControls_CITextBlockStatics_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CITextBlockStaticsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CControls_CITextBlockStatics* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CControls_CITextBlockStatics* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CControls_CITextBlockStatics* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CControls_CITextBlockStatics* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CControls_CITextBlockStatics* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CControls_CITextBlockStatics* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_FontSizeProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CITextBlockStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_FontFamilyProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CITextBlockStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_FontWeightProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CITextBlockStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_FontStyleProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CITextBlockStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_FontStretchProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CITextBlockStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_CharacterSpacingProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CITextBlockStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_ForegroundProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CITextBlockStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_TextWrappingProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CITextBlockStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_TextTrimmingProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CITextBlockStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_TextAlignmentProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CITextBlockStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_TextProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CITextBlockStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_PaddingProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CITextBlockStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_LineHeightProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CITextBlockStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_LineStackingStrategyProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CITextBlockStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_IsTextSelectionEnabledProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CITextBlockStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_SelectedTextProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CITextBlockStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CITextBlockStaticsVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CITextBlockStatics
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CITextBlockStaticsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CITextBlockStatics;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CITextBlockStatics_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CITextBlockStatics2_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CControls_CITextBlockStatics2_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CITextBlockStatics2Vtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CControls_CITextBlockStatics2* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CControls_CITextBlockStatics2* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CControls_CITextBlockStatics2* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CControls_CITextBlockStatics2* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CControls_CITextBlockStatics2* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CControls_CITextBlockStatics2* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_SelectionHighlightColorProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CITextBlockStatics2* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_MaxLinesProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CITextBlockStatics2* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_TextLineBoundsProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CITextBlockStatics2* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_OpticalMarginAlignmentProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CITextBlockStatics2* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_IsColorFontEnabledProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CITextBlockStatics2* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_TextReadingOrderProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CITextBlockStatics2* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CITextBlockStatics2Vtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CITextBlockStatics2
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CITextBlockStatics2Vtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CITextBlockStatics2;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CITextBlockStatics2_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CITextBlockStatics3_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CControls_CITextBlockStatics3_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CITextBlockStatics3Vtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CControls_CITextBlockStatics3* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CControls_CITextBlockStatics3* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CControls_CITextBlockStatics3* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CControls_CITextBlockStatics3* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CControls_CITextBlockStatics3* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CControls_CITextBlockStatics3* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_IsTextScaleFactorEnabledProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CITextBlockStatics3* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CITextBlockStatics3Vtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CITextBlockStatics3
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CITextBlockStatics3Vtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CITextBlockStatics3;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CITextBlockStatics3_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CITextBlockStatics5_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CControls_CITextBlockStatics5_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CITextBlockStatics5Vtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CControls_CITextBlockStatics5* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CControls_CITextBlockStatics5* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CControls_CITextBlockStatics5* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CControls_CITextBlockStatics5* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CControls_CITextBlockStatics5* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CControls_CITextBlockStatics5* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_TextDecorationsProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CITextBlockStatics5* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CITextBlockStatics5Vtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CITextBlockStatics5
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CITextBlockStatics5Vtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CITextBlockStatics5;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CITextBlockStatics5_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CITextBlockStatics6_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CControls_CITextBlockStatics6_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CITextBlockStatics6Vtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CControls_CITextBlockStatics6* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CControls_CITextBlockStatics6* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CControls_CITextBlockStatics6* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CControls_CITextBlockStatics6* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CControls_CITextBlockStatics6* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CControls_CITextBlockStatics6* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_IsTextTrimmedProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CITextBlockStatics6* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_HorizontalTextAlignmentProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CITextBlockStatics6* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CITextBlockStatics6Vtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CITextBlockStatics6
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CITextBlockStatics6Vtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CITextBlockStatics6;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CITextBlockStatics6_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CITextBlockStatics7_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CControls_CITextBlockStatics7_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CITextBlockStatics7Vtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CControls_CITextBlockStatics7* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CControls_CITextBlockStatics7* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CControls_CITextBlockStatics7* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CControls_CITextBlockStatics7* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CControls_CITextBlockStatics7* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CControls_CITextBlockStatics7* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_SelectionFlyoutProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CITextBlockStatics7* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CITextBlockStatics7Vtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CITextBlockStatics7
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CITextBlockStatics7Vtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CITextBlockStatics7;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CITextBlockStatics7_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CITextBox_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CControls_CITextBox_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CITextBoxVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CControls_CITextBox* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CControls_CITextBox* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CControls_CITextBox* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CControls_CITextBox* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CControls_CITextBox* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CControls_CITextBox* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Text)(__x_ABI_CWindows_CUI_CXaml_CControls_CITextBox* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* put_Text)(__x_ABI_CWindows_CUI_CXaml_CControls_CITextBox* This,
        HSTRING value);
    HRESULT (STDMETHODCALLTYPE* get_SelectedText)(__x_ABI_CWindows_CUI_CXaml_CControls_CITextBox* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* put_SelectedText)(__x_ABI_CWindows_CUI_CXaml_CControls_CITextBox* This,
        HSTRING value);
    HRESULT (STDMETHODCALLTYPE* get_SelectionLength)(__x_ABI_CWindows_CUI_CXaml_CControls_CITextBox* This,
        INT32* value);
    HRESULT (STDMETHODCALLTYPE* put_SelectionLength)(__x_ABI_CWindows_CUI_CXaml_CControls_CITextBox* This,
        INT32 value);
    HRESULT (STDMETHODCALLTYPE* get_SelectionStart)(__x_ABI_CWindows_CUI_CXaml_CControls_CITextBox* This,
        INT32* value);
    HRESULT (STDMETHODCALLTYPE* put_SelectionStart)(__x_ABI_CWindows_CUI_CXaml_CControls_CITextBox* This,
        INT32 value);
    HRESULT (STDMETHODCALLTYPE* get_MaxLength)(__x_ABI_CWindows_CUI_CXaml_CControls_CITextBox* This,
        INT32* value);
    HRESULT (STDMETHODCALLTYPE* put_MaxLength)(__x_ABI_CWindows_CUI_CXaml_CControls_CITextBox* This,
        INT32 value);
    HRESULT (STDMETHODCALLTYPE* get_IsReadOnly)(__x_ABI_CWindows_CUI_CXaml_CControls_CITextBox* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* put_IsReadOnly)(__x_ABI_CWindows_CUI_CXaml_CControls_CITextBox* This,
        boolean value);
    HRESULT (STDMETHODCALLTYPE* get_AcceptsReturn)(__x_ABI_CWindows_CUI_CXaml_CControls_CITextBox* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* put_AcceptsReturn)(__x_ABI_CWindows_CUI_CXaml_CControls_CITextBox* This,
        boolean value);
    HRESULT (STDMETHODCALLTYPE* get_TextAlignment)(__x_ABI_CWindows_CUI_CXaml_CControls_CITextBox* This,
        enum __x_ABI_CWindows_CUI_CXaml_CTextAlignment* value);
    HRESULT (STDMETHODCALLTYPE* put_TextAlignment)(__x_ABI_CWindows_CUI_CXaml_CControls_CITextBox* This,
        enum __x_ABI_CWindows_CUI_CXaml_CTextAlignment value);
    HRESULT (STDMETHODCALLTYPE* get_TextWrapping)(__x_ABI_CWindows_CUI_CXaml_CControls_CITextBox* This,
        enum __x_ABI_CWindows_CUI_CXaml_CTextWrapping* value);
    HRESULT (STDMETHODCALLTYPE* put_TextWrapping)(__x_ABI_CWindows_CUI_CXaml_CControls_CITextBox* This,
        enum __x_ABI_CWindows_CUI_CXaml_CTextWrapping value);
    HRESULT (STDMETHODCALLTYPE* get_IsSpellCheckEnabled)(__x_ABI_CWindows_CUI_CXaml_CControls_CITextBox* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* put_IsSpellCheckEnabled)(__x_ABI_CWindows_CUI_CXaml_CControls_CITextBox* This,
        boolean value);
    HRESULT (STDMETHODCALLTYPE* get_IsTextPredictionEnabled)(__x_ABI_CWindows_CUI_CXaml_CControls_CITextBox* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* put_IsTextPredictionEnabled)(__x_ABI_CWindows_CUI_CXaml_CControls_CITextBox* This,
        boolean value);
    HRESULT (STDMETHODCALLTYPE* get_InputScope)(__x_ABI_CWindows_CUI_CXaml_CControls_CITextBox* This,
        __x_ABI_CWindows_CUI_CXaml_CInput_CIInputScope** value);
    HRESULT (STDMETHODCALLTYPE* put_InputScope)(__x_ABI_CWindows_CUI_CXaml_CControls_CITextBox* This,
        __x_ABI_CWindows_CUI_CXaml_CInput_CIInputScope* value);
    HRESULT (STDMETHODCALLTYPE* add_TextChanged)(__x_ABI_CWindows_CUI_CXaml_CControls_CITextBox* This,
        __x_ABI_CWindows_CUI_CXaml_CControls_CITextChangedEventHandler* handler,
        EventRegistrationToken* token);
    HRESULT (STDMETHODCALLTYPE* remove_TextChanged)(__x_ABI_CWindows_CUI_CXaml_CControls_CITextBox* This,
        EventRegistrationToken token);
    HRESULT (STDMETHODCALLTYPE* add_SelectionChanged)(__x_ABI_CWindows_CUI_CXaml_CControls_CITextBox* This,
        __x_ABI_CWindows_CUI_CXaml_CIRoutedEventHandler* handler,
        EventRegistrationToken* token);
    HRESULT (STDMETHODCALLTYPE* remove_SelectionChanged)(__x_ABI_CWindows_CUI_CXaml_CControls_CITextBox* This,
        EventRegistrationToken token);
    HRESULT (STDMETHODCALLTYPE* add_ContextMenuOpening)(__x_ABI_CWindows_CUI_CXaml_CControls_CITextBox* This,
        __x_ABI_CWindows_CUI_CXaml_CControls_CIContextMenuOpeningEventHandler* handler,
        EventRegistrationToken* token);
    HRESULT (STDMETHODCALLTYPE* remove_ContextMenuOpening)(__x_ABI_CWindows_CUI_CXaml_CControls_CITextBox* This,
        EventRegistrationToken token);
    HRESULT (STDMETHODCALLTYPE* Select)(__x_ABI_CWindows_CUI_CXaml_CControls_CITextBox* This,
        INT32 start,
        INT32 length);
    HRESULT (STDMETHODCALLTYPE* SelectAll)(__x_ABI_CWindows_CUI_CXaml_CControls_CITextBox* This);
    HRESULT (STDMETHODCALLTYPE* GetRectFromCharacterIndex)(__x_ABI_CWindows_CUI_CXaml_CControls_CITextBox* This,
        INT32 charIndex,
        boolean trailingEdge,
        struct __x_ABI_CWindows_CFoundation_CRect* result);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CITextBoxVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CITextBox
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CITextBoxVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CITextBox;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CITextBox_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CITextBox2_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CControls_CITextBox2_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CITextBox2Vtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CControls_CITextBox2* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CControls_CITextBox2* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CControls_CITextBox2* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CControls_CITextBox2* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CControls_CITextBox2* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CControls_CITextBox2* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Header)(__x_ABI_CWindows_CUI_CXaml_CControls_CITextBox2* This,
        IInspectable** value);
    HRESULT (STDMETHODCALLTYPE* put_Header)(__x_ABI_CWindows_CUI_CXaml_CControls_CITextBox2* This,
        IInspectable* value);
    HRESULT (STDMETHODCALLTYPE* get_HeaderTemplate)(__x_ABI_CWindows_CUI_CXaml_CControls_CITextBox2* This,
        __x_ABI_CWindows_CUI_CXaml_CIDataTemplate** value);
    HRESULT (STDMETHODCALLTYPE* put_HeaderTemplate)(__x_ABI_CWindows_CUI_CXaml_CControls_CITextBox2* This,
        __x_ABI_CWindows_CUI_CXaml_CIDataTemplate* value);
    HRESULT (STDMETHODCALLTYPE* get_PlaceholderText)(__x_ABI_CWindows_CUI_CXaml_CControls_CITextBox2* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* put_PlaceholderText)(__x_ABI_CWindows_CUI_CXaml_CControls_CITextBox2* This,
        HSTRING value);
    HRESULT (STDMETHODCALLTYPE* get_SelectionHighlightColor)(__x_ABI_CWindows_CUI_CXaml_CControls_CITextBox2* This,
        __x_ABI_CWindows_CUI_CXaml_CMedia_CISolidColorBrush** value);
    HRESULT (STDMETHODCALLTYPE* put_SelectionHighlightColor)(__x_ABI_CWindows_CUI_CXaml_CControls_CITextBox2* This,
        __x_ABI_CWindows_CUI_CXaml_CMedia_CISolidColorBrush* value);
    HRESULT (STDMETHODCALLTYPE* get_PreventKeyboardDisplayOnProgrammaticFocus)(__x_ABI_CWindows_CUI_CXaml_CControls_CITextBox2* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* put_PreventKeyboardDisplayOnProgrammaticFocus)(__x_ABI_CWindows_CUI_CXaml_CControls_CITextBox2* This,
        boolean value);
    HRESULT (STDMETHODCALLTYPE* get_IsColorFontEnabled)(__x_ABI_CWindows_CUI_CXaml_CControls_CITextBox2* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* put_IsColorFontEnabled)(__x_ABI_CWindows_CUI_CXaml_CControls_CITextBox2* This,
        boolean value);
    HRESULT (STDMETHODCALLTYPE* add_Paste)(__x_ABI_CWindows_CUI_CXaml_CControls_CITextBox2* This,
        __x_ABI_CWindows_CUI_CXaml_CControls_CITextControlPasteEventHandler* handler,
        EventRegistrationToken* token);
    HRESULT (STDMETHODCALLTYPE* remove_Paste)(__x_ABI_CWindows_CUI_CXaml_CControls_CITextBox2* This,
        EventRegistrationToken token);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CITextBox2Vtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CITextBox2
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CITextBox2Vtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CITextBox2;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CITextBox2_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CITextBox3_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CControls_CITextBox3_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CITextBox3Vtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CControls_CITextBox3* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CControls_CITextBox3* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CControls_CITextBox3* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CControls_CITextBox3* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CControls_CITextBox3* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CControls_CITextBox3* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* add_TextCompositionStarted)(__x_ABI_CWindows_CUI_CXaml_CControls_CITextBox3* This,
        __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CTextBox___x_ABI_CWindows__CUI__CXaml__CControls__CTextCompositionStartedEventArgs* handler,
        EventRegistrationToken* token);
    HRESULT (STDMETHODCALLTYPE* remove_TextCompositionStarted)(__x_ABI_CWindows_CUI_CXaml_CControls_CITextBox3* This,
        EventRegistrationToken token);
    HRESULT (STDMETHODCALLTYPE* add_TextCompositionChanged)(__x_ABI_CWindows_CUI_CXaml_CControls_CITextBox3* This,
        __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CTextBox___x_ABI_CWindows__CUI__CXaml__CControls__CTextCompositionChangedEventArgs* handler,
        EventRegistrationToken* token);
    HRESULT (STDMETHODCALLTYPE* remove_TextCompositionChanged)(__x_ABI_CWindows_CUI_CXaml_CControls_CITextBox3* This,
        EventRegistrationToken token);
    HRESULT (STDMETHODCALLTYPE* add_TextCompositionEnded)(__x_ABI_CWindows_CUI_CXaml_CControls_CITextBox3* This,
        __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CTextBox___x_ABI_CWindows__CUI__CXaml__CControls__CTextCompositionEndedEventArgs* handler,
        EventRegistrationToken* token);
    HRESULT (STDMETHODCALLTYPE* remove_TextCompositionEnded)(__x_ABI_CWindows_CUI_CXaml_CControls_CITextBox3* This,
        EventRegistrationToken token);
    HRESULT (STDMETHODCALLTYPE* get_TextReadingOrder)(__x_ABI_CWindows_CUI_CXaml_CControls_CITextBox3* This,
        enum __x_ABI_CWindows_CUI_CXaml_CTextReadingOrder* value);
    HRESULT (STDMETHODCALLTYPE* put_TextReadingOrder)(__x_ABI_CWindows_CUI_CXaml_CControls_CITextBox3* This,
        enum __x_ABI_CWindows_CUI_CXaml_CTextReadingOrder value);
    HRESULT (STDMETHODCALLTYPE* get_DesiredCandidateWindowAlignment)(__x_ABI_CWindows_CUI_CXaml_CControls_CITextBox3* This,
        enum __x_ABI_CWindows_CUI_CXaml_CControls_CCandidateWindowAlignment* value);
    HRESULT (STDMETHODCALLTYPE* put_DesiredCandidateWindowAlignment)(__x_ABI_CWindows_CUI_CXaml_CControls_CITextBox3* This,
        enum __x_ABI_CWindows_CUI_CXaml_CControls_CCandidateWindowAlignment value);
    HRESULT (STDMETHODCALLTYPE* add_CandidateWindowBoundsChanged)(__x_ABI_CWindows_CUI_CXaml_CControls_CITextBox3* This,
        __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CTextBox___x_ABI_CWindows__CUI__CXaml__CControls__CCandidateWindowBoundsChangedEventArgs* handler,
        EventRegistrationToken* token);
    HRESULT (STDMETHODCALLTYPE* remove_CandidateWindowBoundsChanged)(__x_ABI_CWindows_CUI_CXaml_CControls_CITextBox3* This,
        EventRegistrationToken token);
    HRESULT (STDMETHODCALLTYPE* add_TextChanging)(__x_ABI_CWindows_CUI_CXaml_CControls_CITextBox3* This,
        __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CTextBox___x_ABI_CWindows__CUI__CXaml__CControls__CTextBoxTextChangingEventArgs* handler,
        EventRegistrationToken* token);
    HRESULT (STDMETHODCALLTYPE* remove_TextChanging)(__x_ABI_CWindows_CUI_CXaml_CControls_CITextBox3* This,
        EventRegistrationToken token);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CITextBox3Vtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CITextBox3
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CITextBox3Vtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CITextBox3;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CITextBox3_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CITextBox4_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CControls_CITextBox4_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CITextBox4Vtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CControls_CITextBox4* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CControls_CITextBox4* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CControls_CITextBox4* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CControls_CITextBox4* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CControls_CITextBox4* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CControls_CITextBox4* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* GetLinguisticAlternativesAsync)(__x_ABI_CWindows_CUI_CXaml_CControls_CITextBox4* This,
        __x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1_HSTRING** operation);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CITextBox4Vtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CITextBox4
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CITextBox4Vtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CITextBox4;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CITextBox4_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CITextBox5_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CControls_CITextBox5_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CITextBox5Vtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CControls_CITextBox5* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CControls_CITextBox5* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CControls_CITextBox5* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CControls_CITextBox5* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CControls_CITextBox5* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CControls_CITextBox5* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_SelectionHighlightColorWhenNotFocused)(__x_ABI_CWindows_CUI_CXaml_CControls_CITextBox5* This,
        __x_ABI_CWindows_CUI_CXaml_CMedia_CISolidColorBrush** value);
    HRESULT (STDMETHODCALLTYPE* put_SelectionHighlightColorWhenNotFocused)(__x_ABI_CWindows_CUI_CXaml_CControls_CITextBox5* This,
        __x_ABI_CWindows_CUI_CXaml_CMedia_CISolidColorBrush* value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CITextBox5Vtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CITextBox5
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CITextBox5Vtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CITextBox5;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CITextBox5_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CITextBox6_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CControls_CITextBox6_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CITextBox6Vtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CControls_CITextBox6* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CControls_CITextBox6* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CControls_CITextBox6* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CControls_CITextBox6* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CControls_CITextBox6* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CControls_CITextBox6* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_HorizontalTextAlignment)(__x_ABI_CWindows_CUI_CXaml_CControls_CITextBox6* This,
        enum __x_ABI_CWindows_CUI_CXaml_CTextAlignment* value);
    HRESULT (STDMETHODCALLTYPE* put_HorizontalTextAlignment)(__x_ABI_CWindows_CUI_CXaml_CControls_CITextBox6* This,
        enum __x_ABI_CWindows_CUI_CXaml_CTextAlignment value);
    HRESULT (STDMETHODCALLTYPE* get_CharacterCasing)(__x_ABI_CWindows_CUI_CXaml_CControls_CITextBox6* This,
        enum __x_ABI_CWindows_CUI_CXaml_CControls_CCharacterCasing* value);
    HRESULT (STDMETHODCALLTYPE* put_CharacterCasing)(__x_ABI_CWindows_CUI_CXaml_CControls_CITextBox6* This,
        enum __x_ABI_CWindows_CUI_CXaml_CControls_CCharacterCasing value);
    HRESULT (STDMETHODCALLTYPE* get_PlaceholderForeground)(__x_ABI_CWindows_CUI_CXaml_CControls_CITextBox6* This,
        __x_ABI_CWindows_CUI_CXaml_CMedia_CIBrush** value);
    HRESULT (STDMETHODCALLTYPE* put_PlaceholderForeground)(__x_ABI_CWindows_CUI_CXaml_CControls_CITextBox6* This,
        __x_ABI_CWindows_CUI_CXaml_CMedia_CIBrush* value);
    HRESULT (STDMETHODCALLTYPE* add_CopyingToClipboard)(__x_ABI_CWindows_CUI_CXaml_CControls_CITextBox6* This,
        __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CTextBox___x_ABI_CWindows__CUI__CXaml__CControls__CTextControlCopyingToClipboardEventArgs* handler,
        EventRegistrationToken* token);
    HRESULT (STDMETHODCALLTYPE* remove_CopyingToClipboard)(__x_ABI_CWindows_CUI_CXaml_CControls_CITextBox6* This,
        EventRegistrationToken token);
    HRESULT (STDMETHODCALLTYPE* add_CuttingToClipboard)(__x_ABI_CWindows_CUI_CXaml_CControls_CITextBox6* This,
        __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CTextBox___x_ABI_CWindows__CUI__CXaml__CControls__CTextControlCuttingToClipboardEventArgs* handler,
        EventRegistrationToken* token);
    HRESULT (STDMETHODCALLTYPE* remove_CuttingToClipboard)(__x_ABI_CWindows_CUI_CXaml_CControls_CITextBox6* This,
        EventRegistrationToken token);
    HRESULT (STDMETHODCALLTYPE* add_BeforeTextChanging)(__x_ABI_CWindows_CUI_CXaml_CControls_CITextBox6* This,
        __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CTextBox___x_ABI_CWindows__CUI__CXaml__CControls__CTextBoxBeforeTextChangingEventArgs* handler,
        EventRegistrationToken* token);
    HRESULT (STDMETHODCALLTYPE* remove_BeforeTextChanging)(__x_ABI_CWindows_CUI_CXaml_CControls_CITextBox6* This,
        EventRegistrationToken token);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CITextBox6Vtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CITextBox6
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CITextBox6Vtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CITextBox6;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CITextBox6_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CITextBox7_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CControls_CITextBox7_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CITextBox7Vtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CControls_CITextBox7* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CControls_CITextBox7* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CControls_CITextBox7* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CControls_CITextBox7* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CControls_CITextBox7* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CControls_CITextBox7* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_HandwritingView)(__x_ABI_CWindows_CUI_CXaml_CControls_CITextBox7* This,
        __x_ABI_CWindows_CUI_CXaml_CControls_CIHandwritingView** value);
    HRESULT (STDMETHODCALLTYPE* put_HandwritingView)(__x_ABI_CWindows_CUI_CXaml_CControls_CITextBox7* This,
        __x_ABI_CWindows_CUI_CXaml_CControls_CIHandwritingView* value);
    HRESULT (STDMETHODCALLTYPE* get_IsHandwritingViewEnabled)(__x_ABI_CWindows_CUI_CXaml_CControls_CITextBox7* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* put_IsHandwritingViewEnabled)(__x_ABI_CWindows_CUI_CXaml_CControls_CITextBox7* This,
        boolean value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CITextBox7Vtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CITextBox7
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CITextBox7Vtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CITextBox7;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CITextBox7_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CITextBox8_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CControls_CITextBox8_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CITextBox8Vtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CControls_CITextBox8* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CControls_CITextBox8* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CControls_CITextBox8* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CControls_CITextBox8* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CControls_CITextBox8* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CControls_CITextBox8* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_CanPasteClipboardContent)(__x_ABI_CWindows_CUI_CXaml_CControls_CITextBox8* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* get_CanUndo)(__x_ABI_CWindows_CUI_CXaml_CControls_CITextBox8* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* get_CanRedo)(__x_ABI_CWindows_CUI_CXaml_CControls_CITextBox8* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* get_SelectionFlyout)(__x_ABI_CWindows_CUI_CXaml_CControls_CITextBox8* This,
        __x_ABI_CWindows_CUI_CXaml_CControls_CPrimitives_CIFlyoutBase** value);
    HRESULT (STDMETHODCALLTYPE* put_SelectionFlyout)(__x_ABI_CWindows_CUI_CXaml_CControls_CITextBox8* This,
        __x_ABI_CWindows_CUI_CXaml_CControls_CPrimitives_CIFlyoutBase* value);
    HRESULT (STDMETHODCALLTYPE* get_ProofingMenuFlyout)(__x_ABI_CWindows_CUI_CXaml_CControls_CITextBox8* This,
        __x_ABI_CWindows_CUI_CXaml_CControls_CPrimitives_CIFlyoutBase** value);
    HRESULT (STDMETHODCALLTYPE* get_Description)(__x_ABI_CWindows_CUI_CXaml_CControls_CITextBox8* This,
        IInspectable** value);
    HRESULT (STDMETHODCALLTYPE* put_Description)(__x_ABI_CWindows_CUI_CXaml_CControls_CITextBox8* This,
        IInspectable* value);
    HRESULT (STDMETHODCALLTYPE* add_SelectionChanging)(__x_ABI_CWindows_CUI_CXaml_CControls_CITextBox8* This,
        __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CTextBox___x_ABI_CWindows__CUI__CXaml__CControls__CTextBoxSelectionChangingEventArgs* handler,
        EventRegistrationToken* token);
    HRESULT (STDMETHODCALLTYPE* remove_SelectionChanging)(__x_ABI_CWindows_CUI_CXaml_CControls_CITextBox8* This,
        EventRegistrationToken token);
    HRESULT (STDMETHODCALLTYPE* Undo)(__x_ABI_CWindows_CUI_CXaml_CControls_CITextBox8* This);
    HRESULT (STDMETHODCALLTYPE* Redo)(__x_ABI_CWindows_CUI_CXaml_CControls_CITextBox8* This);
    HRESULT (STDMETHODCALLTYPE* PasteFromClipboard)(__x_ABI_CWindows_CUI_CXaml_CControls_CITextBox8* This);
    HRESULT (STDMETHODCALLTYPE* CopySelectionToClipboard)(__x_ABI_CWindows_CUI_CXaml_CControls_CITextBox8* This);
    HRESULT (STDMETHODCALLTYPE* CutSelectionToClipboard)(__x_ABI_CWindows_CUI_CXaml_CControls_CITextBox8* This);
    HRESULT (STDMETHODCALLTYPE* ClearUndoRedoHistory)(__x_ABI_CWindows_CUI_CXaml_CControls_CITextBox8* This);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CITextBox8Vtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CITextBox8
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CITextBox8Vtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CITextBox8;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CITextBox8_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CITextBoxBeforeTextChangingEventArgs_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CControls_CITextBoxBeforeTextChangingEventArgs_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CITextBoxBeforeTextChangingEventArgsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CControls_CITextBoxBeforeTextChangingEventArgs* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CControls_CITextBoxBeforeTextChangingEventArgs* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CControls_CITextBoxBeforeTextChangingEventArgs* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CControls_CITextBoxBeforeTextChangingEventArgs* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CControls_CITextBoxBeforeTextChangingEventArgs* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CControls_CITextBoxBeforeTextChangingEventArgs* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_NewText)(__x_ABI_CWindows_CUI_CXaml_CControls_CITextBoxBeforeTextChangingEventArgs* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* get_Cancel)(__x_ABI_CWindows_CUI_CXaml_CControls_CITextBoxBeforeTextChangingEventArgs* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* put_Cancel)(__x_ABI_CWindows_CUI_CXaml_CControls_CITextBoxBeforeTextChangingEventArgs* This,
        boolean value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CITextBoxBeforeTextChangingEventArgsVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CITextBoxBeforeTextChangingEventArgs
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CITextBoxBeforeTextChangingEventArgsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CITextBoxBeforeTextChangingEventArgs;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CITextBoxBeforeTextChangingEventArgs_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CITextBoxFactory_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CControls_CITextBoxFactory_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CITextBoxFactoryVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CControls_CITextBoxFactory* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CControls_CITextBoxFactory* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CControls_CITextBoxFactory* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CControls_CITextBoxFactory* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CControls_CITextBoxFactory* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CControls_CITextBoxFactory* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* CreateInstance)(__x_ABI_CWindows_CUI_CXaml_CControls_CITextBoxFactory* This,
        IInspectable* baseInterface,
        IInspectable** innerInterface,
        __x_ABI_CWindows_CUI_CXaml_CControls_CITextBox** value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CITextBoxFactoryVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CITextBoxFactory
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CITextBoxFactoryVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CITextBoxFactory;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CITextBoxFactory_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CITextBoxSelectionChangingEventArgs_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CControls_CITextBoxSelectionChangingEventArgs_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CITextBoxSelectionChangingEventArgsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CControls_CITextBoxSelectionChangingEventArgs* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CControls_CITextBoxSelectionChangingEventArgs* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CControls_CITextBoxSelectionChangingEventArgs* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CControls_CITextBoxSelectionChangingEventArgs* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CControls_CITextBoxSelectionChangingEventArgs* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CControls_CITextBoxSelectionChangingEventArgs* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_SelectionStart)(__x_ABI_CWindows_CUI_CXaml_CControls_CITextBoxSelectionChangingEventArgs* This,
        INT32* value);
    HRESULT (STDMETHODCALLTYPE* get_SelectionLength)(__x_ABI_CWindows_CUI_CXaml_CControls_CITextBoxSelectionChangingEventArgs* This,
        INT32* value);
    HRESULT (STDMETHODCALLTYPE* get_Cancel)(__x_ABI_CWindows_CUI_CXaml_CControls_CITextBoxSelectionChangingEventArgs* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* put_Cancel)(__x_ABI_CWindows_CUI_CXaml_CControls_CITextBoxSelectionChangingEventArgs* This,
        boolean value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CITextBoxSelectionChangingEventArgsVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CITextBoxSelectionChangingEventArgs
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CITextBoxSelectionChangingEventArgsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CITextBoxSelectionChangingEventArgs;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CITextBoxSelectionChangingEventArgs_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CITextBoxStatics_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CControls_CITextBoxStatics_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CITextBoxStaticsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CControls_CITextBoxStatics* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CControls_CITextBoxStatics* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CControls_CITextBoxStatics* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CControls_CITextBoxStatics* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CControls_CITextBoxStatics* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CControls_CITextBoxStatics* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_TextProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CITextBoxStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_MaxLengthProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CITextBoxStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_IsReadOnlyProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CITextBoxStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_AcceptsReturnProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CITextBoxStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_TextAlignmentProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CITextBoxStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_TextWrappingProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CITextBoxStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_IsSpellCheckEnabledProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CITextBoxStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_IsTextPredictionEnabledProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CITextBoxStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_InputScopeProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CITextBoxStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CITextBoxStaticsVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CITextBoxStatics
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CITextBoxStaticsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CITextBoxStatics;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CITextBoxStatics_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CITextBoxStatics2_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CControls_CITextBoxStatics2_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CITextBoxStatics2Vtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CControls_CITextBoxStatics2* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CControls_CITextBoxStatics2* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CControls_CITextBoxStatics2* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CControls_CITextBoxStatics2* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CControls_CITextBoxStatics2* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CControls_CITextBoxStatics2* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_HeaderProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CITextBoxStatics2* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_HeaderTemplateProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CITextBoxStatics2* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_PlaceholderTextProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CITextBoxStatics2* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_SelectionHighlightColorProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CITextBoxStatics2* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_PreventKeyboardDisplayOnProgrammaticFocusProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CITextBoxStatics2* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_IsColorFontEnabledProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CITextBoxStatics2* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CITextBoxStatics2Vtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CITextBoxStatics2
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CITextBoxStatics2Vtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CITextBoxStatics2;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CITextBoxStatics2_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CITextBoxStatics3_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CControls_CITextBoxStatics3_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CITextBoxStatics3Vtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CControls_CITextBoxStatics3* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CControls_CITextBoxStatics3* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CControls_CITextBoxStatics3* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CControls_CITextBoxStatics3* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CControls_CITextBoxStatics3* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CControls_CITextBoxStatics3* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_DesiredCandidateWindowAlignmentProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CITextBoxStatics3* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_TextReadingOrderProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CITextBoxStatics3* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CITextBoxStatics3Vtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CITextBoxStatics3
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CITextBoxStatics3Vtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CITextBoxStatics3;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CITextBoxStatics3_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CITextBoxStatics5_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CControls_CITextBoxStatics5_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CITextBoxStatics5Vtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CControls_CITextBoxStatics5* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CControls_CITextBoxStatics5* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CControls_CITextBoxStatics5* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CControls_CITextBoxStatics5* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CControls_CITextBoxStatics5* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CControls_CITextBoxStatics5* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_SelectionHighlightColorWhenNotFocusedProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CITextBoxStatics5* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CITextBoxStatics5Vtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CITextBoxStatics5
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CITextBoxStatics5Vtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CITextBoxStatics5;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CITextBoxStatics5_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CITextBoxStatics6_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CControls_CITextBoxStatics6_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CITextBoxStatics6Vtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CControls_CITextBoxStatics6* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CControls_CITextBoxStatics6* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CControls_CITextBoxStatics6* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CControls_CITextBoxStatics6* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CControls_CITextBoxStatics6* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CControls_CITextBoxStatics6* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_HorizontalTextAlignmentProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CITextBoxStatics6* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_CharacterCasingProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CITextBoxStatics6* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_PlaceholderForegroundProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CITextBoxStatics6* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CITextBoxStatics6Vtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CITextBoxStatics6
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CITextBoxStatics6Vtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CITextBoxStatics6;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CITextBoxStatics6_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CITextBoxStatics7_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CControls_CITextBoxStatics7_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CITextBoxStatics7Vtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CControls_CITextBoxStatics7* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CControls_CITextBoxStatics7* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CControls_CITextBoxStatics7* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CControls_CITextBoxStatics7* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CControls_CITextBoxStatics7* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CControls_CITextBoxStatics7* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_HandwritingViewProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CITextBoxStatics7* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_IsHandwritingViewEnabledProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CITextBoxStatics7* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CITextBoxStatics7Vtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CITextBoxStatics7
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CITextBoxStatics7Vtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CITextBoxStatics7;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CITextBoxStatics7_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CITextBoxStatics8_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CControls_CITextBoxStatics8_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CITextBoxStatics8Vtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CControls_CITextBoxStatics8* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CControls_CITextBoxStatics8* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CControls_CITextBoxStatics8* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CControls_CITextBoxStatics8* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CControls_CITextBoxStatics8* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CControls_CITextBoxStatics8* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_CanPasteClipboardContentProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CITextBoxStatics8* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_CanUndoProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CITextBoxStatics8* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_CanRedoProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CITextBoxStatics8* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_SelectionFlyoutProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CITextBoxStatics8* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_ProofingMenuFlyoutProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CITextBoxStatics8* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_DescriptionProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CITextBoxStatics8* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CITextBoxStatics8Vtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CITextBoxStatics8
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CITextBoxStatics8Vtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CITextBoxStatics8;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CITextBoxStatics8_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CITextBoxTextChangingEventArgs_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CControls_CITextBoxTextChangingEventArgs_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CITextBoxTextChangingEventArgsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CControls_CITextBoxTextChangingEventArgs* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CControls_CITextBoxTextChangingEventArgs* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CControls_CITextBoxTextChangingEventArgs* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CControls_CITextBoxTextChangingEventArgs* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CControls_CITextBoxTextChangingEventArgs* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CControls_CITextBoxTextChangingEventArgs* This,
            TrustLevel* trustLevel);
    
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CITextBoxTextChangingEventArgsVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CITextBoxTextChangingEventArgs
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CITextBoxTextChangingEventArgsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CITextBoxTextChangingEventArgs;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CITextBoxTextChangingEventArgs_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CITextBoxTextChangingEventArgs2_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CControls_CITextBoxTextChangingEventArgs2_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CITextBoxTextChangingEventArgs2Vtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CControls_CITextBoxTextChangingEventArgs2* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CControls_CITextBoxTextChangingEventArgs2* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CControls_CITextBoxTextChangingEventArgs2* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CControls_CITextBoxTextChangingEventArgs2* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CControls_CITextBoxTextChangingEventArgs2* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CControls_CITextBoxTextChangingEventArgs2* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_IsContentChanging)(__x_ABI_CWindows_CUI_CXaml_CControls_CITextBoxTextChangingEventArgs2* This,
        boolean* value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CITextBoxTextChangingEventArgs2Vtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CITextBoxTextChangingEventArgs2
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CITextBoxTextChangingEventArgs2Vtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CITextBoxTextChangingEventArgs2;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CITextBoxTextChangingEventArgs2_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CITextChangedEventArgs_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CControls_CITextChangedEventArgs_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CITextChangedEventArgsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CControls_CITextChangedEventArgs* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CControls_CITextChangedEventArgs* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CControls_CITextChangedEventArgs* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CControls_CITextChangedEventArgs* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CControls_CITextChangedEventArgs* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CControls_CITextChangedEventArgs* This,
            TrustLevel* trustLevel);
    
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CITextChangedEventArgsVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CITextChangedEventArgs
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CITextChangedEventArgsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CITextChangedEventArgs;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CITextChangedEventArgs_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CITextCommandBarFlyout_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CControls_CITextCommandBarFlyout_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CITextCommandBarFlyoutVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CControls_CITextCommandBarFlyout* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CControls_CITextCommandBarFlyout* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CControls_CITextCommandBarFlyout* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CControls_CITextCommandBarFlyout* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CControls_CITextCommandBarFlyout* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CControls_CITextCommandBarFlyout* This,
            TrustLevel* trustLevel);
    
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CITextCommandBarFlyoutVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CITextCommandBarFlyout
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CITextCommandBarFlyoutVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CITextCommandBarFlyout;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CITextCommandBarFlyout_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CITextCommandBarFlyoutFactory_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CControls_CITextCommandBarFlyoutFactory_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CITextCommandBarFlyoutFactoryVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CControls_CITextCommandBarFlyoutFactory* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CControls_CITextCommandBarFlyoutFactory* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CControls_CITextCommandBarFlyoutFactory* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CControls_CITextCommandBarFlyoutFactory* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CControls_CITextCommandBarFlyoutFactory* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CControls_CITextCommandBarFlyoutFactory* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* CreateInstance)(__x_ABI_CWindows_CUI_CXaml_CControls_CITextCommandBarFlyoutFactory* This,
        IInspectable* baseInterface,
        IInspectable** innerInterface,
        __x_ABI_CWindows_CUI_CXaml_CControls_CITextCommandBarFlyout** value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CITextCommandBarFlyoutFactoryVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CITextCommandBarFlyoutFactory
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CITextCommandBarFlyoutFactoryVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CITextCommandBarFlyoutFactory;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CITextCommandBarFlyoutFactory_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CITextCompositionChangedEventArgs_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CControls_CITextCompositionChangedEventArgs_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CITextCompositionChangedEventArgsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CControls_CITextCompositionChangedEventArgs* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CControls_CITextCompositionChangedEventArgs* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CControls_CITextCompositionChangedEventArgs* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CControls_CITextCompositionChangedEventArgs* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CControls_CITextCompositionChangedEventArgs* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CControls_CITextCompositionChangedEventArgs* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_StartIndex)(__x_ABI_CWindows_CUI_CXaml_CControls_CITextCompositionChangedEventArgs* This,
        INT32* value);
    HRESULT (STDMETHODCALLTYPE* get_Length)(__x_ABI_CWindows_CUI_CXaml_CControls_CITextCompositionChangedEventArgs* This,
        INT32* value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CITextCompositionChangedEventArgsVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CITextCompositionChangedEventArgs
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CITextCompositionChangedEventArgsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CITextCompositionChangedEventArgs;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CITextCompositionChangedEventArgs_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CITextCompositionEndedEventArgs_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CControls_CITextCompositionEndedEventArgs_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CITextCompositionEndedEventArgsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CControls_CITextCompositionEndedEventArgs* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CControls_CITextCompositionEndedEventArgs* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CControls_CITextCompositionEndedEventArgs* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CControls_CITextCompositionEndedEventArgs* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CControls_CITextCompositionEndedEventArgs* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CControls_CITextCompositionEndedEventArgs* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_StartIndex)(__x_ABI_CWindows_CUI_CXaml_CControls_CITextCompositionEndedEventArgs* This,
        INT32* value);
    HRESULT (STDMETHODCALLTYPE* get_Length)(__x_ABI_CWindows_CUI_CXaml_CControls_CITextCompositionEndedEventArgs* This,
        INT32* value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CITextCompositionEndedEventArgsVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CITextCompositionEndedEventArgs
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CITextCompositionEndedEventArgsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CITextCompositionEndedEventArgs;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CITextCompositionEndedEventArgs_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CITextCompositionStartedEventArgs_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CControls_CITextCompositionStartedEventArgs_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CITextCompositionStartedEventArgsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CControls_CITextCompositionStartedEventArgs* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CControls_CITextCompositionStartedEventArgs* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CControls_CITextCompositionStartedEventArgs* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CControls_CITextCompositionStartedEventArgs* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CControls_CITextCompositionStartedEventArgs* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CControls_CITextCompositionStartedEventArgs* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_StartIndex)(__x_ABI_CWindows_CUI_CXaml_CControls_CITextCompositionStartedEventArgs* This,
        INT32* value);
    HRESULT (STDMETHODCALLTYPE* get_Length)(__x_ABI_CWindows_CUI_CXaml_CControls_CITextCompositionStartedEventArgs* This,
        INT32* value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CITextCompositionStartedEventArgsVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CITextCompositionStartedEventArgs
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CITextCompositionStartedEventArgsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CITextCompositionStartedEventArgs;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CITextCompositionStartedEventArgs_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CITextControlCopyingToClipboardEventArgs_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CControls_CITextControlCopyingToClipboardEventArgs_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CITextControlCopyingToClipboardEventArgsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CControls_CITextControlCopyingToClipboardEventArgs* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CControls_CITextControlCopyingToClipboardEventArgs* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CControls_CITextControlCopyingToClipboardEventArgs* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CControls_CITextControlCopyingToClipboardEventArgs* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CControls_CITextControlCopyingToClipboardEventArgs* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CControls_CITextControlCopyingToClipboardEventArgs* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Handled)(__x_ABI_CWindows_CUI_CXaml_CControls_CITextControlCopyingToClipboardEventArgs* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* put_Handled)(__x_ABI_CWindows_CUI_CXaml_CControls_CITextControlCopyingToClipboardEventArgs* This,
        boolean value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CITextControlCopyingToClipboardEventArgsVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CITextControlCopyingToClipboardEventArgs
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CITextControlCopyingToClipboardEventArgsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CITextControlCopyingToClipboardEventArgs;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CITextControlCopyingToClipboardEventArgs_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CITextControlCuttingToClipboardEventArgs_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CControls_CITextControlCuttingToClipboardEventArgs_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CITextControlCuttingToClipboardEventArgsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CControls_CITextControlCuttingToClipboardEventArgs* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CControls_CITextControlCuttingToClipboardEventArgs* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CControls_CITextControlCuttingToClipboardEventArgs* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CControls_CITextControlCuttingToClipboardEventArgs* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CControls_CITextControlCuttingToClipboardEventArgs* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CControls_CITextControlCuttingToClipboardEventArgs* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Handled)(__x_ABI_CWindows_CUI_CXaml_CControls_CITextControlCuttingToClipboardEventArgs* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* put_Handled)(__x_ABI_CWindows_CUI_CXaml_CControls_CITextControlCuttingToClipboardEventArgs* This,
        boolean value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CITextControlCuttingToClipboardEventArgsVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CITextControlCuttingToClipboardEventArgs
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CITextControlCuttingToClipboardEventArgsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CITextControlCuttingToClipboardEventArgs;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CITextControlCuttingToClipboardEventArgs_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CITextControlPasteEventArgs_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CControls_CITextControlPasteEventArgs_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CITextControlPasteEventArgsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CControls_CITextControlPasteEventArgs* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CControls_CITextControlPasteEventArgs* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CControls_CITextControlPasteEventArgs* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CControls_CITextControlPasteEventArgs* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CControls_CITextControlPasteEventArgs* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CControls_CITextControlPasteEventArgs* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Handled)(__x_ABI_CWindows_CUI_CXaml_CControls_CITextControlPasteEventArgs* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* put_Handled)(__x_ABI_CWindows_CUI_CXaml_CControls_CITextControlPasteEventArgs* This,
        boolean value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CITextControlPasteEventArgsVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CITextControlPasteEventArgs
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CITextControlPasteEventArgsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CITextControlPasteEventArgs;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CITextControlPasteEventArgs_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CITimePickedEventArgs_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CControls_CITimePickedEventArgs_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CITimePickedEventArgsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CControls_CITimePickedEventArgs* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CControls_CITimePickedEventArgs* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CControls_CITimePickedEventArgs* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CControls_CITimePickedEventArgs* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CControls_CITimePickedEventArgs* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CControls_CITimePickedEventArgs* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_OldTime)(__x_ABI_CWindows_CUI_CXaml_CControls_CITimePickedEventArgs* This,
        struct __x_ABI_CWindows_CFoundation_CTimeSpan* value);
    HRESULT (STDMETHODCALLTYPE* get_NewTime)(__x_ABI_CWindows_CUI_CXaml_CControls_CITimePickedEventArgs* This,
        struct __x_ABI_CWindows_CFoundation_CTimeSpan* value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CITimePickedEventArgsVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CITimePickedEventArgs
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CITimePickedEventArgsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CITimePickedEventArgs;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CITimePickedEventArgs_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CITimePicker_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CControls_CITimePicker_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CITimePickerVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CControls_CITimePicker* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CControls_CITimePicker* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CControls_CITimePicker* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CControls_CITimePicker* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CControls_CITimePicker* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CControls_CITimePicker* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Header)(__x_ABI_CWindows_CUI_CXaml_CControls_CITimePicker* This,
        IInspectable** value);
    HRESULT (STDMETHODCALLTYPE* put_Header)(__x_ABI_CWindows_CUI_CXaml_CControls_CITimePicker* This,
        IInspectable* value);
    HRESULT (STDMETHODCALLTYPE* get_HeaderTemplate)(__x_ABI_CWindows_CUI_CXaml_CControls_CITimePicker* This,
        __x_ABI_CWindows_CUI_CXaml_CIDataTemplate** value);
    HRESULT (STDMETHODCALLTYPE* put_HeaderTemplate)(__x_ABI_CWindows_CUI_CXaml_CControls_CITimePicker* This,
        __x_ABI_CWindows_CUI_CXaml_CIDataTemplate* value);
    HRESULT (STDMETHODCALLTYPE* get_ClockIdentifier)(__x_ABI_CWindows_CUI_CXaml_CControls_CITimePicker* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* put_ClockIdentifier)(__x_ABI_CWindows_CUI_CXaml_CControls_CITimePicker* This,
        HSTRING value);
    HRESULT (STDMETHODCALLTYPE* get_MinuteIncrement)(__x_ABI_CWindows_CUI_CXaml_CControls_CITimePicker* This,
        INT32* value);
    HRESULT (STDMETHODCALLTYPE* put_MinuteIncrement)(__x_ABI_CWindows_CUI_CXaml_CControls_CITimePicker* This,
        INT32 value);
    HRESULT (STDMETHODCALLTYPE* get_Time)(__x_ABI_CWindows_CUI_CXaml_CControls_CITimePicker* This,
        struct __x_ABI_CWindows_CFoundation_CTimeSpan* value);
    HRESULT (STDMETHODCALLTYPE* put_Time)(__x_ABI_CWindows_CUI_CXaml_CControls_CITimePicker* This,
        struct __x_ABI_CWindows_CFoundation_CTimeSpan value);
    HRESULT (STDMETHODCALLTYPE* add_TimeChanged)(__x_ABI_CWindows_CUI_CXaml_CControls_CITimePicker* This,
        __x_ABI_C__FIEventHandler_1___x_ABI_CWindows__CUI__CXaml__CControls__CTimePickerValueChangedEventArgs* handler,
        EventRegistrationToken* token);
    HRESULT (STDMETHODCALLTYPE* remove_TimeChanged)(__x_ABI_CWindows_CUI_CXaml_CControls_CITimePicker* This,
        EventRegistrationToken token);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CITimePickerVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CITimePicker
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CITimePickerVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CITimePicker;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CITimePicker_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CITimePicker2_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CControls_CITimePicker2_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CITimePicker2Vtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CControls_CITimePicker2* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CControls_CITimePicker2* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CControls_CITimePicker2* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CControls_CITimePicker2* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CControls_CITimePicker2* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CControls_CITimePicker2* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_LightDismissOverlayMode)(__x_ABI_CWindows_CUI_CXaml_CControls_CITimePicker2* This,
        enum __x_ABI_CWindows_CUI_CXaml_CControls_CLightDismissOverlayMode* value);
    HRESULT (STDMETHODCALLTYPE* put_LightDismissOverlayMode)(__x_ABI_CWindows_CUI_CXaml_CControls_CITimePicker2* This,
        enum __x_ABI_CWindows_CUI_CXaml_CControls_CLightDismissOverlayMode value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CITimePicker2Vtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CITimePicker2
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CITimePicker2Vtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CITimePicker2;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CITimePicker2_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CITimePicker3_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CControls_CITimePicker3_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CITimePicker3Vtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CControls_CITimePicker3* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CControls_CITimePicker3* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CControls_CITimePicker3* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CControls_CITimePicker3* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CControls_CITimePicker3* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CControls_CITimePicker3* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_SelectedTime)(__x_ABI_CWindows_CUI_CXaml_CControls_CITimePicker3* This,
        __x_ABI_C__FIReference_1___x_ABI_CWindows__CFoundation__CTimeSpan** value);
    HRESULT (STDMETHODCALLTYPE* put_SelectedTime)(__x_ABI_CWindows_CUI_CXaml_CControls_CITimePicker3* This,
        __x_ABI_C__FIReference_1___x_ABI_CWindows__CFoundation__CTimeSpan* value);
    HRESULT (STDMETHODCALLTYPE* add_SelectedTimeChanged)(__x_ABI_CWindows_CUI_CXaml_CControls_CITimePicker3* This,
        __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CTimePicker___x_ABI_CWindows__CUI__CXaml__CControls__CTimePickerSelectedValueChangedEventArgs* handler,
        EventRegistrationToken* token);
    HRESULT (STDMETHODCALLTYPE* remove_SelectedTimeChanged)(__x_ABI_CWindows_CUI_CXaml_CControls_CITimePicker3* This,
        EventRegistrationToken token);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CITimePicker3Vtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CITimePicker3
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CITimePicker3Vtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CITimePicker3;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CITimePicker3_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CITimePickerFactory_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CControls_CITimePickerFactory_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CITimePickerFactoryVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CControls_CITimePickerFactory* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CControls_CITimePickerFactory* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CControls_CITimePickerFactory* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CControls_CITimePickerFactory* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CControls_CITimePickerFactory* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CControls_CITimePickerFactory* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* CreateInstance)(__x_ABI_CWindows_CUI_CXaml_CControls_CITimePickerFactory* This,
        IInspectable* baseInterface,
        IInspectable** innerInterface,
        __x_ABI_CWindows_CUI_CXaml_CControls_CITimePicker** value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CITimePickerFactoryVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CITimePickerFactory
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CITimePickerFactoryVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CITimePickerFactory;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CITimePickerFactory_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CITimePickerFlyout_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CControls_CITimePickerFlyout_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CITimePickerFlyoutVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CControls_CITimePickerFlyout* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CControls_CITimePickerFlyout* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CControls_CITimePickerFlyout* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CControls_CITimePickerFlyout* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CControls_CITimePickerFlyout* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CControls_CITimePickerFlyout* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_ClockIdentifier)(__x_ABI_CWindows_CUI_CXaml_CControls_CITimePickerFlyout* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* put_ClockIdentifier)(__x_ABI_CWindows_CUI_CXaml_CControls_CITimePickerFlyout* This,
        HSTRING value);
    HRESULT (STDMETHODCALLTYPE* get_Time)(__x_ABI_CWindows_CUI_CXaml_CControls_CITimePickerFlyout* This,
        struct __x_ABI_CWindows_CFoundation_CTimeSpan* value);
    HRESULT (STDMETHODCALLTYPE* put_Time)(__x_ABI_CWindows_CUI_CXaml_CControls_CITimePickerFlyout* This,
        struct __x_ABI_CWindows_CFoundation_CTimeSpan value);
    HRESULT (STDMETHODCALLTYPE* get_MinuteIncrement)(__x_ABI_CWindows_CUI_CXaml_CControls_CITimePickerFlyout* This,
        INT32* value);
    HRESULT (STDMETHODCALLTYPE* put_MinuteIncrement)(__x_ABI_CWindows_CUI_CXaml_CControls_CITimePickerFlyout* This,
        INT32 value);
    HRESULT (STDMETHODCALLTYPE* add_TimePicked)(__x_ABI_CWindows_CUI_CXaml_CControls_CITimePickerFlyout* This,
        __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CTimePickerFlyout___x_ABI_CWindows__CUI__CXaml__CControls__CTimePickedEventArgs* handler,
        EventRegistrationToken* token);
    HRESULT (STDMETHODCALLTYPE* remove_TimePicked)(__x_ABI_CWindows_CUI_CXaml_CControls_CITimePickerFlyout* This,
        EventRegistrationToken token);
    HRESULT (STDMETHODCALLTYPE* ShowAtAsync)(__x_ABI_CWindows_CUI_CXaml_CControls_CITimePickerFlyout* This,
        __x_ABI_CWindows_CUI_CXaml_CIFrameworkElement* target,
        __x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIReference_1___x_ABI_CWindows__CFoundation__CTimeSpan** operation);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CITimePickerFlyoutVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CITimePickerFlyout
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CITimePickerFlyoutVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CITimePickerFlyout;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CITimePickerFlyout_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CITimePickerFlyoutPresenter_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CControls_CITimePickerFlyoutPresenter_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CITimePickerFlyoutPresenterVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CControls_CITimePickerFlyoutPresenter* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CControls_CITimePickerFlyoutPresenter* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CControls_CITimePickerFlyoutPresenter* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CControls_CITimePickerFlyoutPresenter* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CControls_CITimePickerFlyoutPresenter* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CControls_CITimePickerFlyoutPresenter* This,
            TrustLevel* trustLevel);
    
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CITimePickerFlyoutPresenterVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CITimePickerFlyoutPresenter
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CITimePickerFlyoutPresenterVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CITimePickerFlyoutPresenter;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CITimePickerFlyoutPresenter_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CITimePickerFlyoutPresenter2_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CControls_CITimePickerFlyoutPresenter2_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CITimePickerFlyoutPresenter2Vtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CControls_CITimePickerFlyoutPresenter2* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CControls_CITimePickerFlyoutPresenter2* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CControls_CITimePickerFlyoutPresenter2* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CControls_CITimePickerFlyoutPresenter2* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CControls_CITimePickerFlyoutPresenter2* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CControls_CITimePickerFlyoutPresenter2* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_IsDefaultShadowEnabled)(__x_ABI_CWindows_CUI_CXaml_CControls_CITimePickerFlyoutPresenter2* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* put_IsDefaultShadowEnabled)(__x_ABI_CWindows_CUI_CXaml_CControls_CITimePickerFlyoutPresenter2* This,
        boolean value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CITimePickerFlyoutPresenter2Vtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CITimePickerFlyoutPresenter2
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CITimePickerFlyoutPresenter2Vtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CITimePickerFlyoutPresenter2;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CITimePickerFlyoutPresenter2_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CITimePickerFlyoutPresenterStatics2_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CControls_CITimePickerFlyoutPresenterStatics2_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CITimePickerFlyoutPresenterStatics2Vtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CControls_CITimePickerFlyoutPresenterStatics2* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CControls_CITimePickerFlyoutPresenterStatics2* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CControls_CITimePickerFlyoutPresenterStatics2* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CControls_CITimePickerFlyoutPresenterStatics2* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CControls_CITimePickerFlyoutPresenterStatics2* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CControls_CITimePickerFlyoutPresenterStatics2* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_IsDefaultShadowEnabledProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CITimePickerFlyoutPresenterStatics2* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CITimePickerFlyoutPresenterStatics2Vtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CITimePickerFlyoutPresenterStatics2
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CITimePickerFlyoutPresenterStatics2Vtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CITimePickerFlyoutPresenterStatics2;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CITimePickerFlyoutPresenterStatics2_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CITimePickerFlyoutStatics_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CControls_CITimePickerFlyoutStatics_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CITimePickerFlyoutStaticsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CControls_CITimePickerFlyoutStatics* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CControls_CITimePickerFlyoutStatics* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CControls_CITimePickerFlyoutStatics* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CControls_CITimePickerFlyoutStatics* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CControls_CITimePickerFlyoutStatics* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CControls_CITimePickerFlyoutStatics* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_ClockIdentifierProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CITimePickerFlyoutStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_TimeProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CITimePickerFlyoutStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_MinuteIncrementProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CITimePickerFlyoutStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CITimePickerFlyoutStaticsVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CITimePickerFlyoutStatics
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CITimePickerFlyoutStaticsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CITimePickerFlyoutStatics;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CITimePickerFlyoutStatics_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CITimePickerSelectedValueChangedEventArgs_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CControls_CITimePickerSelectedValueChangedEventArgs_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CITimePickerSelectedValueChangedEventArgsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CControls_CITimePickerSelectedValueChangedEventArgs* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CControls_CITimePickerSelectedValueChangedEventArgs* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CControls_CITimePickerSelectedValueChangedEventArgs* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CControls_CITimePickerSelectedValueChangedEventArgs* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CControls_CITimePickerSelectedValueChangedEventArgs* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CControls_CITimePickerSelectedValueChangedEventArgs* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_OldTime)(__x_ABI_CWindows_CUI_CXaml_CControls_CITimePickerSelectedValueChangedEventArgs* This,
        __x_ABI_C__FIReference_1___x_ABI_CWindows__CFoundation__CTimeSpan** value);
    HRESULT (STDMETHODCALLTYPE* get_NewTime)(__x_ABI_CWindows_CUI_CXaml_CControls_CITimePickerSelectedValueChangedEventArgs* This,
        __x_ABI_C__FIReference_1___x_ABI_CWindows__CFoundation__CTimeSpan** value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CITimePickerSelectedValueChangedEventArgsVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CITimePickerSelectedValueChangedEventArgs
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CITimePickerSelectedValueChangedEventArgsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CITimePickerSelectedValueChangedEventArgs;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CITimePickerSelectedValueChangedEventArgs_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CITimePickerStatics_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CControls_CITimePickerStatics_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CITimePickerStaticsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CControls_CITimePickerStatics* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CControls_CITimePickerStatics* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CControls_CITimePickerStatics* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CControls_CITimePickerStatics* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CControls_CITimePickerStatics* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CControls_CITimePickerStatics* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_HeaderProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CITimePickerStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_HeaderTemplateProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CITimePickerStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_ClockIdentifierProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CITimePickerStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_MinuteIncrementProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CITimePickerStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_TimeProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CITimePickerStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CITimePickerStaticsVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CITimePickerStatics
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CITimePickerStaticsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CITimePickerStatics;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CITimePickerStatics_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CITimePickerStatics2_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CControls_CITimePickerStatics2_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CITimePickerStatics2Vtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CControls_CITimePickerStatics2* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CControls_CITimePickerStatics2* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CControls_CITimePickerStatics2* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CControls_CITimePickerStatics2* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CControls_CITimePickerStatics2* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CControls_CITimePickerStatics2* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_LightDismissOverlayModeProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CITimePickerStatics2* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CITimePickerStatics2Vtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CITimePickerStatics2
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CITimePickerStatics2Vtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CITimePickerStatics2;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CITimePickerStatics2_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CITimePickerStatics3_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CControls_CITimePickerStatics3_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CITimePickerStatics3Vtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CControls_CITimePickerStatics3* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CControls_CITimePickerStatics3* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CControls_CITimePickerStatics3* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CControls_CITimePickerStatics3* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CControls_CITimePickerStatics3* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CControls_CITimePickerStatics3* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_SelectedTimeProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CITimePickerStatics3* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CITimePickerStatics3Vtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CITimePickerStatics3
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CITimePickerStatics3Vtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CITimePickerStatics3;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CITimePickerStatics3_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CITimePickerValueChangedEventArgs_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CControls_CITimePickerValueChangedEventArgs_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CITimePickerValueChangedEventArgsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CControls_CITimePickerValueChangedEventArgs* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CControls_CITimePickerValueChangedEventArgs* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CControls_CITimePickerValueChangedEventArgs* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CControls_CITimePickerValueChangedEventArgs* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CControls_CITimePickerValueChangedEventArgs* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CControls_CITimePickerValueChangedEventArgs* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_OldTime)(__x_ABI_CWindows_CUI_CXaml_CControls_CITimePickerValueChangedEventArgs* This,
        struct __x_ABI_CWindows_CFoundation_CTimeSpan* value);
    HRESULT (STDMETHODCALLTYPE* get_NewTime)(__x_ABI_CWindows_CUI_CXaml_CControls_CITimePickerValueChangedEventArgs* This,
        struct __x_ABI_CWindows_CFoundation_CTimeSpan* value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CITimePickerValueChangedEventArgsVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CITimePickerValueChangedEventArgs
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CITimePickerValueChangedEventArgsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CITimePickerValueChangedEventArgs;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CITimePickerValueChangedEventArgs_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIToggleMenuFlyoutItem_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CControls_CIToggleMenuFlyoutItem_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIToggleMenuFlyoutItemVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CControls_CIToggleMenuFlyoutItem* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CControls_CIToggleMenuFlyoutItem* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CControls_CIToggleMenuFlyoutItem* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CControls_CIToggleMenuFlyoutItem* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CControls_CIToggleMenuFlyoutItem* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CControls_CIToggleMenuFlyoutItem* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_IsChecked)(__x_ABI_CWindows_CUI_CXaml_CControls_CIToggleMenuFlyoutItem* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* put_IsChecked)(__x_ABI_CWindows_CUI_CXaml_CControls_CIToggleMenuFlyoutItem* This,
        boolean value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CIToggleMenuFlyoutItemVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CIToggleMenuFlyoutItem
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIToggleMenuFlyoutItemVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIToggleMenuFlyoutItem;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIToggleMenuFlyoutItem_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIToggleMenuFlyoutItemFactory_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CControls_CIToggleMenuFlyoutItemFactory_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIToggleMenuFlyoutItemFactoryVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CControls_CIToggleMenuFlyoutItemFactory* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CControls_CIToggleMenuFlyoutItemFactory* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CControls_CIToggleMenuFlyoutItemFactory* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CControls_CIToggleMenuFlyoutItemFactory* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CControls_CIToggleMenuFlyoutItemFactory* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CControls_CIToggleMenuFlyoutItemFactory* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* CreateInstance)(__x_ABI_CWindows_CUI_CXaml_CControls_CIToggleMenuFlyoutItemFactory* This,
        IInspectable* baseInterface,
        IInspectable** innerInterface,
        __x_ABI_CWindows_CUI_CXaml_CControls_CIToggleMenuFlyoutItem** value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CIToggleMenuFlyoutItemFactoryVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CIToggleMenuFlyoutItemFactory
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIToggleMenuFlyoutItemFactoryVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIToggleMenuFlyoutItemFactory;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIToggleMenuFlyoutItemFactory_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIToggleMenuFlyoutItemStatics_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CControls_CIToggleMenuFlyoutItemStatics_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIToggleMenuFlyoutItemStaticsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CControls_CIToggleMenuFlyoutItemStatics* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CControls_CIToggleMenuFlyoutItemStatics* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CControls_CIToggleMenuFlyoutItemStatics* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CControls_CIToggleMenuFlyoutItemStatics* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CControls_CIToggleMenuFlyoutItemStatics* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CControls_CIToggleMenuFlyoutItemStatics* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_IsCheckedProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CIToggleMenuFlyoutItemStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CIToggleMenuFlyoutItemStaticsVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CIToggleMenuFlyoutItemStatics
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIToggleMenuFlyoutItemStaticsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIToggleMenuFlyoutItemStatics;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIToggleMenuFlyoutItemStatics_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIToggleSplitButton_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CControls_CIToggleSplitButton_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIToggleSplitButtonVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CControls_CIToggleSplitButton* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CControls_CIToggleSplitButton* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CControls_CIToggleSplitButton* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CControls_CIToggleSplitButton* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CControls_CIToggleSplitButton* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CControls_CIToggleSplitButton* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_IsChecked)(__x_ABI_CWindows_CUI_CXaml_CControls_CIToggleSplitButton* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* put_IsChecked)(__x_ABI_CWindows_CUI_CXaml_CControls_CIToggleSplitButton* This,
        boolean value);
    HRESULT (STDMETHODCALLTYPE* add_IsCheckedChanged)(__x_ABI_CWindows_CUI_CXaml_CControls_CIToggleSplitButton* This,
        __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CToggleSplitButton___x_ABI_CWindows__CUI__CXaml__CControls__CToggleSplitButtonIsCheckedChangedEventArgs* handler,
        EventRegistrationToken* token);
    HRESULT (STDMETHODCALLTYPE* remove_IsCheckedChanged)(__x_ABI_CWindows_CUI_CXaml_CControls_CIToggleSplitButton* This,
        EventRegistrationToken token);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CIToggleSplitButtonVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CIToggleSplitButton
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIToggleSplitButtonVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIToggleSplitButton;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIToggleSplitButton_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIToggleSplitButtonAutomationPeer_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CControls_CIToggleSplitButtonAutomationPeer_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIToggleSplitButtonAutomationPeerVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CControls_CIToggleSplitButtonAutomationPeer* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CControls_CIToggleSplitButtonAutomationPeer* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CControls_CIToggleSplitButtonAutomationPeer* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CControls_CIToggleSplitButtonAutomationPeer* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CControls_CIToggleSplitButtonAutomationPeer* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CControls_CIToggleSplitButtonAutomationPeer* This,
            TrustLevel* trustLevel);
    
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CIToggleSplitButtonAutomationPeerVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CIToggleSplitButtonAutomationPeer
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIToggleSplitButtonAutomationPeerVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIToggleSplitButtonAutomationPeer;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIToggleSplitButtonAutomationPeer_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIToggleSplitButtonAutomationPeerFactory_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CControls_CIToggleSplitButtonAutomationPeerFactory_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIToggleSplitButtonAutomationPeerFactoryVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CControls_CIToggleSplitButtonAutomationPeerFactory* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CControls_CIToggleSplitButtonAutomationPeerFactory* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CControls_CIToggleSplitButtonAutomationPeerFactory* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CControls_CIToggleSplitButtonAutomationPeerFactory* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CControls_CIToggleSplitButtonAutomationPeerFactory* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CControls_CIToggleSplitButtonAutomationPeerFactory* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* CreateInstance)(__x_ABI_CWindows_CUI_CXaml_CControls_CIToggleSplitButtonAutomationPeerFactory* This,
        __x_ABI_CWindows_CUI_CXaml_CControls_CIToggleSplitButton* owner,
        IInspectable* baseInterface,
        IInspectable** innerInterface,
        __x_ABI_CWindows_CUI_CXaml_CControls_CIToggleSplitButtonAutomationPeer** value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CIToggleSplitButtonAutomationPeerFactoryVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CIToggleSplitButtonAutomationPeerFactory
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIToggleSplitButtonAutomationPeerFactoryVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIToggleSplitButtonAutomationPeerFactory;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIToggleSplitButtonAutomationPeerFactory_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIToggleSplitButtonFactory_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CControls_CIToggleSplitButtonFactory_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIToggleSplitButtonFactoryVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CControls_CIToggleSplitButtonFactory* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CControls_CIToggleSplitButtonFactory* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CControls_CIToggleSplitButtonFactory* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CControls_CIToggleSplitButtonFactory* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CControls_CIToggleSplitButtonFactory* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CControls_CIToggleSplitButtonFactory* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* CreateInstance)(__x_ABI_CWindows_CUI_CXaml_CControls_CIToggleSplitButtonFactory* This,
        IInspectable* baseInterface,
        IInspectable** innerInterface,
        __x_ABI_CWindows_CUI_CXaml_CControls_CIToggleSplitButton** value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CIToggleSplitButtonFactoryVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CIToggleSplitButtonFactory
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIToggleSplitButtonFactoryVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIToggleSplitButtonFactory;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIToggleSplitButtonFactory_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIToggleSplitButtonIsCheckedChangedEventArgs_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CControls_CIToggleSplitButtonIsCheckedChangedEventArgs_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIToggleSplitButtonIsCheckedChangedEventArgsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CControls_CIToggleSplitButtonIsCheckedChangedEventArgs* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CControls_CIToggleSplitButtonIsCheckedChangedEventArgs* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CControls_CIToggleSplitButtonIsCheckedChangedEventArgs* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CControls_CIToggleSplitButtonIsCheckedChangedEventArgs* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CControls_CIToggleSplitButtonIsCheckedChangedEventArgs* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CControls_CIToggleSplitButtonIsCheckedChangedEventArgs* This,
            TrustLevel* trustLevel);
    
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CIToggleSplitButtonIsCheckedChangedEventArgsVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CIToggleSplitButtonIsCheckedChangedEventArgs
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIToggleSplitButtonIsCheckedChangedEventArgsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIToggleSplitButtonIsCheckedChangedEventArgs;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIToggleSplitButtonIsCheckedChangedEventArgs_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIToggleSwitch_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CControls_CIToggleSwitch_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIToggleSwitchVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CControls_CIToggleSwitch* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CControls_CIToggleSwitch* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CControls_CIToggleSwitch* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CControls_CIToggleSwitch* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CControls_CIToggleSwitch* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CControls_CIToggleSwitch* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_IsOn)(__x_ABI_CWindows_CUI_CXaml_CControls_CIToggleSwitch* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* put_IsOn)(__x_ABI_CWindows_CUI_CXaml_CControls_CIToggleSwitch* This,
        boolean value);
    HRESULT (STDMETHODCALLTYPE* get_Header)(__x_ABI_CWindows_CUI_CXaml_CControls_CIToggleSwitch* This,
        IInspectable** value);
    HRESULT (STDMETHODCALLTYPE* put_Header)(__x_ABI_CWindows_CUI_CXaml_CControls_CIToggleSwitch* This,
        IInspectable* value);
    HRESULT (STDMETHODCALLTYPE* get_HeaderTemplate)(__x_ABI_CWindows_CUI_CXaml_CControls_CIToggleSwitch* This,
        __x_ABI_CWindows_CUI_CXaml_CIDataTemplate** value);
    HRESULT (STDMETHODCALLTYPE* put_HeaderTemplate)(__x_ABI_CWindows_CUI_CXaml_CControls_CIToggleSwitch* This,
        __x_ABI_CWindows_CUI_CXaml_CIDataTemplate* value);
    HRESULT (STDMETHODCALLTYPE* get_OnContent)(__x_ABI_CWindows_CUI_CXaml_CControls_CIToggleSwitch* This,
        IInspectable** value);
    HRESULT (STDMETHODCALLTYPE* put_OnContent)(__x_ABI_CWindows_CUI_CXaml_CControls_CIToggleSwitch* This,
        IInspectable* value);
    HRESULT (STDMETHODCALLTYPE* get_OnContentTemplate)(__x_ABI_CWindows_CUI_CXaml_CControls_CIToggleSwitch* This,
        __x_ABI_CWindows_CUI_CXaml_CIDataTemplate** value);
    HRESULT (STDMETHODCALLTYPE* put_OnContentTemplate)(__x_ABI_CWindows_CUI_CXaml_CControls_CIToggleSwitch* This,
        __x_ABI_CWindows_CUI_CXaml_CIDataTemplate* value);
    HRESULT (STDMETHODCALLTYPE* get_OffContent)(__x_ABI_CWindows_CUI_CXaml_CControls_CIToggleSwitch* This,
        IInspectable** value);
    HRESULT (STDMETHODCALLTYPE* put_OffContent)(__x_ABI_CWindows_CUI_CXaml_CControls_CIToggleSwitch* This,
        IInspectable* value);
    HRESULT (STDMETHODCALLTYPE* get_OffContentTemplate)(__x_ABI_CWindows_CUI_CXaml_CControls_CIToggleSwitch* This,
        __x_ABI_CWindows_CUI_CXaml_CIDataTemplate** value);
    HRESULT (STDMETHODCALLTYPE* put_OffContentTemplate)(__x_ABI_CWindows_CUI_CXaml_CControls_CIToggleSwitch* This,
        __x_ABI_CWindows_CUI_CXaml_CIDataTemplate* value);
    HRESULT (STDMETHODCALLTYPE* get_TemplateSettings)(__x_ABI_CWindows_CUI_CXaml_CControls_CIToggleSwitch* This,
        __x_ABI_CWindows_CUI_CXaml_CControls_CPrimitives_CIToggleSwitchTemplateSettings** value);
    HRESULT (STDMETHODCALLTYPE* add_Toggled)(__x_ABI_CWindows_CUI_CXaml_CControls_CIToggleSwitch* This,
        __x_ABI_CWindows_CUI_CXaml_CIRoutedEventHandler* handler,
        EventRegistrationToken* token);
    HRESULT (STDMETHODCALLTYPE* remove_Toggled)(__x_ABI_CWindows_CUI_CXaml_CControls_CIToggleSwitch* This,
        EventRegistrationToken token);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CIToggleSwitchVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CIToggleSwitch
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIToggleSwitchVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIToggleSwitch;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIToggleSwitch_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIToggleSwitchOverrides_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CControls_CIToggleSwitchOverrides_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIToggleSwitchOverridesVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CControls_CIToggleSwitchOverrides* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CControls_CIToggleSwitchOverrides* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CControls_CIToggleSwitchOverrides* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CControls_CIToggleSwitchOverrides* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CControls_CIToggleSwitchOverrides* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CControls_CIToggleSwitchOverrides* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* OnToggled)(__x_ABI_CWindows_CUI_CXaml_CControls_CIToggleSwitchOverrides* This);
    HRESULT (STDMETHODCALLTYPE* OnOnContentChanged)(__x_ABI_CWindows_CUI_CXaml_CControls_CIToggleSwitchOverrides* This,
        IInspectable* oldContent,
        IInspectable* newContent);
    HRESULT (STDMETHODCALLTYPE* OnOffContentChanged)(__x_ABI_CWindows_CUI_CXaml_CControls_CIToggleSwitchOverrides* This,
        IInspectable* oldContent,
        IInspectable* newContent);
    HRESULT (STDMETHODCALLTYPE* OnHeaderChanged)(__x_ABI_CWindows_CUI_CXaml_CControls_CIToggleSwitchOverrides* This,
        IInspectable* oldContent,
        IInspectable* newContent);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CIToggleSwitchOverridesVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CIToggleSwitchOverrides
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIToggleSwitchOverridesVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIToggleSwitchOverrides;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIToggleSwitchOverrides_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIToggleSwitchStatics_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CControls_CIToggleSwitchStatics_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIToggleSwitchStaticsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CControls_CIToggleSwitchStatics* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CControls_CIToggleSwitchStatics* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CControls_CIToggleSwitchStatics* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CControls_CIToggleSwitchStatics* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CControls_CIToggleSwitchStatics* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CControls_CIToggleSwitchStatics* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_IsOnProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CIToggleSwitchStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_HeaderProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CIToggleSwitchStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_HeaderTemplateProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CIToggleSwitchStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_OnContentProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CIToggleSwitchStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_OnContentTemplateProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CIToggleSwitchStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_OffContentProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CIToggleSwitchStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_OffContentTemplateProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CIToggleSwitchStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CIToggleSwitchStaticsVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CIToggleSwitchStatics
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIToggleSwitchStaticsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIToggleSwitchStatics;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIToggleSwitchStatics_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIToolTip_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CControls_CIToolTip_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIToolTipVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CControls_CIToolTip* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CControls_CIToolTip* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CControls_CIToolTip* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CControls_CIToolTip* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CControls_CIToolTip* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CControls_CIToolTip* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_HorizontalOffset)(__x_ABI_CWindows_CUI_CXaml_CControls_CIToolTip* This,
        DOUBLE* value);
    HRESULT (STDMETHODCALLTYPE* put_HorizontalOffset)(__x_ABI_CWindows_CUI_CXaml_CControls_CIToolTip* This,
        DOUBLE value);
    HRESULT (STDMETHODCALLTYPE* get_IsOpen)(__x_ABI_CWindows_CUI_CXaml_CControls_CIToolTip* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* put_IsOpen)(__x_ABI_CWindows_CUI_CXaml_CControls_CIToolTip* This,
        boolean value);
    HRESULT (STDMETHODCALLTYPE* get_Placement)(__x_ABI_CWindows_CUI_CXaml_CControls_CIToolTip* This,
        enum __x_ABI_CWindows_CUI_CXaml_CControls_CPrimitives_CPlacementMode* value);
    HRESULT (STDMETHODCALLTYPE* put_Placement)(__x_ABI_CWindows_CUI_CXaml_CControls_CIToolTip* This,
        enum __x_ABI_CWindows_CUI_CXaml_CControls_CPrimitives_CPlacementMode value);
    HRESULT (STDMETHODCALLTYPE* get_PlacementTarget)(__x_ABI_CWindows_CUI_CXaml_CControls_CIToolTip* This,
        __x_ABI_CWindows_CUI_CXaml_CIUIElement** value);
    HRESULT (STDMETHODCALLTYPE* put_PlacementTarget)(__x_ABI_CWindows_CUI_CXaml_CControls_CIToolTip* This,
        __x_ABI_CWindows_CUI_CXaml_CIUIElement* value);
    HRESULT (STDMETHODCALLTYPE* get_VerticalOffset)(__x_ABI_CWindows_CUI_CXaml_CControls_CIToolTip* This,
        DOUBLE* value);
    HRESULT (STDMETHODCALLTYPE* put_VerticalOffset)(__x_ABI_CWindows_CUI_CXaml_CControls_CIToolTip* This,
        DOUBLE value);
    HRESULT (STDMETHODCALLTYPE* get_TemplateSettings)(__x_ABI_CWindows_CUI_CXaml_CControls_CIToolTip* This,
        __x_ABI_CWindows_CUI_CXaml_CControls_CPrimitives_CIToolTipTemplateSettings** value);
    HRESULT (STDMETHODCALLTYPE* add_Closed)(__x_ABI_CWindows_CUI_CXaml_CControls_CIToolTip* This,
        __x_ABI_CWindows_CUI_CXaml_CIRoutedEventHandler* handler,
        EventRegistrationToken* token);
    HRESULT (STDMETHODCALLTYPE* remove_Closed)(__x_ABI_CWindows_CUI_CXaml_CControls_CIToolTip* This,
        EventRegistrationToken token);
    HRESULT (STDMETHODCALLTYPE* add_Opened)(__x_ABI_CWindows_CUI_CXaml_CControls_CIToolTip* This,
        __x_ABI_CWindows_CUI_CXaml_CIRoutedEventHandler* handler,
        EventRegistrationToken* token);
    HRESULT (STDMETHODCALLTYPE* remove_Opened)(__x_ABI_CWindows_CUI_CXaml_CControls_CIToolTip* This,
        EventRegistrationToken token);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CIToolTipVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CIToolTip
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIToolTipVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIToolTip;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIToolTip_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIToolTip2_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CControls_CIToolTip2_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIToolTip2Vtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CControls_CIToolTip2* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CControls_CIToolTip2* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CControls_CIToolTip2* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CControls_CIToolTip2* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CControls_CIToolTip2* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CControls_CIToolTip2* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_PlacementRect)(__x_ABI_CWindows_CUI_CXaml_CControls_CIToolTip2* This,
        __x_ABI_C__FIReference_1___x_ABI_CWindows__CFoundation__CRect** value);
    HRESULT (STDMETHODCALLTYPE* put_PlacementRect)(__x_ABI_CWindows_CUI_CXaml_CControls_CIToolTip2* This,
        __x_ABI_C__FIReference_1___x_ABI_CWindows__CFoundation__CRect* value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CIToolTip2Vtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CIToolTip2
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIToolTip2Vtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIToolTip2;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIToolTip2_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIToolTipFactory_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CControls_CIToolTipFactory_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIToolTipFactoryVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CControls_CIToolTipFactory* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CControls_CIToolTipFactory* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CControls_CIToolTipFactory* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CControls_CIToolTipFactory* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CControls_CIToolTipFactory* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CControls_CIToolTipFactory* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* CreateInstance)(__x_ABI_CWindows_CUI_CXaml_CControls_CIToolTipFactory* This,
        IInspectable* baseInterface,
        IInspectable** innerInterface,
        __x_ABI_CWindows_CUI_CXaml_CControls_CIToolTip** value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CIToolTipFactoryVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CIToolTipFactory
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIToolTipFactoryVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIToolTipFactory;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIToolTipFactory_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIToolTipService_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CControls_CIToolTipService_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIToolTipServiceVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CControls_CIToolTipService* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CControls_CIToolTipService* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CControls_CIToolTipService* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CControls_CIToolTipService* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CControls_CIToolTipService* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CControls_CIToolTipService* This,
            TrustLevel* trustLevel);
    
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CIToolTipServiceVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CIToolTipService
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIToolTipServiceVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIToolTipService;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIToolTipService_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIToolTipServiceStatics_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CControls_CIToolTipServiceStatics_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIToolTipServiceStaticsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CControls_CIToolTipServiceStatics* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CControls_CIToolTipServiceStatics* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CControls_CIToolTipServiceStatics* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CControls_CIToolTipServiceStatics* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CControls_CIToolTipServiceStatics* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CControls_CIToolTipServiceStatics* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_PlacementProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CIToolTipServiceStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* GetPlacement)(__x_ABI_CWindows_CUI_CXaml_CControls_CIToolTipServiceStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyObject* element,
        enum __x_ABI_CWindows_CUI_CXaml_CControls_CPrimitives_CPlacementMode* result);
    HRESULT (STDMETHODCALLTYPE* SetPlacement)(__x_ABI_CWindows_CUI_CXaml_CControls_CIToolTipServiceStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyObject* element,
        enum __x_ABI_CWindows_CUI_CXaml_CControls_CPrimitives_CPlacementMode value);
    HRESULT (STDMETHODCALLTYPE* get_PlacementTargetProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CIToolTipServiceStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* GetPlacementTarget)(__x_ABI_CWindows_CUI_CXaml_CControls_CIToolTipServiceStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyObject* element,
        __x_ABI_CWindows_CUI_CXaml_CIUIElement** result);
    HRESULT (STDMETHODCALLTYPE* SetPlacementTarget)(__x_ABI_CWindows_CUI_CXaml_CControls_CIToolTipServiceStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyObject* element,
        __x_ABI_CWindows_CUI_CXaml_CIUIElement* value);
    HRESULT (STDMETHODCALLTYPE* get_ToolTipProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CIToolTipServiceStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* GetToolTip)(__x_ABI_CWindows_CUI_CXaml_CControls_CIToolTipServiceStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyObject* element,
        IInspectable** result);
    HRESULT (STDMETHODCALLTYPE* SetToolTip)(__x_ABI_CWindows_CUI_CXaml_CControls_CIToolTipServiceStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyObject* element,
        IInspectable* value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CIToolTipServiceStaticsVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CIToolTipServiceStatics
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIToolTipServiceStaticsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIToolTipServiceStatics;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIToolTipServiceStatics_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIToolTipStatics_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CControls_CIToolTipStatics_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIToolTipStaticsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CControls_CIToolTipStatics* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CControls_CIToolTipStatics* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CControls_CIToolTipStatics* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CControls_CIToolTipStatics* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CControls_CIToolTipStatics* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CControls_CIToolTipStatics* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_HorizontalOffsetProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CIToolTipStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_IsOpenProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CIToolTipStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_PlacementProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CIToolTipStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_PlacementTargetProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CIToolTipStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_VerticalOffsetProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CIToolTipStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CIToolTipStaticsVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CIToolTipStatics
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIToolTipStaticsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIToolTipStatics;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIToolTipStatics_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIToolTipStatics2_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CControls_CIToolTipStatics2_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIToolTipStatics2Vtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CControls_CIToolTipStatics2* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CControls_CIToolTipStatics2* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CControls_CIToolTipStatics2* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CControls_CIToolTipStatics2* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CControls_CIToolTipStatics2* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CControls_CIToolTipStatics2* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_PlacementRectProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CIToolTipStatics2* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CIToolTipStatics2Vtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CIToolTipStatics2
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIToolTipStatics2Vtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIToolTipStatics2;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIToolTipStatics2_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CITreeView_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CControls_CITreeView_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CControls_CITreeView* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CControls_CITreeView* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CControls_CITreeView* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CControls_CITreeView* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CControls_CITreeView* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CControls_CITreeView* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_RootNodes)(__x_ABI_CWindows_CUI_CXaml_CControls_CITreeView* This,
        __x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CXaml__CControls__CTreeViewNode** value);
    HRESULT (STDMETHODCALLTYPE* get_SelectionMode)(__x_ABI_CWindows_CUI_CXaml_CControls_CITreeView* This,
        enum __x_ABI_CWindows_CUI_CXaml_CControls_CTreeViewSelectionMode* value);
    HRESULT (STDMETHODCALLTYPE* put_SelectionMode)(__x_ABI_CWindows_CUI_CXaml_CControls_CITreeView* This,
        enum __x_ABI_CWindows_CUI_CXaml_CControls_CTreeViewSelectionMode value);
    HRESULT (STDMETHODCALLTYPE* get_SelectedNodes)(__x_ABI_CWindows_CUI_CXaml_CControls_CITreeView* This,
        __x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CXaml__CControls__CTreeViewNode** value);
    HRESULT (STDMETHODCALLTYPE* Expand)(__x_ABI_CWindows_CUI_CXaml_CControls_CITreeView* This,
        __x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewNode* value);
    HRESULT (STDMETHODCALLTYPE* Collapse)(__x_ABI_CWindows_CUI_CXaml_CControls_CITreeView* This,
        __x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewNode* value);
    HRESULT (STDMETHODCALLTYPE* SelectAll)(__x_ABI_CWindows_CUI_CXaml_CControls_CITreeView* This);
    HRESULT (STDMETHODCALLTYPE* add_ItemInvoked)(__x_ABI_CWindows_CUI_CXaml_CControls_CITreeView* This,
        __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CTreeView___x_ABI_CWindows__CUI__CXaml__CControls__CTreeViewItemInvokedEventArgs* handler,
        EventRegistrationToken* token);
    HRESULT (STDMETHODCALLTYPE* remove_ItemInvoked)(__x_ABI_CWindows_CUI_CXaml_CControls_CITreeView* This,
        EventRegistrationToken token);
    HRESULT (STDMETHODCALLTYPE* add_Expanding)(__x_ABI_CWindows_CUI_CXaml_CControls_CITreeView* This,
        __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CTreeView___x_ABI_CWindows__CUI__CXaml__CControls__CTreeViewExpandingEventArgs* handler,
        EventRegistrationToken* token);
    HRESULT (STDMETHODCALLTYPE* remove_Expanding)(__x_ABI_CWindows_CUI_CXaml_CControls_CITreeView* This,
        EventRegistrationToken token);
    HRESULT (STDMETHODCALLTYPE* add_Collapsed)(__x_ABI_CWindows_CUI_CXaml_CControls_CITreeView* This,
        __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CTreeView___x_ABI_CWindows__CUI__CXaml__CControls__CTreeViewCollapsedEventArgs* handler,
        EventRegistrationToken* token);
    HRESULT (STDMETHODCALLTYPE* remove_Collapsed)(__x_ABI_CWindows_CUI_CXaml_CControls_CITreeView* This,
        EventRegistrationToken token);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CITreeView
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CITreeView;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CITreeView_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CITreeView2_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CControls_CITreeView2_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CITreeView2Vtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CControls_CITreeView2* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CControls_CITreeView2* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CControls_CITreeView2* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CControls_CITreeView2* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CControls_CITreeView2* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CControls_CITreeView2* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* NodeFromContainer)(__x_ABI_CWindows_CUI_CXaml_CControls_CITreeView2* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyObject* container,
        __x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewNode** result);
    HRESULT (STDMETHODCALLTYPE* ContainerFromNode)(__x_ABI_CWindows_CUI_CXaml_CControls_CITreeView2* This,
        __x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewNode* node,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyObject** result);
    HRESULT (STDMETHODCALLTYPE* ItemFromContainer)(__x_ABI_CWindows_CUI_CXaml_CControls_CITreeView2* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyObject* container,
        IInspectable** result);
    HRESULT (STDMETHODCALLTYPE* ContainerFromItem)(__x_ABI_CWindows_CUI_CXaml_CControls_CITreeView2* This,
        IInspectable* item,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyObject** result);
    HRESULT (STDMETHODCALLTYPE* get_CanDragItems)(__x_ABI_CWindows_CUI_CXaml_CControls_CITreeView2* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* put_CanDragItems)(__x_ABI_CWindows_CUI_CXaml_CControls_CITreeView2* This,
        boolean value);
    HRESULT (STDMETHODCALLTYPE* get_CanReorderItems)(__x_ABI_CWindows_CUI_CXaml_CControls_CITreeView2* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* put_CanReorderItems)(__x_ABI_CWindows_CUI_CXaml_CControls_CITreeView2* This,
        boolean value);
    HRESULT (STDMETHODCALLTYPE* get_ItemTemplate)(__x_ABI_CWindows_CUI_CXaml_CControls_CITreeView2* This,
        __x_ABI_CWindows_CUI_CXaml_CIDataTemplate** value);
    HRESULT (STDMETHODCALLTYPE* put_ItemTemplate)(__x_ABI_CWindows_CUI_CXaml_CControls_CITreeView2* This,
        __x_ABI_CWindows_CUI_CXaml_CIDataTemplate* value);
    HRESULT (STDMETHODCALLTYPE* get_ItemTemplateSelector)(__x_ABI_CWindows_CUI_CXaml_CControls_CITreeView2* This,
        __x_ABI_CWindows_CUI_CXaml_CControls_CIDataTemplateSelector** value);
    HRESULT (STDMETHODCALLTYPE* put_ItemTemplateSelector)(__x_ABI_CWindows_CUI_CXaml_CControls_CITreeView2* This,
        __x_ABI_CWindows_CUI_CXaml_CControls_CIDataTemplateSelector* value);
    HRESULT (STDMETHODCALLTYPE* get_ItemContainerStyle)(__x_ABI_CWindows_CUI_CXaml_CControls_CITreeView2* This,
        __x_ABI_CWindows_CUI_CXaml_CIStyle** value);
    HRESULT (STDMETHODCALLTYPE* put_ItemContainerStyle)(__x_ABI_CWindows_CUI_CXaml_CControls_CITreeView2* This,
        __x_ABI_CWindows_CUI_CXaml_CIStyle* value);
    HRESULT (STDMETHODCALLTYPE* get_ItemContainerStyleSelector)(__x_ABI_CWindows_CUI_CXaml_CControls_CITreeView2* This,
        __x_ABI_CWindows_CUI_CXaml_CControls_CIStyleSelector** value);
    HRESULT (STDMETHODCALLTYPE* put_ItemContainerStyleSelector)(__x_ABI_CWindows_CUI_CXaml_CControls_CITreeView2* This,
        __x_ABI_CWindows_CUI_CXaml_CControls_CIStyleSelector* value);
    HRESULT (STDMETHODCALLTYPE* get_ItemContainerTransitions)(__x_ABI_CWindows_CUI_CXaml_CControls_CITreeView2* This,
        __x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CXaml__CMedia__CAnimation__CTransition** value);
    HRESULT (STDMETHODCALLTYPE* put_ItemContainerTransitions)(__x_ABI_CWindows_CUI_CXaml_CControls_CITreeView2* This,
        __x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CXaml__CMedia__CAnimation__CTransition* value);
    HRESULT (STDMETHODCALLTYPE* get_ItemsSource)(__x_ABI_CWindows_CUI_CXaml_CControls_CITreeView2* This,
        IInspectable** value);
    HRESULT (STDMETHODCALLTYPE* put_ItemsSource)(__x_ABI_CWindows_CUI_CXaml_CControls_CITreeView2* This,
        IInspectable* value);
    HRESULT (STDMETHODCALLTYPE* add_DragItemsStarting)(__x_ABI_CWindows_CUI_CXaml_CControls_CITreeView2* This,
        __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CTreeView___x_ABI_CWindows__CUI__CXaml__CControls__CTreeViewDragItemsStartingEventArgs* handler,
        EventRegistrationToken* token);
    HRESULT (STDMETHODCALLTYPE* remove_DragItemsStarting)(__x_ABI_CWindows_CUI_CXaml_CControls_CITreeView2* This,
        EventRegistrationToken token);
    HRESULT (STDMETHODCALLTYPE* add_DragItemsCompleted)(__x_ABI_CWindows_CUI_CXaml_CControls_CITreeView2* This,
        __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CTreeView___x_ABI_CWindows__CUI__CXaml__CControls__CTreeViewDragItemsCompletedEventArgs* handler,
        EventRegistrationToken* token);
    HRESULT (STDMETHODCALLTYPE* remove_DragItemsCompleted)(__x_ABI_CWindows_CUI_CXaml_CControls_CITreeView2* This,
        EventRegistrationToken token);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CITreeView2Vtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CITreeView2
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CITreeView2Vtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CITreeView2;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CITreeView2_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewCollapsedEventArgs_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewCollapsedEventArgs_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewCollapsedEventArgsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewCollapsedEventArgs* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewCollapsedEventArgs* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewCollapsedEventArgs* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewCollapsedEventArgs* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewCollapsedEventArgs* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewCollapsedEventArgs* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Node)(__x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewCollapsedEventArgs* This,
        __x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewNode** value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewCollapsedEventArgsVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewCollapsedEventArgs
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewCollapsedEventArgsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewCollapsedEventArgs;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewCollapsedEventArgs_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewCollapsedEventArgs2_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewCollapsedEventArgs2_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewCollapsedEventArgs2Vtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewCollapsedEventArgs2* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewCollapsedEventArgs2* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewCollapsedEventArgs2* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewCollapsedEventArgs2* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewCollapsedEventArgs2* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewCollapsedEventArgs2* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Item)(__x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewCollapsedEventArgs2* This,
        IInspectable** value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewCollapsedEventArgs2Vtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewCollapsedEventArgs2
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewCollapsedEventArgs2Vtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewCollapsedEventArgs2;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewCollapsedEventArgs2_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewDragItemsCompletedEventArgs_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewDragItemsCompletedEventArgs_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewDragItemsCompletedEventArgsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewDragItemsCompletedEventArgs* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewDragItemsCompletedEventArgs* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewDragItemsCompletedEventArgs* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewDragItemsCompletedEventArgs* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewDragItemsCompletedEventArgs* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewDragItemsCompletedEventArgs* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_DropResult)(__x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewDragItemsCompletedEventArgs* This,
        enum __x_ABI_CWindows_CApplicationModel_CDataTransfer_CDataPackageOperation* value);
    HRESULT (STDMETHODCALLTYPE* get_Items)(__x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewDragItemsCompletedEventArgs* This,
        __x_ABI_C__FIVectorView_1_IInspectable** value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewDragItemsCompletedEventArgsVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewDragItemsCompletedEventArgs
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewDragItemsCompletedEventArgsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewDragItemsCompletedEventArgs;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewDragItemsCompletedEventArgs_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewDragItemsStartingEventArgs_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewDragItemsStartingEventArgs_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewDragItemsStartingEventArgsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewDragItemsStartingEventArgs* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewDragItemsStartingEventArgs* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewDragItemsStartingEventArgs* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewDragItemsStartingEventArgs* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewDragItemsStartingEventArgs* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewDragItemsStartingEventArgs* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Cancel)(__x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewDragItemsStartingEventArgs* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* put_Cancel)(__x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewDragItemsStartingEventArgs* This,
        boolean value);
    HRESULT (STDMETHODCALLTYPE* get_Data)(__x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewDragItemsStartingEventArgs* This,
        __x_ABI_CWindows_CApplicationModel_CDataTransfer_CIDataPackage** value);
    HRESULT (STDMETHODCALLTYPE* get_Items)(__x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewDragItemsStartingEventArgs* This,
        __x_ABI_C__FIVector_1_IInspectable** value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewDragItemsStartingEventArgsVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewDragItemsStartingEventArgs
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewDragItemsStartingEventArgsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewDragItemsStartingEventArgs;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewDragItemsStartingEventArgs_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewExpandingEventArgs_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewExpandingEventArgs_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewExpandingEventArgsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewExpandingEventArgs* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewExpandingEventArgs* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewExpandingEventArgs* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewExpandingEventArgs* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewExpandingEventArgs* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewExpandingEventArgs* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Node)(__x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewExpandingEventArgs* This,
        __x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewNode** value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewExpandingEventArgsVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewExpandingEventArgs
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewExpandingEventArgsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewExpandingEventArgs;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewExpandingEventArgs_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewExpandingEventArgs2_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewExpandingEventArgs2_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewExpandingEventArgs2Vtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewExpandingEventArgs2* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewExpandingEventArgs2* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewExpandingEventArgs2* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewExpandingEventArgs2* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewExpandingEventArgs2* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewExpandingEventArgs2* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Item)(__x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewExpandingEventArgs2* This,
        IInspectable** value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewExpandingEventArgs2Vtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewExpandingEventArgs2
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewExpandingEventArgs2Vtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewExpandingEventArgs2;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewExpandingEventArgs2_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewFactory_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewFactory_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewFactoryVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewFactory* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewFactory* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewFactory* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewFactory* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewFactory* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewFactory* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* CreateInstance)(__x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewFactory* This,
        IInspectable* baseInterface,
        IInspectable** innerInterface,
        __x_ABI_CWindows_CUI_CXaml_CControls_CITreeView** value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewFactoryVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewFactory
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewFactoryVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewFactory;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewFactory_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewItem_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewItem_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewItemVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewItem* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewItem* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewItem* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewItem* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewItem* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewItem* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_GlyphOpacity)(__x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewItem* This,
        DOUBLE* value);
    HRESULT (STDMETHODCALLTYPE* put_GlyphOpacity)(__x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewItem* This,
        DOUBLE value);
    HRESULT (STDMETHODCALLTYPE* get_GlyphBrush)(__x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewItem* This,
        __x_ABI_CWindows_CUI_CXaml_CMedia_CIBrush** value);
    HRESULT (STDMETHODCALLTYPE* put_GlyphBrush)(__x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewItem* This,
        __x_ABI_CWindows_CUI_CXaml_CMedia_CIBrush* value);
    HRESULT (STDMETHODCALLTYPE* get_ExpandedGlyph)(__x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewItem* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* put_ExpandedGlyph)(__x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewItem* This,
        HSTRING value);
    HRESULT (STDMETHODCALLTYPE* get_CollapsedGlyph)(__x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewItem* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* put_CollapsedGlyph)(__x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewItem* This,
        HSTRING value);
    HRESULT (STDMETHODCALLTYPE* get_GlyphSize)(__x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewItem* This,
        DOUBLE* value);
    HRESULT (STDMETHODCALLTYPE* put_GlyphSize)(__x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewItem* This,
        DOUBLE value);
    HRESULT (STDMETHODCALLTYPE* get_IsExpanded)(__x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewItem* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* put_IsExpanded)(__x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewItem* This,
        boolean value);
    HRESULT (STDMETHODCALLTYPE* get_TreeViewItemTemplateSettings)(__x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewItem* This,
        __x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewItemTemplateSettings** value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewItemVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewItem
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewItemVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewItem;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewItem_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewItem2_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewItem2_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewItem2Vtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewItem2* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewItem2* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewItem2* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewItem2* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewItem2* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewItem2* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_HasUnrealizedChildren)(__x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewItem2* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* put_HasUnrealizedChildren)(__x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewItem2* This,
        boolean value);
    HRESULT (STDMETHODCALLTYPE* get_ItemsSource)(__x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewItem2* This,
        IInspectable** value);
    HRESULT (STDMETHODCALLTYPE* put_ItemsSource)(__x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewItem2* This,
        IInspectable* value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewItem2Vtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewItem2
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewItem2Vtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewItem2;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewItem2_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewItemFactory_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewItemFactory_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewItemFactoryVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewItemFactory* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewItemFactory* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewItemFactory* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewItemFactory* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewItemFactory* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewItemFactory* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* CreateInstance)(__x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewItemFactory* This,
        IInspectable* baseInterface,
        IInspectable** innerInterface,
        __x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewItem** value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewItemFactoryVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewItemFactory
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewItemFactoryVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewItemFactory;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewItemFactory_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewItemInvokedEventArgs_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewItemInvokedEventArgs_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewItemInvokedEventArgsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewItemInvokedEventArgs* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewItemInvokedEventArgs* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewItemInvokedEventArgs* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewItemInvokedEventArgs* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewItemInvokedEventArgs* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewItemInvokedEventArgs* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_InvokedItem)(__x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewItemInvokedEventArgs* This,
        IInspectable** value);
    HRESULT (STDMETHODCALLTYPE* put_Handled)(__x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewItemInvokedEventArgs* This,
        boolean value);
    HRESULT (STDMETHODCALLTYPE* get_Handled)(__x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewItemInvokedEventArgs* This,
        boolean* value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewItemInvokedEventArgsVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewItemInvokedEventArgs
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewItemInvokedEventArgsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewItemInvokedEventArgs;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewItemInvokedEventArgs_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewItemStatics_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewItemStatics_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewItemStaticsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewItemStatics* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewItemStatics* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewItemStatics* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewItemStatics* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewItemStatics* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewItemStatics* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_GlyphOpacityProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewItemStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_GlyphBrushProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewItemStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_ExpandedGlyphProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewItemStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_CollapsedGlyphProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewItemStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_GlyphSizeProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewItemStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_IsExpandedProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewItemStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_TreeViewItemTemplateSettingsProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewItemStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewItemStaticsVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewItemStatics
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewItemStaticsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewItemStatics;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewItemStatics_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewItemStatics2_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewItemStatics2_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewItemStatics2Vtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewItemStatics2* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewItemStatics2* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewItemStatics2* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewItemStatics2* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewItemStatics2* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewItemStatics2* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_HasUnrealizedChildrenProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewItemStatics2* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_ItemsSourceProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewItemStatics2* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewItemStatics2Vtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewItemStatics2
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewItemStatics2Vtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewItemStatics2;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewItemStatics2_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewItemTemplateSettings_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewItemTemplateSettings_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewItemTemplateSettingsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewItemTemplateSettings* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewItemTemplateSettings* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewItemTemplateSettings* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewItemTemplateSettings* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewItemTemplateSettings* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewItemTemplateSettings* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_ExpandedGlyphVisibility)(__x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewItemTemplateSettings* This,
        enum __x_ABI_CWindows_CUI_CXaml_CVisibility* value);
    HRESULT (STDMETHODCALLTYPE* get_CollapsedGlyphVisibility)(__x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewItemTemplateSettings* This,
        enum __x_ABI_CWindows_CUI_CXaml_CVisibility* value);
    HRESULT (STDMETHODCALLTYPE* get_Indentation)(__x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewItemTemplateSettings* This,
        struct __x_ABI_CWindows_CUI_CXaml_CThickness* value);
    HRESULT (STDMETHODCALLTYPE* get_DragItemsCount)(__x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewItemTemplateSettings* This,
        INT32* value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewItemTemplateSettingsVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewItemTemplateSettings
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewItemTemplateSettingsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewItemTemplateSettings;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewItemTemplateSettings_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewItemTemplateSettingsFactory_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewItemTemplateSettingsFactory_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewItemTemplateSettingsFactoryVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewItemTemplateSettingsFactory* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewItemTemplateSettingsFactory* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewItemTemplateSettingsFactory* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewItemTemplateSettingsFactory* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewItemTemplateSettingsFactory* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewItemTemplateSettingsFactory* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* CreateInstance)(__x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewItemTemplateSettingsFactory* This,
        IInspectable* baseInterface,
        IInspectable** innerInterface,
        __x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewItemTemplateSettings** value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewItemTemplateSettingsFactoryVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewItemTemplateSettingsFactory
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewItemTemplateSettingsFactoryVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewItemTemplateSettingsFactory;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewItemTemplateSettingsFactory_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewItemTemplateSettingsStatics_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewItemTemplateSettingsStatics_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewItemTemplateSettingsStaticsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewItemTemplateSettingsStatics* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewItemTemplateSettingsStatics* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewItemTemplateSettingsStatics* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewItemTemplateSettingsStatics* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewItemTemplateSettingsStatics* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewItemTemplateSettingsStatics* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_ExpandedGlyphVisibilityProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewItemTemplateSettingsStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_CollapsedGlyphVisibilityProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewItemTemplateSettingsStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_IndentationProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewItemTemplateSettingsStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_DragItemsCountProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewItemTemplateSettingsStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewItemTemplateSettingsStaticsVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewItemTemplateSettingsStatics
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewItemTemplateSettingsStaticsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewItemTemplateSettingsStatics;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewItemTemplateSettingsStatics_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewList_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewList_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewListVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewList* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewList* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewList* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewList* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewList* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewList* This,
            TrustLevel* trustLevel);
    
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewListVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewList
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewListVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewList;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewList_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewListFactory_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewListFactory_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewListFactoryVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewListFactory* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewListFactory* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewListFactory* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewListFactory* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewListFactory* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewListFactory* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* CreateInstance)(__x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewListFactory* This,
        IInspectable* baseInterface,
        IInspectable** innerInterface,
        __x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewList** value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewListFactoryVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewListFactory
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewListFactoryVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewListFactory;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewListFactory_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewNode_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewNode_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewNodeVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewNode* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewNode* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewNode* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewNode* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewNode* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewNode* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Content)(__x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewNode* This,
        IInspectable** value);
    HRESULT (STDMETHODCALLTYPE* put_Content)(__x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewNode* This,
        IInspectable* value);
    HRESULT (STDMETHODCALLTYPE* get_Parent)(__x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewNode* This,
        __x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewNode** value);
    HRESULT (STDMETHODCALLTYPE* get_IsExpanded)(__x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewNode* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* put_IsExpanded)(__x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewNode* This,
        boolean value);
    HRESULT (STDMETHODCALLTYPE* get_HasChildren)(__x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewNode* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* get_Depth)(__x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewNode* This,
        INT32* value);
    HRESULT (STDMETHODCALLTYPE* get_HasUnrealizedChildren)(__x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewNode* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* put_HasUnrealizedChildren)(__x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewNode* This,
        boolean value);
    HRESULT (STDMETHODCALLTYPE* get_Children)(__x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewNode* This,
        __x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CXaml__CControls__CTreeViewNode** value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewNodeVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewNode
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewNodeVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewNode;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewNode_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewNodeFactory_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewNodeFactory_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewNodeFactoryVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewNodeFactory* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewNodeFactory* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewNodeFactory* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewNodeFactory* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewNodeFactory* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewNodeFactory* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* CreateInstance)(__x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewNodeFactory* This,
        IInspectable* baseInterface,
        IInspectable** innerInterface,
        __x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewNode** value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewNodeFactoryVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewNodeFactory
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewNodeFactoryVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewNodeFactory;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewNodeFactory_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewNodeStatics_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewNodeStatics_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewNodeStaticsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewNodeStatics* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewNodeStatics* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewNodeStatics* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewNodeStatics* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewNodeStatics* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewNodeStatics* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_ContentProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewNodeStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_DepthProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewNodeStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_IsExpandedProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewNodeStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_HasChildrenProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewNodeStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewNodeStaticsVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewNodeStatics
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewNodeStaticsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewNodeStatics;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewNodeStatics_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewStatics_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewStatics_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewStaticsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewStatics* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewStatics* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewStatics* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewStatics* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewStatics* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewStatics* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_SelectionModeProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewStaticsVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewStatics
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewStaticsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewStatics;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewStatics_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewStatics2_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewStatics2_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewStatics2Vtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewStatics2* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewStatics2* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewStatics2* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewStatics2* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewStatics2* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewStatics2* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_CanDragItemsProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewStatics2* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_CanReorderItemsProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewStatics2* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_ItemTemplateProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewStatics2* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_ItemTemplateSelectorProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewStatics2* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_ItemContainerStyleProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewStatics2* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_ItemContainerStyleSelectorProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewStatics2* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_ItemContainerTransitionsProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewStatics2* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_ItemsSourceProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewStatics2* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewStatics2Vtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewStatics2
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewStatics2Vtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewStatics2;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CITreeViewStatics2_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CITwoPaneView_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CControls_CITwoPaneView_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CITwoPaneViewVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CControls_CITwoPaneView* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CControls_CITwoPaneView* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CControls_CITwoPaneView* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CControls_CITwoPaneView* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CControls_CITwoPaneView* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CControls_CITwoPaneView* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Pane1)(__x_ABI_CWindows_CUI_CXaml_CControls_CITwoPaneView* This,
        __x_ABI_CWindows_CUI_CXaml_CIUIElement** value);
    HRESULT (STDMETHODCALLTYPE* put_Pane1)(__x_ABI_CWindows_CUI_CXaml_CControls_CITwoPaneView* This,
        __x_ABI_CWindows_CUI_CXaml_CIUIElement* value);
    HRESULT (STDMETHODCALLTYPE* get_Pane2)(__x_ABI_CWindows_CUI_CXaml_CControls_CITwoPaneView* This,
        __x_ABI_CWindows_CUI_CXaml_CIUIElement** value);
    HRESULT (STDMETHODCALLTYPE* put_Pane2)(__x_ABI_CWindows_CUI_CXaml_CControls_CITwoPaneView* This,
        __x_ABI_CWindows_CUI_CXaml_CIUIElement* value);
    HRESULT (STDMETHODCALLTYPE* get_Pane1Length)(__x_ABI_CWindows_CUI_CXaml_CControls_CITwoPaneView* This,
        struct __x_ABI_CWindows_CUI_CXaml_CGridLength* value);
    HRESULT (STDMETHODCALLTYPE* put_Pane1Length)(__x_ABI_CWindows_CUI_CXaml_CControls_CITwoPaneView* This,
        struct __x_ABI_CWindows_CUI_CXaml_CGridLength value);
    HRESULT (STDMETHODCALLTYPE* get_Pane2Length)(__x_ABI_CWindows_CUI_CXaml_CControls_CITwoPaneView* This,
        struct __x_ABI_CWindows_CUI_CXaml_CGridLength* value);
    HRESULT (STDMETHODCALLTYPE* put_Pane2Length)(__x_ABI_CWindows_CUI_CXaml_CControls_CITwoPaneView* This,
        struct __x_ABI_CWindows_CUI_CXaml_CGridLength value);
    HRESULT (STDMETHODCALLTYPE* get_PanePriority)(__x_ABI_CWindows_CUI_CXaml_CControls_CITwoPaneView* This,
        enum __x_ABI_CWindows_CUI_CXaml_CControls_CTwoPaneViewPriority* value);
    HRESULT (STDMETHODCALLTYPE* put_PanePriority)(__x_ABI_CWindows_CUI_CXaml_CControls_CITwoPaneView* This,
        enum __x_ABI_CWindows_CUI_CXaml_CControls_CTwoPaneViewPriority value);
    HRESULT (STDMETHODCALLTYPE* get_Mode)(__x_ABI_CWindows_CUI_CXaml_CControls_CITwoPaneView* This,
        enum __x_ABI_CWindows_CUI_CXaml_CControls_CTwoPaneViewMode* value);
    HRESULT (STDMETHODCALLTYPE* get_WideModeConfiguration)(__x_ABI_CWindows_CUI_CXaml_CControls_CITwoPaneView* This,
        enum __x_ABI_CWindows_CUI_CXaml_CControls_CTwoPaneViewWideModeConfiguration* value);
    HRESULT (STDMETHODCALLTYPE* put_WideModeConfiguration)(__x_ABI_CWindows_CUI_CXaml_CControls_CITwoPaneView* This,
        enum __x_ABI_CWindows_CUI_CXaml_CControls_CTwoPaneViewWideModeConfiguration value);
    HRESULT (STDMETHODCALLTYPE* get_TallModeConfiguration)(__x_ABI_CWindows_CUI_CXaml_CControls_CITwoPaneView* This,
        enum __x_ABI_CWindows_CUI_CXaml_CControls_CTwoPaneViewTallModeConfiguration* value);
    HRESULT (STDMETHODCALLTYPE* put_TallModeConfiguration)(__x_ABI_CWindows_CUI_CXaml_CControls_CITwoPaneView* This,
        enum __x_ABI_CWindows_CUI_CXaml_CControls_CTwoPaneViewTallModeConfiguration value);
    HRESULT (STDMETHODCALLTYPE* get_MinWideModeWidth)(__x_ABI_CWindows_CUI_CXaml_CControls_CITwoPaneView* This,
        DOUBLE* value);
    HRESULT (STDMETHODCALLTYPE* put_MinWideModeWidth)(__x_ABI_CWindows_CUI_CXaml_CControls_CITwoPaneView* This,
        DOUBLE value);
    HRESULT (STDMETHODCALLTYPE* get_MinTallModeHeight)(__x_ABI_CWindows_CUI_CXaml_CControls_CITwoPaneView* This,
        DOUBLE* value);
    HRESULT (STDMETHODCALLTYPE* put_MinTallModeHeight)(__x_ABI_CWindows_CUI_CXaml_CControls_CITwoPaneView* This,
        DOUBLE value);
    HRESULT (STDMETHODCALLTYPE* add_ModeChanged)(__x_ABI_CWindows_CUI_CXaml_CControls_CITwoPaneView* This,
        __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CTwoPaneView_IInspectable* handler,
        EventRegistrationToken* token);
    HRESULT (STDMETHODCALLTYPE* remove_ModeChanged)(__x_ABI_CWindows_CUI_CXaml_CControls_CITwoPaneView* This,
        EventRegistrationToken token);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CITwoPaneViewVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CITwoPaneView
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CITwoPaneViewVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CITwoPaneView;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CITwoPaneView_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CITwoPaneViewFactory_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CControls_CITwoPaneViewFactory_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CITwoPaneViewFactoryVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CControls_CITwoPaneViewFactory* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CControls_CITwoPaneViewFactory* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CControls_CITwoPaneViewFactory* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CControls_CITwoPaneViewFactory* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CControls_CITwoPaneViewFactory* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CControls_CITwoPaneViewFactory* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* CreateInstance)(__x_ABI_CWindows_CUI_CXaml_CControls_CITwoPaneViewFactory* This,
        IInspectable* baseInterface,
        IInspectable** innerInterface,
        __x_ABI_CWindows_CUI_CXaml_CControls_CITwoPaneView** value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CITwoPaneViewFactoryVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CITwoPaneViewFactory
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CITwoPaneViewFactoryVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CITwoPaneViewFactory;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CITwoPaneViewFactory_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CITwoPaneViewStatics_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CControls_CITwoPaneViewStatics_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CITwoPaneViewStaticsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CControls_CITwoPaneViewStatics* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CControls_CITwoPaneViewStatics* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CControls_CITwoPaneViewStatics* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CControls_CITwoPaneViewStatics* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CControls_CITwoPaneViewStatics* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CControls_CITwoPaneViewStatics* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Pane1Property)(__x_ABI_CWindows_CUI_CXaml_CControls_CITwoPaneViewStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_Pane2Property)(__x_ABI_CWindows_CUI_CXaml_CControls_CITwoPaneViewStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_Pane1LengthProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CITwoPaneViewStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_Pane2LengthProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CITwoPaneViewStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_PanePriorityProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CITwoPaneViewStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_ModeProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CITwoPaneViewStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_WideModeConfigurationProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CITwoPaneViewStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_TallModeConfigurationProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CITwoPaneViewStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_MinWideModeWidthProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CITwoPaneViewStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_MinTallModeHeightProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CITwoPaneViewStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CITwoPaneViewStaticsVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CITwoPaneViewStatics
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CITwoPaneViewStaticsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CITwoPaneViewStatics;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CITwoPaneViewStatics_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIUIElementCollection_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CControls_CIUIElementCollection_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIUIElementCollectionVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CControls_CIUIElementCollection* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CControls_CIUIElementCollection* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CControls_CIUIElementCollection* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CControls_CIUIElementCollection* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CControls_CIUIElementCollection* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CControls_CIUIElementCollection* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* Move)(__x_ABI_CWindows_CUI_CXaml_CControls_CIUIElementCollection* This,
        UINT32 oldIndex,
        UINT32 newIndex);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CIUIElementCollectionVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CIUIElementCollection
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIUIElementCollectionVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIUIElementCollection;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIUIElementCollection_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIUserControl_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CControls_CIUserControl_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIUserControlVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CControls_CIUserControl* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CControls_CIUserControl* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CControls_CIUserControl* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CControls_CIUserControl* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CControls_CIUserControl* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CControls_CIUserControl* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Content)(__x_ABI_CWindows_CUI_CXaml_CControls_CIUserControl* This,
        __x_ABI_CWindows_CUI_CXaml_CIUIElement** value);
    HRESULT (STDMETHODCALLTYPE* put_Content)(__x_ABI_CWindows_CUI_CXaml_CControls_CIUserControl* This,
        __x_ABI_CWindows_CUI_CXaml_CIUIElement* value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CIUserControlVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CIUserControl
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIUserControlVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIUserControl;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIUserControl_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIUserControlFactory_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CControls_CIUserControlFactory_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIUserControlFactoryVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CControls_CIUserControlFactory* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CControls_CIUserControlFactory* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CControls_CIUserControlFactory* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CControls_CIUserControlFactory* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CControls_CIUserControlFactory* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CControls_CIUserControlFactory* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* CreateInstance)(__x_ABI_CWindows_CUI_CXaml_CControls_CIUserControlFactory* This,
        IInspectable* baseInterface,
        IInspectable** innerInterface,
        __x_ABI_CWindows_CUI_CXaml_CControls_CIUserControl** value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CIUserControlFactoryVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CIUserControlFactory
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIUserControlFactoryVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIUserControlFactory;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIUserControlFactory_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIUserControlStatics_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CControls_CIUserControlStatics_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIUserControlStaticsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CControls_CIUserControlStatics* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CControls_CIUserControlStatics* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CControls_CIUserControlStatics* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CControls_CIUserControlStatics* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CControls_CIUserControlStatics* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CControls_CIUserControlStatics* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_ContentProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CIUserControlStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CIUserControlStaticsVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CIUserControlStatics
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIUserControlStaticsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIUserControlStatics;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIUserControlStatics_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIVariableSizedWrapGrid_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CControls_CIVariableSizedWrapGrid_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIVariableSizedWrapGridVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CControls_CIVariableSizedWrapGrid* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CControls_CIVariableSizedWrapGrid* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CControls_CIVariableSizedWrapGrid* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CControls_CIVariableSizedWrapGrid* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CControls_CIVariableSizedWrapGrid* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CControls_CIVariableSizedWrapGrid* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_ItemHeight)(__x_ABI_CWindows_CUI_CXaml_CControls_CIVariableSizedWrapGrid* This,
        DOUBLE* value);
    HRESULT (STDMETHODCALLTYPE* put_ItemHeight)(__x_ABI_CWindows_CUI_CXaml_CControls_CIVariableSizedWrapGrid* This,
        DOUBLE value);
    HRESULT (STDMETHODCALLTYPE* get_ItemWidth)(__x_ABI_CWindows_CUI_CXaml_CControls_CIVariableSizedWrapGrid* This,
        DOUBLE* value);
    HRESULT (STDMETHODCALLTYPE* put_ItemWidth)(__x_ABI_CWindows_CUI_CXaml_CControls_CIVariableSizedWrapGrid* This,
        DOUBLE value);
    HRESULT (STDMETHODCALLTYPE* get_Orientation)(__x_ABI_CWindows_CUI_CXaml_CControls_CIVariableSizedWrapGrid* This,
        enum __x_ABI_CWindows_CUI_CXaml_CControls_COrientation* value);
    HRESULT (STDMETHODCALLTYPE* put_Orientation)(__x_ABI_CWindows_CUI_CXaml_CControls_CIVariableSizedWrapGrid* This,
        enum __x_ABI_CWindows_CUI_CXaml_CControls_COrientation value);
    HRESULT (STDMETHODCALLTYPE* get_HorizontalChildrenAlignment)(__x_ABI_CWindows_CUI_CXaml_CControls_CIVariableSizedWrapGrid* This,
        enum __x_ABI_CWindows_CUI_CXaml_CHorizontalAlignment* value);
    HRESULT (STDMETHODCALLTYPE* put_HorizontalChildrenAlignment)(__x_ABI_CWindows_CUI_CXaml_CControls_CIVariableSizedWrapGrid* This,
        enum __x_ABI_CWindows_CUI_CXaml_CHorizontalAlignment value);
    HRESULT (STDMETHODCALLTYPE* get_VerticalChildrenAlignment)(__x_ABI_CWindows_CUI_CXaml_CControls_CIVariableSizedWrapGrid* This,
        enum __x_ABI_CWindows_CUI_CXaml_CVerticalAlignment* value);
    HRESULT (STDMETHODCALLTYPE* put_VerticalChildrenAlignment)(__x_ABI_CWindows_CUI_CXaml_CControls_CIVariableSizedWrapGrid* This,
        enum __x_ABI_CWindows_CUI_CXaml_CVerticalAlignment value);
    HRESULT (STDMETHODCALLTYPE* get_MaximumRowsOrColumns)(__x_ABI_CWindows_CUI_CXaml_CControls_CIVariableSizedWrapGrid* This,
        INT32* value);
    HRESULT (STDMETHODCALLTYPE* put_MaximumRowsOrColumns)(__x_ABI_CWindows_CUI_CXaml_CControls_CIVariableSizedWrapGrid* This,
        INT32 value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CIVariableSizedWrapGridVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CIVariableSizedWrapGrid
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIVariableSizedWrapGridVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIVariableSizedWrapGrid;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIVariableSizedWrapGrid_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIVariableSizedWrapGridStatics_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CControls_CIVariableSizedWrapGridStatics_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIVariableSizedWrapGridStaticsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CControls_CIVariableSizedWrapGridStatics* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CControls_CIVariableSizedWrapGridStatics* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CControls_CIVariableSizedWrapGridStatics* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CControls_CIVariableSizedWrapGridStatics* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CControls_CIVariableSizedWrapGridStatics* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CControls_CIVariableSizedWrapGridStatics* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_ItemHeightProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CIVariableSizedWrapGridStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_ItemWidthProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CIVariableSizedWrapGridStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_OrientationProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CIVariableSizedWrapGridStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_HorizontalChildrenAlignmentProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CIVariableSizedWrapGridStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_VerticalChildrenAlignmentProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CIVariableSizedWrapGridStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_MaximumRowsOrColumnsProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CIVariableSizedWrapGridStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_RowSpanProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CIVariableSizedWrapGridStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* GetRowSpan)(__x_ABI_CWindows_CUI_CXaml_CControls_CIVariableSizedWrapGridStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIUIElement* element,
        INT32* result);
    HRESULT (STDMETHODCALLTYPE* SetRowSpan)(__x_ABI_CWindows_CUI_CXaml_CControls_CIVariableSizedWrapGridStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIUIElement* element,
        INT32 value);
    HRESULT (STDMETHODCALLTYPE* get_ColumnSpanProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CIVariableSizedWrapGridStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* GetColumnSpan)(__x_ABI_CWindows_CUI_CXaml_CControls_CIVariableSizedWrapGridStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIUIElement* element,
        INT32* result);
    HRESULT (STDMETHODCALLTYPE* SetColumnSpan)(__x_ABI_CWindows_CUI_CXaml_CControls_CIVariableSizedWrapGridStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIUIElement* element,
        INT32 value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CIVariableSizedWrapGridStaticsVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CIVariableSizedWrapGridStatics
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIVariableSizedWrapGridStaticsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIVariableSizedWrapGridStatics;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIVariableSizedWrapGridStatics_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIViewbox_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CControls_CIViewbox_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIViewboxVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CControls_CIViewbox* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CControls_CIViewbox* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CControls_CIViewbox* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CControls_CIViewbox* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CControls_CIViewbox* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CControls_CIViewbox* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Child)(__x_ABI_CWindows_CUI_CXaml_CControls_CIViewbox* This,
        __x_ABI_CWindows_CUI_CXaml_CIUIElement** value);
    HRESULT (STDMETHODCALLTYPE* put_Child)(__x_ABI_CWindows_CUI_CXaml_CControls_CIViewbox* This,
        __x_ABI_CWindows_CUI_CXaml_CIUIElement* value);
    HRESULT (STDMETHODCALLTYPE* get_Stretch)(__x_ABI_CWindows_CUI_CXaml_CControls_CIViewbox* This,
        enum __x_ABI_CWindows_CUI_CXaml_CMedia_CStretch* value);
    HRESULT (STDMETHODCALLTYPE* put_Stretch)(__x_ABI_CWindows_CUI_CXaml_CControls_CIViewbox* This,
        enum __x_ABI_CWindows_CUI_CXaml_CMedia_CStretch value);
    HRESULT (STDMETHODCALLTYPE* get_StretchDirection)(__x_ABI_CWindows_CUI_CXaml_CControls_CIViewbox* This,
        enum __x_ABI_CWindows_CUI_CXaml_CControls_CStretchDirection* value);
    HRESULT (STDMETHODCALLTYPE* put_StretchDirection)(__x_ABI_CWindows_CUI_CXaml_CControls_CIViewbox* This,
        enum __x_ABI_CWindows_CUI_CXaml_CControls_CStretchDirection value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CIViewboxVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CIViewbox
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIViewboxVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIViewbox;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIViewbox_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIViewboxStatics_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CControls_CIViewboxStatics_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIViewboxStaticsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CControls_CIViewboxStatics* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CControls_CIViewboxStatics* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CControls_CIViewboxStatics* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CControls_CIViewboxStatics* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CControls_CIViewboxStatics* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CControls_CIViewboxStatics* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_StretchProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CIViewboxStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_StretchDirectionProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CIViewboxStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CIViewboxStaticsVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CIViewboxStatics
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIViewboxStaticsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIViewboxStatics;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIViewboxStatics_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIVirtualizingPanel_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CControls_CIVirtualizingPanel_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIVirtualizingPanelVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CControls_CIVirtualizingPanel* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CControls_CIVirtualizingPanel* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CControls_CIVirtualizingPanel* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CControls_CIVirtualizingPanel* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CControls_CIVirtualizingPanel* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CControls_CIVirtualizingPanel* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_ItemContainerGenerator)(__x_ABI_CWindows_CUI_CXaml_CControls_CIVirtualizingPanel* This,
        __x_ABI_CWindows_CUI_CXaml_CControls_CIItemContainerGenerator** value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CIVirtualizingPanelVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CIVirtualizingPanel
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIVirtualizingPanelVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIVirtualizingPanel;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIVirtualizingPanel_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIVirtualizingPanelFactory_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CControls_CIVirtualizingPanelFactory_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIVirtualizingPanelFactoryVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CControls_CIVirtualizingPanelFactory* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CControls_CIVirtualizingPanelFactory* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CControls_CIVirtualizingPanelFactory* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CControls_CIVirtualizingPanelFactory* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CControls_CIVirtualizingPanelFactory* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CControls_CIVirtualizingPanelFactory* This,
            TrustLevel* trustLevel);
    
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CIVirtualizingPanelFactoryVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CIVirtualizingPanelFactory
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIVirtualizingPanelFactoryVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIVirtualizingPanelFactory;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIVirtualizingPanelFactory_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIVirtualizingPanelOverrides_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CControls_CIVirtualizingPanelOverrides_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIVirtualizingPanelOverridesVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CControls_CIVirtualizingPanelOverrides* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CControls_CIVirtualizingPanelOverrides* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CControls_CIVirtualizingPanelOverrides* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CControls_CIVirtualizingPanelOverrides* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CControls_CIVirtualizingPanelOverrides* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CControls_CIVirtualizingPanelOverrides* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* OnItemsChanged)(__x_ABI_CWindows_CUI_CXaml_CControls_CIVirtualizingPanelOverrides* This,
        IInspectable* sender,
        __x_ABI_CWindows_CUI_CXaml_CControls_CPrimitives_CIItemsChangedEventArgs* args);
    HRESULT (STDMETHODCALLTYPE* OnClearChildren)(__x_ABI_CWindows_CUI_CXaml_CControls_CIVirtualizingPanelOverrides* This);
    HRESULT (STDMETHODCALLTYPE* BringIndexIntoView)(__x_ABI_CWindows_CUI_CXaml_CControls_CIVirtualizingPanelOverrides* This,
        INT32 index);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CIVirtualizingPanelOverridesVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CIVirtualizingPanelOverrides
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIVirtualizingPanelOverridesVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIVirtualizingPanelOverrides;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIVirtualizingPanelOverrides_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIVirtualizingPanelProtected_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CControls_CIVirtualizingPanelProtected_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIVirtualizingPanelProtectedVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CControls_CIVirtualizingPanelProtected* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CControls_CIVirtualizingPanelProtected* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CControls_CIVirtualizingPanelProtected* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CControls_CIVirtualizingPanelProtected* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CControls_CIVirtualizingPanelProtected* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CControls_CIVirtualizingPanelProtected* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* AddInternalChild)(__x_ABI_CWindows_CUI_CXaml_CControls_CIVirtualizingPanelProtected* This,
        __x_ABI_CWindows_CUI_CXaml_CIUIElement* child);
    HRESULT (STDMETHODCALLTYPE* InsertInternalChild)(__x_ABI_CWindows_CUI_CXaml_CControls_CIVirtualizingPanelProtected* This,
        INT32 index,
        __x_ABI_CWindows_CUI_CXaml_CIUIElement* child);
    HRESULT (STDMETHODCALLTYPE* RemoveInternalChildRange)(__x_ABI_CWindows_CUI_CXaml_CControls_CIVirtualizingPanelProtected* This,
        INT32 index,
        INT32 range);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CIVirtualizingPanelProtectedVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CIVirtualizingPanelProtected
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIVirtualizingPanelProtectedVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIVirtualizingPanelProtected;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIVirtualizingPanelProtected_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIVirtualizingStackPanel_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CControls_CIVirtualizingStackPanel_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIVirtualizingStackPanelVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CControls_CIVirtualizingStackPanel* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CControls_CIVirtualizingStackPanel* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CControls_CIVirtualizingStackPanel* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CControls_CIVirtualizingStackPanel* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CControls_CIVirtualizingStackPanel* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CControls_CIVirtualizingStackPanel* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_AreScrollSnapPointsRegular)(__x_ABI_CWindows_CUI_CXaml_CControls_CIVirtualizingStackPanel* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* put_AreScrollSnapPointsRegular)(__x_ABI_CWindows_CUI_CXaml_CControls_CIVirtualizingStackPanel* This,
        boolean value);
    HRESULT (STDMETHODCALLTYPE* get_Orientation)(__x_ABI_CWindows_CUI_CXaml_CControls_CIVirtualizingStackPanel* This,
        enum __x_ABI_CWindows_CUI_CXaml_CControls_COrientation* value);
    HRESULT (STDMETHODCALLTYPE* put_Orientation)(__x_ABI_CWindows_CUI_CXaml_CControls_CIVirtualizingStackPanel* This,
        enum __x_ABI_CWindows_CUI_CXaml_CControls_COrientation value);
    HRESULT (STDMETHODCALLTYPE* add_CleanUpVirtualizedItemEvent)(__x_ABI_CWindows_CUI_CXaml_CControls_CIVirtualizingStackPanel* This,
        __x_ABI_CWindows_CUI_CXaml_CControls_CICleanUpVirtualizedItemEventHandler* handler,
        EventRegistrationToken* token);
    HRESULT (STDMETHODCALLTYPE* remove_CleanUpVirtualizedItemEvent)(__x_ABI_CWindows_CUI_CXaml_CControls_CIVirtualizingStackPanel* This,
        EventRegistrationToken token);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CIVirtualizingStackPanelVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CIVirtualizingStackPanel
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIVirtualizingStackPanelVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIVirtualizingStackPanel;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIVirtualizingStackPanel_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIVirtualizingStackPanelOverrides_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CControls_CIVirtualizingStackPanelOverrides_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIVirtualizingStackPanelOverridesVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CControls_CIVirtualizingStackPanelOverrides* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CControls_CIVirtualizingStackPanelOverrides* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CControls_CIVirtualizingStackPanelOverrides* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CControls_CIVirtualizingStackPanelOverrides* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CControls_CIVirtualizingStackPanelOverrides* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CControls_CIVirtualizingStackPanelOverrides* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* OnCleanUpVirtualizedItem)(__x_ABI_CWindows_CUI_CXaml_CControls_CIVirtualizingStackPanelOverrides* This,
        __x_ABI_CWindows_CUI_CXaml_CControls_CICleanUpVirtualizedItemEventArgs* e);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CIVirtualizingStackPanelOverridesVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CIVirtualizingStackPanelOverrides
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIVirtualizingStackPanelOverridesVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIVirtualizingStackPanelOverrides;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIVirtualizingStackPanelOverrides_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIVirtualizingStackPanelStatics_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CControls_CIVirtualizingStackPanelStatics_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIVirtualizingStackPanelStaticsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CControls_CIVirtualizingStackPanelStatics* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CControls_CIVirtualizingStackPanelStatics* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CControls_CIVirtualizingStackPanelStatics* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CControls_CIVirtualizingStackPanelStatics* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CControls_CIVirtualizingStackPanelStatics* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CControls_CIVirtualizingStackPanelStatics* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_AreScrollSnapPointsRegularProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CIVirtualizingStackPanelStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_OrientationProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CIVirtualizingStackPanelStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_VirtualizationModeProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CIVirtualizingStackPanelStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* GetVirtualizationMode)(__x_ABI_CWindows_CUI_CXaml_CControls_CIVirtualizingStackPanelStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyObject* element,
        enum __x_ABI_CWindows_CUI_CXaml_CControls_CVirtualizationMode* result);
    HRESULT (STDMETHODCALLTYPE* SetVirtualizationMode)(__x_ABI_CWindows_CUI_CXaml_CControls_CIVirtualizingStackPanelStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyObject* element,
        enum __x_ABI_CWindows_CUI_CXaml_CControls_CVirtualizationMode value);
    HRESULT (STDMETHODCALLTYPE* get_IsVirtualizingProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CIVirtualizingStackPanelStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* GetIsVirtualizing)(__x_ABI_CWindows_CUI_CXaml_CControls_CIVirtualizingStackPanelStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyObject* o,
        boolean* result);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CIVirtualizingStackPanelStaticsVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CIVirtualizingStackPanelStatics
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIVirtualizingStackPanelStaticsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIVirtualizingStackPanelStatics;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIVirtualizingStackPanelStatics_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIWebView_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CControls_CIWebView_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CControls_CIWebView* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CControls_CIWebView* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CControls_CIWebView* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CControls_CIWebView* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CControls_CIWebView* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CControls_CIWebView* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Source)(__x_ABI_CWindows_CUI_CXaml_CControls_CIWebView* This,
        __x_ABI_CWindows_CFoundation_CIUriRuntimeClass** value);
    HRESULT (STDMETHODCALLTYPE* put_Source)(__x_ABI_CWindows_CUI_CXaml_CControls_CIWebView* This,
        __x_ABI_CWindows_CFoundation_CIUriRuntimeClass* value);
    HRESULT (STDMETHODCALLTYPE* get_AllowedScriptNotifyUris)(__x_ABI_CWindows_CUI_CXaml_CControls_CIWebView* This,
        __x_ABI_C__FIVector_1___x_ABI_CWindows__CFoundation__CUri** value);
    HRESULT (STDMETHODCALLTYPE* put_AllowedScriptNotifyUris)(__x_ABI_CWindows_CUI_CXaml_CControls_CIWebView* This,
        __x_ABI_C__FIVector_1___x_ABI_CWindows__CFoundation__CUri* value);
    HRESULT (STDMETHODCALLTYPE* get_DataTransferPackage)(__x_ABI_CWindows_CUI_CXaml_CControls_CIWebView* This,
        __x_ABI_CWindows_CApplicationModel_CDataTransfer_CIDataPackage** value);
    HRESULT (STDMETHODCALLTYPE* add_LoadCompleted)(__x_ABI_CWindows_CUI_CXaml_CControls_CIWebView* This,
        __x_ABI_CWindows_CUI_CXaml_CNavigation_CILoadCompletedEventHandler* handler,
        EventRegistrationToken* token);
    HRESULT (STDMETHODCALLTYPE* remove_LoadCompleted)(__x_ABI_CWindows_CUI_CXaml_CControls_CIWebView* This,
        EventRegistrationToken token);
    HRESULT (STDMETHODCALLTYPE* add_ScriptNotify)(__x_ABI_CWindows_CUI_CXaml_CControls_CIWebView* This,
        __x_ABI_CWindows_CUI_CXaml_CControls_CINotifyEventHandler* handler,
        EventRegistrationToken* token);
    HRESULT (STDMETHODCALLTYPE* remove_ScriptNotify)(__x_ABI_CWindows_CUI_CXaml_CControls_CIWebView* This,
        EventRegistrationToken token);
    HRESULT (STDMETHODCALLTYPE* add_NavigationFailed)(__x_ABI_CWindows_CUI_CXaml_CControls_CIWebView* This,
        __x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewNavigationFailedEventHandler* handler,
        EventRegistrationToken* token);
    HRESULT (STDMETHODCALLTYPE* remove_NavigationFailed)(__x_ABI_CWindows_CUI_CXaml_CControls_CIWebView* This,
        EventRegistrationToken token);
    HRESULT (STDMETHODCALLTYPE* InvokeScript)(__x_ABI_CWindows_CUI_CXaml_CControls_CIWebView* This,
        HSTRING scriptName,
        UINT32 argumentsLength,
        HSTRING* arguments,
        HSTRING* result);
    HRESULT (STDMETHODCALLTYPE* Navigate)(__x_ABI_CWindows_CUI_CXaml_CControls_CIWebView* This,
        __x_ABI_CWindows_CFoundation_CIUriRuntimeClass* source);
    HRESULT (STDMETHODCALLTYPE* NavigateToString)(__x_ABI_CWindows_CUI_CXaml_CControls_CIWebView* This,
        HSTRING text);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CIWebView
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIWebView;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIWebView_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIWebView2_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CControls_CIWebView2_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIWebView2Vtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CControls_CIWebView2* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CControls_CIWebView2* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CControls_CIWebView2* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CControls_CIWebView2* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CControls_CIWebView2* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CControls_CIWebView2* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_CanGoBack)(__x_ABI_CWindows_CUI_CXaml_CControls_CIWebView2* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* get_CanGoForward)(__x_ABI_CWindows_CUI_CXaml_CControls_CIWebView2* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* get_DocumentTitle)(__x_ABI_CWindows_CUI_CXaml_CControls_CIWebView2* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* add_NavigationStarting)(__x_ABI_CWindows_CUI_CXaml_CControls_CIWebView2* This,
        __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CWebView___x_ABI_CWindows__CUI__CXaml__CControls__CWebViewNavigationStartingEventArgs* handler,
        EventRegistrationToken* token);
    HRESULT (STDMETHODCALLTYPE* remove_NavigationStarting)(__x_ABI_CWindows_CUI_CXaml_CControls_CIWebView2* This,
        EventRegistrationToken token);
    HRESULT (STDMETHODCALLTYPE* add_ContentLoading)(__x_ABI_CWindows_CUI_CXaml_CControls_CIWebView2* This,
        __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CWebView___x_ABI_CWindows__CUI__CXaml__CControls__CWebViewContentLoadingEventArgs* handler,
        EventRegistrationToken* token);
    HRESULT (STDMETHODCALLTYPE* remove_ContentLoading)(__x_ABI_CWindows_CUI_CXaml_CControls_CIWebView2* This,
        EventRegistrationToken token);
    HRESULT (STDMETHODCALLTYPE* add_DOMContentLoaded)(__x_ABI_CWindows_CUI_CXaml_CControls_CIWebView2* This,
        __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CWebView___x_ABI_CWindows__CUI__CXaml__CControls__CWebViewDOMContentLoadedEventArgs* handler,
        EventRegistrationToken* token);
    HRESULT (STDMETHODCALLTYPE* remove_DOMContentLoaded)(__x_ABI_CWindows_CUI_CXaml_CControls_CIWebView2* This,
        EventRegistrationToken token);
    HRESULT (STDMETHODCALLTYPE* GoForward)(__x_ABI_CWindows_CUI_CXaml_CControls_CIWebView2* This);
    HRESULT (STDMETHODCALLTYPE* GoBack)(__x_ABI_CWindows_CUI_CXaml_CControls_CIWebView2* This);
    HRESULT (STDMETHODCALLTYPE* Refresh)(__x_ABI_CWindows_CUI_CXaml_CControls_CIWebView2* This);
    HRESULT (STDMETHODCALLTYPE* Stop)(__x_ABI_CWindows_CUI_CXaml_CControls_CIWebView2* This);
    HRESULT (STDMETHODCALLTYPE* CapturePreviewToStreamAsync)(__x_ABI_CWindows_CUI_CXaml_CControls_CIWebView2* This,
        __x_ABI_CWindows_CStorage_CStreams_CIRandomAccessStream* stream,
        __x_ABI_CWindows_CFoundation_CIAsyncAction** operation);
    HRESULT (STDMETHODCALLTYPE* InvokeScriptAsync)(__x_ABI_CWindows_CUI_CXaml_CControls_CIWebView2* This,
        HSTRING scriptName,
        __x_ABI_C__FIIterable_1_HSTRING* arguments,
        __x_ABI_C__FIAsyncOperation_1_HSTRING** operation);
    HRESULT (STDMETHODCALLTYPE* CaptureSelectedContentToDataPackageAsync)(__x_ABI_CWindows_CUI_CXaml_CControls_CIWebView2* This,
        __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CDataTransfer__CDataPackage** operation);
    HRESULT (STDMETHODCALLTYPE* NavigateToLocalStreamUri)(__x_ABI_CWindows_CUI_CXaml_CControls_CIWebView2* This,
        __x_ABI_CWindows_CFoundation_CIUriRuntimeClass* source,
        __x_ABI_CWindows_CWeb_CIUriToStreamResolver* streamResolver);
    HRESULT (STDMETHODCALLTYPE* BuildLocalStreamUri)(__x_ABI_CWindows_CUI_CXaml_CControls_CIWebView2* This,
        HSTRING contentIdentifier,
        HSTRING relativePath,
        __x_ABI_CWindows_CFoundation_CIUriRuntimeClass** result);
    HRESULT (STDMETHODCALLTYPE* get_DefaultBackgroundColor)(__x_ABI_CWindows_CUI_CXaml_CControls_CIWebView2* This,
        struct __x_ABI_CWindows_CUI_CColor* value);
    HRESULT (STDMETHODCALLTYPE* put_DefaultBackgroundColor)(__x_ABI_CWindows_CUI_CXaml_CControls_CIWebView2* This,
        struct __x_ABI_CWindows_CUI_CColor value);
    HRESULT (STDMETHODCALLTYPE* add_NavigationCompleted)(__x_ABI_CWindows_CUI_CXaml_CControls_CIWebView2* This,
        __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CWebView___x_ABI_CWindows__CUI__CXaml__CControls__CWebViewNavigationCompletedEventArgs* handler,
        EventRegistrationToken* token);
    HRESULT (STDMETHODCALLTYPE* remove_NavigationCompleted)(__x_ABI_CWindows_CUI_CXaml_CControls_CIWebView2* This,
        EventRegistrationToken token);
    HRESULT (STDMETHODCALLTYPE* add_FrameNavigationStarting)(__x_ABI_CWindows_CUI_CXaml_CControls_CIWebView2* This,
        __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CWebView___x_ABI_CWindows__CUI__CXaml__CControls__CWebViewNavigationStartingEventArgs* handler,
        EventRegistrationToken* token);
    HRESULT (STDMETHODCALLTYPE* remove_FrameNavigationStarting)(__x_ABI_CWindows_CUI_CXaml_CControls_CIWebView2* This,
        EventRegistrationToken token);
    HRESULT (STDMETHODCALLTYPE* add_FrameContentLoading)(__x_ABI_CWindows_CUI_CXaml_CControls_CIWebView2* This,
        __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CWebView___x_ABI_CWindows__CUI__CXaml__CControls__CWebViewContentLoadingEventArgs* handler,
        EventRegistrationToken* token);
    HRESULT (STDMETHODCALLTYPE* remove_FrameContentLoading)(__x_ABI_CWindows_CUI_CXaml_CControls_CIWebView2* This,
        EventRegistrationToken token);
    HRESULT (STDMETHODCALLTYPE* add_FrameDOMContentLoaded)(__x_ABI_CWindows_CUI_CXaml_CControls_CIWebView2* This,
        __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CWebView___x_ABI_CWindows__CUI__CXaml__CControls__CWebViewDOMContentLoadedEventArgs* handler,
        EventRegistrationToken* token);
    HRESULT (STDMETHODCALLTYPE* remove_FrameDOMContentLoaded)(__x_ABI_CWindows_CUI_CXaml_CControls_CIWebView2* This,
        EventRegistrationToken token);
    HRESULT (STDMETHODCALLTYPE* add_FrameNavigationCompleted)(__x_ABI_CWindows_CUI_CXaml_CControls_CIWebView2* This,
        __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CWebView___x_ABI_CWindows__CUI__CXaml__CControls__CWebViewNavigationCompletedEventArgs* handler,
        EventRegistrationToken* token);
    HRESULT (STDMETHODCALLTYPE* remove_FrameNavigationCompleted)(__x_ABI_CWindows_CUI_CXaml_CControls_CIWebView2* This,
        EventRegistrationToken token);
    HRESULT (STDMETHODCALLTYPE* add_LongRunningScriptDetected)(__x_ABI_CWindows_CUI_CXaml_CControls_CIWebView2* This,
        __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CWebView___x_ABI_CWindows__CUI__CXaml__CControls__CWebViewLongRunningScriptDetectedEventArgs* handler,
        EventRegistrationToken* token);
    HRESULT (STDMETHODCALLTYPE* remove_LongRunningScriptDetected)(__x_ABI_CWindows_CUI_CXaml_CControls_CIWebView2* This,
        EventRegistrationToken token);
    HRESULT (STDMETHODCALLTYPE* add_UnsafeContentWarningDisplaying)(__x_ABI_CWindows_CUI_CXaml_CControls_CIWebView2* This,
        __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CWebView_IInspectable* handler,
        EventRegistrationToken* token);
    HRESULT (STDMETHODCALLTYPE* remove_UnsafeContentWarningDisplaying)(__x_ABI_CWindows_CUI_CXaml_CControls_CIWebView2* This,
        EventRegistrationToken token);
    HRESULT (STDMETHODCALLTYPE* add_UnviewableContentIdentified)(__x_ABI_CWindows_CUI_CXaml_CControls_CIWebView2* This,
        __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CWebView___x_ABI_CWindows__CUI__CXaml__CControls__CWebViewUnviewableContentIdentifiedEventArgs* handler,
        EventRegistrationToken* token);
    HRESULT (STDMETHODCALLTYPE* remove_UnviewableContentIdentified)(__x_ABI_CWindows_CUI_CXaml_CControls_CIWebView2* This,
        EventRegistrationToken token);
    HRESULT (STDMETHODCALLTYPE* NavigateWithHttpRequestMessage)(__x_ABI_CWindows_CUI_CXaml_CControls_CIWebView2* This,
        __x_ABI_CWindows_CWeb_CHttp_CIHttpRequestMessage* requestMessage);
    HRESULT (STDMETHODCALLTYPE* Focus)(__x_ABI_CWindows_CUI_CXaml_CControls_CIWebView2* This,
        enum __x_ABI_CWindows_CUI_CXaml_CFocusState value,
        boolean* result);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CIWebView2Vtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CIWebView2
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIWebView2Vtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIWebView2;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIWebView2_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIWebView3_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CControls_CIWebView3_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIWebView3Vtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CControls_CIWebView3* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CControls_CIWebView3* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CControls_CIWebView3* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CControls_CIWebView3* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CControls_CIWebView3* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CControls_CIWebView3* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_ContainsFullScreenElement)(__x_ABI_CWindows_CUI_CXaml_CControls_CIWebView3* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* add_ContainsFullScreenElementChanged)(__x_ABI_CWindows_CUI_CXaml_CControls_CIWebView3* This,
        __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CWebView_IInspectable* handler,
        EventRegistrationToken* token);
    HRESULT (STDMETHODCALLTYPE* remove_ContainsFullScreenElementChanged)(__x_ABI_CWindows_CUI_CXaml_CControls_CIWebView3* This,
        EventRegistrationToken token);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CIWebView3Vtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CIWebView3
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIWebView3Vtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIWebView3;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIWebView3_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIWebView4_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CControls_CIWebView4_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIWebView4Vtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CControls_CIWebView4* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CControls_CIWebView4* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CControls_CIWebView4* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CControls_CIWebView4* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CControls_CIWebView4* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CControls_CIWebView4* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_ExecutionMode)(__x_ABI_CWindows_CUI_CXaml_CControls_CIWebView4* This,
        enum __x_ABI_CWindows_CUI_CXaml_CControls_CWebViewExecutionMode* value);
    HRESULT (STDMETHODCALLTYPE* get_DeferredPermissionRequests)(__x_ABI_CWindows_CUI_CXaml_CControls_CIWebView4* This,
        __x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CXaml__CControls__CWebViewDeferredPermissionRequest** value);
    HRESULT (STDMETHODCALLTYPE* get_Settings)(__x_ABI_CWindows_CUI_CXaml_CControls_CIWebView4* This,
        __x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewSettings** value);
    HRESULT (STDMETHODCALLTYPE* add_UnsupportedUriSchemeIdentified)(__x_ABI_CWindows_CUI_CXaml_CControls_CIWebView4* This,
        __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CWebView___x_ABI_CWindows__CUI__CXaml__CControls__CWebViewUnsupportedUriSchemeIdentifiedEventArgs* handler,
        EventRegistrationToken* token);
    HRESULT (STDMETHODCALLTYPE* remove_UnsupportedUriSchemeIdentified)(__x_ABI_CWindows_CUI_CXaml_CControls_CIWebView4* This,
        EventRegistrationToken token);
    HRESULT (STDMETHODCALLTYPE* add_NewWindowRequested)(__x_ABI_CWindows_CUI_CXaml_CControls_CIWebView4* This,
        __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CWebView___x_ABI_CWindows__CUI__CXaml__CControls__CWebViewNewWindowRequestedEventArgs* handler,
        EventRegistrationToken* token);
    HRESULT (STDMETHODCALLTYPE* remove_NewWindowRequested)(__x_ABI_CWindows_CUI_CXaml_CControls_CIWebView4* This,
        EventRegistrationToken token);
    HRESULT (STDMETHODCALLTYPE* add_PermissionRequested)(__x_ABI_CWindows_CUI_CXaml_CControls_CIWebView4* This,
        __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CWebView___x_ABI_CWindows__CUI__CXaml__CControls__CWebViewPermissionRequestedEventArgs* handler,
        EventRegistrationToken* token);
    HRESULT (STDMETHODCALLTYPE* remove_PermissionRequested)(__x_ABI_CWindows_CUI_CXaml_CControls_CIWebView4* This,
        EventRegistrationToken token);
    HRESULT (STDMETHODCALLTYPE* AddWebAllowedObject)(__x_ABI_CWindows_CUI_CXaml_CControls_CIWebView4* This,
        HSTRING name,
        IInspectable* pObject);
    HRESULT (STDMETHODCALLTYPE* DeferredPermissionRequestById)(__x_ABI_CWindows_CUI_CXaml_CControls_CIWebView4* This,
        UINT32 id,
        __x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewDeferredPermissionRequest** result);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CIWebView4Vtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CIWebView4
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIWebView4Vtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIWebView4;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIWebView4_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIWebView5_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CControls_CIWebView5_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIWebView5Vtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CControls_CIWebView5* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CControls_CIWebView5* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CControls_CIWebView5* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CControls_CIWebView5* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CControls_CIWebView5* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CControls_CIWebView5* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_XYFocusLeft)(__x_ABI_CWindows_CUI_CXaml_CControls_CIWebView5* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyObject** value);
    HRESULT (STDMETHODCALLTYPE* put_XYFocusLeft)(__x_ABI_CWindows_CUI_CXaml_CControls_CIWebView5* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyObject* value);
    HRESULT (STDMETHODCALLTYPE* get_XYFocusRight)(__x_ABI_CWindows_CUI_CXaml_CControls_CIWebView5* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyObject** value);
    HRESULT (STDMETHODCALLTYPE* put_XYFocusRight)(__x_ABI_CWindows_CUI_CXaml_CControls_CIWebView5* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyObject* value);
    HRESULT (STDMETHODCALLTYPE* get_XYFocusUp)(__x_ABI_CWindows_CUI_CXaml_CControls_CIWebView5* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyObject** value);
    HRESULT (STDMETHODCALLTYPE* put_XYFocusUp)(__x_ABI_CWindows_CUI_CXaml_CControls_CIWebView5* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyObject* value);
    HRESULT (STDMETHODCALLTYPE* get_XYFocusDown)(__x_ABI_CWindows_CUI_CXaml_CControls_CIWebView5* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyObject** value);
    HRESULT (STDMETHODCALLTYPE* put_XYFocusDown)(__x_ABI_CWindows_CUI_CXaml_CControls_CIWebView5* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyObject* value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CIWebView5Vtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CIWebView5
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIWebView5Vtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIWebView5;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIWebView5_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIWebView6_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CControls_CIWebView6_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIWebView6Vtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CControls_CIWebView6* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CControls_CIWebView6* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CControls_CIWebView6* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CControls_CIWebView6* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CControls_CIWebView6* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CControls_CIWebView6* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* add_SeparateProcessLost)(__x_ABI_CWindows_CUI_CXaml_CControls_CIWebView6* This,
        __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CWebView___x_ABI_CWindows__CUI__CXaml__CControls__CWebViewSeparateProcessLostEventArgs* handler,
        EventRegistrationToken* token);
    HRESULT (STDMETHODCALLTYPE* remove_SeparateProcessLost)(__x_ABI_CWindows_CUI_CXaml_CControls_CIWebView6* This,
        EventRegistrationToken token);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CIWebView6Vtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CIWebView6
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIWebView6Vtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIWebView6;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIWebView6_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIWebView7_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CControls_CIWebView7_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIWebView7Vtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CControls_CIWebView7* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CControls_CIWebView7* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CControls_CIWebView7* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CControls_CIWebView7* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CControls_CIWebView7* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CControls_CIWebView7* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* add_WebResourceRequested)(__x_ABI_CWindows_CUI_CXaml_CControls_CIWebView7* This,
        __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CControls__CWebView___x_ABI_CWindows__CUI__CXaml__CControls__CWebViewWebResourceRequestedEventArgs* handler,
        EventRegistrationToken* token);
    HRESULT (STDMETHODCALLTYPE* remove_WebResourceRequested)(__x_ABI_CWindows_CUI_CXaml_CControls_CIWebView7* This,
        EventRegistrationToken token);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CIWebView7Vtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CIWebView7
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIWebView7Vtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIWebView7;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIWebView7_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewBrush_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewBrush_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewBrushVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewBrush* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewBrush* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewBrush* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewBrush* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewBrush* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewBrush* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_SourceName)(__x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewBrush* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* put_SourceName)(__x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewBrush* This,
        HSTRING value);
    HRESULT (STDMETHODCALLTYPE* Redraw)(__x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewBrush* This);
    HRESULT (STDMETHODCALLTYPE* SetSource)(__x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewBrush* This,
        __x_ABI_CWindows_CUI_CXaml_CControls_CIWebView* source);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewBrushVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewBrush
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewBrushVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewBrush;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewBrush_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewBrushStatics_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewBrushStatics_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewBrushStaticsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewBrushStatics* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewBrushStatics* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewBrushStatics* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewBrushStatics* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewBrushStatics* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewBrushStatics* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_SourceNameProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewBrushStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewBrushStaticsVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewBrushStatics
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewBrushStaticsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewBrushStatics;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewBrushStatics_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewContentLoadingEventArgs_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewContentLoadingEventArgs_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewContentLoadingEventArgsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewContentLoadingEventArgs* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewContentLoadingEventArgs* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewContentLoadingEventArgs* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewContentLoadingEventArgs* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewContentLoadingEventArgs* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewContentLoadingEventArgs* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Uri)(__x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewContentLoadingEventArgs* This,
        __x_ABI_CWindows_CFoundation_CIUriRuntimeClass** value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewContentLoadingEventArgsVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewContentLoadingEventArgs
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewContentLoadingEventArgsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewContentLoadingEventArgs;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewContentLoadingEventArgs_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewDOMContentLoadedEventArgs_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewDOMContentLoadedEventArgs_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewDOMContentLoadedEventArgsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewDOMContentLoadedEventArgs* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewDOMContentLoadedEventArgs* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewDOMContentLoadedEventArgs* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewDOMContentLoadedEventArgs* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewDOMContentLoadedEventArgs* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewDOMContentLoadedEventArgs* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Uri)(__x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewDOMContentLoadedEventArgs* This,
        __x_ABI_CWindows_CFoundation_CIUriRuntimeClass** value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewDOMContentLoadedEventArgsVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewDOMContentLoadedEventArgs
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewDOMContentLoadedEventArgsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewDOMContentLoadedEventArgs;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewDOMContentLoadedEventArgs_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewDeferredPermissionRequest_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewDeferredPermissionRequest_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewDeferredPermissionRequestVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewDeferredPermissionRequest* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewDeferredPermissionRequest* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewDeferredPermissionRequest* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewDeferredPermissionRequest* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewDeferredPermissionRequest* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewDeferredPermissionRequest* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Uri)(__x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewDeferredPermissionRequest* This,
        __x_ABI_CWindows_CFoundation_CIUriRuntimeClass** value);
    HRESULT (STDMETHODCALLTYPE* get_PermissionType)(__x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewDeferredPermissionRequest* This,
        enum __x_ABI_CWindows_CUI_CXaml_CControls_CWebViewPermissionType* value);
    HRESULT (STDMETHODCALLTYPE* get_Id)(__x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewDeferredPermissionRequest* This,
        UINT32* value);
    HRESULT (STDMETHODCALLTYPE* Allow)(__x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewDeferredPermissionRequest* This);
    HRESULT (STDMETHODCALLTYPE* Deny)(__x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewDeferredPermissionRequest* This);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewDeferredPermissionRequestVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewDeferredPermissionRequest
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewDeferredPermissionRequestVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewDeferredPermissionRequest;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewDeferredPermissionRequest_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewFactory4_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewFactory4_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewFactory4Vtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewFactory4* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewFactory4* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewFactory4* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewFactory4* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewFactory4* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewFactory4* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* CreateInstanceWithExecutionMode)(__x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewFactory4* This,
        enum __x_ABI_CWindows_CUI_CXaml_CControls_CWebViewExecutionMode executionMode,
        __x_ABI_CWindows_CUI_CXaml_CControls_CIWebView** value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewFactory4Vtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewFactory4
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewFactory4Vtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewFactory4;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewFactory4_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewLongRunningScriptDetectedEventArgs_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewLongRunningScriptDetectedEventArgs_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewLongRunningScriptDetectedEventArgsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewLongRunningScriptDetectedEventArgs* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewLongRunningScriptDetectedEventArgs* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewLongRunningScriptDetectedEventArgs* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewLongRunningScriptDetectedEventArgs* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewLongRunningScriptDetectedEventArgs* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewLongRunningScriptDetectedEventArgs* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_ExecutionTime)(__x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewLongRunningScriptDetectedEventArgs* This,
        struct __x_ABI_CWindows_CFoundation_CTimeSpan* value);
    HRESULT (STDMETHODCALLTYPE* get_StopPageScriptExecution)(__x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewLongRunningScriptDetectedEventArgs* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* put_StopPageScriptExecution)(__x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewLongRunningScriptDetectedEventArgs* This,
        boolean value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewLongRunningScriptDetectedEventArgsVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewLongRunningScriptDetectedEventArgs
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewLongRunningScriptDetectedEventArgsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewLongRunningScriptDetectedEventArgs;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewLongRunningScriptDetectedEventArgs_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewNavigationCompletedEventArgs_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewNavigationCompletedEventArgs_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewNavigationCompletedEventArgsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewNavigationCompletedEventArgs* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewNavigationCompletedEventArgs* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewNavigationCompletedEventArgs* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewNavigationCompletedEventArgs* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewNavigationCompletedEventArgs* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewNavigationCompletedEventArgs* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Uri)(__x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewNavigationCompletedEventArgs* This,
        __x_ABI_CWindows_CFoundation_CIUriRuntimeClass** value);
    HRESULT (STDMETHODCALLTYPE* get_IsSuccess)(__x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewNavigationCompletedEventArgs* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* get_WebErrorStatus)(__x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewNavigationCompletedEventArgs* This,
        enum __x_ABI_CWindows_CWeb_CWebErrorStatus* value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewNavigationCompletedEventArgsVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewNavigationCompletedEventArgs
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewNavigationCompletedEventArgsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewNavigationCompletedEventArgs;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewNavigationCompletedEventArgs_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewNavigationFailedEventArgs_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewNavigationFailedEventArgs_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewNavigationFailedEventArgsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewNavigationFailedEventArgs* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewNavigationFailedEventArgs* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewNavigationFailedEventArgs* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewNavigationFailedEventArgs* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewNavigationFailedEventArgs* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewNavigationFailedEventArgs* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Uri)(__x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewNavigationFailedEventArgs* This,
        __x_ABI_CWindows_CFoundation_CIUriRuntimeClass** value);
    HRESULT (STDMETHODCALLTYPE* get_WebErrorStatus)(__x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewNavigationFailedEventArgs* This,
        enum __x_ABI_CWindows_CWeb_CWebErrorStatus* value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewNavigationFailedEventArgsVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewNavigationFailedEventArgs
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewNavigationFailedEventArgsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewNavigationFailedEventArgs;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewNavigationFailedEventArgs_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewNavigationStartingEventArgs_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewNavigationStartingEventArgs_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewNavigationStartingEventArgsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewNavigationStartingEventArgs* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewNavigationStartingEventArgs* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewNavigationStartingEventArgs* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewNavigationStartingEventArgs* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewNavigationStartingEventArgs* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewNavigationStartingEventArgs* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Uri)(__x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewNavigationStartingEventArgs* This,
        __x_ABI_CWindows_CFoundation_CIUriRuntimeClass** value);
    HRESULT (STDMETHODCALLTYPE* get_Cancel)(__x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewNavigationStartingEventArgs* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* put_Cancel)(__x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewNavigationStartingEventArgs* This,
        boolean value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewNavigationStartingEventArgsVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewNavigationStartingEventArgs
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewNavigationStartingEventArgsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewNavigationStartingEventArgs;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewNavigationStartingEventArgs_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewNewWindowRequestedEventArgs_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewNewWindowRequestedEventArgs_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewNewWindowRequestedEventArgsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewNewWindowRequestedEventArgs* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewNewWindowRequestedEventArgs* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewNewWindowRequestedEventArgs* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewNewWindowRequestedEventArgs* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewNewWindowRequestedEventArgs* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewNewWindowRequestedEventArgs* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Uri)(__x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewNewWindowRequestedEventArgs* This,
        __x_ABI_CWindows_CFoundation_CIUriRuntimeClass** value);
    HRESULT (STDMETHODCALLTYPE* get_Referrer)(__x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewNewWindowRequestedEventArgs* This,
        __x_ABI_CWindows_CFoundation_CIUriRuntimeClass** value);
    HRESULT (STDMETHODCALLTYPE* get_Handled)(__x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewNewWindowRequestedEventArgs* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* put_Handled)(__x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewNewWindowRequestedEventArgs* This,
        boolean value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewNewWindowRequestedEventArgsVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewNewWindowRequestedEventArgs
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewNewWindowRequestedEventArgsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewNewWindowRequestedEventArgs;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewNewWindowRequestedEventArgs_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewPermissionRequest_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewPermissionRequest_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewPermissionRequestVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewPermissionRequest* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewPermissionRequest* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewPermissionRequest* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewPermissionRequest* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewPermissionRequest* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewPermissionRequest* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Uri)(__x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewPermissionRequest* This,
        __x_ABI_CWindows_CFoundation_CIUriRuntimeClass** value);
    HRESULT (STDMETHODCALLTYPE* get_PermissionType)(__x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewPermissionRequest* This,
        enum __x_ABI_CWindows_CUI_CXaml_CControls_CWebViewPermissionType* value);
    HRESULT (STDMETHODCALLTYPE* get_Id)(__x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewPermissionRequest* This,
        UINT32* value);
    HRESULT (STDMETHODCALLTYPE* get_State)(__x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewPermissionRequest* This,
        enum __x_ABI_CWindows_CUI_CXaml_CControls_CWebViewPermissionState* value);
    HRESULT (STDMETHODCALLTYPE* Defer)(__x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewPermissionRequest* This);
    HRESULT (STDMETHODCALLTYPE* Allow)(__x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewPermissionRequest* This);
    HRESULT (STDMETHODCALLTYPE* Deny)(__x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewPermissionRequest* This);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewPermissionRequestVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewPermissionRequest
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewPermissionRequestVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewPermissionRequest;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewPermissionRequest_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewPermissionRequestedEventArgs_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewPermissionRequestedEventArgs_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewPermissionRequestedEventArgsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewPermissionRequestedEventArgs* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewPermissionRequestedEventArgs* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewPermissionRequestedEventArgs* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewPermissionRequestedEventArgs* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewPermissionRequestedEventArgs* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewPermissionRequestedEventArgs* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_PermissionRequest)(__x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewPermissionRequestedEventArgs* This,
        __x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewPermissionRequest** value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewPermissionRequestedEventArgsVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewPermissionRequestedEventArgs
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewPermissionRequestedEventArgsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewPermissionRequestedEventArgs;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewPermissionRequestedEventArgs_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewSeparateProcessLostEventArgs_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewSeparateProcessLostEventArgs_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewSeparateProcessLostEventArgsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewSeparateProcessLostEventArgs* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewSeparateProcessLostEventArgs* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewSeparateProcessLostEventArgs* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewSeparateProcessLostEventArgs* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewSeparateProcessLostEventArgs* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewSeparateProcessLostEventArgs* This,
            TrustLevel* trustLevel);
    
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewSeparateProcessLostEventArgsVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewSeparateProcessLostEventArgs
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewSeparateProcessLostEventArgsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewSeparateProcessLostEventArgs;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewSeparateProcessLostEventArgs_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewSettings_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewSettings_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewSettingsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewSettings* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewSettings* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewSettings* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewSettings* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewSettings* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewSettings* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_IsJavaScriptEnabled)(__x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewSettings* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* put_IsJavaScriptEnabled)(__x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewSettings* This,
        boolean value);
    HRESULT (STDMETHODCALLTYPE* get_IsIndexedDBEnabled)(__x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewSettings* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* put_IsIndexedDBEnabled)(__x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewSettings* This,
        boolean value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewSettingsVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewSettings
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewSettingsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewSettings;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewSettings_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewStatics_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewStatics_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewStaticsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewStatics* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewStatics* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewStatics* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewStatics* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewStatics* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewStatics* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_AnyScriptNotifyUri)(__x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewStatics* This,
        __x_ABI_C__FIVector_1___x_ABI_CWindows__CFoundation__CUri** value);
    HRESULT (STDMETHODCALLTYPE* get_SourceProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_AllowedScriptNotifyUrisProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_DataTransferPackageProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewStaticsVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewStatics
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewStaticsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewStatics;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewStatics_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewStatics2_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewStatics2_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewStatics2Vtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewStatics2* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewStatics2* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewStatics2* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewStatics2* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewStatics2* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewStatics2* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_CanGoBackProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewStatics2* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_CanGoForwardProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewStatics2* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_DocumentTitleProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewStatics2* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_DefaultBackgroundColorProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewStatics2* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewStatics2Vtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewStatics2
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewStatics2Vtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewStatics2;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewStatics2_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewStatics3_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewStatics3_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewStatics3Vtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewStatics3* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewStatics3* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewStatics3* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewStatics3* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewStatics3* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewStatics3* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_ContainsFullScreenElementProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewStatics3* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewStatics3Vtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewStatics3
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewStatics3Vtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewStatics3;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewStatics3_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewStatics4_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewStatics4_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewStatics4Vtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewStatics4* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewStatics4* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewStatics4* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewStatics4* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewStatics4* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewStatics4* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_DefaultExecutionMode)(__x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewStatics4* This,
        enum __x_ABI_CWindows_CUI_CXaml_CControls_CWebViewExecutionMode* value);
    HRESULT (STDMETHODCALLTYPE* ClearTemporaryWebDataAsync)(__x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewStatics4* This,
        __x_ABI_CWindows_CFoundation_CIAsyncAction** operation);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewStatics4Vtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewStatics4
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewStatics4Vtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewStatics4;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewStatics4_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewStatics5_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewStatics5_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewStatics5Vtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewStatics5* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewStatics5* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewStatics5* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewStatics5* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewStatics5* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewStatics5* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_XYFocusLeftProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewStatics5* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_XYFocusRightProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewStatics5* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_XYFocusUpProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewStatics5* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_XYFocusDownProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewStatics5* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewStatics5Vtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewStatics5
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewStatics5Vtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewStatics5;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewStatics5_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewUnsupportedUriSchemeIdentifiedEventArgs_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewUnsupportedUriSchemeIdentifiedEventArgs_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewUnsupportedUriSchemeIdentifiedEventArgsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewUnsupportedUriSchemeIdentifiedEventArgs* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewUnsupportedUriSchemeIdentifiedEventArgs* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewUnsupportedUriSchemeIdentifiedEventArgs* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewUnsupportedUriSchemeIdentifiedEventArgs* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewUnsupportedUriSchemeIdentifiedEventArgs* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewUnsupportedUriSchemeIdentifiedEventArgs* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Uri)(__x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewUnsupportedUriSchemeIdentifiedEventArgs* This,
        __x_ABI_CWindows_CFoundation_CIUriRuntimeClass** value);
    HRESULT (STDMETHODCALLTYPE* get_Handled)(__x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewUnsupportedUriSchemeIdentifiedEventArgs* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* put_Handled)(__x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewUnsupportedUriSchemeIdentifiedEventArgs* This,
        boolean value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewUnsupportedUriSchemeIdentifiedEventArgsVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewUnsupportedUriSchemeIdentifiedEventArgs
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewUnsupportedUriSchemeIdentifiedEventArgsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewUnsupportedUriSchemeIdentifiedEventArgs;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewUnsupportedUriSchemeIdentifiedEventArgs_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewUnviewableContentIdentifiedEventArgs_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewUnviewableContentIdentifiedEventArgs_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewUnviewableContentIdentifiedEventArgsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewUnviewableContentIdentifiedEventArgs* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewUnviewableContentIdentifiedEventArgs* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewUnviewableContentIdentifiedEventArgs* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewUnviewableContentIdentifiedEventArgs* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewUnviewableContentIdentifiedEventArgs* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewUnviewableContentIdentifiedEventArgs* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Uri)(__x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewUnviewableContentIdentifiedEventArgs* This,
        __x_ABI_CWindows_CFoundation_CIUriRuntimeClass** value);
    HRESULT (STDMETHODCALLTYPE* get_Referrer)(__x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewUnviewableContentIdentifiedEventArgs* This,
        __x_ABI_CWindows_CFoundation_CIUriRuntimeClass** value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewUnviewableContentIdentifiedEventArgsVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewUnviewableContentIdentifiedEventArgs
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewUnviewableContentIdentifiedEventArgsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewUnviewableContentIdentifiedEventArgs;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewUnviewableContentIdentifiedEventArgs_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewUnviewableContentIdentifiedEventArgs2_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewUnviewableContentIdentifiedEventArgs2_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewUnviewableContentIdentifiedEventArgs2Vtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewUnviewableContentIdentifiedEventArgs2* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewUnviewableContentIdentifiedEventArgs2* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewUnviewableContentIdentifiedEventArgs2* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewUnviewableContentIdentifiedEventArgs2* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewUnviewableContentIdentifiedEventArgs2* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewUnviewableContentIdentifiedEventArgs2* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_MediaType)(__x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewUnviewableContentIdentifiedEventArgs2* This,
        HSTRING* value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewUnviewableContentIdentifiedEventArgs2Vtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewUnviewableContentIdentifiedEventArgs2
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewUnviewableContentIdentifiedEventArgs2Vtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewUnviewableContentIdentifiedEventArgs2;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewUnviewableContentIdentifiedEventArgs2_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewWebResourceRequestedEventArgs_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewWebResourceRequestedEventArgs_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewWebResourceRequestedEventArgsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewWebResourceRequestedEventArgs* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewWebResourceRequestedEventArgs* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewWebResourceRequestedEventArgs* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewWebResourceRequestedEventArgs* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewWebResourceRequestedEventArgs* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewWebResourceRequestedEventArgs* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Request)(__x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewWebResourceRequestedEventArgs* This,
        __x_ABI_CWindows_CWeb_CHttp_CIHttpRequestMessage** value);
    HRESULT (STDMETHODCALLTYPE* get_Response)(__x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewWebResourceRequestedEventArgs* This,
        __x_ABI_CWindows_CWeb_CHttp_CIHttpResponseMessage** value);
    HRESULT (STDMETHODCALLTYPE* put_Response)(__x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewWebResourceRequestedEventArgs* This,
        __x_ABI_CWindows_CWeb_CHttp_CIHttpResponseMessage* value);
    HRESULT (STDMETHODCALLTYPE* GetDeferral)(__x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewWebResourceRequestedEventArgs* This,
        __x_ABI_CWindows_CFoundation_CIDeferral** result);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewWebResourceRequestedEventArgsVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewWebResourceRequestedEventArgs
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewWebResourceRequestedEventArgsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewWebResourceRequestedEventArgs;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewWebResourceRequestedEventArgs_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIWrapGrid_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CControls_CIWrapGrid_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIWrapGridVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CControls_CIWrapGrid* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CControls_CIWrapGrid* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CControls_CIWrapGrid* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CControls_CIWrapGrid* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CControls_CIWrapGrid* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CControls_CIWrapGrid* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_ItemWidth)(__x_ABI_CWindows_CUI_CXaml_CControls_CIWrapGrid* This,
        DOUBLE* value);
    HRESULT (STDMETHODCALLTYPE* put_ItemWidth)(__x_ABI_CWindows_CUI_CXaml_CControls_CIWrapGrid* This,
        DOUBLE value);
    HRESULT (STDMETHODCALLTYPE* get_ItemHeight)(__x_ABI_CWindows_CUI_CXaml_CControls_CIWrapGrid* This,
        DOUBLE* value);
    HRESULT (STDMETHODCALLTYPE* put_ItemHeight)(__x_ABI_CWindows_CUI_CXaml_CControls_CIWrapGrid* This,
        DOUBLE value);
    HRESULT (STDMETHODCALLTYPE* get_Orientation)(__x_ABI_CWindows_CUI_CXaml_CControls_CIWrapGrid* This,
        enum __x_ABI_CWindows_CUI_CXaml_CControls_COrientation* value);
    HRESULT (STDMETHODCALLTYPE* put_Orientation)(__x_ABI_CWindows_CUI_CXaml_CControls_CIWrapGrid* This,
        enum __x_ABI_CWindows_CUI_CXaml_CControls_COrientation value);
    HRESULT (STDMETHODCALLTYPE* get_HorizontalChildrenAlignment)(__x_ABI_CWindows_CUI_CXaml_CControls_CIWrapGrid* This,
        enum __x_ABI_CWindows_CUI_CXaml_CHorizontalAlignment* value);
    HRESULT (STDMETHODCALLTYPE* put_HorizontalChildrenAlignment)(__x_ABI_CWindows_CUI_CXaml_CControls_CIWrapGrid* This,
        enum __x_ABI_CWindows_CUI_CXaml_CHorizontalAlignment value);
    HRESULT (STDMETHODCALLTYPE* get_VerticalChildrenAlignment)(__x_ABI_CWindows_CUI_CXaml_CControls_CIWrapGrid* This,
        enum __x_ABI_CWindows_CUI_CXaml_CVerticalAlignment* value);
    HRESULT (STDMETHODCALLTYPE* put_VerticalChildrenAlignment)(__x_ABI_CWindows_CUI_CXaml_CControls_CIWrapGrid* This,
        enum __x_ABI_CWindows_CUI_CXaml_CVerticalAlignment value);
    HRESULT (STDMETHODCALLTYPE* get_MaximumRowsOrColumns)(__x_ABI_CWindows_CUI_CXaml_CControls_CIWrapGrid* This,
        INT32* value);
    HRESULT (STDMETHODCALLTYPE* put_MaximumRowsOrColumns)(__x_ABI_CWindows_CUI_CXaml_CControls_CIWrapGrid* This,
        INT32 value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CIWrapGridVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CIWrapGrid
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIWrapGridVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIWrapGrid;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIWrapGrid_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIWrapGridStatics_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CControls_CIWrapGridStatics_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIWrapGridStaticsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CControls_CIWrapGridStatics* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CControls_CIWrapGridStatics* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CControls_CIWrapGridStatics* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CControls_CIWrapGridStatics* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CControls_CIWrapGridStatics* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CControls_CIWrapGridStatics* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_ItemWidthProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CIWrapGridStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_ItemHeightProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CIWrapGridStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_OrientationProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CIWrapGridStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_HorizontalChildrenAlignmentProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CIWrapGridStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_VerticalChildrenAlignmentProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CIWrapGridStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_MaximumRowsOrColumnsProperty)(__x_ABI_CWindows_CUI_CXaml_CControls_CIWrapGridStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CIWrapGridStaticsVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CIWrapGridStatics
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIWrapGridStaticsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIWrapGridStatics;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIWrapGridStatics_INTERFACE_DEFINED__) */
    
