// WARNING: Please don't edit this file. It was generated by Swift/WinRT v0.0.1

#pragma once
// Header files for imported files
#include <inspectable.h>
#include <EventToken.h>
#include <windowscontracts.h>
#include "Windows.Foundation.h"
#include "Windows.ApplicationModel.h"
#include "Windows.ApplicationModel.Activation.h"
#include "Windows.System.h"
#include "Windows.UI.Core.h"
// Importing Collections header
#include "Windows.Foundation.Collections.h"

/* Forward Declarations */
#ifndef ____x_ABI_CWindows_CApplicationModel_CCore_CIAppListEntry_FWD_DEFINED__
#define ____x_ABI_CWindows_CApplicationModel_CCore_CIAppListEntry_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CApplicationModel_CCore_CIAppListEntry __x_ABI_CWindows_CApplicationModel_CCore_CIAppListEntry;

#endif // ____x_ABI_CWindows_CApplicationModel_CCore_CIAppListEntry_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CApplicationModel_CCore_CIAppListEntry2_FWD_DEFINED__
#define ____x_ABI_CWindows_CApplicationModel_CCore_CIAppListEntry2_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CApplicationModel_CCore_CIAppListEntry2 __x_ABI_CWindows_CApplicationModel_CCore_CIAppListEntry2;

#endif // ____x_ABI_CWindows_CApplicationModel_CCore_CIAppListEntry2_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CApplicationModel_CCore_CIAppListEntry3_FWD_DEFINED__
#define ____x_ABI_CWindows_CApplicationModel_CCore_CIAppListEntry3_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CApplicationModel_CCore_CIAppListEntry3 __x_ABI_CWindows_CApplicationModel_CCore_CIAppListEntry3;

#endif // ____x_ABI_CWindows_CApplicationModel_CCore_CIAppListEntry3_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CApplicationModel_CCore_CICoreApplication_FWD_DEFINED__
#define ____x_ABI_CWindows_CApplicationModel_CCore_CICoreApplication_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CApplicationModel_CCore_CICoreApplication __x_ABI_CWindows_CApplicationModel_CCore_CICoreApplication;

#endif // ____x_ABI_CWindows_CApplicationModel_CCore_CICoreApplication_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CApplicationModel_CCore_CICoreApplication2_FWD_DEFINED__
#define ____x_ABI_CWindows_CApplicationModel_CCore_CICoreApplication2_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CApplicationModel_CCore_CICoreApplication2 __x_ABI_CWindows_CApplicationModel_CCore_CICoreApplication2;

#endif // ____x_ABI_CWindows_CApplicationModel_CCore_CICoreApplication2_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CApplicationModel_CCore_CICoreApplication3_FWD_DEFINED__
#define ____x_ABI_CWindows_CApplicationModel_CCore_CICoreApplication3_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CApplicationModel_CCore_CICoreApplication3 __x_ABI_CWindows_CApplicationModel_CCore_CICoreApplication3;

#endif // ____x_ABI_CWindows_CApplicationModel_CCore_CICoreApplication3_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CApplicationModel_CCore_CICoreApplicationExit_FWD_DEFINED__
#define ____x_ABI_CWindows_CApplicationModel_CCore_CICoreApplicationExit_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CApplicationModel_CCore_CICoreApplicationExit __x_ABI_CWindows_CApplicationModel_CCore_CICoreApplicationExit;

#endif // ____x_ABI_CWindows_CApplicationModel_CCore_CICoreApplicationExit_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CApplicationModel_CCore_CICoreApplicationUnhandledError_FWD_DEFINED__
#define ____x_ABI_CWindows_CApplicationModel_CCore_CICoreApplicationUnhandledError_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CApplicationModel_CCore_CICoreApplicationUnhandledError __x_ABI_CWindows_CApplicationModel_CCore_CICoreApplicationUnhandledError;

#endif // ____x_ABI_CWindows_CApplicationModel_CCore_CICoreApplicationUnhandledError_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CApplicationModel_CCore_CICoreApplicationUseCount_FWD_DEFINED__
#define ____x_ABI_CWindows_CApplicationModel_CCore_CICoreApplicationUseCount_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CApplicationModel_CCore_CICoreApplicationUseCount __x_ABI_CWindows_CApplicationModel_CCore_CICoreApplicationUseCount;

#endif // ____x_ABI_CWindows_CApplicationModel_CCore_CICoreApplicationUseCount_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CApplicationModel_CCore_CICoreApplicationView_FWD_DEFINED__
#define ____x_ABI_CWindows_CApplicationModel_CCore_CICoreApplicationView_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CApplicationModel_CCore_CICoreApplicationView __x_ABI_CWindows_CApplicationModel_CCore_CICoreApplicationView;

#endif // ____x_ABI_CWindows_CApplicationModel_CCore_CICoreApplicationView_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CApplicationModel_CCore_CICoreApplicationView2_FWD_DEFINED__
#define ____x_ABI_CWindows_CApplicationModel_CCore_CICoreApplicationView2_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CApplicationModel_CCore_CICoreApplicationView2 __x_ABI_CWindows_CApplicationModel_CCore_CICoreApplicationView2;

#endif // ____x_ABI_CWindows_CApplicationModel_CCore_CICoreApplicationView2_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CApplicationModel_CCore_CICoreApplicationView3_FWD_DEFINED__
#define ____x_ABI_CWindows_CApplicationModel_CCore_CICoreApplicationView3_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CApplicationModel_CCore_CICoreApplicationView3 __x_ABI_CWindows_CApplicationModel_CCore_CICoreApplicationView3;

#endif // ____x_ABI_CWindows_CApplicationModel_CCore_CICoreApplicationView3_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CApplicationModel_CCore_CICoreApplicationView5_FWD_DEFINED__
#define ____x_ABI_CWindows_CApplicationModel_CCore_CICoreApplicationView5_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CApplicationModel_CCore_CICoreApplicationView5 __x_ABI_CWindows_CApplicationModel_CCore_CICoreApplicationView5;

#endif // ____x_ABI_CWindows_CApplicationModel_CCore_CICoreApplicationView5_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CApplicationModel_CCore_CICoreApplicationView6_FWD_DEFINED__
#define ____x_ABI_CWindows_CApplicationModel_CCore_CICoreApplicationView6_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CApplicationModel_CCore_CICoreApplicationView6 __x_ABI_CWindows_CApplicationModel_CCore_CICoreApplicationView6;

#endif // ____x_ABI_CWindows_CApplicationModel_CCore_CICoreApplicationView6_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CApplicationModel_CCore_CICoreApplicationViewTitleBar_FWD_DEFINED__
#define ____x_ABI_CWindows_CApplicationModel_CCore_CICoreApplicationViewTitleBar_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CApplicationModel_CCore_CICoreApplicationViewTitleBar __x_ABI_CWindows_CApplicationModel_CCore_CICoreApplicationViewTitleBar;

#endif // ____x_ABI_CWindows_CApplicationModel_CCore_CICoreApplicationViewTitleBar_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CApplicationModel_CCore_CICoreImmersiveApplication_FWD_DEFINED__
#define ____x_ABI_CWindows_CApplicationModel_CCore_CICoreImmersiveApplication_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CApplicationModel_CCore_CICoreImmersiveApplication __x_ABI_CWindows_CApplicationModel_CCore_CICoreImmersiveApplication;

#endif // ____x_ABI_CWindows_CApplicationModel_CCore_CICoreImmersiveApplication_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CApplicationModel_CCore_CICoreImmersiveApplication2_FWD_DEFINED__
#define ____x_ABI_CWindows_CApplicationModel_CCore_CICoreImmersiveApplication2_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CApplicationModel_CCore_CICoreImmersiveApplication2 __x_ABI_CWindows_CApplicationModel_CCore_CICoreImmersiveApplication2;

#endif // ____x_ABI_CWindows_CApplicationModel_CCore_CICoreImmersiveApplication2_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CApplicationModel_CCore_CICoreImmersiveApplication3_FWD_DEFINED__
#define ____x_ABI_CWindows_CApplicationModel_CCore_CICoreImmersiveApplication3_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CApplicationModel_CCore_CICoreImmersiveApplication3 __x_ABI_CWindows_CApplicationModel_CCore_CICoreImmersiveApplication3;

#endif // ____x_ABI_CWindows_CApplicationModel_CCore_CICoreImmersiveApplication3_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CApplicationModel_CCore_CIFrameworkView_FWD_DEFINED__
#define ____x_ABI_CWindows_CApplicationModel_CCore_CIFrameworkView_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CApplicationModel_CCore_CIFrameworkView __x_ABI_CWindows_CApplicationModel_CCore_CIFrameworkView;

#endif // ____x_ABI_CWindows_CApplicationModel_CCore_CIFrameworkView_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CApplicationModel_CCore_CIFrameworkViewSource_FWD_DEFINED__
#define ____x_ABI_CWindows_CApplicationModel_CCore_CIFrameworkViewSource_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CApplicationModel_CCore_CIFrameworkViewSource __x_ABI_CWindows_CApplicationModel_CCore_CIFrameworkViewSource;

#endif // ____x_ABI_CWindows_CApplicationModel_CCore_CIFrameworkViewSource_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CApplicationModel_CCore_CIHostedViewClosingEventArgs_FWD_DEFINED__
#define ____x_ABI_CWindows_CApplicationModel_CCore_CIHostedViewClosingEventArgs_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CApplicationModel_CCore_CIHostedViewClosingEventArgs __x_ABI_CWindows_CApplicationModel_CCore_CIHostedViewClosingEventArgs;

#endif // ____x_ABI_CWindows_CApplicationModel_CCore_CIHostedViewClosingEventArgs_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CApplicationModel_CCore_CIUnhandledError_FWD_DEFINED__
#define ____x_ABI_CWindows_CApplicationModel_CCore_CIUnhandledError_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CApplicationModel_CCore_CIUnhandledError __x_ABI_CWindows_CApplicationModel_CCore_CIUnhandledError;

#endif // ____x_ABI_CWindows_CApplicationModel_CCore_CIUnhandledError_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CApplicationModel_CCore_CIUnhandledErrorDetectedEventArgs_FWD_DEFINED__
#define ____x_ABI_CWindows_CApplicationModel_CCore_CIUnhandledErrorDetectedEventArgs_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CApplicationModel_CCore_CIUnhandledErrorDetectedEventArgs __x_ABI_CWindows_CApplicationModel_CCore_CIUnhandledErrorDetectedEventArgs;

#endif // ____x_ABI_CWindows_CApplicationModel_CCore_CIUnhandledErrorDetectedEventArgs_FWD_DEFINED__

// Parameterized interface forward declarations (C)

// Collection interface definitions

typedef interface __x_ABI_C__FIAsyncOperationCompletedHandler_1_boolean __x_ABI_C__FIAsyncOperationCompletedHandler_1_boolean;

#if !defined(____x_ABI_C__FIAsyncOperation_1_boolean_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIAsyncOperation_1_boolean_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIAsyncOperation_1_boolean __x_ABI_C__FIAsyncOperation_1_boolean;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIAsyncOperation_1_boolean;

    typedef struct __x_ABI_C__FIAsyncOperation_1_booleanVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIAsyncOperation_1_boolean* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIAsyncOperation_1_boolean* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIAsyncOperation_1_boolean* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIAsyncOperation_1_boolean* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIAsyncOperation_1_boolean* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIAsyncOperation_1_boolean* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* put_Completed)(__x_ABI_C__FIAsyncOperation_1_boolean* This,
        __x_ABI_C__FIAsyncOperationCompletedHandler_1_boolean* handler);
    HRESULT (STDMETHODCALLTYPE* get_Completed)(__x_ABI_C__FIAsyncOperation_1_boolean* This,
        __x_ABI_C__FIAsyncOperationCompletedHandler_1_boolean** result);
    HRESULT (STDMETHODCALLTYPE* GetResults)(__x_ABI_C__FIAsyncOperation_1_boolean* This,
        boolean* result);

        END_INTERFACE
    } __x_ABI_C__FIAsyncOperation_1_booleanVtbl;

    interface __x_ABI_C__FIAsyncOperation_1_boolean
    {
        CONST_VTBL struct __x_ABI_C__FIAsyncOperation_1_booleanVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIAsyncOperation_1_boolean_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIAsyncOperationCompletedHandler_1_boolean_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIAsyncOperationCompletedHandler_1_boolean_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIAsyncOperationCompletedHandler_1_boolean __x_ABI_C__FIAsyncOperationCompletedHandler_1_boolean;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIAsyncOperationCompletedHandler_1_boolean;

    typedef struct __x_ABI_C__FIAsyncOperationCompletedHandler_1_booleanVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIAsyncOperationCompletedHandler_1_boolean* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIAsyncOperationCompletedHandler_1_boolean* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIAsyncOperationCompletedHandler_1_boolean* This);
        HRESULT (STDMETHODCALLTYPE* Invoke)(__x_ABI_C__FIAsyncOperationCompletedHandler_1_boolean* This,
        __x_ABI_C__FIAsyncOperation_1_boolean* asyncInfo,
        enum __x_ABI_CWindows_CFoundation_CAsyncStatus asyncStatus);

        END_INTERFACE
    } __x_ABI_C__FIAsyncOperationCompletedHandler_1_booleanVtbl;

    interface __x_ABI_C__FIAsyncOperationCompletedHandler_1_boolean
    {
        CONST_VTBL struct __x_ABI_C__FIAsyncOperationCompletedHandler_1_booleanVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIAsyncOperationCompletedHandler_1_boolean_INTERFACE_DEFINED__
    
typedef enum __x_ABI_CWindows_CApplicationModel_CCore_CAppRestartFailureReason __x_ABI_CWindows_CApplicationModel_CCore_CAppRestartFailureReason;

typedef interface __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CCore__CAppRestartFailureReason __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CCore__CAppRestartFailureReason;

#if !defined(____x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CCore__CAppRestartFailureReason_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CCore__CAppRestartFailureReason_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CCore__CAppRestartFailureReason __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CCore__CAppRestartFailureReason;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CCore__CAppRestartFailureReason;

    typedef struct __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CCore__CAppRestartFailureReasonVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CCore__CAppRestartFailureReason* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CCore__CAppRestartFailureReason* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CCore__CAppRestartFailureReason* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CCore__CAppRestartFailureReason* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CCore__CAppRestartFailureReason* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CCore__CAppRestartFailureReason* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* put_Completed)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CCore__CAppRestartFailureReason* This,
        __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CCore__CAppRestartFailureReason* handler);
    HRESULT (STDMETHODCALLTYPE* get_Completed)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CCore__CAppRestartFailureReason* This,
        __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CCore__CAppRestartFailureReason** result);
    HRESULT (STDMETHODCALLTYPE* GetResults)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CCore__CAppRestartFailureReason* This,
        enum __x_ABI_CWindows_CApplicationModel_CCore_CAppRestartFailureReason* result);

        END_INTERFACE
    } __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CCore__CAppRestartFailureReasonVtbl;

    interface __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CCore__CAppRestartFailureReason
    {
        CONST_VTBL struct __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CCore__CAppRestartFailureReasonVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CCore__CAppRestartFailureReason_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CCore__CAppRestartFailureReason_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CCore__CAppRestartFailureReason_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CCore__CAppRestartFailureReason __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CCore__CAppRestartFailureReason;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CCore__CAppRestartFailureReason;

    typedef struct __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CCore__CAppRestartFailureReasonVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CCore__CAppRestartFailureReason* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CCore__CAppRestartFailureReason* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CCore__CAppRestartFailureReason* This);
        HRESULT (STDMETHODCALLTYPE* Invoke)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CCore__CAppRestartFailureReason* This,
        __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CCore__CAppRestartFailureReason* asyncInfo,
        enum __x_ABI_CWindows_CFoundation_CAsyncStatus asyncStatus);

        END_INTERFACE
    } __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CCore__CAppRestartFailureReasonVtbl;

    interface __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CCore__CAppRestartFailureReason
    {
        CONST_VTBL struct __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CCore__CAppRestartFailureReasonVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CCore__CAppRestartFailureReason_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CCore__CCoreApplicationView_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CCore__CCoreApplicationView_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CCore__CCoreApplicationView __x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CCore__CCoreApplicationView;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CCore__CCoreApplicationView;

    typedef struct __x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CCore__CCoreApplicationViewVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CCore__CCoreApplicationView* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CCore__CCoreApplicationView* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CCore__CCoreApplicationView* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CCore__CCoreApplicationView* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CCore__CCoreApplicationView* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CCore__CCoreApplicationView* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Current)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CCore__CCoreApplicationView* This,
        __x_ABI_CWindows_CApplicationModel_CCore_CICoreApplicationView** result);
    HRESULT (STDMETHODCALLTYPE* get_HasCurrent)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CCore__CCoreApplicationView* This,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* MoveNext)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CCore__CCoreApplicationView* This,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CCore__CCoreApplicationView* This,
        UINT32 itemsLength,
        __x_ABI_CWindows_CApplicationModel_CCore_CICoreApplicationView** items,
        UINT32* result);

        END_INTERFACE
    } __x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CCore__CCoreApplicationViewVtbl;

    interface __x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CCore__CCoreApplicationView
    {
        CONST_VTBL struct __x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CCore__CCoreApplicationViewVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CCore__CCoreApplicationView_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CCore__CCoreApplicationView_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CCore__CCoreApplicationView_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CCore__CCoreApplicationView __x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CCore__CCoreApplicationView;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CCore__CCoreApplicationView;

    typedef struct __x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CCore__CCoreApplicationViewVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CCore__CCoreApplicationView* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CCore__CCoreApplicationView* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CCore__CCoreApplicationView* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CCore__CCoreApplicationView* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CCore__CCoreApplicationView* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CCore__CCoreApplicationView* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* First)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CCore__CCoreApplicationView* This,
        __x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CCore__CCoreApplicationView** result);

        END_INTERFACE
    } __x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CCore__CCoreApplicationViewVtbl;

    interface __x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CCore__CCoreApplicationView
    {
        CONST_VTBL struct __x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CCore__CCoreApplicationViewVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CCore__CCoreApplicationView_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CCore__CCoreApplicationView_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CCore__CCoreApplicationView_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CCore__CCoreApplicationView __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CCore__CCoreApplicationView;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CCore__CCoreApplicationView;

    typedef struct __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CCore__CCoreApplicationViewVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CCore__CCoreApplicationView* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CCore__CCoreApplicationView* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CCore__CCoreApplicationView* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CCore__CCoreApplicationView* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CCore__CCoreApplicationView* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CCore__CCoreApplicationView* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* GetAt)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CCore__CCoreApplicationView* This,
        UINT32 index,
        __x_ABI_CWindows_CApplicationModel_CCore_CICoreApplicationView** result);
    HRESULT (STDMETHODCALLTYPE* get_Size)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CCore__CCoreApplicationView* This,
        UINT32* result);
    HRESULT (STDMETHODCALLTYPE* IndexOf)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CCore__CCoreApplicationView* This,
        __x_ABI_CWindows_CApplicationModel_CCore_CICoreApplicationView* value,
        UINT32* index,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CCore__CCoreApplicationView* This,
        UINT32 startIndex,
        UINT32 itemsLength,
        __x_ABI_CWindows_CApplicationModel_CCore_CICoreApplicationView** items,
        UINT32* result);

        END_INTERFACE
    } __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CCore__CCoreApplicationViewVtbl;

    interface __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CCore__CCoreApplicationView
    {
        CONST_VTBL struct __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CCore__CCoreApplicationViewVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CCore__CCoreApplicationView_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIEventHandler_1_IInspectable_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIEventHandler_1_IInspectable_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIEventHandler_1_IInspectable __x_ABI_C__FIEventHandler_1_IInspectable;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIEventHandler_1_IInspectable;

    typedef struct __x_ABI_C__FIEventHandler_1_IInspectableVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIEventHandler_1_IInspectable* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIEventHandler_1_IInspectable* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIEventHandler_1_IInspectable* This);
        HRESULT (STDMETHODCALLTYPE* Invoke)(__x_ABI_C__FIEventHandler_1_IInspectable* This,
        IInspectable* sender,
        IInspectable* args);

        END_INTERFACE
    } __x_ABI_C__FIEventHandler_1_IInspectableVtbl;

    interface __x_ABI_C__FIEventHandler_1_IInspectable
    {
        CONST_VTBL struct __x_ABI_C__FIEventHandler_1_IInspectableVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIEventHandler_1_IInspectable_INTERFACE_DEFINED__
    
#ifndef ____x_ABI_CWindows_CApplicationModel_CActivation_CIBackgroundActivatedEventArgs_FWD_DEFINED__
#define ____x_ABI_CWindows_CApplicationModel_CActivation_CIBackgroundActivatedEventArgs_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CApplicationModel_CActivation_CIBackgroundActivatedEventArgs __x_ABI_CWindows_CApplicationModel_CActivation_CIBackgroundActivatedEventArgs;

#endif // ____x_ABI_CWindows_CApplicationModel_CActivation_CIBackgroundActivatedEventArgs_FWD_DEFINED__

#if !defined(____x_ABI_C__FIEventHandler_1___x_ABI_CWindows__CApplicationModel__CActivation__CBackgroundActivatedEventArgs_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIEventHandler_1___x_ABI_CWindows__CApplicationModel__CActivation__CBackgroundActivatedEventArgs_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIEventHandler_1___x_ABI_CWindows__CApplicationModel__CActivation__CBackgroundActivatedEventArgs __x_ABI_C__FIEventHandler_1___x_ABI_CWindows__CApplicationModel__CActivation__CBackgroundActivatedEventArgs;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIEventHandler_1___x_ABI_CWindows__CApplicationModel__CActivation__CBackgroundActivatedEventArgs;

    typedef struct __x_ABI_C__FIEventHandler_1___x_ABI_CWindows__CApplicationModel__CActivation__CBackgroundActivatedEventArgsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIEventHandler_1___x_ABI_CWindows__CApplicationModel__CActivation__CBackgroundActivatedEventArgs* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIEventHandler_1___x_ABI_CWindows__CApplicationModel__CActivation__CBackgroundActivatedEventArgs* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIEventHandler_1___x_ABI_CWindows__CApplicationModel__CActivation__CBackgroundActivatedEventArgs* This);
        HRESULT (STDMETHODCALLTYPE* Invoke)(__x_ABI_C__FIEventHandler_1___x_ABI_CWindows__CApplicationModel__CActivation__CBackgroundActivatedEventArgs* This,
        IInspectable* sender,
        __x_ABI_CWindows_CApplicationModel_CActivation_CIBackgroundActivatedEventArgs* args);

        END_INTERFACE
    } __x_ABI_C__FIEventHandler_1___x_ABI_CWindows__CApplicationModel__CActivation__CBackgroundActivatedEventArgsVtbl;

    interface __x_ABI_C__FIEventHandler_1___x_ABI_CWindows__CApplicationModel__CActivation__CBackgroundActivatedEventArgs
    {
        CONST_VTBL struct __x_ABI_C__FIEventHandler_1___x_ABI_CWindows__CApplicationModel__CActivation__CBackgroundActivatedEventArgsVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIEventHandler_1___x_ABI_CWindows__CApplicationModel__CActivation__CBackgroundActivatedEventArgs_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIEventHandler_1___x_ABI_CWindows__CApplicationModel__CCore__CUnhandledErrorDetectedEventArgs_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIEventHandler_1___x_ABI_CWindows__CApplicationModel__CCore__CUnhandledErrorDetectedEventArgs_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIEventHandler_1___x_ABI_CWindows__CApplicationModel__CCore__CUnhandledErrorDetectedEventArgs __x_ABI_C__FIEventHandler_1___x_ABI_CWindows__CApplicationModel__CCore__CUnhandledErrorDetectedEventArgs;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIEventHandler_1___x_ABI_CWindows__CApplicationModel__CCore__CUnhandledErrorDetectedEventArgs;

    typedef struct __x_ABI_C__FIEventHandler_1___x_ABI_CWindows__CApplicationModel__CCore__CUnhandledErrorDetectedEventArgsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIEventHandler_1___x_ABI_CWindows__CApplicationModel__CCore__CUnhandledErrorDetectedEventArgs* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIEventHandler_1___x_ABI_CWindows__CApplicationModel__CCore__CUnhandledErrorDetectedEventArgs* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIEventHandler_1___x_ABI_CWindows__CApplicationModel__CCore__CUnhandledErrorDetectedEventArgs* This);
        HRESULT (STDMETHODCALLTYPE* Invoke)(__x_ABI_C__FIEventHandler_1___x_ABI_CWindows__CApplicationModel__CCore__CUnhandledErrorDetectedEventArgs* This,
        IInspectable* sender,
        __x_ABI_CWindows_CApplicationModel_CCore_CIUnhandledErrorDetectedEventArgs* args);

        END_INTERFACE
    } __x_ABI_C__FIEventHandler_1___x_ABI_CWindows__CApplicationModel__CCore__CUnhandledErrorDetectedEventArgsVtbl;

    interface __x_ABI_C__FIEventHandler_1___x_ABI_CWindows__CApplicationModel__CCore__CUnhandledErrorDetectedEventArgs
    {
        CONST_VTBL struct __x_ABI_C__FIEventHandler_1___x_ABI_CWindows__CApplicationModel__CCore__CUnhandledErrorDetectedEventArgsVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIEventHandler_1___x_ABI_CWindows__CApplicationModel__CCore__CUnhandledErrorDetectedEventArgs_INTERFACE_DEFINED__
    
#ifndef ____x_ABI_CWindows_CApplicationModel_CIEnteredBackgroundEventArgs_FWD_DEFINED__
#define ____x_ABI_CWindows_CApplicationModel_CIEnteredBackgroundEventArgs_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CApplicationModel_CIEnteredBackgroundEventArgs __x_ABI_CWindows_CApplicationModel_CIEnteredBackgroundEventArgs;

#endif // ____x_ABI_CWindows_CApplicationModel_CIEnteredBackgroundEventArgs_FWD_DEFINED__

#if !defined(____x_ABI_C__FIEventHandler_1___x_ABI_CWindows__CApplicationModel__CEnteredBackgroundEventArgs_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIEventHandler_1___x_ABI_CWindows__CApplicationModel__CEnteredBackgroundEventArgs_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIEventHandler_1___x_ABI_CWindows__CApplicationModel__CEnteredBackgroundEventArgs __x_ABI_C__FIEventHandler_1___x_ABI_CWindows__CApplicationModel__CEnteredBackgroundEventArgs;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIEventHandler_1___x_ABI_CWindows__CApplicationModel__CEnteredBackgroundEventArgs;

    typedef struct __x_ABI_C__FIEventHandler_1___x_ABI_CWindows__CApplicationModel__CEnteredBackgroundEventArgsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIEventHandler_1___x_ABI_CWindows__CApplicationModel__CEnteredBackgroundEventArgs* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIEventHandler_1___x_ABI_CWindows__CApplicationModel__CEnteredBackgroundEventArgs* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIEventHandler_1___x_ABI_CWindows__CApplicationModel__CEnteredBackgroundEventArgs* This);
        HRESULT (STDMETHODCALLTYPE* Invoke)(__x_ABI_C__FIEventHandler_1___x_ABI_CWindows__CApplicationModel__CEnteredBackgroundEventArgs* This,
        IInspectable* sender,
        __x_ABI_CWindows_CApplicationModel_CIEnteredBackgroundEventArgs* args);

        END_INTERFACE
    } __x_ABI_C__FIEventHandler_1___x_ABI_CWindows__CApplicationModel__CEnteredBackgroundEventArgsVtbl;

    interface __x_ABI_C__FIEventHandler_1___x_ABI_CWindows__CApplicationModel__CEnteredBackgroundEventArgs
    {
        CONST_VTBL struct __x_ABI_C__FIEventHandler_1___x_ABI_CWindows__CApplicationModel__CEnteredBackgroundEventArgsVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIEventHandler_1___x_ABI_CWindows__CApplicationModel__CEnteredBackgroundEventArgs_INTERFACE_DEFINED__
    
#ifndef ____x_ABI_CWindows_CApplicationModel_CILeavingBackgroundEventArgs_FWD_DEFINED__
#define ____x_ABI_CWindows_CApplicationModel_CILeavingBackgroundEventArgs_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CApplicationModel_CILeavingBackgroundEventArgs __x_ABI_CWindows_CApplicationModel_CILeavingBackgroundEventArgs;

#endif // ____x_ABI_CWindows_CApplicationModel_CILeavingBackgroundEventArgs_FWD_DEFINED__

#if !defined(____x_ABI_C__FIEventHandler_1___x_ABI_CWindows__CApplicationModel__CLeavingBackgroundEventArgs_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIEventHandler_1___x_ABI_CWindows__CApplicationModel__CLeavingBackgroundEventArgs_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIEventHandler_1___x_ABI_CWindows__CApplicationModel__CLeavingBackgroundEventArgs __x_ABI_C__FIEventHandler_1___x_ABI_CWindows__CApplicationModel__CLeavingBackgroundEventArgs;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIEventHandler_1___x_ABI_CWindows__CApplicationModel__CLeavingBackgroundEventArgs;

    typedef struct __x_ABI_C__FIEventHandler_1___x_ABI_CWindows__CApplicationModel__CLeavingBackgroundEventArgsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIEventHandler_1___x_ABI_CWindows__CApplicationModel__CLeavingBackgroundEventArgs* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIEventHandler_1___x_ABI_CWindows__CApplicationModel__CLeavingBackgroundEventArgs* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIEventHandler_1___x_ABI_CWindows__CApplicationModel__CLeavingBackgroundEventArgs* This);
        HRESULT (STDMETHODCALLTYPE* Invoke)(__x_ABI_C__FIEventHandler_1___x_ABI_CWindows__CApplicationModel__CLeavingBackgroundEventArgs* This,
        IInspectable* sender,
        __x_ABI_CWindows_CApplicationModel_CILeavingBackgroundEventArgs* args);

        END_INTERFACE
    } __x_ABI_C__FIEventHandler_1___x_ABI_CWindows__CApplicationModel__CLeavingBackgroundEventArgsVtbl;

    interface __x_ABI_C__FIEventHandler_1___x_ABI_CWindows__CApplicationModel__CLeavingBackgroundEventArgs
    {
        CONST_VTBL struct __x_ABI_C__FIEventHandler_1___x_ABI_CWindows__CApplicationModel__CLeavingBackgroundEventArgsVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIEventHandler_1___x_ABI_CWindows__CApplicationModel__CLeavingBackgroundEventArgs_INTERFACE_DEFINED__
    
#ifndef ____x_ABI_CWindows_CApplicationModel_CISuspendingEventArgs_FWD_DEFINED__
#define ____x_ABI_CWindows_CApplicationModel_CISuspendingEventArgs_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CApplicationModel_CISuspendingEventArgs __x_ABI_CWindows_CApplicationModel_CISuspendingEventArgs;

#endif // ____x_ABI_CWindows_CApplicationModel_CISuspendingEventArgs_FWD_DEFINED__

#if !defined(____x_ABI_C__FIEventHandler_1___x_ABI_CWindows__CApplicationModel__CSuspendingEventArgs_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIEventHandler_1___x_ABI_CWindows__CApplicationModel__CSuspendingEventArgs_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIEventHandler_1___x_ABI_CWindows__CApplicationModel__CSuspendingEventArgs __x_ABI_C__FIEventHandler_1___x_ABI_CWindows__CApplicationModel__CSuspendingEventArgs;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIEventHandler_1___x_ABI_CWindows__CApplicationModel__CSuspendingEventArgs;

    typedef struct __x_ABI_C__FIEventHandler_1___x_ABI_CWindows__CApplicationModel__CSuspendingEventArgsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIEventHandler_1___x_ABI_CWindows__CApplicationModel__CSuspendingEventArgs* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIEventHandler_1___x_ABI_CWindows__CApplicationModel__CSuspendingEventArgs* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIEventHandler_1___x_ABI_CWindows__CApplicationModel__CSuspendingEventArgs* This);
        HRESULT (STDMETHODCALLTYPE* Invoke)(__x_ABI_C__FIEventHandler_1___x_ABI_CWindows__CApplicationModel__CSuspendingEventArgs* This,
        IInspectable* sender,
        __x_ABI_CWindows_CApplicationModel_CISuspendingEventArgs* args);

        END_INTERFACE
    } __x_ABI_C__FIEventHandler_1___x_ABI_CWindows__CApplicationModel__CSuspendingEventArgsVtbl;

    interface __x_ABI_C__FIEventHandler_1___x_ABI_CWindows__CApplicationModel__CSuspendingEventArgs
    {
        CONST_VTBL struct __x_ABI_C__FIEventHandler_1___x_ABI_CWindows__CApplicationModel__CSuspendingEventArgsVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIEventHandler_1___x_ABI_CWindows__CApplicationModel__CSuspendingEventArgs_INTERFACE_DEFINED__
    
#ifndef ____x_ABI_CWindows_CApplicationModel_CActivation_CIActivatedEventArgs_FWD_DEFINED__
#define ____x_ABI_CWindows_CApplicationModel_CActivation_CIActivatedEventArgs_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CApplicationModel_CActivation_CIActivatedEventArgs __x_ABI_CWindows_CApplicationModel_CActivation_CIActivatedEventArgs;

#endif // ____x_ABI_CWindows_CApplicationModel_CActivation_CIActivatedEventArgs_FWD_DEFINED__

#if !defined(____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CApplicationModel__CCore__CCoreApplicationView___x_ABI_CWindows__CApplicationModel__CActivation__CIActivatedEventArgs_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CApplicationModel__CCore__CCoreApplicationView___x_ABI_CWindows__CApplicationModel__CActivation__CIActivatedEventArgs_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CApplicationModel__CCore__CCoreApplicationView___x_ABI_CWindows__CApplicationModel__CActivation__CIActivatedEventArgs __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CApplicationModel__CCore__CCoreApplicationView___x_ABI_CWindows__CApplicationModel__CActivation__CIActivatedEventArgs;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CApplicationModel__CCore__CCoreApplicationView___x_ABI_CWindows__CApplicationModel__CActivation__CIActivatedEventArgs;

    typedef struct __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CApplicationModel__CCore__CCoreApplicationView___x_ABI_CWindows__CApplicationModel__CActivation__CIActivatedEventArgsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CApplicationModel__CCore__CCoreApplicationView___x_ABI_CWindows__CApplicationModel__CActivation__CIActivatedEventArgs* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CApplicationModel__CCore__CCoreApplicationView___x_ABI_CWindows__CApplicationModel__CActivation__CIActivatedEventArgs* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CApplicationModel__CCore__CCoreApplicationView___x_ABI_CWindows__CApplicationModel__CActivation__CIActivatedEventArgs* This);
        HRESULT (STDMETHODCALLTYPE* Invoke)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CApplicationModel__CCore__CCoreApplicationView___x_ABI_CWindows__CApplicationModel__CActivation__CIActivatedEventArgs* This,
        __x_ABI_CWindows_CApplicationModel_CCore_CICoreApplicationView* sender,
        __x_ABI_CWindows_CApplicationModel_CActivation_CIActivatedEventArgs* args);

        END_INTERFACE
    } __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CApplicationModel__CCore__CCoreApplicationView___x_ABI_CWindows__CApplicationModel__CActivation__CIActivatedEventArgsVtbl;

    interface __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CApplicationModel__CCore__CCoreApplicationView___x_ABI_CWindows__CApplicationModel__CActivation__CIActivatedEventArgs
    {
        CONST_VTBL struct __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CApplicationModel__CCore__CCoreApplicationView___x_ABI_CWindows__CApplicationModel__CActivation__CIActivatedEventArgsVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CApplicationModel__CCore__CCoreApplicationView___x_ABI_CWindows__CApplicationModel__CActivation__CIActivatedEventArgs_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CApplicationModel__CCore__CCoreApplicationView___x_ABI_CWindows__CApplicationModel__CCore__CHostedViewClosingEventArgs_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CApplicationModel__CCore__CCoreApplicationView___x_ABI_CWindows__CApplicationModel__CCore__CHostedViewClosingEventArgs_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CApplicationModel__CCore__CCoreApplicationView___x_ABI_CWindows__CApplicationModel__CCore__CHostedViewClosingEventArgs __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CApplicationModel__CCore__CCoreApplicationView___x_ABI_CWindows__CApplicationModel__CCore__CHostedViewClosingEventArgs;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CApplicationModel__CCore__CCoreApplicationView___x_ABI_CWindows__CApplicationModel__CCore__CHostedViewClosingEventArgs;

    typedef struct __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CApplicationModel__CCore__CCoreApplicationView___x_ABI_CWindows__CApplicationModel__CCore__CHostedViewClosingEventArgsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CApplicationModel__CCore__CCoreApplicationView___x_ABI_CWindows__CApplicationModel__CCore__CHostedViewClosingEventArgs* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CApplicationModel__CCore__CCoreApplicationView___x_ABI_CWindows__CApplicationModel__CCore__CHostedViewClosingEventArgs* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CApplicationModel__CCore__CCoreApplicationView___x_ABI_CWindows__CApplicationModel__CCore__CHostedViewClosingEventArgs* This);
        HRESULT (STDMETHODCALLTYPE* Invoke)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CApplicationModel__CCore__CCoreApplicationView___x_ABI_CWindows__CApplicationModel__CCore__CHostedViewClosingEventArgs* This,
        __x_ABI_CWindows_CApplicationModel_CCore_CICoreApplicationView* sender,
        __x_ABI_CWindows_CApplicationModel_CCore_CIHostedViewClosingEventArgs* args);

        END_INTERFACE
    } __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CApplicationModel__CCore__CCoreApplicationView___x_ABI_CWindows__CApplicationModel__CCore__CHostedViewClosingEventArgsVtbl;

    interface __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CApplicationModel__CCore__CCoreApplicationView___x_ABI_CWindows__CApplicationModel__CCore__CHostedViewClosingEventArgs
    {
        CONST_VTBL struct __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CApplicationModel__CCore__CCoreApplicationView___x_ABI_CWindows__CApplicationModel__CCore__CHostedViewClosingEventArgsVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CApplicationModel__CCore__CCoreApplicationView___x_ABI_CWindows__CApplicationModel__CCore__CHostedViewClosingEventArgs_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CApplicationModel__CCore__CCoreApplicationViewTitleBar_IInspectable_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CApplicationModel__CCore__CCoreApplicationViewTitleBar_IInspectable_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CApplicationModel__CCore__CCoreApplicationViewTitleBar_IInspectable __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CApplicationModel__CCore__CCoreApplicationViewTitleBar_IInspectable;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CApplicationModel__CCore__CCoreApplicationViewTitleBar_IInspectable;

    typedef struct __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CApplicationModel__CCore__CCoreApplicationViewTitleBar_IInspectableVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CApplicationModel__CCore__CCoreApplicationViewTitleBar_IInspectable* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CApplicationModel__CCore__CCoreApplicationViewTitleBar_IInspectable* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CApplicationModel__CCore__CCoreApplicationViewTitleBar_IInspectable* This);
        HRESULT (STDMETHODCALLTYPE* Invoke)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CApplicationModel__CCore__CCoreApplicationViewTitleBar_IInspectable* This,
        __x_ABI_CWindows_CApplicationModel_CCore_CICoreApplicationViewTitleBar* sender,
        IInspectable* args);

        END_INTERFACE
    } __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CApplicationModel__CCore__CCoreApplicationViewTitleBar_IInspectableVtbl;

    interface __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CApplicationModel__CCore__CCoreApplicationViewTitleBar_IInspectable
    {
        CONST_VTBL struct __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CApplicationModel__CCore__CCoreApplicationViewTitleBar_IInspectableVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CApplicationModel__CCore__CCoreApplicationViewTitleBar_IInspectable_INTERFACE_DEFINED__
    
#ifndef ____x_ABI_CWindows_CApplicationModel_CIAppDisplayInfo_FWD_DEFINED__
#define ____x_ABI_CWindows_CApplicationModel_CIAppDisplayInfo_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CApplicationModel_CIAppDisplayInfo __x_ABI_CWindows_CApplicationModel_CIAppDisplayInfo;

#endif // ____x_ABI_CWindows_CApplicationModel_CIAppDisplayInfo_FWD_DEFINED__

typedef enum __x_ABI_CWindows_CFoundation_CAsyncStatus __x_ABI_CWindows_CFoundation_CAsyncStatus;

#ifndef ____x_ABI_CWindows_CFoundation_CCollections_CIPropertySet_FWD_DEFINED__
#define ____x_ABI_CWindows_CFoundation_CCollections_CIPropertySet_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CFoundation_CCollections_CIPropertySet __x_ABI_CWindows_CFoundation_CCollections_CIPropertySet;

#endif // ____x_ABI_CWindows_CFoundation_CCollections_CIPropertySet_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CFoundation_CIDeferral_FWD_DEFINED__
#define ____x_ABI_CWindows_CFoundation_CIDeferral_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CFoundation_CIDeferral __x_ABI_CWindows_CFoundation_CIDeferral;

#endif // ____x_ABI_CWindows_CFoundation_CIDeferral_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CFoundation_CIAsyncInfo_FWD_DEFINED__
#define ____x_ABI_CWindows_CFoundation_CIAsyncInfo_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CFoundation_CIAsyncInfo __x_ABI_CWindows_CFoundation_CIAsyncInfo;

#endif // ____x_ABI_CWindows_CFoundation_CIAsyncInfo_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CFoundation_CIGetActivationFactory_FWD_DEFINED__
#define ____x_ABI_CWindows_CFoundation_CIGetActivationFactory_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CFoundation_CIGetActivationFactory __x_ABI_CWindows_CFoundation_CIGetActivationFactory;

#endif // ____x_ABI_CWindows_CFoundation_CIGetActivationFactory_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CSystem_CIDispatcherQueue_FWD_DEFINED__
#define ____x_ABI_CWindows_CSystem_CIDispatcherQueue_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CSystem_CIDispatcherQueue __x_ABI_CWindows_CSystem_CIDispatcherQueue;

#endif // ____x_ABI_CWindows_CSystem_CIDispatcherQueue_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CSystem_CIUser_FWD_DEFINED__
#define ____x_ABI_CWindows_CSystem_CIUser_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CSystem_CIUser __x_ABI_CWindows_CSystem_CIUser;

#endif // ____x_ABI_CWindows_CSystem_CIUser_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CCore_CICoreDispatcher_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CCore_CICoreDispatcher_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CCore_CICoreDispatcher __x_ABI_CWindows_CUI_CCore_CICoreDispatcher;

#endif // ____x_ABI_CWindows_CUI_CCore_CICoreDispatcher_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CCore_CICoreWindow_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CCore_CICoreWindow_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CCore_CICoreWindow __x_ABI_CWindows_CUI_CCore_CICoreWindow;

#endif // ____x_ABI_CWindows_CUI_CCore_CICoreWindow_FWD_DEFINED__

enum __x_ABI_CWindows_CApplicationModel_CCore_CAppRestartFailureReason
    {
        __x_ABI_CWindows_CApplicationModel_CCore_CAppRestartFailureReason_RestartPending = 0,
    __x_ABI_CWindows_CApplicationModel_CCore_CAppRestartFailureReason_NotInForeground = 1,
    __x_ABI_CWindows_CApplicationModel_CCore_CAppRestartFailureReason_InvalidUser = 2,
    __x_ABI_CWindows_CApplicationModel_CCore_CAppRestartFailureReason_Other = 3,
};

#if !defined(____x_ABI_CWindows_CApplicationModel_CCore_CIAppListEntry_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CApplicationModel_CCore_CIAppListEntry_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CApplicationModel_CCore_CIAppListEntryVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CApplicationModel_CCore_CIAppListEntry* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CApplicationModel_CCore_CIAppListEntry* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CApplicationModel_CCore_CIAppListEntry* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CApplicationModel_CCore_CIAppListEntry* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CApplicationModel_CCore_CIAppListEntry* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CApplicationModel_CCore_CIAppListEntry* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_DisplayInfo)(__x_ABI_CWindows_CApplicationModel_CCore_CIAppListEntry* This,
        __x_ABI_CWindows_CApplicationModel_CIAppDisplayInfo** value);
    HRESULT (STDMETHODCALLTYPE* LaunchAsync)(__x_ABI_CWindows_CApplicationModel_CCore_CIAppListEntry* This,
        __x_ABI_C__FIAsyncOperation_1_boolean** operation);

        END_INTERFACE
    } __x_ABI_CWindows_CApplicationModel_CCore_CIAppListEntryVtbl;

    interface __x_ABI_CWindows_CApplicationModel_CCore_CIAppListEntry
    {
        CONST_VTBL struct __x_ABI_CWindows_CApplicationModel_CCore_CIAppListEntryVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CApplicationModel_CCore_CIAppListEntry;
#endif /* !defined(____x_ABI_CWindows_CApplicationModel_CCore_CIAppListEntry_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CApplicationModel_CCore_CIAppListEntry2_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CApplicationModel_CCore_CIAppListEntry2_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CApplicationModel_CCore_CIAppListEntry2Vtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CApplicationModel_CCore_CIAppListEntry2* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CApplicationModel_CCore_CIAppListEntry2* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CApplicationModel_CCore_CIAppListEntry2* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CApplicationModel_CCore_CIAppListEntry2* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CApplicationModel_CCore_CIAppListEntry2* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CApplicationModel_CCore_CIAppListEntry2* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_AppUserModelId)(__x_ABI_CWindows_CApplicationModel_CCore_CIAppListEntry2* This,
        HSTRING* value);

        END_INTERFACE
    } __x_ABI_CWindows_CApplicationModel_CCore_CIAppListEntry2Vtbl;

    interface __x_ABI_CWindows_CApplicationModel_CCore_CIAppListEntry2
    {
        CONST_VTBL struct __x_ABI_CWindows_CApplicationModel_CCore_CIAppListEntry2Vtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CApplicationModel_CCore_CIAppListEntry2;
#endif /* !defined(____x_ABI_CWindows_CApplicationModel_CCore_CIAppListEntry2_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CApplicationModel_CCore_CIAppListEntry3_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CApplicationModel_CCore_CIAppListEntry3_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CApplicationModel_CCore_CIAppListEntry3Vtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CApplicationModel_CCore_CIAppListEntry3* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CApplicationModel_CCore_CIAppListEntry3* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CApplicationModel_CCore_CIAppListEntry3* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CApplicationModel_CCore_CIAppListEntry3* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CApplicationModel_CCore_CIAppListEntry3* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CApplicationModel_CCore_CIAppListEntry3* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* LaunchForUserAsync)(__x_ABI_CWindows_CApplicationModel_CCore_CIAppListEntry3* This,
        __x_ABI_CWindows_CSystem_CIUser* user,
        __x_ABI_C__FIAsyncOperation_1_boolean** operation);

        END_INTERFACE
    } __x_ABI_CWindows_CApplicationModel_CCore_CIAppListEntry3Vtbl;

    interface __x_ABI_CWindows_CApplicationModel_CCore_CIAppListEntry3
    {
        CONST_VTBL struct __x_ABI_CWindows_CApplicationModel_CCore_CIAppListEntry3Vtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CApplicationModel_CCore_CIAppListEntry3;
#endif /* !defined(____x_ABI_CWindows_CApplicationModel_CCore_CIAppListEntry3_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CApplicationModel_CCore_CICoreApplication_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CApplicationModel_CCore_CICoreApplication_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CApplicationModel_CCore_CICoreApplicationVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CApplicationModel_CCore_CICoreApplication* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CApplicationModel_CCore_CICoreApplication* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CApplicationModel_CCore_CICoreApplication* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CApplicationModel_CCore_CICoreApplication* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CApplicationModel_CCore_CICoreApplication* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CApplicationModel_CCore_CICoreApplication* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Id)(__x_ABI_CWindows_CApplicationModel_CCore_CICoreApplication* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* add_Suspending)(__x_ABI_CWindows_CApplicationModel_CCore_CICoreApplication* This,
        __x_ABI_C__FIEventHandler_1___x_ABI_CWindows__CApplicationModel__CSuspendingEventArgs* handler,
        EventRegistrationToken* token);
    HRESULT (STDMETHODCALLTYPE* remove_Suspending)(__x_ABI_CWindows_CApplicationModel_CCore_CICoreApplication* This,
        EventRegistrationToken token);
    HRESULT (STDMETHODCALLTYPE* add_Resuming)(__x_ABI_CWindows_CApplicationModel_CCore_CICoreApplication* This,
        __x_ABI_C__FIEventHandler_1_IInspectable* handler,
        EventRegistrationToken* token);
    HRESULT (STDMETHODCALLTYPE* remove_Resuming)(__x_ABI_CWindows_CApplicationModel_CCore_CICoreApplication* This,
        EventRegistrationToken token);
    HRESULT (STDMETHODCALLTYPE* get_Properties)(__x_ABI_CWindows_CApplicationModel_CCore_CICoreApplication* This,
        __x_ABI_CWindows_CFoundation_CCollections_CIPropertySet** value);
    HRESULT (STDMETHODCALLTYPE* GetCurrentView)(__x_ABI_CWindows_CApplicationModel_CCore_CICoreApplication* This,
        __x_ABI_CWindows_CApplicationModel_CCore_CICoreApplicationView** value);
    HRESULT (STDMETHODCALLTYPE* Run)(__x_ABI_CWindows_CApplicationModel_CCore_CICoreApplication* This,
        __x_ABI_CWindows_CApplicationModel_CCore_CIFrameworkViewSource* viewSource);
    HRESULT (STDMETHODCALLTYPE* RunWithActivationFactories)(__x_ABI_CWindows_CApplicationModel_CCore_CICoreApplication* This,
        __x_ABI_CWindows_CFoundation_CIGetActivationFactory* activationFactoryCallback);

        END_INTERFACE
    } __x_ABI_CWindows_CApplicationModel_CCore_CICoreApplicationVtbl;

    interface __x_ABI_CWindows_CApplicationModel_CCore_CICoreApplication
    {
        CONST_VTBL struct __x_ABI_CWindows_CApplicationModel_CCore_CICoreApplicationVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CApplicationModel_CCore_CICoreApplication;
#endif /* !defined(____x_ABI_CWindows_CApplicationModel_CCore_CICoreApplication_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CApplicationModel_CCore_CICoreApplication2_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CApplicationModel_CCore_CICoreApplication2_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CApplicationModel_CCore_CICoreApplication2Vtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CApplicationModel_CCore_CICoreApplication2* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CApplicationModel_CCore_CICoreApplication2* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CApplicationModel_CCore_CICoreApplication2* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CApplicationModel_CCore_CICoreApplication2* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CApplicationModel_CCore_CICoreApplication2* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CApplicationModel_CCore_CICoreApplication2* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* add_BackgroundActivated)(__x_ABI_CWindows_CApplicationModel_CCore_CICoreApplication2* This,
        __x_ABI_C__FIEventHandler_1___x_ABI_CWindows__CApplicationModel__CActivation__CBackgroundActivatedEventArgs* handler,
        EventRegistrationToken* token);
    HRESULT (STDMETHODCALLTYPE* remove_BackgroundActivated)(__x_ABI_CWindows_CApplicationModel_CCore_CICoreApplication2* This,
        EventRegistrationToken token);
    HRESULT (STDMETHODCALLTYPE* add_LeavingBackground)(__x_ABI_CWindows_CApplicationModel_CCore_CICoreApplication2* This,
        __x_ABI_C__FIEventHandler_1___x_ABI_CWindows__CApplicationModel__CLeavingBackgroundEventArgs* handler,
        EventRegistrationToken* token);
    HRESULT (STDMETHODCALLTYPE* remove_LeavingBackground)(__x_ABI_CWindows_CApplicationModel_CCore_CICoreApplication2* This,
        EventRegistrationToken token);
    HRESULT (STDMETHODCALLTYPE* add_EnteredBackground)(__x_ABI_CWindows_CApplicationModel_CCore_CICoreApplication2* This,
        __x_ABI_C__FIEventHandler_1___x_ABI_CWindows__CApplicationModel__CEnteredBackgroundEventArgs* handler,
        EventRegistrationToken* token);
    HRESULT (STDMETHODCALLTYPE* remove_EnteredBackground)(__x_ABI_CWindows_CApplicationModel_CCore_CICoreApplication2* This,
        EventRegistrationToken token);
    HRESULT (STDMETHODCALLTYPE* EnablePrelaunch)(__x_ABI_CWindows_CApplicationModel_CCore_CICoreApplication2* This,
        boolean value);

        END_INTERFACE
    } __x_ABI_CWindows_CApplicationModel_CCore_CICoreApplication2Vtbl;

    interface __x_ABI_CWindows_CApplicationModel_CCore_CICoreApplication2
    {
        CONST_VTBL struct __x_ABI_CWindows_CApplicationModel_CCore_CICoreApplication2Vtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CApplicationModel_CCore_CICoreApplication2;
#endif /* !defined(____x_ABI_CWindows_CApplicationModel_CCore_CICoreApplication2_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CApplicationModel_CCore_CICoreApplication3_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CApplicationModel_CCore_CICoreApplication3_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CApplicationModel_CCore_CICoreApplication3Vtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CApplicationModel_CCore_CICoreApplication3* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CApplicationModel_CCore_CICoreApplication3* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CApplicationModel_CCore_CICoreApplication3* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CApplicationModel_CCore_CICoreApplication3* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CApplicationModel_CCore_CICoreApplication3* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CApplicationModel_CCore_CICoreApplication3* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* RequestRestartAsync)(__x_ABI_CWindows_CApplicationModel_CCore_CICoreApplication3* This,
        HSTRING launchArguments,
        __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CCore__CAppRestartFailureReason** operation);
    HRESULT (STDMETHODCALLTYPE* RequestRestartForUserAsync)(__x_ABI_CWindows_CApplicationModel_CCore_CICoreApplication3* This,
        __x_ABI_CWindows_CSystem_CIUser* user,
        HSTRING launchArguments,
        __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CCore__CAppRestartFailureReason** operation);

        END_INTERFACE
    } __x_ABI_CWindows_CApplicationModel_CCore_CICoreApplication3Vtbl;

    interface __x_ABI_CWindows_CApplicationModel_CCore_CICoreApplication3
    {
        CONST_VTBL struct __x_ABI_CWindows_CApplicationModel_CCore_CICoreApplication3Vtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CApplicationModel_CCore_CICoreApplication3;
#endif /* !defined(____x_ABI_CWindows_CApplicationModel_CCore_CICoreApplication3_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CApplicationModel_CCore_CICoreApplicationExit_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CApplicationModel_CCore_CICoreApplicationExit_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CApplicationModel_CCore_CICoreApplicationExitVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CApplicationModel_CCore_CICoreApplicationExit* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CApplicationModel_CCore_CICoreApplicationExit* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CApplicationModel_CCore_CICoreApplicationExit* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CApplicationModel_CCore_CICoreApplicationExit* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CApplicationModel_CCore_CICoreApplicationExit* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CApplicationModel_CCore_CICoreApplicationExit* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* Exit)(__x_ABI_CWindows_CApplicationModel_CCore_CICoreApplicationExit* This);
    HRESULT (STDMETHODCALLTYPE* add_Exiting)(__x_ABI_CWindows_CApplicationModel_CCore_CICoreApplicationExit* This,
        __x_ABI_C__FIEventHandler_1_IInspectable* handler,
        EventRegistrationToken* token);
    HRESULT (STDMETHODCALLTYPE* remove_Exiting)(__x_ABI_CWindows_CApplicationModel_CCore_CICoreApplicationExit* This,
        EventRegistrationToken token);

        END_INTERFACE
    } __x_ABI_CWindows_CApplicationModel_CCore_CICoreApplicationExitVtbl;

    interface __x_ABI_CWindows_CApplicationModel_CCore_CICoreApplicationExit
    {
        CONST_VTBL struct __x_ABI_CWindows_CApplicationModel_CCore_CICoreApplicationExitVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CApplicationModel_CCore_CICoreApplicationExit;
#endif /* !defined(____x_ABI_CWindows_CApplicationModel_CCore_CICoreApplicationExit_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CApplicationModel_CCore_CICoreApplicationUnhandledError_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CApplicationModel_CCore_CICoreApplicationUnhandledError_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CApplicationModel_CCore_CICoreApplicationUnhandledErrorVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CApplicationModel_CCore_CICoreApplicationUnhandledError* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CApplicationModel_CCore_CICoreApplicationUnhandledError* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CApplicationModel_CCore_CICoreApplicationUnhandledError* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CApplicationModel_CCore_CICoreApplicationUnhandledError* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CApplicationModel_CCore_CICoreApplicationUnhandledError* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CApplicationModel_CCore_CICoreApplicationUnhandledError* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* add_UnhandledErrorDetected)(__x_ABI_CWindows_CApplicationModel_CCore_CICoreApplicationUnhandledError* This,
        __x_ABI_C__FIEventHandler_1___x_ABI_CWindows__CApplicationModel__CCore__CUnhandledErrorDetectedEventArgs* handler,
        EventRegistrationToken* token);
    HRESULT (STDMETHODCALLTYPE* remove_UnhandledErrorDetected)(__x_ABI_CWindows_CApplicationModel_CCore_CICoreApplicationUnhandledError* This,
        EventRegistrationToken token);

        END_INTERFACE
    } __x_ABI_CWindows_CApplicationModel_CCore_CICoreApplicationUnhandledErrorVtbl;

    interface __x_ABI_CWindows_CApplicationModel_CCore_CICoreApplicationUnhandledError
    {
        CONST_VTBL struct __x_ABI_CWindows_CApplicationModel_CCore_CICoreApplicationUnhandledErrorVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CApplicationModel_CCore_CICoreApplicationUnhandledError;
#endif /* !defined(____x_ABI_CWindows_CApplicationModel_CCore_CICoreApplicationUnhandledError_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CApplicationModel_CCore_CICoreApplicationUseCount_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CApplicationModel_CCore_CICoreApplicationUseCount_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CApplicationModel_CCore_CICoreApplicationUseCountVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CApplicationModel_CCore_CICoreApplicationUseCount* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CApplicationModel_CCore_CICoreApplicationUseCount* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CApplicationModel_CCore_CICoreApplicationUseCount* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CApplicationModel_CCore_CICoreApplicationUseCount* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CApplicationModel_CCore_CICoreApplicationUseCount* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CApplicationModel_CCore_CICoreApplicationUseCount* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* IncrementApplicationUseCount)(__x_ABI_CWindows_CApplicationModel_CCore_CICoreApplicationUseCount* This);
    HRESULT (STDMETHODCALLTYPE* DecrementApplicationUseCount)(__x_ABI_CWindows_CApplicationModel_CCore_CICoreApplicationUseCount* This);

        END_INTERFACE
    } __x_ABI_CWindows_CApplicationModel_CCore_CICoreApplicationUseCountVtbl;

    interface __x_ABI_CWindows_CApplicationModel_CCore_CICoreApplicationUseCount
    {
        CONST_VTBL struct __x_ABI_CWindows_CApplicationModel_CCore_CICoreApplicationUseCountVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CApplicationModel_CCore_CICoreApplicationUseCount;
#endif /* !defined(____x_ABI_CWindows_CApplicationModel_CCore_CICoreApplicationUseCount_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CApplicationModel_CCore_CICoreApplicationView_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CApplicationModel_CCore_CICoreApplicationView_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CApplicationModel_CCore_CICoreApplicationViewVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CApplicationModel_CCore_CICoreApplicationView* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CApplicationModel_CCore_CICoreApplicationView* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CApplicationModel_CCore_CICoreApplicationView* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CApplicationModel_CCore_CICoreApplicationView* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CApplicationModel_CCore_CICoreApplicationView* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CApplicationModel_CCore_CICoreApplicationView* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_CoreWindow)(__x_ABI_CWindows_CApplicationModel_CCore_CICoreApplicationView* This,
        __x_ABI_CWindows_CUI_CCore_CICoreWindow** value);
    HRESULT (STDMETHODCALLTYPE* add_Activated)(__x_ABI_CWindows_CApplicationModel_CCore_CICoreApplicationView* This,
        __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CApplicationModel__CCore__CCoreApplicationView___x_ABI_CWindows__CApplicationModel__CActivation__CIActivatedEventArgs* handler,
        EventRegistrationToken* token);
    HRESULT (STDMETHODCALLTYPE* remove_Activated)(__x_ABI_CWindows_CApplicationModel_CCore_CICoreApplicationView* This,
        EventRegistrationToken token);
    HRESULT (STDMETHODCALLTYPE* get_IsMain)(__x_ABI_CWindows_CApplicationModel_CCore_CICoreApplicationView* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* get_IsHosted)(__x_ABI_CWindows_CApplicationModel_CCore_CICoreApplicationView* This,
        boolean* value);

        END_INTERFACE
    } __x_ABI_CWindows_CApplicationModel_CCore_CICoreApplicationViewVtbl;

    interface __x_ABI_CWindows_CApplicationModel_CCore_CICoreApplicationView
    {
        CONST_VTBL struct __x_ABI_CWindows_CApplicationModel_CCore_CICoreApplicationViewVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CApplicationModel_CCore_CICoreApplicationView;
#endif /* !defined(____x_ABI_CWindows_CApplicationModel_CCore_CICoreApplicationView_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CApplicationModel_CCore_CICoreApplicationView2_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CApplicationModel_CCore_CICoreApplicationView2_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CApplicationModel_CCore_CICoreApplicationView2Vtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CApplicationModel_CCore_CICoreApplicationView2* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CApplicationModel_CCore_CICoreApplicationView2* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CApplicationModel_CCore_CICoreApplicationView2* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CApplicationModel_CCore_CICoreApplicationView2* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CApplicationModel_CCore_CICoreApplicationView2* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CApplicationModel_CCore_CICoreApplicationView2* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Dispatcher)(__x_ABI_CWindows_CApplicationModel_CCore_CICoreApplicationView2* This,
        __x_ABI_CWindows_CUI_CCore_CICoreDispatcher** value);

        END_INTERFACE
    } __x_ABI_CWindows_CApplicationModel_CCore_CICoreApplicationView2Vtbl;

    interface __x_ABI_CWindows_CApplicationModel_CCore_CICoreApplicationView2
    {
        CONST_VTBL struct __x_ABI_CWindows_CApplicationModel_CCore_CICoreApplicationView2Vtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CApplicationModel_CCore_CICoreApplicationView2;
#endif /* !defined(____x_ABI_CWindows_CApplicationModel_CCore_CICoreApplicationView2_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CApplicationModel_CCore_CICoreApplicationView3_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CApplicationModel_CCore_CICoreApplicationView3_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CApplicationModel_CCore_CICoreApplicationView3Vtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CApplicationModel_CCore_CICoreApplicationView3* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CApplicationModel_CCore_CICoreApplicationView3* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CApplicationModel_CCore_CICoreApplicationView3* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CApplicationModel_CCore_CICoreApplicationView3* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CApplicationModel_CCore_CICoreApplicationView3* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CApplicationModel_CCore_CICoreApplicationView3* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_IsComponent)(__x_ABI_CWindows_CApplicationModel_CCore_CICoreApplicationView3* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* get_TitleBar)(__x_ABI_CWindows_CApplicationModel_CCore_CICoreApplicationView3* This,
        __x_ABI_CWindows_CApplicationModel_CCore_CICoreApplicationViewTitleBar** value);
    HRESULT (STDMETHODCALLTYPE* add_HostedViewClosing)(__x_ABI_CWindows_CApplicationModel_CCore_CICoreApplicationView3* This,
        __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CApplicationModel__CCore__CCoreApplicationView___x_ABI_CWindows__CApplicationModel__CCore__CHostedViewClosingEventArgs* handler,
        EventRegistrationToken* token);
    HRESULT (STDMETHODCALLTYPE* remove_HostedViewClosing)(__x_ABI_CWindows_CApplicationModel_CCore_CICoreApplicationView3* This,
        EventRegistrationToken token);

        END_INTERFACE
    } __x_ABI_CWindows_CApplicationModel_CCore_CICoreApplicationView3Vtbl;

    interface __x_ABI_CWindows_CApplicationModel_CCore_CICoreApplicationView3
    {
        CONST_VTBL struct __x_ABI_CWindows_CApplicationModel_CCore_CICoreApplicationView3Vtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CApplicationModel_CCore_CICoreApplicationView3;
#endif /* !defined(____x_ABI_CWindows_CApplicationModel_CCore_CICoreApplicationView3_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CApplicationModel_CCore_CICoreApplicationView5_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CApplicationModel_CCore_CICoreApplicationView5_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CApplicationModel_CCore_CICoreApplicationView5Vtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CApplicationModel_CCore_CICoreApplicationView5* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CApplicationModel_CCore_CICoreApplicationView5* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CApplicationModel_CCore_CICoreApplicationView5* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CApplicationModel_CCore_CICoreApplicationView5* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CApplicationModel_CCore_CICoreApplicationView5* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CApplicationModel_CCore_CICoreApplicationView5* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Properties)(__x_ABI_CWindows_CApplicationModel_CCore_CICoreApplicationView5* This,
        __x_ABI_CWindows_CFoundation_CCollections_CIPropertySet** value);

        END_INTERFACE
    } __x_ABI_CWindows_CApplicationModel_CCore_CICoreApplicationView5Vtbl;

    interface __x_ABI_CWindows_CApplicationModel_CCore_CICoreApplicationView5
    {
        CONST_VTBL struct __x_ABI_CWindows_CApplicationModel_CCore_CICoreApplicationView5Vtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CApplicationModel_CCore_CICoreApplicationView5;
#endif /* !defined(____x_ABI_CWindows_CApplicationModel_CCore_CICoreApplicationView5_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CApplicationModel_CCore_CICoreApplicationView6_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CApplicationModel_CCore_CICoreApplicationView6_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CApplicationModel_CCore_CICoreApplicationView6Vtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CApplicationModel_CCore_CICoreApplicationView6* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CApplicationModel_CCore_CICoreApplicationView6* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CApplicationModel_CCore_CICoreApplicationView6* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CApplicationModel_CCore_CICoreApplicationView6* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CApplicationModel_CCore_CICoreApplicationView6* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CApplicationModel_CCore_CICoreApplicationView6* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_DispatcherQueue)(__x_ABI_CWindows_CApplicationModel_CCore_CICoreApplicationView6* This,
        __x_ABI_CWindows_CSystem_CIDispatcherQueue** value);

        END_INTERFACE
    } __x_ABI_CWindows_CApplicationModel_CCore_CICoreApplicationView6Vtbl;

    interface __x_ABI_CWindows_CApplicationModel_CCore_CICoreApplicationView6
    {
        CONST_VTBL struct __x_ABI_CWindows_CApplicationModel_CCore_CICoreApplicationView6Vtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CApplicationModel_CCore_CICoreApplicationView6;
#endif /* !defined(____x_ABI_CWindows_CApplicationModel_CCore_CICoreApplicationView6_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CApplicationModel_CCore_CICoreApplicationViewTitleBar_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CApplicationModel_CCore_CICoreApplicationViewTitleBar_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CApplicationModel_CCore_CICoreApplicationViewTitleBarVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CApplicationModel_CCore_CICoreApplicationViewTitleBar* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CApplicationModel_CCore_CICoreApplicationViewTitleBar* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CApplicationModel_CCore_CICoreApplicationViewTitleBar* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CApplicationModel_CCore_CICoreApplicationViewTitleBar* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CApplicationModel_CCore_CICoreApplicationViewTitleBar* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CApplicationModel_CCore_CICoreApplicationViewTitleBar* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* put_ExtendViewIntoTitleBar)(__x_ABI_CWindows_CApplicationModel_CCore_CICoreApplicationViewTitleBar* This,
        boolean value);
    HRESULT (STDMETHODCALLTYPE* get_ExtendViewIntoTitleBar)(__x_ABI_CWindows_CApplicationModel_CCore_CICoreApplicationViewTitleBar* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* get_SystemOverlayLeftInset)(__x_ABI_CWindows_CApplicationModel_CCore_CICoreApplicationViewTitleBar* This,
        DOUBLE* value);
    HRESULT (STDMETHODCALLTYPE* get_SystemOverlayRightInset)(__x_ABI_CWindows_CApplicationModel_CCore_CICoreApplicationViewTitleBar* This,
        DOUBLE* value);
    HRESULT (STDMETHODCALLTYPE* get_Height)(__x_ABI_CWindows_CApplicationModel_CCore_CICoreApplicationViewTitleBar* This,
        DOUBLE* value);
    HRESULT (STDMETHODCALLTYPE* add_LayoutMetricsChanged)(__x_ABI_CWindows_CApplicationModel_CCore_CICoreApplicationViewTitleBar* This,
        __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CApplicationModel__CCore__CCoreApplicationViewTitleBar_IInspectable* handler,
        EventRegistrationToken* token);
    HRESULT (STDMETHODCALLTYPE* remove_LayoutMetricsChanged)(__x_ABI_CWindows_CApplicationModel_CCore_CICoreApplicationViewTitleBar* This,
        EventRegistrationToken token);
    HRESULT (STDMETHODCALLTYPE* get_IsVisible)(__x_ABI_CWindows_CApplicationModel_CCore_CICoreApplicationViewTitleBar* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* add_IsVisibleChanged)(__x_ABI_CWindows_CApplicationModel_CCore_CICoreApplicationViewTitleBar* This,
        __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CApplicationModel__CCore__CCoreApplicationViewTitleBar_IInspectable* handler,
        EventRegistrationToken* token);
    HRESULT (STDMETHODCALLTYPE* remove_IsVisibleChanged)(__x_ABI_CWindows_CApplicationModel_CCore_CICoreApplicationViewTitleBar* This,
        EventRegistrationToken token);

        END_INTERFACE
    } __x_ABI_CWindows_CApplicationModel_CCore_CICoreApplicationViewTitleBarVtbl;

    interface __x_ABI_CWindows_CApplicationModel_CCore_CICoreApplicationViewTitleBar
    {
        CONST_VTBL struct __x_ABI_CWindows_CApplicationModel_CCore_CICoreApplicationViewTitleBarVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CApplicationModel_CCore_CICoreApplicationViewTitleBar;
#endif /* !defined(____x_ABI_CWindows_CApplicationModel_CCore_CICoreApplicationViewTitleBar_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CApplicationModel_CCore_CICoreImmersiveApplication_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CApplicationModel_CCore_CICoreImmersiveApplication_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CApplicationModel_CCore_CICoreImmersiveApplicationVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CApplicationModel_CCore_CICoreImmersiveApplication* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CApplicationModel_CCore_CICoreImmersiveApplication* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CApplicationModel_CCore_CICoreImmersiveApplication* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CApplicationModel_CCore_CICoreImmersiveApplication* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CApplicationModel_CCore_CICoreImmersiveApplication* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CApplicationModel_CCore_CICoreImmersiveApplication* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Views)(__x_ABI_CWindows_CApplicationModel_CCore_CICoreImmersiveApplication* This,
        __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CCore__CCoreApplicationView** value);
    HRESULT (STDMETHODCALLTYPE* CreateNewView)(__x_ABI_CWindows_CApplicationModel_CCore_CICoreImmersiveApplication* This,
        HSTRING runtimeType,
        HSTRING entryPoint,
        __x_ABI_CWindows_CApplicationModel_CCore_CICoreApplicationView** view);
    HRESULT (STDMETHODCALLTYPE* get_MainView)(__x_ABI_CWindows_CApplicationModel_CCore_CICoreImmersiveApplication* This,
        __x_ABI_CWindows_CApplicationModel_CCore_CICoreApplicationView** value);

        END_INTERFACE
    } __x_ABI_CWindows_CApplicationModel_CCore_CICoreImmersiveApplicationVtbl;

    interface __x_ABI_CWindows_CApplicationModel_CCore_CICoreImmersiveApplication
    {
        CONST_VTBL struct __x_ABI_CWindows_CApplicationModel_CCore_CICoreImmersiveApplicationVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CApplicationModel_CCore_CICoreImmersiveApplication;
#endif /* !defined(____x_ABI_CWindows_CApplicationModel_CCore_CICoreImmersiveApplication_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CApplicationModel_CCore_CICoreImmersiveApplication2_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CApplicationModel_CCore_CICoreImmersiveApplication2_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CApplicationModel_CCore_CICoreImmersiveApplication2Vtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CApplicationModel_CCore_CICoreImmersiveApplication2* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CApplicationModel_CCore_CICoreImmersiveApplication2* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CApplicationModel_CCore_CICoreImmersiveApplication2* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CApplicationModel_CCore_CICoreImmersiveApplication2* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CApplicationModel_CCore_CICoreImmersiveApplication2* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CApplicationModel_CCore_CICoreImmersiveApplication2* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* CreateNewViewFromMainView)(__x_ABI_CWindows_CApplicationModel_CCore_CICoreImmersiveApplication2* This,
        __x_ABI_CWindows_CApplicationModel_CCore_CICoreApplicationView** view);

        END_INTERFACE
    } __x_ABI_CWindows_CApplicationModel_CCore_CICoreImmersiveApplication2Vtbl;

    interface __x_ABI_CWindows_CApplicationModel_CCore_CICoreImmersiveApplication2
    {
        CONST_VTBL struct __x_ABI_CWindows_CApplicationModel_CCore_CICoreImmersiveApplication2Vtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CApplicationModel_CCore_CICoreImmersiveApplication2;
#endif /* !defined(____x_ABI_CWindows_CApplicationModel_CCore_CICoreImmersiveApplication2_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CApplicationModel_CCore_CICoreImmersiveApplication3_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CApplicationModel_CCore_CICoreImmersiveApplication3_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CApplicationModel_CCore_CICoreImmersiveApplication3Vtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CApplicationModel_CCore_CICoreImmersiveApplication3* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CApplicationModel_CCore_CICoreImmersiveApplication3* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CApplicationModel_CCore_CICoreImmersiveApplication3* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CApplicationModel_CCore_CICoreImmersiveApplication3* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CApplicationModel_CCore_CICoreImmersiveApplication3* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CApplicationModel_CCore_CICoreImmersiveApplication3* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* CreateNewViewWithViewSource)(__x_ABI_CWindows_CApplicationModel_CCore_CICoreImmersiveApplication3* This,
        __x_ABI_CWindows_CApplicationModel_CCore_CIFrameworkViewSource* viewSource,
        __x_ABI_CWindows_CApplicationModel_CCore_CICoreApplicationView** view);

        END_INTERFACE
    } __x_ABI_CWindows_CApplicationModel_CCore_CICoreImmersiveApplication3Vtbl;

    interface __x_ABI_CWindows_CApplicationModel_CCore_CICoreImmersiveApplication3
    {
        CONST_VTBL struct __x_ABI_CWindows_CApplicationModel_CCore_CICoreImmersiveApplication3Vtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CApplicationModel_CCore_CICoreImmersiveApplication3;
#endif /* !defined(____x_ABI_CWindows_CApplicationModel_CCore_CICoreImmersiveApplication3_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CApplicationModel_CCore_CIFrameworkView_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CApplicationModel_CCore_CIFrameworkView_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CApplicationModel_CCore_CIFrameworkViewVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CApplicationModel_CCore_CIFrameworkView* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CApplicationModel_CCore_CIFrameworkView* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CApplicationModel_CCore_CIFrameworkView* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CApplicationModel_CCore_CIFrameworkView* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CApplicationModel_CCore_CIFrameworkView* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CApplicationModel_CCore_CIFrameworkView* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* Initialize)(__x_ABI_CWindows_CApplicationModel_CCore_CIFrameworkView* This,
        __x_ABI_CWindows_CApplicationModel_CCore_CICoreApplicationView* applicationView);
    HRESULT (STDMETHODCALLTYPE* SetWindow)(__x_ABI_CWindows_CApplicationModel_CCore_CIFrameworkView* This,
        __x_ABI_CWindows_CUI_CCore_CICoreWindow* window);
    HRESULT (STDMETHODCALLTYPE* Load)(__x_ABI_CWindows_CApplicationModel_CCore_CIFrameworkView* This,
        HSTRING entryPoint);
    HRESULT (STDMETHODCALLTYPE* Run)(__x_ABI_CWindows_CApplicationModel_CCore_CIFrameworkView* This);
    HRESULT (STDMETHODCALLTYPE* Uninitialize)(__x_ABI_CWindows_CApplicationModel_CCore_CIFrameworkView* This);

        END_INTERFACE
    } __x_ABI_CWindows_CApplicationModel_CCore_CIFrameworkViewVtbl;

    interface __x_ABI_CWindows_CApplicationModel_CCore_CIFrameworkView
    {
        CONST_VTBL struct __x_ABI_CWindows_CApplicationModel_CCore_CIFrameworkViewVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CApplicationModel_CCore_CIFrameworkView;
#endif /* !defined(____x_ABI_CWindows_CApplicationModel_CCore_CIFrameworkView_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CApplicationModel_CCore_CIFrameworkViewSource_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CApplicationModel_CCore_CIFrameworkViewSource_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CApplicationModel_CCore_CIFrameworkViewSourceVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CApplicationModel_CCore_CIFrameworkViewSource* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CApplicationModel_CCore_CIFrameworkViewSource* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CApplicationModel_CCore_CIFrameworkViewSource* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CApplicationModel_CCore_CIFrameworkViewSource* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CApplicationModel_CCore_CIFrameworkViewSource* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CApplicationModel_CCore_CIFrameworkViewSource* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* CreateView)(__x_ABI_CWindows_CApplicationModel_CCore_CIFrameworkViewSource* This,
        __x_ABI_CWindows_CApplicationModel_CCore_CIFrameworkView** viewProvider);

        END_INTERFACE
    } __x_ABI_CWindows_CApplicationModel_CCore_CIFrameworkViewSourceVtbl;

    interface __x_ABI_CWindows_CApplicationModel_CCore_CIFrameworkViewSource
    {
        CONST_VTBL struct __x_ABI_CWindows_CApplicationModel_CCore_CIFrameworkViewSourceVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CApplicationModel_CCore_CIFrameworkViewSource;
#endif /* !defined(____x_ABI_CWindows_CApplicationModel_CCore_CIFrameworkViewSource_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CApplicationModel_CCore_CIHostedViewClosingEventArgs_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CApplicationModel_CCore_CIHostedViewClosingEventArgs_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CApplicationModel_CCore_CIHostedViewClosingEventArgsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CApplicationModel_CCore_CIHostedViewClosingEventArgs* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CApplicationModel_CCore_CIHostedViewClosingEventArgs* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CApplicationModel_CCore_CIHostedViewClosingEventArgs* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CApplicationModel_CCore_CIHostedViewClosingEventArgs* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CApplicationModel_CCore_CIHostedViewClosingEventArgs* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CApplicationModel_CCore_CIHostedViewClosingEventArgs* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* GetDeferral)(__x_ABI_CWindows_CApplicationModel_CCore_CIHostedViewClosingEventArgs* This,
        __x_ABI_CWindows_CFoundation_CIDeferral** result);

        END_INTERFACE
    } __x_ABI_CWindows_CApplicationModel_CCore_CIHostedViewClosingEventArgsVtbl;

    interface __x_ABI_CWindows_CApplicationModel_CCore_CIHostedViewClosingEventArgs
    {
        CONST_VTBL struct __x_ABI_CWindows_CApplicationModel_CCore_CIHostedViewClosingEventArgsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CApplicationModel_CCore_CIHostedViewClosingEventArgs;
#endif /* !defined(____x_ABI_CWindows_CApplicationModel_CCore_CIHostedViewClosingEventArgs_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CApplicationModel_CCore_CIUnhandledError_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CApplicationModel_CCore_CIUnhandledError_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CApplicationModel_CCore_CIUnhandledErrorVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CApplicationModel_CCore_CIUnhandledError* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CApplicationModel_CCore_CIUnhandledError* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CApplicationModel_CCore_CIUnhandledError* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CApplicationModel_CCore_CIUnhandledError* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CApplicationModel_CCore_CIUnhandledError* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CApplicationModel_CCore_CIUnhandledError* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Handled)(__x_ABI_CWindows_CApplicationModel_CCore_CIUnhandledError* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* Propagate)(__x_ABI_CWindows_CApplicationModel_CCore_CIUnhandledError* This);

        END_INTERFACE
    } __x_ABI_CWindows_CApplicationModel_CCore_CIUnhandledErrorVtbl;

    interface __x_ABI_CWindows_CApplicationModel_CCore_CIUnhandledError
    {
        CONST_VTBL struct __x_ABI_CWindows_CApplicationModel_CCore_CIUnhandledErrorVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CApplicationModel_CCore_CIUnhandledError;
#endif /* !defined(____x_ABI_CWindows_CApplicationModel_CCore_CIUnhandledError_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CApplicationModel_CCore_CIUnhandledErrorDetectedEventArgs_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CApplicationModel_CCore_CIUnhandledErrorDetectedEventArgs_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CApplicationModel_CCore_CIUnhandledErrorDetectedEventArgsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CApplicationModel_CCore_CIUnhandledErrorDetectedEventArgs* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CApplicationModel_CCore_CIUnhandledErrorDetectedEventArgs* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CApplicationModel_CCore_CIUnhandledErrorDetectedEventArgs* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CApplicationModel_CCore_CIUnhandledErrorDetectedEventArgs* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CApplicationModel_CCore_CIUnhandledErrorDetectedEventArgs* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CApplicationModel_CCore_CIUnhandledErrorDetectedEventArgs* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_UnhandledError)(__x_ABI_CWindows_CApplicationModel_CCore_CIUnhandledErrorDetectedEventArgs* This,
        __x_ABI_CWindows_CApplicationModel_CCore_CIUnhandledError** value);

        END_INTERFACE
    } __x_ABI_CWindows_CApplicationModel_CCore_CIUnhandledErrorDetectedEventArgsVtbl;

    interface __x_ABI_CWindows_CApplicationModel_CCore_CIUnhandledErrorDetectedEventArgs
    {
        CONST_VTBL struct __x_ABI_CWindows_CApplicationModel_CCore_CIUnhandledErrorDetectedEventArgsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CApplicationModel_CCore_CIUnhandledErrorDetectedEventArgs;
#endif /* !defined(____x_ABI_CWindows_CApplicationModel_CCore_CIUnhandledErrorDetectedEventArgs_INTERFACE_DEFINED__) */
    
