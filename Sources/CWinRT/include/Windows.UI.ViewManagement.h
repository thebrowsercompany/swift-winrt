// WARNING: Please don't edit this file. It was generated by Swift/WinRT v0.0.1

#pragma once
// Header files for imported files
#include <inspectable.h>
#include <EventToken.h>
#include <windowscontracts.h>
#include "Windows.Foundation.h"
#include "Windows.Devices.Enumeration.h"
#include "Windows.UI.h"
#include "Windows.UI.Core.h"
#include "Windows.UI.Popups.h"
#include "Windows.UI.WindowManagement.h"
// Importing Collections header
#include "Windows.Foundation.Collections.h"

/* Forward Declarations */
#ifndef ____x_ABI_CWindows_CUI_CViewManagement_CIAccessibilitySettings_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CViewManagement_CIAccessibilitySettings_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CViewManagement_CIAccessibilitySettings __x_ABI_CWindows_CUI_CViewManagement_CIAccessibilitySettings;

#endif // ____x_ABI_CWindows_CUI_CViewManagement_CIAccessibilitySettings_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CViewManagement_CIActivationViewSwitcher_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CViewManagement_CIActivationViewSwitcher_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CViewManagement_CIActivationViewSwitcher __x_ABI_CWindows_CUI_CViewManagement_CIActivationViewSwitcher;

#endif // ____x_ABI_CWindows_CUI_CViewManagement_CIActivationViewSwitcher_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CViewManagement_CIApplicationView_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CViewManagement_CIApplicationView_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CViewManagement_CIApplicationView __x_ABI_CWindows_CUI_CViewManagement_CIApplicationView;

#endif // ____x_ABI_CWindows_CUI_CViewManagement_CIApplicationView_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CViewManagement_CIApplicationView2_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CViewManagement_CIApplicationView2_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CViewManagement_CIApplicationView2 __x_ABI_CWindows_CUI_CViewManagement_CIApplicationView2;

#endif // ____x_ABI_CWindows_CUI_CViewManagement_CIApplicationView2_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CViewManagement_CIApplicationView3_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CViewManagement_CIApplicationView3_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CViewManagement_CIApplicationView3 __x_ABI_CWindows_CUI_CViewManagement_CIApplicationView3;

#endif // ____x_ABI_CWindows_CUI_CViewManagement_CIApplicationView3_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CViewManagement_CIApplicationView4_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CViewManagement_CIApplicationView4_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CViewManagement_CIApplicationView4 __x_ABI_CWindows_CUI_CViewManagement_CIApplicationView4;

#endif // ____x_ABI_CWindows_CUI_CViewManagement_CIApplicationView4_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CViewManagement_CIApplicationView7_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CViewManagement_CIApplicationView7_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CViewManagement_CIApplicationView7 __x_ABI_CWindows_CUI_CViewManagement_CIApplicationView7;

#endif // ____x_ABI_CWindows_CUI_CViewManagement_CIApplicationView7_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CViewManagement_CIApplicationView9_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CViewManagement_CIApplicationView9_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CViewManagement_CIApplicationView9 __x_ABI_CWindows_CUI_CViewManagement_CIApplicationView9;

#endif // ____x_ABI_CWindows_CUI_CViewManagement_CIApplicationView9_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CViewManagement_CIApplicationViewConsolidatedEventArgs_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CViewManagement_CIApplicationViewConsolidatedEventArgs_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CViewManagement_CIApplicationViewConsolidatedEventArgs __x_ABI_CWindows_CUI_CViewManagement_CIApplicationViewConsolidatedEventArgs;

#endif // ____x_ABI_CWindows_CUI_CViewManagement_CIApplicationViewConsolidatedEventArgs_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CViewManagement_CIApplicationViewConsolidatedEventArgs2_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CViewManagement_CIApplicationViewConsolidatedEventArgs2_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CViewManagement_CIApplicationViewConsolidatedEventArgs2 __x_ABI_CWindows_CUI_CViewManagement_CIApplicationViewConsolidatedEventArgs2;

#endif // ____x_ABI_CWindows_CUI_CViewManagement_CIApplicationViewConsolidatedEventArgs2_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CViewManagement_CIApplicationViewFullscreenStatics_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CViewManagement_CIApplicationViewFullscreenStatics_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CViewManagement_CIApplicationViewFullscreenStatics __x_ABI_CWindows_CUI_CViewManagement_CIApplicationViewFullscreenStatics;

#endif // ____x_ABI_CWindows_CUI_CViewManagement_CIApplicationViewFullscreenStatics_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CViewManagement_CIApplicationViewInteropStatics_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CViewManagement_CIApplicationViewInteropStatics_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CViewManagement_CIApplicationViewInteropStatics __x_ABI_CWindows_CUI_CViewManagement_CIApplicationViewInteropStatics;

#endif // ____x_ABI_CWindows_CUI_CViewManagement_CIApplicationViewInteropStatics_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CViewManagement_CIApplicationViewScaling_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CViewManagement_CIApplicationViewScaling_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CViewManagement_CIApplicationViewScaling __x_ABI_CWindows_CUI_CViewManagement_CIApplicationViewScaling;

#endif // ____x_ABI_CWindows_CUI_CViewManagement_CIApplicationViewScaling_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CViewManagement_CIApplicationViewScalingStatics_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CViewManagement_CIApplicationViewScalingStatics_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CViewManagement_CIApplicationViewScalingStatics __x_ABI_CWindows_CUI_CViewManagement_CIApplicationViewScalingStatics;

#endif // ____x_ABI_CWindows_CUI_CViewManagement_CIApplicationViewScalingStatics_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CViewManagement_CIApplicationViewStatics_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CViewManagement_CIApplicationViewStatics_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CViewManagement_CIApplicationViewStatics __x_ABI_CWindows_CUI_CViewManagement_CIApplicationViewStatics;

#endif // ____x_ABI_CWindows_CUI_CViewManagement_CIApplicationViewStatics_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CViewManagement_CIApplicationViewStatics2_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CViewManagement_CIApplicationViewStatics2_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CViewManagement_CIApplicationViewStatics2 __x_ABI_CWindows_CUI_CViewManagement_CIApplicationViewStatics2;

#endif // ____x_ABI_CWindows_CUI_CViewManagement_CIApplicationViewStatics2_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CViewManagement_CIApplicationViewStatics3_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CViewManagement_CIApplicationViewStatics3_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CViewManagement_CIApplicationViewStatics3 __x_ABI_CWindows_CUI_CViewManagement_CIApplicationViewStatics3;

#endif // ____x_ABI_CWindows_CUI_CViewManagement_CIApplicationViewStatics3_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CViewManagement_CIApplicationViewStatics4_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CViewManagement_CIApplicationViewStatics4_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CViewManagement_CIApplicationViewStatics4 __x_ABI_CWindows_CUI_CViewManagement_CIApplicationViewStatics4;

#endif // ____x_ABI_CWindows_CUI_CViewManagement_CIApplicationViewStatics4_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CViewManagement_CIApplicationViewSwitcherStatics_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CViewManagement_CIApplicationViewSwitcherStatics_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CViewManagement_CIApplicationViewSwitcherStatics __x_ABI_CWindows_CUI_CViewManagement_CIApplicationViewSwitcherStatics;

#endif // ____x_ABI_CWindows_CUI_CViewManagement_CIApplicationViewSwitcherStatics_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CViewManagement_CIApplicationViewSwitcherStatics2_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CViewManagement_CIApplicationViewSwitcherStatics2_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CViewManagement_CIApplicationViewSwitcherStatics2 __x_ABI_CWindows_CUI_CViewManagement_CIApplicationViewSwitcherStatics2;

#endif // ____x_ABI_CWindows_CUI_CViewManagement_CIApplicationViewSwitcherStatics2_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CViewManagement_CIApplicationViewSwitcherStatics3_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CViewManagement_CIApplicationViewSwitcherStatics3_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CViewManagement_CIApplicationViewSwitcherStatics3 __x_ABI_CWindows_CUI_CViewManagement_CIApplicationViewSwitcherStatics3;

#endif // ____x_ABI_CWindows_CUI_CViewManagement_CIApplicationViewSwitcherStatics3_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CViewManagement_CIApplicationViewTitleBar_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CViewManagement_CIApplicationViewTitleBar_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CViewManagement_CIApplicationViewTitleBar __x_ABI_CWindows_CUI_CViewManagement_CIApplicationViewTitleBar;

#endif // ____x_ABI_CWindows_CUI_CViewManagement_CIApplicationViewTitleBar_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CViewManagement_CIApplicationViewTransferContext_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CViewManagement_CIApplicationViewTransferContext_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CViewManagement_CIApplicationViewTransferContext __x_ABI_CWindows_CUI_CViewManagement_CIApplicationViewTransferContext;

#endif // ____x_ABI_CWindows_CUI_CViewManagement_CIApplicationViewTransferContext_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CViewManagement_CIApplicationViewTransferContextStatics_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CViewManagement_CIApplicationViewTransferContextStatics_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CViewManagement_CIApplicationViewTransferContextStatics __x_ABI_CWindows_CUI_CViewManagement_CIApplicationViewTransferContextStatics;

#endif // ____x_ABI_CWindows_CUI_CViewManagement_CIApplicationViewTransferContextStatics_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CViewManagement_CIApplicationViewWithContext_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CViewManagement_CIApplicationViewWithContext_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CViewManagement_CIApplicationViewWithContext __x_ABI_CWindows_CUI_CViewManagement_CIApplicationViewWithContext;

#endif // ____x_ABI_CWindows_CUI_CViewManagement_CIApplicationViewWithContext_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CViewManagement_CIInputPane_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CViewManagement_CIInputPane_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CViewManagement_CIInputPane __x_ABI_CWindows_CUI_CViewManagement_CIInputPane;

#endif // ____x_ABI_CWindows_CUI_CViewManagement_CIInputPane_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CViewManagement_CIInputPane2_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CViewManagement_CIInputPane2_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CViewManagement_CIInputPane2 __x_ABI_CWindows_CUI_CViewManagement_CIInputPane2;

#endif // ____x_ABI_CWindows_CUI_CViewManagement_CIInputPane2_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CViewManagement_CIInputPaneControl_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CViewManagement_CIInputPaneControl_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CViewManagement_CIInputPaneControl __x_ABI_CWindows_CUI_CViewManagement_CIInputPaneControl;

#endif // ____x_ABI_CWindows_CUI_CViewManagement_CIInputPaneControl_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CViewManagement_CIInputPaneStatics_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CViewManagement_CIInputPaneStatics_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CViewManagement_CIInputPaneStatics __x_ABI_CWindows_CUI_CViewManagement_CIInputPaneStatics;

#endif // ____x_ABI_CWindows_CUI_CViewManagement_CIInputPaneStatics_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CViewManagement_CIInputPaneStatics2_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CViewManagement_CIInputPaneStatics2_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CViewManagement_CIInputPaneStatics2 __x_ABI_CWindows_CUI_CViewManagement_CIInputPaneStatics2;

#endif // ____x_ABI_CWindows_CUI_CViewManagement_CIInputPaneStatics2_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CViewManagement_CIInputPaneVisibilityEventArgs_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CViewManagement_CIInputPaneVisibilityEventArgs_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CViewManagement_CIInputPaneVisibilityEventArgs __x_ABI_CWindows_CUI_CViewManagement_CIInputPaneVisibilityEventArgs;

#endif // ____x_ABI_CWindows_CUI_CViewManagement_CIInputPaneVisibilityEventArgs_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CViewManagement_CIProjectionManagerStatics_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CViewManagement_CIProjectionManagerStatics_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CViewManagement_CIProjectionManagerStatics __x_ABI_CWindows_CUI_CViewManagement_CIProjectionManagerStatics;

#endif // ____x_ABI_CWindows_CUI_CViewManagement_CIProjectionManagerStatics_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CViewManagement_CIProjectionManagerStatics2_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CViewManagement_CIProjectionManagerStatics2_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CViewManagement_CIProjectionManagerStatics2 __x_ABI_CWindows_CUI_CViewManagement_CIProjectionManagerStatics2;

#endif // ____x_ABI_CWindows_CUI_CViewManagement_CIProjectionManagerStatics2_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CViewManagement_CIStatusBar_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CViewManagement_CIStatusBar_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CViewManagement_CIStatusBar __x_ABI_CWindows_CUI_CViewManagement_CIStatusBar;

#endif // ____x_ABI_CWindows_CUI_CViewManagement_CIStatusBar_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CViewManagement_CIStatusBarProgressIndicator_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CViewManagement_CIStatusBarProgressIndicator_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CViewManagement_CIStatusBarProgressIndicator __x_ABI_CWindows_CUI_CViewManagement_CIStatusBarProgressIndicator;

#endif // ____x_ABI_CWindows_CUI_CViewManagement_CIStatusBarProgressIndicator_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CViewManagement_CIStatusBarStatics_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CViewManagement_CIStatusBarStatics_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CViewManagement_CIStatusBarStatics __x_ABI_CWindows_CUI_CViewManagement_CIStatusBarStatics;

#endif // ____x_ABI_CWindows_CUI_CViewManagement_CIStatusBarStatics_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CViewManagement_CIUISettings_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CViewManagement_CIUISettings_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CViewManagement_CIUISettings __x_ABI_CWindows_CUI_CViewManagement_CIUISettings;

#endif // ____x_ABI_CWindows_CUI_CViewManagement_CIUISettings_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CViewManagement_CIUISettings2_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CViewManagement_CIUISettings2_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CViewManagement_CIUISettings2 __x_ABI_CWindows_CUI_CViewManagement_CIUISettings2;

#endif // ____x_ABI_CWindows_CUI_CViewManagement_CIUISettings2_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CViewManagement_CIUISettings3_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CViewManagement_CIUISettings3_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CViewManagement_CIUISettings3 __x_ABI_CWindows_CUI_CViewManagement_CIUISettings3;

#endif // ____x_ABI_CWindows_CUI_CViewManagement_CIUISettings3_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CViewManagement_CIUISettings4_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CViewManagement_CIUISettings4_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CViewManagement_CIUISettings4 __x_ABI_CWindows_CUI_CViewManagement_CIUISettings4;

#endif // ____x_ABI_CWindows_CUI_CViewManagement_CIUISettings4_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CViewManagement_CIUISettings5_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CViewManagement_CIUISettings5_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CViewManagement_CIUISettings5 __x_ABI_CWindows_CUI_CViewManagement_CIUISettings5;

#endif // ____x_ABI_CWindows_CUI_CViewManagement_CIUISettings5_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CViewManagement_CIUISettingsAutoHideScrollBarsChangedEventArgs_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CViewManagement_CIUISettingsAutoHideScrollBarsChangedEventArgs_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CViewManagement_CIUISettingsAutoHideScrollBarsChangedEventArgs __x_ABI_CWindows_CUI_CViewManagement_CIUISettingsAutoHideScrollBarsChangedEventArgs;

#endif // ____x_ABI_CWindows_CUI_CViewManagement_CIUISettingsAutoHideScrollBarsChangedEventArgs_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CViewManagement_CIUIViewSettings_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CViewManagement_CIUIViewSettings_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CViewManagement_CIUIViewSettings __x_ABI_CWindows_CUI_CViewManagement_CIUIViewSettings;

#endif // ____x_ABI_CWindows_CUI_CViewManagement_CIUIViewSettings_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CViewManagement_CIUIViewSettingsStatics_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CViewManagement_CIUIViewSettingsStatics_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CViewManagement_CIUIViewSettingsStatics __x_ABI_CWindows_CUI_CViewManagement_CIUIViewSettingsStatics;

#endif // ____x_ABI_CWindows_CUI_CViewManagement_CIUIViewSettingsStatics_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CViewManagement_CIViewModePreferences_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CViewManagement_CIViewModePreferences_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CViewManagement_CIViewModePreferences __x_ABI_CWindows_CUI_CViewManagement_CIViewModePreferences;

#endif // ____x_ABI_CWindows_CUI_CViewManagement_CIViewModePreferences_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CViewManagement_CIViewModePreferencesStatics_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CViewManagement_CIViewModePreferencesStatics_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CViewManagement_CIViewModePreferencesStatics __x_ABI_CWindows_CUI_CViewManagement_CIViewModePreferencesStatics;

#endif // ____x_ABI_CWindows_CUI_CViewManagement_CIViewModePreferencesStatics_FWD_DEFINED__

// Parameterized interface forward declarations (C)

// Collection interface definitions

typedef interface __x_ABI_C__FIAsyncOperationCompletedHandler_1_boolean __x_ABI_C__FIAsyncOperationCompletedHandler_1_boolean;

#if !defined(____x_ABI_C__FIAsyncOperation_1_boolean_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIAsyncOperation_1_boolean_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIAsyncOperation_1_boolean __x_ABI_C__FIAsyncOperation_1_boolean;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIAsyncOperation_1_boolean;

    typedef struct __x_ABI_C__FIAsyncOperation_1_booleanVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIAsyncOperation_1_boolean* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIAsyncOperation_1_boolean* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIAsyncOperation_1_boolean* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIAsyncOperation_1_boolean* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIAsyncOperation_1_boolean* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIAsyncOperation_1_boolean* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* put_Completed)(__x_ABI_C__FIAsyncOperation_1_boolean* This,
        __x_ABI_C__FIAsyncOperationCompletedHandler_1_boolean* handler);
    HRESULT (STDMETHODCALLTYPE* get_Completed)(__x_ABI_C__FIAsyncOperation_1_boolean* This,
        __x_ABI_C__FIAsyncOperationCompletedHandler_1_boolean** result);
    HRESULT (STDMETHODCALLTYPE* GetResults)(__x_ABI_C__FIAsyncOperation_1_boolean* This,
        boolean* result);

        END_INTERFACE
    } __x_ABI_C__FIAsyncOperation_1_booleanVtbl;

    interface __x_ABI_C__FIAsyncOperation_1_boolean
    {
        CONST_VTBL struct __x_ABI_C__FIAsyncOperation_1_booleanVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIAsyncOperation_1_boolean_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIAsyncOperationCompletedHandler_1_boolean_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIAsyncOperationCompletedHandler_1_boolean_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIAsyncOperationCompletedHandler_1_boolean __x_ABI_C__FIAsyncOperationCompletedHandler_1_boolean;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIAsyncOperationCompletedHandler_1_boolean;

    typedef struct __x_ABI_C__FIAsyncOperationCompletedHandler_1_booleanVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIAsyncOperationCompletedHandler_1_boolean* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIAsyncOperationCompletedHandler_1_boolean* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIAsyncOperationCompletedHandler_1_boolean* This);
        HRESULT (STDMETHODCALLTYPE* Invoke)(__x_ABI_C__FIAsyncOperationCompletedHandler_1_boolean* This,
        __x_ABI_C__FIAsyncOperation_1_boolean* asyncInfo,
        enum __x_ABI_CWindows_CFoundation_CAsyncStatus asyncStatus);

        END_INTERFACE
    } __x_ABI_C__FIAsyncOperationCompletedHandler_1_booleanVtbl;

    interface __x_ABI_C__FIAsyncOperationCompletedHandler_1_boolean
    {
        CONST_VTBL struct __x_ABI_C__FIAsyncOperationCompletedHandler_1_booleanVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIAsyncOperationCompletedHandler_1_boolean_INTERFACE_DEFINED__
    
#ifndef ____x_ABI_CWindows_CUI_CWindowManagement_CIDisplayRegion_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CWindowManagement_CIDisplayRegion_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CWindowManagement_CIDisplayRegion __x_ABI_CWindows_CUI_CWindowManagement_CIDisplayRegion;

#endif // ____x_ABI_CWindows_CUI_CWindowManagement_CIDisplayRegion_FWD_DEFINED__

#if !defined(____x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CWindowManagement__CDisplayRegion_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CWindowManagement__CDisplayRegion_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CWindowManagement__CDisplayRegion __x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CWindowManagement__CDisplayRegion;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CWindowManagement__CDisplayRegion;

    typedef struct __x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CWindowManagement__CDisplayRegionVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CWindowManagement__CDisplayRegion* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CWindowManagement__CDisplayRegion* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CWindowManagement__CDisplayRegion* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CWindowManagement__CDisplayRegion* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CWindowManagement__CDisplayRegion* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CWindowManagement__CDisplayRegion* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Current)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CWindowManagement__CDisplayRegion* This,
        __x_ABI_CWindows_CUI_CWindowManagement_CIDisplayRegion** result);
    HRESULT (STDMETHODCALLTYPE* get_HasCurrent)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CWindowManagement__CDisplayRegion* This,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* MoveNext)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CWindowManagement__CDisplayRegion* This,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CWindowManagement__CDisplayRegion* This,
        UINT32 itemsLength,
        __x_ABI_CWindows_CUI_CWindowManagement_CIDisplayRegion** items,
        UINT32* result);

        END_INTERFACE
    } __x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CWindowManagement__CDisplayRegionVtbl;

    interface __x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CWindowManagement__CDisplayRegion
    {
        CONST_VTBL struct __x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CWindowManagement__CDisplayRegionVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CWindowManagement__CDisplayRegion_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIIterable_1___x_ABI_CWindows__CUI__CWindowManagement__CDisplayRegion_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIIterable_1___x_ABI_CWindows__CUI__CWindowManagement__CDisplayRegion_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIIterable_1___x_ABI_CWindows__CUI__CWindowManagement__CDisplayRegion __x_ABI_C__FIIterable_1___x_ABI_CWindows__CUI__CWindowManagement__CDisplayRegion;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIIterable_1___x_ABI_CWindows__CUI__CWindowManagement__CDisplayRegion;

    typedef struct __x_ABI_C__FIIterable_1___x_ABI_CWindows__CUI__CWindowManagement__CDisplayRegionVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CUI__CWindowManagement__CDisplayRegion* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CUI__CWindowManagement__CDisplayRegion* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CUI__CWindowManagement__CDisplayRegion* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CUI__CWindowManagement__CDisplayRegion* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CUI__CWindowManagement__CDisplayRegion* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CUI__CWindowManagement__CDisplayRegion* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* First)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CUI__CWindowManagement__CDisplayRegion* This,
        __x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CWindowManagement__CDisplayRegion** result);

        END_INTERFACE
    } __x_ABI_C__FIIterable_1___x_ABI_CWindows__CUI__CWindowManagement__CDisplayRegionVtbl;

    interface __x_ABI_C__FIIterable_1___x_ABI_CWindows__CUI__CWindowManagement__CDisplayRegion
    {
        CONST_VTBL struct __x_ABI_C__FIIterable_1___x_ABI_CWindows__CUI__CWindowManagement__CDisplayRegionVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIIterable_1___x_ABI_CWindows__CUI__CWindowManagement__CDisplayRegion_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CWindowManagement__CDisplayRegion_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CWindowManagement__CDisplayRegion_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CWindowManagement__CDisplayRegion __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CWindowManagement__CDisplayRegion;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CWindowManagement__CDisplayRegion;

    typedef struct __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CWindowManagement__CDisplayRegionVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CWindowManagement__CDisplayRegion* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CWindowManagement__CDisplayRegion* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CWindowManagement__CDisplayRegion* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CWindowManagement__CDisplayRegion* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CWindowManagement__CDisplayRegion* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CWindowManagement__CDisplayRegion* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* GetAt)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CWindowManagement__CDisplayRegion* This,
        UINT32 index,
        __x_ABI_CWindows_CUI_CWindowManagement_CIDisplayRegion** result);
    HRESULT (STDMETHODCALLTYPE* get_Size)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CWindowManagement__CDisplayRegion* This,
        UINT32* result);
    HRESULT (STDMETHODCALLTYPE* IndexOf)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CWindowManagement__CDisplayRegion* This,
        __x_ABI_CWindows_CUI_CWindowManagement_CIDisplayRegion* value,
        UINT32* index,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CWindowManagement__CDisplayRegion* This,
        UINT32 startIndex,
        UINT32 itemsLength,
        __x_ABI_CWindows_CUI_CWindowManagement_CIDisplayRegion** items,
        UINT32* result);

        END_INTERFACE
    } __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CWindowManagement__CDisplayRegionVtbl;

    interface __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CWindowManagement__CDisplayRegion
    {
        CONST_VTBL struct __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CWindowManagement__CDisplayRegionVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CWindowManagement__CDisplayRegion_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIEventHandler_1_IInspectable_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIEventHandler_1_IInspectable_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIEventHandler_1_IInspectable __x_ABI_C__FIEventHandler_1_IInspectable;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIEventHandler_1_IInspectable;

    typedef struct __x_ABI_C__FIEventHandler_1_IInspectableVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIEventHandler_1_IInspectable* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIEventHandler_1_IInspectable* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIEventHandler_1_IInspectable* This);
        HRESULT (STDMETHODCALLTYPE* Invoke)(__x_ABI_C__FIEventHandler_1_IInspectable* This,
        IInspectable* sender,
        IInspectable* args);

        END_INTERFACE
    } __x_ABI_C__FIEventHandler_1_IInspectableVtbl;

    interface __x_ABI_C__FIEventHandler_1_IInspectable
    {
        CONST_VTBL struct __x_ABI_C__FIEventHandler_1_IInspectableVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIEventHandler_1_IInspectable_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIReference_1_double_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIReference_1_double_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIReference_1_double __x_ABI_C__FIReference_1_double;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIReference_1_double;

    typedef struct __x_ABI_C__FIReference_1_doubleVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIReference_1_double* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIReference_1_double* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIReference_1_double* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIReference_1_double* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIReference_1_double* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIReference_1_double* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Value)(__x_ABI_C__FIReference_1_double* This,
        DOUBLE* result);

        END_INTERFACE
    } __x_ABI_C__FIReference_1_doubleVtbl;

    interface __x_ABI_C__FIReference_1_double
    {
        CONST_VTBL struct __x_ABI_C__FIReference_1_doubleVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIReference_1_double_INTERFACE_DEFINED__
    
typedef struct __x_ABI_CWindows_CUI_CColor __x_ABI_CWindows_CUI_CColor;

#if !defined(____x_ABI_C__FIReference_1___x_ABI_CWindows__CUI__CColor_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIReference_1___x_ABI_CWindows__CUI__CColor_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIReference_1___x_ABI_CWindows__CUI__CColor __x_ABI_C__FIReference_1___x_ABI_CWindows__CUI__CColor;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIReference_1___x_ABI_CWindows__CUI__CColor;

    typedef struct __x_ABI_C__FIReference_1___x_ABI_CWindows__CUI__CColorVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIReference_1___x_ABI_CWindows__CUI__CColor* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIReference_1___x_ABI_CWindows__CUI__CColor* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIReference_1___x_ABI_CWindows__CUI__CColor* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIReference_1___x_ABI_CWindows__CUI__CColor* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIReference_1___x_ABI_CWindows__CUI__CColor* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIReference_1___x_ABI_CWindows__CUI__CColor* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Value)(__x_ABI_C__FIReference_1___x_ABI_CWindows__CUI__CColor* This,
        struct __x_ABI_CWindows_CUI_CColor* result);

        END_INTERFACE
    } __x_ABI_C__FIReference_1___x_ABI_CWindows__CUI__CColorVtbl;

    interface __x_ABI_C__FIReference_1___x_ABI_CWindows__CUI__CColor
    {
        CONST_VTBL struct __x_ABI_C__FIReference_1___x_ABI_CWindows__CUI__CColorVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIReference_1___x_ABI_CWindows__CUI__CColor_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CViewManagement__CAccessibilitySettings_IInspectable_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CViewManagement__CAccessibilitySettings_IInspectable_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CViewManagement__CAccessibilitySettings_IInspectable __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CViewManagement__CAccessibilitySettings_IInspectable;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CViewManagement__CAccessibilitySettings_IInspectable;

    typedef struct __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CViewManagement__CAccessibilitySettings_IInspectableVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CViewManagement__CAccessibilitySettings_IInspectable* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CViewManagement__CAccessibilitySettings_IInspectable* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CViewManagement__CAccessibilitySettings_IInspectable* This);
        HRESULT (STDMETHODCALLTYPE* Invoke)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CViewManagement__CAccessibilitySettings_IInspectable* This,
        __x_ABI_CWindows_CUI_CViewManagement_CIAccessibilitySettings* sender,
        IInspectable* args);

        END_INTERFACE
    } __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CViewManagement__CAccessibilitySettings_IInspectableVtbl;

    interface __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CViewManagement__CAccessibilitySettings_IInspectable
    {
        CONST_VTBL struct __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CViewManagement__CAccessibilitySettings_IInspectableVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CViewManagement__CAccessibilitySettings_IInspectable_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CViewManagement__CApplicationView_IInspectable_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CViewManagement__CApplicationView_IInspectable_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CViewManagement__CApplicationView_IInspectable __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CViewManagement__CApplicationView_IInspectable;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CViewManagement__CApplicationView_IInspectable;

    typedef struct __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CViewManagement__CApplicationView_IInspectableVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CViewManagement__CApplicationView_IInspectable* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CViewManagement__CApplicationView_IInspectable* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CViewManagement__CApplicationView_IInspectable* This);
        HRESULT (STDMETHODCALLTYPE* Invoke)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CViewManagement__CApplicationView_IInspectable* This,
        __x_ABI_CWindows_CUI_CViewManagement_CIApplicationView* sender,
        IInspectable* args);

        END_INTERFACE
    } __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CViewManagement__CApplicationView_IInspectableVtbl;

    interface __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CViewManagement__CApplicationView_IInspectable
    {
        CONST_VTBL struct __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CViewManagement__CApplicationView_IInspectableVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CViewManagement__CApplicationView_IInspectable_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CViewManagement__CApplicationView___x_ABI_CWindows__CUI__CViewManagement__CApplicationViewConsolidatedEventArgs_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CViewManagement__CApplicationView___x_ABI_CWindows__CUI__CViewManagement__CApplicationViewConsolidatedEventArgs_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CViewManagement__CApplicationView___x_ABI_CWindows__CUI__CViewManagement__CApplicationViewConsolidatedEventArgs __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CViewManagement__CApplicationView___x_ABI_CWindows__CUI__CViewManagement__CApplicationViewConsolidatedEventArgs;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CViewManagement__CApplicationView___x_ABI_CWindows__CUI__CViewManagement__CApplicationViewConsolidatedEventArgs;

    typedef struct __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CViewManagement__CApplicationView___x_ABI_CWindows__CUI__CViewManagement__CApplicationViewConsolidatedEventArgsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CViewManagement__CApplicationView___x_ABI_CWindows__CUI__CViewManagement__CApplicationViewConsolidatedEventArgs* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CViewManagement__CApplicationView___x_ABI_CWindows__CUI__CViewManagement__CApplicationViewConsolidatedEventArgs* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CViewManagement__CApplicationView___x_ABI_CWindows__CUI__CViewManagement__CApplicationViewConsolidatedEventArgs* This);
        HRESULT (STDMETHODCALLTYPE* Invoke)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CViewManagement__CApplicationView___x_ABI_CWindows__CUI__CViewManagement__CApplicationViewConsolidatedEventArgs* This,
        __x_ABI_CWindows_CUI_CViewManagement_CIApplicationView* sender,
        __x_ABI_CWindows_CUI_CViewManagement_CIApplicationViewConsolidatedEventArgs* args);

        END_INTERFACE
    } __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CViewManagement__CApplicationView___x_ABI_CWindows__CUI__CViewManagement__CApplicationViewConsolidatedEventArgsVtbl;

    interface __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CViewManagement__CApplicationView___x_ABI_CWindows__CUI__CViewManagement__CApplicationViewConsolidatedEventArgs
    {
        CONST_VTBL struct __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CViewManagement__CApplicationView___x_ABI_CWindows__CUI__CViewManagement__CApplicationViewConsolidatedEventArgsVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CViewManagement__CApplicationView___x_ABI_CWindows__CUI__CViewManagement__CApplicationViewConsolidatedEventArgs_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CViewManagement__CInputPane___x_ABI_CWindows__CUI__CViewManagement__CInputPaneVisibilityEventArgs_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CViewManagement__CInputPane___x_ABI_CWindows__CUI__CViewManagement__CInputPaneVisibilityEventArgs_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CViewManagement__CInputPane___x_ABI_CWindows__CUI__CViewManagement__CInputPaneVisibilityEventArgs __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CViewManagement__CInputPane___x_ABI_CWindows__CUI__CViewManagement__CInputPaneVisibilityEventArgs;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CViewManagement__CInputPane___x_ABI_CWindows__CUI__CViewManagement__CInputPaneVisibilityEventArgs;

    typedef struct __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CViewManagement__CInputPane___x_ABI_CWindows__CUI__CViewManagement__CInputPaneVisibilityEventArgsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CViewManagement__CInputPane___x_ABI_CWindows__CUI__CViewManagement__CInputPaneVisibilityEventArgs* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CViewManagement__CInputPane___x_ABI_CWindows__CUI__CViewManagement__CInputPaneVisibilityEventArgs* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CViewManagement__CInputPane___x_ABI_CWindows__CUI__CViewManagement__CInputPaneVisibilityEventArgs* This);
        HRESULT (STDMETHODCALLTYPE* Invoke)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CViewManagement__CInputPane___x_ABI_CWindows__CUI__CViewManagement__CInputPaneVisibilityEventArgs* This,
        __x_ABI_CWindows_CUI_CViewManagement_CIInputPane* sender,
        __x_ABI_CWindows_CUI_CViewManagement_CIInputPaneVisibilityEventArgs* args);

        END_INTERFACE
    } __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CViewManagement__CInputPane___x_ABI_CWindows__CUI__CViewManagement__CInputPaneVisibilityEventArgsVtbl;

    interface __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CViewManagement__CInputPane___x_ABI_CWindows__CUI__CViewManagement__CInputPaneVisibilityEventArgs
    {
        CONST_VTBL struct __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CViewManagement__CInputPane___x_ABI_CWindows__CUI__CViewManagement__CInputPaneVisibilityEventArgsVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CViewManagement__CInputPane___x_ABI_CWindows__CUI__CViewManagement__CInputPaneVisibilityEventArgs_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CViewManagement__CStatusBar_IInspectable_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CViewManagement__CStatusBar_IInspectable_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CViewManagement__CStatusBar_IInspectable __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CViewManagement__CStatusBar_IInspectable;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CViewManagement__CStatusBar_IInspectable;

    typedef struct __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CViewManagement__CStatusBar_IInspectableVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CViewManagement__CStatusBar_IInspectable* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CViewManagement__CStatusBar_IInspectable* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CViewManagement__CStatusBar_IInspectable* This);
        HRESULT (STDMETHODCALLTYPE* Invoke)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CViewManagement__CStatusBar_IInspectable* This,
        __x_ABI_CWindows_CUI_CViewManagement_CIStatusBar* sender,
        IInspectable* args);

        END_INTERFACE
    } __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CViewManagement__CStatusBar_IInspectableVtbl;

    interface __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CViewManagement__CStatusBar_IInspectable
    {
        CONST_VTBL struct __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CViewManagement__CStatusBar_IInspectableVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CViewManagement__CStatusBar_IInspectable_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CViewManagement__CUISettings_IInspectable_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CViewManagement__CUISettings_IInspectable_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CViewManagement__CUISettings_IInspectable __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CViewManagement__CUISettings_IInspectable;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CViewManagement__CUISettings_IInspectable;

    typedef struct __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CViewManagement__CUISettings_IInspectableVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CViewManagement__CUISettings_IInspectable* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CViewManagement__CUISettings_IInspectable* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CViewManagement__CUISettings_IInspectable* This);
        HRESULT (STDMETHODCALLTYPE* Invoke)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CViewManagement__CUISettings_IInspectable* This,
        __x_ABI_CWindows_CUI_CViewManagement_CIUISettings* sender,
        IInspectable* args);

        END_INTERFACE
    } __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CViewManagement__CUISettings_IInspectableVtbl;

    interface __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CViewManagement__CUISettings_IInspectable
    {
        CONST_VTBL struct __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CViewManagement__CUISettings_IInspectableVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CViewManagement__CUISettings_IInspectable_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CViewManagement__CUISettings___x_ABI_CWindows__CUI__CViewManagement__CUISettingsAutoHideScrollBarsChangedEventArgs_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CViewManagement__CUISettings___x_ABI_CWindows__CUI__CViewManagement__CUISettingsAutoHideScrollBarsChangedEventArgs_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CViewManagement__CUISettings___x_ABI_CWindows__CUI__CViewManagement__CUISettingsAutoHideScrollBarsChangedEventArgs __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CViewManagement__CUISettings___x_ABI_CWindows__CUI__CViewManagement__CUISettingsAutoHideScrollBarsChangedEventArgs;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CViewManagement__CUISettings___x_ABI_CWindows__CUI__CViewManagement__CUISettingsAutoHideScrollBarsChangedEventArgs;

    typedef struct __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CViewManagement__CUISettings___x_ABI_CWindows__CUI__CViewManagement__CUISettingsAutoHideScrollBarsChangedEventArgsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CViewManagement__CUISettings___x_ABI_CWindows__CUI__CViewManagement__CUISettingsAutoHideScrollBarsChangedEventArgs* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CViewManagement__CUISettings___x_ABI_CWindows__CUI__CViewManagement__CUISettingsAutoHideScrollBarsChangedEventArgs* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CViewManagement__CUISettings___x_ABI_CWindows__CUI__CViewManagement__CUISettingsAutoHideScrollBarsChangedEventArgs* This);
        HRESULT (STDMETHODCALLTYPE* Invoke)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CViewManagement__CUISettings___x_ABI_CWindows__CUI__CViewManagement__CUISettingsAutoHideScrollBarsChangedEventArgs* This,
        __x_ABI_CWindows_CUI_CViewManagement_CIUISettings* sender,
        __x_ABI_CWindows_CUI_CViewManagement_CIUISettingsAutoHideScrollBarsChangedEventArgs* args);

        END_INTERFACE
    } __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CViewManagement__CUISettings___x_ABI_CWindows__CUI__CViewManagement__CUISettingsAutoHideScrollBarsChangedEventArgsVtbl;

    interface __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CViewManagement__CUISettings___x_ABI_CWindows__CUI__CViewManagement__CUISettingsAutoHideScrollBarsChangedEventArgs
    {
        CONST_VTBL struct __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CViewManagement__CUISettings___x_ABI_CWindows__CUI__CViewManagement__CUISettingsAutoHideScrollBarsChangedEventArgsVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CViewManagement__CUISettings___x_ABI_CWindows__CUI__CViewManagement__CUISettingsAutoHideScrollBarsChangedEventArgs_INTERFACE_DEFINED__
    
#ifndef ____x_ABI_CWindows_CDevices_CEnumeration_CIDeviceInformation_FWD_DEFINED__
#define ____x_ABI_CWindows_CDevices_CEnumeration_CIDeviceInformation_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CDevices_CEnumeration_CIDeviceInformation __x_ABI_CWindows_CDevices_CEnumeration_CIDeviceInformation;

#endif // ____x_ABI_CWindows_CDevices_CEnumeration_CIDeviceInformation_FWD_DEFINED__

typedef enum __x_ABI_CWindows_CFoundation_CAsyncStatus __x_ABI_CWindows_CFoundation_CAsyncStatus;

#ifndef ____x_ABI_CWindows_CFoundation_CIAsyncAction_FWD_DEFINED__
#define ____x_ABI_CWindows_CFoundation_CIAsyncAction_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CFoundation_CIAsyncAction __x_ABI_CWindows_CFoundation_CIAsyncAction;

#endif // ____x_ABI_CWindows_CFoundation_CIAsyncAction_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CFoundation_CIAsyncInfo_FWD_DEFINED__
#define ____x_ABI_CWindows_CFoundation_CIAsyncInfo_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CFoundation_CIAsyncInfo __x_ABI_CWindows_CFoundation_CIAsyncInfo;

#endif // ____x_ABI_CWindows_CFoundation_CIAsyncInfo_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CFoundation_CIPropertyValue_FWD_DEFINED__
#define ____x_ABI_CWindows_CFoundation_CIPropertyValue_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CFoundation_CIPropertyValue __x_ABI_CWindows_CFoundation_CIPropertyValue;

#endif // ____x_ABI_CWindows_CFoundation_CIPropertyValue_FWD_DEFINED__

typedef struct __x_ABI_CWindows_CFoundation_CRect __x_ABI_CWindows_CFoundation_CRect;

typedef struct __x_ABI_CWindows_CFoundation_CSize __x_ABI_CWindows_CFoundation_CSize;

#ifndef ____x_ABI_CWindows_CUI_CCore_CICoreWindow_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CCore_CICoreWindow_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CCore_CICoreWindow __x_ABI_CWindows_CUI_CCore_CICoreWindow;

#endif // ____x_ABI_CWindows_CUI_CCore_CICoreWindow_FWD_DEFINED__

typedef enum __x_ABI_CWindows_CUI_CPopups_CPlacement __x_ABI_CWindows_CUI_CPopups_CPlacement;

#ifndef ____x_ABI_CWindows_CUI_CIUIContext_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CIUIContext_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CIUIContext __x_ABI_CWindows_CUI_CIUIContext;

#endif // ____x_ABI_CWindows_CUI_CIUIContext_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CWindowManagement_CIWindowingEnvironment_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CWindowManagement_CIWindowingEnvironment_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CWindowManagement_CIWindowingEnvironment __x_ABI_CWindows_CUI_CWindowManagement_CIWindowingEnvironment;

#endif // ____x_ABI_CWindows_CUI_CWindowManagement_CIWindowingEnvironment_FWD_DEFINED__

typedef enum __x_ABI_CWindows_CUI_CViewManagement_CApplicationViewBoundsMode __x_ABI_CWindows_CUI_CViewManagement_CApplicationViewBoundsMode;

typedef enum __x_ABI_CWindows_CUI_CViewManagement_CApplicationViewMode __x_ABI_CWindows_CUI_CViewManagement_CApplicationViewMode;

typedef enum __x_ABI_CWindows_CUI_CViewManagement_CApplicationViewOrientation __x_ABI_CWindows_CUI_CViewManagement_CApplicationViewOrientation;

typedef enum __x_ABI_CWindows_CUI_CViewManagement_CApplicationViewState __x_ABI_CWindows_CUI_CViewManagement_CApplicationViewState;

typedef enum __x_ABI_CWindows_CUI_CViewManagement_CApplicationViewSwitchingOptions __x_ABI_CWindows_CUI_CViewManagement_CApplicationViewSwitchingOptions;

typedef enum __x_ABI_CWindows_CUI_CViewManagement_CApplicationViewWindowingMode __x_ABI_CWindows_CUI_CViewManagement_CApplicationViewWindowingMode;

typedef enum __x_ABI_CWindows_CUI_CViewManagement_CFullScreenSystemOverlayMode __x_ABI_CWindows_CUI_CViewManagement_CFullScreenSystemOverlayMode;

typedef enum __x_ABI_CWindows_CUI_CViewManagement_CHandPreference __x_ABI_CWindows_CUI_CViewManagement_CHandPreference;

typedef enum __x_ABI_CWindows_CUI_CViewManagement_CUIColorType __x_ABI_CWindows_CUI_CViewManagement_CUIColorType;

typedef enum __x_ABI_CWindows_CUI_CViewManagement_CUIElementType __x_ABI_CWindows_CUI_CViewManagement_CUIElementType;

typedef enum __x_ABI_CWindows_CUI_CViewManagement_CUserInteractionMode __x_ABI_CWindows_CUI_CViewManagement_CUserInteractionMode;

typedef enum __x_ABI_CWindows_CUI_CViewManagement_CViewSizePreference __x_ABI_CWindows_CUI_CViewManagement_CViewSizePreference;

enum __x_ABI_CWindows_CUI_CViewManagement_CApplicationViewBoundsMode
    {
        __x_ABI_CWindows_CUI_CViewManagement_CApplicationViewBoundsMode_UseVisible = 0,
    __x_ABI_CWindows_CUI_CViewManagement_CApplicationViewBoundsMode_UseCoreWindow = 1,
};

enum __x_ABI_CWindows_CUI_CViewManagement_CApplicationViewMode
    {
        __x_ABI_CWindows_CUI_CViewManagement_CApplicationViewMode_Default = 0,
    __x_ABI_CWindows_CUI_CViewManagement_CApplicationViewMode_CompactOverlay = 1,
};

enum __x_ABI_CWindows_CUI_CViewManagement_CApplicationViewOrientation
    {
        __x_ABI_CWindows_CUI_CViewManagement_CApplicationViewOrientation_Landscape = 0,
    __x_ABI_CWindows_CUI_CViewManagement_CApplicationViewOrientation_Portrait = 1,
};

enum __x_ABI_CWindows_CUI_CViewManagement_CApplicationViewState
    {
        __x_ABI_CWindows_CUI_CViewManagement_CApplicationViewState_FullScreenLandscape = 0,
    __x_ABI_CWindows_CUI_CViewManagement_CApplicationViewState_Filled = 1,
    __x_ABI_CWindows_CUI_CViewManagement_CApplicationViewState_Snapped = 2,
    __x_ABI_CWindows_CUI_CViewManagement_CApplicationViewState_FullScreenPortrait = 3,
};

enum __x_ABI_CWindows_CUI_CViewManagement_CApplicationViewSwitchingOptions
    {
        __x_ABI_CWindows_CUI_CViewManagement_CApplicationViewSwitchingOptions_Default = 0,
    __x_ABI_CWindows_CUI_CViewManagement_CApplicationViewSwitchingOptions_SkipAnimation = 0x1,
    __x_ABI_CWindows_CUI_CViewManagement_CApplicationViewSwitchingOptions_ConsolidateViews = 0x2,
};

enum __x_ABI_CWindows_CUI_CViewManagement_CApplicationViewWindowingMode
    {
        __x_ABI_CWindows_CUI_CViewManagement_CApplicationViewWindowingMode_Auto = 0,
    __x_ABI_CWindows_CUI_CViewManagement_CApplicationViewWindowingMode_PreferredLaunchViewSize = 1,
    __x_ABI_CWindows_CUI_CViewManagement_CApplicationViewWindowingMode_FullScreen = 2,
    __x_ABI_CWindows_CUI_CViewManagement_CApplicationViewWindowingMode_CompactOverlay = 3,
    __x_ABI_CWindows_CUI_CViewManagement_CApplicationViewWindowingMode_Maximized = 4,
};

enum __x_ABI_CWindows_CUI_CViewManagement_CFullScreenSystemOverlayMode
    {
        __x_ABI_CWindows_CUI_CViewManagement_CFullScreenSystemOverlayMode_Standard = 0,
    __x_ABI_CWindows_CUI_CViewManagement_CFullScreenSystemOverlayMode_Minimal = 1,
};

enum __x_ABI_CWindows_CUI_CViewManagement_CHandPreference
    {
        __x_ABI_CWindows_CUI_CViewManagement_CHandPreference_LeftHanded = 0,
    __x_ABI_CWindows_CUI_CViewManagement_CHandPreference_RightHanded = 1,
};

enum __x_ABI_CWindows_CUI_CViewManagement_CUIColorType
    {
        __x_ABI_CWindows_CUI_CViewManagement_CUIColorType_Background = 0,
    __x_ABI_CWindows_CUI_CViewManagement_CUIColorType_Foreground = 1,
    __x_ABI_CWindows_CUI_CViewManagement_CUIColorType_AccentDark3 = 2,
    __x_ABI_CWindows_CUI_CViewManagement_CUIColorType_AccentDark2 = 3,
    __x_ABI_CWindows_CUI_CViewManagement_CUIColorType_AccentDark1 = 4,
    __x_ABI_CWindows_CUI_CViewManagement_CUIColorType_Accent = 5,
    __x_ABI_CWindows_CUI_CViewManagement_CUIColorType_AccentLight1 = 6,
    __x_ABI_CWindows_CUI_CViewManagement_CUIColorType_AccentLight2 = 7,
    __x_ABI_CWindows_CUI_CViewManagement_CUIColorType_AccentLight3 = 8,
    __x_ABI_CWindows_CUI_CViewManagement_CUIColorType_Complement = 9,
};

enum __x_ABI_CWindows_CUI_CViewManagement_CUIElementType
    {
        __x_ABI_CWindows_CUI_CViewManagement_CUIElementType_ActiveCaption = 0,
    __x_ABI_CWindows_CUI_CViewManagement_CUIElementType_Background = 1,
    __x_ABI_CWindows_CUI_CViewManagement_CUIElementType_ButtonFace = 2,
    __x_ABI_CWindows_CUI_CViewManagement_CUIElementType_ButtonText = 3,
    __x_ABI_CWindows_CUI_CViewManagement_CUIElementType_CaptionText = 4,
    __x_ABI_CWindows_CUI_CViewManagement_CUIElementType_GrayText = 5,
    __x_ABI_CWindows_CUI_CViewManagement_CUIElementType_Highlight = 6,
    __x_ABI_CWindows_CUI_CViewManagement_CUIElementType_HighlightText = 7,
    __x_ABI_CWindows_CUI_CViewManagement_CUIElementType_Hotlight = 8,
    __x_ABI_CWindows_CUI_CViewManagement_CUIElementType_InactiveCaption = 9,
    __x_ABI_CWindows_CUI_CViewManagement_CUIElementType_InactiveCaptionText = 10,
    __x_ABI_CWindows_CUI_CViewManagement_CUIElementType_Window = 11,
    __x_ABI_CWindows_CUI_CViewManagement_CUIElementType_WindowText = 12,
    __x_ABI_CWindows_CUI_CViewManagement_CUIElementType_AccentColor = 1000,
    __x_ABI_CWindows_CUI_CViewManagement_CUIElementType_TextHigh = 1001,
    __x_ABI_CWindows_CUI_CViewManagement_CUIElementType_TextMedium = 1002,
    __x_ABI_CWindows_CUI_CViewManagement_CUIElementType_TextLow = 1003,
    __x_ABI_CWindows_CUI_CViewManagement_CUIElementType_TextContrastWithHigh = 1004,
    __x_ABI_CWindows_CUI_CViewManagement_CUIElementType_NonTextHigh = 1005,
    __x_ABI_CWindows_CUI_CViewManagement_CUIElementType_NonTextMediumHigh = 1006,
    __x_ABI_CWindows_CUI_CViewManagement_CUIElementType_NonTextMedium = 1007,
    __x_ABI_CWindows_CUI_CViewManagement_CUIElementType_NonTextMediumLow = 1008,
    __x_ABI_CWindows_CUI_CViewManagement_CUIElementType_NonTextLow = 1009,
    __x_ABI_CWindows_CUI_CViewManagement_CUIElementType_PageBackground = 1010,
    __x_ABI_CWindows_CUI_CViewManagement_CUIElementType_PopupBackground = 1011,
    __x_ABI_CWindows_CUI_CViewManagement_CUIElementType_OverlayOutsidePopup = 1012,
};

enum __x_ABI_CWindows_CUI_CViewManagement_CUserInteractionMode
    {
        __x_ABI_CWindows_CUI_CViewManagement_CUserInteractionMode_Mouse = 0,
    __x_ABI_CWindows_CUI_CViewManagement_CUserInteractionMode_Touch = 1,
};

enum __x_ABI_CWindows_CUI_CViewManagement_CViewSizePreference
    {
        __x_ABI_CWindows_CUI_CViewManagement_CViewSizePreference_Default = 0,
    __x_ABI_CWindows_CUI_CViewManagement_CViewSizePreference_UseLess = 1,
    __x_ABI_CWindows_CUI_CViewManagement_CViewSizePreference_UseHalf = 2,
    __x_ABI_CWindows_CUI_CViewManagement_CViewSizePreference_UseMore = 3,
    __x_ABI_CWindows_CUI_CViewManagement_CViewSizePreference_UseMinimum = 4,
    __x_ABI_CWindows_CUI_CViewManagement_CViewSizePreference_UseNone = 5,
    __x_ABI_CWindows_CUI_CViewManagement_CViewSizePreference_Custom = 6,
};

#if !defined(____x_ABI_CWindows_CUI_CViewManagement_CIAccessibilitySettings_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CViewManagement_CIAccessibilitySettings_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CViewManagement_CIAccessibilitySettingsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CViewManagement_CIAccessibilitySettings* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CViewManagement_CIAccessibilitySettings* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CViewManagement_CIAccessibilitySettings* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CViewManagement_CIAccessibilitySettings* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CViewManagement_CIAccessibilitySettings* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CViewManagement_CIAccessibilitySettings* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_HighContrast)(__x_ABI_CWindows_CUI_CViewManagement_CIAccessibilitySettings* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* get_HighContrastScheme)(__x_ABI_CWindows_CUI_CViewManagement_CIAccessibilitySettings* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* add_HighContrastChanged)(__x_ABI_CWindows_CUI_CViewManagement_CIAccessibilitySettings* This,
        __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CViewManagement__CAccessibilitySettings_IInspectable* handler,
        EventRegistrationToken* cookie);
    HRESULT (STDMETHODCALLTYPE* remove_HighContrastChanged)(__x_ABI_CWindows_CUI_CViewManagement_CIAccessibilitySettings* This,
        EventRegistrationToken cookie);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CViewManagement_CIAccessibilitySettingsVtbl;

    interface __x_ABI_CWindows_CUI_CViewManagement_CIAccessibilitySettings
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CViewManagement_CIAccessibilitySettingsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CViewManagement_CIAccessibilitySettings;
#endif /* !defined(____x_ABI_CWindows_CUI_CViewManagement_CIAccessibilitySettings_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CViewManagement_CIActivationViewSwitcher_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CViewManagement_CIActivationViewSwitcher_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CViewManagement_CIActivationViewSwitcherVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CViewManagement_CIActivationViewSwitcher* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CViewManagement_CIActivationViewSwitcher* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CViewManagement_CIActivationViewSwitcher* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CViewManagement_CIActivationViewSwitcher* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CViewManagement_CIActivationViewSwitcher* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CViewManagement_CIActivationViewSwitcher* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* ShowAsStandaloneAsync)(__x_ABI_CWindows_CUI_CViewManagement_CIActivationViewSwitcher* This,
        INT32 viewId,
        __x_ABI_CWindows_CFoundation_CIAsyncAction** operation);
    HRESULT (STDMETHODCALLTYPE* ShowAsStandaloneWithSizePreferenceAsync)(__x_ABI_CWindows_CUI_CViewManagement_CIActivationViewSwitcher* This,
        INT32 viewId,
        enum __x_ABI_CWindows_CUI_CViewManagement_CViewSizePreference sizePreference,
        __x_ABI_CWindows_CFoundation_CIAsyncAction** operation);
    HRESULT (STDMETHODCALLTYPE* IsViewPresentedOnActivationVirtualDesktop)(__x_ABI_CWindows_CUI_CViewManagement_CIActivationViewSwitcher* This,
        INT32 viewId,
        boolean* value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CViewManagement_CIActivationViewSwitcherVtbl;

    interface __x_ABI_CWindows_CUI_CViewManagement_CIActivationViewSwitcher
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CViewManagement_CIActivationViewSwitcherVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CViewManagement_CIActivationViewSwitcher;
#endif /* !defined(____x_ABI_CWindows_CUI_CViewManagement_CIActivationViewSwitcher_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CViewManagement_CIApplicationView_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CViewManagement_CIApplicationView_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CViewManagement_CIApplicationViewVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CViewManagement_CIApplicationView* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CViewManagement_CIApplicationView* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CViewManagement_CIApplicationView* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CViewManagement_CIApplicationView* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CViewManagement_CIApplicationView* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CViewManagement_CIApplicationView* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Orientation)(__x_ABI_CWindows_CUI_CViewManagement_CIApplicationView* This,
        enum __x_ABI_CWindows_CUI_CViewManagement_CApplicationViewOrientation* value);
    HRESULT (STDMETHODCALLTYPE* get_AdjacentToLeftDisplayEdge)(__x_ABI_CWindows_CUI_CViewManagement_CIApplicationView* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* get_AdjacentToRightDisplayEdge)(__x_ABI_CWindows_CUI_CViewManagement_CIApplicationView* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* get_IsFullScreen)(__x_ABI_CWindows_CUI_CViewManagement_CIApplicationView* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* get_IsOnLockScreen)(__x_ABI_CWindows_CUI_CViewManagement_CIApplicationView* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* get_IsScreenCaptureEnabled)(__x_ABI_CWindows_CUI_CViewManagement_CIApplicationView* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* put_IsScreenCaptureEnabled)(__x_ABI_CWindows_CUI_CViewManagement_CIApplicationView* This,
        boolean value);
    HRESULT (STDMETHODCALLTYPE* put_Title)(__x_ABI_CWindows_CUI_CViewManagement_CIApplicationView* This,
        HSTRING value);
    HRESULT (STDMETHODCALLTYPE* get_Title)(__x_ABI_CWindows_CUI_CViewManagement_CIApplicationView* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* get_Id)(__x_ABI_CWindows_CUI_CViewManagement_CIApplicationView* This,
        INT32* value);
    HRESULT (STDMETHODCALLTYPE* add_Consolidated)(__x_ABI_CWindows_CUI_CViewManagement_CIApplicationView* This,
        __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CViewManagement__CApplicationView___x_ABI_CWindows__CUI__CViewManagement__CApplicationViewConsolidatedEventArgs* handler,
        EventRegistrationToken* token);
    HRESULT (STDMETHODCALLTYPE* remove_Consolidated)(__x_ABI_CWindows_CUI_CViewManagement_CIApplicationView* This,
        EventRegistrationToken token);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CViewManagement_CIApplicationViewVtbl;

    interface __x_ABI_CWindows_CUI_CViewManagement_CIApplicationView
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CViewManagement_CIApplicationViewVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CViewManagement_CIApplicationView;
#endif /* !defined(____x_ABI_CWindows_CUI_CViewManagement_CIApplicationView_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CViewManagement_CIApplicationView2_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CViewManagement_CIApplicationView2_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CViewManagement_CIApplicationView2Vtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CViewManagement_CIApplicationView2* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CViewManagement_CIApplicationView2* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CViewManagement_CIApplicationView2* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CViewManagement_CIApplicationView2* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CViewManagement_CIApplicationView2* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CViewManagement_CIApplicationView2* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_SuppressSystemOverlays)(__x_ABI_CWindows_CUI_CViewManagement_CIApplicationView2* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* put_SuppressSystemOverlays)(__x_ABI_CWindows_CUI_CViewManagement_CIApplicationView2* This,
        boolean value);
    HRESULT (STDMETHODCALLTYPE* get_VisibleBounds)(__x_ABI_CWindows_CUI_CViewManagement_CIApplicationView2* This,
        struct __x_ABI_CWindows_CFoundation_CRect* value);
    HRESULT (STDMETHODCALLTYPE* add_VisibleBoundsChanged)(__x_ABI_CWindows_CUI_CViewManagement_CIApplicationView2* This,
        __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CViewManagement__CApplicationView_IInspectable* handler,
        EventRegistrationToken* token);
    HRESULT (STDMETHODCALLTYPE* remove_VisibleBoundsChanged)(__x_ABI_CWindows_CUI_CViewManagement_CIApplicationView2* This,
        EventRegistrationToken token);
    HRESULT (STDMETHODCALLTYPE* SetDesiredBoundsMode)(__x_ABI_CWindows_CUI_CViewManagement_CIApplicationView2* This,
        enum __x_ABI_CWindows_CUI_CViewManagement_CApplicationViewBoundsMode boundsMode,
        boolean* success);
    HRESULT (STDMETHODCALLTYPE* get_DesiredBoundsMode)(__x_ABI_CWindows_CUI_CViewManagement_CIApplicationView2* This,
        enum __x_ABI_CWindows_CUI_CViewManagement_CApplicationViewBoundsMode* value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CViewManagement_CIApplicationView2Vtbl;

    interface __x_ABI_CWindows_CUI_CViewManagement_CIApplicationView2
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CViewManagement_CIApplicationView2Vtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CViewManagement_CIApplicationView2;
#endif /* !defined(____x_ABI_CWindows_CUI_CViewManagement_CIApplicationView2_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CViewManagement_CIApplicationView3_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CViewManagement_CIApplicationView3_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CViewManagement_CIApplicationView3Vtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CViewManagement_CIApplicationView3* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CViewManagement_CIApplicationView3* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CViewManagement_CIApplicationView3* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CViewManagement_CIApplicationView3* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CViewManagement_CIApplicationView3* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CViewManagement_CIApplicationView3* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_TitleBar)(__x_ABI_CWindows_CUI_CViewManagement_CIApplicationView3* This,
        __x_ABI_CWindows_CUI_CViewManagement_CIApplicationViewTitleBar** value);
    HRESULT (STDMETHODCALLTYPE* get_FullScreenSystemOverlayMode)(__x_ABI_CWindows_CUI_CViewManagement_CIApplicationView3* This,
        enum __x_ABI_CWindows_CUI_CViewManagement_CFullScreenSystemOverlayMode* value);
    HRESULT (STDMETHODCALLTYPE* put_FullScreenSystemOverlayMode)(__x_ABI_CWindows_CUI_CViewManagement_CIApplicationView3* This,
        enum __x_ABI_CWindows_CUI_CViewManagement_CFullScreenSystemOverlayMode value);
    HRESULT (STDMETHODCALLTYPE* get_IsFullScreenMode)(__x_ABI_CWindows_CUI_CViewManagement_CIApplicationView3* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* TryEnterFullScreenMode)(__x_ABI_CWindows_CUI_CViewManagement_CIApplicationView3* This,
        boolean* success);
    HRESULT (STDMETHODCALLTYPE* ExitFullScreenMode)(__x_ABI_CWindows_CUI_CViewManagement_CIApplicationView3* This);
    HRESULT (STDMETHODCALLTYPE* ShowStandardSystemOverlays)(__x_ABI_CWindows_CUI_CViewManagement_CIApplicationView3* This);
    HRESULT (STDMETHODCALLTYPE* TryResizeView)(__x_ABI_CWindows_CUI_CViewManagement_CIApplicationView3* This,
        struct __x_ABI_CWindows_CFoundation_CSize value,
        boolean* success);
    HRESULT (STDMETHODCALLTYPE* SetPreferredMinSize)(__x_ABI_CWindows_CUI_CViewManagement_CIApplicationView3* This,
        struct __x_ABI_CWindows_CFoundation_CSize minSize);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CViewManagement_CIApplicationView3Vtbl;

    interface __x_ABI_CWindows_CUI_CViewManagement_CIApplicationView3
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CViewManagement_CIApplicationView3Vtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CViewManagement_CIApplicationView3;
#endif /* !defined(____x_ABI_CWindows_CUI_CViewManagement_CIApplicationView3_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CViewManagement_CIApplicationView4_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CViewManagement_CIApplicationView4_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CViewManagement_CIApplicationView4Vtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CViewManagement_CIApplicationView4* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CViewManagement_CIApplicationView4* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CViewManagement_CIApplicationView4* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CViewManagement_CIApplicationView4* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CViewManagement_CIApplicationView4* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CViewManagement_CIApplicationView4* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_ViewMode)(__x_ABI_CWindows_CUI_CViewManagement_CIApplicationView4* This,
        enum __x_ABI_CWindows_CUI_CViewManagement_CApplicationViewMode* value);
    HRESULT (STDMETHODCALLTYPE* IsViewModeSupported)(__x_ABI_CWindows_CUI_CViewManagement_CIApplicationView4* This,
        enum __x_ABI_CWindows_CUI_CViewManagement_CApplicationViewMode viewMode,
        boolean* isViewModeSupported);
    HRESULT (STDMETHODCALLTYPE* TryEnterViewModeAsync)(__x_ABI_CWindows_CUI_CViewManagement_CIApplicationView4* This,
        enum __x_ABI_CWindows_CUI_CViewManagement_CApplicationViewMode viewMode,
        __x_ABI_C__FIAsyncOperation_1_boolean** operation);
    HRESULT (STDMETHODCALLTYPE* TryEnterViewModeWithPreferencesAsync)(__x_ABI_CWindows_CUI_CViewManagement_CIApplicationView4* This,
        enum __x_ABI_CWindows_CUI_CViewManagement_CApplicationViewMode viewMode,
        __x_ABI_CWindows_CUI_CViewManagement_CIViewModePreferences* viewModePreferences,
        __x_ABI_C__FIAsyncOperation_1_boolean** operation);
    HRESULT (STDMETHODCALLTYPE* TryConsolidateAsync)(__x_ABI_CWindows_CUI_CViewManagement_CIApplicationView4* This,
        __x_ABI_C__FIAsyncOperation_1_boolean** operation);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CViewManagement_CIApplicationView4Vtbl;

    interface __x_ABI_CWindows_CUI_CViewManagement_CIApplicationView4
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CViewManagement_CIApplicationView4Vtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CViewManagement_CIApplicationView4;
#endif /* !defined(____x_ABI_CWindows_CUI_CViewManagement_CIApplicationView4_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CViewManagement_CIApplicationView7_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CViewManagement_CIApplicationView7_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CViewManagement_CIApplicationView7Vtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CViewManagement_CIApplicationView7* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CViewManagement_CIApplicationView7* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CViewManagement_CIApplicationView7* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CViewManagement_CIApplicationView7* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CViewManagement_CIApplicationView7* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CViewManagement_CIApplicationView7* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_PersistedStateId)(__x_ABI_CWindows_CUI_CViewManagement_CIApplicationView7* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* put_PersistedStateId)(__x_ABI_CWindows_CUI_CViewManagement_CIApplicationView7* This,
        HSTRING value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CViewManagement_CIApplicationView7Vtbl;

    interface __x_ABI_CWindows_CUI_CViewManagement_CIApplicationView7
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CViewManagement_CIApplicationView7Vtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CViewManagement_CIApplicationView7;
#endif /* !defined(____x_ABI_CWindows_CUI_CViewManagement_CIApplicationView7_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CViewManagement_CIApplicationView9_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CViewManagement_CIApplicationView9_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CViewManagement_CIApplicationView9Vtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CViewManagement_CIApplicationView9* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CViewManagement_CIApplicationView9* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CViewManagement_CIApplicationView9* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CViewManagement_CIApplicationView9* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CViewManagement_CIApplicationView9* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CViewManagement_CIApplicationView9* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_WindowingEnvironment)(__x_ABI_CWindows_CUI_CViewManagement_CIApplicationView9* This,
        __x_ABI_CWindows_CUI_CWindowManagement_CIWindowingEnvironment** value);
    HRESULT (STDMETHODCALLTYPE* GetDisplayRegions)(__x_ABI_CWindows_CUI_CViewManagement_CIApplicationView9* This,
        __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CWindowManagement__CDisplayRegion** result);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CViewManagement_CIApplicationView9Vtbl;

    interface __x_ABI_CWindows_CUI_CViewManagement_CIApplicationView9
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CViewManagement_CIApplicationView9Vtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CViewManagement_CIApplicationView9;
#endif /* !defined(____x_ABI_CWindows_CUI_CViewManagement_CIApplicationView9_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CViewManagement_CIApplicationViewConsolidatedEventArgs_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CViewManagement_CIApplicationViewConsolidatedEventArgs_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CViewManagement_CIApplicationViewConsolidatedEventArgsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CViewManagement_CIApplicationViewConsolidatedEventArgs* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CViewManagement_CIApplicationViewConsolidatedEventArgs* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CViewManagement_CIApplicationViewConsolidatedEventArgs* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CViewManagement_CIApplicationViewConsolidatedEventArgs* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CViewManagement_CIApplicationViewConsolidatedEventArgs* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CViewManagement_CIApplicationViewConsolidatedEventArgs* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_IsUserInitiated)(__x_ABI_CWindows_CUI_CViewManagement_CIApplicationViewConsolidatedEventArgs* This,
        boolean* value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CViewManagement_CIApplicationViewConsolidatedEventArgsVtbl;

    interface __x_ABI_CWindows_CUI_CViewManagement_CIApplicationViewConsolidatedEventArgs
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CViewManagement_CIApplicationViewConsolidatedEventArgsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CViewManagement_CIApplicationViewConsolidatedEventArgs;
#endif /* !defined(____x_ABI_CWindows_CUI_CViewManagement_CIApplicationViewConsolidatedEventArgs_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CViewManagement_CIApplicationViewConsolidatedEventArgs2_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CViewManagement_CIApplicationViewConsolidatedEventArgs2_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CViewManagement_CIApplicationViewConsolidatedEventArgs2Vtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CViewManagement_CIApplicationViewConsolidatedEventArgs2* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CViewManagement_CIApplicationViewConsolidatedEventArgs2* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CViewManagement_CIApplicationViewConsolidatedEventArgs2* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CViewManagement_CIApplicationViewConsolidatedEventArgs2* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CViewManagement_CIApplicationViewConsolidatedEventArgs2* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CViewManagement_CIApplicationViewConsolidatedEventArgs2* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_IsAppInitiated)(__x_ABI_CWindows_CUI_CViewManagement_CIApplicationViewConsolidatedEventArgs2* This,
        boolean* value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CViewManagement_CIApplicationViewConsolidatedEventArgs2Vtbl;

    interface __x_ABI_CWindows_CUI_CViewManagement_CIApplicationViewConsolidatedEventArgs2
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CViewManagement_CIApplicationViewConsolidatedEventArgs2Vtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CViewManagement_CIApplicationViewConsolidatedEventArgs2;
#endif /* !defined(____x_ABI_CWindows_CUI_CViewManagement_CIApplicationViewConsolidatedEventArgs2_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CViewManagement_CIApplicationViewFullscreenStatics_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CViewManagement_CIApplicationViewFullscreenStatics_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CViewManagement_CIApplicationViewFullscreenStaticsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CViewManagement_CIApplicationViewFullscreenStatics* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CViewManagement_CIApplicationViewFullscreenStatics* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CViewManagement_CIApplicationViewFullscreenStatics* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CViewManagement_CIApplicationViewFullscreenStatics* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CViewManagement_CIApplicationViewFullscreenStatics* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CViewManagement_CIApplicationViewFullscreenStatics* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* TryUnsnapToFullscreen)(__x_ABI_CWindows_CUI_CViewManagement_CIApplicationViewFullscreenStatics* This,
        boolean* success);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CViewManagement_CIApplicationViewFullscreenStaticsVtbl;

    interface __x_ABI_CWindows_CUI_CViewManagement_CIApplicationViewFullscreenStatics
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CViewManagement_CIApplicationViewFullscreenStaticsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CViewManagement_CIApplicationViewFullscreenStatics;
#endif /* !defined(____x_ABI_CWindows_CUI_CViewManagement_CIApplicationViewFullscreenStatics_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CViewManagement_CIApplicationViewInteropStatics_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CViewManagement_CIApplicationViewInteropStatics_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CViewManagement_CIApplicationViewInteropStaticsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CViewManagement_CIApplicationViewInteropStatics* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CViewManagement_CIApplicationViewInteropStatics* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CViewManagement_CIApplicationViewInteropStatics* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CViewManagement_CIApplicationViewInteropStatics* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CViewManagement_CIApplicationViewInteropStatics* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CViewManagement_CIApplicationViewInteropStatics* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* GetApplicationViewIdForWindow)(__x_ABI_CWindows_CUI_CViewManagement_CIApplicationViewInteropStatics* This,
        __x_ABI_CWindows_CUI_CCore_CICoreWindow* window,
        INT32* id);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CViewManagement_CIApplicationViewInteropStaticsVtbl;

    interface __x_ABI_CWindows_CUI_CViewManagement_CIApplicationViewInteropStatics
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CViewManagement_CIApplicationViewInteropStaticsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CViewManagement_CIApplicationViewInteropStatics;
#endif /* !defined(____x_ABI_CWindows_CUI_CViewManagement_CIApplicationViewInteropStatics_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CViewManagement_CIApplicationViewScaling_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CViewManagement_CIApplicationViewScaling_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CViewManagement_CIApplicationViewScalingVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CViewManagement_CIApplicationViewScaling* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CViewManagement_CIApplicationViewScaling* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CViewManagement_CIApplicationViewScaling* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CViewManagement_CIApplicationViewScaling* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CViewManagement_CIApplicationViewScaling* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CViewManagement_CIApplicationViewScaling* This,
            TrustLevel* trustLevel);
    
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CViewManagement_CIApplicationViewScalingVtbl;

    interface __x_ABI_CWindows_CUI_CViewManagement_CIApplicationViewScaling
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CViewManagement_CIApplicationViewScalingVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CViewManagement_CIApplicationViewScaling;
#endif /* !defined(____x_ABI_CWindows_CUI_CViewManagement_CIApplicationViewScaling_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CViewManagement_CIApplicationViewScalingStatics_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CViewManagement_CIApplicationViewScalingStatics_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CViewManagement_CIApplicationViewScalingStaticsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CViewManagement_CIApplicationViewScalingStatics* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CViewManagement_CIApplicationViewScalingStatics* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CViewManagement_CIApplicationViewScalingStatics* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CViewManagement_CIApplicationViewScalingStatics* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CViewManagement_CIApplicationViewScalingStatics* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CViewManagement_CIApplicationViewScalingStatics* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_DisableLayoutScaling)(__x_ABI_CWindows_CUI_CViewManagement_CIApplicationViewScalingStatics* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* TrySetDisableLayoutScaling)(__x_ABI_CWindows_CUI_CViewManagement_CIApplicationViewScalingStatics* This,
        boolean disableLayoutScaling,
        boolean* success);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CViewManagement_CIApplicationViewScalingStaticsVtbl;

    interface __x_ABI_CWindows_CUI_CViewManagement_CIApplicationViewScalingStatics
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CViewManagement_CIApplicationViewScalingStaticsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CViewManagement_CIApplicationViewScalingStatics;
#endif /* !defined(____x_ABI_CWindows_CUI_CViewManagement_CIApplicationViewScalingStatics_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CViewManagement_CIApplicationViewStatics_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CViewManagement_CIApplicationViewStatics_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CViewManagement_CIApplicationViewStaticsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CViewManagement_CIApplicationViewStatics* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CViewManagement_CIApplicationViewStatics* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CViewManagement_CIApplicationViewStatics* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CViewManagement_CIApplicationViewStatics* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CViewManagement_CIApplicationViewStatics* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CViewManagement_CIApplicationViewStatics* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Value)(__x_ABI_CWindows_CUI_CViewManagement_CIApplicationViewStatics* This,
        enum __x_ABI_CWindows_CUI_CViewManagement_CApplicationViewState* value);
    HRESULT (STDMETHODCALLTYPE* TryUnsnap)(__x_ABI_CWindows_CUI_CViewManagement_CIApplicationViewStatics* This,
        boolean* success);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CViewManagement_CIApplicationViewStaticsVtbl;

    interface __x_ABI_CWindows_CUI_CViewManagement_CIApplicationViewStatics
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CViewManagement_CIApplicationViewStaticsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CViewManagement_CIApplicationViewStatics;
#endif /* !defined(____x_ABI_CWindows_CUI_CViewManagement_CIApplicationViewStatics_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CViewManagement_CIApplicationViewStatics2_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CViewManagement_CIApplicationViewStatics2_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CViewManagement_CIApplicationViewStatics2Vtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CViewManagement_CIApplicationViewStatics2* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CViewManagement_CIApplicationViewStatics2* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CViewManagement_CIApplicationViewStatics2* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CViewManagement_CIApplicationViewStatics2* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CViewManagement_CIApplicationViewStatics2* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CViewManagement_CIApplicationViewStatics2* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* GetForCurrentView)(__x_ABI_CWindows_CUI_CViewManagement_CIApplicationViewStatics2* This,
        __x_ABI_CWindows_CUI_CViewManagement_CIApplicationView** current);
    HRESULT (STDMETHODCALLTYPE* get_TerminateAppOnFinalViewClose)(__x_ABI_CWindows_CUI_CViewManagement_CIApplicationViewStatics2* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* put_TerminateAppOnFinalViewClose)(__x_ABI_CWindows_CUI_CViewManagement_CIApplicationViewStatics2* This,
        boolean value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CViewManagement_CIApplicationViewStatics2Vtbl;

    interface __x_ABI_CWindows_CUI_CViewManagement_CIApplicationViewStatics2
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CViewManagement_CIApplicationViewStatics2Vtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CViewManagement_CIApplicationViewStatics2;
#endif /* !defined(____x_ABI_CWindows_CUI_CViewManagement_CIApplicationViewStatics2_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CViewManagement_CIApplicationViewStatics3_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CViewManagement_CIApplicationViewStatics3_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CViewManagement_CIApplicationViewStatics3Vtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CViewManagement_CIApplicationViewStatics3* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CViewManagement_CIApplicationViewStatics3* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CViewManagement_CIApplicationViewStatics3* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CViewManagement_CIApplicationViewStatics3* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CViewManagement_CIApplicationViewStatics3* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CViewManagement_CIApplicationViewStatics3* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_PreferredLaunchWindowingMode)(__x_ABI_CWindows_CUI_CViewManagement_CIApplicationViewStatics3* This,
        enum __x_ABI_CWindows_CUI_CViewManagement_CApplicationViewWindowingMode* value);
    HRESULT (STDMETHODCALLTYPE* put_PreferredLaunchWindowingMode)(__x_ABI_CWindows_CUI_CViewManagement_CIApplicationViewStatics3* This,
        enum __x_ABI_CWindows_CUI_CViewManagement_CApplicationViewWindowingMode value);
    HRESULT (STDMETHODCALLTYPE* get_PreferredLaunchViewSize)(__x_ABI_CWindows_CUI_CViewManagement_CIApplicationViewStatics3* This,
        struct __x_ABI_CWindows_CFoundation_CSize* value);
    HRESULT (STDMETHODCALLTYPE* put_PreferredLaunchViewSize)(__x_ABI_CWindows_CUI_CViewManagement_CIApplicationViewStatics3* This,
        struct __x_ABI_CWindows_CFoundation_CSize value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CViewManagement_CIApplicationViewStatics3Vtbl;

    interface __x_ABI_CWindows_CUI_CViewManagement_CIApplicationViewStatics3
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CViewManagement_CIApplicationViewStatics3Vtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CViewManagement_CIApplicationViewStatics3;
#endif /* !defined(____x_ABI_CWindows_CUI_CViewManagement_CIApplicationViewStatics3_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CViewManagement_CIApplicationViewStatics4_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CViewManagement_CIApplicationViewStatics4_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CViewManagement_CIApplicationViewStatics4Vtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CViewManagement_CIApplicationViewStatics4* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CViewManagement_CIApplicationViewStatics4* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CViewManagement_CIApplicationViewStatics4* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CViewManagement_CIApplicationViewStatics4* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CViewManagement_CIApplicationViewStatics4* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CViewManagement_CIApplicationViewStatics4* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* ClearAllPersistedState)(__x_ABI_CWindows_CUI_CViewManagement_CIApplicationViewStatics4* This);
    HRESULT (STDMETHODCALLTYPE* ClearPersistedState)(__x_ABI_CWindows_CUI_CViewManagement_CIApplicationViewStatics4* This,
        HSTRING key);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CViewManagement_CIApplicationViewStatics4Vtbl;

    interface __x_ABI_CWindows_CUI_CViewManagement_CIApplicationViewStatics4
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CViewManagement_CIApplicationViewStatics4Vtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CViewManagement_CIApplicationViewStatics4;
#endif /* !defined(____x_ABI_CWindows_CUI_CViewManagement_CIApplicationViewStatics4_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CViewManagement_CIApplicationViewSwitcherStatics_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CViewManagement_CIApplicationViewSwitcherStatics_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CViewManagement_CIApplicationViewSwitcherStaticsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CViewManagement_CIApplicationViewSwitcherStatics* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CViewManagement_CIApplicationViewSwitcherStatics* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CViewManagement_CIApplicationViewSwitcherStatics* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CViewManagement_CIApplicationViewSwitcherStatics* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CViewManagement_CIApplicationViewSwitcherStatics* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CViewManagement_CIApplicationViewSwitcherStatics* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* DisableShowingMainViewOnActivation)(__x_ABI_CWindows_CUI_CViewManagement_CIApplicationViewSwitcherStatics* This);
    HRESULT (STDMETHODCALLTYPE* TryShowAsStandaloneAsync)(__x_ABI_CWindows_CUI_CViewManagement_CIApplicationViewSwitcherStatics* This,
        INT32 viewId,
        __x_ABI_C__FIAsyncOperation_1_boolean** operation);
    HRESULT (STDMETHODCALLTYPE* TryShowAsStandaloneWithSizePreferenceAsync)(__x_ABI_CWindows_CUI_CViewManagement_CIApplicationViewSwitcherStatics* This,
        INT32 viewId,
        enum __x_ABI_CWindows_CUI_CViewManagement_CViewSizePreference sizePreference,
        __x_ABI_C__FIAsyncOperation_1_boolean** operation);
    HRESULT (STDMETHODCALLTYPE* TryShowAsStandaloneWithAnchorViewAndSizePreferenceAsync)(__x_ABI_CWindows_CUI_CViewManagement_CIApplicationViewSwitcherStatics* This,
        INT32 viewId,
        enum __x_ABI_CWindows_CUI_CViewManagement_CViewSizePreference sizePreference,
        INT32 anchorViewId,
        enum __x_ABI_CWindows_CUI_CViewManagement_CViewSizePreference anchorSizePreference,
        __x_ABI_C__FIAsyncOperation_1_boolean** operation);
    HRESULT (STDMETHODCALLTYPE* SwitchAsync)(__x_ABI_CWindows_CUI_CViewManagement_CIApplicationViewSwitcherStatics* This,
        INT32 viewId,
        __x_ABI_CWindows_CFoundation_CIAsyncAction** operation);
    HRESULT (STDMETHODCALLTYPE* SwitchFromViewAsync)(__x_ABI_CWindows_CUI_CViewManagement_CIApplicationViewSwitcherStatics* This,
        INT32 toViewId,
        INT32 fromViewId,
        __x_ABI_CWindows_CFoundation_CIAsyncAction** operation);
    HRESULT (STDMETHODCALLTYPE* SwitchFromViewWithOptionsAsync)(__x_ABI_CWindows_CUI_CViewManagement_CIApplicationViewSwitcherStatics* This,
        INT32 toViewId,
        INT32 fromViewId,
        enum __x_ABI_CWindows_CUI_CViewManagement_CApplicationViewSwitchingOptions options,
        __x_ABI_CWindows_CFoundation_CIAsyncAction** operation);
    HRESULT (STDMETHODCALLTYPE* PrepareForCustomAnimatedSwitchAsync)(__x_ABI_CWindows_CUI_CViewManagement_CIApplicationViewSwitcherStatics* This,
        INT32 toViewId,
        INT32 fromViewId,
        enum __x_ABI_CWindows_CUI_CViewManagement_CApplicationViewSwitchingOptions options,
        __x_ABI_C__FIAsyncOperation_1_boolean** operation);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CViewManagement_CIApplicationViewSwitcherStaticsVtbl;

    interface __x_ABI_CWindows_CUI_CViewManagement_CIApplicationViewSwitcherStatics
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CViewManagement_CIApplicationViewSwitcherStaticsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CViewManagement_CIApplicationViewSwitcherStatics;
#endif /* !defined(____x_ABI_CWindows_CUI_CViewManagement_CIApplicationViewSwitcherStatics_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CViewManagement_CIApplicationViewSwitcherStatics2_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CViewManagement_CIApplicationViewSwitcherStatics2_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CViewManagement_CIApplicationViewSwitcherStatics2Vtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CViewManagement_CIApplicationViewSwitcherStatics2* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CViewManagement_CIApplicationViewSwitcherStatics2* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CViewManagement_CIApplicationViewSwitcherStatics2* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CViewManagement_CIApplicationViewSwitcherStatics2* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CViewManagement_CIApplicationViewSwitcherStatics2* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CViewManagement_CIApplicationViewSwitcherStatics2* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* DisableSystemViewActivationPolicy)(__x_ABI_CWindows_CUI_CViewManagement_CIApplicationViewSwitcherStatics2* This);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CViewManagement_CIApplicationViewSwitcherStatics2Vtbl;

    interface __x_ABI_CWindows_CUI_CViewManagement_CIApplicationViewSwitcherStatics2
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CViewManagement_CIApplicationViewSwitcherStatics2Vtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CViewManagement_CIApplicationViewSwitcherStatics2;
#endif /* !defined(____x_ABI_CWindows_CUI_CViewManagement_CIApplicationViewSwitcherStatics2_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CViewManagement_CIApplicationViewSwitcherStatics3_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CViewManagement_CIApplicationViewSwitcherStatics3_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CViewManagement_CIApplicationViewSwitcherStatics3Vtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CViewManagement_CIApplicationViewSwitcherStatics3* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CViewManagement_CIApplicationViewSwitcherStatics3* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CViewManagement_CIApplicationViewSwitcherStatics3* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CViewManagement_CIApplicationViewSwitcherStatics3* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CViewManagement_CIApplicationViewSwitcherStatics3* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CViewManagement_CIApplicationViewSwitcherStatics3* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* TryShowAsViewModeAsync)(__x_ABI_CWindows_CUI_CViewManagement_CIApplicationViewSwitcherStatics3* This,
        INT32 viewId,
        enum __x_ABI_CWindows_CUI_CViewManagement_CApplicationViewMode viewMode,
        __x_ABI_C__FIAsyncOperation_1_boolean** operation);
    HRESULT (STDMETHODCALLTYPE* TryShowAsViewModeWithPreferencesAsync)(__x_ABI_CWindows_CUI_CViewManagement_CIApplicationViewSwitcherStatics3* This,
        INT32 viewId,
        enum __x_ABI_CWindows_CUI_CViewManagement_CApplicationViewMode viewMode,
        __x_ABI_CWindows_CUI_CViewManagement_CIViewModePreferences* viewModePreferences,
        __x_ABI_C__FIAsyncOperation_1_boolean** operation);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CViewManagement_CIApplicationViewSwitcherStatics3Vtbl;

    interface __x_ABI_CWindows_CUI_CViewManagement_CIApplicationViewSwitcherStatics3
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CViewManagement_CIApplicationViewSwitcherStatics3Vtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CViewManagement_CIApplicationViewSwitcherStatics3;
#endif /* !defined(____x_ABI_CWindows_CUI_CViewManagement_CIApplicationViewSwitcherStatics3_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CViewManagement_CIApplicationViewTitleBar_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CViewManagement_CIApplicationViewTitleBar_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CViewManagement_CIApplicationViewTitleBarVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CViewManagement_CIApplicationViewTitleBar* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CViewManagement_CIApplicationViewTitleBar* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CViewManagement_CIApplicationViewTitleBar* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CViewManagement_CIApplicationViewTitleBar* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CViewManagement_CIApplicationViewTitleBar* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CViewManagement_CIApplicationViewTitleBar* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* put_ForegroundColor)(__x_ABI_CWindows_CUI_CViewManagement_CIApplicationViewTitleBar* This,
        __x_ABI_C__FIReference_1___x_ABI_CWindows__CUI__CColor* value);
    HRESULT (STDMETHODCALLTYPE* get_ForegroundColor)(__x_ABI_CWindows_CUI_CViewManagement_CIApplicationViewTitleBar* This,
        __x_ABI_C__FIReference_1___x_ABI_CWindows__CUI__CColor** value);
    HRESULT (STDMETHODCALLTYPE* put_BackgroundColor)(__x_ABI_CWindows_CUI_CViewManagement_CIApplicationViewTitleBar* This,
        __x_ABI_C__FIReference_1___x_ABI_CWindows__CUI__CColor* value);
    HRESULT (STDMETHODCALLTYPE* get_BackgroundColor)(__x_ABI_CWindows_CUI_CViewManagement_CIApplicationViewTitleBar* This,
        __x_ABI_C__FIReference_1___x_ABI_CWindows__CUI__CColor** value);
    HRESULT (STDMETHODCALLTYPE* put_ButtonForegroundColor)(__x_ABI_CWindows_CUI_CViewManagement_CIApplicationViewTitleBar* This,
        __x_ABI_C__FIReference_1___x_ABI_CWindows__CUI__CColor* value);
    HRESULT (STDMETHODCALLTYPE* get_ButtonForegroundColor)(__x_ABI_CWindows_CUI_CViewManagement_CIApplicationViewTitleBar* This,
        __x_ABI_C__FIReference_1___x_ABI_CWindows__CUI__CColor** value);
    HRESULT (STDMETHODCALLTYPE* put_ButtonBackgroundColor)(__x_ABI_CWindows_CUI_CViewManagement_CIApplicationViewTitleBar* This,
        __x_ABI_C__FIReference_1___x_ABI_CWindows__CUI__CColor* value);
    HRESULT (STDMETHODCALLTYPE* get_ButtonBackgroundColor)(__x_ABI_CWindows_CUI_CViewManagement_CIApplicationViewTitleBar* This,
        __x_ABI_C__FIReference_1___x_ABI_CWindows__CUI__CColor** value);
    HRESULT (STDMETHODCALLTYPE* put_ButtonHoverForegroundColor)(__x_ABI_CWindows_CUI_CViewManagement_CIApplicationViewTitleBar* This,
        __x_ABI_C__FIReference_1___x_ABI_CWindows__CUI__CColor* value);
    HRESULT (STDMETHODCALLTYPE* get_ButtonHoverForegroundColor)(__x_ABI_CWindows_CUI_CViewManagement_CIApplicationViewTitleBar* This,
        __x_ABI_C__FIReference_1___x_ABI_CWindows__CUI__CColor** value);
    HRESULT (STDMETHODCALLTYPE* put_ButtonHoverBackgroundColor)(__x_ABI_CWindows_CUI_CViewManagement_CIApplicationViewTitleBar* This,
        __x_ABI_C__FIReference_1___x_ABI_CWindows__CUI__CColor* value);
    HRESULT (STDMETHODCALLTYPE* get_ButtonHoverBackgroundColor)(__x_ABI_CWindows_CUI_CViewManagement_CIApplicationViewTitleBar* This,
        __x_ABI_C__FIReference_1___x_ABI_CWindows__CUI__CColor** value);
    HRESULT (STDMETHODCALLTYPE* put_ButtonPressedForegroundColor)(__x_ABI_CWindows_CUI_CViewManagement_CIApplicationViewTitleBar* This,
        __x_ABI_C__FIReference_1___x_ABI_CWindows__CUI__CColor* value);
    HRESULT (STDMETHODCALLTYPE* get_ButtonPressedForegroundColor)(__x_ABI_CWindows_CUI_CViewManagement_CIApplicationViewTitleBar* This,
        __x_ABI_C__FIReference_1___x_ABI_CWindows__CUI__CColor** value);
    HRESULT (STDMETHODCALLTYPE* put_ButtonPressedBackgroundColor)(__x_ABI_CWindows_CUI_CViewManagement_CIApplicationViewTitleBar* This,
        __x_ABI_C__FIReference_1___x_ABI_CWindows__CUI__CColor* value);
    HRESULT (STDMETHODCALLTYPE* get_ButtonPressedBackgroundColor)(__x_ABI_CWindows_CUI_CViewManagement_CIApplicationViewTitleBar* This,
        __x_ABI_C__FIReference_1___x_ABI_CWindows__CUI__CColor** value);
    HRESULT (STDMETHODCALLTYPE* put_InactiveForegroundColor)(__x_ABI_CWindows_CUI_CViewManagement_CIApplicationViewTitleBar* This,
        __x_ABI_C__FIReference_1___x_ABI_CWindows__CUI__CColor* value);
    HRESULT (STDMETHODCALLTYPE* get_InactiveForegroundColor)(__x_ABI_CWindows_CUI_CViewManagement_CIApplicationViewTitleBar* This,
        __x_ABI_C__FIReference_1___x_ABI_CWindows__CUI__CColor** value);
    HRESULT (STDMETHODCALLTYPE* put_InactiveBackgroundColor)(__x_ABI_CWindows_CUI_CViewManagement_CIApplicationViewTitleBar* This,
        __x_ABI_C__FIReference_1___x_ABI_CWindows__CUI__CColor* value);
    HRESULT (STDMETHODCALLTYPE* get_InactiveBackgroundColor)(__x_ABI_CWindows_CUI_CViewManagement_CIApplicationViewTitleBar* This,
        __x_ABI_C__FIReference_1___x_ABI_CWindows__CUI__CColor** value);
    HRESULT (STDMETHODCALLTYPE* put_ButtonInactiveForegroundColor)(__x_ABI_CWindows_CUI_CViewManagement_CIApplicationViewTitleBar* This,
        __x_ABI_C__FIReference_1___x_ABI_CWindows__CUI__CColor* value);
    HRESULT (STDMETHODCALLTYPE* get_ButtonInactiveForegroundColor)(__x_ABI_CWindows_CUI_CViewManagement_CIApplicationViewTitleBar* This,
        __x_ABI_C__FIReference_1___x_ABI_CWindows__CUI__CColor** value);
    HRESULT (STDMETHODCALLTYPE* put_ButtonInactiveBackgroundColor)(__x_ABI_CWindows_CUI_CViewManagement_CIApplicationViewTitleBar* This,
        __x_ABI_C__FIReference_1___x_ABI_CWindows__CUI__CColor* value);
    HRESULT (STDMETHODCALLTYPE* get_ButtonInactiveBackgroundColor)(__x_ABI_CWindows_CUI_CViewManagement_CIApplicationViewTitleBar* This,
        __x_ABI_C__FIReference_1___x_ABI_CWindows__CUI__CColor** value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CViewManagement_CIApplicationViewTitleBarVtbl;

    interface __x_ABI_CWindows_CUI_CViewManagement_CIApplicationViewTitleBar
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CViewManagement_CIApplicationViewTitleBarVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CViewManagement_CIApplicationViewTitleBar;
#endif /* !defined(____x_ABI_CWindows_CUI_CViewManagement_CIApplicationViewTitleBar_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CViewManagement_CIApplicationViewTransferContext_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CViewManagement_CIApplicationViewTransferContext_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CViewManagement_CIApplicationViewTransferContextVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CViewManagement_CIApplicationViewTransferContext* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CViewManagement_CIApplicationViewTransferContext* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CViewManagement_CIApplicationViewTransferContext* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CViewManagement_CIApplicationViewTransferContext* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CViewManagement_CIApplicationViewTransferContext* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CViewManagement_CIApplicationViewTransferContext* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_ViewId)(__x_ABI_CWindows_CUI_CViewManagement_CIApplicationViewTransferContext* This,
        INT32* value);
    HRESULT (STDMETHODCALLTYPE* put_ViewId)(__x_ABI_CWindows_CUI_CViewManagement_CIApplicationViewTransferContext* This,
        INT32 value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CViewManagement_CIApplicationViewTransferContextVtbl;

    interface __x_ABI_CWindows_CUI_CViewManagement_CIApplicationViewTransferContext
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CViewManagement_CIApplicationViewTransferContextVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CViewManagement_CIApplicationViewTransferContext;
#endif /* !defined(____x_ABI_CWindows_CUI_CViewManagement_CIApplicationViewTransferContext_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CViewManagement_CIApplicationViewTransferContextStatics_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CViewManagement_CIApplicationViewTransferContextStatics_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CViewManagement_CIApplicationViewTransferContextStaticsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CViewManagement_CIApplicationViewTransferContextStatics* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CViewManagement_CIApplicationViewTransferContextStatics* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CViewManagement_CIApplicationViewTransferContextStatics* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CViewManagement_CIApplicationViewTransferContextStatics* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CViewManagement_CIApplicationViewTransferContextStatics* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CViewManagement_CIApplicationViewTransferContextStatics* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_DataPackageFormatId)(__x_ABI_CWindows_CUI_CViewManagement_CIApplicationViewTransferContextStatics* This,
        HSTRING* value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CViewManagement_CIApplicationViewTransferContextStaticsVtbl;

    interface __x_ABI_CWindows_CUI_CViewManagement_CIApplicationViewTransferContextStatics
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CViewManagement_CIApplicationViewTransferContextStaticsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CViewManagement_CIApplicationViewTransferContextStatics;
#endif /* !defined(____x_ABI_CWindows_CUI_CViewManagement_CIApplicationViewTransferContextStatics_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CViewManagement_CIApplicationViewWithContext_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CViewManagement_CIApplicationViewWithContext_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CViewManagement_CIApplicationViewWithContextVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CViewManagement_CIApplicationViewWithContext* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CViewManagement_CIApplicationViewWithContext* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CViewManagement_CIApplicationViewWithContext* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CViewManagement_CIApplicationViewWithContext* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CViewManagement_CIApplicationViewWithContext* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CViewManagement_CIApplicationViewWithContext* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_UIContext)(__x_ABI_CWindows_CUI_CViewManagement_CIApplicationViewWithContext* This,
        __x_ABI_CWindows_CUI_CIUIContext** value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CViewManagement_CIApplicationViewWithContextVtbl;

    interface __x_ABI_CWindows_CUI_CViewManagement_CIApplicationViewWithContext
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CViewManagement_CIApplicationViewWithContextVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CViewManagement_CIApplicationViewWithContext;
#endif /* !defined(____x_ABI_CWindows_CUI_CViewManagement_CIApplicationViewWithContext_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CViewManagement_CIInputPane_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CViewManagement_CIInputPane_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CViewManagement_CIInputPaneVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CViewManagement_CIInputPane* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CViewManagement_CIInputPane* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CViewManagement_CIInputPane* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CViewManagement_CIInputPane* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CViewManagement_CIInputPane* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CViewManagement_CIInputPane* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* add_Showing)(__x_ABI_CWindows_CUI_CViewManagement_CIInputPane* This,
        __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CViewManagement__CInputPane___x_ABI_CWindows__CUI__CViewManagement__CInputPaneVisibilityEventArgs* handler,
        EventRegistrationToken* token);
    HRESULT (STDMETHODCALLTYPE* remove_Showing)(__x_ABI_CWindows_CUI_CViewManagement_CIInputPane* This,
        EventRegistrationToken token);
    HRESULT (STDMETHODCALLTYPE* add_Hiding)(__x_ABI_CWindows_CUI_CViewManagement_CIInputPane* This,
        __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CViewManagement__CInputPane___x_ABI_CWindows__CUI__CViewManagement__CInputPaneVisibilityEventArgs* handler,
        EventRegistrationToken* token);
    HRESULT (STDMETHODCALLTYPE* remove_Hiding)(__x_ABI_CWindows_CUI_CViewManagement_CIInputPane* This,
        EventRegistrationToken token);
    HRESULT (STDMETHODCALLTYPE* get_OccludedRect)(__x_ABI_CWindows_CUI_CViewManagement_CIInputPane* This,
        struct __x_ABI_CWindows_CFoundation_CRect* value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CViewManagement_CIInputPaneVtbl;

    interface __x_ABI_CWindows_CUI_CViewManagement_CIInputPane
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CViewManagement_CIInputPaneVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CViewManagement_CIInputPane;
#endif /* !defined(____x_ABI_CWindows_CUI_CViewManagement_CIInputPane_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CViewManagement_CIInputPane2_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CViewManagement_CIInputPane2_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CViewManagement_CIInputPane2Vtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CViewManagement_CIInputPane2* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CViewManagement_CIInputPane2* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CViewManagement_CIInputPane2* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CViewManagement_CIInputPane2* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CViewManagement_CIInputPane2* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CViewManagement_CIInputPane2* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* TryShow)(__x_ABI_CWindows_CUI_CViewManagement_CIInputPane2* This,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* TryHide)(__x_ABI_CWindows_CUI_CViewManagement_CIInputPane2* This,
        boolean* result);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CViewManagement_CIInputPane2Vtbl;

    interface __x_ABI_CWindows_CUI_CViewManagement_CIInputPane2
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CViewManagement_CIInputPane2Vtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CViewManagement_CIInputPane2;
#endif /* !defined(____x_ABI_CWindows_CUI_CViewManagement_CIInputPane2_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CViewManagement_CIInputPaneControl_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CViewManagement_CIInputPaneControl_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CViewManagement_CIInputPaneControlVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CViewManagement_CIInputPaneControl* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CViewManagement_CIInputPaneControl* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CViewManagement_CIInputPaneControl* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CViewManagement_CIInputPaneControl* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CViewManagement_CIInputPaneControl* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CViewManagement_CIInputPaneControl* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Visible)(__x_ABI_CWindows_CUI_CViewManagement_CIInputPaneControl* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* put_Visible)(__x_ABI_CWindows_CUI_CViewManagement_CIInputPaneControl* This,
        boolean value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CViewManagement_CIInputPaneControlVtbl;

    interface __x_ABI_CWindows_CUI_CViewManagement_CIInputPaneControl
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CViewManagement_CIInputPaneControlVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CViewManagement_CIInputPaneControl;
#endif /* !defined(____x_ABI_CWindows_CUI_CViewManagement_CIInputPaneControl_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CViewManagement_CIInputPaneStatics_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CViewManagement_CIInputPaneStatics_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CViewManagement_CIInputPaneStaticsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CViewManagement_CIInputPaneStatics* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CViewManagement_CIInputPaneStatics* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CViewManagement_CIInputPaneStatics* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CViewManagement_CIInputPaneStatics* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CViewManagement_CIInputPaneStatics* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CViewManagement_CIInputPaneStatics* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* GetForCurrentView)(__x_ABI_CWindows_CUI_CViewManagement_CIInputPaneStatics* This,
        __x_ABI_CWindows_CUI_CViewManagement_CIInputPane** inputPane);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CViewManagement_CIInputPaneStaticsVtbl;

    interface __x_ABI_CWindows_CUI_CViewManagement_CIInputPaneStatics
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CViewManagement_CIInputPaneStaticsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CViewManagement_CIInputPaneStatics;
#endif /* !defined(____x_ABI_CWindows_CUI_CViewManagement_CIInputPaneStatics_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CViewManagement_CIInputPaneStatics2_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CViewManagement_CIInputPaneStatics2_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CViewManagement_CIInputPaneStatics2Vtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CViewManagement_CIInputPaneStatics2* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CViewManagement_CIInputPaneStatics2* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CViewManagement_CIInputPaneStatics2* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CViewManagement_CIInputPaneStatics2* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CViewManagement_CIInputPaneStatics2* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CViewManagement_CIInputPaneStatics2* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* GetForUIContext)(__x_ABI_CWindows_CUI_CViewManagement_CIInputPaneStatics2* This,
        __x_ABI_CWindows_CUI_CIUIContext* context,
        __x_ABI_CWindows_CUI_CViewManagement_CIInputPane** result);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CViewManagement_CIInputPaneStatics2Vtbl;

    interface __x_ABI_CWindows_CUI_CViewManagement_CIInputPaneStatics2
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CViewManagement_CIInputPaneStatics2Vtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CViewManagement_CIInputPaneStatics2;
#endif /* !defined(____x_ABI_CWindows_CUI_CViewManagement_CIInputPaneStatics2_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CViewManagement_CIInputPaneVisibilityEventArgs_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CViewManagement_CIInputPaneVisibilityEventArgs_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CViewManagement_CIInputPaneVisibilityEventArgsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CViewManagement_CIInputPaneVisibilityEventArgs* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CViewManagement_CIInputPaneVisibilityEventArgs* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CViewManagement_CIInputPaneVisibilityEventArgs* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CViewManagement_CIInputPaneVisibilityEventArgs* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CViewManagement_CIInputPaneVisibilityEventArgs* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CViewManagement_CIInputPaneVisibilityEventArgs* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_OccludedRect)(__x_ABI_CWindows_CUI_CViewManagement_CIInputPaneVisibilityEventArgs* This,
        struct __x_ABI_CWindows_CFoundation_CRect* value);
    HRESULT (STDMETHODCALLTYPE* put_EnsuredFocusedElementInView)(__x_ABI_CWindows_CUI_CViewManagement_CIInputPaneVisibilityEventArgs* This,
        boolean value);
    HRESULT (STDMETHODCALLTYPE* get_EnsuredFocusedElementInView)(__x_ABI_CWindows_CUI_CViewManagement_CIInputPaneVisibilityEventArgs* This,
        boolean* value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CViewManagement_CIInputPaneVisibilityEventArgsVtbl;

    interface __x_ABI_CWindows_CUI_CViewManagement_CIInputPaneVisibilityEventArgs
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CViewManagement_CIInputPaneVisibilityEventArgsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CViewManagement_CIInputPaneVisibilityEventArgs;
#endif /* !defined(____x_ABI_CWindows_CUI_CViewManagement_CIInputPaneVisibilityEventArgs_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CViewManagement_CIProjectionManagerStatics_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CViewManagement_CIProjectionManagerStatics_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CViewManagement_CIProjectionManagerStaticsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CViewManagement_CIProjectionManagerStatics* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CViewManagement_CIProjectionManagerStatics* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CViewManagement_CIProjectionManagerStatics* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CViewManagement_CIProjectionManagerStatics* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CViewManagement_CIProjectionManagerStatics* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CViewManagement_CIProjectionManagerStatics* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* StartProjectingAsync)(__x_ABI_CWindows_CUI_CViewManagement_CIProjectionManagerStatics* This,
        INT32 projectionViewId,
        INT32 anchorViewId,
        __x_ABI_CWindows_CFoundation_CIAsyncAction** operation);
    HRESULT (STDMETHODCALLTYPE* SwapDisplaysForViewsAsync)(__x_ABI_CWindows_CUI_CViewManagement_CIProjectionManagerStatics* This,
        INT32 projectionViewId,
        INT32 anchorViewId,
        __x_ABI_CWindows_CFoundation_CIAsyncAction** operation);
    HRESULT (STDMETHODCALLTYPE* StopProjectingAsync)(__x_ABI_CWindows_CUI_CViewManagement_CIProjectionManagerStatics* This,
        INT32 projectionViewId,
        INT32 anchorViewId,
        __x_ABI_CWindows_CFoundation_CIAsyncAction** operation);
    HRESULT (STDMETHODCALLTYPE* get_ProjectionDisplayAvailable)(__x_ABI_CWindows_CUI_CViewManagement_CIProjectionManagerStatics* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* add_ProjectionDisplayAvailableChanged)(__x_ABI_CWindows_CUI_CViewManagement_CIProjectionManagerStatics* This,
        __x_ABI_C__FIEventHandler_1_IInspectable* handler,
        EventRegistrationToken* token);
    HRESULT (STDMETHODCALLTYPE* remove_ProjectionDisplayAvailableChanged)(__x_ABI_CWindows_CUI_CViewManagement_CIProjectionManagerStatics* This,
        EventRegistrationToken token);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CViewManagement_CIProjectionManagerStaticsVtbl;

    interface __x_ABI_CWindows_CUI_CViewManagement_CIProjectionManagerStatics
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CViewManagement_CIProjectionManagerStaticsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CViewManagement_CIProjectionManagerStatics;
#endif /* !defined(____x_ABI_CWindows_CUI_CViewManagement_CIProjectionManagerStatics_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CViewManagement_CIProjectionManagerStatics2_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CViewManagement_CIProjectionManagerStatics2_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CViewManagement_CIProjectionManagerStatics2Vtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CViewManagement_CIProjectionManagerStatics2* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CViewManagement_CIProjectionManagerStatics2* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CViewManagement_CIProjectionManagerStatics2* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CViewManagement_CIProjectionManagerStatics2* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CViewManagement_CIProjectionManagerStatics2* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CViewManagement_CIProjectionManagerStatics2* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* StartProjectingWithDeviceInfoAsync)(__x_ABI_CWindows_CUI_CViewManagement_CIProjectionManagerStatics2* This,
        INT32 projectionViewId,
        INT32 anchorViewId,
        __x_ABI_CWindows_CDevices_CEnumeration_CIDeviceInformation* displayDeviceInfo,
        __x_ABI_CWindows_CFoundation_CIAsyncAction** operation);
    HRESULT (STDMETHODCALLTYPE* RequestStartProjectingAsync)(__x_ABI_CWindows_CUI_CViewManagement_CIProjectionManagerStatics2* This,
        INT32 projectionViewId,
        INT32 anchorViewId,
        struct __x_ABI_CWindows_CFoundation_CRect selection,
        __x_ABI_C__FIAsyncOperation_1_boolean** operation);
    HRESULT (STDMETHODCALLTYPE* RequestStartProjectingWithPlacementAsync)(__x_ABI_CWindows_CUI_CViewManagement_CIProjectionManagerStatics2* This,
        INT32 projectionViewId,
        INT32 anchorViewId,
        struct __x_ABI_CWindows_CFoundation_CRect selection,
        enum __x_ABI_CWindows_CUI_CPopups_CPlacement prefferedPlacement,
        __x_ABI_C__FIAsyncOperation_1_boolean** operation);
    HRESULT (STDMETHODCALLTYPE* GetDeviceSelector)(__x_ABI_CWindows_CUI_CViewManagement_CIProjectionManagerStatics2* This,
        HSTRING* selector);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CViewManagement_CIProjectionManagerStatics2Vtbl;

    interface __x_ABI_CWindows_CUI_CViewManagement_CIProjectionManagerStatics2
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CViewManagement_CIProjectionManagerStatics2Vtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CViewManagement_CIProjectionManagerStatics2;
#endif /* !defined(____x_ABI_CWindows_CUI_CViewManagement_CIProjectionManagerStatics2_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CViewManagement_CIStatusBar_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CViewManagement_CIStatusBar_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CViewManagement_CIStatusBarVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CViewManagement_CIStatusBar* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CViewManagement_CIStatusBar* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CViewManagement_CIStatusBar* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CViewManagement_CIStatusBar* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CViewManagement_CIStatusBar* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CViewManagement_CIStatusBar* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* ShowAsync)(__x_ABI_CWindows_CUI_CViewManagement_CIStatusBar* This,
        __x_ABI_CWindows_CFoundation_CIAsyncAction** returnValue);
    HRESULT (STDMETHODCALLTYPE* HideAsync)(__x_ABI_CWindows_CUI_CViewManagement_CIStatusBar* This,
        __x_ABI_CWindows_CFoundation_CIAsyncAction** returnValue);
    HRESULT (STDMETHODCALLTYPE* get_BackgroundOpacity)(__x_ABI_CWindows_CUI_CViewManagement_CIStatusBar* This,
        DOUBLE* value);
    HRESULT (STDMETHODCALLTYPE* put_BackgroundOpacity)(__x_ABI_CWindows_CUI_CViewManagement_CIStatusBar* This,
        DOUBLE value);
    HRESULT (STDMETHODCALLTYPE* get_ForegroundColor)(__x_ABI_CWindows_CUI_CViewManagement_CIStatusBar* This,
        __x_ABI_C__FIReference_1___x_ABI_CWindows__CUI__CColor** value);
    HRESULT (STDMETHODCALLTYPE* put_ForegroundColor)(__x_ABI_CWindows_CUI_CViewManagement_CIStatusBar* This,
        __x_ABI_C__FIReference_1___x_ABI_CWindows__CUI__CColor* value);
    HRESULT (STDMETHODCALLTYPE* get_BackgroundColor)(__x_ABI_CWindows_CUI_CViewManagement_CIStatusBar* This,
        __x_ABI_C__FIReference_1___x_ABI_CWindows__CUI__CColor** value);
    HRESULT (STDMETHODCALLTYPE* put_BackgroundColor)(__x_ABI_CWindows_CUI_CViewManagement_CIStatusBar* This,
        __x_ABI_C__FIReference_1___x_ABI_CWindows__CUI__CColor* value);
    HRESULT (STDMETHODCALLTYPE* get_ProgressIndicator)(__x_ABI_CWindows_CUI_CViewManagement_CIStatusBar* This,
        __x_ABI_CWindows_CUI_CViewManagement_CIStatusBarProgressIndicator** value);
    HRESULT (STDMETHODCALLTYPE* get_OccludedRect)(__x_ABI_CWindows_CUI_CViewManagement_CIStatusBar* This,
        struct __x_ABI_CWindows_CFoundation_CRect* value);
    HRESULT (STDMETHODCALLTYPE* add_Showing)(__x_ABI_CWindows_CUI_CViewManagement_CIStatusBar* This,
        __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CViewManagement__CStatusBar_IInspectable* eventHandler,
        EventRegistrationToken* token);
    HRESULT (STDMETHODCALLTYPE* remove_Showing)(__x_ABI_CWindows_CUI_CViewManagement_CIStatusBar* This,
        EventRegistrationToken token);
    HRESULT (STDMETHODCALLTYPE* add_Hiding)(__x_ABI_CWindows_CUI_CViewManagement_CIStatusBar* This,
        __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CViewManagement__CStatusBar_IInspectable* eventHandler,
        EventRegistrationToken* token);
    HRESULT (STDMETHODCALLTYPE* remove_Hiding)(__x_ABI_CWindows_CUI_CViewManagement_CIStatusBar* This,
        EventRegistrationToken token);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CViewManagement_CIStatusBarVtbl;

    interface __x_ABI_CWindows_CUI_CViewManagement_CIStatusBar
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CViewManagement_CIStatusBarVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CViewManagement_CIStatusBar;
#endif /* !defined(____x_ABI_CWindows_CUI_CViewManagement_CIStatusBar_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CViewManagement_CIStatusBarProgressIndicator_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CViewManagement_CIStatusBarProgressIndicator_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CViewManagement_CIStatusBarProgressIndicatorVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CViewManagement_CIStatusBarProgressIndicator* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CViewManagement_CIStatusBarProgressIndicator* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CViewManagement_CIStatusBarProgressIndicator* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CViewManagement_CIStatusBarProgressIndicator* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CViewManagement_CIStatusBarProgressIndicator* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CViewManagement_CIStatusBarProgressIndicator* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* ShowAsync)(__x_ABI_CWindows_CUI_CViewManagement_CIStatusBarProgressIndicator* This,
        __x_ABI_CWindows_CFoundation_CIAsyncAction** returnValue);
    HRESULT (STDMETHODCALLTYPE* HideAsync)(__x_ABI_CWindows_CUI_CViewManagement_CIStatusBarProgressIndicator* This,
        __x_ABI_CWindows_CFoundation_CIAsyncAction** returnValue);
    HRESULT (STDMETHODCALLTYPE* get_Text)(__x_ABI_CWindows_CUI_CViewManagement_CIStatusBarProgressIndicator* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* put_Text)(__x_ABI_CWindows_CUI_CViewManagement_CIStatusBarProgressIndicator* This,
        HSTRING value);
    HRESULT (STDMETHODCALLTYPE* get_ProgressValue)(__x_ABI_CWindows_CUI_CViewManagement_CIStatusBarProgressIndicator* This,
        __x_ABI_C__FIReference_1_double** value);
    HRESULT (STDMETHODCALLTYPE* put_ProgressValue)(__x_ABI_CWindows_CUI_CViewManagement_CIStatusBarProgressIndicator* This,
        __x_ABI_C__FIReference_1_double* value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CViewManagement_CIStatusBarProgressIndicatorVtbl;

    interface __x_ABI_CWindows_CUI_CViewManagement_CIStatusBarProgressIndicator
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CViewManagement_CIStatusBarProgressIndicatorVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CViewManagement_CIStatusBarProgressIndicator;
#endif /* !defined(____x_ABI_CWindows_CUI_CViewManagement_CIStatusBarProgressIndicator_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CViewManagement_CIStatusBarStatics_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CViewManagement_CIStatusBarStatics_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CViewManagement_CIStatusBarStaticsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CViewManagement_CIStatusBarStatics* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CViewManagement_CIStatusBarStatics* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CViewManagement_CIStatusBarStatics* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CViewManagement_CIStatusBarStatics* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CViewManagement_CIStatusBarStatics* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CViewManagement_CIStatusBarStatics* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* GetForCurrentView)(__x_ABI_CWindows_CUI_CViewManagement_CIStatusBarStatics* This,
        __x_ABI_CWindows_CUI_CViewManagement_CIStatusBar** value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CViewManagement_CIStatusBarStaticsVtbl;

    interface __x_ABI_CWindows_CUI_CViewManagement_CIStatusBarStatics
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CViewManagement_CIStatusBarStaticsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CViewManagement_CIStatusBarStatics;
#endif /* !defined(____x_ABI_CWindows_CUI_CViewManagement_CIStatusBarStatics_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CViewManagement_CIUISettings_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CViewManagement_CIUISettings_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CViewManagement_CIUISettingsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CViewManagement_CIUISettings* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CViewManagement_CIUISettings* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CViewManagement_CIUISettings* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CViewManagement_CIUISettings* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CViewManagement_CIUISettings* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CViewManagement_CIUISettings* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_HandPreference)(__x_ABI_CWindows_CUI_CViewManagement_CIUISettings* This,
        enum __x_ABI_CWindows_CUI_CViewManagement_CHandPreference* value);
    HRESULT (STDMETHODCALLTYPE* get_CursorSize)(__x_ABI_CWindows_CUI_CViewManagement_CIUISettings* This,
        struct __x_ABI_CWindows_CFoundation_CSize* value);
    HRESULT (STDMETHODCALLTYPE* get_ScrollBarSize)(__x_ABI_CWindows_CUI_CViewManagement_CIUISettings* This,
        struct __x_ABI_CWindows_CFoundation_CSize* value);
    HRESULT (STDMETHODCALLTYPE* get_ScrollBarArrowSize)(__x_ABI_CWindows_CUI_CViewManagement_CIUISettings* This,
        struct __x_ABI_CWindows_CFoundation_CSize* value);
    HRESULT (STDMETHODCALLTYPE* get_ScrollBarThumbBoxSize)(__x_ABI_CWindows_CUI_CViewManagement_CIUISettings* This,
        struct __x_ABI_CWindows_CFoundation_CSize* value);
    HRESULT (STDMETHODCALLTYPE* get_MessageDuration)(__x_ABI_CWindows_CUI_CViewManagement_CIUISettings* This,
        UINT32* value);
    HRESULT (STDMETHODCALLTYPE* get_AnimationsEnabled)(__x_ABI_CWindows_CUI_CViewManagement_CIUISettings* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* get_CaretBrowsingEnabled)(__x_ABI_CWindows_CUI_CViewManagement_CIUISettings* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* get_CaretBlinkRate)(__x_ABI_CWindows_CUI_CViewManagement_CIUISettings* This,
        UINT32* value);
    HRESULT (STDMETHODCALLTYPE* get_CaretWidth)(__x_ABI_CWindows_CUI_CViewManagement_CIUISettings* This,
        UINT32* value);
    HRESULT (STDMETHODCALLTYPE* get_DoubleClickTime)(__x_ABI_CWindows_CUI_CViewManagement_CIUISettings* This,
        UINT32* value);
    HRESULT (STDMETHODCALLTYPE* get_MouseHoverTime)(__x_ABI_CWindows_CUI_CViewManagement_CIUISettings* This,
        UINT32* value);
    HRESULT (STDMETHODCALLTYPE* UIElementColor)(__x_ABI_CWindows_CUI_CViewManagement_CIUISettings* This,
        enum __x_ABI_CWindows_CUI_CViewManagement_CUIElementType desiredElement,
        struct __x_ABI_CWindows_CUI_CColor* value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CViewManagement_CIUISettingsVtbl;

    interface __x_ABI_CWindows_CUI_CViewManagement_CIUISettings
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CViewManagement_CIUISettingsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CViewManagement_CIUISettings;
#endif /* !defined(____x_ABI_CWindows_CUI_CViewManagement_CIUISettings_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CViewManagement_CIUISettings2_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CViewManagement_CIUISettings2_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CViewManagement_CIUISettings2Vtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CViewManagement_CIUISettings2* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CViewManagement_CIUISettings2* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CViewManagement_CIUISettings2* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CViewManagement_CIUISettings2* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CViewManagement_CIUISettings2* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CViewManagement_CIUISettings2* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_TextScaleFactor)(__x_ABI_CWindows_CUI_CViewManagement_CIUISettings2* This,
        DOUBLE* value);
    HRESULT (STDMETHODCALLTYPE* add_TextScaleFactorChanged)(__x_ABI_CWindows_CUI_CViewManagement_CIUISettings2* This,
        __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CViewManagement__CUISettings_IInspectable* handler,
        EventRegistrationToken* cookie);
    HRESULT (STDMETHODCALLTYPE* remove_TextScaleFactorChanged)(__x_ABI_CWindows_CUI_CViewManagement_CIUISettings2* This,
        EventRegistrationToken cookie);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CViewManagement_CIUISettings2Vtbl;

    interface __x_ABI_CWindows_CUI_CViewManagement_CIUISettings2
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CViewManagement_CIUISettings2Vtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CViewManagement_CIUISettings2;
#endif /* !defined(____x_ABI_CWindows_CUI_CViewManagement_CIUISettings2_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CViewManagement_CIUISettings3_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CViewManagement_CIUISettings3_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CViewManagement_CIUISettings3Vtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CViewManagement_CIUISettings3* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CViewManagement_CIUISettings3* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CViewManagement_CIUISettings3* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CViewManagement_CIUISettings3* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CViewManagement_CIUISettings3* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CViewManagement_CIUISettings3* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* GetColorValue)(__x_ABI_CWindows_CUI_CViewManagement_CIUISettings3* This,
        enum __x_ABI_CWindows_CUI_CViewManagement_CUIColorType desiredColor,
        struct __x_ABI_CWindows_CUI_CColor* value);
    HRESULT (STDMETHODCALLTYPE* add_ColorValuesChanged)(__x_ABI_CWindows_CUI_CViewManagement_CIUISettings3* This,
        __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CViewManagement__CUISettings_IInspectable* handler,
        EventRegistrationToken* cookie);
    HRESULT (STDMETHODCALLTYPE* remove_ColorValuesChanged)(__x_ABI_CWindows_CUI_CViewManagement_CIUISettings3* This,
        EventRegistrationToken cookie);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CViewManagement_CIUISettings3Vtbl;

    interface __x_ABI_CWindows_CUI_CViewManagement_CIUISettings3
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CViewManagement_CIUISettings3Vtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CViewManagement_CIUISettings3;
#endif /* !defined(____x_ABI_CWindows_CUI_CViewManagement_CIUISettings3_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CViewManagement_CIUISettings4_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CViewManagement_CIUISettings4_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CViewManagement_CIUISettings4Vtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CViewManagement_CIUISettings4* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CViewManagement_CIUISettings4* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CViewManagement_CIUISettings4* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CViewManagement_CIUISettings4* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CViewManagement_CIUISettings4* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CViewManagement_CIUISettings4* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_AdvancedEffectsEnabled)(__x_ABI_CWindows_CUI_CViewManagement_CIUISettings4* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* add_AdvancedEffectsEnabledChanged)(__x_ABI_CWindows_CUI_CViewManagement_CIUISettings4* This,
        __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CViewManagement__CUISettings_IInspectable* handler,
        EventRegistrationToken* cookie);
    HRESULT (STDMETHODCALLTYPE* remove_AdvancedEffectsEnabledChanged)(__x_ABI_CWindows_CUI_CViewManagement_CIUISettings4* This,
        EventRegistrationToken cookie);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CViewManagement_CIUISettings4Vtbl;

    interface __x_ABI_CWindows_CUI_CViewManagement_CIUISettings4
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CViewManagement_CIUISettings4Vtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CViewManagement_CIUISettings4;
#endif /* !defined(____x_ABI_CWindows_CUI_CViewManagement_CIUISettings4_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CViewManagement_CIUISettings5_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CViewManagement_CIUISettings5_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CViewManagement_CIUISettings5Vtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CViewManagement_CIUISettings5* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CViewManagement_CIUISettings5* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CViewManagement_CIUISettings5* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CViewManagement_CIUISettings5* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CViewManagement_CIUISettings5* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CViewManagement_CIUISettings5* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_AutoHideScrollBars)(__x_ABI_CWindows_CUI_CViewManagement_CIUISettings5* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* add_AutoHideScrollBarsChanged)(__x_ABI_CWindows_CUI_CViewManagement_CIUISettings5* This,
        __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CViewManagement__CUISettings___x_ABI_CWindows__CUI__CViewManagement__CUISettingsAutoHideScrollBarsChangedEventArgs* handler,
        EventRegistrationToken* token);
    HRESULT (STDMETHODCALLTYPE* remove_AutoHideScrollBarsChanged)(__x_ABI_CWindows_CUI_CViewManagement_CIUISettings5* This,
        EventRegistrationToken token);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CViewManagement_CIUISettings5Vtbl;

    interface __x_ABI_CWindows_CUI_CViewManagement_CIUISettings5
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CViewManagement_CIUISettings5Vtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CViewManagement_CIUISettings5;
#endif /* !defined(____x_ABI_CWindows_CUI_CViewManagement_CIUISettings5_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CViewManagement_CIUISettingsAutoHideScrollBarsChangedEventArgs_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CViewManagement_CIUISettingsAutoHideScrollBarsChangedEventArgs_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CViewManagement_CIUISettingsAutoHideScrollBarsChangedEventArgsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CViewManagement_CIUISettingsAutoHideScrollBarsChangedEventArgs* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CViewManagement_CIUISettingsAutoHideScrollBarsChangedEventArgs* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CViewManagement_CIUISettingsAutoHideScrollBarsChangedEventArgs* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CViewManagement_CIUISettingsAutoHideScrollBarsChangedEventArgs* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CViewManagement_CIUISettingsAutoHideScrollBarsChangedEventArgs* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CViewManagement_CIUISettingsAutoHideScrollBarsChangedEventArgs* This,
            TrustLevel* trustLevel);
    
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CViewManagement_CIUISettingsAutoHideScrollBarsChangedEventArgsVtbl;

    interface __x_ABI_CWindows_CUI_CViewManagement_CIUISettingsAutoHideScrollBarsChangedEventArgs
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CViewManagement_CIUISettingsAutoHideScrollBarsChangedEventArgsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CViewManagement_CIUISettingsAutoHideScrollBarsChangedEventArgs;
#endif /* !defined(____x_ABI_CWindows_CUI_CViewManagement_CIUISettingsAutoHideScrollBarsChangedEventArgs_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CViewManagement_CIUIViewSettings_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CViewManagement_CIUIViewSettings_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CViewManagement_CIUIViewSettingsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CViewManagement_CIUIViewSettings* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CViewManagement_CIUIViewSettings* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CViewManagement_CIUIViewSettings* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CViewManagement_CIUIViewSettings* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CViewManagement_CIUIViewSettings* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CViewManagement_CIUIViewSettings* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_UserInteractionMode)(__x_ABI_CWindows_CUI_CViewManagement_CIUIViewSettings* This,
        enum __x_ABI_CWindows_CUI_CViewManagement_CUserInteractionMode* value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CViewManagement_CIUIViewSettingsVtbl;

    interface __x_ABI_CWindows_CUI_CViewManagement_CIUIViewSettings
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CViewManagement_CIUIViewSettingsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CViewManagement_CIUIViewSettings;
#endif /* !defined(____x_ABI_CWindows_CUI_CViewManagement_CIUIViewSettings_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CViewManagement_CIUIViewSettingsStatics_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CViewManagement_CIUIViewSettingsStatics_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CViewManagement_CIUIViewSettingsStaticsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CViewManagement_CIUIViewSettingsStatics* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CViewManagement_CIUIViewSettingsStatics* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CViewManagement_CIUIViewSettingsStatics* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CViewManagement_CIUIViewSettingsStatics* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CViewManagement_CIUIViewSettingsStatics* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CViewManagement_CIUIViewSettingsStatics* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* GetForCurrentView)(__x_ABI_CWindows_CUI_CViewManagement_CIUIViewSettingsStatics* This,
        __x_ABI_CWindows_CUI_CViewManagement_CIUIViewSettings** current);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CViewManagement_CIUIViewSettingsStaticsVtbl;

    interface __x_ABI_CWindows_CUI_CViewManagement_CIUIViewSettingsStatics
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CViewManagement_CIUIViewSettingsStaticsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CViewManagement_CIUIViewSettingsStatics;
#endif /* !defined(____x_ABI_CWindows_CUI_CViewManagement_CIUIViewSettingsStatics_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CViewManagement_CIViewModePreferences_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CViewManagement_CIViewModePreferences_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CViewManagement_CIViewModePreferencesVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CViewManagement_CIViewModePreferences* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CViewManagement_CIViewModePreferences* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CViewManagement_CIViewModePreferences* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CViewManagement_CIViewModePreferences* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CViewManagement_CIViewModePreferences* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CViewManagement_CIViewModePreferences* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_ViewSizePreference)(__x_ABI_CWindows_CUI_CViewManagement_CIViewModePreferences* This,
        enum __x_ABI_CWindows_CUI_CViewManagement_CViewSizePreference* value);
    HRESULT (STDMETHODCALLTYPE* put_ViewSizePreference)(__x_ABI_CWindows_CUI_CViewManagement_CIViewModePreferences* This,
        enum __x_ABI_CWindows_CUI_CViewManagement_CViewSizePreference value);
    HRESULT (STDMETHODCALLTYPE* get_CustomSize)(__x_ABI_CWindows_CUI_CViewManagement_CIViewModePreferences* This,
        struct __x_ABI_CWindows_CFoundation_CSize* value);
    HRESULT (STDMETHODCALLTYPE* put_CustomSize)(__x_ABI_CWindows_CUI_CViewManagement_CIViewModePreferences* This,
        struct __x_ABI_CWindows_CFoundation_CSize value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CViewManagement_CIViewModePreferencesVtbl;

    interface __x_ABI_CWindows_CUI_CViewManagement_CIViewModePreferences
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CViewManagement_CIViewModePreferencesVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CViewManagement_CIViewModePreferences;
#endif /* !defined(____x_ABI_CWindows_CUI_CViewManagement_CIViewModePreferences_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CViewManagement_CIViewModePreferencesStatics_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CViewManagement_CIViewModePreferencesStatics_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CViewManagement_CIViewModePreferencesStaticsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CViewManagement_CIViewModePreferencesStatics* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CViewManagement_CIViewModePreferencesStatics* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CViewManagement_CIViewModePreferencesStatics* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CViewManagement_CIViewModePreferencesStatics* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CViewManagement_CIViewModePreferencesStatics* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CViewManagement_CIViewModePreferencesStatics* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* CreateDefault)(__x_ABI_CWindows_CUI_CViewManagement_CIViewModePreferencesStatics* This,
        enum __x_ABI_CWindows_CUI_CViewManagement_CApplicationViewMode mode,
        __x_ABI_CWindows_CUI_CViewManagement_CIViewModePreferences** result);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CViewManagement_CIViewModePreferencesStaticsVtbl;

    interface __x_ABI_CWindows_CUI_CViewManagement_CIViewModePreferencesStatics
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CViewManagement_CIViewModePreferencesStaticsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CViewManagement_CIViewModePreferencesStatics;
#endif /* !defined(____x_ABI_CWindows_CUI_CViewManagement_CIViewModePreferencesStatics_INTERFACE_DEFINED__) */
    
