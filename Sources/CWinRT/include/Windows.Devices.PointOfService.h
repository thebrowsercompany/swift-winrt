// WARNING: Please don't edit this file. It was generated by Swift/WinRT v0.0.1

#pragma once
// Header files for imported files
#include <inspectable.h>
#include <EventToken.h>
#include <windowscontracts.h>
#include "Windows.Foundation.h"
#include "Windows.Graphics.Imaging.h"
#include "Windows.Storage.h"
#include "Windows.Storage.Streams.h"
// Importing Collections header
#include "Windows.Foundation.Collections.h"

/* Forward Declarations */
#ifndef ____x_ABI_CWindows_CDevices_CPointOfService_CIBarcodeScanner_FWD_DEFINED__
#define ____x_ABI_CWindows_CDevices_CPointOfService_CIBarcodeScanner_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CDevices_CPointOfService_CIBarcodeScanner __x_ABI_CWindows_CDevices_CPointOfService_CIBarcodeScanner;

#endif // ____x_ABI_CWindows_CDevices_CPointOfService_CIBarcodeScanner_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CDevices_CPointOfService_CIBarcodeScanner2_FWD_DEFINED__
#define ____x_ABI_CWindows_CDevices_CPointOfService_CIBarcodeScanner2_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CDevices_CPointOfService_CIBarcodeScanner2 __x_ABI_CWindows_CDevices_CPointOfService_CIBarcodeScanner2;

#endif // ____x_ABI_CWindows_CDevices_CPointOfService_CIBarcodeScanner2_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CDevices_CPointOfService_CIBarcodeScannerCapabilities_FWD_DEFINED__
#define ____x_ABI_CWindows_CDevices_CPointOfService_CIBarcodeScannerCapabilities_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CDevices_CPointOfService_CIBarcodeScannerCapabilities __x_ABI_CWindows_CDevices_CPointOfService_CIBarcodeScannerCapabilities;

#endif // ____x_ABI_CWindows_CDevices_CPointOfService_CIBarcodeScannerCapabilities_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CDevices_CPointOfService_CIBarcodeScannerCapabilities1_FWD_DEFINED__
#define ____x_ABI_CWindows_CDevices_CPointOfService_CIBarcodeScannerCapabilities1_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CDevices_CPointOfService_CIBarcodeScannerCapabilities1 __x_ABI_CWindows_CDevices_CPointOfService_CIBarcodeScannerCapabilities1;

#endif // ____x_ABI_CWindows_CDevices_CPointOfService_CIBarcodeScannerCapabilities1_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CDevices_CPointOfService_CIBarcodeScannerCapabilities2_FWD_DEFINED__
#define ____x_ABI_CWindows_CDevices_CPointOfService_CIBarcodeScannerCapabilities2_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CDevices_CPointOfService_CIBarcodeScannerCapabilities2 __x_ABI_CWindows_CDevices_CPointOfService_CIBarcodeScannerCapabilities2;

#endif // ____x_ABI_CWindows_CDevices_CPointOfService_CIBarcodeScannerCapabilities2_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CDevices_CPointOfService_CIBarcodeScannerDataReceivedEventArgs_FWD_DEFINED__
#define ____x_ABI_CWindows_CDevices_CPointOfService_CIBarcodeScannerDataReceivedEventArgs_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CDevices_CPointOfService_CIBarcodeScannerDataReceivedEventArgs __x_ABI_CWindows_CDevices_CPointOfService_CIBarcodeScannerDataReceivedEventArgs;

#endif // ____x_ABI_CWindows_CDevices_CPointOfService_CIBarcodeScannerDataReceivedEventArgs_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CDevices_CPointOfService_CIBarcodeScannerErrorOccurredEventArgs_FWD_DEFINED__
#define ____x_ABI_CWindows_CDevices_CPointOfService_CIBarcodeScannerErrorOccurredEventArgs_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CDevices_CPointOfService_CIBarcodeScannerErrorOccurredEventArgs __x_ABI_CWindows_CDevices_CPointOfService_CIBarcodeScannerErrorOccurredEventArgs;

#endif // ____x_ABI_CWindows_CDevices_CPointOfService_CIBarcodeScannerErrorOccurredEventArgs_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CDevices_CPointOfService_CIBarcodeScannerImagePreviewReceivedEventArgs_FWD_DEFINED__
#define ____x_ABI_CWindows_CDevices_CPointOfService_CIBarcodeScannerImagePreviewReceivedEventArgs_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CDevices_CPointOfService_CIBarcodeScannerImagePreviewReceivedEventArgs __x_ABI_CWindows_CDevices_CPointOfService_CIBarcodeScannerImagePreviewReceivedEventArgs;

#endif // ____x_ABI_CWindows_CDevices_CPointOfService_CIBarcodeScannerImagePreviewReceivedEventArgs_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CDevices_CPointOfService_CIBarcodeScannerReport_FWD_DEFINED__
#define ____x_ABI_CWindows_CDevices_CPointOfService_CIBarcodeScannerReport_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CDevices_CPointOfService_CIBarcodeScannerReport __x_ABI_CWindows_CDevices_CPointOfService_CIBarcodeScannerReport;

#endif // ____x_ABI_CWindows_CDevices_CPointOfService_CIBarcodeScannerReport_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CDevices_CPointOfService_CIBarcodeScannerReportFactory_FWD_DEFINED__
#define ____x_ABI_CWindows_CDevices_CPointOfService_CIBarcodeScannerReportFactory_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CDevices_CPointOfService_CIBarcodeScannerReportFactory __x_ABI_CWindows_CDevices_CPointOfService_CIBarcodeScannerReportFactory;

#endif // ____x_ABI_CWindows_CDevices_CPointOfService_CIBarcodeScannerReportFactory_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CDevices_CPointOfService_CIBarcodeScannerStatics_FWD_DEFINED__
#define ____x_ABI_CWindows_CDevices_CPointOfService_CIBarcodeScannerStatics_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CDevices_CPointOfService_CIBarcodeScannerStatics __x_ABI_CWindows_CDevices_CPointOfService_CIBarcodeScannerStatics;

#endif // ____x_ABI_CWindows_CDevices_CPointOfService_CIBarcodeScannerStatics_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CDevices_CPointOfService_CIBarcodeScannerStatics2_FWD_DEFINED__
#define ____x_ABI_CWindows_CDevices_CPointOfService_CIBarcodeScannerStatics2_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CDevices_CPointOfService_CIBarcodeScannerStatics2 __x_ABI_CWindows_CDevices_CPointOfService_CIBarcodeScannerStatics2;

#endif // ____x_ABI_CWindows_CDevices_CPointOfService_CIBarcodeScannerStatics2_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CDevices_CPointOfService_CIBarcodeScannerStatusUpdatedEventArgs_FWD_DEFINED__
#define ____x_ABI_CWindows_CDevices_CPointOfService_CIBarcodeScannerStatusUpdatedEventArgs_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CDevices_CPointOfService_CIBarcodeScannerStatusUpdatedEventArgs __x_ABI_CWindows_CDevices_CPointOfService_CIBarcodeScannerStatusUpdatedEventArgs;

#endif // ____x_ABI_CWindows_CDevices_CPointOfService_CIBarcodeScannerStatusUpdatedEventArgs_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CDevices_CPointOfService_CIBarcodeSymbologiesStatics_FWD_DEFINED__
#define ____x_ABI_CWindows_CDevices_CPointOfService_CIBarcodeSymbologiesStatics_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CDevices_CPointOfService_CIBarcodeSymbologiesStatics __x_ABI_CWindows_CDevices_CPointOfService_CIBarcodeSymbologiesStatics;

#endif // ____x_ABI_CWindows_CDevices_CPointOfService_CIBarcodeSymbologiesStatics_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CDevices_CPointOfService_CIBarcodeSymbologiesStatics2_FWD_DEFINED__
#define ____x_ABI_CWindows_CDevices_CPointOfService_CIBarcodeSymbologiesStatics2_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CDevices_CPointOfService_CIBarcodeSymbologiesStatics2 __x_ABI_CWindows_CDevices_CPointOfService_CIBarcodeSymbologiesStatics2;

#endif // ____x_ABI_CWindows_CDevices_CPointOfService_CIBarcodeSymbologiesStatics2_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CDevices_CPointOfService_CIBarcodeSymbologyAttributes_FWD_DEFINED__
#define ____x_ABI_CWindows_CDevices_CPointOfService_CIBarcodeSymbologyAttributes_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CDevices_CPointOfService_CIBarcodeSymbologyAttributes __x_ABI_CWindows_CDevices_CPointOfService_CIBarcodeSymbologyAttributes;

#endif // ____x_ABI_CWindows_CDevices_CPointOfService_CIBarcodeSymbologyAttributes_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CDevices_CPointOfService_CICashDrawer_FWD_DEFINED__
#define ____x_ABI_CWindows_CDevices_CPointOfService_CICashDrawer_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CDevices_CPointOfService_CICashDrawer __x_ABI_CWindows_CDevices_CPointOfService_CICashDrawer;

#endif // ____x_ABI_CWindows_CDevices_CPointOfService_CICashDrawer_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CDevices_CPointOfService_CICashDrawerCapabilities_FWD_DEFINED__
#define ____x_ABI_CWindows_CDevices_CPointOfService_CICashDrawerCapabilities_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CDevices_CPointOfService_CICashDrawerCapabilities __x_ABI_CWindows_CDevices_CPointOfService_CICashDrawerCapabilities;

#endif // ____x_ABI_CWindows_CDevices_CPointOfService_CICashDrawerCapabilities_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CDevices_CPointOfService_CICashDrawerCloseAlarm_FWD_DEFINED__
#define ____x_ABI_CWindows_CDevices_CPointOfService_CICashDrawerCloseAlarm_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CDevices_CPointOfService_CICashDrawerCloseAlarm __x_ABI_CWindows_CDevices_CPointOfService_CICashDrawerCloseAlarm;

#endif // ____x_ABI_CWindows_CDevices_CPointOfService_CICashDrawerCloseAlarm_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CDevices_CPointOfService_CICashDrawerEventSource_FWD_DEFINED__
#define ____x_ABI_CWindows_CDevices_CPointOfService_CICashDrawerEventSource_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CDevices_CPointOfService_CICashDrawerEventSource __x_ABI_CWindows_CDevices_CPointOfService_CICashDrawerEventSource;

#endif // ____x_ABI_CWindows_CDevices_CPointOfService_CICashDrawerEventSource_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CDevices_CPointOfService_CICashDrawerEventSourceEventArgs_FWD_DEFINED__
#define ____x_ABI_CWindows_CDevices_CPointOfService_CICashDrawerEventSourceEventArgs_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CDevices_CPointOfService_CICashDrawerEventSourceEventArgs __x_ABI_CWindows_CDevices_CPointOfService_CICashDrawerEventSourceEventArgs;

#endif // ____x_ABI_CWindows_CDevices_CPointOfService_CICashDrawerEventSourceEventArgs_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CDevices_CPointOfService_CICashDrawerStatics_FWD_DEFINED__
#define ____x_ABI_CWindows_CDevices_CPointOfService_CICashDrawerStatics_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CDevices_CPointOfService_CICashDrawerStatics __x_ABI_CWindows_CDevices_CPointOfService_CICashDrawerStatics;

#endif // ____x_ABI_CWindows_CDevices_CPointOfService_CICashDrawerStatics_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CDevices_CPointOfService_CICashDrawerStatics2_FWD_DEFINED__
#define ____x_ABI_CWindows_CDevices_CPointOfService_CICashDrawerStatics2_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CDevices_CPointOfService_CICashDrawerStatics2 __x_ABI_CWindows_CDevices_CPointOfService_CICashDrawerStatics2;

#endif // ____x_ABI_CWindows_CDevices_CPointOfService_CICashDrawerStatics2_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CDevices_CPointOfService_CICashDrawerStatus_FWD_DEFINED__
#define ____x_ABI_CWindows_CDevices_CPointOfService_CICashDrawerStatus_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CDevices_CPointOfService_CICashDrawerStatus __x_ABI_CWindows_CDevices_CPointOfService_CICashDrawerStatus;

#endif // ____x_ABI_CWindows_CDevices_CPointOfService_CICashDrawerStatus_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CDevices_CPointOfService_CICashDrawerStatusUpdatedEventArgs_FWD_DEFINED__
#define ____x_ABI_CWindows_CDevices_CPointOfService_CICashDrawerStatusUpdatedEventArgs_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CDevices_CPointOfService_CICashDrawerStatusUpdatedEventArgs __x_ABI_CWindows_CDevices_CPointOfService_CICashDrawerStatusUpdatedEventArgs;

#endif // ____x_ABI_CWindows_CDevices_CPointOfService_CICashDrawerStatusUpdatedEventArgs_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CDevices_CPointOfService_CIClaimedBarcodeScanner_FWD_DEFINED__
#define ____x_ABI_CWindows_CDevices_CPointOfService_CIClaimedBarcodeScanner_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CDevices_CPointOfService_CIClaimedBarcodeScanner __x_ABI_CWindows_CDevices_CPointOfService_CIClaimedBarcodeScanner;

#endif // ____x_ABI_CWindows_CDevices_CPointOfService_CIClaimedBarcodeScanner_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CDevices_CPointOfService_CIClaimedBarcodeScanner1_FWD_DEFINED__
#define ____x_ABI_CWindows_CDevices_CPointOfService_CIClaimedBarcodeScanner1_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CDevices_CPointOfService_CIClaimedBarcodeScanner1 __x_ABI_CWindows_CDevices_CPointOfService_CIClaimedBarcodeScanner1;

#endif // ____x_ABI_CWindows_CDevices_CPointOfService_CIClaimedBarcodeScanner1_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CDevices_CPointOfService_CIClaimedBarcodeScanner2_FWD_DEFINED__
#define ____x_ABI_CWindows_CDevices_CPointOfService_CIClaimedBarcodeScanner2_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CDevices_CPointOfService_CIClaimedBarcodeScanner2 __x_ABI_CWindows_CDevices_CPointOfService_CIClaimedBarcodeScanner2;

#endif // ____x_ABI_CWindows_CDevices_CPointOfService_CIClaimedBarcodeScanner2_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CDevices_CPointOfService_CIClaimedBarcodeScanner3_FWD_DEFINED__
#define ____x_ABI_CWindows_CDevices_CPointOfService_CIClaimedBarcodeScanner3_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CDevices_CPointOfService_CIClaimedBarcodeScanner3 __x_ABI_CWindows_CDevices_CPointOfService_CIClaimedBarcodeScanner3;

#endif // ____x_ABI_CWindows_CDevices_CPointOfService_CIClaimedBarcodeScanner3_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CDevices_CPointOfService_CIClaimedBarcodeScanner4_FWD_DEFINED__
#define ____x_ABI_CWindows_CDevices_CPointOfService_CIClaimedBarcodeScanner4_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CDevices_CPointOfService_CIClaimedBarcodeScanner4 __x_ABI_CWindows_CDevices_CPointOfService_CIClaimedBarcodeScanner4;

#endif // ____x_ABI_CWindows_CDevices_CPointOfService_CIClaimedBarcodeScanner4_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CDevices_CPointOfService_CIClaimedBarcodeScannerClosedEventArgs_FWD_DEFINED__
#define ____x_ABI_CWindows_CDevices_CPointOfService_CIClaimedBarcodeScannerClosedEventArgs_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CDevices_CPointOfService_CIClaimedBarcodeScannerClosedEventArgs __x_ABI_CWindows_CDevices_CPointOfService_CIClaimedBarcodeScannerClosedEventArgs;

#endif // ____x_ABI_CWindows_CDevices_CPointOfService_CIClaimedBarcodeScannerClosedEventArgs_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CDevices_CPointOfService_CIClaimedCashDrawer_FWD_DEFINED__
#define ____x_ABI_CWindows_CDevices_CPointOfService_CIClaimedCashDrawer_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CDevices_CPointOfService_CIClaimedCashDrawer __x_ABI_CWindows_CDevices_CPointOfService_CIClaimedCashDrawer;

#endif // ____x_ABI_CWindows_CDevices_CPointOfService_CIClaimedCashDrawer_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CDevices_CPointOfService_CIClaimedCashDrawer2_FWD_DEFINED__
#define ____x_ABI_CWindows_CDevices_CPointOfService_CIClaimedCashDrawer2_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CDevices_CPointOfService_CIClaimedCashDrawer2 __x_ABI_CWindows_CDevices_CPointOfService_CIClaimedCashDrawer2;

#endif // ____x_ABI_CWindows_CDevices_CPointOfService_CIClaimedCashDrawer2_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CDevices_CPointOfService_CIClaimedCashDrawerClosedEventArgs_FWD_DEFINED__
#define ____x_ABI_CWindows_CDevices_CPointOfService_CIClaimedCashDrawerClosedEventArgs_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CDevices_CPointOfService_CIClaimedCashDrawerClosedEventArgs __x_ABI_CWindows_CDevices_CPointOfService_CIClaimedCashDrawerClosedEventArgs;

#endif // ____x_ABI_CWindows_CDevices_CPointOfService_CIClaimedCashDrawerClosedEventArgs_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CDevices_CPointOfService_CIClaimedJournalPrinter_FWD_DEFINED__
#define ____x_ABI_CWindows_CDevices_CPointOfService_CIClaimedJournalPrinter_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CDevices_CPointOfService_CIClaimedJournalPrinter __x_ABI_CWindows_CDevices_CPointOfService_CIClaimedJournalPrinter;

#endif // ____x_ABI_CWindows_CDevices_CPointOfService_CIClaimedJournalPrinter_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CDevices_CPointOfService_CIClaimedLineDisplay_FWD_DEFINED__
#define ____x_ABI_CWindows_CDevices_CPointOfService_CIClaimedLineDisplay_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CDevices_CPointOfService_CIClaimedLineDisplay __x_ABI_CWindows_CDevices_CPointOfService_CIClaimedLineDisplay;

#endif // ____x_ABI_CWindows_CDevices_CPointOfService_CIClaimedLineDisplay_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CDevices_CPointOfService_CIClaimedLineDisplay2_FWD_DEFINED__
#define ____x_ABI_CWindows_CDevices_CPointOfService_CIClaimedLineDisplay2_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CDevices_CPointOfService_CIClaimedLineDisplay2 __x_ABI_CWindows_CDevices_CPointOfService_CIClaimedLineDisplay2;

#endif // ____x_ABI_CWindows_CDevices_CPointOfService_CIClaimedLineDisplay2_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CDevices_CPointOfService_CIClaimedLineDisplay3_FWD_DEFINED__
#define ____x_ABI_CWindows_CDevices_CPointOfService_CIClaimedLineDisplay3_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CDevices_CPointOfService_CIClaimedLineDisplay3 __x_ABI_CWindows_CDevices_CPointOfService_CIClaimedLineDisplay3;

#endif // ____x_ABI_CWindows_CDevices_CPointOfService_CIClaimedLineDisplay3_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CDevices_CPointOfService_CIClaimedLineDisplayClosedEventArgs_FWD_DEFINED__
#define ____x_ABI_CWindows_CDevices_CPointOfService_CIClaimedLineDisplayClosedEventArgs_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CDevices_CPointOfService_CIClaimedLineDisplayClosedEventArgs __x_ABI_CWindows_CDevices_CPointOfService_CIClaimedLineDisplayClosedEventArgs;

#endif // ____x_ABI_CWindows_CDevices_CPointOfService_CIClaimedLineDisplayClosedEventArgs_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CDevices_CPointOfService_CIClaimedLineDisplayStatics_FWD_DEFINED__
#define ____x_ABI_CWindows_CDevices_CPointOfService_CIClaimedLineDisplayStatics_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CDevices_CPointOfService_CIClaimedLineDisplayStatics __x_ABI_CWindows_CDevices_CPointOfService_CIClaimedLineDisplayStatics;

#endif // ____x_ABI_CWindows_CDevices_CPointOfService_CIClaimedLineDisplayStatics_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CDevices_CPointOfService_CIClaimedMagneticStripeReader_FWD_DEFINED__
#define ____x_ABI_CWindows_CDevices_CPointOfService_CIClaimedMagneticStripeReader_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CDevices_CPointOfService_CIClaimedMagneticStripeReader __x_ABI_CWindows_CDevices_CPointOfService_CIClaimedMagneticStripeReader;

#endif // ____x_ABI_CWindows_CDevices_CPointOfService_CIClaimedMagneticStripeReader_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CDevices_CPointOfService_CIClaimedMagneticStripeReader2_FWD_DEFINED__
#define ____x_ABI_CWindows_CDevices_CPointOfService_CIClaimedMagneticStripeReader2_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CDevices_CPointOfService_CIClaimedMagneticStripeReader2 __x_ABI_CWindows_CDevices_CPointOfService_CIClaimedMagneticStripeReader2;

#endif // ____x_ABI_CWindows_CDevices_CPointOfService_CIClaimedMagneticStripeReader2_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CDevices_CPointOfService_CIClaimedMagneticStripeReaderClosedEventArgs_FWD_DEFINED__
#define ____x_ABI_CWindows_CDevices_CPointOfService_CIClaimedMagneticStripeReaderClosedEventArgs_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CDevices_CPointOfService_CIClaimedMagneticStripeReaderClosedEventArgs __x_ABI_CWindows_CDevices_CPointOfService_CIClaimedMagneticStripeReaderClosedEventArgs;

#endif // ____x_ABI_CWindows_CDevices_CPointOfService_CIClaimedMagneticStripeReaderClosedEventArgs_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CDevices_CPointOfService_CIClaimedPosPrinter_FWD_DEFINED__
#define ____x_ABI_CWindows_CDevices_CPointOfService_CIClaimedPosPrinter_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CDevices_CPointOfService_CIClaimedPosPrinter __x_ABI_CWindows_CDevices_CPointOfService_CIClaimedPosPrinter;

#endif // ____x_ABI_CWindows_CDevices_CPointOfService_CIClaimedPosPrinter_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CDevices_CPointOfService_CIClaimedPosPrinter2_FWD_DEFINED__
#define ____x_ABI_CWindows_CDevices_CPointOfService_CIClaimedPosPrinter2_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CDevices_CPointOfService_CIClaimedPosPrinter2 __x_ABI_CWindows_CDevices_CPointOfService_CIClaimedPosPrinter2;

#endif // ____x_ABI_CWindows_CDevices_CPointOfService_CIClaimedPosPrinter2_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CDevices_CPointOfService_CIClaimedPosPrinterClosedEventArgs_FWD_DEFINED__
#define ____x_ABI_CWindows_CDevices_CPointOfService_CIClaimedPosPrinterClosedEventArgs_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CDevices_CPointOfService_CIClaimedPosPrinterClosedEventArgs __x_ABI_CWindows_CDevices_CPointOfService_CIClaimedPosPrinterClosedEventArgs;

#endif // ____x_ABI_CWindows_CDevices_CPointOfService_CIClaimedPosPrinterClosedEventArgs_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CDevices_CPointOfService_CIClaimedReceiptPrinter_FWD_DEFINED__
#define ____x_ABI_CWindows_CDevices_CPointOfService_CIClaimedReceiptPrinter_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CDevices_CPointOfService_CIClaimedReceiptPrinter __x_ABI_CWindows_CDevices_CPointOfService_CIClaimedReceiptPrinter;

#endif // ____x_ABI_CWindows_CDevices_CPointOfService_CIClaimedReceiptPrinter_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CDevices_CPointOfService_CIClaimedSlipPrinter_FWD_DEFINED__
#define ____x_ABI_CWindows_CDevices_CPointOfService_CIClaimedSlipPrinter_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CDevices_CPointOfService_CIClaimedSlipPrinter __x_ABI_CWindows_CDevices_CPointOfService_CIClaimedSlipPrinter;

#endif // ____x_ABI_CWindows_CDevices_CPointOfService_CIClaimedSlipPrinter_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CDevices_CPointOfService_CICommonClaimedPosPrinterStation_FWD_DEFINED__
#define ____x_ABI_CWindows_CDevices_CPointOfService_CICommonClaimedPosPrinterStation_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CDevices_CPointOfService_CICommonClaimedPosPrinterStation __x_ABI_CWindows_CDevices_CPointOfService_CICommonClaimedPosPrinterStation;

#endif // ____x_ABI_CWindows_CDevices_CPointOfService_CICommonClaimedPosPrinterStation_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CDevices_CPointOfService_CICommonPosPrintStationCapabilities_FWD_DEFINED__
#define ____x_ABI_CWindows_CDevices_CPointOfService_CICommonPosPrintStationCapabilities_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CDevices_CPointOfService_CICommonPosPrintStationCapabilities __x_ABI_CWindows_CDevices_CPointOfService_CICommonPosPrintStationCapabilities;

#endif // ____x_ABI_CWindows_CDevices_CPointOfService_CICommonPosPrintStationCapabilities_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CDevices_CPointOfService_CICommonReceiptSlipCapabilities_FWD_DEFINED__
#define ____x_ABI_CWindows_CDevices_CPointOfService_CICommonReceiptSlipCapabilities_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CDevices_CPointOfService_CICommonReceiptSlipCapabilities __x_ABI_CWindows_CDevices_CPointOfService_CICommonReceiptSlipCapabilities;

#endif // ____x_ABI_CWindows_CDevices_CPointOfService_CICommonReceiptSlipCapabilities_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CDevices_CPointOfService_CIJournalPrintJob_FWD_DEFINED__
#define ____x_ABI_CWindows_CDevices_CPointOfService_CIJournalPrintJob_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CDevices_CPointOfService_CIJournalPrintJob __x_ABI_CWindows_CDevices_CPointOfService_CIJournalPrintJob;

#endif // ____x_ABI_CWindows_CDevices_CPointOfService_CIJournalPrintJob_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CDevices_CPointOfService_CIJournalPrinterCapabilities_FWD_DEFINED__
#define ____x_ABI_CWindows_CDevices_CPointOfService_CIJournalPrinterCapabilities_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CDevices_CPointOfService_CIJournalPrinterCapabilities __x_ABI_CWindows_CDevices_CPointOfService_CIJournalPrinterCapabilities;

#endif // ____x_ABI_CWindows_CDevices_CPointOfService_CIJournalPrinterCapabilities_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CDevices_CPointOfService_CIJournalPrinterCapabilities2_FWD_DEFINED__
#define ____x_ABI_CWindows_CDevices_CPointOfService_CIJournalPrinterCapabilities2_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CDevices_CPointOfService_CIJournalPrinterCapabilities2 __x_ABI_CWindows_CDevices_CPointOfService_CIJournalPrinterCapabilities2;

#endif // ____x_ABI_CWindows_CDevices_CPointOfService_CIJournalPrinterCapabilities2_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CDevices_CPointOfService_CILineDisplay_FWD_DEFINED__
#define ____x_ABI_CWindows_CDevices_CPointOfService_CILineDisplay_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CDevices_CPointOfService_CILineDisplay __x_ABI_CWindows_CDevices_CPointOfService_CILineDisplay;

#endif // ____x_ABI_CWindows_CDevices_CPointOfService_CILineDisplay_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CDevices_CPointOfService_CILineDisplay2_FWD_DEFINED__
#define ____x_ABI_CWindows_CDevices_CPointOfService_CILineDisplay2_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CDevices_CPointOfService_CILineDisplay2 __x_ABI_CWindows_CDevices_CPointOfService_CILineDisplay2;

#endif // ____x_ABI_CWindows_CDevices_CPointOfService_CILineDisplay2_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CDevices_CPointOfService_CILineDisplayAttributes_FWD_DEFINED__
#define ____x_ABI_CWindows_CDevices_CPointOfService_CILineDisplayAttributes_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CDevices_CPointOfService_CILineDisplayAttributes __x_ABI_CWindows_CDevices_CPointOfService_CILineDisplayAttributes;

#endif // ____x_ABI_CWindows_CDevices_CPointOfService_CILineDisplayAttributes_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CDevices_CPointOfService_CILineDisplayCapabilities_FWD_DEFINED__
#define ____x_ABI_CWindows_CDevices_CPointOfService_CILineDisplayCapabilities_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CDevices_CPointOfService_CILineDisplayCapabilities __x_ABI_CWindows_CDevices_CPointOfService_CILineDisplayCapabilities;

#endif // ____x_ABI_CWindows_CDevices_CPointOfService_CILineDisplayCapabilities_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CDevices_CPointOfService_CILineDisplayCursor_FWD_DEFINED__
#define ____x_ABI_CWindows_CDevices_CPointOfService_CILineDisplayCursor_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CDevices_CPointOfService_CILineDisplayCursor __x_ABI_CWindows_CDevices_CPointOfService_CILineDisplayCursor;

#endif // ____x_ABI_CWindows_CDevices_CPointOfService_CILineDisplayCursor_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CDevices_CPointOfService_CILineDisplayCursorAttributes_FWD_DEFINED__
#define ____x_ABI_CWindows_CDevices_CPointOfService_CILineDisplayCursorAttributes_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CDevices_CPointOfService_CILineDisplayCursorAttributes __x_ABI_CWindows_CDevices_CPointOfService_CILineDisplayCursorAttributes;

#endif // ____x_ABI_CWindows_CDevices_CPointOfService_CILineDisplayCursorAttributes_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CDevices_CPointOfService_CILineDisplayCustomGlyphs_FWD_DEFINED__
#define ____x_ABI_CWindows_CDevices_CPointOfService_CILineDisplayCustomGlyphs_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CDevices_CPointOfService_CILineDisplayCustomGlyphs __x_ABI_CWindows_CDevices_CPointOfService_CILineDisplayCustomGlyphs;

#endif // ____x_ABI_CWindows_CDevices_CPointOfService_CILineDisplayCustomGlyphs_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CDevices_CPointOfService_CILineDisplayMarquee_FWD_DEFINED__
#define ____x_ABI_CWindows_CDevices_CPointOfService_CILineDisplayMarquee_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CDevices_CPointOfService_CILineDisplayMarquee __x_ABI_CWindows_CDevices_CPointOfService_CILineDisplayMarquee;

#endif // ____x_ABI_CWindows_CDevices_CPointOfService_CILineDisplayMarquee_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CDevices_CPointOfService_CILineDisplayStatics_FWD_DEFINED__
#define ____x_ABI_CWindows_CDevices_CPointOfService_CILineDisplayStatics_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CDevices_CPointOfService_CILineDisplayStatics __x_ABI_CWindows_CDevices_CPointOfService_CILineDisplayStatics;

#endif // ____x_ABI_CWindows_CDevices_CPointOfService_CILineDisplayStatics_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CDevices_CPointOfService_CILineDisplayStatics2_FWD_DEFINED__
#define ____x_ABI_CWindows_CDevices_CPointOfService_CILineDisplayStatics2_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CDevices_CPointOfService_CILineDisplayStatics2 __x_ABI_CWindows_CDevices_CPointOfService_CILineDisplayStatics2;

#endif // ____x_ABI_CWindows_CDevices_CPointOfService_CILineDisplayStatics2_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CDevices_CPointOfService_CILineDisplayStatisticsCategorySelector_FWD_DEFINED__
#define ____x_ABI_CWindows_CDevices_CPointOfService_CILineDisplayStatisticsCategorySelector_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CDevices_CPointOfService_CILineDisplayStatisticsCategorySelector __x_ABI_CWindows_CDevices_CPointOfService_CILineDisplayStatisticsCategorySelector;

#endif // ____x_ABI_CWindows_CDevices_CPointOfService_CILineDisplayStatisticsCategorySelector_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CDevices_CPointOfService_CILineDisplayStatusUpdatedEventArgs_FWD_DEFINED__
#define ____x_ABI_CWindows_CDevices_CPointOfService_CILineDisplayStatusUpdatedEventArgs_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CDevices_CPointOfService_CILineDisplayStatusUpdatedEventArgs __x_ABI_CWindows_CDevices_CPointOfService_CILineDisplayStatusUpdatedEventArgs;

#endif // ____x_ABI_CWindows_CDevices_CPointOfService_CILineDisplayStatusUpdatedEventArgs_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CDevices_CPointOfService_CILineDisplayStoredBitmap_FWD_DEFINED__
#define ____x_ABI_CWindows_CDevices_CPointOfService_CILineDisplayStoredBitmap_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CDevices_CPointOfService_CILineDisplayStoredBitmap __x_ABI_CWindows_CDevices_CPointOfService_CILineDisplayStoredBitmap;

#endif // ____x_ABI_CWindows_CDevices_CPointOfService_CILineDisplayStoredBitmap_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CDevices_CPointOfService_CILineDisplayWindow_FWD_DEFINED__
#define ____x_ABI_CWindows_CDevices_CPointOfService_CILineDisplayWindow_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CDevices_CPointOfService_CILineDisplayWindow __x_ABI_CWindows_CDevices_CPointOfService_CILineDisplayWindow;

#endif // ____x_ABI_CWindows_CDevices_CPointOfService_CILineDisplayWindow_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CDevices_CPointOfService_CILineDisplayWindow2_FWD_DEFINED__
#define ____x_ABI_CWindows_CDevices_CPointOfService_CILineDisplayWindow2_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CDevices_CPointOfService_CILineDisplayWindow2 __x_ABI_CWindows_CDevices_CPointOfService_CILineDisplayWindow2;

#endif // ____x_ABI_CWindows_CDevices_CPointOfService_CILineDisplayWindow2_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CDevices_CPointOfService_CIMagneticStripeReader_FWD_DEFINED__
#define ____x_ABI_CWindows_CDevices_CPointOfService_CIMagneticStripeReader_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CDevices_CPointOfService_CIMagneticStripeReader __x_ABI_CWindows_CDevices_CPointOfService_CIMagneticStripeReader;

#endif // ____x_ABI_CWindows_CDevices_CPointOfService_CIMagneticStripeReader_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CDevices_CPointOfService_CIMagneticStripeReaderAamvaCardDataReceivedEventArgs_FWD_DEFINED__
#define ____x_ABI_CWindows_CDevices_CPointOfService_CIMagneticStripeReaderAamvaCardDataReceivedEventArgs_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CDevices_CPointOfService_CIMagneticStripeReaderAamvaCardDataReceivedEventArgs __x_ABI_CWindows_CDevices_CPointOfService_CIMagneticStripeReaderAamvaCardDataReceivedEventArgs;

#endif // ____x_ABI_CWindows_CDevices_CPointOfService_CIMagneticStripeReaderAamvaCardDataReceivedEventArgs_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CDevices_CPointOfService_CIMagneticStripeReaderBankCardDataReceivedEventArgs_FWD_DEFINED__
#define ____x_ABI_CWindows_CDevices_CPointOfService_CIMagneticStripeReaderBankCardDataReceivedEventArgs_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CDevices_CPointOfService_CIMagneticStripeReaderBankCardDataReceivedEventArgs __x_ABI_CWindows_CDevices_CPointOfService_CIMagneticStripeReaderBankCardDataReceivedEventArgs;

#endif // ____x_ABI_CWindows_CDevices_CPointOfService_CIMagneticStripeReaderBankCardDataReceivedEventArgs_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CDevices_CPointOfService_CIMagneticStripeReaderCapabilities_FWD_DEFINED__
#define ____x_ABI_CWindows_CDevices_CPointOfService_CIMagneticStripeReaderCapabilities_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CDevices_CPointOfService_CIMagneticStripeReaderCapabilities __x_ABI_CWindows_CDevices_CPointOfService_CIMagneticStripeReaderCapabilities;

#endif // ____x_ABI_CWindows_CDevices_CPointOfService_CIMagneticStripeReaderCapabilities_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CDevices_CPointOfService_CIMagneticStripeReaderCardTypesStatics_FWD_DEFINED__
#define ____x_ABI_CWindows_CDevices_CPointOfService_CIMagneticStripeReaderCardTypesStatics_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CDevices_CPointOfService_CIMagneticStripeReaderCardTypesStatics __x_ABI_CWindows_CDevices_CPointOfService_CIMagneticStripeReaderCardTypesStatics;

#endif // ____x_ABI_CWindows_CDevices_CPointOfService_CIMagneticStripeReaderCardTypesStatics_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CDevices_CPointOfService_CIMagneticStripeReaderEncryptionAlgorithmsStatics_FWD_DEFINED__
#define ____x_ABI_CWindows_CDevices_CPointOfService_CIMagneticStripeReaderEncryptionAlgorithmsStatics_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CDevices_CPointOfService_CIMagneticStripeReaderEncryptionAlgorithmsStatics __x_ABI_CWindows_CDevices_CPointOfService_CIMagneticStripeReaderEncryptionAlgorithmsStatics;

#endif // ____x_ABI_CWindows_CDevices_CPointOfService_CIMagneticStripeReaderEncryptionAlgorithmsStatics_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CDevices_CPointOfService_CIMagneticStripeReaderErrorOccurredEventArgs_FWD_DEFINED__
#define ____x_ABI_CWindows_CDevices_CPointOfService_CIMagneticStripeReaderErrorOccurredEventArgs_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CDevices_CPointOfService_CIMagneticStripeReaderErrorOccurredEventArgs __x_ABI_CWindows_CDevices_CPointOfService_CIMagneticStripeReaderErrorOccurredEventArgs;

#endif // ____x_ABI_CWindows_CDevices_CPointOfService_CIMagneticStripeReaderErrorOccurredEventArgs_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CDevices_CPointOfService_CIMagneticStripeReaderReport_FWD_DEFINED__
#define ____x_ABI_CWindows_CDevices_CPointOfService_CIMagneticStripeReaderReport_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CDevices_CPointOfService_CIMagneticStripeReaderReport __x_ABI_CWindows_CDevices_CPointOfService_CIMagneticStripeReaderReport;

#endif // ____x_ABI_CWindows_CDevices_CPointOfService_CIMagneticStripeReaderReport_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CDevices_CPointOfService_CIMagneticStripeReaderStatics_FWD_DEFINED__
#define ____x_ABI_CWindows_CDevices_CPointOfService_CIMagneticStripeReaderStatics_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CDevices_CPointOfService_CIMagneticStripeReaderStatics __x_ABI_CWindows_CDevices_CPointOfService_CIMagneticStripeReaderStatics;

#endif // ____x_ABI_CWindows_CDevices_CPointOfService_CIMagneticStripeReaderStatics_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CDevices_CPointOfService_CIMagneticStripeReaderStatics2_FWD_DEFINED__
#define ____x_ABI_CWindows_CDevices_CPointOfService_CIMagneticStripeReaderStatics2_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CDevices_CPointOfService_CIMagneticStripeReaderStatics2 __x_ABI_CWindows_CDevices_CPointOfService_CIMagneticStripeReaderStatics2;

#endif // ____x_ABI_CWindows_CDevices_CPointOfService_CIMagneticStripeReaderStatics2_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CDevices_CPointOfService_CIMagneticStripeReaderStatusUpdatedEventArgs_FWD_DEFINED__
#define ____x_ABI_CWindows_CDevices_CPointOfService_CIMagneticStripeReaderStatusUpdatedEventArgs_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CDevices_CPointOfService_CIMagneticStripeReaderStatusUpdatedEventArgs __x_ABI_CWindows_CDevices_CPointOfService_CIMagneticStripeReaderStatusUpdatedEventArgs;

#endif // ____x_ABI_CWindows_CDevices_CPointOfService_CIMagneticStripeReaderStatusUpdatedEventArgs_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CDevices_CPointOfService_CIMagneticStripeReaderTrackData_FWD_DEFINED__
#define ____x_ABI_CWindows_CDevices_CPointOfService_CIMagneticStripeReaderTrackData_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CDevices_CPointOfService_CIMagneticStripeReaderTrackData __x_ABI_CWindows_CDevices_CPointOfService_CIMagneticStripeReaderTrackData;

#endif // ____x_ABI_CWindows_CDevices_CPointOfService_CIMagneticStripeReaderTrackData_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CDevices_CPointOfService_CIMagneticStripeReaderVendorSpecificCardDataReceivedEventArgs_FWD_DEFINED__
#define ____x_ABI_CWindows_CDevices_CPointOfService_CIMagneticStripeReaderVendorSpecificCardDataReceivedEventArgs_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CDevices_CPointOfService_CIMagneticStripeReaderVendorSpecificCardDataReceivedEventArgs __x_ABI_CWindows_CDevices_CPointOfService_CIMagneticStripeReaderVendorSpecificCardDataReceivedEventArgs;

#endif // ____x_ABI_CWindows_CDevices_CPointOfService_CIMagneticStripeReaderVendorSpecificCardDataReceivedEventArgs_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CDevices_CPointOfService_CIPosPrinter_FWD_DEFINED__
#define ____x_ABI_CWindows_CDevices_CPointOfService_CIPosPrinter_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CDevices_CPointOfService_CIPosPrinter __x_ABI_CWindows_CDevices_CPointOfService_CIPosPrinter;

#endif // ____x_ABI_CWindows_CDevices_CPointOfService_CIPosPrinter_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CDevices_CPointOfService_CIPosPrinter2_FWD_DEFINED__
#define ____x_ABI_CWindows_CDevices_CPointOfService_CIPosPrinter2_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CDevices_CPointOfService_CIPosPrinter2 __x_ABI_CWindows_CDevices_CPointOfService_CIPosPrinter2;

#endif // ____x_ABI_CWindows_CDevices_CPointOfService_CIPosPrinter2_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CDevices_CPointOfService_CIPosPrinterCapabilities_FWD_DEFINED__
#define ____x_ABI_CWindows_CDevices_CPointOfService_CIPosPrinterCapabilities_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CDevices_CPointOfService_CIPosPrinterCapabilities __x_ABI_CWindows_CDevices_CPointOfService_CIPosPrinterCapabilities;

#endif // ____x_ABI_CWindows_CDevices_CPointOfService_CIPosPrinterCapabilities_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CDevices_CPointOfService_CIPosPrinterCharacterSetIdsStatics_FWD_DEFINED__
#define ____x_ABI_CWindows_CDevices_CPointOfService_CIPosPrinterCharacterSetIdsStatics_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CDevices_CPointOfService_CIPosPrinterCharacterSetIdsStatics __x_ABI_CWindows_CDevices_CPointOfService_CIPosPrinterCharacterSetIdsStatics;

#endif // ____x_ABI_CWindows_CDevices_CPointOfService_CIPosPrinterCharacterSetIdsStatics_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CDevices_CPointOfService_CIPosPrinterFontProperty_FWD_DEFINED__
#define ____x_ABI_CWindows_CDevices_CPointOfService_CIPosPrinterFontProperty_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CDevices_CPointOfService_CIPosPrinterFontProperty __x_ABI_CWindows_CDevices_CPointOfService_CIPosPrinterFontProperty;

#endif // ____x_ABI_CWindows_CDevices_CPointOfService_CIPosPrinterFontProperty_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CDevices_CPointOfService_CIPosPrinterJob_FWD_DEFINED__
#define ____x_ABI_CWindows_CDevices_CPointOfService_CIPosPrinterJob_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CDevices_CPointOfService_CIPosPrinterJob __x_ABI_CWindows_CDevices_CPointOfService_CIPosPrinterJob;

#endif // ____x_ABI_CWindows_CDevices_CPointOfService_CIPosPrinterJob_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CDevices_CPointOfService_CIPosPrinterPrintOptions_FWD_DEFINED__
#define ____x_ABI_CWindows_CDevices_CPointOfService_CIPosPrinterPrintOptions_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CDevices_CPointOfService_CIPosPrinterPrintOptions __x_ABI_CWindows_CDevices_CPointOfService_CIPosPrinterPrintOptions;

#endif // ____x_ABI_CWindows_CDevices_CPointOfService_CIPosPrinterPrintOptions_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CDevices_CPointOfService_CIPosPrinterReleaseDeviceRequestedEventArgs_FWD_DEFINED__
#define ____x_ABI_CWindows_CDevices_CPointOfService_CIPosPrinterReleaseDeviceRequestedEventArgs_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CDevices_CPointOfService_CIPosPrinterReleaseDeviceRequestedEventArgs __x_ABI_CWindows_CDevices_CPointOfService_CIPosPrinterReleaseDeviceRequestedEventArgs;

#endif // ____x_ABI_CWindows_CDevices_CPointOfService_CIPosPrinterReleaseDeviceRequestedEventArgs_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CDevices_CPointOfService_CIPosPrinterStatics_FWD_DEFINED__
#define ____x_ABI_CWindows_CDevices_CPointOfService_CIPosPrinterStatics_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CDevices_CPointOfService_CIPosPrinterStatics __x_ABI_CWindows_CDevices_CPointOfService_CIPosPrinterStatics;

#endif // ____x_ABI_CWindows_CDevices_CPointOfService_CIPosPrinterStatics_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CDevices_CPointOfService_CIPosPrinterStatics2_FWD_DEFINED__
#define ____x_ABI_CWindows_CDevices_CPointOfService_CIPosPrinterStatics2_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CDevices_CPointOfService_CIPosPrinterStatics2 __x_ABI_CWindows_CDevices_CPointOfService_CIPosPrinterStatics2;

#endif // ____x_ABI_CWindows_CDevices_CPointOfService_CIPosPrinterStatics2_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CDevices_CPointOfService_CIPosPrinterStatus_FWD_DEFINED__
#define ____x_ABI_CWindows_CDevices_CPointOfService_CIPosPrinterStatus_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CDevices_CPointOfService_CIPosPrinterStatus __x_ABI_CWindows_CDevices_CPointOfService_CIPosPrinterStatus;

#endif // ____x_ABI_CWindows_CDevices_CPointOfService_CIPosPrinterStatus_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CDevices_CPointOfService_CIPosPrinterStatusUpdatedEventArgs_FWD_DEFINED__
#define ____x_ABI_CWindows_CDevices_CPointOfService_CIPosPrinterStatusUpdatedEventArgs_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CDevices_CPointOfService_CIPosPrinterStatusUpdatedEventArgs __x_ABI_CWindows_CDevices_CPointOfService_CIPosPrinterStatusUpdatedEventArgs;

#endif // ____x_ABI_CWindows_CDevices_CPointOfService_CIPosPrinterStatusUpdatedEventArgs_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CDevices_CPointOfService_CIReceiptOrSlipJob_FWD_DEFINED__
#define ____x_ABI_CWindows_CDevices_CPointOfService_CIReceiptOrSlipJob_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CDevices_CPointOfService_CIReceiptOrSlipJob __x_ABI_CWindows_CDevices_CPointOfService_CIReceiptOrSlipJob;

#endif // ____x_ABI_CWindows_CDevices_CPointOfService_CIReceiptOrSlipJob_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CDevices_CPointOfService_CIReceiptPrintJob_FWD_DEFINED__
#define ____x_ABI_CWindows_CDevices_CPointOfService_CIReceiptPrintJob_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CDevices_CPointOfService_CIReceiptPrintJob __x_ABI_CWindows_CDevices_CPointOfService_CIReceiptPrintJob;

#endif // ____x_ABI_CWindows_CDevices_CPointOfService_CIReceiptPrintJob_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CDevices_CPointOfService_CIReceiptPrintJob2_FWD_DEFINED__
#define ____x_ABI_CWindows_CDevices_CPointOfService_CIReceiptPrintJob2_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CDevices_CPointOfService_CIReceiptPrintJob2 __x_ABI_CWindows_CDevices_CPointOfService_CIReceiptPrintJob2;

#endif // ____x_ABI_CWindows_CDevices_CPointOfService_CIReceiptPrintJob2_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CDevices_CPointOfService_CIReceiptPrinterCapabilities_FWD_DEFINED__
#define ____x_ABI_CWindows_CDevices_CPointOfService_CIReceiptPrinterCapabilities_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CDevices_CPointOfService_CIReceiptPrinterCapabilities __x_ABI_CWindows_CDevices_CPointOfService_CIReceiptPrinterCapabilities;

#endif // ____x_ABI_CWindows_CDevices_CPointOfService_CIReceiptPrinterCapabilities_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CDevices_CPointOfService_CIReceiptPrinterCapabilities2_FWD_DEFINED__
#define ____x_ABI_CWindows_CDevices_CPointOfService_CIReceiptPrinterCapabilities2_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CDevices_CPointOfService_CIReceiptPrinterCapabilities2 __x_ABI_CWindows_CDevices_CPointOfService_CIReceiptPrinterCapabilities2;

#endif // ____x_ABI_CWindows_CDevices_CPointOfService_CIReceiptPrinterCapabilities2_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CDevices_CPointOfService_CISlipPrintJob_FWD_DEFINED__
#define ____x_ABI_CWindows_CDevices_CPointOfService_CISlipPrintJob_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CDevices_CPointOfService_CISlipPrintJob __x_ABI_CWindows_CDevices_CPointOfService_CISlipPrintJob;

#endif // ____x_ABI_CWindows_CDevices_CPointOfService_CISlipPrintJob_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CDevices_CPointOfService_CISlipPrinterCapabilities_FWD_DEFINED__
#define ____x_ABI_CWindows_CDevices_CPointOfService_CISlipPrinterCapabilities_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CDevices_CPointOfService_CISlipPrinterCapabilities __x_ABI_CWindows_CDevices_CPointOfService_CISlipPrinterCapabilities;

#endif // ____x_ABI_CWindows_CDevices_CPointOfService_CISlipPrinterCapabilities_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CDevices_CPointOfService_CISlipPrinterCapabilities2_FWD_DEFINED__
#define ____x_ABI_CWindows_CDevices_CPointOfService_CISlipPrinterCapabilities2_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CDevices_CPointOfService_CISlipPrinterCapabilities2 __x_ABI_CWindows_CDevices_CPointOfService_CISlipPrinterCapabilities2;

#endif // ____x_ABI_CWindows_CDevices_CPointOfService_CISlipPrinterCapabilities2_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CDevices_CPointOfService_CIUnifiedPosErrorData_FWD_DEFINED__
#define ____x_ABI_CWindows_CDevices_CPointOfService_CIUnifiedPosErrorData_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CDevices_CPointOfService_CIUnifiedPosErrorData __x_ABI_CWindows_CDevices_CPointOfService_CIUnifiedPosErrorData;

#endif // ____x_ABI_CWindows_CDevices_CPointOfService_CIUnifiedPosErrorData_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CDevices_CPointOfService_CIUnifiedPosErrorDataFactory_FWD_DEFINED__
#define ____x_ABI_CWindows_CDevices_CPointOfService_CIUnifiedPosErrorDataFactory_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CDevices_CPointOfService_CIUnifiedPosErrorDataFactory __x_ABI_CWindows_CDevices_CPointOfService_CIUnifiedPosErrorDataFactory;

#endif // ____x_ABI_CWindows_CDevices_CPointOfService_CIUnifiedPosErrorDataFactory_FWD_DEFINED__

// Parameterized interface forward declarations (C)

// Collection interface definitions

typedef interface __x_ABI_C__FIAsyncOperationCompletedHandler_1_boolean __x_ABI_C__FIAsyncOperationCompletedHandler_1_boolean;

#if !defined(____x_ABI_C__FIAsyncOperation_1_boolean_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIAsyncOperation_1_boolean_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIAsyncOperation_1_boolean __x_ABI_C__FIAsyncOperation_1_boolean;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIAsyncOperation_1_boolean;

    typedef struct __x_ABI_C__FIAsyncOperation_1_booleanVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIAsyncOperation_1_boolean* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIAsyncOperation_1_boolean* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIAsyncOperation_1_boolean* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIAsyncOperation_1_boolean* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIAsyncOperation_1_boolean* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIAsyncOperation_1_boolean* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* put_Completed)(__x_ABI_C__FIAsyncOperation_1_boolean* This,
        __x_ABI_C__FIAsyncOperationCompletedHandler_1_boolean* handler);
    HRESULT (STDMETHODCALLTYPE* get_Completed)(__x_ABI_C__FIAsyncOperation_1_boolean* This,
        __x_ABI_C__FIAsyncOperationCompletedHandler_1_boolean** result);
    HRESULT (STDMETHODCALLTYPE* GetResults)(__x_ABI_C__FIAsyncOperation_1_boolean* This,
        boolean* result);

        END_INTERFACE
    } __x_ABI_C__FIAsyncOperation_1_booleanVtbl;

    interface __x_ABI_C__FIAsyncOperation_1_boolean
    {
        CONST_VTBL struct __x_ABI_C__FIAsyncOperation_1_booleanVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIAsyncOperation_1_boolean_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIAsyncOperationCompletedHandler_1_boolean_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIAsyncOperationCompletedHandler_1_boolean_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIAsyncOperationCompletedHandler_1_boolean __x_ABI_C__FIAsyncOperationCompletedHandler_1_boolean;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIAsyncOperationCompletedHandler_1_boolean;

    typedef struct __x_ABI_C__FIAsyncOperationCompletedHandler_1_booleanVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIAsyncOperationCompletedHandler_1_boolean* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIAsyncOperationCompletedHandler_1_boolean* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIAsyncOperationCompletedHandler_1_boolean* This);
        HRESULT (STDMETHODCALLTYPE* Invoke)(__x_ABI_C__FIAsyncOperationCompletedHandler_1_boolean* This,
        __x_ABI_C__FIAsyncOperation_1_boolean* asyncInfo,
        enum __x_ABI_CWindows_CFoundation_CAsyncStatus asyncStatus);

        END_INTERFACE
    } __x_ABI_C__FIAsyncOperationCompletedHandler_1_booleanVtbl;

    interface __x_ABI_C__FIAsyncOperationCompletedHandler_1_boolean
    {
        CONST_VTBL struct __x_ABI_C__FIAsyncOperationCompletedHandler_1_booleanVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIAsyncOperationCompletedHandler_1_boolean_INTERFACE_DEFINED__
    
typedef interface __x_ABI_C__FIAsyncOperationCompletedHandler_1_HSTRING __x_ABI_C__FIAsyncOperationCompletedHandler_1_HSTRING;

#if !defined(____x_ABI_C__FIAsyncOperation_1_HSTRING_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIAsyncOperation_1_HSTRING_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIAsyncOperation_1_HSTRING __x_ABI_C__FIAsyncOperation_1_HSTRING;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIAsyncOperation_1_HSTRING;

    typedef struct __x_ABI_C__FIAsyncOperation_1_HSTRINGVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIAsyncOperation_1_HSTRING* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIAsyncOperation_1_HSTRING* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIAsyncOperation_1_HSTRING* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIAsyncOperation_1_HSTRING* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIAsyncOperation_1_HSTRING* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIAsyncOperation_1_HSTRING* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* put_Completed)(__x_ABI_C__FIAsyncOperation_1_HSTRING* This,
        __x_ABI_C__FIAsyncOperationCompletedHandler_1_HSTRING* handler);
    HRESULT (STDMETHODCALLTYPE* get_Completed)(__x_ABI_C__FIAsyncOperation_1_HSTRING* This,
        __x_ABI_C__FIAsyncOperationCompletedHandler_1_HSTRING** result);
    HRESULT (STDMETHODCALLTYPE* GetResults)(__x_ABI_C__FIAsyncOperation_1_HSTRING* This,
        HSTRING* result);

        END_INTERFACE
    } __x_ABI_C__FIAsyncOperation_1_HSTRINGVtbl;

    interface __x_ABI_C__FIAsyncOperation_1_HSTRING
    {
        CONST_VTBL struct __x_ABI_C__FIAsyncOperation_1_HSTRINGVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIAsyncOperation_1_HSTRING_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIAsyncOperationCompletedHandler_1_HSTRING_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIAsyncOperationCompletedHandler_1_HSTRING_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIAsyncOperationCompletedHandler_1_HSTRING __x_ABI_C__FIAsyncOperationCompletedHandler_1_HSTRING;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIAsyncOperationCompletedHandler_1_HSTRING;

    typedef struct __x_ABI_C__FIAsyncOperationCompletedHandler_1_HSTRINGVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIAsyncOperationCompletedHandler_1_HSTRING* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIAsyncOperationCompletedHandler_1_HSTRING* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIAsyncOperationCompletedHandler_1_HSTRING* This);
        HRESULT (STDMETHODCALLTYPE* Invoke)(__x_ABI_C__FIAsyncOperationCompletedHandler_1_HSTRING* This,
        __x_ABI_C__FIAsyncOperation_1_HSTRING* asyncInfo,
        enum __x_ABI_CWindows_CFoundation_CAsyncStatus asyncStatus);

        END_INTERFACE
    } __x_ABI_C__FIAsyncOperationCompletedHandler_1_HSTRINGVtbl;

    interface __x_ABI_C__FIAsyncOperationCompletedHandler_1_HSTRING
    {
        CONST_VTBL struct __x_ABI_C__FIAsyncOperationCompletedHandler_1_HSTRINGVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIAsyncOperationCompletedHandler_1_HSTRING_INTERFACE_DEFINED__
    
typedef interface __x_ABI_C__FIAsyncOperationCompletedHandler_1_UINT32 __x_ABI_C__FIAsyncOperationCompletedHandler_1_UINT32;

#if !defined(____x_ABI_C__FIAsyncOperation_1_UINT32_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIAsyncOperation_1_UINT32_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIAsyncOperation_1_UINT32 __x_ABI_C__FIAsyncOperation_1_UINT32;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIAsyncOperation_1_UINT32;

    typedef struct __x_ABI_C__FIAsyncOperation_1_UINT32Vtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIAsyncOperation_1_UINT32* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIAsyncOperation_1_UINT32* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIAsyncOperation_1_UINT32* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIAsyncOperation_1_UINT32* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIAsyncOperation_1_UINT32* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIAsyncOperation_1_UINT32* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* put_Completed)(__x_ABI_C__FIAsyncOperation_1_UINT32* This,
        __x_ABI_C__FIAsyncOperationCompletedHandler_1_UINT32* handler);
    HRESULT (STDMETHODCALLTYPE* get_Completed)(__x_ABI_C__FIAsyncOperation_1_UINT32* This,
        __x_ABI_C__FIAsyncOperationCompletedHandler_1_UINT32** result);
    HRESULT (STDMETHODCALLTYPE* GetResults)(__x_ABI_C__FIAsyncOperation_1_UINT32* This,
        UINT32* result);

        END_INTERFACE
    } __x_ABI_C__FIAsyncOperation_1_UINT32Vtbl;

    interface __x_ABI_C__FIAsyncOperation_1_UINT32
    {
        CONST_VTBL struct __x_ABI_C__FIAsyncOperation_1_UINT32Vtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIAsyncOperation_1_UINT32_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIAsyncOperationCompletedHandler_1_UINT32_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIAsyncOperationCompletedHandler_1_UINT32_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIAsyncOperationCompletedHandler_1_UINT32 __x_ABI_C__FIAsyncOperationCompletedHandler_1_UINT32;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIAsyncOperationCompletedHandler_1_UINT32;

    typedef struct __x_ABI_C__FIAsyncOperationCompletedHandler_1_UINT32Vtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIAsyncOperationCompletedHandler_1_UINT32* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIAsyncOperationCompletedHandler_1_UINT32* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIAsyncOperationCompletedHandler_1_UINT32* This);
        HRESULT (STDMETHODCALLTYPE* Invoke)(__x_ABI_C__FIAsyncOperationCompletedHandler_1_UINT32* This,
        __x_ABI_C__FIAsyncOperation_1_UINT32* asyncInfo,
        enum __x_ABI_CWindows_CFoundation_CAsyncStatus asyncStatus);

        END_INTERFACE
    } __x_ABI_C__FIAsyncOperationCompletedHandler_1_UINT32Vtbl;

    interface __x_ABI_C__FIAsyncOperationCompletedHandler_1_UINT32
    {
        CONST_VTBL struct __x_ABI_C__FIAsyncOperationCompletedHandler_1_UINT32Vtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIAsyncOperationCompletedHandler_1_UINT32_INTERFACE_DEFINED__
    
typedef interface __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CDevices__CPointOfService__CBarcodeScanner __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CDevices__CPointOfService__CBarcodeScanner;

#if !defined(____x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CDevices__CPointOfService__CBarcodeScanner_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CDevices__CPointOfService__CBarcodeScanner_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CDevices__CPointOfService__CBarcodeScanner __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CDevices__CPointOfService__CBarcodeScanner;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CDevices__CPointOfService__CBarcodeScanner;

    typedef struct __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CDevices__CPointOfService__CBarcodeScannerVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CDevices__CPointOfService__CBarcodeScanner* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CDevices__CPointOfService__CBarcodeScanner* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CDevices__CPointOfService__CBarcodeScanner* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CDevices__CPointOfService__CBarcodeScanner* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CDevices__CPointOfService__CBarcodeScanner* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CDevices__CPointOfService__CBarcodeScanner* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* put_Completed)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CDevices__CPointOfService__CBarcodeScanner* This,
        __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CDevices__CPointOfService__CBarcodeScanner* handler);
    HRESULT (STDMETHODCALLTYPE* get_Completed)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CDevices__CPointOfService__CBarcodeScanner* This,
        __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CDevices__CPointOfService__CBarcodeScanner** result);
    HRESULT (STDMETHODCALLTYPE* GetResults)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CDevices__CPointOfService__CBarcodeScanner* This,
        __x_ABI_CWindows_CDevices_CPointOfService_CIBarcodeScanner** result);

        END_INTERFACE
    } __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CDevices__CPointOfService__CBarcodeScannerVtbl;

    interface __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CDevices__CPointOfService__CBarcodeScanner
    {
        CONST_VTBL struct __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CDevices__CPointOfService__CBarcodeScannerVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CDevices__CPointOfService__CBarcodeScanner_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CDevices__CPointOfService__CBarcodeScanner_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CDevices__CPointOfService__CBarcodeScanner_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CDevices__CPointOfService__CBarcodeScanner __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CDevices__CPointOfService__CBarcodeScanner;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CDevices__CPointOfService__CBarcodeScanner;

    typedef struct __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CDevices__CPointOfService__CBarcodeScannerVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CDevices__CPointOfService__CBarcodeScanner* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CDevices__CPointOfService__CBarcodeScanner* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CDevices__CPointOfService__CBarcodeScanner* This);
        HRESULT (STDMETHODCALLTYPE* Invoke)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CDevices__CPointOfService__CBarcodeScanner* This,
        __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CDevices__CPointOfService__CBarcodeScanner* asyncInfo,
        enum __x_ABI_CWindows_CFoundation_CAsyncStatus asyncStatus);

        END_INTERFACE
    } __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CDevices__CPointOfService__CBarcodeScannerVtbl;

    interface __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CDevices__CPointOfService__CBarcodeScanner
    {
        CONST_VTBL struct __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CDevices__CPointOfService__CBarcodeScannerVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CDevices__CPointOfService__CBarcodeScanner_INTERFACE_DEFINED__
    
typedef interface __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CDevices__CPointOfService__CBarcodeSymbologyAttributes __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CDevices__CPointOfService__CBarcodeSymbologyAttributes;

#if !defined(____x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CDevices__CPointOfService__CBarcodeSymbologyAttributes_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CDevices__CPointOfService__CBarcodeSymbologyAttributes_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CDevices__CPointOfService__CBarcodeSymbologyAttributes __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CDevices__CPointOfService__CBarcodeSymbologyAttributes;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CDevices__CPointOfService__CBarcodeSymbologyAttributes;

    typedef struct __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CDevices__CPointOfService__CBarcodeSymbologyAttributesVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CDevices__CPointOfService__CBarcodeSymbologyAttributes* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CDevices__CPointOfService__CBarcodeSymbologyAttributes* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CDevices__CPointOfService__CBarcodeSymbologyAttributes* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CDevices__CPointOfService__CBarcodeSymbologyAttributes* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CDevices__CPointOfService__CBarcodeSymbologyAttributes* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CDevices__CPointOfService__CBarcodeSymbologyAttributes* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* put_Completed)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CDevices__CPointOfService__CBarcodeSymbologyAttributes* This,
        __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CDevices__CPointOfService__CBarcodeSymbologyAttributes* handler);
    HRESULT (STDMETHODCALLTYPE* get_Completed)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CDevices__CPointOfService__CBarcodeSymbologyAttributes* This,
        __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CDevices__CPointOfService__CBarcodeSymbologyAttributes** result);
    HRESULT (STDMETHODCALLTYPE* GetResults)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CDevices__CPointOfService__CBarcodeSymbologyAttributes* This,
        __x_ABI_CWindows_CDevices_CPointOfService_CIBarcodeSymbologyAttributes** result);

        END_INTERFACE
    } __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CDevices__CPointOfService__CBarcodeSymbologyAttributesVtbl;

    interface __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CDevices__CPointOfService__CBarcodeSymbologyAttributes
    {
        CONST_VTBL struct __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CDevices__CPointOfService__CBarcodeSymbologyAttributesVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CDevices__CPointOfService__CBarcodeSymbologyAttributes_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CDevices__CPointOfService__CBarcodeSymbologyAttributes_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CDevices__CPointOfService__CBarcodeSymbologyAttributes_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CDevices__CPointOfService__CBarcodeSymbologyAttributes __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CDevices__CPointOfService__CBarcodeSymbologyAttributes;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CDevices__CPointOfService__CBarcodeSymbologyAttributes;

    typedef struct __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CDevices__CPointOfService__CBarcodeSymbologyAttributesVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CDevices__CPointOfService__CBarcodeSymbologyAttributes* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CDevices__CPointOfService__CBarcodeSymbologyAttributes* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CDevices__CPointOfService__CBarcodeSymbologyAttributes* This);
        HRESULT (STDMETHODCALLTYPE* Invoke)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CDevices__CPointOfService__CBarcodeSymbologyAttributes* This,
        __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CDevices__CPointOfService__CBarcodeSymbologyAttributes* asyncInfo,
        enum __x_ABI_CWindows_CFoundation_CAsyncStatus asyncStatus);

        END_INTERFACE
    } __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CDevices__CPointOfService__CBarcodeSymbologyAttributesVtbl;

    interface __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CDevices__CPointOfService__CBarcodeSymbologyAttributes
    {
        CONST_VTBL struct __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CDevices__CPointOfService__CBarcodeSymbologyAttributesVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CDevices__CPointOfService__CBarcodeSymbologyAttributes_INTERFACE_DEFINED__
    
typedef interface __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CDevices__CPointOfService__CCashDrawer __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CDevices__CPointOfService__CCashDrawer;

#if !defined(____x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CDevices__CPointOfService__CCashDrawer_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CDevices__CPointOfService__CCashDrawer_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CDevices__CPointOfService__CCashDrawer __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CDevices__CPointOfService__CCashDrawer;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CDevices__CPointOfService__CCashDrawer;

    typedef struct __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CDevices__CPointOfService__CCashDrawerVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CDevices__CPointOfService__CCashDrawer* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CDevices__CPointOfService__CCashDrawer* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CDevices__CPointOfService__CCashDrawer* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CDevices__CPointOfService__CCashDrawer* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CDevices__CPointOfService__CCashDrawer* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CDevices__CPointOfService__CCashDrawer* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* put_Completed)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CDevices__CPointOfService__CCashDrawer* This,
        __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CDevices__CPointOfService__CCashDrawer* handler);
    HRESULT (STDMETHODCALLTYPE* get_Completed)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CDevices__CPointOfService__CCashDrawer* This,
        __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CDevices__CPointOfService__CCashDrawer** result);
    HRESULT (STDMETHODCALLTYPE* GetResults)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CDevices__CPointOfService__CCashDrawer* This,
        __x_ABI_CWindows_CDevices_CPointOfService_CICashDrawer** result);

        END_INTERFACE
    } __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CDevices__CPointOfService__CCashDrawerVtbl;

    interface __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CDevices__CPointOfService__CCashDrawer
    {
        CONST_VTBL struct __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CDevices__CPointOfService__CCashDrawerVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CDevices__CPointOfService__CCashDrawer_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CDevices__CPointOfService__CCashDrawer_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CDevices__CPointOfService__CCashDrawer_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CDevices__CPointOfService__CCashDrawer __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CDevices__CPointOfService__CCashDrawer;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CDevices__CPointOfService__CCashDrawer;

    typedef struct __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CDevices__CPointOfService__CCashDrawerVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CDevices__CPointOfService__CCashDrawer* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CDevices__CPointOfService__CCashDrawer* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CDevices__CPointOfService__CCashDrawer* This);
        HRESULT (STDMETHODCALLTYPE* Invoke)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CDevices__CPointOfService__CCashDrawer* This,
        __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CDevices__CPointOfService__CCashDrawer* asyncInfo,
        enum __x_ABI_CWindows_CFoundation_CAsyncStatus asyncStatus);

        END_INTERFACE
    } __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CDevices__CPointOfService__CCashDrawerVtbl;

    interface __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CDevices__CPointOfService__CCashDrawer
    {
        CONST_VTBL struct __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CDevices__CPointOfService__CCashDrawerVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CDevices__CPointOfService__CCashDrawer_INTERFACE_DEFINED__
    
typedef interface __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CDevices__CPointOfService__CClaimedBarcodeScanner __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CDevices__CPointOfService__CClaimedBarcodeScanner;

#if !defined(____x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CDevices__CPointOfService__CClaimedBarcodeScanner_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CDevices__CPointOfService__CClaimedBarcodeScanner_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CDevices__CPointOfService__CClaimedBarcodeScanner __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CDevices__CPointOfService__CClaimedBarcodeScanner;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CDevices__CPointOfService__CClaimedBarcodeScanner;

    typedef struct __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CDevices__CPointOfService__CClaimedBarcodeScannerVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CDevices__CPointOfService__CClaimedBarcodeScanner* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CDevices__CPointOfService__CClaimedBarcodeScanner* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CDevices__CPointOfService__CClaimedBarcodeScanner* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CDevices__CPointOfService__CClaimedBarcodeScanner* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CDevices__CPointOfService__CClaimedBarcodeScanner* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CDevices__CPointOfService__CClaimedBarcodeScanner* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* put_Completed)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CDevices__CPointOfService__CClaimedBarcodeScanner* This,
        __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CDevices__CPointOfService__CClaimedBarcodeScanner* handler);
    HRESULT (STDMETHODCALLTYPE* get_Completed)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CDevices__CPointOfService__CClaimedBarcodeScanner* This,
        __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CDevices__CPointOfService__CClaimedBarcodeScanner** result);
    HRESULT (STDMETHODCALLTYPE* GetResults)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CDevices__CPointOfService__CClaimedBarcodeScanner* This,
        __x_ABI_CWindows_CDevices_CPointOfService_CIClaimedBarcodeScanner** result);

        END_INTERFACE
    } __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CDevices__CPointOfService__CClaimedBarcodeScannerVtbl;

    interface __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CDevices__CPointOfService__CClaimedBarcodeScanner
    {
        CONST_VTBL struct __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CDevices__CPointOfService__CClaimedBarcodeScannerVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CDevices__CPointOfService__CClaimedBarcodeScanner_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CDevices__CPointOfService__CClaimedBarcodeScanner_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CDevices__CPointOfService__CClaimedBarcodeScanner_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CDevices__CPointOfService__CClaimedBarcodeScanner __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CDevices__CPointOfService__CClaimedBarcodeScanner;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CDevices__CPointOfService__CClaimedBarcodeScanner;

    typedef struct __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CDevices__CPointOfService__CClaimedBarcodeScannerVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CDevices__CPointOfService__CClaimedBarcodeScanner* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CDevices__CPointOfService__CClaimedBarcodeScanner* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CDevices__CPointOfService__CClaimedBarcodeScanner* This);
        HRESULT (STDMETHODCALLTYPE* Invoke)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CDevices__CPointOfService__CClaimedBarcodeScanner* This,
        __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CDevices__CPointOfService__CClaimedBarcodeScanner* asyncInfo,
        enum __x_ABI_CWindows_CFoundation_CAsyncStatus asyncStatus);

        END_INTERFACE
    } __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CDevices__CPointOfService__CClaimedBarcodeScannerVtbl;

    interface __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CDevices__CPointOfService__CClaimedBarcodeScanner
    {
        CONST_VTBL struct __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CDevices__CPointOfService__CClaimedBarcodeScannerVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CDevices__CPointOfService__CClaimedBarcodeScanner_INTERFACE_DEFINED__
    
typedef interface __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CDevices__CPointOfService__CClaimedCashDrawer __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CDevices__CPointOfService__CClaimedCashDrawer;

#if !defined(____x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CDevices__CPointOfService__CClaimedCashDrawer_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CDevices__CPointOfService__CClaimedCashDrawer_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CDevices__CPointOfService__CClaimedCashDrawer __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CDevices__CPointOfService__CClaimedCashDrawer;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CDevices__CPointOfService__CClaimedCashDrawer;

    typedef struct __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CDevices__CPointOfService__CClaimedCashDrawerVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CDevices__CPointOfService__CClaimedCashDrawer* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CDevices__CPointOfService__CClaimedCashDrawer* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CDevices__CPointOfService__CClaimedCashDrawer* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CDevices__CPointOfService__CClaimedCashDrawer* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CDevices__CPointOfService__CClaimedCashDrawer* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CDevices__CPointOfService__CClaimedCashDrawer* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* put_Completed)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CDevices__CPointOfService__CClaimedCashDrawer* This,
        __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CDevices__CPointOfService__CClaimedCashDrawer* handler);
    HRESULT (STDMETHODCALLTYPE* get_Completed)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CDevices__CPointOfService__CClaimedCashDrawer* This,
        __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CDevices__CPointOfService__CClaimedCashDrawer** result);
    HRESULT (STDMETHODCALLTYPE* GetResults)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CDevices__CPointOfService__CClaimedCashDrawer* This,
        __x_ABI_CWindows_CDevices_CPointOfService_CIClaimedCashDrawer** result);

        END_INTERFACE
    } __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CDevices__CPointOfService__CClaimedCashDrawerVtbl;

    interface __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CDevices__CPointOfService__CClaimedCashDrawer
    {
        CONST_VTBL struct __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CDevices__CPointOfService__CClaimedCashDrawerVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CDevices__CPointOfService__CClaimedCashDrawer_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CDevices__CPointOfService__CClaimedCashDrawer_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CDevices__CPointOfService__CClaimedCashDrawer_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CDevices__CPointOfService__CClaimedCashDrawer __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CDevices__CPointOfService__CClaimedCashDrawer;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CDevices__CPointOfService__CClaimedCashDrawer;

    typedef struct __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CDevices__CPointOfService__CClaimedCashDrawerVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CDevices__CPointOfService__CClaimedCashDrawer* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CDevices__CPointOfService__CClaimedCashDrawer* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CDevices__CPointOfService__CClaimedCashDrawer* This);
        HRESULT (STDMETHODCALLTYPE* Invoke)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CDevices__CPointOfService__CClaimedCashDrawer* This,
        __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CDevices__CPointOfService__CClaimedCashDrawer* asyncInfo,
        enum __x_ABI_CWindows_CFoundation_CAsyncStatus asyncStatus);

        END_INTERFACE
    } __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CDevices__CPointOfService__CClaimedCashDrawerVtbl;

    interface __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CDevices__CPointOfService__CClaimedCashDrawer
    {
        CONST_VTBL struct __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CDevices__CPointOfService__CClaimedCashDrawerVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CDevices__CPointOfService__CClaimedCashDrawer_INTERFACE_DEFINED__
    
typedef interface __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CDevices__CPointOfService__CClaimedLineDisplay __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CDevices__CPointOfService__CClaimedLineDisplay;

#if !defined(____x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CDevices__CPointOfService__CClaimedLineDisplay_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CDevices__CPointOfService__CClaimedLineDisplay_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CDevices__CPointOfService__CClaimedLineDisplay __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CDevices__CPointOfService__CClaimedLineDisplay;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CDevices__CPointOfService__CClaimedLineDisplay;

    typedef struct __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CDevices__CPointOfService__CClaimedLineDisplayVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CDevices__CPointOfService__CClaimedLineDisplay* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CDevices__CPointOfService__CClaimedLineDisplay* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CDevices__CPointOfService__CClaimedLineDisplay* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CDevices__CPointOfService__CClaimedLineDisplay* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CDevices__CPointOfService__CClaimedLineDisplay* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CDevices__CPointOfService__CClaimedLineDisplay* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* put_Completed)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CDevices__CPointOfService__CClaimedLineDisplay* This,
        __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CDevices__CPointOfService__CClaimedLineDisplay* handler);
    HRESULT (STDMETHODCALLTYPE* get_Completed)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CDevices__CPointOfService__CClaimedLineDisplay* This,
        __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CDevices__CPointOfService__CClaimedLineDisplay** result);
    HRESULT (STDMETHODCALLTYPE* GetResults)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CDevices__CPointOfService__CClaimedLineDisplay* This,
        __x_ABI_CWindows_CDevices_CPointOfService_CIClaimedLineDisplay** result);

        END_INTERFACE
    } __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CDevices__CPointOfService__CClaimedLineDisplayVtbl;

    interface __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CDevices__CPointOfService__CClaimedLineDisplay
    {
        CONST_VTBL struct __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CDevices__CPointOfService__CClaimedLineDisplayVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CDevices__CPointOfService__CClaimedLineDisplay_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CDevices__CPointOfService__CClaimedLineDisplay_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CDevices__CPointOfService__CClaimedLineDisplay_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CDevices__CPointOfService__CClaimedLineDisplay __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CDevices__CPointOfService__CClaimedLineDisplay;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CDevices__CPointOfService__CClaimedLineDisplay;

    typedef struct __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CDevices__CPointOfService__CClaimedLineDisplayVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CDevices__CPointOfService__CClaimedLineDisplay* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CDevices__CPointOfService__CClaimedLineDisplay* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CDevices__CPointOfService__CClaimedLineDisplay* This);
        HRESULT (STDMETHODCALLTYPE* Invoke)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CDevices__CPointOfService__CClaimedLineDisplay* This,
        __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CDevices__CPointOfService__CClaimedLineDisplay* asyncInfo,
        enum __x_ABI_CWindows_CFoundation_CAsyncStatus asyncStatus);

        END_INTERFACE
    } __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CDevices__CPointOfService__CClaimedLineDisplayVtbl;

    interface __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CDevices__CPointOfService__CClaimedLineDisplay
    {
        CONST_VTBL struct __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CDevices__CPointOfService__CClaimedLineDisplayVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CDevices__CPointOfService__CClaimedLineDisplay_INTERFACE_DEFINED__
    
typedef interface __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CDevices__CPointOfService__CClaimedMagneticStripeReader __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CDevices__CPointOfService__CClaimedMagneticStripeReader;

#if !defined(____x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CDevices__CPointOfService__CClaimedMagneticStripeReader_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CDevices__CPointOfService__CClaimedMagneticStripeReader_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CDevices__CPointOfService__CClaimedMagneticStripeReader __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CDevices__CPointOfService__CClaimedMagneticStripeReader;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CDevices__CPointOfService__CClaimedMagneticStripeReader;

    typedef struct __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CDevices__CPointOfService__CClaimedMagneticStripeReaderVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CDevices__CPointOfService__CClaimedMagneticStripeReader* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CDevices__CPointOfService__CClaimedMagneticStripeReader* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CDevices__CPointOfService__CClaimedMagneticStripeReader* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CDevices__CPointOfService__CClaimedMagneticStripeReader* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CDevices__CPointOfService__CClaimedMagneticStripeReader* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CDevices__CPointOfService__CClaimedMagneticStripeReader* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* put_Completed)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CDevices__CPointOfService__CClaimedMagneticStripeReader* This,
        __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CDevices__CPointOfService__CClaimedMagneticStripeReader* handler);
    HRESULT (STDMETHODCALLTYPE* get_Completed)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CDevices__CPointOfService__CClaimedMagneticStripeReader* This,
        __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CDevices__CPointOfService__CClaimedMagneticStripeReader** result);
    HRESULT (STDMETHODCALLTYPE* GetResults)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CDevices__CPointOfService__CClaimedMagneticStripeReader* This,
        __x_ABI_CWindows_CDevices_CPointOfService_CIClaimedMagneticStripeReader** result);

        END_INTERFACE
    } __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CDevices__CPointOfService__CClaimedMagneticStripeReaderVtbl;

    interface __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CDevices__CPointOfService__CClaimedMagneticStripeReader
    {
        CONST_VTBL struct __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CDevices__CPointOfService__CClaimedMagneticStripeReaderVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CDevices__CPointOfService__CClaimedMagneticStripeReader_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CDevices__CPointOfService__CClaimedMagneticStripeReader_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CDevices__CPointOfService__CClaimedMagneticStripeReader_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CDevices__CPointOfService__CClaimedMagneticStripeReader __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CDevices__CPointOfService__CClaimedMagneticStripeReader;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CDevices__CPointOfService__CClaimedMagneticStripeReader;

    typedef struct __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CDevices__CPointOfService__CClaimedMagneticStripeReaderVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CDevices__CPointOfService__CClaimedMagneticStripeReader* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CDevices__CPointOfService__CClaimedMagneticStripeReader* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CDevices__CPointOfService__CClaimedMagneticStripeReader* This);
        HRESULT (STDMETHODCALLTYPE* Invoke)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CDevices__CPointOfService__CClaimedMagneticStripeReader* This,
        __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CDevices__CPointOfService__CClaimedMagneticStripeReader* asyncInfo,
        enum __x_ABI_CWindows_CFoundation_CAsyncStatus asyncStatus);

        END_INTERFACE
    } __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CDevices__CPointOfService__CClaimedMagneticStripeReaderVtbl;

    interface __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CDevices__CPointOfService__CClaimedMagneticStripeReader
    {
        CONST_VTBL struct __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CDevices__CPointOfService__CClaimedMagneticStripeReaderVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CDevices__CPointOfService__CClaimedMagneticStripeReader_INTERFACE_DEFINED__
    
typedef interface __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CDevices__CPointOfService__CClaimedPosPrinter __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CDevices__CPointOfService__CClaimedPosPrinter;

#if !defined(____x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CDevices__CPointOfService__CClaimedPosPrinter_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CDevices__CPointOfService__CClaimedPosPrinter_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CDevices__CPointOfService__CClaimedPosPrinter __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CDevices__CPointOfService__CClaimedPosPrinter;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CDevices__CPointOfService__CClaimedPosPrinter;

    typedef struct __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CDevices__CPointOfService__CClaimedPosPrinterVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CDevices__CPointOfService__CClaimedPosPrinter* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CDevices__CPointOfService__CClaimedPosPrinter* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CDevices__CPointOfService__CClaimedPosPrinter* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CDevices__CPointOfService__CClaimedPosPrinter* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CDevices__CPointOfService__CClaimedPosPrinter* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CDevices__CPointOfService__CClaimedPosPrinter* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* put_Completed)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CDevices__CPointOfService__CClaimedPosPrinter* This,
        __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CDevices__CPointOfService__CClaimedPosPrinter* handler);
    HRESULT (STDMETHODCALLTYPE* get_Completed)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CDevices__CPointOfService__CClaimedPosPrinter* This,
        __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CDevices__CPointOfService__CClaimedPosPrinter** result);
    HRESULT (STDMETHODCALLTYPE* GetResults)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CDevices__CPointOfService__CClaimedPosPrinter* This,
        __x_ABI_CWindows_CDevices_CPointOfService_CIClaimedPosPrinter** result);

        END_INTERFACE
    } __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CDevices__CPointOfService__CClaimedPosPrinterVtbl;

    interface __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CDevices__CPointOfService__CClaimedPosPrinter
    {
        CONST_VTBL struct __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CDevices__CPointOfService__CClaimedPosPrinterVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CDevices__CPointOfService__CClaimedPosPrinter_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CDevices__CPointOfService__CClaimedPosPrinter_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CDevices__CPointOfService__CClaimedPosPrinter_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CDevices__CPointOfService__CClaimedPosPrinter __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CDevices__CPointOfService__CClaimedPosPrinter;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CDevices__CPointOfService__CClaimedPosPrinter;

    typedef struct __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CDevices__CPointOfService__CClaimedPosPrinterVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CDevices__CPointOfService__CClaimedPosPrinter* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CDevices__CPointOfService__CClaimedPosPrinter* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CDevices__CPointOfService__CClaimedPosPrinter* This);
        HRESULT (STDMETHODCALLTYPE* Invoke)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CDevices__CPointOfService__CClaimedPosPrinter* This,
        __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CDevices__CPointOfService__CClaimedPosPrinter* asyncInfo,
        enum __x_ABI_CWindows_CFoundation_CAsyncStatus asyncStatus);

        END_INTERFACE
    } __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CDevices__CPointOfService__CClaimedPosPrinterVtbl;

    interface __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CDevices__CPointOfService__CClaimedPosPrinter
    {
        CONST_VTBL struct __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CDevices__CPointOfService__CClaimedPosPrinterVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CDevices__CPointOfService__CClaimedPosPrinter_INTERFACE_DEFINED__
    
typedef interface __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CDevices__CPointOfService__CLineDisplay __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CDevices__CPointOfService__CLineDisplay;

#if !defined(____x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CDevices__CPointOfService__CLineDisplay_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CDevices__CPointOfService__CLineDisplay_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CDevices__CPointOfService__CLineDisplay __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CDevices__CPointOfService__CLineDisplay;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CDevices__CPointOfService__CLineDisplay;

    typedef struct __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CDevices__CPointOfService__CLineDisplayVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CDevices__CPointOfService__CLineDisplay* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CDevices__CPointOfService__CLineDisplay* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CDevices__CPointOfService__CLineDisplay* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CDevices__CPointOfService__CLineDisplay* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CDevices__CPointOfService__CLineDisplay* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CDevices__CPointOfService__CLineDisplay* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* put_Completed)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CDevices__CPointOfService__CLineDisplay* This,
        __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CDevices__CPointOfService__CLineDisplay* handler);
    HRESULT (STDMETHODCALLTYPE* get_Completed)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CDevices__CPointOfService__CLineDisplay* This,
        __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CDevices__CPointOfService__CLineDisplay** result);
    HRESULT (STDMETHODCALLTYPE* GetResults)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CDevices__CPointOfService__CLineDisplay* This,
        __x_ABI_CWindows_CDevices_CPointOfService_CILineDisplay** result);

        END_INTERFACE
    } __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CDevices__CPointOfService__CLineDisplayVtbl;

    interface __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CDevices__CPointOfService__CLineDisplay
    {
        CONST_VTBL struct __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CDevices__CPointOfService__CLineDisplayVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CDevices__CPointOfService__CLineDisplay_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CDevices__CPointOfService__CLineDisplay_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CDevices__CPointOfService__CLineDisplay_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CDevices__CPointOfService__CLineDisplay __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CDevices__CPointOfService__CLineDisplay;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CDevices__CPointOfService__CLineDisplay;

    typedef struct __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CDevices__CPointOfService__CLineDisplayVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CDevices__CPointOfService__CLineDisplay* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CDevices__CPointOfService__CLineDisplay* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CDevices__CPointOfService__CLineDisplay* This);
        HRESULT (STDMETHODCALLTYPE* Invoke)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CDevices__CPointOfService__CLineDisplay* This,
        __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CDevices__CPointOfService__CLineDisplay* asyncInfo,
        enum __x_ABI_CWindows_CFoundation_CAsyncStatus asyncStatus);

        END_INTERFACE
    } __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CDevices__CPointOfService__CLineDisplayVtbl;

    interface __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CDevices__CPointOfService__CLineDisplay
    {
        CONST_VTBL struct __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CDevices__CPointOfService__CLineDisplayVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CDevices__CPointOfService__CLineDisplay_INTERFACE_DEFINED__
    
typedef enum __x_ABI_CWindows_CDevices_CPointOfService_CLineDisplayPowerStatus __x_ABI_CWindows_CDevices_CPointOfService_CLineDisplayPowerStatus;

typedef interface __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CDevices__CPointOfService__CLineDisplayPowerStatus __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CDevices__CPointOfService__CLineDisplayPowerStatus;

#if !defined(____x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CDevices__CPointOfService__CLineDisplayPowerStatus_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CDevices__CPointOfService__CLineDisplayPowerStatus_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CDevices__CPointOfService__CLineDisplayPowerStatus __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CDevices__CPointOfService__CLineDisplayPowerStatus;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CDevices__CPointOfService__CLineDisplayPowerStatus;

    typedef struct __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CDevices__CPointOfService__CLineDisplayPowerStatusVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CDevices__CPointOfService__CLineDisplayPowerStatus* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CDevices__CPointOfService__CLineDisplayPowerStatus* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CDevices__CPointOfService__CLineDisplayPowerStatus* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CDevices__CPointOfService__CLineDisplayPowerStatus* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CDevices__CPointOfService__CLineDisplayPowerStatus* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CDevices__CPointOfService__CLineDisplayPowerStatus* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* put_Completed)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CDevices__CPointOfService__CLineDisplayPowerStatus* This,
        __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CDevices__CPointOfService__CLineDisplayPowerStatus* handler);
    HRESULT (STDMETHODCALLTYPE* get_Completed)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CDevices__CPointOfService__CLineDisplayPowerStatus* This,
        __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CDevices__CPointOfService__CLineDisplayPowerStatus** result);
    HRESULT (STDMETHODCALLTYPE* GetResults)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CDevices__CPointOfService__CLineDisplayPowerStatus* This,
        enum __x_ABI_CWindows_CDevices_CPointOfService_CLineDisplayPowerStatus* result);

        END_INTERFACE
    } __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CDevices__CPointOfService__CLineDisplayPowerStatusVtbl;

    interface __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CDevices__CPointOfService__CLineDisplayPowerStatus
    {
        CONST_VTBL struct __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CDevices__CPointOfService__CLineDisplayPowerStatusVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CDevices__CPointOfService__CLineDisplayPowerStatus_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CDevices__CPointOfService__CLineDisplayPowerStatus_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CDevices__CPointOfService__CLineDisplayPowerStatus_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CDevices__CPointOfService__CLineDisplayPowerStatus __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CDevices__CPointOfService__CLineDisplayPowerStatus;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CDevices__CPointOfService__CLineDisplayPowerStatus;

    typedef struct __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CDevices__CPointOfService__CLineDisplayPowerStatusVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CDevices__CPointOfService__CLineDisplayPowerStatus* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CDevices__CPointOfService__CLineDisplayPowerStatus* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CDevices__CPointOfService__CLineDisplayPowerStatus* This);
        HRESULT (STDMETHODCALLTYPE* Invoke)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CDevices__CPointOfService__CLineDisplayPowerStatus* This,
        __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CDevices__CPointOfService__CLineDisplayPowerStatus* asyncInfo,
        enum __x_ABI_CWindows_CFoundation_CAsyncStatus asyncStatus);

        END_INTERFACE
    } __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CDevices__CPointOfService__CLineDisplayPowerStatusVtbl;

    interface __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CDevices__CPointOfService__CLineDisplayPowerStatus
    {
        CONST_VTBL struct __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CDevices__CPointOfService__CLineDisplayPowerStatusVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CDevices__CPointOfService__CLineDisplayPowerStatus_INTERFACE_DEFINED__
    
typedef interface __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CDevices__CPointOfService__CLineDisplayStoredBitmap __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CDevices__CPointOfService__CLineDisplayStoredBitmap;

#if !defined(____x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CDevices__CPointOfService__CLineDisplayStoredBitmap_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CDevices__CPointOfService__CLineDisplayStoredBitmap_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CDevices__CPointOfService__CLineDisplayStoredBitmap __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CDevices__CPointOfService__CLineDisplayStoredBitmap;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CDevices__CPointOfService__CLineDisplayStoredBitmap;

    typedef struct __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CDevices__CPointOfService__CLineDisplayStoredBitmapVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CDevices__CPointOfService__CLineDisplayStoredBitmap* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CDevices__CPointOfService__CLineDisplayStoredBitmap* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CDevices__CPointOfService__CLineDisplayStoredBitmap* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CDevices__CPointOfService__CLineDisplayStoredBitmap* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CDevices__CPointOfService__CLineDisplayStoredBitmap* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CDevices__CPointOfService__CLineDisplayStoredBitmap* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* put_Completed)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CDevices__CPointOfService__CLineDisplayStoredBitmap* This,
        __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CDevices__CPointOfService__CLineDisplayStoredBitmap* handler);
    HRESULT (STDMETHODCALLTYPE* get_Completed)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CDevices__CPointOfService__CLineDisplayStoredBitmap* This,
        __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CDevices__CPointOfService__CLineDisplayStoredBitmap** result);
    HRESULT (STDMETHODCALLTYPE* GetResults)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CDevices__CPointOfService__CLineDisplayStoredBitmap* This,
        __x_ABI_CWindows_CDevices_CPointOfService_CILineDisplayStoredBitmap** result);

        END_INTERFACE
    } __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CDevices__CPointOfService__CLineDisplayStoredBitmapVtbl;

    interface __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CDevices__CPointOfService__CLineDisplayStoredBitmap
    {
        CONST_VTBL struct __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CDevices__CPointOfService__CLineDisplayStoredBitmapVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CDevices__CPointOfService__CLineDisplayStoredBitmap_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CDevices__CPointOfService__CLineDisplayStoredBitmap_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CDevices__CPointOfService__CLineDisplayStoredBitmap_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CDevices__CPointOfService__CLineDisplayStoredBitmap __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CDevices__CPointOfService__CLineDisplayStoredBitmap;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CDevices__CPointOfService__CLineDisplayStoredBitmap;

    typedef struct __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CDevices__CPointOfService__CLineDisplayStoredBitmapVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CDevices__CPointOfService__CLineDisplayStoredBitmap* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CDevices__CPointOfService__CLineDisplayStoredBitmap* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CDevices__CPointOfService__CLineDisplayStoredBitmap* This);
        HRESULT (STDMETHODCALLTYPE* Invoke)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CDevices__CPointOfService__CLineDisplayStoredBitmap* This,
        __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CDevices__CPointOfService__CLineDisplayStoredBitmap* asyncInfo,
        enum __x_ABI_CWindows_CFoundation_CAsyncStatus asyncStatus);

        END_INTERFACE
    } __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CDevices__CPointOfService__CLineDisplayStoredBitmapVtbl;

    interface __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CDevices__CPointOfService__CLineDisplayStoredBitmap
    {
        CONST_VTBL struct __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CDevices__CPointOfService__CLineDisplayStoredBitmapVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CDevices__CPointOfService__CLineDisplayStoredBitmap_INTERFACE_DEFINED__
    
typedef interface __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CDevices__CPointOfService__CLineDisplayWindow __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CDevices__CPointOfService__CLineDisplayWindow;

#if !defined(____x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CDevices__CPointOfService__CLineDisplayWindow_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CDevices__CPointOfService__CLineDisplayWindow_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CDevices__CPointOfService__CLineDisplayWindow __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CDevices__CPointOfService__CLineDisplayWindow;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CDevices__CPointOfService__CLineDisplayWindow;

    typedef struct __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CDevices__CPointOfService__CLineDisplayWindowVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CDevices__CPointOfService__CLineDisplayWindow* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CDevices__CPointOfService__CLineDisplayWindow* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CDevices__CPointOfService__CLineDisplayWindow* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CDevices__CPointOfService__CLineDisplayWindow* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CDevices__CPointOfService__CLineDisplayWindow* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CDevices__CPointOfService__CLineDisplayWindow* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* put_Completed)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CDevices__CPointOfService__CLineDisplayWindow* This,
        __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CDevices__CPointOfService__CLineDisplayWindow* handler);
    HRESULT (STDMETHODCALLTYPE* get_Completed)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CDevices__CPointOfService__CLineDisplayWindow* This,
        __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CDevices__CPointOfService__CLineDisplayWindow** result);
    HRESULT (STDMETHODCALLTYPE* GetResults)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CDevices__CPointOfService__CLineDisplayWindow* This,
        __x_ABI_CWindows_CDevices_CPointOfService_CILineDisplayWindow** result);

        END_INTERFACE
    } __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CDevices__CPointOfService__CLineDisplayWindowVtbl;

    interface __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CDevices__CPointOfService__CLineDisplayWindow
    {
        CONST_VTBL struct __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CDevices__CPointOfService__CLineDisplayWindowVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CDevices__CPointOfService__CLineDisplayWindow_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CDevices__CPointOfService__CLineDisplayWindow_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CDevices__CPointOfService__CLineDisplayWindow_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CDevices__CPointOfService__CLineDisplayWindow __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CDevices__CPointOfService__CLineDisplayWindow;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CDevices__CPointOfService__CLineDisplayWindow;

    typedef struct __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CDevices__CPointOfService__CLineDisplayWindowVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CDevices__CPointOfService__CLineDisplayWindow* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CDevices__CPointOfService__CLineDisplayWindow* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CDevices__CPointOfService__CLineDisplayWindow* This);
        HRESULT (STDMETHODCALLTYPE* Invoke)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CDevices__CPointOfService__CLineDisplayWindow* This,
        __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CDevices__CPointOfService__CLineDisplayWindow* asyncInfo,
        enum __x_ABI_CWindows_CFoundation_CAsyncStatus asyncStatus);

        END_INTERFACE
    } __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CDevices__CPointOfService__CLineDisplayWindowVtbl;

    interface __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CDevices__CPointOfService__CLineDisplayWindow
    {
        CONST_VTBL struct __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CDevices__CPointOfService__CLineDisplayWindowVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CDevices__CPointOfService__CLineDisplayWindow_INTERFACE_DEFINED__
    
typedef interface __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CDevices__CPointOfService__CMagneticStripeReader __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CDevices__CPointOfService__CMagneticStripeReader;

#if !defined(____x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CDevices__CPointOfService__CMagneticStripeReader_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CDevices__CPointOfService__CMagneticStripeReader_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CDevices__CPointOfService__CMagneticStripeReader __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CDevices__CPointOfService__CMagneticStripeReader;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CDevices__CPointOfService__CMagneticStripeReader;

    typedef struct __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CDevices__CPointOfService__CMagneticStripeReaderVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CDevices__CPointOfService__CMagneticStripeReader* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CDevices__CPointOfService__CMagneticStripeReader* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CDevices__CPointOfService__CMagneticStripeReader* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CDevices__CPointOfService__CMagneticStripeReader* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CDevices__CPointOfService__CMagneticStripeReader* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CDevices__CPointOfService__CMagneticStripeReader* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* put_Completed)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CDevices__CPointOfService__CMagneticStripeReader* This,
        __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CDevices__CPointOfService__CMagneticStripeReader* handler);
    HRESULT (STDMETHODCALLTYPE* get_Completed)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CDevices__CPointOfService__CMagneticStripeReader* This,
        __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CDevices__CPointOfService__CMagneticStripeReader** result);
    HRESULT (STDMETHODCALLTYPE* GetResults)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CDevices__CPointOfService__CMagneticStripeReader* This,
        __x_ABI_CWindows_CDevices_CPointOfService_CIMagneticStripeReader** result);

        END_INTERFACE
    } __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CDevices__CPointOfService__CMagneticStripeReaderVtbl;

    interface __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CDevices__CPointOfService__CMagneticStripeReader
    {
        CONST_VTBL struct __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CDevices__CPointOfService__CMagneticStripeReaderVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CDevices__CPointOfService__CMagneticStripeReader_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CDevices__CPointOfService__CMagneticStripeReader_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CDevices__CPointOfService__CMagneticStripeReader_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CDevices__CPointOfService__CMagneticStripeReader __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CDevices__CPointOfService__CMagneticStripeReader;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CDevices__CPointOfService__CMagneticStripeReader;

    typedef struct __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CDevices__CPointOfService__CMagneticStripeReaderVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CDevices__CPointOfService__CMagneticStripeReader* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CDevices__CPointOfService__CMagneticStripeReader* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CDevices__CPointOfService__CMagneticStripeReader* This);
        HRESULT (STDMETHODCALLTYPE* Invoke)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CDevices__CPointOfService__CMagneticStripeReader* This,
        __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CDevices__CPointOfService__CMagneticStripeReader* asyncInfo,
        enum __x_ABI_CWindows_CFoundation_CAsyncStatus asyncStatus);

        END_INTERFACE
    } __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CDevices__CPointOfService__CMagneticStripeReaderVtbl;

    interface __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CDevices__CPointOfService__CMagneticStripeReader
    {
        CONST_VTBL struct __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CDevices__CPointOfService__CMagneticStripeReaderVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CDevices__CPointOfService__CMagneticStripeReader_INTERFACE_DEFINED__
    
typedef interface __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CDevices__CPointOfService__CPosPrinter __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CDevices__CPointOfService__CPosPrinter;

#if !defined(____x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CDevices__CPointOfService__CPosPrinter_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CDevices__CPointOfService__CPosPrinter_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CDevices__CPointOfService__CPosPrinter __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CDevices__CPointOfService__CPosPrinter;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CDevices__CPointOfService__CPosPrinter;

    typedef struct __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CDevices__CPointOfService__CPosPrinterVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CDevices__CPointOfService__CPosPrinter* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CDevices__CPointOfService__CPosPrinter* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CDevices__CPointOfService__CPosPrinter* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CDevices__CPointOfService__CPosPrinter* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CDevices__CPointOfService__CPosPrinter* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CDevices__CPointOfService__CPosPrinter* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* put_Completed)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CDevices__CPointOfService__CPosPrinter* This,
        __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CDevices__CPointOfService__CPosPrinter* handler);
    HRESULT (STDMETHODCALLTYPE* get_Completed)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CDevices__CPointOfService__CPosPrinter* This,
        __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CDevices__CPointOfService__CPosPrinter** result);
    HRESULT (STDMETHODCALLTYPE* GetResults)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CDevices__CPointOfService__CPosPrinter* This,
        __x_ABI_CWindows_CDevices_CPointOfService_CIPosPrinter** result);

        END_INTERFACE
    } __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CDevices__CPointOfService__CPosPrinterVtbl;

    interface __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CDevices__CPointOfService__CPosPrinter
    {
        CONST_VTBL struct __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CDevices__CPointOfService__CPosPrinterVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CDevices__CPointOfService__CPosPrinter_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CDevices__CPointOfService__CPosPrinter_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CDevices__CPointOfService__CPosPrinter_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CDevices__CPointOfService__CPosPrinter __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CDevices__CPointOfService__CPosPrinter;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CDevices__CPointOfService__CPosPrinter;

    typedef struct __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CDevices__CPointOfService__CPosPrinterVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CDevices__CPointOfService__CPosPrinter* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CDevices__CPointOfService__CPosPrinter* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CDevices__CPointOfService__CPosPrinter* This);
        HRESULT (STDMETHODCALLTYPE* Invoke)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CDevices__CPointOfService__CPosPrinter* This,
        __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CDevices__CPointOfService__CPosPrinter* asyncInfo,
        enum __x_ABI_CWindows_CFoundation_CAsyncStatus asyncStatus);

        END_INTERFACE
    } __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CDevices__CPointOfService__CPosPrinterVtbl;

    interface __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CDevices__CPointOfService__CPosPrinter
    {
        CONST_VTBL struct __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CDevices__CPointOfService__CPosPrinterVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CDevices__CPointOfService__CPosPrinter_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIIterator_1_UINT32_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIIterator_1_UINT32_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIIterator_1_UINT32 __x_ABI_C__FIIterator_1_UINT32;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIIterator_1_UINT32;

    typedef struct __x_ABI_C__FIIterator_1_UINT32Vtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIIterator_1_UINT32* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIIterator_1_UINT32* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIIterator_1_UINT32* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIIterator_1_UINT32* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIIterator_1_UINT32* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIIterator_1_UINT32* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Current)(__x_ABI_C__FIIterator_1_UINT32* This,
        UINT32* result);
    HRESULT (STDMETHODCALLTYPE* get_HasCurrent)(__x_ABI_C__FIIterator_1_UINT32* This,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* MoveNext)(__x_ABI_C__FIIterator_1_UINT32* This,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__x_ABI_C__FIIterator_1_UINT32* This,
        UINT32 itemsLength,
        UINT32* items,
        UINT32* result);

        END_INTERFACE
    } __x_ABI_C__FIIterator_1_UINT32Vtbl;

    interface __x_ABI_C__FIIterator_1_UINT32
    {
        CONST_VTBL struct __x_ABI_C__FIIterator_1_UINT32Vtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIIterator_1_UINT32_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIIterable_1_UINT32_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIIterable_1_UINT32_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIIterable_1_UINT32 __x_ABI_C__FIIterable_1_UINT32;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIIterable_1_UINT32;

    typedef struct __x_ABI_C__FIIterable_1_UINT32Vtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIIterable_1_UINT32* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIIterable_1_UINT32* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIIterable_1_UINT32* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIIterable_1_UINT32* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIIterable_1_UINT32* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIIterable_1_UINT32* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* First)(__x_ABI_C__FIIterable_1_UINT32* This,
        __x_ABI_C__FIIterator_1_UINT32** result);

        END_INTERFACE
    } __x_ABI_C__FIIterable_1_UINT32Vtbl;

    interface __x_ABI_C__FIIterable_1_UINT32
    {
        CONST_VTBL struct __x_ABI_C__FIIterable_1_UINT32Vtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIIterable_1_UINT32_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIVectorView_1_UINT32_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIVectorView_1_UINT32_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIVectorView_1_UINT32 __x_ABI_C__FIVectorView_1_UINT32;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIVectorView_1_UINT32;

    typedef struct __x_ABI_C__FIVectorView_1_UINT32Vtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIVectorView_1_UINT32* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIVectorView_1_UINT32* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIVectorView_1_UINT32* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIVectorView_1_UINT32* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIVectorView_1_UINT32* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIVectorView_1_UINT32* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* GetAt)(__x_ABI_C__FIVectorView_1_UINT32* This,
        UINT32 index,
        UINT32* result);
    HRESULT (STDMETHODCALLTYPE* get_Size)(__x_ABI_C__FIVectorView_1_UINT32* This,
        UINT32* result);
    HRESULT (STDMETHODCALLTYPE* IndexOf)(__x_ABI_C__FIVectorView_1_UINT32* This,
        UINT32 value,
        UINT32* index,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__x_ABI_C__FIVectorView_1_UINT32* This,
        UINT32 startIndex,
        UINT32 itemsLength,
        UINT32* items,
        UINT32* result);

        END_INTERFACE
    } __x_ABI_C__FIVectorView_1_UINT32Vtbl;

    interface __x_ABI_C__FIVectorView_1_UINT32
    {
        CONST_VTBL struct __x_ABI_C__FIVectorView_1_UINT32Vtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIVectorView_1_UINT32_INTERFACE_DEFINED__
    
typedef interface __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1_UINT32 __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1_UINT32;

#if !defined(____x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1_UINT32_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1_UINT32_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1_UINT32 __x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1_UINT32;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1_UINT32;

    typedef struct __x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1_UINT32Vtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1_UINT32* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1_UINT32* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1_UINT32* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1_UINT32* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1_UINT32* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1_UINT32* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* put_Completed)(__x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1_UINT32* This,
        __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1_UINT32* handler);
    HRESULT (STDMETHODCALLTYPE* get_Completed)(__x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1_UINT32* This,
        __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1_UINT32** result);
    HRESULT (STDMETHODCALLTYPE* GetResults)(__x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1_UINT32* This,
        __x_ABI_C__FIVectorView_1_UINT32** result);

        END_INTERFACE
    } __x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1_UINT32Vtbl;

    interface __x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1_UINT32
    {
        CONST_VTBL struct __x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1_UINT32Vtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1_UINT32_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1_UINT32_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1_UINT32_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1_UINT32 __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1_UINT32;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1_UINT32;

    typedef struct __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1_UINT32Vtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1_UINT32* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1_UINT32* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1_UINT32* This);
        HRESULT (STDMETHODCALLTYPE* Invoke)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1_UINT32* This,
        __x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1_UINT32* asyncInfo,
        enum __x_ABI_CWindows_CFoundation_CAsyncStatus asyncStatus);

        END_INTERFACE
    } __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1_UINT32Vtbl;

    interface __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1_UINT32
    {
        CONST_VTBL struct __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1_UINT32Vtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1_UINT32_INTERFACE_DEFINED__
    
#ifndef ____x_ABI_CWindows_CStorage_CStreams_CIBuffer_FWD_DEFINED__
#define ____x_ABI_CWindows_CStorage_CStreams_CIBuffer_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CStorage_CStreams_CIBuffer __x_ABI_CWindows_CStorage_CStreams_CIBuffer;

#endif // ____x_ABI_CWindows_CStorage_CStreams_CIBuffer_FWD_DEFINED__

typedef interface __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CStorage__CStreams__CIBuffer __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CStorage__CStreams__CIBuffer;

#if !defined(____x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CStorage__CStreams__CIBuffer_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CStorage__CStreams__CIBuffer_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CStorage__CStreams__CIBuffer __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CStorage__CStreams__CIBuffer;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CStorage__CStreams__CIBuffer;

    typedef struct __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CStorage__CStreams__CIBufferVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CStorage__CStreams__CIBuffer* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CStorage__CStreams__CIBuffer* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CStorage__CStreams__CIBuffer* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CStorage__CStreams__CIBuffer* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CStorage__CStreams__CIBuffer* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CStorage__CStreams__CIBuffer* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* put_Completed)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CStorage__CStreams__CIBuffer* This,
        __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CStorage__CStreams__CIBuffer* handler);
    HRESULT (STDMETHODCALLTYPE* get_Completed)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CStorage__CStreams__CIBuffer* This,
        __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CStorage__CStreams__CIBuffer** result);
    HRESULT (STDMETHODCALLTYPE* GetResults)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CStorage__CStreams__CIBuffer* This,
        __x_ABI_CWindows_CStorage_CStreams_CIBuffer** result);

        END_INTERFACE
    } __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CStorage__CStreams__CIBufferVtbl;

    interface __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CStorage__CStreams__CIBuffer
    {
        CONST_VTBL struct __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CStorage__CStreams__CIBufferVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CStorage__CStreams__CIBuffer_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CStorage__CStreams__CIBuffer_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CStorage__CStreams__CIBuffer_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CStorage__CStreams__CIBuffer __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CStorage__CStreams__CIBuffer;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CStorage__CStreams__CIBuffer;

    typedef struct __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CStorage__CStreams__CIBufferVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CStorage__CStreams__CIBuffer* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CStorage__CStreams__CIBuffer* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CStorage__CStreams__CIBuffer* This);
        HRESULT (STDMETHODCALLTYPE* Invoke)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CStorage__CStreams__CIBuffer* This,
        __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CStorage__CStreams__CIBuffer* asyncInfo,
        enum __x_ABI_CWindows_CFoundation_CAsyncStatus asyncStatus);

        END_INTERFACE
    } __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CStorage__CStreams__CIBufferVtbl;

    interface __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CStorage__CStreams__CIBuffer
    {
        CONST_VTBL struct __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CStorage__CStreams__CIBufferVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CStorage__CStreams__CIBuffer_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIIterator_1_int_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIIterator_1_int_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIIterator_1_int __x_ABI_C__FIIterator_1_int;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIIterator_1_int;

    typedef struct __x_ABI_C__FIIterator_1_intVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIIterator_1_int* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIIterator_1_int* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIIterator_1_int* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIIterator_1_int* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIIterator_1_int* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIIterator_1_int* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Current)(__x_ABI_C__FIIterator_1_int* This,
        INT32* result);
    HRESULT (STDMETHODCALLTYPE* get_HasCurrent)(__x_ABI_C__FIIterator_1_int* This,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* MoveNext)(__x_ABI_C__FIIterator_1_int* This,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__x_ABI_C__FIIterator_1_int* This,
        UINT32 itemsLength,
        INT32* items,
        UINT32* result);

        END_INTERFACE
    } __x_ABI_C__FIIterator_1_intVtbl;

    interface __x_ABI_C__FIIterator_1_int
    {
        CONST_VTBL struct __x_ABI_C__FIIterator_1_intVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIIterator_1_int_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIIterable_1_int_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIIterable_1_int_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIIterable_1_int __x_ABI_C__FIIterable_1_int;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIIterable_1_int;

    typedef struct __x_ABI_C__FIIterable_1_intVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIIterable_1_int* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIIterable_1_int* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIIterable_1_int* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIIterable_1_int* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIIterable_1_int* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIIterable_1_int* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* First)(__x_ABI_C__FIIterable_1_int* This,
        __x_ABI_C__FIIterator_1_int** result);

        END_INTERFACE
    } __x_ABI_C__FIIterable_1_intVtbl;

    interface __x_ABI_C__FIIterable_1_int
    {
        CONST_VTBL struct __x_ABI_C__FIIterable_1_intVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIIterable_1_int_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIIterator_1_HSTRING_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIIterator_1_HSTRING_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIIterator_1_HSTRING __x_ABI_C__FIIterator_1_HSTRING;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIIterator_1_HSTRING;

    typedef struct __x_ABI_C__FIIterator_1_HSTRINGVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIIterator_1_HSTRING* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIIterator_1_HSTRING* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIIterator_1_HSTRING* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIIterator_1_HSTRING* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIIterator_1_HSTRING* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIIterator_1_HSTRING* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Current)(__x_ABI_C__FIIterator_1_HSTRING* This,
        HSTRING* result);
    HRESULT (STDMETHODCALLTYPE* get_HasCurrent)(__x_ABI_C__FIIterator_1_HSTRING* This,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* MoveNext)(__x_ABI_C__FIIterator_1_HSTRING* This,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__x_ABI_C__FIIterator_1_HSTRING* This,
        UINT32 itemsLength,
        HSTRING* items,
        UINT32* result);

        END_INTERFACE
    } __x_ABI_C__FIIterator_1_HSTRINGVtbl;

    interface __x_ABI_C__FIIterator_1_HSTRING
    {
        CONST_VTBL struct __x_ABI_C__FIIterator_1_HSTRINGVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIIterator_1_HSTRING_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIIterable_1_HSTRING_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIIterable_1_HSTRING_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIIterable_1_HSTRING __x_ABI_C__FIIterable_1_HSTRING;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIIterable_1_HSTRING;

    typedef struct __x_ABI_C__FIIterable_1_HSTRINGVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIIterable_1_HSTRING* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIIterable_1_HSTRING* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIIterable_1_HSTRING* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIIterable_1_HSTRING* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIIterable_1_HSTRING* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIIterable_1_HSTRING* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* First)(__x_ABI_C__FIIterable_1_HSTRING* This,
        __x_ABI_C__FIIterator_1_HSTRING** result);

        END_INTERFACE
    } __x_ABI_C__FIIterable_1_HSTRINGVtbl;

    interface __x_ABI_C__FIIterable_1_HSTRING
    {
        CONST_VTBL struct __x_ABI_C__FIIterable_1_HSTRINGVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIIterable_1_HSTRING_INTERFACE_DEFINED__
    
typedef enum __x_ABI_CWindows_CDevices_CPointOfService_CPosPrinterRotation __x_ABI_CWindows_CDevices_CPointOfService_CPosPrinterRotation;

#if !defined(____x_ABI_C__FIIterator_1___x_ABI_CWindows__CDevices__CPointOfService__CPosPrinterRotation_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIIterator_1___x_ABI_CWindows__CDevices__CPointOfService__CPosPrinterRotation_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIIterator_1___x_ABI_CWindows__CDevices__CPointOfService__CPosPrinterRotation __x_ABI_C__FIIterator_1___x_ABI_CWindows__CDevices__CPointOfService__CPosPrinterRotation;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIIterator_1___x_ABI_CWindows__CDevices__CPointOfService__CPosPrinterRotation;

    typedef struct __x_ABI_C__FIIterator_1___x_ABI_CWindows__CDevices__CPointOfService__CPosPrinterRotationVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CDevices__CPointOfService__CPosPrinterRotation* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CDevices__CPointOfService__CPosPrinterRotation* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CDevices__CPointOfService__CPosPrinterRotation* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CDevices__CPointOfService__CPosPrinterRotation* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CDevices__CPointOfService__CPosPrinterRotation* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CDevices__CPointOfService__CPosPrinterRotation* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Current)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CDevices__CPointOfService__CPosPrinterRotation* This,
        enum __x_ABI_CWindows_CDevices_CPointOfService_CPosPrinterRotation* result);
    HRESULT (STDMETHODCALLTYPE* get_HasCurrent)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CDevices__CPointOfService__CPosPrinterRotation* This,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* MoveNext)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CDevices__CPointOfService__CPosPrinterRotation* This,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CDevices__CPointOfService__CPosPrinterRotation* This,
        UINT32 itemsLength,
        enum __x_ABI_CWindows_CDevices_CPointOfService_CPosPrinterRotation* items,
        UINT32* result);

        END_INTERFACE
    } __x_ABI_C__FIIterator_1___x_ABI_CWindows__CDevices__CPointOfService__CPosPrinterRotationVtbl;

    interface __x_ABI_C__FIIterator_1___x_ABI_CWindows__CDevices__CPointOfService__CPosPrinterRotation
    {
        CONST_VTBL struct __x_ABI_C__FIIterator_1___x_ABI_CWindows__CDevices__CPointOfService__CPosPrinterRotationVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIIterator_1___x_ABI_CWindows__CDevices__CPointOfService__CPosPrinterRotation_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIIterable_1___x_ABI_CWindows__CDevices__CPointOfService__CPosPrinterRotation_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIIterable_1___x_ABI_CWindows__CDevices__CPointOfService__CPosPrinterRotation_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIIterable_1___x_ABI_CWindows__CDevices__CPointOfService__CPosPrinterRotation __x_ABI_C__FIIterable_1___x_ABI_CWindows__CDevices__CPointOfService__CPosPrinterRotation;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIIterable_1___x_ABI_CWindows__CDevices__CPointOfService__CPosPrinterRotation;

    typedef struct __x_ABI_C__FIIterable_1___x_ABI_CWindows__CDevices__CPointOfService__CPosPrinterRotationVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CDevices__CPointOfService__CPosPrinterRotation* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CDevices__CPointOfService__CPosPrinterRotation* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CDevices__CPointOfService__CPosPrinterRotation* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CDevices__CPointOfService__CPosPrinterRotation* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CDevices__CPointOfService__CPosPrinterRotation* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CDevices__CPointOfService__CPosPrinterRotation* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* First)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CDevices__CPointOfService__CPosPrinterRotation* This,
        __x_ABI_C__FIIterator_1___x_ABI_CWindows__CDevices__CPointOfService__CPosPrinterRotation** result);

        END_INTERFACE
    } __x_ABI_C__FIIterable_1___x_ABI_CWindows__CDevices__CPointOfService__CPosPrinterRotationVtbl;

    interface __x_ABI_C__FIIterable_1___x_ABI_CWindows__CDevices__CPointOfService__CPosPrinterRotation
    {
        CONST_VTBL struct __x_ABI_C__FIIterable_1___x_ABI_CWindows__CDevices__CPointOfService__CPosPrinterRotationVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIIterable_1___x_ABI_CWindows__CDevices__CPointOfService__CPosPrinterRotation_INTERFACE_DEFINED__
    
typedef struct __x_ABI_CWindows_CDevices_CPointOfService_CSizeUInt32 __x_ABI_CWindows_CDevices_CPointOfService_CSizeUInt32;

#if !defined(____x_ABI_C__FIIterator_1___x_ABI_CWindows__CDevices__CPointOfService__CSizeUInt32_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIIterator_1___x_ABI_CWindows__CDevices__CPointOfService__CSizeUInt32_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIIterator_1___x_ABI_CWindows__CDevices__CPointOfService__CSizeUInt32 __x_ABI_C__FIIterator_1___x_ABI_CWindows__CDevices__CPointOfService__CSizeUInt32;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIIterator_1___x_ABI_CWindows__CDevices__CPointOfService__CSizeUInt32;

    typedef struct __x_ABI_C__FIIterator_1___x_ABI_CWindows__CDevices__CPointOfService__CSizeUInt32Vtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CDevices__CPointOfService__CSizeUInt32* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CDevices__CPointOfService__CSizeUInt32* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CDevices__CPointOfService__CSizeUInt32* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CDevices__CPointOfService__CSizeUInt32* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CDevices__CPointOfService__CSizeUInt32* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CDevices__CPointOfService__CSizeUInt32* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Current)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CDevices__CPointOfService__CSizeUInt32* This,
        struct __x_ABI_CWindows_CDevices_CPointOfService_CSizeUInt32* result);
    HRESULT (STDMETHODCALLTYPE* get_HasCurrent)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CDevices__CPointOfService__CSizeUInt32* This,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* MoveNext)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CDevices__CPointOfService__CSizeUInt32* This,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CDevices__CPointOfService__CSizeUInt32* This,
        UINT32 itemsLength,
        struct __x_ABI_CWindows_CDevices_CPointOfService_CSizeUInt32* items,
        UINT32* result);

        END_INTERFACE
    } __x_ABI_C__FIIterator_1___x_ABI_CWindows__CDevices__CPointOfService__CSizeUInt32Vtbl;

    interface __x_ABI_C__FIIterator_1___x_ABI_CWindows__CDevices__CPointOfService__CSizeUInt32
    {
        CONST_VTBL struct __x_ABI_C__FIIterator_1___x_ABI_CWindows__CDevices__CPointOfService__CSizeUInt32Vtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIIterator_1___x_ABI_CWindows__CDevices__CPointOfService__CSizeUInt32_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIIterable_1___x_ABI_CWindows__CDevices__CPointOfService__CSizeUInt32_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIIterable_1___x_ABI_CWindows__CDevices__CPointOfService__CSizeUInt32_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIIterable_1___x_ABI_CWindows__CDevices__CPointOfService__CSizeUInt32 __x_ABI_C__FIIterable_1___x_ABI_CWindows__CDevices__CPointOfService__CSizeUInt32;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIIterable_1___x_ABI_CWindows__CDevices__CPointOfService__CSizeUInt32;

    typedef struct __x_ABI_C__FIIterable_1___x_ABI_CWindows__CDevices__CPointOfService__CSizeUInt32Vtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CDevices__CPointOfService__CSizeUInt32* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CDevices__CPointOfService__CSizeUInt32* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CDevices__CPointOfService__CSizeUInt32* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CDevices__CPointOfService__CSizeUInt32* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CDevices__CPointOfService__CSizeUInt32* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CDevices__CPointOfService__CSizeUInt32* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* First)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CDevices__CPointOfService__CSizeUInt32* This,
        __x_ABI_C__FIIterator_1___x_ABI_CWindows__CDevices__CPointOfService__CSizeUInt32** result);

        END_INTERFACE
    } __x_ABI_C__FIIterable_1___x_ABI_CWindows__CDevices__CPointOfService__CSizeUInt32Vtbl;

    interface __x_ABI_C__FIIterable_1___x_ABI_CWindows__CDevices__CPointOfService__CSizeUInt32
    {
        CONST_VTBL struct __x_ABI_C__FIIterable_1___x_ABI_CWindows__CDevices__CPointOfService__CSizeUInt32Vtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIIterable_1___x_ABI_CWindows__CDevices__CPointOfService__CSizeUInt32_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIKeyValuePair_2_HSTRING_HSTRING_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIKeyValuePair_2_HSTRING_HSTRING_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIKeyValuePair_2_HSTRING_HSTRING __x_ABI_C__FIKeyValuePair_2_HSTRING_HSTRING;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIKeyValuePair_2_HSTRING_HSTRING;

    typedef struct __x_ABI_C__FIKeyValuePair_2_HSTRING_HSTRINGVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIKeyValuePair_2_HSTRING_HSTRING* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIKeyValuePair_2_HSTRING_HSTRING* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIKeyValuePair_2_HSTRING_HSTRING* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIKeyValuePair_2_HSTRING_HSTRING* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIKeyValuePair_2_HSTRING_HSTRING* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIKeyValuePair_2_HSTRING_HSTRING* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Key)(__x_ABI_C__FIKeyValuePair_2_HSTRING_HSTRING* This,
        HSTRING* result);
    HRESULT (STDMETHODCALLTYPE* get_Value)(__x_ABI_C__FIKeyValuePair_2_HSTRING_HSTRING* This,
        HSTRING* result);

        END_INTERFACE
    } __x_ABI_C__FIKeyValuePair_2_HSTRING_HSTRINGVtbl;

    interface __x_ABI_C__FIKeyValuePair_2_HSTRING_HSTRING
    {
        CONST_VTBL struct __x_ABI_C__FIKeyValuePair_2_HSTRING_HSTRINGVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIKeyValuePair_2_HSTRING_HSTRING_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2_HSTRING_HSTRING_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2_HSTRING_HSTRING_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2_HSTRING_HSTRING __x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2_HSTRING_HSTRING;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2_HSTRING_HSTRING;

    typedef struct __x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2_HSTRING_HSTRINGVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2_HSTRING_HSTRING* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2_HSTRING_HSTRING* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2_HSTRING_HSTRING* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2_HSTRING_HSTRING* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2_HSTRING_HSTRING* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2_HSTRING_HSTRING* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Current)(__x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2_HSTRING_HSTRING* This,
        __x_ABI_C__FIKeyValuePair_2_HSTRING_HSTRING** result);
    HRESULT (STDMETHODCALLTYPE* get_HasCurrent)(__x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2_HSTRING_HSTRING* This,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* MoveNext)(__x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2_HSTRING_HSTRING* This,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2_HSTRING_HSTRING* This,
        UINT32 itemsLength,
        __x_ABI_C__FIKeyValuePair_2_HSTRING_HSTRING** items,
        UINT32* result);

        END_INTERFACE
    } __x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2_HSTRING_HSTRINGVtbl;

    interface __x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2_HSTRING_HSTRING
    {
        CONST_VTBL struct __x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2_HSTRING_HSTRINGVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2_HSTRING_HSTRING_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIIterable_1___x_ABI_C__FIKeyValuePair_2_HSTRING_HSTRING_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIIterable_1___x_ABI_C__FIKeyValuePair_2_HSTRING_HSTRING_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIIterable_1___x_ABI_C__FIKeyValuePair_2_HSTRING_HSTRING __x_ABI_C__FIIterable_1___x_ABI_C__FIKeyValuePair_2_HSTRING_HSTRING;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIIterable_1___x_ABI_C__FIKeyValuePair_2_HSTRING_HSTRING;

    typedef struct __x_ABI_C__FIIterable_1___x_ABI_C__FIKeyValuePair_2_HSTRING_HSTRINGVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIIterable_1___x_ABI_C__FIKeyValuePair_2_HSTRING_HSTRING* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIIterable_1___x_ABI_C__FIKeyValuePair_2_HSTRING_HSTRING* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIIterable_1___x_ABI_C__FIKeyValuePair_2_HSTRING_HSTRING* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIIterable_1___x_ABI_C__FIKeyValuePair_2_HSTRING_HSTRING* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIIterable_1___x_ABI_C__FIKeyValuePair_2_HSTRING_HSTRING* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIIterable_1___x_ABI_C__FIKeyValuePair_2_HSTRING_HSTRING* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* First)(__x_ABI_C__FIIterable_1___x_ABI_C__FIKeyValuePair_2_HSTRING_HSTRING* This,
        __x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2_HSTRING_HSTRING** result);

        END_INTERFACE
    } __x_ABI_C__FIIterable_1___x_ABI_C__FIKeyValuePair_2_HSTRING_HSTRINGVtbl;

    interface __x_ABI_C__FIIterable_1___x_ABI_C__FIKeyValuePair_2_HSTRING_HSTRING
    {
        CONST_VTBL struct __x_ABI_C__FIIterable_1___x_ABI_C__FIKeyValuePair_2_HSTRING_HSTRINGVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIIterable_1___x_ABI_C__FIKeyValuePair_2_HSTRING_HSTRING_INTERFACE_DEFINED__
    
typedef struct __x_ABI_CWindows_CFoundation_CSize __x_ABI_CWindows_CFoundation_CSize;

#if !defined(____x_ABI_C__FIIterator_1___x_ABI_CWindows__CFoundation__CSize_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIIterator_1___x_ABI_CWindows__CFoundation__CSize_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIIterator_1___x_ABI_CWindows__CFoundation__CSize __x_ABI_C__FIIterator_1___x_ABI_CWindows__CFoundation__CSize;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIIterator_1___x_ABI_CWindows__CFoundation__CSize;

    typedef struct __x_ABI_C__FIIterator_1___x_ABI_CWindows__CFoundation__CSizeVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CFoundation__CSize* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CFoundation__CSize* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CFoundation__CSize* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CFoundation__CSize* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CFoundation__CSize* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CFoundation__CSize* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Current)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CFoundation__CSize* This,
        struct __x_ABI_CWindows_CFoundation_CSize* result);
    HRESULT (STDMETHODCALLTYPE* get_HasCurrent)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CFoundation__CSize* This,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* MoveNext)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CFoundation__CSize* This,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CFoundation__CSize* This,
        UINT32 itemsLength,
        struct __x_ABI_CWindows_CFoundation_CSize* items,
        UINT32* result);

        END_INTERFACE
    } __x_ABI_C__FIIterator_1___x_ABI_CWindows__CFoundation__CSizeVtbl;

    interface __x_ABI_C__FIIterator_1___x_ABI_CWindows__CFoundation__CSize
    {
        CONST_VTBL struct __x_ABI_C__FIIterator_1___x_ABI_CWindows__CFoundation__CSizeVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIIterator_1___x_ABI_CWindows__CFoundation__CSize_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIIterable_1___x_ABI_CWindows__CFoundation__CSize_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIIterable_1___x_ABI_CWindows__CFoundation__CSize_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIIterable_1___x_ABI_CWindows__CFoundation__CSize __x_ABI_C__FIIterable_1___x_ABI_CWindows__CFoundation__CSize;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIIterable_1___x_ABI_CWindows__CFoundation__CSize;

    typedef struct __x_ABI_C__FIIterable_1___x_ABI_CWindows__CFoundation__CSizeVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CFoundation__CSize* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CFoundation__CSize* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CFoundation__CSize* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CFoundation__CSize* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CFoundation__CSize* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CFoundation__CSize* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* First)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CFoundation__CSize* This,
        __x_ABI_C__FIIterator_1___x_ABI_CWindows__CFoundation__CSize** result);

        END_INTERFACE
    } __x_ABI_C__FIIterable_1___x_ABI_CWindows__CFoundation__CSizeVtbl;

    interface __x_ABI_C__FIIterable_1___x_ABI_CWindows__CFoundation__CSize
    {
        CONST_VTBL struct __x_ABI_C__FIIterable_1___x_ABI_CWindows__CFoundation__CSizeVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIIterable_1___x_ABI_CWindows__CFoundation__CSize_INTERFACE_DEFINED__
    
typedef interface __x_ABI_C__FIMapView_2_HSTRING_HSTRING __x_ABI_C__FIMapView_2_HSTRING_HSTRING;

#if !defined(____x_ABI_C__FIMapView_2_HSTRING_HSTRING_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIMapView_2_HSTRING_HSTRING_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIMapView_2_HSTRING_HSTRING __x_ABI_C__FIMapView_2_HSTRING_HSTRING;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIMapView_2_HSTRING_HSTRING;

    typedef struct __x_ABI_C__FIMapView_2_HSTRING_HSTRINGVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIMapView_2_HSTRING_HSTRING* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIMapView_2_HSTRING_HSTRING* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIMapView_2_HSTRING_HSTRING* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIMapView_2_HSTRING_HSTRING* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIMapView_2_HSTRING_HSTRING* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIMapView_2_HSTRING_HSTRING* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* Lookup)(__x_ABI_C__FIMapView_2_HSTRING_HSTRING* This,
        HSTRING key,
        HSTRING* result);
    HRESULT (STDMETHODCALLTYPE* get_Size)(__x_ABI_C__FIMapView_2_HSTRING_HSTRING* This,
        UINT32* result);
    HRESULT (STDMETHODCALLTYPE* HasKey)(__x_ABI_C__FIMapView_2_HSTRING_HSTRING* This,
        HSTRING key,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* Split)(__x_ABI_C__FIMapView_2_HSTRING_HSTRING* This,
        __x_ABI_C__FIMapView_2_HSTRING_HSTRING** first,
        __x_ABI_C__FIMapView_2_HSTRING_HSTRING** second);

        END_INTERFACE
    } __x_ABI_C__FIMapView_2_HSTRING_HSTRINGVtbl;

    interface __x_ABI_C__FIMapView_2_HSTRING_HSTRING
    {
        CONST_VTBL struct __x_ABI_C__FIMapView_2_HSTRING_HSTRINGVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIMapView_2_HSTRING_HSTRING_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIVectorView_1_int_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIVectorView_1_int_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIVectorView_1_int __x_ABI_C__FIVectorView_1_int;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIVectorView_1_int;

    typedef struct __x_ABI_C__FIVectorView_1_intVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIVectorView_1_int* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIVectorView_1_int* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIVectorView_1_int* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIVectorView_1_int* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIVectorView_1_int* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIVectorView_1_int* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* GetAt)(__x_ABI_C__FIVectorView_1_int* This,
        UINT32 index,
        INT32* result);
    HRESULT (STDMETHODCALLTYPE* get_Size)(__x_ABI_C__FIVectorView_1_int* This,
        UINT32* result);
    HRESULT (STDMETHODCALLTYPE* IndexOf)(__x_ABI_C__FIVectorView_1_int* This,
        INT32 value,
        UINT32* index,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__x_ABI_C__FIVectorView_1_int* This,
        UINT32 startIndex,
        UINT32 itemsLength,
        INT32* items,
        UINT32* result);

        END_INTERFACE
    } __x_ABI_C__FIVectorView_1_intVtbl;

    interface __x_ABI_C__FIVectorView_1_int
    {
        CONST_VTBL struct __x_ABI_C__FIVectorView_1_intVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIVectorView_1_int_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIVectorView_1_HSTRING_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIVectorView_1_HSTRING_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIVectorView_1_HSTRING __x_ABI_C__FIVectorView_1_HSTRING;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIVectorView_1_HSTRING;

    typedef struct __x_ABI_C__FIVectorView_1_HSTRINGVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIVectorView_1_HSTRING* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIVectorView_1_HSTRING* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIVectorView_1_HSTRING* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIVectorView_1_HSTRING* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIVectorView_1_HSTRING* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIVectorView_1_HSTRING* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* GetAt)(__x_ABI_C__FIVectorView_1_HSTRING* This,
        UINT32 index,
        HSTRING* result);
    HRESULT (STDMETHODCALLTYPE* get_Size)(__x_ABI_C__FIVectorView_1_HSTRING* This,
        UINT32* result);
    HRESULT (STDMETHODCALLTYPE* IndexOf)(__x_ABI_C__FIVectorView_1_HSTRING* This,
        HSTRING value,
        UINT32* index,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__x_ABI_C__FIVectorView_1_HSTRING* This,
        UINT32 startIndex,
        UINT32 itemsLength,
        HSTRING* items,
        UINT32* result);

        END_INTERFACE
    } __x_ABI_C__FIVectorView_1_HSTRINGVtbl;

    interface __x_ABI_C__FIVectorView_1_HSTRING
    {
        CONST_VTBL struct __x_ABI_C__FIVectorView_1_HSTRINGVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIVectorView_1_HSTRING_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIVectorView_1___x_ABI_CWindows__CDevices__CPointOfService__CPosPrinterRotation_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIVectorView_1___x_ABI_CWindows__CDevices__CPointOfService__CPosPrinterRotation_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CDevices__CPointOfService__CPosPrinterRotation __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CDevices__CPointOfService__CPosPrinterRotation;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CDevices__CPointOfService__CPosPrinterRotation;

    typedef struct __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CDevices__CPointOfService__CPosPrinterRotationVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CDevices__CPointOfService__CPosPrinterRotation* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CDevices__CPointOfService__CPosPrinterRotation* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CDevices__CPointOfService__CPosPrinterRotation* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CDevices__CPointOfService__CPosPrinterRotation* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CDevices__CPointOfService__CPosPrinterRotation* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CDevices__CPointOfService__CPosPrinterRotation* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* GetAt)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CDevices__CPointOfService__CPosPrinterRotation* This,
        UINT32 index,
        enum __x_ABI_CWindows_CDevices_CPointOfService_CPosPrinterRotation* result);
    HRESULT (STDMETHODCALLTYPE* get_Size)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CDevices__CPointOfService__CPosPrinterRotation* This,
        UINT32* result);
    HRESULT (STDMETHODCALLTYPE* IndexOf)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CDevices__CPointOfService__CPosPrinterRotation* This,
        enum __x_ABI_CWindows_CDevices_CPointOfService_CPosPrinterRotation value,
        UINT32* index,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CDevices__CPointOfService__CPosPrinterRotation* This,
        UINT32 startIndex,
        UINT32 itemsLength,
        enum __x_ABI_CWindows_CDevices_CPointOfService_CPosPrinterRotation* items,
        UINT32* result);

        END_INTERFACE
    } __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CDevices__CPointOfService__CPosPrinterRotationVtbl;

    interface __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CDevices__CPointOfService__CPosPrinterRotation
    {
        CONST_VTBL struct __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CDevices__CPointOfService__CPosPrinterRotationVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIVectorView_1___x_ABI_CWindows__CDevices__CPointOfService__CPosPrinterRotation_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIVectorView_1___x_ABI_CWindows__CDevices__CPointOfService__CSizeUInt32_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIVectorView_1___x_ABI_CWindows__CDevices__CPointOfService__CSizeUInt32_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CDevices__CPointOfService__CSizeUInt32 __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CDevices__CPointOfService__CSizeUInt32;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CDevices__CPointOfService__CSizeUInt32;

    typedef struct __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CDevices__CPointOfService__CSizeUInt32Vtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CDevices__CPointOfService__CSizeUInt32* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CDevices__CPointOfService__CSizeUInt32* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CDevices__CPointOfService__CSizeUInt32* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CDevices__CPointOfService__CSizeUInt32* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CDevices__CPointOfService__CSizeUInt32* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CDevices__CPointOfService__CSizeUInt32* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* GetAt)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CDevices__CPointOfService__CSizeUInt32* This,
        UINT32 index,
        struct __x_ABI_CWindows_CDevices_CPointOfService_CSizeUInt32* result);
    HRESULT (STDMETHODCALLTYPE* get_Size)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CDevices__CPointOfService__CSizeUInt32* This,
        UINT32* result);
    HRESULT (STDMETHODCALLTYPE* IndexOf)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CDevices__CPointOfService__CSizeUInt32* This,
        struct __x_ABI_CWindows_CDevices_CPointOfService_CSizeUInt32 value,
        UINT32* index,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CDevices__CPointOfService__CSizeUInt32* This,
        UINT32 startIndex,
        UINT32 itemsLength,
        struct __x_ABI_CWindows_CDevices_CPointOfService_CSizeUInt32* items,
        UINT32* result);

        END_INTERFACE
    } __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CDevices__CPointOfService__CSizeUInt32Vtbl;

    interface __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CDevices__CPointOfService__CSizeUInt32
    {
        CONST_VTBL struct __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CDevices__CPointOfService__CSizeUInt32Vtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIVectorView_1___x_ABI_CWindows__CDevices__CPointOfService__CSizeUInt32_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIVectorView_1___x_ABI_CWindows__CFoundation__CSize_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIVectorView_1___x_ABI_CWindows__CFoundation__CSize_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CFoundation__CSize __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CFoundation__CSize;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CFoundation__CSize;

    typedef struct __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CFoundation__CSizeVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CFoundation__CSize* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CFoundation__CSize* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CFoundation__CSize* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CFoundation__CSize* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CFoundation__CSize* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CFoundation__CSize* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* GetAt)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CFoundation__CSize* This,
        UINT32 index,
        struct __x_ABI_CWindows_CFoundation_CSize* result);
    HRESULT (STDMETHODCALLTYPE* get_Size)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CFoundation__CSize* This,
        UINT32* result);
    HRESULT (STDMETHODCALLTYPE* IndexOf)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CFoundation__CSize* This,
        struct __x_ABI_CWindows_CFoundation_CSize value,
        UINT32* index,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CFoundation__CSize* This,
        UINT32 startIndex,
        UINT32 itemsLength,
        struct __x_ABI_CWindows_CFoundation_CSize* items,
        UINT32* result);

        END_INTERFACE
    } __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CFoundation__CSizeVtbl;

    interface __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CFoundation__CSize
    {
        CONST_VTBL struct __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CFoundation__CSizeVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIVectorView_1___x_ABI_CWindows__CFoundation__CSize_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIEventHandler_1___x_ABI_CWindows__CDevices__CPointOfService__CClaimedBarcodeScanner_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIEventHandler_1___x_ABI_CWindows__CDevices__CPointOfService__CClaimedBarcodeScanner_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIEventHandler_1___x_ABI_CWindows__CDevices__CPointOfService__CClaimedBarcodeScanner __x_ABI_C__FIEventHandler_1___x_ABI_CWindows__CDevices__CPointOfService__CClaimedBarcodeScanner;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIEventHandler_1___x_ABI_CWindows__CDevices__CPointOfService__CClaimedBarcodeScanner;

    typedef struct __x_ABI_C__FIEventHandler_1___x_ABI_CWindows__CDevices__CPointOfService__CClaimedBarcodeScannerVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIEventHandler_1___x_ABI_CWindows__CDevices__CPointOfService__CClaimedBarcodeScanner* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIEventHandler_1___x_ABI_CWindows__CDevices__CPointOfService__CClaimedBarcodeScanner* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIEventHandler_1___x_ABI_CWindows__CDevices__CPointOfService__CClaimedBarcodeScanner* This);
        HRESULT (STDMETHODCALLTYPE* Invoke)(__x_ABI_C__FIEventHandler_1___x_ABI_CWindows__CDevices__CPointOfService__CClaimedBarcodeScanner* This,
        IInspectable* sender,
        __x_ABI_CWindows_CDevices_CPointOfService_CIClaimedBarcodeScanner* args);

        END_INTERFACE
    } __x_ABI_C__FIEventHandler_1___x_ABI_CWindows__CDevices__CPointOfService__CClaimedBarcodeScannerVtbl;

    interface __x_ABI_C__FIEventHandler_1___x_ABI_CWindows__CDevices__CPointOfService__CClaimedBarcodeScanner
    {
        CONST_VTBL struct __x_ABI_C__FIEventHandler_1___x_ABI_CWindows__CDevices__CPointOfService__CClaimedBarcodeScannerVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIEventHandler_1___x_ABI_CWindows__CDevices__CPointOfService__CClaimedBarcodeScanner_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIEventHandler_1___x_ABI_CWindows__CDevices__CPointOfService__CClaimedMagneticStripeReader_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIEventHandler_1___x_ABI_CWindows__CDevices__CPointOfService__CClaimedMagneticStripeReader_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIEventHandler_1___x_ABI_CWindows__CDevices__CPointOfService__CClaimedMagneticStripeReader __x_ABI_C__FIEventHandler_1___x_ABI_CWindows__CDevices__CPointOfService__CClaimedMagneticStripeReader;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIEventHandler_1___x_ABI_CWindows__CDevices__CPointOfService__CClaimedMagneticStripeReader;

    typedef struct __x_ABI_C__FIEventHandler_1___x_ABI_CWindows__CDevices__CPointOfService__CClaimedMagneticStripeReaderVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIEventHandler_1___x_ABI_CWindows__CDevices__CPointOfService__CClaimedMagneticStripeReader* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIEventHandler_1___x_ABI_CWindows__CDevices__CPointOfService__CClaimedMagneticStripeReader* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIEventHandler_1___x_ABI_CWindows__CDevices__CPointOfService__CClaimedMagneticStripeReader* This);
        HRESULT (STDMETHODCALLTYPE* Invoke)(__x_ABI_C__FIEventHandler_1___x_ABI_CWindows__CDevices__CPointOfService__CClaimedMagneticStripeReader* This,
        IInspectable* sender,
        __x_ABI_CWindows_CDevices_CPointOfService_CIClaimedMagneticStripeReader* args);

        END_INTERFACE
    } __x_ABI_C__FIEventHandler_1___x_ABI_CWindows__CDevices__CPointOfService__CClaimedMagneticStripeReaderVtbl;

    interface __x_ABI_C__FIEventHandler_1___x_ABI_CWindows__CDevices__CPointOfService__CClaimedMagneticStripeReader
    {
        CONST_VTBL struct __x_ABI_C__FIEventHandler_1___x_ABI_CWindows__CDevices__CPointOfService__CClaimedMagneticStripeReaderVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIEventHandler_1___x_ABI_CWindows__CDevices__CPointOfService__CClaimedMagneticStripeReader_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CDevices__CPointOfService__CBarcodeScanner___x_ABI_CWindows__CDevices__CPointOfService__CBarcodeScannerStatusUpdatedEventArgs_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CDevices__CPointOfService__CBarcodeScanner___x_ABI_CWindows__CDevices__CPointOfService__CBarcodeScannerStatusUpdatedEventArgs_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CDevices__CPointOfService__CBarcodeScanner___x_ABI_CWindows__CDevices__CPointOfService__CBarcodeScannerStatusUpdatedEventArgs __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CDevices__CPointOfService__CBarcodeScanner___x_ABI_CWindows__CDevices__CPointOfService__CBarcodeScannerStatusUpdatedEventArgs;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CDevices__CPointOfService__CBarcodeScanner___x_ABI_CWindows__CDevices__CPointOfService__CBarcodeScannerStatusUpdatedEventArgs;

    typedef struct __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CDevices__CPointOfService__CBarcodeScanner___x_ABI_CWindows__CDevices__CPointOfService__CBarcodeScannerStatusUpdatedEventArgsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CDevices__CPointOfService__CBarcodeScanner___x_ABI_CWindows__CDevices__CPointOfService__CBarcodeScannerStatusUpdatedEventArgs* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CDevices__CPointOfService__CBarcodeScanner___x_ABI_CWindows__CDevices__CPointOfService__CBarcodeScannerStatusUpdatedEventArgs* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CDevices__CPointOfService__CBarcodeScanner___x_ABI_CWindows__CDevices__CPointOfService__CBarcodeScannerStatusUpdatedEventArgs* This);
        HRESULT (STDMETHODCALLTYPE* Invoke)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CDevices__CPointOfService__CBarcodeScanner___x_ABI_CWindows__CDevices__CPointOfService__CBarcodeScannerStatusUpdatedEventArgs* This,
        __x_ABI_CWindows_CDevices_CPointOfService_CIBarcodeScanner* sender,
        __x_ABI_CWindows_CDevices_CPointOfService_CIBarcodeScannerStatusUpdatedEventArgs* args);

        END_INTERFACE
    } __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CDevices__CPointOfService__CBarcodeScanner___x_ABI_CWindows__CDevices__CPointOfService__CBarcodeScannerStatusUpdatedEventArgsVtbl;

    interface __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CDevices__CPointOfService__CBarcodeScanner___x_ABI_CWindows__CDevices__CPointOfService__CBarcodeScannerStatusUpdatedEventArgs
    {
        CONST_VTBL struct __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CDevices__CPointOfService__CBarcodeScanner___x_ABI_CWindows__CDevices__CPointOfService__CBarcodeScannerStatusUpdatedEventArgsVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CDevices__CPointOfService__CBarcodeScanner___x_ABI_CWindows__CDevices__CPointOfService__CBarcodeScannerStatusUpdatedEventArgs_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CDevices__CPointOfService__CCashDrawer___x_ABI_CWindows__CDevices__CPointOfService__CCashDrawerStatusUpdatedEventArgs_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CDevices__CPointOfService__CCashDrawer___x_ABI_CWindows__CDevices__CPointOfService__CCashDrawerStatusUpdatedEventArgs_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CDevices__CPointOfService__CCashDrawer___x_ABI_CWindows__CDevices__CPointOfService__CCashDrawerStatusUpdatedEventArgs __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CDevices__CPointOfService__CCashDrawer___x_ABI_CWindows__CDevices__CPointOfService__CCashDrawerStatusUpdatedEventArgs;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CDevices__CPointOfService__CCashDrawer___x_ABI_CWindows__CDevices__CPointOfService__CCashDrawerStatusUpdatedEventArgs;

    typedef struct __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CDevices__CPointOfService__CCashDrawer___x_ABI_CWindows__CDevices__CPointOfService__CCashDrawerStatusUpdatedEventArgsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CDevices__CPointOfService__CCashDrawer___x_ABI_CWindows__CDevices__CPointOfService__CCashDrawerStatusUpdatedEventArgs* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CDevices__CPointOfService__CCashDrawer___x_ABI_CWindows__CDevices__CPointOfService__CCashDrawerStatusUpdatedEventArgs* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CDevices__CPointOfService__CCashDrawer___x_ABI_CWindows__CDevices__CPointOfService__CCashDrawerStatusUpdatedEventArgs* This);
        HRESULT (STDMETHODCALLTYPE* Invoke)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CDevices__CPointOfService__CCashDrawer___x_ABI_CWindows__CDevices__CPointOfService__CCashDrawerStatusUpdatedEventArgs* This,
        __x_ABI_CWindows_CDevices_CPointOfService_CICashDrawer* sender,
        __x_ABI_CWindows_CDevices_CPointOfService_CICashDrawerStatusUpdatedEventArgs* args);

        END_INTERFACE
    } __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CDevices__CPointOfService__CCashDrawer___x_ABI_CWindows__CDevices__CPointOfService__CCashDrawerStatusUpdatedEventArgsVtbl;

    interface __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CDevices__CPointOfService__CCashDrawer___x_ABI_CWindows__CDevices__CPointOfService__CCashDrawerStatusUpdatedEventArgs
    {
        CONST_VTBL struct __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CDevices__CPointOfService__CCashDrawer___x_ABI_CWindows__CDevices__CPointOfService__CCashDrawerStatusUpdatedEventArgsVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CDevices__CPointOfService__CCashDrawer___x_ABI_CWindows__CDevices__CPointOfService__CCashDrawerStatusUpdatedEventArgs_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CDevices__CPointOfService__CCashDrawerCloseAlarm_IInspectable_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CDevices__CPointOfService__CCashDrawerCloseAlarm_IInspectable_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CDevices__CPointOfService__CCashDrawerCloseAlarm_IInspectable __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CDevices__CPointOfService__CCashDrawerCloseAlarm_IInspectable;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CDevices__CPointOfService__CCashDrawerCloseAlarm_IInspectable;

    typedef struct __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CDevices__CPointOfService__CCashDrawerCloseAlarm_IInspectableVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CDevices__CPointOfService__CCashDrawerCloseAlarm_IInspectable* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CDevices__CPointOfService__CCashDrawerCloseAlarm_IInspectable* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CDevices__CPointOfService__CCashDrawerCloseAlarm_IInspectable* This);
        HRESULT (STDMETHODCALLTYPE* Invoke)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CDevices__CPointOfService__CCashDrawerCloseAlarm_IInspectable* This,
        __x_ABI_CWindows_CDevices_CPointOfService_CICashDrawerCloseAlarm* sender,
        IInspectable* args);

        END_INTERFACE
    } __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CDevices__CPointOfService__CCashDrawerCloseAlarm_IInspectableVtbl;

    interface __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CDevices__CPointOfService__CCashDrawerCloseAlarm_IInspectable
    {
        CONST_VTBL struct __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CDevices__CPointOfService__CCashDrawerCloseAlarm_IInspectableVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CDevices__CPointOfService__CCashDrawerCloseAlarm_IInspectable_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CDevices__CPointOfService__CCashDrawerEventSource___x_ABI_CWindows__CDevices__CPointOfService__CCashDrawerClosedEventArgs_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CDevices__CPointOfService__CCashDrawerEventSource___x_ABI_CWindows__CDevices__CPointOfService__CCashDrawerClosedEventArgs_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CDevices__CPointOfService__CCashDrawerEventSource___x_ABI_CWindows__CDevices__CPointOfService__CCashDrawerClosedEventArgs __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CDevices__CPointOfService__CCashDrawerEventSource___x_ABI_CWindows__CDevices__CPointOfService__CCashDrawerClosedEventArgs;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CDevices__CPointOfService__CCashDrawerEventSource___x_ABI_CWindows__CDevices__CPointOfService__CCashDrawerClosedEventArgs;

    typedef struct __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CDevices__CPointOfService__CCashDrawerEventSource___x_ABI_CWindows__CDevices__CPointOfService__CCashDrawerClosedEventArgsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CDevices__CPointOfService__CCashDrawerEventSource___x_ABI_CWindows__CDevices__CPointOfService__CCashDrawerClosedEventArgs* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CDevices__CPointOfService__CCashDrawerEventSource___x_ABI_CWindows__CDevices__CPointOfService__CCashDrawerClosedEventArgs* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CDevices__CPointOfService__CCashDrawerEventSource___x_ABI_CWindows__CDevices__CPointOfService__CCashDrawerClosedEventArgs* This);
        HRESULT (STDMETHODCALLTYPE* Invoke)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CDevices__CPointOfService__CCashDrawerEventSource___x_ABI_CWindows__CDevices__CPointOfService__CCashDrawerClosedEventArgs* This,
        __x_ABI_CWindows_CDevices_CPointOfService_CICashDrawerEventSource* sender,
        __x_ABI_CWindows_CDevices_CPointOfService_CICashDrawerEventSourceEventArgs* args);

        END_INTERFACE
    } __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CDevices__CPointOfService__CCashDrawerEventSource___x_ABI_CWindows__CDevices__CPointOfService__CCashDrawerClosedEventArgsVtbl;

    interface __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CDevices__CPointOfService__CCashDrawerEventSource___x_ABI_CWindows__CDevices__CPointOfService__CCashDrawerClosedEventArgs
    {
        CONST_VTBL struct __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CDevices__CPointOfService__CCashDrawerEventSource___x_ABI_CWindows__CDevices__CPointOfService__CCashDrawerClosedEventArgsVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CDevices__CPointOfService__CCashDrawerEventSource___x_ABI_CWindows__CDevices__CPointOfService__CCashDrawerClosedEventArgs_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CDevices__CPointOfService__CCashDrawerEventSource___x_ABI_CWindows__CDevices__CPointOfService__CCashDrawerOpenedEventArgs_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CDevices__CPointOfService__CCashDrawerEventSource___x_ABI_CWindows__CDevices__CPointOfService__CCashDrawerOpenedEventArgs_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CDevices__CPointOfService__CCashDrawerEventSource___x_ABI_CWindows__CDevices__CPointOfService__CCashDrawerOpenedEventArgs __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CDevices__CPointOfService__CCashDrawerEventSource___x_ABI_CWindows__CDevices__CPointOfService__CCashDrawerOpenedEventArgs;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CDevices__CPointOfService__CCashDrawerEventSource___x_ABI_CWindows__CDevices__CPointOfService__CCashDrawerOpenedEventArgs;

    typedef struct __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CDevices__CPointOfService__CCashDrawerEventSource___x_ABI_CWindows__CDevices__CPointOfService__CCashDrawerOpenedEventArgsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CDevices__CPointOfService__CCashDrawerEventSource___x_ABI_CWindows__CDevices__CPointOfService__CCashDrawerOpenedEventArgs* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CDevices__CPointOfService__CCashDrawerEventSource___x_ABI_CWindows__CDevices__CPointOfService__CCashDrawerOpenedEventArgs* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CDevices__CPointOfService__CCashDrawerEventSource___x_ABI_CWindows__CDevices__CPointOfService__CCashDrawerOpenedEventArgs* This);
        HRESULT (STDMETHODCALLTYPE* Invoke)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CDevices__CPointOfService__CCashDrawerEventSource___x_ABI_CWindows__CDevices__CPointOfService__CCashDrawerOpenedEventArgs* This,
        __x_ABI_CWindows_CDevices_CPointOfService_CICashDrawerEventSource* sender,
        __x_ABI_CWindows_CDevices_CPointOfService_CICashDrawerEventSourceEventArgs* args);

        END_INTERFACE
    } __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CDevices__CPointOfService__CCashDrawerEventSource___x_ABI_CWindows__CDevices__CPointOfService__CCashDrawerOpenedEventArgsVtbl;

    interface __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CDevices__CPointOfService__CCashDrawerEventSource___x_ABI_CWindows__CDevices__CPointOfService__CCashDrawerOpenedEventArgs
    {
        CONST_VTBL struct __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CDevices__CPointOfService__CCashDrawerEventSource___x_ABI_CWindows__CDevices__CPointOfService__CCashDrawerOpenedEventArgsVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CDevices__CPointOfService__CCashDrawerEventSource___x_ABI_CWindows__CDevices__CPointOfService__CCashDrawerOpenedEventArgs_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CDevices__CPointOfService__CClaimedBarcodeScanner___x_ABI_CWindows__CDevices__CPointOfService__CBarcodeScannerDataReceivedEventArgs_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CDevices__CPointOfService__CClaimedBarcodeScanner___x_ABI_CWindows__CDevices__CPointOfService__CBarcodeScannerDataReceivedEventArgs_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CDevices__CPointOfService__CClaimedBarcodeScanner___x_ABI_CWindows__CDevices__CPointOfService__CBarcodeScannerDataReceivedEventArgs __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CDevices__CPointOfService__CClaimedBarcodeScanner___x_ABI_CWindows__CDevices__CPointOfService__CBarcodeScannerDataReceivedEventArgs;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CDevices__CPointOfService__CClaimedBarcodeScanner___x_ABI_CWindows__CDevices__CPointOfService__CBarcodeScannerDataReceivedEventArgs;

    typedef struct __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CDevices__CPointOfService__CClaimedBarcodeScanner___x_ABI_CWindows__CDevices__CPointOfService__CBarcodeScannerDataReceivedEventArgsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CDevices__CPointOfService__CClaimedBarcodeScanner___x_ABI_CWindows__CDevices__CPointOfService__CBarcodeScannerDataReceivedEventArgs* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CDevices__CPointOfService__CClaimedBarcodeScanner___x_ABI_CWindows__CDevices__CPointOfService__CBarcodeScannerDataReceivedEventArgs* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CDevices__CPointOfService__CClaimedBarcodeScanner___x_ABI_CWindows__CDevices__CPointOfService__CBarcodeScannerDataReceivedEventArgs* This);
        HRESULT (STDMETHODCALLTYPE* Invoke)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CDevices__CPointOfService__CClaimedBarcodeScanner___x_ABI_CWindows__CDevices__CPointOfService__CBarcodeScannerDataReceivedEventArgs* This,
        __x_ABI_CWindows_CDevices_CPointOfService_CIClaimedBarcodeScanner* sender,
        __x_ABI_CWindows_CDevices_CPointOfService_CIBarcodeScannerDataReceivedEventArgs* args);

        END_INTERFACE
    } __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CDevices__CPointOfService__CClaimedBarcodeScanner___x_ABI_CWindows__CDevices__CPointOfService__CBarcodeScannerDataReceivedEventArgsVtbl;

    interface __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CDevices__CPointOfService__CClaimedBarcodeScanner___x_ABI_CWindows__CDevices__CPointOfService__CBarcodeScannerDataReceivedEventArgs
    {
        CONST_VTBL struct __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CDevices__CPointOfService__CClaimedBarcodeScanner___x_ABI_CWindows__CDevices__CPointOfService__CBarcodeScannerDataReceivedEventArgsVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CDevices__CPointOfService__CClaimedBarcodeScanner___x_ABI_CWindows__CDevices__CPointOfService__CBarcodeScannerDataReceivedEventArgs_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CDevices__CPointOfService__CClaimedBarcodeScanner___x_ABI_CWindows__CDevices__CPointOfService__CBarcodeScannerErrorOccurredEventArgs_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CDevices__CPointOfService__CClaimedBarcodeScanner___x_ABI_CWindows__CDevices__CPointOfService__CBarcodeScannerErrorOccurredEventArgs_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CDevices__CPointOfService__CClaimedBarcodeScanner___x_ABI_CWindows__CDevices__CPointOfService__CBarcodeScannerErrorOccurredEventArgs __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CDevices__CPointOfService__CClaimedBarcodeScanner___x_ABI_CWindows__CDevices__CPointOfService__CBarcodeScannerErrorOccurredEventArgs;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CDevices__CPointOfService__CClaimedBarcodeScanner___x_ABI_CWindows__CDevices__CPointOfService__CBarcodeScannerErrorOccurredEventArgs;

    typedef struct __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CDevices__CPointOfService__CClaimedBarcodeScanner___x_ABI_CWindows__CDevices__CPointOfService__CBarcodeScannerErrorOccurredEventArgsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CDevices__CPointOfService__CClaimedBarcodeScanner___x_ABI_CWindows__CDevices__CPointOfService__CBarcodeScannerErrorOccurredEventArgs* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CDevices__CPointOfService__CClaimedBarcodeScanner___x_ABI_CWindows__CDevices__CPointOfService__CBarcodeScannerErrorOccurredEventArgs* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CDevices__CPointOfService__CClaimedBarcodeScanner___x_ABI_CWindows__CDevices__CPointOfService__CBarcodeScannerErrorOccurredEventArgs* This);
        HRESULT (STDMETHODCALLTYPE* Invoke)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CDevices__CPointOfService__CClaimedBarcodeScanner___x_ABI_CWindows__CDevices__CPointOfService__CBarcodeScannerErrorOccurredEventArgs* This,
        __x_ABI_CWindows_CDevices_CPointOfService_CIClaimedBarcodeScanner* sender,
        __x_ABI_CWindows_CDevices_CPointOfService_CIBarcodeScannerErrorOccurredEventArgs* args);

        END_INTERFACE
    } __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CDevices__CPointOfService__CClaimedBarcodeScanner___x_ABI_CWindows__CDevices__CPointOfService__CBarcodeScannerErrorOccurredEventArgsVtbl;

    interface __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CDevices__CPointOfService__CClaimedBarcodeScanner___x_ABI_CWindows__CDevices__CPointOfService__CBarcodeScannerErrorOccurredEventArgs
    {
        CONST_VTBL struct __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CDevices__CPointOfService__CClaimedBarcodeScanner___x_ABI_CWindows__CDevices__CPointOfService__CBarcodeScannerErrorOccurredEventArgsVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CDevices__CPointOfService__CClaimedBarcodeScanner___x_ABI_CWindows__CDevices__CPointOfService__CBarcodeScannerErrorOccurredEventArgs_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CDevices__CPointOfService__CClaimedBarcodeScanner___x_ABI_CWindows__CDevices__CPointOfService__CBarcodeScannerImagePreviewReceivedEventArgs_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CDevices__CPointOfService__CClaimedBarcodeScanner___x_ABI_CWindows__CDevices__CPointOfService__CBarcodeScannerImagePreviewReceivedEventArgs_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CDevices__CPointOfService__CClaimedBarcodeScanner___x_ABI_CWindows__CDevices__CPointOfService__CBarcodeScannerImagePreviewReceivedEventArgs __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CDevices__CPointOfService__CClaimedBarcodeScanner___x_ABI_CWindows__CDevices__CPointOfService__CBarcodeScannerImagePreviewReceivedEventArgs;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CDevices__CPointOfService__CClaimedBarcodeScanner___x_ABI_CWindows__CDevices__CPointOfService__CBarcodeScannerImagePreviewReceivedEventArgs;

    typedef struct __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CDevices__CPointOfService__CClaimedBarcodeScanner___x_ABI_CWindows__CDevices__CPointOfService__CBarcodeScannerImagePreviewReceivedEventArgsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CDevices__CPointOfService__CClaimedBarcodeScanner___x_ABI_CWindows__CDevices__CPointOfService__CBarcodeScannerImagePreviewReceivedEventArgs* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CDevices__CPointOfService__CClaimedBarcodeScanner___x_ABI_CWindows__CDevices__CPointOfService__CBarcodeScannerImagePreviewReceivedEventArgs* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CDevices__CPointOfService__CClaimedBarcodeScanner___x_ABI_CWindows__CDevices__CPointOfService__CBarcodeScannerImagePreviewReceivedEventArgs* This);
        HRESULT (STDMETHODCALLTYPE* Invoke)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CDevices__CPointOfService__CClaimedBarcodeScanner___x_ABI_CWindows__CDevices__CPointOfService__CBarcodeScannerImagePreviewReceivedEventArgs* This,
        __x_ABI_CWindows_CDevices_CPointOfService_CIClaimedBarcodeScanner* sender,
        __x_ABI_CWindows_CDevices_CPointOfService_CIBarcodeScannerImagePreviewReceivedEventArgs* args);

        END_INTERFACE
    } __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CDevices__CPointOfService__CClaimedBarcodeScanner___x_ABI_CWindows__CDevices__CPointOfService__CBarcodeScannerImagePreviewReceivedEventArgsVtbl;

    interface __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CDevices__CPointOfService__CClaimedBarcodeScanner___x_ABI_CWindows__CDevices__CPointOfService__CBarcodeScannerImagePreviewReceivedEventArgs
    {
        CONST_VTBL struct __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CDevices__CPointOfService__CClaimedBarcodeScanner___x_ABI_CWindows__CDevices__CPointOfService__CBarcodeScannerImagePreviewReceivedEventArgsVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CDevices__CPointOfService__CClaimedBarcodeScanner___x_ABI_CWindows__CDevices__CPointOfService__CBarcodeScannerImagePreviewReceivedEventArgs_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CDevices__CPointOfService__CClaimedBarcodeScanner___x_ABI_CWindows__CDevices__CPointOfService__CClaimedBarcodeScannerClosedEventArgs_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CDevices__CPointOfService__CClaimedBarcodeScanner___x_ABI_CWindows__CDevices__CPointOfService__CClaimedBarcodeScannerClosedEventArgs_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CDevices__CPointOfService__CClaimedBarcodeScanner___x_ABI_CWindows__CDevices__CPointOfService__CClaimedBarcodeScannerClosedEventArgs __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CDevices__CPointOfService__CClaimedBarcodeScanner___x_ABI_CWindows__CDevices__CPointOfService__CClaimedBarcodeScannerClosedEventArgs;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CDevices__CPointOfService__CClaimedBarcodeScanner___x_ABI_CWindows__CDevices__CPointOfService__CClaimedBarcodeScannerClosedEventArgs;

    typedef struct __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CDevices__CPointOfService__CClaimedBarcodeScanner___x_ABI_CWindows__CDevices__CPointOfService__CClaimedBarcodeScannerClosedEventArgsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CDevices__CPointOfService__CClaimedBarcodeScanner___x_ABI_CWindows__CDevices__CPointOfService__CClaimedBarcodeScannerClosedEventArgs* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CDevices__CPointOfService__CClaimedBarcodeScanner___x_ABI_CWindows__CDevices__CPointOfService__CClaimedBarcodeScannerClosedEventArgs* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CDevices__CPointOfService__CClaimedBarcodeScanner___x_ABI_CWindows__CDevices__CPointOfService__CClaimedBarcodeScannerClosedEventArgs* This);
        HRESULT (STDMETHODCALLTYPE* Invoke)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CDevices__CPointOfService__CClaimedBarcodeScanner___x_ABI_CWindows__CDevices__CPointOfService__CClaimedBarcodeScannerClosedEventArgs* This,
        __x_ABI_CWindows_CDevices_CPointOfService_CIClaimedBarcodeScanner* sender,
        __x_ABI_CWindows_CDevices_CPointOfService_CIClaimedBarcodeScannerClosedEventArgs* args);

        END_INTERFACE
    } __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CDevices__CPointOfService__CClaimedBarcodeScanner___x_ABI_CWindows__CDevices__CPointOfService__CClaimedBarcodeScannerClosedEventArgsVtbl;

    interface __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CDevices__CPointOfService__CClaimedBarcodeScanner___x_ABI_CWindows__CDevices__CPointOfService__CClaimedBarcodeScannerClosedEventArgs
    {
        CONST_VTBL struct __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CDevices__CPointOfService__CClaimedBarcodeScanner___x_ABI_CWindows__CDevices__CPointOfService__CClaimedBarcodeScannerClosedEventArgsVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CDevices__CPointOfService__CClaimedBarcodeScanner___x_ABI_CWindows__CDevices__CPointOfService__CClaimedBarcodeScannerClosedEventArgs_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CDevices__CPointOfService__CClaimedCashDrawer_IInspectable_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CDevices__CPointOfService__CClaimedCashDrawer_IInspectable_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CDevices__CPointOfService__CClaimedCashDrawer_IInspectable __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CDevices__CPointOfService__CClaimedCashDrawer_IInspectable;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CDevices__CPointOfService__CClaimedCashDrawer_IInspectable;

    typedef struct __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CDevices__CPointOfService__CClaimedCashDrawer_IInspectableVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CDevices__CPointOfService__CClaimedCashDrawer_IInspectable* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CDevices__CPointOfService__CClaimedCashDrawer_IInspectable* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CDevices__CPointOfService__CClaimedCashDrawer_IInspectable* This);
        HRESULT (STDMETHODCALLTYPE* Invoke)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CDevices__CPointOfService__CClaimedCashDrawer_IInspectable* This,
        __x_ABI_CWindows_CDevices_CPointOfService_CIClaimedCashDrawer* sender,
        IInspectable* args);

        END_INTERFACE
    } __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CDevices__CPointOfService__CClaimedCashDrawer_IInspectableVtbl;

    interface __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CDevices__CPointOfService__CClaimedCashDrawer_IInspectable
    {
        CONST_VTBL struct __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CDevices__CPointOfService__CClaimedCashDrawer_IInspectableVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CDevices__CPointOfService__CClaimedCashDrawer_IInspectable_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CDevices__CPointOfService__CClaimedCashDrawer___x_ABI_CWindows__CDevices__CPointOfService__CClaimedCashDrawerClosedEventArgs_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CDevices__CPointOfService__CClaimedCashDrawer___x_ABI_CWindows__CDevices__CPointOfService__CClaimedCashDrawerClosedEventArgs_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CDevices__CPointOfService__CClaimedCashDrawer___x_ABI_CWindows__CDevices__CPointOfService__CClaimedCashDrawerClosedEventArgs __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CDevices__CPointOfService__CClaimedCashDrawer___x_ABI_CWindows__CDevices__CPointOfService__CClaimedCashDrawerClosedEventArgs;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CDevices__CPointOfService__CClaimedCashDrawer___x_ABI_CWindows__CDevices__CPointOfService__CClaimedCashDrawerClosedEventArgs;

    typedef struct __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CDevices__CPointOfService__CClaimedCashDrawer___x_ABI_CWindows__CDevices__CPointOfService__CClaimedCashDrawerClosedEventArgsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CDevices__CPointOfService__CClaimedCashDrawer___x_ABI_CWindows__CDevices__CPointOfService__CClaimedCashDrawerClosedEventArgs* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CDevices__CPointOfService__CClaimedCashDrawer___x_ABI_CWindows__CDevices__CPointOfService__CClaimedCashDrawerClosedEventArgs* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CDevices__CPointOfService__CClaimedCashDrawer___x_ABI_CWindows__CDevices__CPointOfService__CClaimedCashDrawerClosedEventArgs* This);
        HRESULT (STDMETHODCALLTYPE* Invoke)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CDevices__CPointOfService__CClaimedCashDrawer___x_ABI_CWindows__CDevices__CPointOfService__CClaimedCashDrawerClosedEventArgs* This,
        __x_ABI_CWindows_CDevices_CPointOfService_CIClaimedCashDrawer* sender,
        __x_ABI_CWindows_CDevices_CPointOfService_CIClaimedCashDrawerClosedEventArgs* args);

        END_INTERFACE
    } __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CDevices__CPointOfService__CClaimedCashDrawer___x_ABI_CWindows__CDevices__CPointOfService__CClaimedCashDrawerClosedEventArgsVtbl;

    interface __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CDevices__CPointOfService__CClaimedCashDrawer___x_ABI_CWindows__CDevices__CPointOfService__CClaimedCashDrawerClosedEventArgs
    {
        CONST_VTBL struct __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CDevices__CPointOfService__CClaimedCashDrawer___x_ABI_CWindows__CDevices__CPointOfService__CClaimedCashDrawerClosedEventArgsVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CDevices__CPointOfService__CClaimedCashDrawer___x_ABI_CWindows__CDevices__CPointOfService__CClaimedCashDrawerClosedEventArgs_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CDevices__CPointOfService__CClaimedLineDisplay_IInspectable_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CDevices__CPointOfService__CClaimedLineDisplay_IInspectable_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CDevices__CPointOfService__CClaimedLineDisplay_IInspectable __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CDevices__CPointOfService__CClaimedLineDisplay_IInspectable;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CDevices__CPointOfService__CClaimedLineDisplay_IInspectable;

    typedef struct __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CDevices__CPointOfService__CClaimedLineDisplay_IInspectableVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CDevices__CPointOfService__CClaimedLineDisplay_IInspectable* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CDevices__CPointOfService__CClaimedLineDisplay_IInspectable* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CDevices__CPointOfService__CClaimedLineDisplay_IInspectable* This);
        HRESULT (STDMETHODCALLTYPE* Invoke)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CDevices__CPointOfService__CClaimedLineDisplay_IInspectable* This,
        __x_ABI_CWindows_CDevices_CPointOfService_CIClaimedLineDisplay* sender,
        IInspectable* args);

        END_INTERFACE
    } __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CDevices__CPointOfService__CClaimedLineDisplay_IInspectableVtbl;

    interface __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CDevices__CPointOfService__CClaimedLineDisplay_IInspectable
    {
        CONST_VTBL struct __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CDevices__CPointOfService__CClaimedLineDisplay_IInspectableVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CDevices__CPointOfService__CClaimedLineDisplay_IInspectable_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CDevices__CPointOfService__CClaimedLineDisplay___x_ABI_CWindows__CDevices__CPointOfService__CClaimedLineDisplayClosedEventArgs_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CDevices__CPointOfService__CClaimedLineDisplay___x_ABI_CWindows__CDevices__CPointOfService__CClaimedLineDisplayClosedEventArgs_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CDevices__CPointOfService__CClaimedLineDisplay___x_ABI_CWindows__CDevices__CPointOfService__CClaimedLineDisplayClosedEventArgs __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CDevices__CPointOfService__CClaimedLineDisplay___x_ABI_CWindows__CDevices__CPointOfService__CClaimedLineDisplayClosedEventArgs;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CDevices__CPointOfService__CClaimedLineDisplay___x_ABI_CWindows__CDevices__CPointOfService__CClaimedLineDisplayClosedEventArgs;

    typedef struct __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CDevices__CPointOfService__CClaimedLineDisplay___x_ABI_CWindows__CDevices__CPointOfService__CClaimedLineDisplayClosedEventArgsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CDevices__CPointOfService__CClaimedLineDisplay___x_ABI_CWindows__CDevices__CPointOfService__CClaimedLineDisplayClosedEventArgs* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CDevices__CPointOfService__CClaimedLineDisplay___x_ABI_CWindows__CDevices__CPointOfService__CClaimedLineDisplayClosedEventArgs* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CDevices__CPointOfService__CClaimedLineDisplay___x_ABI_CWindows__CDevices__CPointOfService__CClaimedLineDisplayClosedEventArgs* This);
        HRESULT (STDMETHODCALLTYPE* Invoke)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CDevices__CPointOfService__CClaimedLineDisplay___x_ABI_CWindows__CDevices__CPointOfService__CClaimedLineDisplayClosedEventArgs* This,
        __x_ABI_CWindows_CDevices_CPointOfService_CIClaimedLineDisplay* sender,
        __x_ABI_CWindows_CDevices_CPointOfService_CIClaimedLineDisplayClosedEventArgs* args);

        END_INTERFACE
    } __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CDevices__CPointOfService__CClaimedLineDisplay___x_ABI_CWindows__CDevices__CPointOfService__CClaimedLineDisplayClosedEventArgsVtbl;

    interface __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CDevices__CPointOfService__CClaimedLineDisplay___x_ABI_CWindows__CDevices__CPointOfService__CClaimedLineDisplayClosedEventArgs
    {
        CONST_VTBL struct __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CDevices__CPointOfService__CClaimedLineDisplay___x_ABI_CWindows__CDevices__CPointOfService__CClaimedLineDisplayClosedEventArgsVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CDevices__CPointOfService__CClaimedLineDisplay___x_ABI_CWindows__CDevices__CPointOfService__CClaimedLineDisplayClosedEventArgs_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CDevices__CPointOfService__CClaimedLineDisplay___x_ABI_CWindows__CDevices__CPointOfService__CLineDisplayStatusUpdatedEventArgs_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CDevices__CPointOfService__CClaimedLineDisplay___x_ABI_CWindows__CDevices__CPointOfService__CLineDisplayStatusUpdatedEventArgs_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CDevices__CPointOfService__CClaimedLineDisplay___x_ABI_CWindows__CDevices__CPointOfService__CLineDisplayStatusUpdatedEventArgs __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CDevices__CPointOfService__CClaimedLineDisplay___x_ABI_CWindows__CDevices__CPointOfService__CLineDisplayStatusUpdatedEventArgs;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CDevices__CPointOfService__CClaimedLineDisplay___x_ABI_CWindows__CDevices__CPointOfService__CLineDisplayStatusUpdatedEventArgs;

    typedef struct __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CDevices__CPointOfService__CClaimedLineDisplay___x_ABI_CWindows__CDevices__CPointOfService__CLineDisplayStatusUpdatedEventArgsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CDevices__CPointOfService__CClaimedLineDisplay___x_ABI_CWindows__CDevices__CPointOfService__CLineDisplayStatusUpdatedEventArgs* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CDevices__CPointOfService__CClaimedLineDisplay___x_ABI_CWindows__CDevices__CPointOfService__CLineDisplayStatusUpdatedEventArgs* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CDevices__CPointOfService__CClaimedLineDisplay___x_ABI_CWindows__CDevices__CPointOfService__CLineDisplayStatusUpdatedEventArgs* This);
        HRESULT (STDMETHODCALLTYPE* Invoke)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CDevices__CPointOfService__CClaimedLineDisplay___x_ABI_CWindows__CDevices__CPointOfService__CLineDisplayStatusUpdatedEventArgs* This,
        __x_ABI_CWindows_CDevices_CPointOfService_CIClaimedLineDisplay* sender,
        __x_ABI_CWindows_CDevices_CPointOfService_CILineDisplayStatusUpdatedEventArgs* args);

        END_INTERFACE
    } __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CDevices__CPointOfService__CClaimedLineDisplay___x_ABI_CWindows__CDevices__CPointOfService__CLineDisplayStatusUpdatedEventArgsVtbl;

    interface __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CDevices__CPointOfService__CClaimedLineDisplay___x_ABI_CWindows__CDevices__CPointOfService__CLineDisplayStatusUpdatedEventArgs
    {
        CONST_VTBL struct __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CDevices__CPointOfService__CClaimedLineDisplay___x_ABI_CWindows__CDevices__CPointOfService__CLineDisplayStatusUpdatedEventArgsVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CDevices__CPointOfService__CClaimedLineDisplay___x_ABI_CWindows__CDevices__CPointOfService__CLineDisplayStatusUpdatedEventArgs_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CDevices__CPointOfService__CClaimedMagneticStripeReader___x_ABI_CWindows__CDevices__CPointOfService__CClaimedMagneticStripeReaderClosedEventArgs_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CDevices__CPointOfService__CClaimedMagneticStripeReader___x_ABI_CWindows__CDevices__CPointOfService__CClaimedMagneticStripeReaderClosedEventArgs_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CDevices__CPointOfService__CClaimedMagneticStripeReader___x_ABI_CWindows__CDevices__CPointOfService__CClaimedMagneticStripeReaderClosedEventArgs __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CDevices__CPointOfService__CClaimedMagneticStripeReader___x_ABI_CWindows__CDevices__CPointOfService__CClaimedMagneticStripeReaderClosedEventArgs;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CDevices__CPointOfService__CClaimedMagneticStripeReader___x_ABI_CWindows__CDevices__CPointOfService__CClaimedMagneticStripeReaderClosedEventArgs;

    typedef struct __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CDevices__CPointOfService__CClaimedMagneticStripeReader___x_ABI_CWindows__CDevices__CPointOfService__CClaimedMagneticStripeReaderClosedEventArgsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CDevices__CPointOfService__CClaimedMagneticStripeReader___x_ABI_CWindows__CDevices__CPointOfService__CClaimedMagneticStripeReaderClosedEventArgs* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CDevices__CPointOfService__CClaimedMagneticStripeReader___x_ABI_CWindows__CDevices__CPointOfService__CClaimedMagneticStripeReaderClosedEventArgs* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CDevices__CPointOfService__CClaimedMagneticStripeReader___x_ABI_CWindows__CDevices__CPointOfService__CClaimedMagneticStripeReaderClosedEventArgs* This);
        HRESULT (STDMETHODCALLTYPE* Invoke)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CDevices__CPointOfService__CClaimedMagneticStripeReader___x_ABI_CWindows__CDevices__CPointOfService__CClaimedMagneticStripeReaderClosedEventArgs* This,
        __x_ABI_CWindows_CDevices_CPointOfService_CIClaimedMagneticStripeReader* sender,
        __x_ABI_CWindows_CDevices_CPointOfService_CIClaimedMagneticStripeReaderClosedEventArgs* args);

        END_INTERFACE
    } __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CDevices__CPointOfService__CClaimedMagneticStripeReader___x_ABI_CWindows__CDevices__CPointOfService__CClaimedMagneticStripeReaderClosedEventArgsVtbl;

    interface __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CDevices__CPointOfService__CClaimedMagneticStripeReader___x_ABI_CWindows__CDevices__CPointOfService__CClaimedMagneticStripeReaderClosedEventArgs
    {
        CONST_VTBL struct __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CDevices__CPointOfService__CClaimedMagneticStripeReader___x_ABI_CWindows__CDevices__CPointOfService__CClaimedMagneticStripeReaderClosedEventArgsVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CDevices__CPointOfService__CClaimedMagneticStripeReader___x_ABI_CWindows__CDevices__CPointOfService__CClaimedMagneticStripeReaderClosedEventArgs_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CDevices__CPointOfService__CClaimedMagneticStripeReader___x_ABI_CWindows__CDevices__CPointOfService__CMagneticStripeReaderAamvaCardDataReceivedEventArgs_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CDevices__CPointOfService__CClaimedMagneticStripeReader___x_ABI_CWindows__CDevices__CPointOfService__CMagneticStripeReaderAamvaCardDataReceivedEventArgs_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CDevices__CPointOfService__CClaimedMagneticStripeReader___x_ABI_CWindows__CDevices__CPointOfService__CMagneticStripeReaderAamvaCardDataReceivedEventArgs __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CDevices__CPointOfService__CClaimedMagneticStripeReader___x_ABI_CWindows__CDevices__CPointOfService__CMagneticStripeReaderAamvaCardDataReceivedEventArgs;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CDevices__CPointOfService__CClaimedMagneticStripeReader___x_ABI_CWindows__CDevices__CPointOfService__CMagneticStripeReaderAamvaCardDataReceivedEventArgs;

    typedef struct __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CDevices__CPointOfService__CClaimedMagneticStripeReader___x_ABI_CWindows__CDevices__CPointOfService__CMagneticStripeReaderAamvaCardDataReceivedEventArgsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CDevices__CPointOfService__CClaimedMagneticStripeReader___x_ABI_CWindows__CDevices__CPointOfService__CMagneticStripeReaderAamvaCardDataReceivedEventArgs* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CDevices__CPointOfService__CClaimedMagneticStripeReader___x_ABI_CWindows__CDevices__CPointOfService__CMagneticStripeReaderAamvaCardDataReceivedEventArgs* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CDevices__CPointOfService__CClaimedMagneticStripeReader___x_ABI_CWindows__CDevices__CPointOfService__CMagneticStripeReaderAamvaCardDataReceivedEventArgs* This);
        HRESULT (STDMETHODCALLTYPE* Invoke)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CDevices__CPointOfService__CClaimedMagneticStripeReader___x_ABI_CWindows__CDevices__CPointOfService__CMagneticStripeReaderAamvaCardDataReceivedEventArgs* This,
        __x_ABI_CWindows_CDevices_CPointOfService_CIClaimedMagneticStripeReader* sender,
        __x_ABI_CWindows_CDevices_CPointOfService_CIMagneticStripeReaderAamvaCardDataReceivedEventArgs* args);

        END_INTERFACE
    } __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CDevices__CPointOfService__CClaimedMagneticStripeReader___x_ABI_CWindows__CDevices__CPointOfService__CMagneticStripeReaderAamvaCardDataReceivedEventArgsVtbl;

    interface __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CDevices__CPointOfService__CClaimedMagneticStripeReader___x_ABI_CWindows__CDevices__CPointOfService__CMagneticStripeReaderAamvaCardDataReceivedEventArgs
    {
        CONST_VTBL struct __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CDevices__CPointOfService__CClaimedMagneticStripeReader___x_ABI_CWindows__CDevices__CPointOfService__CMagneticStripeReaderAamvaCardDataReceivedEventArgsVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CDevices__CPointOfService__CClaimedMagneticStripeReader___x_ABI_CWindows__CDevices__CPointOfService__CMagneticStripeReaderAamvaCardDataReceivedEventArgs_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CDevices__CPointOfService__CClaimedMagneticStripeReader___x_ABI_CWindows__CDevices__CPointOfService__CMagneticStripeReaderBankCardDataReceivedEventArgs_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CDevices__CPointOfService__CClaimedMagneticStripeReader___x_ABI_CWindows__CDevices__CPointOfService__CMagneticStripeReaderBankCardDataReceivedEventArgs_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CDevices__CPointOfService__CClaimedMagneticStripeReader___x_ABI_CWindows__CDevices__CPointOfService__CMagneticStripeReaderBankCardDataReceivedEventArgs __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CDevices__CPointOfService__CClaimedMagneticStripeReader___x_ABI_CWindows__CDevices__CPointOfService__CMagneticStripeReaderBankCardDataReceivedEventArgs;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CDevices__CPointOfService__CClaimedMagneticStripeReader___x_ABI_CWindows__CDevices__CPointOfService__CMagneticStripeReaderBankCardDataReceivedEventArgs;

    typedef struct __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CDevices__CPointOfService__CClaimedMagneticStripeReader___x_ABI_CWindows__CDevices__CPointOfService__CMagneticStripeReaderBankCardDataReceivedEventArgsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CDevices__CPointOfService__CClaimedMagneticStripeReader___x_ABI_CWindows__CDevices__CPointOfService__CMagneticStripeReaderBankCardDataReceivedEventArgs* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CDevices__CPointOfService__CClaimedMagneticStripeReader___x_ABI_CWindows__CDevices__CPointOfService__CMagneticStripeReaderBankCardDataReceivedEventArgs* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CDevices__CPointOfService__CClaimedMagneticStripeReader___x_ABI_CWindows__CDevices__CPointOfService__CMagneticStripeReaderBankCardDataReceivedEventArgs* This);
        HRESULT (STDMETHODCALLTYPE* Invoke)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CDevices__CPointOfService__CClaimedMagneticStripeReader___x_ABI_CWindows__CDevices__CPointOfService__CMagneticStripeReaderBankCardDataReceivedEventArgs* This,
        __x_ABI_CWindows_CDevices_CPointOfService_CIClaimedMagneticStripeReader* sender,
        __x_ABI_CWindows_CDevices_CPointOfService_CIMagneticStripeReaderBankCardDataReceivedEventArgs* args);

        END_INTERFACE
    } __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CDevices__CPointOfService__CClaimedMagneticStripeReader___x_ABI_CWindows__CDevices__CPointOfService__CMagneticStripeReaderBankCardDataReceivedEventArgsVtbl;

    interface __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CDevices__CPointOfService__CClaimedMagneticStripeReader___x_ABI_CWindows__CDevices__CPointOfService__CMagneticStripeReaderBankCardDataReceivedEventArgs
    {
        CONST_VTBL struct __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CDevices__CPointOfService__CClaimedMagneticStripeReader___x_ABI_CWindows__CDevices__CPointOfService__CMagneticStripeReaderBankCardDataReceivedEventArgsVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CDevices__CPointOfService__CClaimedMagneticStripeReader___x_ABI_CWindows__CDevices__CPointOfService__CMagneticStripeReaderBankCardDataReceivedEventArgs_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CDevices__CPointOfService__CClaimedMagneticStripeReader___x_ABI_CWindows__CDevices__CPointOfService__CMagneticStripeReaderErrorOccurredEventArgs_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CDevices__CPointOfService__CClaimedMagneticStripeReader___x_ABI_CWindows__CDevices__CPointOfService__CMagneticStripeReaderErrorOccurredEventArgs_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CDevices__CPointOfService__CClaimedMagneticStripeReader___x_ABI_CWindows__CDevices__CPointOfService__CMagneticStripeReaderErrorOccurredEventArgs __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CDevices__CPointOfService__CClaimedMagneticStripeReader___x_ABI_CWindows__CDevices__CPointOfService__CMagneticStripeReaderErrorOccurredEventArgs;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CDevices__CPointOfService__CClaimedMagneticStripeReader___x_ABI_CWindows__CDevices__CPointOfService__CMagneticStripeReaderErrorOccurredEventArgs;

    typedef struct __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CDevices__CPointOfService__CClaimedMagneticStripeReader___x_ABI_CWindows__CDevices__CPointOfService__CMagneticStripeReaderErrorOccurredEventArgsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CDevices__CPointOfService__CClaimedMagneticStripeReader___x_ABI_CWindows__CDevices__CPointOfService__CMagneticStripeReaderErrorOccurredEventArgs* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CDevices__CPointOfService__CClaimedMagneticStripeReader___x_ABI_CWindows__CDevices__CPointOfService__CMagneticStripeReaderErrorOccurredEventArgs* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CDevices__CPointOfService__CClaimedMagneticStripeReader___x_ABI_CWindows__CDevices__CPointOfService__CMagneticStripeReaderErrorOccurredEventArgs* This);
        HRESULT (STDMETHODCALLTYPE* Invoke)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CDevices__CPointOfService__CClaimedMagneticStripeReader___x_ABI_CWindows__CDevices__CPointOfService__CMagneticStripeReaderErrorOccurredEventArgs* This,
        __x_ABI_CWindows_CDevices_CPointOfService_CIClaimedMagneticStripeReader* sender,
        __x_ABI_CWindows_CDevices_CPointOfService_CIMagneticStripeReaderErrorOccurredEventArgs* args);

        END_INTERFACE
    } __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CDevices__CPointOfService__CClaimedMagneticStripeReader___x_ABI_CWindows__CDevices__CPointOfService__CMagneticStripeReaderErrorOccurredEventArgsVtbl;

    interface __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CDevices__CPointOfService__CClaimedMagneticStripeReader___x_ABI_CWindows__CDevices__CPointOfService__CMagneticStripeReaderErrorOccurredEventArgs
    {
        CONST_VTBL struct __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CDevices__CPointOfService__CClaimedMagneticStripeReader___x_ABI_CWindows__CDevices__CPointOfService__CMagneticStripeReaderErrorOccurredEventArgsVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CDevices__CPointOfService__CClaimedMagneticStripeReader___x_ABI_CWindows__CDevices__CPointOfService__CMagneticStripeReaderErrorOccurredEventArgs_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CDevices__CPointOfService__CClaimedMagneticStripeReader___x_ABI_CWindows__CDevices__CPointOfService__CMagneticStripeReaderVendorSpecificCardDataReceivedEventArgs_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CDevices__CPointOfService__CClaimedMagneticStripeReader___x_ABI_CWindows__CDevices__CPointOfService__CMagneticStripeReaderVendorSpecificCardDataReceivedEventArgs_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CDevices__CPointOfService__CClaimedMagneticStripeReader___x_ABI_CWindows__CDevices__CPointOfService__CMagneticStripeReaderVendorSpecificCardDataReceivedEventArgs __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CDevices__CPointOfService__CClaimedMagneticStripeReader___x_ABI_CWindows__CDevices__CPointOfService__CMagneticStripeReaderVendorSpecificCardDataReceivedEventArgs;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CDevices__CPointOfService__CClaimedMagneticStripeReader___x_ABI_CWindows__CDevices__CPointOfService__CMagneticStripeReaderVendorSpecificCardDataReceivedEventArgs;

    typedef struct __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CDevices__CPointOfService__CClaimedMagneticStripeReader___x_ABI_CWindows__CDevices__CPointOfService__CMagneticStripeReaderVendorSpecificCardDataReceivedEventArgsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CDevices__CPointOfService__CClaimedMagneticStripeReader___x_ABI_CWindows__CDevices__CPointOfService__CMagneticStripeReaderVendorSpecificCardDataReceivedEventArgs* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CDevices__CPointOfService__CClaimedMagneticStripeReader___x_ABI_CWindows__CDevices__CPointOfService__CMagneticStripeReaderVendorSpecificCardDataReceivedEventArgs* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CDevices__CPointOfService__CClaimedMagneticStripeReader___x_ABI_CWindows__CDevices__CPointOfService__CMagneticStripeReaderVendorSpecificCardDataReceivedEventArgs* This);
        HRESULT (STDMETHODCALLTYPE* Invoke)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CDevices__CPointOfService__CClaimedMagneticStripeReader___x_ABI_CWindows__CDevices__CPointOfService__CMagneticStripeReaderVendorSpecificCardDataReceivedEventArgs* This,
        __x_ABI_CWindows_CDevices_CPointOfService_CIClaimedMagneticStripeReader* sender,
        __x_ABI_CWindows_CDevices_CPointOfService_CIMagneticStripeReaderVendorSpecificCardDataReceivedEventArgs* args);

        END_INTERFACE
    } __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CDevices__CPointOfService__CClaimedMagneticStripeReader___x_ABI_CWindows__CDevices__CPointOfService__CMagneticStripeReaderVendorSpecificCardDataReceivedEventArgsVtbl;

    interface __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CDevices__CPointOfService__CClaimedMagneticStripeReader___x_ABI_CWindows__CDevices__CPointOfService__CMagneticStripeReaderVendorSpecificCardDataReceivedEventArgs
    {
        CONST_VTBL struct __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CDevices__CPointOfService__CClaimedMagneticStripeReader___x_ABI_CWindows__CDevices__CPointOfService__CMagneticStripeReaderVendorSpecificCardDataReceivedEventArgsVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CDevices__CPointOfService__CClaimedMagneticStripeReader___x_ABI_CWindows__CDevices__CPointOfService__CMagneticStripeReaderVendorSpecificCardDataReceivedEventArgs_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CDevices__CPointOfService__CClaimedPosPrinter___x_ABI_CWindows__CDevices__CPointOfService__CClaimedPosPrinterClosedEventArgs_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CDevices__CPointOfService__CClaimedPosPrinter___x_ABI_CWindows__CDevices__CPointOfService__CClaimedPosPrinterClosedEventArgs_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CDevices__CPointOfService__CClaimedPosPrinter___x_ABI_CWindows__CDevices__CPointOfService__CClaimedPosPrinterClosedEventArgs __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CDevices__CPointOfService__CClaimedPosPrinter___x_ABI_CWindows__CDevices__CPointOfService__CClaimedPosPrinterClosedEventArgs;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CDevices__CPointOfService__CClaimedPosPrinter___x_ABI_CWindows__CDevices__CPointOfService__CClaimedPosPrinterClosedEventArgs;

    typedef struct __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CDevices__CPointOfService__CClaimedPosPrinter___x_ABI_CWindows__CDevices__CPointOfService__CClaimedPosPrinterClosedEventArgsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CDevices__CPointOfService__CClaimedPosPrinter___x_ABI_CWindows__CDevices__CPointOfService__CClaimedPosPrinterClosedEventArgs* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CDevices__CPointOfService__CClaimedPosPrinter___x_ABI_CWindows__CDevices__CPointOfService__CClaimedPosPrinterClosedEventArgs* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CDevices__CPointOfService__CClaimedPosPrinter___x_ABI_CWindows__CDevices__CPointOfService__CClaimedPosPrinterClosedEventArgs* This);
        HRESULT (STDMETHODCALLTYPE* Invoke)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CDevices__CPointOfService__CClaimedPosPrinter___x_ABI_CWindows__CDevices__CPointOfService__CClaimedPosPrinterClosedEventArgs* This,
        __x_ABI_CWindows_CDevices_CPointOfService_CIClaimedPosPrinter* sender,
        __x_ABI_CWindows_CDevices_CPointOfService_CIClaimedPosPrinterClosedEventArgs* args);

        END_INTERFACE
    } __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CDevices__CPointOfService__CClaimedPosPrinter___x_ABI_CWindows__CDevices__CPointOfService__CClaimedPosPrinterClosedEventArgsVtbl;

    interface __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CDevices__CPointOfService__CClaimedPosPrinter___x_ABI_CWindows__CDevices__CPointOfService__CClaimedPosPrinterClosedEventArgs
    {
        CONST_VTBL struct __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CDevices__CPointOfService__CClaimedPosPrinter___x_ABI_CWindows__CDevices__CPointOfService__CClaimedPosPrinterClosedEventArgsVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CDevices__CPointOfService__CClaimedPosPrinter___x_ABI_CWindows__CDevices__CPointOfService__CClaimedPosPrinterClosedEventArgs_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CDevices__CPointOfService__CClaimedPosPrinter___x_ABI_CWindows__CDevices__CPointOfService__CPosPrinterReleaseDeviceRequestedEventArgs_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CDevices__CPointOfService__CClaimedPosPrinter___x_ABI_CWindows__CDevices__CPointOfService__CPosPrinterReleaseDeviceRequestedEventArgs_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CDevices__CPointOfService__CClaimedPosPrinter___x_ABI_CWindows__CDevices__CPointOfService__CPosPrinterReleaseDeviceRequestedEventArgs __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CDevices__CPointOfService__CClaimedPosPrinter___x_ABI_CWindows__CDevices__CPointOfService__CPosPrinterReleaseDeviceRequestedEventArgs;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CDevices__CPointOfService__CClaimedPosPrinter___x_ABI_CWindows__CDevices__CPointOfService__CPosPrinterReleaseDeviceRequestedEventArgs;

    typedef struct __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CDevices__CPointOfService__CClaimedPosPrinter___x_ABI_CWindows__CDevices__CPointOfService__CPosPrinterReleaseDeviceRequestedEventArgsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CDevices__CPointOfService__CClaimedPosPrinter___x_ABI_CWindows__CDevices__CPointOfService__CPosPrinterReleaseDeviceRequestedEventArgs* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CDevices__CPointOfService__CClaimedPosPrinter___x_ABI_CWindows__CDevices__CPointOfService__CPosPrinterReleaseDeviceRequestedEventArgs* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CDevices__CPointOfService__CClaimedPosPrinter___x_ABI_CWindows__CDevices__CPointOfService__CPosPrinterReleaseDeviceRequestedEventArgs* This);
        HRESULT (STDMETHODCALLTYPE* Invoke)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CDevices__CPointOfService__CClaimedPosPrinter___x_ABI_CWindows__CDevices__CPointOfService__CPosPrinterReleaseDeviceRequestedEventArgs* This,
        __x_ABI_CWindows_CDevices_CPointOfService_CIClaimedPosPrinter* sender,
        __x_ABI_CWindows_CDevices_CPointOfService_CIPosPrinterReleaseDeviceRequestedEventArgs* args);

        END_INTERFACE
    } __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CDevices__CPointOfService__CClaimedPosPrinter___x_ABI_CWindows__CDevices__CPointOfService__CPosPrinterReleaseDeviceRequestedEventArgsVtbl;

    interface __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CDevices__CPointOfService__CClaimedPosPrinter___x_ABI_CWindows__CDevices__CPointOfService__CPosPrinterReleaseDeviceRequestedEventArgs
    {
        CONST_VTBL struct __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CDevices__CPointOfService__CClaimedPosPrinter___x_ABI_CWindows__CDevices__CPointOfService__CPosPrinterReleaseDeviceRequestedEventArgsVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CDevices__CPointOfService__CClaimedPosPrinter___x_ABI_CWindows__CDevices__CPointOfService__CPosPrinterReleaseDeviceRequestedEventArgs_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CDevices__CPointOfService__CMagneticStripeReader___x_ABI_CWindows__CDevices__CPointOfService__CMagneticStripeReaderStatusUpdatedEventArgs_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CDevices__CPointOfService__CMagneticStripeReader___x_ABI_CWindows__CDevices__CPointOfService__CMagneticStripeReaderStatusUpdatedEventArgs_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CDevices__CPointOfService__CMagneticStripeReader___x_ABI_CWindows__CDevices__CPointOfService__CMagneticStripeReaderStatusUpdatedEventArgs __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CDevices__CPointOfService__CMagneticStripeReader___x_ABI_CWindows__CDevices__CPointOfService__CMagneticStripeReaderStatusUpdatedEventArgs;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CDevices__CPointOfService__CMagneticStripeReader___x_ABI_CWindows__CDevices__CPointOfService__CMagneticStripeReaderStatusUpdatedEventArgs;

    typedef struct __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CDevices__CPointOfService__CMagneticStripeReader___x_ABI_CWindows__CDevices__CPointOfService__CMagneticStripeReaderStatusUpdatedEventArgsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CDevices__CPointOfService__CMagneticStripeReader___x_ABI_CWindows__CDevices__CPointOfService__CMagneticStripeReaderStatusUpdatedEventArgs* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CDevices__CPointOfService__CMagneticStripeReader___x_ABI_CWindows__CDevices__CPointOfService__CMagneticStripeReaderStatusUpdatedEventArgs* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CDevices__CPointOfService__CMagneticStripeReader___x_ABI_CWindows__CDevices__CPointOfService__CMagneticStripeReaderStatusUpdatedEventArgs* This);
        HRESULT (STDMETHODCALLTYPE* Invoke)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CDevices__CPointOfService__CMagneticStripeReader___x_ABI_CWindows__CDevices__CPointOfService__CMagneticStripeReaderStatusUpdatedEventArgs* This,
        __x_ABI_CWindows_CDevices_CPointOfService_CIMagneticStripeReader* sender,
        __x_ABI_CWindows_CDevices_CPointOfService_CIMagneticStripeReaderStatusUpdatedEventArgs* args);

        END_INTERFACE
    } __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CDevices__CPointOfService__CMagneticStripeReader___x_ABI_CWindows__CDevices__CPointOfService__CMagneticStripeReaderStatusUpdatedEventArgsVtbl;

    interface __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CDevices__CPointOfService__CMagneticStripeReader___x_ABI_CWindows__CDevices__CPointOfService__CMagneticStripeReaderStatusUpdatedEventArgs
    {
        CONST_VTBL struct __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CDevices__CPointOfService__CMagneticStripeReader___x_ABI_CWindows__CDevices__CPointOfService__CMagneticStripeReaderStatusUpdatedEventArgsVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CDevices__CPointOfService__CMagneticStripeReader___x_ABI_CWindows__CDevices__CPointOfService__CMagneticStripeReaderStatusUpdatedEventArgs_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CDevices__CPointOfService__CPosPrinter___x_ABI_CWindows__CDevices__CPointOfService__CPosPrinterStatusUpdatedEventArgs_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CDevices__CPointOfService__CPosPrinter___x_ABI_CWindows__CDevices__CPointOfService__CPosPrinterStatusUpdatedEventArgs_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CDevices__CPointOfService__CPosPrinter___x_ABI_CWindows__CDevices__CPointOfService__CPosPrinterStatusUpdatedEventArgs __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CDevices__CPointOfService__CPosPrinter___x_ABI_CWindows__CDevices__CPointOfService__CPosPrinterStatusUpdatedEventArgs;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CDevices__CPointOfService__CPosPrinter___x_ABI_CWindows__CDevices__CPointOfService__CPosPrinterStatusUpdatedEventArgs;

    typedef struct __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CDevices__CPointOfService__CPosPrinter___x_ABI_CWindows__CDevices__CPointOfService__CPosPrinterStatusUpdatedEventArgsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CDevices__CPointOfService__CPosPrinter___x_ABI_CWindows__CDevices__CPointOfService__CPosPrinterStatusUpdatedEventArgs* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CDevices__CPointOfService__CPosPrinter___x_ABI_CWindows__CDevices__CPointOfService__CPosPrinterStatusUpdatedEventArgs* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CDevices__CPointOfService__CPosPrinter___x_ABI_CWindows__CDevices__CPointOfService__CPosPrinterStatusUpdatedEventArgs* This);
        HRESULT (STDMETHODCALLTYPE* Invoke)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CDevices__CPointOfService__CPosPrinter___x_ABI_CWindows__CDevices__CPointOfService__CPosPrinterStatusUpdatedEventArgs* This,
        __x_ABI_CWindows_CDevices_CPointOfService_CIPosPrinter* sender,
        __x_ABI_CWindows_CDevices_CPointOfService_CIPosPrinterStatusUpdatedEventArgs* args);

        END_INTERFACE
    } __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CDevices__CPointOfService__CPosPrinter___x_ABI_CWindows__CDevices__CPointOfService__CPosPrinterStatusUpdatedEventArgsVtbl;

    interface __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CDevices__CPointOfService__CPosPrinter___x_ABI_CWindows__CDevices__CPointOfService__CPosPrinterStatusUpdatedEventArgs
    {
        CONST_VTBL struct __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CDevices__CPointOfService__CPosPrinter___x_ABI_CWindows__CDevices__CPointOfService__CPosPrinterStatusUpdatedEventArgsVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CDevices__CPointOfService__CPosPrinter___x_ABI_CWindows__CDevices__CPointOfService__CPosPrinterStatusUpdatedEventArgs_INTERFACE_DEFINED__
    
typedef enum __x_ABI_CWindows_CFoundation_CAsyncStatus __x_ABI_CWindows_CFoundation_CAsyncStatus;

#ifndef ____x_ABI_CWindows_CFoundation_CIAsyncAction_FWD_DEFINED__
#define ____x_ABI_CWindows_CFoundation_CIAsyncAction_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CFoundation_CIAsyncAction __x_ABI_CWindows_CFoundation_CIAsyncAction;

#endif // ____x_ABI_CWindows_CFoundation_CIAsyncAction_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CFoundation_CIAsyncInfo_FWD_DEFINED__
#define ____x_ABI_CWindows_CFoundation_CIAsyncInfo_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CFoundation_CIAsyncInfo __x_ABI_CWindows_CFoundation_CIAsyncInfo;

#endif // ____x_ABI_CWindows_CFoundation_CIAsyncInfo_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CFoundation_CIClosable_FWD_DEFINED__
#define ____x_ABI_CWindows_CFoundation_CIClosable_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CFoundation_CIClosable __x_ABI_CWindows_CFoundation_CIClosable;

#endif // ____x_ABI_CWindows_CFoundation_CIClosable_FWD_DEFINED__

typedef struct __x_ABI_CWindows_CFoundation_CPoint __x_ABI_CWindows_CFoundation_CPoint;

typedef struct __x_ABI_CWindows_CFoundation_CRect __x_ABI_CWindows_CFoundation_CRect;

typedef struct __x_ABI_CWindows_CFoundation_CTimeSpan __x_ABI_CWindows_CFoundation_CTimeSpan;

#ifndef ____x_ABI_CWindows_CGraphics_CImaging_CIBitmapFrame_FWD_DEFINED__
#define ____x_ABI_CWindows_CGraphics_CImaging_CIBitmapFrame_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CGraphics_CImaging_CIBitmapFrame __x_ABI_CWindows_CGraphics_CImaging_CIBitmapFrame;

#endif // ____x_ABI_CWindows_CGraphics_CImaging_CIBitmapFrame_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CStorage_CIStorageFile_FWD_DEFINED__
#define ____x_ABI_CWindows_CStorage_CIStorageFile_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CStorage_CIStorageFile __x_ABI_CWindows_CStorage_CIStorageFile;

#endif // ____x_ABI_CWindows_CStorage_CIStorageFile_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CStorage_CStreams_CIRandomAccessStreamWithContentType_FWD_DEFINED__
#define ____x_ABI_CWindows_CStorage_CStreams_CIRandomAccessStreamWithContentType_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CStorage_CStreams_CIRandomAccessStreamWithContentType __x_ABI_CWindows_CStorage_CStreams_CIRandomAccessStreamWithContentType;

#endif // ____x_ABI_CWindows_CStorage_CStreams_CIRandomAccessStreamWithContentType_FWD_DEFINED__

typedef enum __x_ABI_CWindows_CDevices_CPointOfService_CBarcodeScannerStatus __x_ABI_CWindows_CDevices_CPointOfService_CBarcodeScannerStatus;

typedef enum __x_ABI_CWindows_CDevices_CPointOfService_CBarcodeSymbologyDecodeLengthKind __x_ABI_CWindows_CDevices_CPointOfService_CBarcodeSymbologyDecodeLengthKind;

typedef enum __x_ABI_CWindows_CDevices_CPointOfService_CCashDrawerStatusKind __x_ABI_CWindows_CDevices_CPointOfService_CCashDrawerStatusKind;

typedef enum __x_ABI_CWindows_CDevices_CPointOfService_CLineDisplayCursorType __x_ABI_CWindows_CDevices_CPointOfService_CLineDisplayCursorType;

typedef enum __x_ABI_CWindows_CDevices_CPointOfService_CLineDisplayDescriptorState __x_ABI_CWindows_CDevices_CPointOfService_CLineDisplayDescriptorState;

typedef enum __x_ABI_CWindows_CDevices_CPointOfService_CLineDisplayHorizontalAlignment __x_ABI_CWindows_CDevices_CPointOfService_CLineDisplayHorizontalAlignment;

typedef enum __x_ABI_CWindows_CDevices_CPointOfService_CLineDisplayMarqueeFormat __x_ABI_CWindows_CDevices_CPointOfService_CLineDisplayMarqueeFormat;

typedef enum __x_ABI_CWindows_CDevices_CPointOfService_CLineDisplayScrollDirection __x_ABI_CWindows_CDevices_CPointOfService_CLineDisplayScrollDirection;

typedef enum __x_ABI_CWindows_CDevices_CPointOfService_CLineDisplayTextAttribute __x_ABI_CWindows_CDevices_CPointOfService_CLineDisplayTextAttribute;

typedef enum __x_ABI_CWindows_CDevices_CPointOfService_CLineDisplayTextAttributeGranularity __x_ABI_CWindows_CDevices_CPointOfService_CLineDisplayTextAttributeGranularity;

typedef enum __x_ABI_CWindows_CDevices_CPointOfService_CLineDisplayVerticalAlignment __x_ABI_CWindows_CDevices_CPointOfService_CLineDisplayVerticalAlignment;

typedef enum __x_ABI_CWindows_CDevices_CPointOfService_CMagneticStripeReaderAuthenticationLevel __x_ABI_CWindows_CDevices_CPointOfService_CMagneticStripeReaderAuthenticationLevel;

typedef enum __x_ABI_CWindows_CDevices_CPointOfService_CMagneticStripeReaderAuthenticationProtocol __x_ABI_CWindows_CDevices_CPointOfService_CMagneticStripeReaderAuthenticationProtocol;

typedef enum __x_ABI_CWindows_CDevices_CPointOfService_CMagneticStripeReaderErrorReportingType __x_ABI_CWindows_CDevices_CPointOfService_CMagneticStripeReaderErrorReportingType;

typedef enum __x_ABI_CWindows_CDevices_CPointOfService_CMagneticStripeReaderStatus __x_ABI_CWindows_CDevices_CPointOfService_CMagneticStripeReaderStatus;

typedef enum __x_ABI_CWindows_CDevices_CPointOfService_CMagneticStripeReaderTrackErrorType __x_ABI_CWindows_CDevices_CPointOfService_CMagneticStripeReaderTrackErrorType;

typedef enum __x_ABI_CWindows_CDevices_CPointOfService_CMagneticStripeReaderTrackIds __x_ABI_CWindows_CDevices_CPointOfService_CMagneticStripeReaderTrackIds;

typedef enum __x_ABI_CWindows_CDevices_CPointOfService_CPosConnectionTypes __x_ABI_CWindows_CDevices_CPointOfService_CPosConnectionTypes;

typedef enum __x_ABI_CWindows_CDevices_CPointOfService_CPosPrinterAlignment __x_ABI_CWindows_CDevices_CPointOfService_CPosPrinterAlignment;

typedef enum __x_ABI_CWindows_CDevices_CPointOfService_CPosPrinterBarcodeTextPosition __x_ABI_CWindows_CDevices_CPointOfService_CPosPrinterBarcodeTextPosition;

typedef enum __x_ABI_CWindows_CDevices_CPointOfService_CPosPrinterCartridgeSensors __x_ABI_CWindows_CDevices_CPointOfService_CPosPrinterCartridgeSensors;

typedef enum __x_ABI_CWindows_CDevices_CPointOfService_CPosPrinterColorCapabilities __x_ABI_CWindows_CDevices_CPointOfService_CPosPrinterColorCapabilities;

typedef enum __x_ABI_CWindows_CDevices_CPointOfService_CPosPrinterColorCartridge __x_ABI_CWindows_CDevices_CPointOfService_CPosPrinterColorCartridge;

typedef enum __x_ABI_CWindows_CDevices_CPointOfService_CPosPrinterLineDirection __x_ABI_CWindows_CDevices_CPointOfService_CPosPrinterLineDirection;

typedef enum __x_ABI_CWindows_CDevices_CPointOfService_CPosPrinterLineStyle __x_ABI_CWindows_CDevices_CPointOfService_CPosPrinterLineStyle;

typedef enum __x_ABI_CWindows_CDevices_CPointOfService_CPosPrinterMapMode __x_ABI_CWindows_CDevices_CPointOfService_CPosPrinterMapMode;

typedef enum __x_ABI_CWindows_CDevices_CPointOfService_CPosPrinterMarkFeedCapabilities __x_ABI_CWindows_CDevices_CPointOfService_CPosPrinterMarkFeedCapabilities;

typedef enum __x_ABI_CWindows_CDevices_CPointOfService_CPosPrinterMarkFeedKind __x_ABI_CWindows_CDevices_CPointOfService_CPosPrinterMarkFeedKind;

typedef enum __x_ABI_CWindows_CDevices_CPointOfService_CPosPrinterPrintSide __x_ABI_CWindows_CDevices_CPointOfService_CPosPrinterPrintSide;

typedef enum __x_ABI_CWindows_CDevices_CPointOfService_CPosPrinterRuledLineCapabilities __x_ABI_CWindows_CDevices_CPointOfService_CPosPrinterRuledLineCapabilities;

typedef enum __x_ABI_CWindows_CDevices_CPointOfService_CPosPrinterStatusKind __x_ABI_CWindows_CDevices_CPointOfService_CPosPrinterStatusKind;

typedef enum __x_ABI_CWindows_CDevices_CPointOfService_CUnifiedPosErrorReason __x_ABI_CWindows_CDevices_CPointOfService_CUnifiedPosErrorReason;

typedef enum __x_ABI_CWindows_CDevices_CPointOfService_CUnifiedPosErrorSeverity __x_ABI_CWindows_CDevices_CPointOfService_CUnifiedPosErrorSeverity;

typedef enum __x_ABI_CWindows_CDevices_CPointOfService_CUnifiedPosHealthCheckLevel __x_ABI_CWindows_CDevices_CPointOfService_CUnifiedPosHealthCheckLevel;

typedef enum __x_ABI_CWindows_CDevices_CPointOfService_CUnifiedPosPowerReportingType __x_ABI_CWindows_CDevices_CPointOfService_CUnifiedPosPowerReportingType;

enum __x_ABI_CWindows_CDevices_CPointOfService_CBarcodeScannerStatus
    {
        __x_ABI_CWindows_CDevices_CPointOfService_CBarcodeScannerStatus_Online = 0,
    __x_ABI_CWindows_CDevices_CPointOfService_CBarcodeScannerStatus_Off = 1,
    __x_ABI_CWindows_CDevices_CPointOfService_CBarcodeScannerStatus_Offline = 2,
    __x_ABI_CWindows_CDevices_CPointOfService_CBarcodeScannerStatus_OffOrOffline = 3,
    __x_ABI_CWindows_CDevices_CPointOfService_CBarcodeScannerStatus_Extended = 4,
};

enum __x_ABI_CWindows_CDevices_CPointOfService_CBarcodeSymbologyDecodeLengthKind
    {
        __x_ABI_CWindows_CDevices_CPointOfService_CBarcodeSymbologyDecodeLengthKind_AnyLength = 0,
    __x_ABI_CWindows_CDevices_CPointOfService_CBarcodeSymbologyDecodeLengthKind_Discrete = 1,
    __x_ABI_CWindows_CDevices_CPointOfService_CBarcodeSymbologyDecodeLengthKind_Range = 2,
};

enum __x_ABI_CWindows_CDevices_CPointOfService_CCashDrawerStatusKind
    {
        __x_ABI_CWindows_CDevices_CPointOfService_CCashDrawerStatusKind_Online = 0,
    __x_ABI_CWindows_CDevices_CPointOfService_CCashDrawerStatusKind_Off = 1,
    __x_ABI_CWindows_CDevices_CPointOfService_CCashDrawerStatusKind_Offline = 2,
    __x_ABI_CWindows_CDevices_CPointOfService_CCashDrawerStatusKind_OffOrOffline = 3,
    __x_ABI_CWindows_CDevices_CPointOfService_CCashDrawerStatusKind_Extended = 4,
};

enum __x_ABI_CWindows_CDevices_CPointOfService_CLineDisplayCursorType
    {
        __x_ABI_CWindows_CDevices_CPointOfService_CLineDisplayCursorType_None = 0,
    __x_ABI_CWindows_CDevices_CPointOfService_CLineDisplayCursorType_Block = 1,
    __x_ABI_CWindows_CDevices_CPointOfService_CLineDisplayCursorType_HalfBlock = 2,
    __x_ABI_CWindows_CDevices_CPointOfService_CLineDisplayCursorType_Underline = 3,
    __x_ABI_CWindows_CDevices_CPointOfService_CLineDisplayCursorType_Reverse = 4,
    __x_ABI_CWindows_CDevices_CPointOfService_CLineDisplayCursorType_Other = 5,
};

enum __x_ABI_CWindows_CDevices_CPointOfService_CLineDisplayDescriptorState
    {
        __x_ABI_CWindows_CDevices_CPointOfService_CLineDisplayDescriptorState_Off = 0,
    __x_ABI_CWindows_CDevices_CPointOfService_CLineDisplayDescriptorState_On = 1,
    __x_ABI_CWindows_CDevices_CPointOfService_CLineDisplayDescriptorState_Blink = 2,
};

enum __x_ABI_CWindows_CDevices_CPointOfService_CLineDisplayHorizontalAlignment
    {
        __x_ABI_CWindows_CDevices_CPointOfService_CLineDisplayHorizontalAlignment_Left = 0,
    __x_ABI_CWindows_CDevices_CPointOfService_CLineDisplayHorizontalAlignment_Center = 1,
    __x_ABI_CWindows_CDevices_CPointOfService_CLineDisplayHorizontalAlignment_Right = 2,
};

enum __x_ABI_CWindows_CDevices_CPointOfService_CLineDisplayMarqueeFormat
    {
        __x_ABI_CWindows_CDevices_CPointOfService_CLineDisplayMarqueeFormat_None = 0,
    __x_ABI_CWindows_CDevices_CPointOfService_CLineDisplayMarqueeFormat_Walk = 1,
    __x_ABI_CWindows_CDevices_CPointOfService_CLineDisplayMarqueeFormat_Place = 2,
};

enum __x_ABI_CWindows_CDevices_CPointOfService_CLineDisplayPowerStatus
    {
        __x_ABI_CWindows_CDevices_CPointOfService_CLineDisplayPowerStatus_Unknown = 0,
    __x_ABI_CWindows_CDevices_CPointOfService_CLineDisplayPowerStatus_Online = 1,
    __x_ABI_CWindows_CDevices_CPointOfService_CLineDisplayPowerStatus_Off = 2,
    __x_ABI_CWindows_CDevices_CPointOfService_CLineDisplayPowerStatus_Offline = 3,
    __x_ABI_CWindows_CDevices_CPointOfService_CLineDisplayPowerStatus_OffOrOffline = 4,
};

enum __x_ABI_CWindows_CDevices_CPointOfService_CLineDisplayScrollDirection
    {
        __x_ABI_CWindows_CDevices_CPointOfService_CLineDisplayScrollDirection_Up = 0,
    __x_ABI_CWindows_CDevices_CPointOfService_CLineDisplayScrollDirection_Down = 1,
    __x_ABI_CWindows_CDevices_CPointOfService_CLineDisplayScrollDirection_Left = 2,
    __x_ABI_CWindows_CDevices_CPointOfService_CLineDisplayScrollDirection_Right = 3,
};

enum __x_ABI_CWindows_CDevices_CPointOfService_CLineDisplayTextAttribute
    {
        __x_ABI_CWindows_CDevices_CPointOfService_CLineDisplayTextAttribute_Normal = 0,
    __x_ABI_CWindows_CDevices_CPointOfService_CLineDisplayTextAttribute_Blink = 1,
    __x_ABI_CWindows_CDevices_CPointOfService_CLineDisplayTextAttribute_Reverse = 2,
    __x_ABI_CWindows_CDevices_CPointOfService_CLineDisplayTextAttribute_ReverseBlink = 3,
};

enum __x_ABI_CWindows_CDevices_CPointOfService_CLineDisplayTextAttributeGranularity
    {
        __x_ABI_CWindows_CDevices_CPointOfService_CLineDisplayTextAttributeGranularity_NotSupported = 0,
    __x_ABI_CWindows_CDevices_CPointOfService_CLineDisplayTextAttributeGranularity_EntireDisplay = 1,
    __x_ABI_CWindows_CDevices_CPointOfService_CLineDisplayTextAttributeGranularity_PerCharacter = 2,
};

enum __x_ABI_CWindows_CDevices_CPointOfService_CLineDisplayVerticalAlignment
    {
        __x_ABI_CWindows_CDevices_CPointOfService_CLineDisplayVerticalAlignment_Top = 0,
    __x_ABI_CWindows_CDevices_CPointOfService_CLineDisplayVerticalAlignment_Center = 1,
    __x_ABI_CWindows_CDevices_CPointOfService_CLineDisplayVerticalAlignment_Bottom = 2,
};

enum __x_ABI_CWindows_CDevices_CPointOfService_CMagneticStripeReaderAuthenticationLevel
    {
        __x_ABI_CWindows_CDevices_CPointOfService_CMagneticStripeReaderAuthenticationLevel_NotSupported = 0,
    __x_ABI_CWindows_CDevices_CPointOfService_CMagneticStripeReaderAuthenticationLevel_Optional = 1,
    __x_ABI_CWindows_CDevices_CPointOfService_CMagneticStripeReaderAuthenticationLevel_Required = 2,
};

enum __x_ABI_CWindows_CDevices_CPointOfService_CMagneticStripeReaderAuthenticationProtocol
    {
        __x_ABI_CWindows_CDevices_CPointOfService_CMagneticStripeReaderAuthenticationProtocol_None = 0,
    __x_ABI_CWindows_CDevices_CPointOfService_CMagneticStripeReaderAuthenticationProtocol_ChallengeResponse = 1,
};

enum __x_ABI_CWindows_CDevices_CPointOfService_CMagneticStripeReaderErrorReportingType
    {
        __x_ABI_CWindows_CDevices_CPointOfService_CMagneticStripeReaderErrorReportingType_CardLevel = 0,
    __x_ABI_CWindows_CDevices_CPointOfService_CMagneticStripeReaderErrorReportingType_TrackLevel = 1,
};

enum __x_ABI_CWindows_CDevices_CPointOfService_CMagneticStripeReaderStatus
    {
        __x_ABI_CWindows_CDevices_CPointOfService_CMagneticStripeReaderStatus_Unauthenticated = 0,
    __x_ABI_CWindows_CDevices_CPointOfService_CMagneticStripeReaderStatus_Authenticated = 1,
    __x_ABI_CWindows_CDevices_CPointOfService_CMagneticStripeReaderStatus_Extended = 2,
};

enum __x_ABI_CWindows_CDevices_CPointOfService_CMagneticStripeReaderTrackErrorType
    {
        __x_ABI_CWindows_CDevices_CPointOfService_CMagneticStripeReaderTrackErrorType_None = 0,
    __x_ABI_CWindows_CDevices_CPointOfService_CMagneticStripeReaderTrackErrorType_StartSentinelError = 1,
    __x_ABI_CWindows_CDevices_CPointOfService_CMagneticStripeReaderTrackErrorType_EndSentinelError = 2,
    __x_ABI_CWindows_CDevices_CPointOfService_CMagneticStripeReaderTrackErrorType_ParityError = 3,
    __x_ABI_CWindows_CDevices_CPointOfService_CMagneticStripeReaderTrackErrorType_LrcError = 4,
    __x_ABI_CWindows_CDevices_CPointOfService_CMagneticStripeReaderTrackErrorType_Unknown = -1,
};

enum __x_ABI_CWindows_CDevices_CPointOfService_CMagneticStripeReaderTrackIds
    {
        __x_ABI_CWindows_CDevices_CPointOfService_CMagneticStripeReaderTrackIds_None = 0,
    __x_ABI_CWindows_CDevices_CPointOfService_CMagneticStripeReaderTrackIds_Track1 = 1,
    __x_ABI_CWindows_CDevices_CPointOfService_CMagneticStripeReaderTrackIds_Track2 = 2,
    __x_ABI_CWindows_CDevices_CPointOfService_CMagneticStripeReaderTrackIds_Track3 = 4,
    __x_ABI_CWindows_CDevices_CPointOfService_CMagneticStripeReaderTrackIds_Track4 = 8,
};

enum __x_ABI_CWindows_CDevices_CPointOfService_CPosConnectionTypes
    {
        __x_ABI_CWindows_CDevices_CPointOfService_CPosConnectionTypes_Local = 0x1,
    __x_ABI_CWindows_CDevices_CPointOfService_CPosConnectionTypes_IP = 0x2,
    __x_ABI_CWindows_CDevices_CPointOfService_CPosConnectionTypes_Bluetooth = 0x4,
    __x_ABI_CWindows_CDevices_CPointOfService_CPosConnectionTypes_All = 0xffffffff,
};

enum __x_ABI_CWindows_CDevices_CPointOfService_CPosPrinterAlignment
    {
        __x_ABI_CWindows_CDevices_CPointOfService_CPosPrinterAlignment_Left = 0,
    __x_ABI_CWindows_CDevices_CPointOfService_CPosPrinterAlignment_Center = 1,
    __x_ABI_CWindows_CDevices_CPointOfService_CPosPrinterAlignment_Right = 2,
};

enum __x_ABI_CWindows_CDevices_CPointOfService_CPosPrinterBarcodeTextPosition
    {
        __x_ABI_CWindows_CDevices_CPointOfService_CPosPrinterBarcodeTextPosition_None = 0,
    __x_ABI_CWindows_CDevices_CPointOfService_CPosPrinterBarcodeTextPosition_Above = 1,
    __x_ABI_CWindows_CDevices_CPointOfService_CPosPrinterBarcodeTextPosition_Below = 2,
};

enum __x_ABI_CWindows_CDevices_CPointOfService_CPosPrinterCartridgeSensors
    {
        __x_ABI_CWindows_CDevices_CPointOfService_CPosPrinterCartridgeSensors_None = 0,
    __x_ABI_CWindows_CDevices_CPointOfService_CPosPrinterCartridgeSensors_Removed = 0x1,
    __x_ABI_CWindows_CDevices_CPointOfService_CPosPrinterCartridgeSensors_Empty = 0x2,
    __x_ABI_CWindows_CDevices_CPointOfService_CPosPrinterCartridgeSensors_HeadCleaning = 0x4,
    __x_ABI_CWindows_CDevices_CPointOfService_CPosPrinterCartridgeSensors_NearEnd = 0x8,
};

enum __x_ABI_CWindows_CDevices_CPointOfService_CPosPrinterColorCapabilities
    {
        __x_ABI_CWindows_CDevices_CPointOfService_CPosPrinterColorCapabilities_None = 0,
    __x_ABI_CWindows_CDevices_CPointOfService_CPosPrinterColorCapabilities_Primary = 0x1,
    __x_ABI_CWindows_CDevices_CPointOfService_CPosPrinterColorCapabilities_Custom1 = 0x2,
    __x_ABI_CWindows_CDevices_CPointOfService_CPosPrinterColorCapabilities_Custom2 = 0x4,
    __x_ABI_CWindows_CDevices_CPointOfService_CPosPrinterColorCapabilities_Custom3 = 0x8,
    __x_ABI_CWindows_CDevices_CPointOfService_CPosPrinterColorCapabilities_Custom4 = 0x10,
    __x_ABI_CWindows_CDevices_CPointOfService_CPosPrinterColorCapabilities_Custom5 = 0x20,
    __x_ABI_CWindows_CDevices_CPointOfService_CPosPrinterColorCapabilities_Custom6 = 0x40,
    __x_ABI_CWindows_CDevices_CPointOfService_CPosPrinterColorCapabilities_Cyan = 0x80,
    __x_ABI_CWindows_CDevices_CPointOfService_CPosPrinterColorCapabilities_Magenta = 0x100,
    __x_ABI_CWindows_CDevices_CPointOfService_CPosPrinterColorCapabilities_Yellow = 0x200,
    __x_ABI_CWindows_CDevices_CPointOfService_CPosPrinterColorCapabilities_Full = 0x400,
};

enum __x_ABI_CWindows_CDevices_CPointOfService_CPosPrinterColorCartridge
    {
        __x_ABI_CWindows_CDevices_CPointOfService_CPosPrinterColorCartridge_Unknown = 0,
    __x_ABI_CWindows_CDevices_CPointOfService_CPosPrinterColorCartridge_Primary = 1,
    __x_ABI_CWindows_CDevices_CPointOfService_CPosPrinterColorCartridge_Custom1 = 2,
    __x_ABI_CWindows_CDevices_CPointOfService_CPosPrinterColorCartridge_Custom2 = 3,
    __x_ABI_CWindows_CDevices_CPointOfService_CPosPrinterColorCartridge_Custom3 = 4,
    __x_ABI_CWindows_CDevices_CPointOfService_CPosPrinterColorCartridge_Custom4 = 5,
    __x_ABI_CWindows_CDevices_CPointOfService_CPosPrinterColorCartridge_Custom5 = 6,
    __x_ABI_CWindows_CDevices_CPointOfService_CPosPrinterColorCartridge_Custom6 = 7,
    __x_ABI_CWindows_CDevices_CPointOfService_CPosPrinterColorCartridge_Cyan = 8,
    __x_ABI_CWindows_CDevices_CPointOfService_CPosPrinterColorCartridge_Magenta = 9,
    __x_ABI_CWindows_CDevices_CPointOfService_CPosPrinterColorCartridge_Yellow = 10,
};

enum __x_ABI_CWindows_CDevices_CPointOfService_CPosPrinterLineDirection
    {
        __x_ABI_CWindows_CDevices_CPointOfService_CPosPrinterLineDirection_Horizontal = 0,
    __x_ABI_CWindows_CDevices_CPointOfService_CPosPrinterLineDirection_Vertical = 1,
};

enum __x_ABI_CWindows_CDevices_CPointOfService_CPosPrinterLineStyle
    {
        __x_ABI_CWindows_CDevices_CPointOfService_CPosPrinterLineStyle_SingleSolid = 0,
    __x_ABI_CWindows_CDevices_CPointOfService_CPosPrinterLineStyle_DoubleSolid = 1,
    __x_ABI_CWindows_CDevices_CPointOfService_CPosPrinterLineStyle_Broken = 2,
    __x_ABI_CWindows_CDevices_CPointOfService_CPosPrinterLineStyle_Chain = 3,
};

enum __x_ABI_CWindows_CDevices_CPointOfService_CPosPrinterMapMode
    {
        __x_ABI_CWindows_CDevices_CPointOfService_CPosPrinterMapMode_Dots = 0,
    __x_ABI_CWindows_CDevices_CPointOfService_CPosPrinterMapMode_Twips = 1,
    __x_ABI_CWindows_CDevices_CPointOfService_CPosPrinterMapMode_English = 2,
    __x_ABI_CWindows_CDevices_CPointOfService_CPosPrinterMapMode_Metric = 3,
};

enum __x_ABI_CWindows_CDevices_CPointOfService_CPosPrinterMarkFeedCapabilities
    {
        __x_ABI_CWindows_CDevices_CPointOfService_CPosPrinterMarkFeedCapabilities_None = 0,
    __x_ABI_CWindows_CDevices_CPointOfService_CPosPrinterMarkFeedCapabilities_ToTakeUp = 0x1,
    __x_ABI_CWindows_CDevices_CPointOfService_CPosPrinterMarkFeedCapabilities_ToCutter = 0x2,
    __x_ABI_CWindows_CDevices_CPointOfService_CPosPrinterMarkFeedCapabilities_ToCurrentTopOfForm = 0x4,
    __x_ABI_CWindows_CDevices_CPointOfService_CPosPrinterMarkFeedCapabilities_ToNextTopOfForm = 0x8,
};

enum __x_ABI_CWindows_CDevices_CPointOfService_CPosPrinterMarkFeedKind
    {
        __x_ABI_CWindows_CDevices_CPointOfService_CPosPrinterMarkFeedKind_ToTakeUp = 0,
    __x_ABI_CWindows_CDevices_CPointOfService_CPosPrinterMarkFeedKind_ToCutter = 1,
    __x_ABI_CWindows_CDevices_CPointOfService_CPosPrinterMarkFeedKind_ToCurrentTopOfForm = 2,
    __x_ABI_CWindows_CDevices_CPointOfService_CPosPrinterMarkFeedKind_ToNextTopOfForm = 3,
};

enum __x_ABI_CWindows_CDevices_CPointOfService_CPosPrinterPrintSide
    {
        __x_ABI_CWindows_CDevices_CPointOfService_CPosPrinterPrintSide_Unknown = 0,
    __x_ABI_CWindows_CDevices_CPointOfService_CPosPrinterPrintSide_Side1 = 1,
    __x_ABI_CWindows_CDevices_CPointOfService_CPosPrinterPrintSide_Side2 = 2,
};

enum __x_ABI_CWindows_CDevices_CPointOfService_CPosPrinterRotation
    {
        __x_ABI_CWindows_CDevices_CPointOfService_CPosPrinterRotation_Normal = 0,
    __x_ABI_CWindows_CDevices_CPointOfService_CPosPrinterRotation_Right90 = 1,
    __x_ABI_CWindows_CDevices_CPointOfService_CPosPrinterRotation_Left90 = 2,
    __x_ABI_CWindows_CDevices_CPointOfService_CPosPrinterRotation_Rotate180 = 3,
};

enum __x_ABI_CWindows_CDevices_CPointOfService_CPosPrinterRuledLineCapabilities
    {
        __x_ABI_CWindows_CDevices_CPointOfService_CPosPrinterRuledLineCapabilities_None = 0,
    __x_ABI_CWindows_CDevices_CPointOfService_CPosPrinterRuledLineCapabilities_Horizontal = 0x1,
    __x_ABI_CWindows_CDevices_CPointOfService_CPosPrinterRuledLineCapabilities_Vertical = 0x2,
};

enum __x_ABI_CWindows_CDevices_CPointOfService_CPosPrinterStatusKind
    {
        __x_ABI_CWindows_CDevices_CPointOfService_CPosPrinterStatusKind_Online = 0,
    __x_ABI_CWindows_CDevices_CPointOfService_CPosPrinterStatusKind_Off = 1,
    __x_ABI_CWindows_CDevices_CPointOfService_CPosPrinterStatusKind_Offline = 2,
    __x_ABI_CWindows_CDevices_CPointOfService_CPosPrinterStatusKind_OffOrOffline = 3,
    __x_ABI_CWindows_CDevices_CPointOfService_CPosPrinterStatusKind_Extended = 4,
};

enum __x_ABI_CWindows_CDevices_CPointOfService_CUnifiedPosErrorReason
    {
        __x_ABI_CWindows_CDevices_CPointOfService_CUnifiedPosErrorReason_UnknownErrorReason = 0,
    __x_ABI_CWindows_CDevices_CPointOfService_CUnifiedPosErrorReason_NoService = 1,
    __x_ABI_CWindows_CDevices_CPointOfService_CUnifiedPosErrorReason_Disabled = 2,
    __x_ABI_CWindows_CDevices_CPointOfService_CUnifiedPosErrorReason_Illegal = 3,
    __x_ABI_CWindows_CDevices_CPointOfService_CUnifiedPosErrorReason_NoHardware = 4,
    __x_ABI_CWindows_CDevices_CPointOfService_CUnifiedPosErrorReason_Closed = 5,
    __x_ABI_CWindows_CDevices_CPointOfService_CUnifiedPosErrorReason_Offline = 6,
    __x_ABI_CWindows_CDevices_CPointOfService_CUnifiedPosErrorReason_Failure = 7,
    __x_ABI_CWindows_CDevices_CPointOfService_CUnifiedPosErrorReason_Timeout = 8,
    __x_ABI_CWindows_CDevices_CPointOfService_CUnifiedPosErrorReason_Busy = 9,
    __x_ABI_CWindows_CDevices_CPointOfService_CUnifiedPosErrorReason_Extended = 10,
};

enum __x_ABI_CWindows_CDevices_CPointOfService_CUnifiedPosErrorSeverity
    {
        __x_ABI_CWindows_CDevices_CPointOfService_CUnifiedPosErrorSeverity_UnknownErrorSeverity = 0,
    __x_ABI_CWindows_CDevices_CPointOfService_CUnifiedPosErrorSeverity_Warning = 1,
    __x_ABI_CWindows_CDevices_CPointOfService_CUnifiedPosErrorSeverity_Recoverable = 2,
    __x_ABI_CWindows_CDevices_CPointOfService_CUnifiedPosErrorSeverity_Unrecoverable = 3,
    __x_ABI_CWindows_CDevices_CPointOfService_CUnifiedPosErrorSeverity_AssistanceRequired = 4,
    __x_ABI_CWindows_CDevices_CPointOfService_CUnifiedPosErrorSeverity_Fatal = 5,
};

enum __x_ABI_CWindows_CDevices_CPointOfService_CUnifiedPosHealthCheckLevel
    {
        __x_ABI_CWindows_CDevices_CPointOfService_CUnifiedPosHealthCheckLevel_UnknownHealthCheckLevel = 0,
    __x_ABI_CWindows_CDevices_CPointOfService_CUnifiedPosHealthCheckLevel_POSInternal = 1,
    __x_ABI_CWindows_CDevices_CPointOfService_CUnifiedPosHealthCheckLevel_External = 2,
    __x_ABI_CWindows_CDevices_CPointOfService_CUnifiedPosHealthCheckLevel_Interactive = 3,
};

enum __x_ABI_CWindows_CDevices_CPointOfService_CUnifiedPosPowerReportingType
    {
        __x_ABI_CWindows_CDevices_CPointOfService_CUnifiedPosPowerReportingType_UnknownPowerReportingType = 0,
    __x_ABI_CWindows_CDevices_CPointOfService_CUnifiedPosPowerReportingType_Standard = 1,
    __x_ABI_CWindows_CDevices_CPointOfService_CUnifiedPosPowerReportingType_Advanced = 2,
};

struct __x_ABI_CWindows_CDevices_CPointOfService_CSizeUInt32
    {
        UINT32 Width;
    UINT32 Height;
};

#if !defined(____x_ABI_CWindows_CDevices_CPointOfService_CIBarcodeScanner_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CDevices_CPointOfService_CIBarcodeScanner_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CDevices_CPointOfService_CIBarcodeScannerVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CDevices_CPointOfService_CIBarcodeScanner* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CDevices_CPointOfService_CIBarcodeScanner* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CDevices_CPointOfService_CIBarcodeScanner* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CDevices_CPointOfService_CIBarcodeScanner* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CDevices_CPointOfService_CIBarcodeScanner* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CDevices_CPointOfService_CIBarcodeScanner* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_DeviceId)(__x_ABI_CWindows_CDevices_CPointOfService_CIBarcodeScanner* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* get_Capabilities)(__x_ABI_CWindows_CDevices_CPointOfService_CIBarcodeScanner* This,
        __x_ABI_CWindows_CDevices_CPointOfService_CIBarcodeScannerCapabilities** value);
    HRESULT (STDMETHODCALLTYPE* ClaimScannerAsync)(__x_ABI_CWindows_CDevices_CPointOfService_CIBarcodeScanner* This,
        __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CDevices__CPointOfService__CClaimedBarcodeScanner** operation);
    HRESULT (STDMETHODCALLTYPE* CheckHealthAsync)(__x_ABI_CWindows_CDevices_CPointOfService_CIBarcodeScanner* This,
        enum __x_ABI_CWindows_CDevices_CPointOfService_CUnifiedPosHealthCheckLevel level,
        __x_ABI_C__FIAsyncOperation_1_HSTRING** operation);
    HRESULT (STDMETHODCALLTYPE* GetSupportedSymbologiesAsync)(__x_ABI_CWindows_CDevices_CPointOfService_CIBarcodeScanner* This,
        __x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1_UINT32** operation);
    HRESULT (STDMETHODCALLTYPE* IsSymbologySupportedAsync)(__x_ABI_CWindows_CDevices_CPointOfService_CIBarcodeScanner* This,
        UINT32 barcodeSymbology,
        __x_ABI_C__FIAsyncOperation_1_boolean** operation);
    HRESULT (STDMETHODCALLTYPE* RetrieveStatisticsAsync)(__x_ABI_CWindows_CDevices_CPointOfService_CIBarcodeScanner* This,
        __x_ABI_C__FIIterable_1_HSTRING* statisticsCategories,
        __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CStorage__CStreams__CIBuffer** operation);
    HRESULT (STDMETHODCALLTYPE* GetSupportedProfiles)(__x_ABI_CWindows_CDevices_CPointOfService_CIBarcodeScanner* This,
        __x_ABI_C__FIVectorView_1_HSTRING** value);
    HRESULT (STDMETHODCALLTYPE* IsProfileSupported)(__x_ABI_CWindows_CDevices_CPointOfService_CIBarcodeScanner* This,
        HSTRING profile,
        boolean* isSupported);
    HRESULT (STDMETHODCALLTYPE* add_StatusUpdated)(__x_ABI_CWindows_CDevices_CPointOfService_CIBarcodeScanner* This,
        __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CDevices__CPointOfService__CBarcodeScanner___x_ABI_CWindows__CDevices__CPointOfService__CBarcodeScannerStatusUpdatedEventArgs* handler,
        EventRegistrationToken* token);
    HRESULT (STDMETHODCALLTYPE* remove_StatusUpdated)(__x_ABI_CWindows_CDevices_CPointOfService_CIBarcodeScanner* This,
        EventRegistrationToken token);

        END_INTERFACE
    } __x_ABI_CWindows_CDevices_CPointOfService_CIBarcodeScannerVtbl;

    interface __x_ABI_CWindows_CDevices_CPointOfService_CIBarcodeScanner
    {
        CONST_VTBL struct __x_ABI_CWindows_CDevices_CPointOfService_CIBarcodeScannerVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CDevices_CPointOfService_CIBarcodeScanner;
#endif /* !defined(____x_ABI_CWindows_CDevices_CPointOfService_CIBarcodeScanner_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CDevices_CPointOfService_CIBarcodeScanner2_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CDevices_CPointOfService_CIBarcodeScanner2_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CDevices_CPointOfService_CIBarcodeScanner2Vtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CDevices_CPointOfService_CIBarcodeScanner2* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CDevices_CPointOfService_CIBarcodeScanner2* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CDevices_CPointOfService_CIBarcodeScanner2* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CDevices_CPointOfService_CIBarcodeScanner2* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CDevices_CPointOfService_CIBarcodeScanner2* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CDevices_CPointOfService_CIBarcodeScanner2* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_VideoDeviceId)(__x_ABI_CWindows_CDevices_CPointOfService_CIBarcodeScanner2* This,
        HSTRING* value);

        END_INTERFACE
    } __x_ABI_CWindows_CDevices_CPointOfService_CIBarcodeScanner2Vtbl;

    interface __x_ABI_CWindows_CDevices_CPointOfService_CIBarcodeScanner2
    {
        CONST_VTBL struct __x_ABI_CWindows_CDevices_CPointOfService_CIBarcodeScanner2Vtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CDevices_CPointOfService_CIBarcodeScanner2;
#endif /* !defined(____x_ABI_CWindows_CDevices_CPointOfService_CIBarcodeScanner2_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CDevices_CPointOfService_CIBarcodeScannerCapabilities_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CDevices_CPointOfService_CIBarcodeScannerCapabilities_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CDevices_CPointOfService_CIBarcodeScannerCapabilitiesVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CDevices_CPointOfService_CIBarcodeScannerCapabilities* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CDevices_CPointOfService_CIBarcodeScannerCapabilities* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CDevices_CPointOfService_CIBarcodeScannerCapabilities* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CDevices_CPointOfService_CIBarcodeScannerCapabilities* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CDevices_CPointOfService_CIBarcodeScannerCapabilities* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CDevices_CPointOfService_CIBarcodeScannerCapabilities* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_PowerReportingType)(__x_ABI_CWindows_CDevices_CPointOfService_CIBarcodeScannerCapabilities* This,
        enum __x_ABI_CWindows_CDevices_CPointOfService_CUnifiedPosPowerReportingType* value);
    HRESULT (STDMETHODCALLTYPE* get_IsStatisticsReportingSupported)(__x_ABI_CWindows_CDevices_CPointOfService_CIBarcodeScannerCapabilities* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* get_IsStatisticsUpdatingSupported)(__x_ABI_CWindows_CDevices_CPointOfService_CIBarcodeScannerCapabilities* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* get_IsImagePreviewSupported)(__x_ABI_CWindows_CDevices_CPointOfService_CIBarcodeScannerCapabilities* This,
        boolean* value);

        END_INTERFACE
    } __x_ABI_CWindows_CDevices_CPointOfService_CIBarcodeScannerCapabilitiesVtbl;

    interface __x_ABI_CWindows_CDevices_CPointOfService_CIBarcodeScannerCapabilities
    {
        CONST_VTBL struct __x_ABI_CWindows_CDevices_CPointOfService_CIBarcodeScannerCapabilitiesVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CDevices_CPointOfService_CIBarcodeScannerCapabilities;
#endif /* !defined(____x_ABI_CWindows_CDevices_CPointOfService_CIBarcodeScannerCapabilities_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CDevices_CPointOfService_CIBarcodeScannerCapabilities1_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CDevices_CPointOfService_CIBarcodeScannerCapabilities1_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CDevices_CPointOfService_CIBarcodeScannerCapabilities1Vtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CDevices_CPointOfService_CIBarcodeScannerCapabilities1* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CDevices_CPointOfService_CIBarcodeScannerCapabilities1* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CDevices_CPointOfService_CIBarcodeScannerCapabilities1* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CDevices_CPointOfService_CIBarcodeScannerCapabilities1* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CDevices_CPointOfService_CIBarcodeScannerCapabilities1* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CDevices_CPointOfService_CIBarcodeScannerCapabilities1* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_IsSoftwareTriggerSupported)(__x_ABI_CWindows_CDevices_CPointOfService_CIBarcodeScannerCapabilities1* This,
        boolean* value);

        END_INTERFACE
    } __x_ABI_CWindows_CDevices_CPointOfService_CIBarcodeScannerCapabilities1Vtbl;

    interface __x_ABI_CWindows_CDevices_CPointOfService_CIBarcodeScannerCapabilities1
    {
        CONST_VTBL struct __x_ABI_CWindows_CDevices_CPointOfService_CIBarcodeScannerCapabilities1Vtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CDevices_CPointOfService_CIBarcodeScannerCapabilities1;
#endif /* !defined(____x_ABI_CWindows_CDevices_CPointOfService_CIBarcodeScannerCapabilities1_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CDevices_CPointOfService_CIBarcodeScannerCapabilities2_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CDevices_CPointOfService_CIBarcodeScannerCapabilities2_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CDevices_CPointOfService_CIBarcodeScannerCapabilities2Vtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CDevices_CPointOfService_CIBarcodeScannerCapabilities2* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CDevices_CPointOfService_CIBarcodeScannerCapabilities2* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CDevices_CPointOfService_CIBarcodeScannerCapabilities2* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CDevices_CPointOfService_CIBarcodeScannerCapabilities2* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CDevices_CPointOfService_CIBarcodeScannerCapabilities2* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CDevices_CPointOfService_CIBarcodeScannerCapabilities2* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_IsVideoPreviewSupported)(__x_ABI_CWindows_CDevices_CPointOfService_CIBarcodeScannerCapabilities2* This,
        boolean* value);

        END_INTERFACE
    } __x_ABI_CWindows_CDevices_CPointOfService_CIBarcodeScannerCapabilities2Vtbl;

    interface __x_ABI_CWindows_CDevices_CPointOfService_CIBarcodeScannerCapabilities2
    {
        CONST_VTBL struct __x_ABI_CWindows_CDevices_CPointOfService_CIBarcodeScannerCapabilities2Vtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CDevices_CPointOfService_CIBarcodeScannerCapabilities2;
#endif /* !defined(____x_ABI_CWindows_CDevices_CPointOfService_CIBarcodeScannerCapabilities2_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CDevices_CPointOfService_CIBarcodeScannerDataReceivedEventArgs_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CDevices_CPointOfService_CIBarcodeScannerDataReceivedEventArgs_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CDevices_CPointOfService_CIBarcodeScannerDataReceivedEventArgsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CDevices_CPointOfService_CIBarcodeScannerDataReceivedEventArgs* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CDevices_CPointOfService_CIBarcodeScannerDataReceivedEventArgs* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CDevices_CPointOfService_CIBarcodeScannerDataReceivedEventArgs* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CDevices_CPointOfService_CIBarcodeScannerDataReceivedEventArgs* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CDevices_CPointOfService_CIBarcodeScannerDataReceivedEventArgs* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CDevices_CPointOfService_CIBarcodeScannerDataReceivedEventArgs* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Report)(__x_ABI_CWindows_CDevices_CPointOfService_CIBarcodeScannerDataReceivedEventArgs* This,
        __x_ABI_CWindows_CDevices_CPointOfService_CIBarcodeScannerReport** value);

        END_INTERFACE
    } __x_ABI_CWindows_CDevices_CPointOfService_CIBarcodeScannerDataReceivedEventArgsVtbl;

    interface __x_ABI_CWindows_CDevices_CPointOfService_CIBarcodeScannerDataReceivedEventArgs
    {
        CONST_VTBL struct __x_ABI_CWindows_CDevices_CPointOfService_CIBarcodeScannerDataReceivedEventArgsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CDevices_CPointOfService_CIBarcodeScannerDataReceivedEventArgs;
#endif /* !defined(____x_ABI_CWindows_CDevices_CPointOfService_CIBarcodeScannerDataReceivedEventArgs_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CDevices_CPointOfService_CIBarcodeScannerErrorOccurredEventArgs_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CDevices_CPointOfService_CIBarcodeScannerErrorOccurredEventArgs_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CDevices_CPointOfService_CIBarcodeScannerErrorOccurredEventArgsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CDevices_CPointOfService_CIBarcodeScannerErrorOccurredEventArgs* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CDevices_CPointOfService_CIBarcodeScannerErrorOccurredEventArgs* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CDevices_CPointOfService_CIBarcodeScannerErrorOccurredEventArgs* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CDevices_CPointOfService_CIBarcodeScannerErrorOccurredEventArgs* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CDevices_CPointOfService_CIBarcodeScannerErrorOccurredEventArgs* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CDevices_CPointOfService_CIBarcodeScannerErrorOccurredEventArgs* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_PartialInputData)(__x_ABI_CWindows_CDevices_CPointOfService_CIBarcodeScannerErrorOccurredEventArgs* This,
        __x_ABI_CWindows_CDevices_CPointOfService_CIBarcodeScannerReport** value);
    HRESULT (STDMETHODCALLTYPE* get_IsRetriable)(__x_ABI_CWindows_CDevices_CPointOfService_CIBarcodeScannerErrorOccurredEventArgs* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* get_ErrorData)(__x_ABI_CWindows_CDevices_CPointOfService_CIBarcodeScannerErrorOccurredEventArgs* This,
        __x_ABI_CWindows_CDevices_CPointOfService_CIUnifiedPosErrorData** value);

        END_INTERFACE
    } __x_ABI_CWindows_CDevices_CPointOfService_CIBarcodeScannerErrorOccurredEventArgsVtbl;

    interface __x_ABI_CWindows_CDevices_CPointOfService_CIBarcodeScannerErrorOccurredEventArgs
    {
        CONST_VTBL struct __x_ABI_CWindows_CDevices_CPointOfService_CIBarcodeScannerErrorOccurredEventArgsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CDevices_CPointOfService_CIBarcodeScannerErrorOccurredEventArgs;
#endif /* !defined(____x_ABI_CWindows_CDevices_CPointOfService_CIBarcodeScannerErrorOccurredEventArgs_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CDevices_CPointOfService_CIBarcodeScannerImagePreviewReceivedEventArgs_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CDevices_CPointOfService_CIBarcodeScannerImagePreviewReceivedEventArgs_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CDevices_CPointOfService_CIBarcodeScannerImagePreviewReceivedEventArgsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CDevices_CPointOfService_CIBarcodeScannerImagePreviewReceivedEventArgs* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CDevices_CPointOfService_CIBarcodeScannerImagePreviewReceivedEventArgs* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CDevices_CPointOfService_CIBarcodeScannerImagePreviewReceivedEventArgs* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CDevices_CPointOfService_CIBarcodeScannerImagePreviewReceivedEventArgs* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CDevices_CPointOfService_CIBarcodeScannerImagePreviewReceivedEventArgs* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CDevices_CPointOfService_CIBarcodeScannerImagePreviewReceivedEventArgs* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Preview)(__x_ABI_CWindows_CDevices_CPointOfService_CIBarcodeScannerImagePreviewReceivedEventArgs* This,
        __x_ABI_CWindows_CStorage_CStreams_CIRandomAccessStreamWithContentType** value);

        END_INTERFACE
    } __x_ABI_CWindows_CDevices_CPointOfService_CIBarcodeScannerImagePreviewReceivedEventArgsVtbl;

    interface __x_ABI_CWindows_CDevices_CPointOfService_CIBarcodeScannerImagePreviewReceivedEventArgs
    {
        CONST_VTBL struct __x_ABI_CWindows_CDevices_CPointOfService_CIBarcodeScannerImagePreviewReceivedEventArgsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CDevices_CPointOfService_CIBarcodeScannerImagePreviewReceivedEventArgs;
#endif /* !defined(____x_ABI_CWindows_CDevices_CPointOfService_CIBarcodeScannerImagePreviewReceivedEventArgs_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CDevices_CPointOfService_CIBarcodeScannerReport_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CDevices_CPointOfService_CIBarcodeScannerReport_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CDevices_CPointOfService_CIBarcodeScannerReportVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CDevices_CPointOfService_CIBarcodeScannerReport* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CDevices_CPointOfService_CIBarcodeScannerReport* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CDevices_CPointOfService_CIBarcodeScannerReport* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CDevices_CPointOfService_CIBarcodeScannerReport* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CDevices_CPointOfService_CIBarcodeScannerReport* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CDevices_CPointOfService_CIBarcodeScannerReport* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_ScanDataType)(__x_ABI_CWindows_CDevices_CPointOfService_CIBarcodeScannerReport* This,
        UINT32* value);
    HRESULT (STDMETHODCALLTYPE* get_ScanData)(__x_ABI_CWindows_CDevices_CPointOfService_CIBarcodeScannerReport* This,
        __x_ABI_CWindows_CStorage_CStreams_CIBuffer** value);
    HRESULT (STDMETHODCALLTYPE* get_ScanDataLabel)(__x_ABI_CWindows_CDevices_CPointOfService_CIBarcodeScannerReport* This,
        __x_ABI_CWindows_CStorage_CStreams_CIBuffer** value);

        END_INTERFACE
    } __x_ABI_CWindows_CDevices_CPointOfService_CIBarcodeScannerReportVtbl;

    interface __x_ABI_CWindows_CDevices_CPointOfService_CIBarcodeScannerReport
    {
        CONST_VTBL struct __x_ABI_CWindows_CDevices_CPointOfService_CIBarcodeScannerReportVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CDevices_CPointOfService_CIBarcodeScannerReport;
#endif /* !defined(____x_ABI_CWindows_CDevices_CPointOfService_CIBarcodeScannerReport_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CDevices_CPointOfService_CIBarcodeScannerReportFactory_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CDevices_CPointOfService_CIBarcodeScannerReportFactory_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CDevices_CPointOfService_CIBarcodeScannerReportFactoryVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CDevices_CPointOfService_CIBarcodeScannerReportFactory* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CDevices_CPointOfService_CIBarcodeScannerReportFactory* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CDevices_CPointOfService_CIBarcodeScannerReportFactory* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CDevices_CPointOfService_CIBarcodeScannerReportFactory* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CDevices_CPointOfService_CIBarcodeScannerReportFactory* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CDevices_CPointOfService_CIBarcodeScannerReportFactory* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* CreateInstance)(__x_ABI_CWindows_CDevices_CPointOfService_CIBarcodeScannerReportFactory* This,
        UINT32 scanDataType,
        __x_ABI_CWindows_CStorage_CStreams_CIBuffer* scanData,
        __x_ABI_CWindows_CStorage_CStreams_CIBuffer* scanDataLabel,
        __x_ABI_CWindows_CDevices_CPointOfService_CIBarcodeScannerReport** result);

        END_INTERFACE
    } __x_ABI_CWindows_CDevices_CPointOfService_CIBarcodeScannerReportFactoryVtbl;

    interface __x_ABI_CWindows_CDevices_CPointOfService_CIBarcodeScannerReportFactory
    {
        CONST_VTBL struct __x_ABI_CWindows_CDevices_CPointOfService_CIBarcodeScannerReportFactoryVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CDevices_CPointOfService_CIBarcodeScannerReportFactory;
#endif /* !defined(____x_ABI_CWindows_CDevices_CPointOfService_CIBarcodeScannerReportFactory_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CDevices_CPointOfService_CIBarcodeScannerStatics_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CDevices_CPointOfService_CIBarcodeScannerStatics_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CDevices_CPointOfService_CIBarcodeScannerStaticsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CDevices_CPointOfService_CIBarcodeScannerStatics* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CDevices_CPointOfService_CIBarcodeScannerStatics* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CDevices_CPointOfService_CIBarcodeScannerStatics* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CDevices_CPointOfService_CIBarcodeScannerStatics* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CDevices_CPointOfService_CIBarcodeScannerStatics* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CDevices_CPointOfService_CIBarcodeScannerStatics* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* GetDefaultAsync)(__x_ABI_CWindows_CDevices_CPointOfService_CIBarcodeScannerStatics* This,
        __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CDevices__CPointOfService__CBarcodeScanner** result);
    HRESULT (STDMETHODCALLTYPE* FromIdAsync)(__x_ABI_CWindows_CDevices_CPointOfService_CIBarcodeScannerStatics* This,
        HSTRING deviceId,
        __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CDevices__CPointOfService__CBarcodeScanner** result);
    HRESULT (STDMETHODCALLTYPE* GetDeviceSelector)(__x_ABI_CWindows_CDevices_CPointOfService_CIBarcodeScannerStatics* This,
        HSTRING* value);

        END_INTERFACE
    } __x_ABI_CWindows_CDevices_CPointOfService_CIBarcodeScannerStaticsVtbl;

    interface __x_ABI_CWindows_CDevices_CPointOfService_CIBarcodeScannerStatics
    {
        CONST_VTBL struct __x_ABI_CWindows_CDevices_CPointOfService_CIBarcodeScannerStaticsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CDevices_CPointOfService_CIBarcodeScannerStatics;
#endif /* !defined(____x_ABI_CWindows_CDevices_CPointOfService_CIBarcodeScannerStatics_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CDevices_CPointOfService_CIBarcodeScannerStatics2_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CDevices_CPointOfService_CIBarcodeScannerStatics2_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CDevices_CPointOfService_CIBarcodeScannerStatics2Vtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CDevices_CPointOfService_CIBarcodeScannerStatics2* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CDevices_CPointOfService_CIBarcodeScannerStatics2* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CDevices_CPointOfService_CIBarcodeScannerStatics2* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CDevices_CPointOfService_CIBarcodeScannerStatics2* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CDevices_CPointOfService_CIBarcodeScannerStatics2* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CDevices_CPointOfService_CIBarcodeScannerStatics2* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* GetDeviceSelectorWithConnectionTypes)(__x_ABI_CWindows_CDevices_CPointOfService_CIBarcodeScannerStatics2* This,
        enum __x_ABI_CWindows_CDevices_CPointOfService_CPosConnectionTypes connectionTypes,
        HSTRING* value);

        END_INTERFACE
    } __x_ABI_CWindows_CDevices_CPointOfService_CIBarcodeScannerStatics2Vtbl;

    interface __x_ABI_CWindows_CDevices_CPointOfService_CIBarcodeScannerStatics2
    {
        CONST_VTBL struct __x_ABI_CWindows_CDevices_CPointOfService_CIBarcodeScannerStatics2Vtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CDevices_CPointOfService_CIBarcodeScannerStatics2;
#endif /* !defined(____x_ABI_CWindows_CDevices_CPointOfService_CIBarcodeScannerStatics2_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CDevices_CPointOfService_CIBarcodeScannerStatusUpdatedEventArgs_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CDevices_CPointOfService_CIBarcodeScannerStatusUpdatedEventArgs_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CDevices_CPointOfService_CIBarcodeScannerStatusUpdatedEventArgsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CDevices_CPointOfService_CIBarcodeScannerStatusUpdatedEventArgs* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CDevices_CPointOfService_CIBarcodeScannerStatusUpdatedEventArgs* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CDevices_CPointOfService_CIBarcodeScannerStatusUpdatedEventArgs* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CDevices_CPointOfService_CIBarcodeScannerStatusUpdatedEventArgs* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CDevices_CPointOfService_CIBarcodeScannerStatusUpdatedEventArgs* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CDevices_CPointOfService_CIBarcodeScannerStatusUpdatedEventArgs* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Status)(__x_ABI_CWindows_CDevices_CPointOfService_CIBarcodeScannerStatusUpdatedEventArgs* This,
        enum __x_ABI_CWindows_CDevices_CPointOfService_CBarcodeScannerStatus* value);
    HRESULT (STDMETHODCALLTYPE* get_ExtendedStatus)(__x_ABI_CWindows_CDevices_CPointOfService_CIBarcodeScannerStatusUpdatedEventArgs* This,
        UINT32* value);

        END_INTERFACE
    } __x_ABI_CWindows_CDevices_CPointOfService_CIBarcodeScannerStatusUpdatedEventArgsVtbl;

    interface __x_ABI_CWindows_CDevices_CPointOfService_CIBarcodeScannerStatusUpdatedEventArgs
    {
        CONST_VTBL struct __x_ABI_CWindows_CDevices_CPointOfService_CIBarcodeScannerStatusUpdatedEventArgsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CDevices_CPointOfService_CIBarcodeScannerStatusUpdatedEventArgs;
#endif /* !defined(____x_ABI_CWindows_CDevices_CPointOfService_CIBarcodeScannerStatusUpdatedEventArgs_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CDevices_CPointOfService_CIBarcodeSymbologiesStatics_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CDevices_CPointOfService_CIBarcodeSymbologiesStatics_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CDevices_CPointOfService_CIBarcodeSymbologiesStaticsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CDevices_CPointOfService_CIBarcodeSymbologiesStatics* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CDevices_CPointOfService_CIBarcodeSymbologiesStatics* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CDevices_CPointOfService_CIBarcodeSymbologiesStatics* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CDevices_CPointOfService_CIBarcodeSymbologiesStatics* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CDevices_CPointOfService_CIBarcodeSymbologiesStatics* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CDevices_CPointOfService_CIBarcodeSymbologiesStatics* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Unknown)(__x_ABI_CWindows_CDevices_CPointOfService_CIBarcodeSymbologiesStatics* This,
        UINT32* value);
    HRESULT (STDMETHODCALLTYPE* get_Ean8)(__x_ABI_CWindows_CDevices_CPointOfService_CIBarcodeSymbologiesStatics* This,
        UINT32* value);
    HRESULT (STDMETHODCALLTYPE* get_Ean8Add2)(__x_ABI_CWindows_CDevices_CPointOfService_CIBarcodeSymbologiesStatics* This,
        UINT32* value);
    HRESULT (STDMETHODCALLTYPE* get_Ean8Add5)(__x_ABI_CWindows_CDevices_CPointOfService_CIBarcodeSymbologiesStatics* This,
        UINT32* value);
    HRESULT (STDMETHODCALLTYPE* get_Eanv)(__x_ABI_CWindows_CDevices_CPointOfService_CIBarcodeSymbologiesStatics* This,
        UINT32* value);
    HRESULT (STDMETHODCALLTYPE* get_EanvAdd2)(__x_ABI_CWindows_CDevices_CPointOfService_CIBarcodeSymbologiesStatics* This,
        UINT32* value);
    HRESULT (STDMETHODCALLTYPE* get_EanvAdd5)(__x_ABI_CWindows_CDevices_CPointOfService_CIBarcodeSymbologiesStatics* This,
        UINT32* value);
    HRESULT (STDMETHODCALLTYPE* get_Ean13)(__x_ABI_CWindows_CDevices_CPointOfService_CIBarcodeSymbologiesStatics* This,
        UINT32* value);
    HRESULT (STDMETHODCALLTYPE* get_Ean13Add2)(__x_ABI_CWindows_CDevices_CPointOfService_CIBarcodeSymbologiesStatics* This,
        UINT32* value);
    HRESULT (STDMETHODCALLTYPE* get_Ean13Add5)(__x_ABI_CWindows_CDevices_CPointOfService_CIBarcodeSymbologiesStatics* This,
        UINT32* value);
    HRESULT (STDMETHODCALLTYPE* get_Isbn)(__x_ABI_CWindows_CDevices_CPointOfService_CIBarcodeSymbologiesStatics* This,
        UINT32* value);
    HRESULT (STDMETHODCALLTYPE* get_IsbnAdd5)(__x_ABI_CWindows_CDevices_CPointOfService_CIBarcodeSymbologiesStatics* This,
        UINT32* value);
    HRESULT (STDMETHODCALLTYPE* get_Ismn)(__x_ABI_CWindows_CDevices_CPointOfService_CIBarcodeSymbologiesStatics* This,
        UINT32* value);
    HRESULT (STDMETHODCALLTYPE* get_IsmnAdd2)(__x_ABI_CWindows_CDevices_CPointOfService_CIBarcodeSymbologiesStatics* This,
        UINT32* value);
    HRESULT (STDMETHODCALLTYPE* get_IsmnAdd5)(__x_ABI_CWindows_CDevices_CPointOfService_CIBarcodeSymbologiesStatics* This,
        UINT32* value);
    HRESULT (STDMETHODCALLTYPE* get_Issn)(__x_ABI_CWindows_CDevices_CPointOfService_CIBarcodeSymbologiesStatics* This,
        UINT32* value);
    HRESULT (STDMETHODCALLTYPE* get_IssnAdd2)(__x_ABI_CWindows_CDevices_CPointOfService_CIBarcodeSymbologiesStatics* This,
        UINT32* value);
    HRESULT (STDMETHODCALLTYPE* get_IssnAdd5)(__x_ABI_CWindows_CDevices_CPointOfService_CIBarcodeSymbologiesStatics* This,
        UINT32* value);
    HRESULT (STDMETHODCALLTYPE* get_Ean99)(__x_ABI_CWindows_CDevices_CPointOfService_CIBarcodeSymbologiesStatics* This,
        UINT32* value);
    HRESULT (STDMETHODCALLTYPE* get_Ean99Add2)(__x_ABI_CWindows_CDevices_CPointOfService_CIBarcodeSymbologiesStatics* This,
        UINT32* value);
    HRESULT (STDMETHODCALLTYPE* get_Ean99Add5)(__x_ABI_CWindows_CDevices_CPointOfService_CIBarcodeSymbologiesStatics* This,
        UINT32* value);
    HRESULT (STDMETHODCALLTYPE* get_Upca)(__x_ABI_CWindows_CDevices_CPointOfService_CIBarcodeSymbologiesStatics* This,
        UINT32* value);
    HRESULT (STDMETHODCALLTYPE* get_UpcaAdd2)(__x_ABI_CWindows_CDevices_CPointOfService_CIBarcodeSymbologiesStatics* This,
        UINT32* value);
    HRESULT (STDMETHODCALLTYPE* get_UpcaAdd5)(__x_ABI_CWindows_CDevices_CPointOfService_CIBarcodeSymbologiesStatics* This,
        UINT32* value);
    HRESULT (STDMETHODCALLTYPE* get_Upce)(__x_ABI_CWindows_CDevices_CPointOfService_CIBarcodeSymbologiesStatics* This,
        UINT32* value);
    HRESULT (STDMETHODCALLTYPE* get_UpceAdd2)(__x_ABI_CWindows_CDevices_CPointOfService_CIBarcodeSymbologiesStatics* This,
        UINT32* value);
    HRESULT (STDMETHODCALLTYPE* get_UpceAdd5)(__x_ABI_CWindows_CDevices_CPointOfService_CIBarcodeSymbologiesStatics* This,
        UINT32* value);
    HRESULT (STDMETHODCALLTYPE* get_UpcCoupon)(__x_ABI_CWindows_CDevices_CPointOfService_CIBarcodeSymbologiesStatics* This,
        UINT32* value);
    HRESULT (STDMETHODCALLTYPE* get_TfStd)(__x_ABI_CWindows_CDevices_CPointOfService_CIBarcodeSymbologiesStatics* This,
        UINT32* value);
    HRESULT (STDMETHODCALLTYPE* get_TfDis)(__x_ABI_CWindows_CDevices_CPointOfService_CIBarcodeSymbologiesStatics* This,
        UINT32* value);
    HRESULT (STDMETHODCALLTYPE* get_TfInt)(__x_ABI_CWindows_CDevices_CPointOfService_CIBarcodeSymbologiesStatics* This,
        UINT32* value);
    HRESULT (STDMETHODCALLTYPE* get_TfInd)(__x_ABI_CWindows_CDevices_CPointOfService_CIBarcodeSymbologiesStatics* This,
        UINT32* value);
    HRESULT (STDMETHODCALLTYPE* get_TfMat)(__x_ABI_CWindows_CDevices_CPointOfService_CIBarcodeSymbologiesStatics* This,
        UINT32* value);
    HRESULT (STDMETHODCALLTYPE* get_TfIata)(__x_ABI_CWindows_CDevices_CPointOfService_CIBarcodeSymbologiesStatics* This,
        UINT32* value);
    HRESULT (STDMETHODCALLTYPE* get_Gs1DatabarType1)(__x_ABI_CWindows_CDevices_CPointOfService_CIBarcodeSymbologiesStatics* This,
        UINT32* value);
    HRESULT (STDMETHODCALLTYPE* get_Gs1DatabarType2)(__x_ABI_CWindows_CDevices_CPointOfService_CIBarcodeSymbologiesStatics* This,
        UINT32* value);
    HRESULT (STDMETHODCALLTYPE* get_Gs1DatabarType3)(__x_ABI_CWindows_CDevices_CPointOfService_CIBarcodeSymbologiesStatics* This,
        UINT32* value);
    HRESULT (STDMETHODCALLTYPE* get_Code39)(__x_ABI_CWindows_CDevices_CPointOfService_CIBarcodeSymbologiesStatics* This,
        UINT32* value);
    HRESULT (STDMETHODCALLTYPE* get_Code39Ex)(__x_ABI_CWindows_CDevices_CPointOfService_CIBarcodeSymbologiesStatics* This,
        UINT32* value);
    HRESULT (STDMETHODCALLTYPE* get_Trioptic39)(__x_ABI_CWindows_CDevices_CPointOfService_CIBarcodeSymbologiesStatics* This,
        UINT32* value);
    HRESULT (STDMETHODCALLTYPE* get_Code32)(__x_ABI_CWindows_CDevices_CPointOfService_CIBarcodeSymbologiesStatics* This,
        UINT32* value);
    HRESULT (STDMETHODCALLTYPE* get_Pzn)(__x_ABI_CWindows_CDevices_CPointOfService_CIBarcodeSymbologiesStatics* This,
        UINT32* value);
    HRESULT (STDMETHODCALLTYPE* get_Code93)(__x_ABI_CWindows_CDevices_CPointOfService_CIBarcodeSymbologiesStatics* This,
        UINT32* value);
    HRESULT (STDMETHODCALLTYPE* get_Code93Ex)(__x_ABI_CWindows_CDevices_CPointOfService_CIBarcodeSymbologiesStatics* This,
        UINT32* value);
    HRESULT (STDMETHODCALLTYPE* get_Code128)(__x_ABI_CWindows_CDevices_CPointOfService_CIBarcodeSymbologiesStatics* This,
        UINT32* value);
    HRESULT (STDMETHODCALLTYPE* get_Gs1128)(__x_ABI_CWindows_CDevices_CPointOfService_CIBarcodeSymbologiesStatics* This,
        UINT32* value);
    HRESULT (STDMETHODCALLTYPE* get_Gs1128Coupon)(__x_ABI_CWindows_CDevices_CPointOfService_CIBarcodeSymbologiesStatics* This,
        UINT32* value);
    HRESULT (STDMETHODCALLTYPE* get_UccEan128)(__x_ABI_CWindows_CDevices_CPointOfService_CIBarcodeSymbologiesStatics* This,
        UINT32* value);
    HRESULT (STDMETHODCALLTYPE* get_Sisac)(__x_ABI_CWindows_CDevices_CPointOfService_CIBarcodeSymbologiesStatics* This,
        UINT32* value);
    HRESULT (STDMETHODCALLTYPE* get_Isbt)(__x_ABI_CWindows_CDevices_CPointOfService_CIBarcodeSymbologiesStatics* This,
        UINT32* value);
    HRESULT (STDMETHODCALLTYPE* get_Codabar)(__x_ABI_CWindows_CDevices_CPointOfService_CIBarcodeSymbologiesStatics* This,
        UINT32* value);
    HRESULT (STDMETHODCALLTYPE* get_Code11)(__x_ABI_CWindows_CDevices_CPointOfService_CIBarcodeSymbologiesStatics* This,
        UINT32* value);
    HRESULT (STDMETHODCALLTYPE* get_Msi)(__x_ABI_CWindows_CDevices_CPointOfService_CIBarcodeSymbologiesStatics* This,
        UINT32* value);
    HRESULT (STDMETHODCALLTYPE* get_Plessey)(__x_ABI_CWindows_CDevices_CPointOfService_CIBarcodeSymbologiesStatics* This,
        UINT32* value);
    HRESULT (STDMETHODCALLTYPE* get_Telepen)(__x_ABI_CWindows_CDevices_CPointOfService_CIBarcodeSymbologiesStatics* This,
        UINT32* value);
    HRESULT (STDMETHODCALLTYPE* get_Code16k)(__x_ABI_CWindows_CDevices_CPointOfService_CIBarcodeSymbologiesStatics* This,
        UINT32* value);
    HRESULT (STDMETHODCALLTYPE* get_CodablockA)(__x_ABI_CWindows_CDevices_CPointOfService_CIBarcodeSymbologiesStatics* This,
        UINT32* value);
    HRESULT (STDMETHODCALLTYPE* get_CodablockF)(__x_ABI_CWindows_CDevices_CPointOfService_CIBarcodeSymbologiesStatics* This,
        UINT32* value);
    HRESULT (STDMETHODCALLTYPE* get_Codablock128)(__x_ABI_CWindows_CDevices_CPointOfService_CIBarcodeSymbologiesStatics* This,
        UINT32* value);
    HRESULT (STDMETHODCALLTYPE* get_Code49)(__x_ABI_CWindows_CDevices_CPointOfService_CIBarcodeSymbologiesStatics* This,
        UINT32* value);
    HRESULT (STDMETHODCALLTYPE* get_Aztec)(__x_ABI_CWindows_CDevices_CPointOfService_CIBarcodeSymbologiesStatics* This,
        UINT32* value);
    HRESULT (STDMETHODCALLTYPE* get_DataCode)(__x_ABI_CWindows_CDevices_CPointOfService_CIBarcodeSymbologiesStatics* This,
        UINT32* value);
    HRESULT (STDMETHODCALLTYPE* get_DataMatrix)(__x_ABI_CWindows_CDevices_CPointOfService_CIBarcodeSymbologiesStatics* This,
        UINT32* value);
    HRESULT (STDMETHODCALLTYPE* get_HanXin)(__x_ABI_CWindows_CDevices_CPointOfService_CIBarcodeSymbologiesStatics* This,
        UINT32* value);
    HRESULT (STDMETHODCALLTYPE* get_Maxicode)(__x_ABI_CWindows_CDevices_CPointOfService_CIBarcodeSymbologiesStatics* This,
        UINT32* value);
    HRESULT (STDMETHODCALLTYPE* get_MicroPdf417)(__x_ABI_CWindows_CDevices_CPointOfService_CIBarcodeSymbologiesStatics* This,
        UINT32* value);
    HRESULT (STDMETHODCALLTYPE* get_MicroQr)(__x_ABI_CWindows_CDevices_CPointOfService_CIBarcodeSymbologiesStatics* This,
        UINT32* value);
    HRESULT (STDMETHODCALLTYPE* get_Pdf417)(__x_ABI_CWindows_CDevices_CPointOfService_CIBarcodeSymbologiesStatics* This,
        UINT32* value);
    HRESULT (STDMETHODCALLTYPE* get_Qr)(__x_ABI_CWindows_CDevices_CPointOfService_CIBarcodeSymbologiesStatics* This,
        UINT32* value);
    HRESULT (STDMETHODCALLTYPE* get_MsTag)(__x_ABI_CWindows_CDevices_CPointOfService_CIBarcodeSymbologiesStatics* This,
        UINT32* value);
    HRESULT (STDMETHODCALLTYPE* get_Ccab)(__x_ABI_CWindows_CDevices_CPointOfService_CIBarcodeSymbologiesStatics* This,
        UINT32* value);
    HRESULT (STDMETHODCALLTYPE* get_Ccc)(__x_ABI_CWindows_CDevices_CPointOfService_CIBarcodeSymbologiesStatics* This,
        UINT32* value);
    HRESULT (STDMETHODCALLTYPE* get_Tlc39)(__x_ABI_CWindows_CDevices_CPointOfService_CIBarcodeSymbologiesStatics* This,
        UINT32* value);
    HRESULT (STDMETHODCALLTYPE* get_AusPost)(__x_ABI_CWindows_CDevices_CPointOfService_CIBarcodeSymbologiesStatics* This,
        UINT32* value);
    HRESULT (STDMETHODCALLTYPE* get_CanPost)(__x_ABI_CWindows_CDevices_CPointOfService_CIBarcodeSymbologiesStatics* This,
        UINT32* value);
    HRESULT (STDMETHODCALLTYPE* get_ChinaPost)(__x_ABI_CWindows_CDevices_CPointOfService_CIBarcodeSymbologiesStatics* This,
        UINT32* value);
    HRESULT (STDMETHODCALLTYPE* get_DutchKix)(__x_ABI_CWindows_CDevices_CPointOfService_CIBarcodeSymbologiesStatics* This,
        UINT32* value);
    HRESULT (STDMETHODCALLTYPE* get_InfoMail)(__x_ABI_CWindows_CDevices_CPointOfService_CIBarcodeSymbologiesStatics* This,
        UINT32* value);
    HRESULT (STDMETHODCALLTYPE* get_ItalianPost25)(__x_ABI_CWindows_CDevices_CPointOfService_CIBarcodeSymbologiesStatics* This,
        UINT32* value);
    HRESULT (STDMETHODCALLTYPE* get_ItalianPost39)(__x_ABI_CWindows_CDevices_CPointOfService_CIBarcodeSymbologiesStatics* This,
        UINT32* value);
    HRESULT (STDMETHODCALLTYPE* get_JapanPost)(__x_ABI_CWindows_CDevices_CPointOfService_CIBarcodeSymbologiesStatics* This,
        UINT32* value);
    HRESULT (STDMETHODCALLTYPE* get_KoreanPost)(__x_ABI_CWindows_CDevices_CPointOfService_CIBarcodeSymbologiesStatics* This,
        UINT32* value);
    HRESULT (STDMETHODCALLTYPE* get_SwedenPost)(__x_ABI_CWindows_CDevices_CPointOfService_CIBarcodeSymbologiesStatics* This,
        UINT32* value);
    HRESULT (STDMETHODCALLTYPE* get_UkPost)(__x_ABI_CWindows_CDevices_CPointOfService_CIBarcodeSymbologiesStatics* This,
        UINT32* value);
    HRESULT (STDMETHODCALLTYPE* get_UsIntelligent)(__x_ABI_CWindows_CDevices_CPointOfService_CIBarcodeSymbologiesStatics* This,
        UINT32* value);
    HRESULT (STDMETHODCALLTYPE* get_UsIntelligentPkg)(__x_ABI_CWindows_CDevices_CPointOfService_CIBarcodeSymbologiesStatics* This,
        UINT32* value);
    HRESULT (STDMETHODCALLTYPE* get_UsPlanet)(__x_ABI_CWindows_CDevices_CPointOfService_CIBarcodeSymbologiesStatics* This,
        UINT32* value);
    HRESULT (STDMETHODCALLTYPE* get_UsPostNet)(__x_ABI_CWindows_CDevices_CPointOfService_CIBarcodeSymbologiesStatics* This,
        UINT32* value);
    HRESULT (STDMETHODCALLTYPE* get_Us4StateFics)(__x_ABI_CWindows_CDevices_CPointOfService_CIBarcodeSymbologiesStatics* This,
        UINT32* value);
    HRESULT (STDMETHODCALLTYPE* get_OcrA)(__x_ABI_CWindows_CDevices_CPointOfService_CIBarcodeSymbologiesStatics* This,
        UINT32* value);
    HRESULT (STDMETHODCALLTYPE* get_OcrB)(__x_ABI_CWindows_CDevices_CPointOfService_CIBarcodeSymbologiesStatics* This,
        UINT32* value);
    HRESULT (STDMETHODCALLTYPE* get_Micr)(__x_ABI_CWindows_CDevices_CPointOfService_CIBarcodeSymbologiesStatics* This,
        UINT32* value);
    HRESULT (STDMETHODCALLTYPE* get_ExtendedBase)(__x_ABI_CWindows_CDevices_CPointOfService_CIBarcodeSymbologiesStatics* This,
        UINT32* value);
    HRESULT (STDMETHODCALLTYPE* GetName)(__x_ABI_CWindows_CDevices_CPointOfService_CIBarcodeSymbologiesStatics* This,
        UINT32 scanDataType,
        HSTRING* value);

        END_INTERFACE
    } __x_ABI_CWindows_CDevices_CPointOfService_CIBarcodeSymbologiesStaticsVtbl;

    interface __x_ABI_CWindows_CDevices_CPointOfService_CIBarcodeSymbologiesStatics
    {
        CONST_VTBL struct __x_ABI_CWindows_CDevices_CPointOfService_CIBarcodeSymbologiesStaticsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CDevices_CPointOfService_CIBarcodeSymbologiesStatics;
#endif /* !defined(____x_ABI_CWindows_CDevices_CPointOfService_CIBarcodeSymbologiesStatics_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CDevices_CPointOfService_CIBarcodeSymbologiesStatics2_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CDevices_CPointOfService_CIBarcodeSymbologiesStatics2_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CDevices_CPointOfService_CIBarcodeSymbologiesStatics2Vtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CDevices_CPointOfService_CIBarcodeSymbologiesStatics2* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CDevices_CPointOfService_CIBarcodeSymbologiesStatics2* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CDevices_CPointOfService_CIBarcodeSymbologiesStatics2* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CDevices_CPointOfService_CIBarcodeSymbologiesStatics2* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CDevices_CPointOfService_CIBarcodeSymbologiesStatics2* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CDevices_CPointOfService_CIBarcodeSymbologiesStatics2* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Gs1DWCode)(__x_ABI_CWindows_CDevices_CPointOfService_CIBarcodeSymbologiesStatics2* This,
        UINT32* value);

        END_INTERFACE
    } __x_ABI_CWindows_CDevices_CPointOfService_CIBarcodeSymbologiesStatics2Vtbl;

    interface __x_ABI_CWindows_CDevices_CPointOfService_CIBarcodeSymbologiesStatics2
    {
        CONST_VTBL struct __x_ABI_CWindows_CDevices_CPointOfService_CIBarcodeSymbologiesStatics2Vtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CDevices_CPointOfService_CIBarcodeSymbologiesStatics2;
#endif /* !defined(____x_ABI_CWindows_CDevices_CPointOfService_CIBarcodeSymbologiesStatics2_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CDevices_CPointOfService_CIBarcodeSymbologyAttributes_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CDevices_CPointOfService_CIBarcodeSymbologyAttributes_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CDevices_CPointOfService_CIBarcodeSymbologyAttributesVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CDevices_CPointOfService_CIBarcodeSymbologyAttributes* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CDevices_CPointOfService_CIBarcodeSymbologyAttributes* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CDevices_CPointOfService_CIBarcodeSymbologyAttributes* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CDevices_CPointOfService_CIBarcodeSymbologyAttributes* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CDevices_CPointOfService_CIBarcodeSymbologyAttributes* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CDevices_CPointOfService_CIBarcodeSymbologyAttributes* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_IsCheckDigitValidationEnabled)(__x_ABI_CWindows_CDevices_CPointOfService_CIBarcodeSymbologyAttributes* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* put_IsCheckDigitValidationEnabled)(__x_ABI_CWindows_CDevices_CPointOfService_CIBarcodeSymbologyAttributes* This,
        boolean value);
    HRESULT (STDMETHODCALLTYPE* get_IsCheckDigitValidationSupported)(__x_ABI_CWindows_CDevices_CPointOfService_CIBarcodeSymbologyAttributes* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* get_IsCheckDigitTransmissionEnabled)(__x_ABI_CWindows_CDevices_CPointOfService_CIBarcodeSymbologyAttributes* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* put_IsCheckDigitTransmissionEnabled)(__x_ABI_CWindows_CDevices_CPointOfService_CIBarcodeSymbologyAttributes* This,
        boolean value);
    HRESULT (STDMETHODCALLTYPE* get_IsCheckDigitTransmissionSupported)(__x_ABI_CWindows_CDevices_CPointOfService_CIBarcodeSymbologyAttributes* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* get_DecodeLength1)(__x_ABI_CWindows_CDevices_CPointOfService_CIBarcodeSymbologyAttributes* This,
        UINT32* value);
    HRESULT (STDMETHODCALLTYPE* put_DecodeLength1)(__x_ABI_CWindows_CDevices_CPointOfService_CIBarcodeSymbologyAttributes* This,
        UINT32 value);
    HRESULT (STDMETHODCALLTYPE* get_DecodeLength2)(__x_ABI_CWindows_CDevices_CPointOfService_CIBarcodeSymbologyAttributes* This,
        UINT32* value);
    HRESULT (STDMETHODCALLTYPE* put_DecodeLength2)(__x_ABI_CWindows_CDevices_CPointOfService_CIBarcodeSymbologyAttributes* This,
        UINT32 value);
    HRESULT (STDMETHODCALLTYPE* get_DecodeLengthKind)(__x_ABI_CWindows_CDevices_CPointOfService_CIBarcodeSymbologyAttributes* This,
        enum __x_ABI_CWindows_CDevices_CPointOfService_CBarcodeSymbologyDecodeLengthKind* value);
    HRESULT (STDMETHODCALLTYPE* put_DecodeLengthKind)(__x_ABI_CWindows_CDevices_CPointOfService_CIBarcodeSymbologyAttributes* This,
        enum __x_ABI_CWindows_CDevices_CPointOfService_CBarcodeSymbologyDecodeLengthKind value);
    HRESULT (STDMETHODCALLTYPE* get_IsDecodeLengthSupported)(__x_ABI_CWindows_CDevices_CPointOfService_CIBarcodeSymbologyAttributes* This,
        boolean* value);

        END_INTERFACE
    } __x_ABI_CWindows_CDevices_CPointOfService_CIBarcodeSymbologyAttributesVtbl;

    interface __x_ABI_CWindows_CDevices_CPointOfService_CIBarcodeSymbologyAttributes
    {
        CONST_VTBL struct __x_ABI_CWindows_CDevices_CPointOfService_CIBarcodeSymbologyAttributesVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CDevices_CPointOfService_CIBarcodeSymbologyAttributes;
#endif /* !defined(____x_ABI_CWindows_CDevices_CPointOfService_CIBarcodeSymbologyAttributes_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CDevices_CPointOfService_CICashDrawer_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CDevices_CPointOfService_CICashDrawer_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CDevices_CPointOfService_CICashDrawerVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CDevices_CPointOfService_CICashDrawer* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CDevices_CPointOfService_CICashDrawer* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CDevices_CPointOfService_CICashDrawer* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CDevices_CPointOfService_CICashDrawer* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CDevices_CPointOfService_CICashDrawer* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CDevices_CPointOfService_CICashDrawer* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_DeviceId)(__x_ABI_CWindows_CDevices_CPointOfService_CICashDrawer* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* get_Capabilities)(__x_ABI_CWindows_CDevices_CPointOfService_CICashDrawer* This,
        __x_ABI_CWindows_CDevices_CPointOfService_CICashDrawerCapabilities** value);
    HRESULT (STDMETHODCALLTYPE* get_Status)(__x_ABI_CWindows_CDevices_CPointOfService_CICashDrawer* This,
        __x_ABI_CWindows_CDevices_CPointOfService_CICashDrawerStatus** value);
    HRESULT (STDMETHODCALLTYPE* get_IsDrawerOpen)(__x_ABI_CWindows_CDevices_CPointOfService_CICashDrawer* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* get_DrawerEventSource)(__x_ABI_CWindows_CDevices_CPointOfService_CICashDrawer* This,
        __x_ABI_CWindows_CDevices_CPointOfService_CICashDrawerEventSource** value);
    HRESULT (STDMETHODCALLTYPE* ClaimDrawerAsync)(__x_ABI_CWindows_CDevices_CPointOfService_CICashDrawer* This,
        __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CDevices__CPointOfService__CClaimedCashDrawer** operation);
    HRESULT (STDMETHODCALLTYPE* CheckHealthAsync)(__x_ABI_CWindows_CDevices_CPointOfService_CICashDrawer* This,
        enum __x_ABI_CWindows_CDevices_CPointOfService_CUnifiedPosHealthCheckLevel level,
        __x_ABI_C__FIAsyncOperation_1_HSTRING** operation);
    HRESULT (STDMETHODCALLTYPE* GetStatisticsAsync)(__x_ABI_CWindows_CDevices_CPointOfService_CICashDrawer* This,
        __x_ABI_C__FIIterable_1_HSTRING* statisticsCategories,
        __x_ABI_C__FIAsyncOperation_1_HSTRING** operation);
    HRESULT (STDMETHODCALLTYPE* add_StatusUpdated)(__x_ABI_CWindows_CDevices_CPointOfService_CICashDrawer* This,
        __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CDevices__CPointOfService__CCashDrawer___x_ABI_CWindows__CDevices__CPointOfService__CCashDrawerStatusUpdatedEventArgs* handler,
        EventRegistrationToken* token);
    HRESULT (STDMETHODCALLTYPE* remove_StatusUpdated)(__x_ABI_CWindows_CDevices_CPointOfService_CICashDrawer* This,
        EventRegistrationToken token);

        END_INTERFACE
    } __x_ABI_CWindows_CDevices_CPointOfService_CICashDrawerVtbl;

    interface __x_ABI_CWindows_CDevices_CPointOfService_CICashDrawer
    {
        CONST_VTBL struct __x_ABI_CWindows_CDevices_CPointOfService_CICashDrawerVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CDevices_CPointOfService_CICashDrawer;
#endif /* !defined(____x_ABI_CWindows_CDevices_CPointOfService_CICashDrawer_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CDevices_CPointOfService_CICashDrawerCapabilities_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CDevices_CPointOfService_CICashDrawerCapabilities_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CDevices_CPointOfService_CICashDrawerCapabilitiesVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CDevices_CPointOfService_CICashDrawerCapabilities* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CDevices_CPointOfService_CICashDrawerCapabilities* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CDevices_CPointOfService_CICashDrawerCapabilities* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CDevices_CPointOfService_CICashDrawerCapabilities* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CDevices_CPointOfService_CICashDrawerCapabilities* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CDevices_CPointOfService_CICashDrawerCapabilities* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_PowerReportingType)(__x_ABI_CWindows_CDevices_CPointOfService_CICashDrawerCapabilities* This,
        enum __x_ABI_CWindows_CDevices_CPointOfService_CUnifiedPosPowerReportingType* value);
    HRESULT (STDMETHODCALLTYPE* get_IsStatisticsReportingSupported)(__x_ABI_CWindows_CDevices_CPointOfService_CICashDrawerCapabilities* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* get_IsStatisticsUpdatingSupported)(__x_ABI_CWindows_CDevices_CPointOfService_CICashDrawerCapabilities* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* get_IsStatusReportingSupported)(__x_ABI_CWindows_CDevices_CPointOfService_CICashDrawerCapabilities* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* get_IsStatusMultiDrawerDetectSupported)(__x_ABI_CWindows_CDevices_CPointOfService_CICashDrawerCapabilities* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* get_IsDrawerOpenSensorAvailable)(__x_ABI_CWindows_CDevices_CPointOfService_CICashDrawerCapabilities* This,
        boolean* value);

        END_INTERFACE
    } __x_ABI_CWindows_CDevices_CPointOfService_CICashDrawerCapabilitiesVtbl;

    interface __x_ABI_CWindows_CDevices_CPointOfService_CICashDrawerCapabilities
    {
        CONST_VTBL struct __x_ABI_CWindows_CDevices_CPointOfService_CICashDrawerCapabilitiesVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CDevices_CPointOfService_CICashDrawerCapabilities;
#endif /* !defined(____x_ABI_CWindows_CDevices_CPointOfService_CICashDrawerCapabilities_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CDevices_CPointOfService_CICashDrawerCloseAlarm_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CDevices_CPointOfService_CICashDrawerCloseAlarm_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CDevices_CPointOfService_CICashDrawerCloseAlarmVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CDevices_CPointOfService_CICashDrawerCloseAlarm* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CDevices_CPointOfService_CICashDrawerCloseAlarm* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CDevices_CPointOfService_CICashDrawerCloseAlarm* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CDevices_CPointOfService_CICashDrawerCloseAlarm* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CDevices_CPointOfService_CICashDrawerCloseAlarm* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CDevices_CPointOfService_CICashDrawerCloseAlarm* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* put_AlarmTimeout)(__x_ABI_CWindows_CDevices_CPointOfService_CICashDrawerCloseAlarm* This,
        struct __x_ABI_CWindows_CFoundation_CTimeSpan value);
    HRESULT (STDMETHODCALLTYPE* get_AlarmTimeout)(__x_ABI_CWindows_CDevices_CPointOfService_CICashDrawerCloseAlarm* This,
        struct __x_ABI_CWindows_CFoundation_CTimeSpan* value);
    HRESULT (STDMETHODCALLTYPE* put_BeepFrequency)(__x_ABI_CWindows_CDevices_CPointOfService_CICashDrawerCloseAlarm* This,
        UINT32 value);
    HRESULT (STDMETHODCALLTYPE* get_BeepFrequency)(__x_ABI_CWindows_CDevices_CPointOfService_CICashDrawerCloseAlarm* This,
        UINT32* value);
    HRESULT (STDMETHODCALLTYPE* put_BeepDuration)(__x_ABI_CWindows_CDevices_CPointOfService_CICashDrawerCloseAlarm* This,
        struct __x_ABI_CWindows_CFoundation_CTimeSpan value);
    HRESULT (STDMETHODCALLTYPE* get_BeepDuration)(__x_ABI_CWindows_CDevices_CPointOfService_CICashDrawerCloseAlarm* This,
        struct __x_ABI_CWindows_CFoundation_CTimeSpan* value);
    HRESULT (STDMETHODCALLTYPE* put_BeepDelay)(__x_ABI_CWindows_CDevices_CPointOfService_CICashDrawerCloseAlarm* This,
        struct __x_ABI_CWindows_CFoundation_CTimeSpan value);
    HRESULT (STDMETHODCALLTYPE* get_BeepDelay)(__x_ABI_CWindows_CDevices_CPointOfService_CICashDrawerCloseAlarm* This,
        struct __x_ABI_CWindows_CFoundation_CTimeSpan* value);
    HRESULT (STDMETHODCALLTYPE* add_AlarmTimeoutExpired)(__x_ABI_CWindows_CDevices_CPointOfService_CICashDrawerCloseAlarm* This,
        __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CDevices__CPointOfService__CCashDrawerCloseAlarm_IInspectable* handler,
        EventRegistrationToken* token);
    HRESULT (STDMETHODCALLTYPE* remove_AlarmTimeoutExpired)(__x_ABI_CWindows_CDevices_CPointOfService_CICashDrawerCloseAlarm* This,
        EventRegistrationToken token);
    HRESULT (STDMETHODCALLTYPE* StartAsync)(__x_ABI_CWindows_CDevices_CPointOfService_CICashDrawerCloseAlarm* This,
        __x_ABI_C__FIAsyncOperation_1_boolean** result);

        END_INTERFACE
    } __x_ABI_CWindows_CDevices_CPointOfService_CICashDrawerCloseAlarmVtbl;

    interface __x_ABI_CWindows_CDevices_CPointOfService_CICashDrawerCloseAlarm
    {
        CONST_VTBL struct __x_ABI_CWindows_CDevices_CPointOfService_CICashDrawerCloseAlarmVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CDevices_CPointOfService_CICashDrawerCloseAlarm;
#endif /* !defined(____x_ABI_CWindows_CDevices_CPointOfService_CICashDrawerCloseAlarm_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CDevices_CPointOfService_CICashDrawerEventSource_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CDevices_CPointOfService_CICashDrawerEventSource_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CDevices_CPointOfService_CICashDrawerEventSourceVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CDevices_CPointOfService_CICashDrawerEventSource* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CDevices_CPointOfService_CICashDrawerEventSource* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CDevices_CPointOfService_CICashDrawerEventSource* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CDevices_CPointOfService_CICashDrawerEventSource* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CDevices_CPointOfService_CICashDrawerEventSource* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CDevices_CPointOfService_CICashDrawerEventSource* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* add_DrawerClosed)(__x_ABI_CWindows_CDevices_CPointOfService_CICashDrawerEventSource* This,
        __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CDevices__CPointOfService__CCashDrawerEventSource___x_ABI_CWindows__CDevices__CPointOfService__CCashDrawerClosedEventArgs* handler,
        EventRegistrationToken* token);
    HRESULT (STDMETHODCALLTYPE* remove_DrawerClosed)(__x_ABI_CWindows_CDevices_CPointOfService_CICashDrawerEventSource* This,
        EventRegistrationToken token);
    HRESULT (STDMETHODCALLTYPE* add_DrawerOpened)(__x_ABI_CWindows_CDevices_CPointOfService_CICashDrawerEventSource* This,
        __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CDevices__CPointOfService__CCashDrawerEventSource___x_ABI_CWindows__CDevices__CPointOfService__CCashDrawerOpenedEventArgs* handler,
        EventRegistrationToken* token);
    HRESULT (STDMETHODCALLTYPE* remove_DrawerOpened)(__x_ABI_CWindows_CDevices_CPointOfService_CICashDrawerEventSource* This,
        EventRegistrationToken token);

        END_INTERFACE
    } __x_ABI_CWindows_CDevices_CPointOfService_CICashDrawerEventSourceVtbl;

    interface __x_ABI_CWindows_CDevices_CPointOfService_CICashDrawerEventSource
    {
        CONST_VTBL struct __x_ABI_CWindows_CDevices_CPointOfService_CICashDrawerEventSourceVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CDevices_CPointOfService_CICashDrawerEventSource;
#endif /* !defined(____x_ABI_CWindows_CDevices_CPointOfService_CICashDrawerEventSource_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CDevices_CPointOfService_CICashDrawerEventSourceEventArgs_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CDevices_CPointOfService_CICashDrawerEventSourceEventArgs_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CDevices_CPointOfService_CICashDrawerEventSourceEventArgsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CDevices_CPointOfService_CICashDrawerEventSourceEventArgs* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CDevices_CPointOfService_CICashDrawerEventSourceEventArgs* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CDevices_CPointOfService_CICashDrawerEventSourceEventArgs* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CDevices_CPointOfService_CICashDrawerEventSourceEventArgs* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CDevices_CPointOfService_CICashDrawerEventSourceEventArgs* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CDevices_CPointOfService_CICashDrawerEventSourceEventArgs* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_CashDrawer)(__x_ABI_CWindows_CDevices_CPointOfService_CICashDrawerEventSourceEventArgs* This,
        __x_ABI_CWindows_CDevices_CPointOfService_CICashDrawer** value);

        END_INTERFACE
    } __x_ABI_CWindows_CDevices_CPointOfService_CICashDrawerEventSourceEventArgsVtbl;

    interface __x_ABI_CWindows_CDevices_CPointOfService_CICashDrawerEventSourceEventArgs
    {
        CONST_VTBL struct __x_ABI_CWindows_CDevices_CPointOfService_CICashDrawerEventSourceEventArgsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CDevices_CPointOfService_CICashDrawerEventSourceEventArgs;
#endif /* !defined(____x_ABI_CWindows_CDevices_CPointOfService_CICashDrawerEventSourceEventArgs_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CDevices_CPointOfService_CICashDrawerStatics_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CDevices_CPointOfService_CICashDrawerStatics_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CDevices_CPointOfService_CICashDrawerStaticsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CDevices_CPointOfService_CICashDrawerStatics* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CDevices_CPointOfService_CICashDrawerStatics* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CDevices_CPointOfService_CICashDrawerStatics* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CDevices_CPointOfService_CICashDrawerStatics* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CDevices_CPointOfService_CICashDrawerStatics* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CDevices_CPointOfService_CICashDrawerStatics* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* GetDefaultAsync)(__x_ABI_CWindows_CDevices_CPointOfService_CICashDrawerStatics* This,
        __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CDevices__CPointOfService__CCashDrawer** result);
    HRESULT (STDMETHODCALLTYPE* FromIdAsync)(__x_ABI_CWindows_CDevices_CPointOfService_CICashDrawerStatics* This,
        HSTRING deviceId,
        __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CDevices__CPointOfService__CCashDrawer** result);
    HRESULT (STDMETHODCALLTYPE* GetDeviceSelector)(__x_ABI_CWindows_CDevices_CPointOfService_CICashDrawerStatics* This,
        HSTRING* value);

        END_INTERFACE
    } __x_ABI_CWindows_CDevices_CPointOfService_CICashDrawerStaticsVtbl;

    interface __x_ABI_CWindows_CDevices_CPointOfService_CICashDrawerStatics
    {
        CONST_VTBL struct __x_ABI_CWindows_CDevices_CPointOfService_CICashDrawerStaticsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CDevices_CPointOfService_CICashDrawerStatics;
#endif /* !defined(____x_ABI_CWindows_CDevices_CPointOfService_CICashDrawerStatics_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CDevices_CPointOfService_CICashDrawerStatics2_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CDevices_CPointOfService_CICashDrawerStatics2_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CDevices_CPointOfService_CICashDrawerStatics2Vtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CDevices_CPointOfService_CICashDrawerStatics2* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CDevices_CPointOfService_CICashDrawerStatics2* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CDevices_CPointOfService_CICashDrawerStatics2* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CDevices_CPointOfService_CICashDrawerStatics2* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CDevices_CPointOfService_CICashDrawerStatics2* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CDevices_CPointOfService_CICashDrawerStatics2* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* GetDeviceSelectorWithConnectionTypes)(__x_ABI_CWindows_CDevices_CPointOfService_CICashDrawerStatics2* This,
        enum __x_ABI_CWindows_CDevices_CPointOfService_CPosConnectionTypes connectionTypes,
        HSTRING* value);

        END_INTERFACE
    } __x_ABI_CWindows_CDevices_CPointOfService_CICashDrawerStatics2Vtbl;

    interface __x_ABI_CWindows_CDevices_CPointOfService_CICashDrawerStatics2
    {
        CONST_VTBL struct __x_ABI_CWindows_CDevices_CPointOfService_CICashDrawerStatics2Vtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CDevices_CPointOfService_CICashDrawerStatics2;
#endif /* !defined(____x_ABI_CWindows_CDevices_CPointOfService_CICashDrawerStatics2_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CDevices_CPointOfService_CICashDrawerStatus_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CDevices_CPointOfService_CICashDrawerStatus_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CDevices_CPointOfService_CICashDrawerStatusVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CDevices_CPointOfService_CICashDrawerStatus* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CDevices_CPointOfService_CICashDrawerStatus* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CDevices_CPointOfService_CICashDrawerStatus* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CDevices_CPointOfService_CICashDrawerStatus* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CDevices_CPointOfService_CICashDrawerStatus* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CDevices_CPointOfService_CICashDrawerStatus* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_StatusKind)(__x_ABI_CWindows_CDevices_CPointOfService_CICashDrawerStatus* This,
        enum __x_ABI_CWindows_CDevices_CPointOfService_CCashDrawerStatusKind* value);
    HRESULT (STDMETHODCALLTYPE* get_ExtendedStatus)(__x_ABI_CWindows_CDevices_CPointOfService_CICashDrawerStatus* This,
        UINT32* value);

        END_INTERFACE
    } __x_ABI_CWindows_CDevices_CPointOfService_CICashDrawerStatusVtbl;

    interface __x_ABI_CWindows_CDevices_CPointOfService_CICashDrawerStatus
    {
        CONST_VTBL struct __x_ABI_CWindows_CDevices_CPointOfService_CICashDrawerStatusVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CDevices_CPointOfService_CICashDrawerStatus;
#endif /* !defined(____x_ABI_CWindows_CDevices_CPointOfService_CICashDrawerStatus_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CDevices_CPointOfService_CICashDrawerStatusUpdatedEventArgs_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CDevices_CPointOfService_CICashDrawerStatusUpdatedEventArgs_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CDevices_CPointOfService_CICashDrawerStatusUpdatedEventArgsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CDevices_CPointOfService_CICashDrawerStatusUpdatedEventArgs* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CDevices_CPointOfService_CICashDrawerStatusUpdatedEventArgs* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CDevices_CPointOfService_CICashDrawerStatusUpdatedEventArgs* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CDevices_CPointOfService_CICashDrawerStatusUpdatedEventArgs* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CDevices_CPointOfService_CICashDrawerStatusUpdatedEventArgs* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CDevices_CPointOfService_CICashDrawerStatusUpdatedEventArgs* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Status)(__x_ABI_CWindows_CDevices_CPointOfService_CICashDrawerStatusUpdatedEventArgs* This,
        __x_ABI_CWindows_CDevices_CPointOfService_CICashDrawerStatus** value);

        END_INTERFACE
    } __x_ABI_CWindows_CDevices_CPointOfService_CICashDrawerStatusUpdatedEventArgsVtbl;

    interface __x_ABI_CWindows_CDevices_CPointOfService_CICashDrawerStatusUpdatedEventArgs
    {
        CONST_VTBL struct __x_ABI_CWindows_CDevices_CPointOfService_CICashDrawerStatusUpdatedEventArgsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CDevices_CPointOfService_CICashDrawerStatusUpdatedEventArgs;
#endif /* !defined(____x_ABI_CWindows_CDevices_CPointOfService_CICashDrawerStatusUpdatedEventArgs_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CDevices_CPointOfService_CIClaimedBarcodeScanner_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CDevices_CPointOfService_CIClaimedBarcodeScanner_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CDevices_CPointOfService_CIClaimedBarcodeScannerVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CDevices_CPointOfService_CIClaimedBarcodeScanner* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CDevices_CPointOfService_CIClaimedBarcodeScanner* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CDevices_CPointOfService_CIClaimedBarcodeScanner* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CDevices_CPointOfService_CIClaimedBarcodeScanner* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CDevices_CPointOfService_CIClaimedBarcodeScanner* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CDevices_CPointOfService_CIClaimedBarcodeScanner* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_DeviceId)(__x_ABI_CWindows_CDevices_CPointOfService_CIClaimedBarcodeScanner* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* get_IsEnabled)(__x_ABI_CWindows_CDevices_CPointOfService_CIClaimedBarcodeScanner* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* put_IsDisabledOnDataReceived)(__x_ABI_CWindows_CDevices_CPointOfService_CIClaimedBarcodeScanner* This,
        boolean value);
    HRESULT (STDMETHODCALLTYPE* get_IsDisabledOnDataReceived)(__x_ABI_CWindows_CDevices_CPointOfService_CIClaimedBarcodeScanner* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* put_IsDecodeDataEnabled)(__x_ABI_CWindows_CDevices_CPointOfService_CIClaimedBarcodeScanner* This,
        boolean value);
    HRESULT (STDMETHODCALLTYPE* get_IsDecodeDataEnabled)(__x_ABI_CWindows_CDevices_CPointOfService_CIClaimedBarcodeScanner* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* EnableAsync)(__x_ABI_CWindows_CDevices_CPointOfService_CIClaimedBarcodeScanner* This,
        __x_ABI_CWindows_CFoundation_CIAsyncAction** result);
    HRESULT (STDMETHODCALLTYPE* DisableAsync)(__x_ABI_CWindows_CDevices_CPointOfService_CIClaimedBarcodeScanner* This,
        __x_ABI_CWindows_CFoundation_CIAsyncAction** result);
    HRESULT (STDMETHODCALLTYPE* RetainDevice)(__x_ABI_CWindows_CDevices_CPointOfService_CIClaimedBarcodeScanner* This);
    HRESULT (STDMETHODCALLTYPE* SetActiveSymbologiesAsync)(__x_ABI_CWindows_CDevices_CPointOfService_CIClaimedBarcodeScanner* This,
        __x_ABI_C__FIIterable_1_UINT32* symbologies,
        __x_ABI_CWindows_CFoundation_CIAsyncAction** result);
    HRESULT (STDMETHODCALLTYPE* ResetStatisticsAsync)(__x_ABI_CWindows_CDevices_CPointOfService_CIClaimedBarcodeScanner* This,
        __x_ABI_C__FIIterable_1_HSTRING* statisticsCategories,
        __x_ABI_CWindows_CFoundation_CIAsyncAction** result);
    HRESULT (STDMETHODCALLTYPE* UpdateStatisticsAsync)(__x_ABI_CWindows_CDevices_CPointOfService_CIClaimedBarcodeScanner* This,
        __x_ABI_C__FIIterable_1___x_ABI_C__FIKeyValuePair_2_HSTRING_HSTRING* statistics,
        __x_ABI_CWindows_CFoundation_CIAsyncAction** result);
    HRESULT (STDMETHODCALLTYPE* SetActiveProfileAsync)(__x_ABI_CWindows_CDevices_CPointOfService_CIClaimedBarcodeScanner* This,
        HSTRING profile,
        __x_ABI_CWindows_CFoundation_CIAsyncAction** result);
    HRESULT (STDMETHODCALLTYPE* add_DataReceived)(__x_ABI_CWindows_CDevices_CPointOfService_CIClaimedBarcodeScanner* This,
        __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CDevices__CPointOfService__CClaimedBarcodeScanner___x_ABI_CWindows__CDevices__CPointOfService__CBarcodeScannerDataReceivedEventArgs* handler,
        EventRegistrationToken* token);
    HRESULT (STDMETHODCALLTYPE* remove_DataReceived)(__x_ABI_CWindows_CDevices_CPointOfService_CIClaimedBarcodeScanner* This,
        EventRegistrationToken token);
    HRESULT (STDMETHODCALLTYPE* add_TriggerPressed)(__x_ABI_CWindows_CDevices_CPointOfService_CIClaimedBarcodeScanner* This,
        __x_ABI_C__FIEventHandler_1___x_ABI_CWindows__CDevices__CPointOfService__CClaimedBarcodeScanner* handler,
        EventRegistrationToken* token);
    HRESULT (STDMETHODCALLTYPE* remove_TriggerPressed)(__x_ABI_CWindows_CDevices_CPointOfService_CIClaimedBarcodeScanner* This,
        EventRegistrationToken token);
    HRESULT (STDMETHODCALLTYPE* add_TriggerReleased)(__x_ABI_CWindows_CDevices_CPointOfService_CIClaimedBarcodeScanner* This,
        __x_ABI_C__FIEventHandler_1___x_ABI_CWindows__CDevices__CPointOfService__CClaimedBarcodeScanner* handler,
        EventRegistrationToken* token);
    HRESULT (STDMETHODCALLTYPE* remove_TriggerReleased)(__x_ABI_CWindows_CDevices_CPointOfService_CIClaimedBarcodeScanner* This,
        EventRegistrationToken token);
    HRESULT (STDMETHODCALLTYPE* add_ReleaseDeviceRequested)(__x_ABI_CWindows_CDevices_CPointOfService_CIClaimedBarcodeScanner* This,
        __x_ABI_C__FIEventHandler_1___x_ABI_CWindows__CDevices__CPointOfService__CClaimedBarcodeScanner* handler,
        EventRegistrationToken* token);
    HRESULT (STDMETHODCALLTYPE* remove_ReleaseDeviceRequested)(__x_ABI_CWindows_CDevices_CPointOfService_CIClaimedBarcodeScanner* This,
        EventRegistrationToken token);
    HRESULT (STDMETHODCALLTYPE* add_ImagePreviewReceived)(__x_ABI_CWindows_CDevices_CPointOfService_CIClaimedBarcodeScanner* This,
        __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CDevices__CPointOfService__CClaimedBarcodeScanner___x_ABI_CWindows__CDevices__CPointOfService__CBarcodeScannerImagePreviewReceivedEventArgs* handler,
        EventRegistrationToken* token);
    HRESULT (STDMETHODCALLTYPE* remove_ImagePreviewReceived)(__x_ABI_CWindows_CDevices_CPointOfService_CIClaimedBarcodeScanner* This,
        EventRegistrationToken token);
    HRESULT (STDMETHODCALLTYPE* add_ErrorOccurred)(__x_ABI_CWindows_CDevices_CPointOfService_CIClaimedBarcodeScanner* This,
        __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CDevices__CPointOfService__CClaimedBarcodeScanner___x_ABI_CWindows__CDevices__CPointOfService__CBarcodeScannerErrorOccurredEventArgs* handler,
        EventRegistrationToken* token);
    HRESULT (STDMETHODCALLTYPE* remove_ErrorOccurred)(__x_ABI_CWindows_CDevices_CPointOfService_CIClaimedBarcodeScanner* This,
        EventRegistrationToken token);

        END_INTERFACE
    } __x_ABI_CWindows_CDevices_CPointOfService_CIClaimedBarcodeScannerVtbl;

    interface __x_ABI_CWindows_CDevices_CPointOfService_CIClaimedBarcodeScanner
    {
        CONST_VTBL struct __x_ABI_CWindows_CDevices_CPointOfService_CIClaimedBarcodeScannerVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CDevices_CPointOfService_CIClaimedBarcodeScanner;
#endif /* !defined(____x_ABI_CWindows_CDevices_CPointOfService_CIClaimedBarcodeScanner_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CDevices_CPointOfService_CIClaimedBarcodeScanner1_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CDevices_CPointOfService_CIClaimedBarcodeScanner1_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CDevices_CPointOfService_CIClaimedBarcodeScanner1Vtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CDevices_CPointOfService_CIClaimedBarcodeScanner1* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CDevices_CPointOfService_CIClaimedBarcodeScanner1* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CDevices_CPointOfService_CIClaimedBarcodeScanner1* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CDevices_CPointOfService_CIClaimedBarcodeScanner1* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CDevices_CPointOfService_CIClaimedBarcodeScanner1* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CDevices_CPointOfService_CIClaimedBarcodeScanner1* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* StartSoftwareTriggerAsync)(__x_ABI_CWindows_CDevices_CPointOfService_CIClaimedBarcodeScanner1* This,
        __x_ABI_CWindows_CFoundation_CIAsyncAction** result);
    HRESULT (STDMETHODCALLTYPE* StopSoftwareTriggerAsync)(__x_ABI_CWindows_CDevices_CPointOfService_CIClaimedBarcodeScanner1* This,
        __x_ABI_CWindows_CFoundation_CIAsyncAction** result);

        END_INTERFACE
    } __x_ABI_CWindows_CDevices_CPointOfService_CIClaimedBarcodeScanner1Vtbl;

    interface __x_ABI_CWindows_CDevices_CPointOfService_CIClaimedBarcodeScanner1
    {
        CONST_VTBL struct __x_ABI_CWindows_CDevices_CPointOfService_CIClaimedBarcodeScanner1Vtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CDevices_CPointOfService_CIClaimedBarcodeScanner1;
#endif /* !defined(____x_ABI_CWindows_CDevices_CPointOfService_CIClaimedBarcodeScanner1_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CDevices_CPointOfService_CIClaimedBarcodeScanner2_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CDevices_CPointOfService_CIClaimedBarcodeScanner2_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CDevices_CPointOfService_CIClaimedBarcodeScanner2Vtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CDevices_CPointOfService_CIClaimedBarcodeScanner2* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CDevices_CPointOfService_CIClaimedBarcodeScanner2* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CDevices_CPointOfService_CIClaimedBarcodeScanner2* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CDevices_CPointOfService_CIClaimedBarcodeScanner2* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CDevices_CPointOfService_CIClaimedBarcodeScanner2* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CDevices_CPointOfService_CIClaimedBarcodeScanner2* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* GetSymbologyAttributesAsync)(__x_ABI_CWindows_CDevices_CPointOfService_CIClaimedBarcodeScanner2* This,
        UINT32 barcodeSymbology,
        __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CDevices__CPointOfService__CBarcodeSymbologyAttributes** result);
    HRESULT (STDMETHODCALLTYPE* SetSymbologyAttributesAsync)(__x_ABI_CWindows_CDevices_CPointOfService_CIClaimedBarcodeScanner2* This,
        UINT32 barcodeSymbology,
        __x_ABI_CWindows_CDevices_CPointOfService_CIBarcodeSymbologyAttributes* attributes,
        __x_ABI_C__FIAsyncOperation_1_boolean** result);

        END_INTERFACE
    } __x_ABI_CWindows_CDevices_CPointOfService_CIClaimedBarcodeScanner2Vtbl;

    interface __x_ABI_CWindows_CDevices_CPointOfService_CIClaimedBarcodeScanner2
    {
        CONST_VTBL struct __x_ABI_CWindows_CDevices_CPointOfService_CIClaimedBarcodeScanner2Vtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CDevices_CPointOfService_CIClaimedBarcodeScanner2;
#endif /* !defined(____x_ABI_CWindows_CDevices_CPointOfService_CIClaimedBarcodeScanner2_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CDevices_CPointOfService_CIClaimedBarcodeScanner3_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CDevices_CPointOfService_CIClaimedBarcodeScanner3_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CDevices_CPointOfService_CIClaimedBarcodeScanner3Vtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CDevices_CPointOfService_CIClaimedBarcodeScanner3* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CDevices_CPointOfService_CIClaimedBarcodeScanner3* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CDevices_CPointOfService_CIClaimedBarcodeScanner3* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CDevices_CPointOfService_CIClaimedBarcodeScanner3* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CDevices_CPointOfService_CIClaimedBarcodeScanner3* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CDevices_CPointOfService_CIClaimedBarcodeScanner3* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* ShowVideoPreviewAsync)(__x_ABI_CWindows_CDevices_CPointOfService_CIClaimedBarcodeScanner3* This,
        __x_ABI_C__FIAsyncOperation_1_boolean** operation);
    HRESULT (STDMETHODCALLTYPE* HideVideoPreview)(__x_ABI_CWindows_CDevices_CPointOfService_CIClaimedBarcodeScanner3* This);
    HRESULT (STDMETHODCALLTYPE* put_IsVideoPreviewShownOnEnable)(__x_ABI_CWindows_CDevices_CPointOfService_CIClaimedBarcodeScanner3* This,
        boolean value);
    HRESULT (STDMETHODCALLTYPE* get_IsVideoPreviewShownOnEnable)(__x_ABI_CWindows_CDevices_CPointOfService_CIClaimedBarcodeScanner3* This,
        boolean* value);

        END_INTERFACE
    } __x_ABI_CWindows_CDevices_CPointOfService_CIClaimedBarcodeScanner3Vtbl;

    interface __x_ABI_CWindows_CDevices_CPointOfService_CIClaimedBarcodeScanner3
    {
        CONST_VTBL struct __x_ABI_CWindows_CDevices_CPointOfService_CIClaimedBarcodeScanner3Vtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CDevices_CPointOfService_CIClaimedBarcodeScanner3;
#endif /* !defined(____x_ABI_CWindows_CDevices_CPointOfService_CIClaimedBarcodeScanner3_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CDevices_CPointOfService_CIClaimedBarcodeScanner4_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CDevices_CPointOfService_CIClaimedBarcodeScanner4_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CDevices_CPointOfService_CIClaimedBarcodeScanner4Vtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CDevices_CPointOfService_CIClaimedBarcodeScanner4* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CDevices_CPointOfService_CIClaimedBarcodeScanner4* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CDevices_CPointOfService_CIClaimedBarcodeScanner4* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CDevices_CPointOfService_CIClaimedBarcodeScanner4* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CDevices_CPointOfService_CIClaimedBarcodeScanner4* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CDevices_CPointOfService_CIClaimedBarcodeScanner4* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* add_Closed)(__x_ABI_CWindows_CDevices_CPointOfService_CIClaimedBarcodeScanner4* This,
        __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CDevices__CPointOfService__CClaimedBarcodeScanner___x_ABI_CWindows__CDevices__CPointOfService__CClaimedBarcodeScannerClosedEventArgs* handler,
        EventRegistrationToken* token);
    HRESULT (STDMETHODCALLTYPE* remove_Closed)(__x_ABI_CWindows_CDevices_CPointOfService_CIClaimedBarcodeScanner4* This,
        EventRegistrationToken token);

        END_INTERFACE
    } __x_ABI_CWindows_CDevices_CPointOfService_CIClaimedBarcodeScanner4Vtbl;

    interface __x_ABI_CWindows_CDevices_CPointOfService_CIClaimedBarcodeScanner4
    {
        CONST_VTBL struct __x_ABI_CWindows_CDevices_CPointOfService_CIClaimedBarcodeScanner4Vtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CDevices_CPointOfService_CIClaimedBarcodeScanner4;
#endif /* !defined(____x_ABI_CWindows_CDevices_CPointOfService_CIClaimedBarcodeScanner4_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CDevices_CPointOfService_CIClaimedBarcodeScannerClosedEventArgs_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CDevices_CPointOfService_CIClaimedBarcodeScannerClosedEventArgs_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CDevices_CPointOfService_CIClaimedBarcodeScannerClosedEventArgsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CDevices_CPointOfService_CIClaimedBarcodeScannerClosedEventArgs* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CDevices_CPointOfService_CIClaimedBarcodeScannerClosedEventArgs* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CDevices_CPointOfService_CIClaimedBarcodeScannerClosedEventArgs* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CDevices_CPointOfService_CIClaimedBarcodeScannerClosedEventArgs* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CDevices_CPointOfService_CIClaimedBarcodeScannerClosedEventArgs* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CDevices_CPointOfService_CIClaimedBarcodeScannerClosedEventArgs* This,
            TrustLevel* trustLevel);
    
        END_INTERFACE
    } __x_ABI_CWindows_CDevices_CPointOfService_CIClaimedBarcodeScannerClosedEventArgsVtbl;

    interface __x_ABI_CWindows_CDevices_CPointOfService_CIClaimedBarcodeScannerClosedEventArgs
    {
        CONST_VTBL struct __x_ABI_CWindows_CDevices_CPointOfService_CIClaimedBarcodeScannerClosedEventArgsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CDevices_CPointOfService_CIClaimedBarcodeScannerClosedEventArgs;
#endif /* !defined(____x_ABI_CWindows_CDevices_CPointOfService_CIClaimedBarcodeScannerClosedEventArgs_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CDevices_CPointOfService_CIClaimedCashDrawer_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CDevices_CPointOfService_CIClaimedCashDrawer_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CDevices_CPointOfService_CIClaimedCashDrawerVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CDevices_CPointOfService_CIClaimedCashDrawer* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CDevices_CPointOfService_CIClaimedCashDrawer* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CDevices_CPointOfService_CIClaimedCashDrawer* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CDevices_CPointOfService_CIClaimedCashDrawer* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CDevices_CPointOfService_CIClaimedCashDrawer* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CDevices_CPointOfService_CIClaimedCashDrawer* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_DeviceId)(__x_ABI_CWindows_CDevices_CPointOfService_CIClaimedCashDrawer* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* get_IsEnabled)(__x_ABI_CWindows_CDevices_CPointOfService_CIClaimedCashDrawer* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* get_IsDrawerOpen)(__x_ABI_CWindows_CDevices_CPointOfService_CIClaimedCashDrawer* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* get_CloseAlarm)(__x_ABI_CWindows_CDevices_CPointOfService_CIClaimedCashDrawer* This,
        __x_ABI_CWindows_CDevices_CPointOfService_CICashDrawerCloseAlarm** value);
    HRESULT (STDMETHODCALLTYPE* OpenDrawerAsync)(__x_ABI_CWindows_CDevices_CPointOfService_CIClaimedCashDrawer* This,
        __x_ABI_C__FIAsyncOperation_1_boolean** result);
    HRESULT (STDMETHODCALLTYPE* EnableAsync)(__x_ABI_CWindows_CDevices_CPointOfService_CIClaimedCashDrawer* This,
        __x_ABI_C__FIAsyncOperation_1_boolean** result);
    HRESULT (STDMETHODCALLTYPE* DisableAsync)(__x_ABI_CWindows_CDevices_CPointOfService_CIClaimedCashDrawer* This,
        __x_ABI_C__FIAsyncOperation_1_boolean** result);
    HRESULT (STDMETHODCALLTYPE* RetainDeviceAsync)(__x_ABI_CWindows_CDevices_CPointOfService_CIClaimedCashDrawer* This,
        __x_ABI_C__FIAsyncOperation_1_boolean** result);
    HRESULT (STDMETHODCALLTYPE* ResetStatisticsAsync)(__x_ABI_CWindows_CDevices_CPointOfService_CIClaimedCashDrawer* This,
        __x_ABI_C__FIIterable_1_HSTRING* statisticsCategories,
        __x_ABI_C__FIAsyncOperation_1_boolean** result);
    HRESULT (STDMETHODCALLTYPE* UpdateStatisticsAsync)(__x_ABI_CWindows_CDevices_CPointOfService_CIClaimedCashDrawer* This,
        __x_ABI_C__FIIterable_1___x_ABI_C__FIKeyValuePair_2_HSTRING_HSTRING* statistics,
        __x_ABI_C__FIAsyncOperation_1_boolean** result);
    HRESULT (STDMETHODCALLTYPE* add_ReleaseDeviceRequested)(__x_ABI_CWindows_CDevices_CPointOfService_CIClaimedCashDrawer* This,
        __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CDevices__CPointOfService__CClaimedCashDrawer_IInspectable* handler,
        EventRegistrationToken* token);
    HRESULT (STDMETHODCALLTYPE* remove_ReleaseDeviceRequested)(__x_ABI_CWindows_CDevices_CPointOfService_CIClaimedCashDrawer* This,
        EventRegistrationToken token);

        END_INTERFACE
    } __x_ABI_CWindows_CDevices_CPointOfService_CIClaimedCashDrawerVtbl;

    interface __x_ABI_CWindows_CDevices_CPointOfService_CIClaimedCashDrawer
    {
        CONST_VTBL struct __x_ABI_CWindows_CDevices_CPointOfService_CIClaimedCashDrawerVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CDevices_CPointOfService_CIClaimedCashDrawer;
#endif /* !defined(____x_ABI_CWindows_CDevices_CPointOfService_CIClaimedCashDrawer_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CDevices_CPointOfService_CIClaimedCashDrawer2_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CDevices_CPointOfService_CIClaimedCashDrawer2_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CDevices_CPointOfService_CIClaimedCashDrawer2Vtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CDevices_CPointOfService_CIClaimedCashDrawer2* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CDevices_CPointOfService_CIClaimedCashDrawer2* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CDevices_CPointOfService_CIClaimedCashDrawer2* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CDevices_CPointOfService_CIClaimedCashDrawer2* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CDevices_CPointOfService_CIClaimedCashDrawer2* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CDevices_CPointOfService_CIClaimedCashDrawer2* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* add_Closed)(__x_ABI_CWindows_CDevices_CPointOfService_CIClaimedCashDrawer2* This,
        __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CDevices__CPointOfService__CClaimedCashDrawer___x_ABI_CWindows__CDevices__CPointOfService__CClaimedCashDrawerClosedEventArgs* handler,
        EventRegistrationToken* token);
    HRESULT (STDMETHODCALLTYPE* remove_Closed)(__x_ABI_CWindows_CDevices_CPointOfService_CIClaimedCashDrawer2* This,
        EventRegistrationToken token);

        END_INTERFACE
    } __x_ABI_CWindows_CDevices_CPointOfService_CIClaimedCashDrawer2Vtbl;

    interface __x_ABI_CWindows_CDevices_CPointOfService_CIClaimedCashDrawer2
    {
        CONST_VTBL struct __x_ABI_CWindows_CDevices_CPointOfService_CIClaimedCashDrawer2Vtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CDevices_CPointOfService_CIClaimedCashDrawer2;
#endif /* !defined(____x_ABI_CWindows_CDevices_CPointOfService_CIClaimedCashDrawer2_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CDevices_CPointOfService_CIClaimedCashDrawerClosedEventArgs_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CDevices_CPointOfService_CIClaimedCashDrawerClosedEventArgs_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CDevices_CPointOfService_CIClaimedCashDrawerClosedEventArgsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CDevices_CPointOfService_CIClaimedCashDrawerClosedEventArgs* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CDevices_CPointOfService_CIClaimedCashDrawerClosedEventArgs* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CDevices_CPointOfService_CIClaimedCashDrawerClosedEventArgs* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CDevices_CPointOfService_CIClaimedCashDrawerClosedEventArgs* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CDevices_CPointOfService_CIClaimedCashDrawerClosedEventArgs* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CDevices_CPointOfService_CIClaimedCashDrawerClosedEventArgs* This,
            TrustLevel* trustLevel);
    
        END_INTERFACE
    } __x_ABI_CWindows_CDevices_CPointOfService_CIClaimedCashDrawerClosedEventArgsVtbl;

    interface __x_ABI_CWindows_CDevices_CPointOfService_CIClaimedCashDrawerClosedEventArgs
    {
        CONST_VTBL struct __x_ABI_CWindows_CDevices_CPointOfService_CIClaimedCashDrawerClosedEventArgsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CDevices_CPointOfService_CIClaimedCashDrawerClosedEventArgs;
#endif /* !defined(____x_ABI_CWindows_CDevices_CPointOfService_CIClaimedCashDrawerClosedEventArgs_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CDevices_CPointOfService_CIClaimedJournalPrinter_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CDevices_CPointOfService_CIClaimedJournalPrinter_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CDevices_CPointOfService_CIClaimedJournalPrinterVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CDevices_CPointOfService_CIClaimedJournalPrinter* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CDevices_CPointOfService_CIClaimedJournalPrinter* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CDevices_CPointOfService_CIClaimedJournalPrinter* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CDevices_CPointOfService_CIClaimedJournalPrinter* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CDevices_CPointOfService_CIClaimedJournalPrinter* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CDevices_CPointOfService_CIClaimedJournalPrinter* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* CreateJob)(__x_ABI_CWindows_CDevices_CPointOfService_CIClaimedJournalPrinter* This,
        __x_ABI_CWindows_CDevices_CPointOfService_CIPosPrinterJob** value);

        END_INTERFACE
    } __x_ABI_CWindows_CDevices_CPointOfService_CIClaimedJournalPrinterVtbl;

    interface __x_ABI_CWindows_CDevices_CPointOfService_CIClaimedJournalPrinter
    {
        CONST_VTBL struct __x_ABI_CWindows_CDevices_CPointOfService_CIClaimedJournalPrinterVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CDevices_CPointOfService_CIClaimedJournalPrinter;
#endif /* !defined(____x_ABI_CWindows_CDevices_CPointOfService_CIClaimedJournalPrinter_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CDevices_CPointOfService_CIClaimedLineDisplay_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CDevices_CPointOfService_CIClaimedLineDisplay_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CDevices_CPointOfService_CIClaimedLineDisplayVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CDevices_CPointOfService_CIClaimedLineDisplay* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CDevices_CPointOfService_CIClaimedLineDisplay* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CDevices_CPointOfService_CIClaimedLineDisplay* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CDevices_CPointOfService_CIClaimedLineDisplay* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CDevices_CPointOfService_CIClaimedLineDisplay* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CDevices_CPointOfService_CIClaimedLineDisplay* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_DeviceId)(__x_ABI_CWindows_CDevices_CPointOfService_CIClaimedLineDisplay* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* get_Capabilities)(__x_ABI_CWindows_CDevices_CPointOfService_CIClaimedLineDisplay* This,
        __x_ABI_CWindows_CDevices_CPointOfService_CILineDisplayCapabilities** value);
    HRESULT (STDMETHODCALLTYPE* get_PhysicalDeviceName)(__x_ABI_CWindows_CDevices_CPointOfService_CIClaimedLineDisplay* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* get_PhysicalDeviceDescription)(__x_ABI_CWindows_CDevices_CPointOfService_CIClaimedLineDisplay* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* get_DeviceControlDescription)(__x_ABI_CWindows_CDevices_CPointOfService_CIClaimedLineDisplay* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* get_DeviceControlVersion)(__x_ABI_CWindows_CDevices_CPointOfService_CIClaimedLineDisplay* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* get_DeviceServiceVersion)(__x_ABI_CWindows_CDevices_CPointOfService_CIClaimedLineDisplay* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* get_DefaultWindow)(__x_ABI_CWindows_CDevices_CPointOfService_CIClaimedLineDisplay* This,
        __x_ABI_CWindows_CDevices_CPointOfService_CILineDisplayWindow** value);
    HRESULT (STDMETHODCALLTYPE* RetainDevice)(__x_ABI_CWindows_CDevices_CPointOfService_CIClaimedLineDisplay* This);
    HRESULT (STDMETHODCALLTYPE* add_ReleaseDeviceRequested)(__x_ABI_CWindows_CDevices_CPointOfService_CIClaimedLineDisplay* This,
        __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CDevices__CPointOfService__CClaimedLineDisplay_IInspectable* handler,
        EventRegistrationToken* token);
    HRESULT (STDMETHODCALLTYPE* remove_ReleaseDeviceRequested)(__x_ABI_CWindows_CDevices_CPointOfService_CIClaimedLineDisplay* This,
        EventRegistrationToken token);

        END_INTERFACE
    } __x_ABI_CWindows_CDevices_CPointOfService_CIClaimedLineDisplayVtbl;

    interface __x_ABI_CWindows_CDevices_CPointOfService_CIClaimedLineDisplay
    {
        CONST_VTBL struct __x_ABI_CWindows_CDevices_CPointOfService_CIClaimedLineDisplayVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CDevices_CPointOfService_CIClaimedLineDisplay;
#endif /* !defined(____x_ABI_CWindows_CDevices_CPointOfService_CIClaimedLineDisplay_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CDevices_CPointOfService_CIClaimedLineDisplay2_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CDevices_CPointOfService_CIClaimedLineDisplay2_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CDevices_CPointOfService_CIClaimedLineDisplay2Vtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CDevices_CPointOfService_CIClaimedLineDisplay2* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CDevices_CPointOfService_CIClaimedLineDisplay2* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CDevices_CPointOfService_CIClaimedLineDisplay2* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CDevices_CPointOfService_CIClaimedLineDisplay2* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CDevices_CPointOfService_CIClaimedLineDisplay2* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CDevices_CPointOfService_CIClaimedLineDisplay2* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* GetStatisticsAsync)(__x_ABI_CWindows_CDevices_CPointOfService_CIClaimedLineDisplay2* This,
        __x_ABI_C__FIIterable_1_HSTRING* statisticsCategories,
        __x_ABI_C__FIAsyncOperation_1_HSTRING** result);
    HRESULT (STDMETHODCALLTYPE* CheckHealthAsync)(__x_ABI_CWindows_CDevices_CPointOfService_CIClaimedLineDisplay2* This,
        enum __x_ABI_CWindows_CDevices_CPointOfService_CUnifiedPosHealthCheckLevel level,
        __x_ABI_C__FIAsyncOperation_1_HSTRING** result);
    HRESULT (STDMETHODCALLTYPE* CheckPowerStatusAsync)(__x_ABI_CWindows_CDevices_CPointOfService_CIClaimedLineDisplay2* This,
        __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CDevices__CPointOfService__CLineDisplayPowerStatus** result);
    HRESULT (STDMETHODCALLTYPE* add_StatusUpdated)(__x_ABI_CWindows_CDevices_CPointOfService_CIClaimedLineDisplay2* This,
        __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CDevices__CPointOfService__CClaimedLineDisplay___x_ABI_CWindows__CDevices__CPointOfService__CLineDisplayStatusUpdatedEventArgs* handler,
        EventRegistrationToken* token);
    HRESULT (STDMETHODCALLTYPE* remove_StatusUpdated)(__x_ABI_CWindows_CDevices_CPointOfService_CIClaimedLineDisplay2* This,
        EventRegistrationToken token);
    HRESULT (STDMETHODCALLTYPE* get_SupportedScreenSizesInCharacters)(__x_ABI_CWindows_CDevices_CPointOfService_CIClaimedLineDisplay2* This,
        __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CFoundation__CSize** value);
    HRESULT (STDMETHODCALLTYPE* get_MaxBitmapSizeInPixels)(__x_ABI_CWindows_CDevices_CPointOfService_CIClaimedLineDisplay2* This,
        struct __x_ABI_CWindows_CFoundation_CSize* value);
    HRESULT (STDMETHODCALLTYPE* get_SupportedCharacterSets)(__x_ABI_CWindows_CDevices_CPointOfService_CIClaimedLineDisplay2* This,
        __x_ABI_C__FIVectorView_1_int** value);
    HRESULT (STDMETHODCALLTYPE* get_CustomGlyphs)(__x_ABI_CWindows_CDevices_CPointOfService_CIClaimedLineDisplay2* This,
        __x_ABI_CWindows_CDevices_CPointOfService_CILineDisplayCustomGlyphs** value);
    HRESULT (STDMETHODCALLTYPE* GetAttributes)(__x_ABI_CWindows_CDevices_CPointOfService_CIClaimedLineDisplay2* This,
        __x_ABI_CWindows_CDevices_CPointOfService_CILineDisplayAttributes** value);
    HRESULT (STDMETHODCALLTYPE* TryUpdateAttributesAsync)(__x_ABI_CWindows_CDevices_CPointOfService_CIClaimedLineDisplay2* This,
        __x_ABI_CWindows_CDevices_CPointOfService_CILineDisplayAttributes* attributes,
        __x_ABI_C__FIAsyncOperation_1_boolean** operation);
    HRESULT (STDMETHODCALLTYPE* TrySetDescriptorAsync)(__x_ABI_CWindows_CDevices_CPointOfService_CIClaimedLineDisplay2* This,
        UINT32 descriptor,
        enum __x_ABI_CWindows_CDevices_CPointOfService_CLineDisplayDescriptorState descriptorState,
        __x_ABI_C__FIAsyncOperation_1_boolean** operation);
    HRESULT (STDMETHODCALLTYPE* TryClearDescriptorsAsync)(__x_ABI_CWindows_CDevices_CPointOfService_CIClaimedLineDisplay2* This,
        __x_ABI_C__FIAsyncOperation_1_boolean** operation);
    HRESULT (STDMETHODCALLTYPE* TryCreateWindowAsync)(__x_ABI_CWindows_CDevices_CPointOfService_CIClaimedLineDisplay2* This,
        struct __x_ABI_CWindows_CFoundation_CRect viewport,
        struct __x_ABI_CWindows_CFoundation_CSize windowSize,
        __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CDevices__CPointOfService__CLineDisplayWindow** result);
    HRESULT (STDMETHODCALLTYPE* TryStoreStorageFileBitmapAsync)(__x_ABI_CWindows_CDevices_CPointOfService_CIClaimedLineDisplay2* This,
        __x_ABI_CWindows_CStorage_CIStorageFile* bitmap,
        __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CDevices__CPointOfService__CLineDisplayStoredBitmap** result);
    HRESULT (STDMETHODCALLTYPE* TryStoreStorageFileBitmapWithAlignmentAsync)(__x_ABI_CWindows_CDevices_CPointOfService_CIClaimedLineDisplay2* This,
        __x_ABI_CWindows_CStorage_CIStorageFile* bitmap,
        enum __x_ABI_CWindows_CDevices_CPointOfService_CLineDisplayHorizontalAlignment horizontalAlignment,
        enum __x_ABI_CWindows_CDevices_CPointOfService_CLineDisplayVerticalAlignment verticalAlignment,
        __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CDevices__CPointOfService__CLineDisplayStoredBitmap** result);
    HRESULT (STDMETHODCALLTYPE* TryStoreStorageFileBitmapWithAlignmentAndWidthAsync)(__x_ABI_CWindows_CDevices_CPointOfService_CIClaimedLineDisplay2* This,
        __x_ABI_CWindows_CStorage_CIStorageFile* bitmap,
        enum __x_ABI_CWindows_CDevices_CPointOfService_CLineDisplayHorizontalAlignment horizontalAlignment,
        enum __x_ABI_CWindows_CDevices_CPointOfService_CLineDisplayVerticalAlignment verticalAlignment,
        INT32 widthInPixels,
        __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CDevices__CPointOfService__CLineDisplayStoredBitmap** result);

        END_INTERFACE
    } __x_ABI_CWindows_CDevices_CPointOfService_CIClaimedLineDisplay2Vtbl;

    interface __x_ABI_CWindows_CDevices_CPointOfService_CIClaimedLineDisplay2
    {
        CONST_VTBL struct __x_ABI_CWindows_CDevices_CPointOfService_CIClaimedLineDisplay2Vtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CDevices_CPointOfService_CIClaimedLineDisplay2;
#endif /* !defined(____x_ABI_CWindows_CDevices_CPointOfService_CIClaimedLineDisplay2_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CDevices_CPointOfService_CIClaimedLineDisplay3_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CDevices_CPointOfService_CIClaimedLineDisplay3_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CDevices_CPointOfService_CIClaimedLineDisplay3Vtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CDevices_CPointOfService_CIClaimedLineDisplay3* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CDevices_CPointOfService_CIClaimedLineDisplay3* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CDevices_CPointOfService_CIClaimedLineDisplay3* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CDevices_CPointOfService_CIClaimedLineDisplay3* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CDevices_CPointOfService_CIClaimedLineDisplay3* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CDevices_CPointOfService_CIClaimedLineDisplay3* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* add_Closed)(__x_ABI_CWindows_CDevices_CPointOfService_CIClaimedLineDisplay3* This,
        __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CDevices__CPointOfService__CClaimedLineDisplay___x_ABI_CWindows__CDevices__CPointOfService__CClaimedLineDisplayClosedEventArgs* handler,
        EventRegistrationToken* token);
    HRESULT (STDMETHODCALLTYPE* remove_Closed)(__x_ABI_CWindows_CDevices_CPointOfService_CIClaimedLineDisplay3* This,
        EventRegistrationToken token);

        END_INTERFACE
    } __x_ABI_CWindows_CDevices_CPointOfService_CIClaimedLineDisplay3Vtbl;

    interface __x_ABI_CWindows_CDevices_CPointOfService_CIClaimedLineDisplay3
    {
        CONST_VTBL struct __x_ABI_CWindows_CDevices_CPointOfService_CIClaimedLineDisplay3Vtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CDevices_CPointOfService_CIClaimedLineDisplay3;
#endif /* !defined(____x_ABI_CWindows_CDevices_CPointOfService_CIClaimedLineDisplay3_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CDevices_CPointOfService_CIClaimedLineDisplayClosedEventArgs_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CDevices_CPointOfService_CIClaimedLineDisplayClosedEventArgs_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CDevices_CPointOfService_CIClaimedLineDisplayClosedEventArgsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CDevices_CPointOfService_CIClaimedLineDisplayClosedEventArgs* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CDevices_CPointOfService_CIClaimedLineDisplayClosedEventArgs* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CDevices_CPointOfService_CIClaimedLineDisplayClosedEventArgs* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CDevices_CPointOfService_CIClaimedLineDisplayClosedEventArgs* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CDevices_CPointOfService_CIClaimedLineDisplayClosedEventArgs* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CDevices_CPointOfService_CIClaimedLineDisplayClosedEventArgs* This,
            TrustLevel* trustLevel);
    
        END_INTERFACE
    } __x_ABI_CWindows_CDevices_CPointOfService_CIClaimedLineDisplayClosedEventArgsVtbl;

    interface __x_ABI_CWindows_CDevices_CPointOfService_CIClaimedLineDisplayClosedEventArgs
    {
        CONST_VTBL struct __x_ABI_CWindows_CDevices_CPointOfService_CIClaimedLineDisplayClosedEventArgsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CDevices_CPointOfService_CIClaimedLineDisplayClosedEventArgs;
#endif /* !defined(____x_ABI_CWindows_CDevices_CPointOfService_CIClaimedLineDisplayClosedEventArgs_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CDevices_CPointOfService_CIClaimedLineDisplayStatics_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CDevices_CPointOfService_CIClaimedLineDisplayStatics_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CDevices_CPointOfService_CIClaimedLineDisplayStaticsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CDevices_CPointOfService_CIClaimedLineDisplayStatics* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CDevices_CPointOfService_CIClaimedLineDisplayStatics* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CDevices_CPointOfService_CIClaimedLineDisplayStatics* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CDevices_CPointOfService_CIClaimedLineDisplayStatics* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CDevices_CPointOfService_CIClaimedLineDisplayStatics* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CDevices_CPointOfService_CIClaimedLineDisplayStatics* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* FromIdAsync)(__x_ABI_CWindows_CDevices_CPointOfService_CIClaimedLineDisplayStatics* This,
        HSTRING deviceId,
        __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CDevices__CPointOfService__CClaimedLineDisplay** operation);
    HRESULT (STDMETHODCALLTYPE* GetDeviceSelector)(__x_ABI_CWindows_CDevices_CPointOfService_CIClaimedLineDisplayStatics* This,
        HSTRING* result);
    HRESULT (STDMETHODCALLTYPE* GetDeviceSelectorWithConnectionTypes)(__x_ABI_CWindows_CDevices_CPointOfService_CIClaimedLineDisplayStatics* This,
        enum __x_ABI_CWindows_CDevices_CPointOfService_CPosConnectionTypes connectionTypes,
        HSTRING* value);

        END_INTERFACE
    } __x_ABI_CWindows_CDevices_CPointOfService_CIClaimedLineDisplayStaticsVtbl;

    interface __x_ABI_CWindows_CDevices_CPointOfService_CIClaimedLineDisplayStatics
    {
        CONST_VTBL struct __x_ABI_CWindows_CDevices_CPointOfService_CIClaimedLineDisplayStaticsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CDevices_CPointOfService_CIClaimedLineDisplayStatics;
#endif /* !defined(____x_ABI_CWindows_CDevices_CPointOfService_CIClaimedLineDisplayStatics_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CDevices_CPointOfService_CIClaimedMagneticStripeReader_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CDevices_CPointOfService_CIClaimedMagneticStripeReader_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CDevices_CPointOfService_CIClaimedMagneticStripeReaderVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CDevices_CPointOfService_CIClaimedMagneticStripeReader* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CDevices_CPointOfService_CIClaimedMagneticStripeReader* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CDevices_CPointOfService_CIClaimedMagneticStripeReader* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CDevices_CPointOfService_CIClaimedMagneticStripeReader* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CDevices_CPointOfService_CIClaimedMagneticStripeReader* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CDevices_CPointOfService_CIClaimedMagneticStripeReader* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_DeviceId)(__x_ABI_CWindows_CDevices_CPointOfService_CIClaimedMagneticStripeReader* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* get_IsEnabled)(__x_ABI_CWindows_CDevices_CPointOfService_CIClaimedMagneticStripeReader* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* put_IsDisabledOnDataReceived)(__x_ABI_CWindows_CDevices_CPointOfService_CIClaimedMagneticStripeReader* This,
        boolean value);
    HRESULT (STDMETHODCALLTYPE* get_IsDisabledOnDataReceived)(__x_ABI_CWindows_CDevices_CPointOfService_CIClaimedMagneticStripeReader* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* put_IsDecodeDataEnabled)(__x_ABI_CWindows_CDevices_CPointOfService_CIClaimedMagneticStripeReader* This,
        boolean value);
    HRESULT (STDMETHODCALLTYPE* get_IsDecodeDataEnabled)(__x_ABI_CWindows_CDevices_CPointOfService_CIClaimedMagneticStripeReader* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* get_IsDeviceAuthenticated)(__x_ABI_CWindows_CDevices_CPointOfService_CIClaimedMagneticStripeReader* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* put_DataEncryptionAlgorithm)(__x_ABI_CWindows_CDevices_CPointOfService_CIClaimedMagneticStripeReader* This,
        UINT32 value);
    HRESULT (STDMETHODCALLTYPE* get_DataEncryptionAlgorithm)(__x_ABI_CWindows_CDevices_CPointOfService_CIClaimedMagneticStripeReader* This,
        UINT32* value);
    HRESULT (STDMETHODCALLTYPE* put_TracksToRead)(__x_ABI_CWindows_CDevices_CPointOfService_CIClaimedMagneticStripeReader* This,
        enum __x_ABI_CWindows_CDevices_CPointOfService_CMagneticStripeReaderTrackIds value);
    HRESULT (STDMETHODCALLTYPE* get_TracksToRead)(__x_ABI_CWindows_CDevices_CPointOfService_CIClaimedMagneticStripeReader* This,
        enum __x_ABI_CWindows_CDevices_CPointOfService_CMagneticStripeReaderTrackIds* value);
    HRESULT (STDMETHODCALLTYPE* put_IsTransmitSentinelsEnabled)(__x_ABI_CWindows_CDevices_CPointOfService_CIClaimedMagneticStripeReader* This,
        boolean value);
    HRESULT (STDMETHODCALLTYPE* get_IsTransmitSentinelsEnabled)(__x_ABI_CWindows_CDevices_CPointOfService_CIClaimedMagneticStripeReader* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* EnableAsync)(__x_ABI_CWindows_CDevices_CPointOfService_CIClaimedMagneticStripeReader* This,
        __x_ABI_CWindows_CFoundation_CIAsyncAction** result);
    HRESULT (STDMETHODCALLTYPE* DisableAsync)(__x_ABI_CWindows_CDevices_CPointOfService_CIClaimedMagneticStripeReader* This,
        __x_ABI_CWindows_CFoundation_CIAsyncAction** result);
    HRESULT (STDMETHODCALLTYPE* RetainDevice)(__x_ABI_CWindows_CDevices_CPointOfService_CIClaimedMagneticStripeReader* This);
    HRESULT (STDMETHODCALLTYPE* SetErrorReportingType)(__x_ABI_CWindows_CDevices_CPointOfService_CIClaimedMagneticStripeReader* This,
        enum __x_ABI_CWindows_CDevices_CPointOfService_CMagneticStripeReaderErrorReportingType value);
    HRESULT (STDMETHODCALLTYPE* RetrieveDeviceAuthenticationDataAsync)(__x_ABI_CWindows_CDevices_CPointOfService_CIClaimedMagneticStripeReader* This,
        __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CStorage__CStreams__CIBuffer** operation);
    HRESULT (STDMETHODCALLTYPE* AuthenticateDeviceAsync)(__x_ABI_CWindows_CDevices_CPointOfService_CIClaimedMagneticStripeReader* This,
        UINT32 responseTokenLength,
        BYTE* responseToken,
        __x_ABI_CWindows_CFoundation_CIAsyncAction** result);
    HRESULT (STDMETHODCALLTYPE* DeAuthenticateDeviceAsync)(__x_ABI_CWindows_CDevices_CPointOfService_CIClaimedMagneticStripeReader* This,
        UINT32 responseTokenLength,
        BYTE* responseToken,
        __x_ABI_CWindows_CFoundation_CIAsyncAction** result);
    HRESULT (STDMETHODCALLTYPE* UpdateKeyAsync)(__x_ABI_CWindows_CDevices_CPointOfService_CIClaimedMagneticStripeReader* This,
        HSTRING key,
        HSTRING keyName,
        __x_ABI_CWindows_CFoundation_CIAsyncAction** result);
    HRESULT (STDMETHODCALLTYPE* ResetStatisticsAsync)(__x_ABI_CWindows_CDevices_CPointOfService_CIClaimedMagneticStripeReader* This,
        __x_ABI_C__FIIterable_1_HSTRING* statisticsCategories,
        __x_ABI_CWindows_CFoundation_CIAsyncAction** result);
    HRESULT (STDMETHODCALLTYPE* UpdateStatisticsAsync)(__x_ABI_CWindows_CDevices_CPointOfService_CIClaimedMagneticStripeReader* This,
        __x_ABI_C__FIIterable_1___x_ABI_C__FIKeyValuePair_2_HSTRING_HSTRING* statistics,
        __x_ABI_CWindows_CFoundation_CIAsyncAction** result);
    HRESULT (STDMETHODCALLTYPE* add_BankCardDataReceived)(__x_ABI_CWindows_CDevices_CPointOfService_CIClaimedMagneticStripeReader* This,
        __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CDevices__CPointOfService__CClaimedMagneticStripeReader___x_ABI_CWindows__CDevices__CPointOfService__CMagneticStripeReaderBankCardDataReceivedEventArgs* handler,
        EventRegistrationToken* token);
    HRESULT (STDMETHODCALLTYPE* remove_BankCardDataReceived)(__x_ABI_CWindows_CDevices_CPointOfService_CIClaimedMagneticStripeReader* This,
        EventRegistrationToken token);
    HRESULT (STDMETHODCALLTYPE* add_AamvaCardDataReceived)(__x_ABI_CWindows_CDevices_CPointOfService_CIClaimedMagneticStripeReader* This,
        __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CDevices__CPointOfService__CClaimedMagneticStripeReader___x_ABI_CWindows__CDevices__CPointOfService__CMagneticStripeReaderAamvaCardDataReceivedEventArgs* handler,
        EventRegistrationToken* token);
    HRESULT (STDMETHODCALLTYPE* remove_AamvaCardDataReceived)(__x_ABI_CWindows_CDevices_CPointOfService_CIClaimedMagneticStripeReader* This,
        EventRegistrationToken token);
    HRESULT (STDMETHODCALLTYPE* add_VendorSpecificDataReceived)(__x_ABI_CWindows_CDevices_CPointOfService_CIClaimedMagneticStripeReader* This,
        __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CDevices__CPointOfService__CClaimedMagneticStripeReader___x_ABI_CWindows__CDevices__CPointOfService__CMagneticStripeReaderVendorSpecificCardDataReceivedEventArgs* handler,
        EventRegistrationToken* token);
    HRESULT (STDMETHODCALLTYPE* remove_VendorSpecificDataReceived)(__x_ABI_CWindows_CDevices_CPointOfService_CIClaimedMagneticStripeReader* This,
        EventRegistrationToken token);
    HRESULT (STDMETHODCALLTYPE* add_ReleaseDeviceRequested)(__x_ABI_CWindows_CDevices_CPointOfService_CIClaimedMagneticStripeReader* This,
        __x_ABI_C__FIEventHandler_1___x_ABI_CWindows__CDevices__CPointOfService__CClaimedMagneticStripeReader* handler,
        EventRegistrationToken* token);
    HRESULT (STDMETHODCALLTYPE* remove_ReleaseDeviceRequested)(__x_ABI_CWindows_CDevices_CPointOfService_CIClaimedMagneticStripeReader* This,
        EventRegistrationToken token);
    HRESULT (STDMETHODCALLTYPE* add_ErrorOccurred)(__x_ABI_CWindows_CDevices_CPointOfService_CIClaimedMagneticStripeReader* This,
        __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CDevices__CPointOfService__CClaimedMagneticStripeReader___x_ABI_CWindows__CDevices__CPointOfService__CMagneticStripeReaderErrorOccurredEventArgs* handler,
        EventRegistrationToken* token);
    HRESULT (STDMETHODCALLTYPE* remove_ErrorOccurred)(__x_ABI_CWindows_CDevices_CPointOfService_CIClaimedMagneticStripeReader* This,
        EventRegistrationToken token);

        END_INTERFACE
    } __x_ABI_CWindows_CDevices_CPointOfService_CIClaimedMagneticStripeReaderVtbl;

    interface __x_ABI_CWindows_CDevices_CPointOfService_CIClaimedMagneticStripeReader
    {
        CONST_VTBL struct __x_ABI_CWindows_CDevices_CPointOfService_CIClaimedMagneticStripeReaderVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CDevices_CPointOfService_CIClaimedMagneticStripeReader;
#endif /* !defined(____x_ABI_CWindows_CDevices_CPointOfService_CIClaimedMagneticStripeReader_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CDevices_CPointOfService_CIClaimedMagneticStripeReader2_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CDevices_CPointOfService_CIClaimedMagneticStripeReader2_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CDevices_CPointOfService_CIClaimedMagneticStripeReader2Vtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CDevices_CPointOfService_CIClaimedMagneticStripeReader2* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CDevices_CPointOfService_CIClaimedMagneticStripeReader2* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CDevices_CPointOfService_CIClaimedMagneticStripeReader2* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CDevices_CPointOfService_CIClaimedMagneticStripeReader2* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CDevices_CPointOfService_CIClaimedMagneticStripeReader2* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CDevices_CPointOfService_CIClaimedMagneticStripeReader2* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* add_Closed)(__x_ABI_CWindows_CDevices_CPointOfService_CIClaimedMagneticStripeReader2* This,
        __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CDevices__CPointOfService__CClaimedMagneticStripeReader___x_ABI_CWindows__CDevices__CPointOfService__CClaimedMagneticStripeReaderClosedEventArgs* handler,
        EventRegistrationToken* token);
    HRESULT (STDMETHODCALLTYPE* remove_Closed)(__x_ABI_CWindows_CDevices_CPointOfService_CIClaimedMagneticStripeReader2* This,
        EventRegistrationToken token);

        END_INTERFACE
    } __x_ABI_CWindows_CDevices_CPointOfService_CIClaimedMagneticStripeReader2Vtbl;

    interface __x_ABI_CWindows_CDevices_CPointOfService_CIClaimedMagneticStripeReader2
    {
        CONST_VTBL struct __x_ABI_CWindows_CDevices_CPointOfService_CIClaimedMagneticStripeReader2Vtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CDevices_CPointOfService_CIClaimedMagneticStripeReader2;
#endif /* !defined(____x_ABI_CWindows_CDevices_CPointOfService_CIClaimedMagneticStripeReader2_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CDevices_CPointOfService_CIClaimedMagneticStripeReaderClosedEventArgs_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CDevices_CPointOfService_CIClaimedMagneticStripeReaderClosedEventArgs_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CDevices_CPointOfService_CIClaimedMagneticStripeReaderClosedEventArgsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CDevices_CPointOfService_CIClaimedMagneticStripeReaderClosedEventArgs* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CDevices_CPointOfService_CIClaimedMagneticStripeReaderClosedEventArgs* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CDevices_CPointOfService_CIClaimedMagneticStripeReaderClosedEventArgs* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CDevices_CPointOfService_CIClaimedMagneticStripeReaderClosedEventArgs* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CDevices_CPointOfService_CIClaimedMagneticStripeReaderClosedEventArgs* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CDevices_CPointOfService_CIClaimedMagneticStripeReaderClosedEventArgs* This,
            TrustLevel* trustLevel);
    
        END_INTERFACE
    } __x_ABI_CWindows_CDevices_CPointOfService_CIClaimedMagneticStripeReaderClosedEventArgsVtbl;

    interface __x_ABI_CWindows_CDevices_CPointOfService_CIClaimedMagneticStripeReaderClosedEventArgs
    {
        CONST_VTBL struct __x_ABI_CWindows_CDevices_CPointOfService_CIClaimedMagneticStripeReaderClosedEventArgsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CDevices_CPointOfService_CIClaimedMagneticStripeReaderClosedEventArgs;
#endif /* !defined(____x_ABI_CWindows_CDevices_CPointOfService_CIClaimedMagneticStripeReaderClosedEventArgs_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CDevices_CPointOfService_CIClaimedPosPrinter_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CDevices_CPointOfService_CIClaimedPosPrinter_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CDevices_CPointOfService_CIClaimedPosPrinterVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CDevices_CPointOfService_CIClaimedPosPrinter* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CDevices_CPointOfService_CIClaimedPosPrinter* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CDevices_CPointOfService_CIClaimedPosPrinter* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CDevices_CPointOfService_CIClaimedPosPrinter* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CDevices_CPointOfService_CIClaimedPosPrinter* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CDevices_CPointOfService_CIClaimedPosPrinter* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_DeviceId)(__x_ABI_CWindows_CDevices_CPointOfService_CIClaimedPosPrinter* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* get_IsEnabled)(__x_ABI_CWindows_CDevices_CPointOfService_CIClaimedPosPrinter* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* put_CharacterSet)(__x_ABI_CWindows_CDevices_CPointOfService_CIClaimedPosPrinter* This,
        UINT32 value);
    HRESULT (STDMETHODCALLTYPE* get_CharacterSet)(__x_ABI_CWindows_CDevices_CPointOfService_CIClaimedPosPrinter* This,
        UINT32* value);
    HRESULT (STDMETHODCALLTYPE* get_IsCoverOpen)(__x_ABI_CWindows_CDevices_CPointOfService_CIClaimedPosPrinter* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* put_IsCharacterSetMappingEnabled)(__x_ABI_CWindows_CDevices_CPointOfService_CIClaimedPosPrinter* This,
        boolean value);
    HRESULT (STDMETHODCALLTYPE* get_IsCharacterSetMappingEnabled)(__x_ABI_CWindows_CDevices_CPointOfService_CIClaimedPosPrinter* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* put_MapMode)(__x_ABI_CWindows_CDevices_CPointOfService_CIClaimedPosPrinter* This,
        enum __x_ABI_CWindows_CDevices_CPointOfService_CPosPrinterMapMode value);
    HRESULT (STDMETHODCALLTYPE* get_MapMode)(__x_ABI_CWindows_CDevices_CPointOfService_CIClaimedPosPrinter* This,
        enum __x_ABI_CWindows_CDevices_CPointOfService_CPosPrinterMapMode* value);
    HRESULT (STDMETHODCALLTYPE* get_Receipt)(__x_ABI_CWindows_CDevices_CPointOfService_CIClaimedPosPrinter* This,
        __x_ABI_CWindows_CDevices_CPointOfService_CIClaimedReceiptPrinter** value);
    HRESULT (STDMETHODCALLTYPE* get_Slip)(__x_ABI_CWindows_CDevices_CPointOfService_CIClaimedPosPrinter* This,
        __x_ABI_CWindows_CDevices_CPointOfService_CIClaimedSlipPrinter** value);
    HRESULT (STDMETHODCALLTYPE* get_Journal)(__x_ABI_CWindows_CDevices_CPointOfService_CIClaimedPosPrinter* This,
        __x_ABI_CWindows_CDevices_CPointOfService_CIClaimedJournalPrinter** value);
    HRESULT (STDMETHODCALLTYPE* EnableAsync)(__x_ABI_CWindows_CDevices_CPointOfService_CIClaimedPosPrinter* This,
        __x_ABI_C__FIAsyncOperation_1_boolean** result);
    HRESULT (STDMETHODCALLTYPE* DisableAsync)(__x_ABI_CWindows_CDevices_CPointOfService_CIClaimedPosPrinter* This,
        __x_ABI_C__FIAsyncOperation_1_boolean** result);
    HRESULT (STDMETHODCALLTYPE* RetainDeviceAsync)(__x_ABI_CWindows_CDevices_CPointOfService_CIClaimedPosPrinter* This,
        __x_ABI_C__FIAsyncOperation_1_boolean** result);
    HRESULT (STDMETHODCALLTYPE* ResetStatisticsAsync)(__x_ABI_CWindows_CDevices_CPointOfService_CIClaimedPosPrinter* This,
        __x_ABI_C__FIIterable_1_HSTRING* statisticsCategories,
        __x_ABI_C__FIAsyncOperation_1_boolean** result);
    HRESULT (STDMETHODCALLTYPE* UpdateStatisticsAsync)(__x_ABI_CWindows_CDevices_CPointOfService_CIClaimedPosPrinter* This,
        __x_ABI_C__FIIterable_1___x_ABI_C__FIKeyValuePair_2_HSTRING_HSTRING* statistics,
        __x_ABI_C__FIAsyncOperation_1_boolean** result);
    HRESULT (STDMETHODCALLTYPE* add_ReleaseDeviceRequested)(__x_ABI_CWindows_CDevices_CPointOfService_CIClaimedPosPrinter* This,
        __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CDevices__CPointOfService__CClaimedPosPrinter___x_ABI_CWindows__CDevices__CPointOfService__CPosPrinterReleaseDeviceRequestedEventArgs* handler,
        EventRegistrationToken* token);
    HRESULT (STDMETHODCALLTYPE* remove_ReleaseDeviceRequested)(__x_ABI_CWindows_CDevices_CPointOfService_CIClaimedPosPrinter* This,
        EventRegistrationToken token);

        END_INTERFACE
    } __x_ABI_CWindows_CDevices_CPointOfService_CIClaimedPosPrinterVtbl;

    interface __x_ABI_CWindows_CDevices_CPointOfService_CIClaimedPosPrinter
    {
        CONST_VTBL struct __x_ABI_CWindows_CDevices_CPointOfService_CIClaimedPosPrinterVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CDevices_CPointOfService_CIClaimedPosPrinter;
#endif /* !defined(____x_ABI_CWindows_CDevices_CPointOfService_CIClaimedPosPrinter_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CDevices_CPointOfService_CIClaimedPosPrinter2_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CDevices_CPointOfService_CIClaimedPosPrinter2_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CDevices_CPointOfService_CIClaimedPosPrinter2Vtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CDevices_CPointOfService_CIClaimedPosPrinter2* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CDevices_CPointOfService_CIClaimedPosPrinter2* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CDevices_CPointOfService_CIClaimedPosPrinter2* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CDevices_CPointOfService_CIClaimedPosPrinter2* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CDevices_CPointOfService_CIClaimedPosPrinter2* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CDevices_CPointOfService_CIClaimedPosPrinter2* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* add_Closed)(__x_ABI_CWindows_CDevices_CPointOfService_CIClaimedPosPrinter2* This,
        __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CDevices__CPointOfService__CClaimedPosPrinter___x_ABI_CWindows__CDevices__CPointOfService__CClaimedPosPrinterClosedEventArgs* handler,
        EventRegistrationToken* token);
    HRESULT (STDMETHODCALLTYPE* remove_Closed)(__x_ABI_CWindows_CDevices_CPointOfService_CIClaimedPosPrinter2* This,
        EventRegistrationToken token);

        END_INTERFACE
    } __x_ABI_CWindows_CDevices_CPointOfService_CIClaimedPosPrinter2Vtbl;

    interface __x_ABI_CWindows_CDevices_CPointOfService_CIClaimedPosPrinter2
    {
        CONST_VTBL struct __x_ABI_CWindows_CDevices_CPointOfService_CIClaimedPosPrinter2Vtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CDevices_CPointOfService_CIClaimedPosPrinter2;
#endif /* !defined(____x_ABI_CWindows_CDevices_CPointOfService_CIClaimedPosPrinter2_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CDevices_CPointOfService_CIClaimedPosPrinterClosedEventArgs_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CDevices_CPointOfService_CIClaimedPosPrinterClosedEventArgs_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CDevices_CPointOfService_CIClaimedPosPrinterClosedEventArgsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CDevices_CPointOfService_CIClaimedPosPrinterClosedEventArgs* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CDevices_CPointOfService_CIClaimedPosPrinterClosedEventArgs* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CDevices_CPointOfService_CIClaimedPosPrinterClosedEventArgs* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CDevices_CPointOfService_CIClaimedPosPrinterClosedEventArgs* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CDevices_CPointOfService_CIClaimedPosPrinterClosedEventArgs* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CDevices_CPointOfService_CIClaimedPosPrinterClosedEventArgs* This,
            TrustLevel* trustLevel);
    
        END_INTERFACE
    } __x_ABI_CWindows_CDevices_CPointOfService_CIClaimedPosPrinterClosedEventArgsVtbl;

    interface __x_ABI_CWindows_CDevices_CPointOfService_CIClaimedPosPrinterClosedEventArgs
    {
        CONST_VTBL struct __x_ABI_CWindows_CDevices_CPointOfService_CIClaimedPosPrinterClosedEventArgsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CDevices_CPointOfService_CIClaimedPosPrinterClosedEventArgs;
#endif /* !defined(____x_ABI_CWindows_CDevices_CPointOfService_CIClaimedPosPrinterClosedEventArgs_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CDevices_CPointOfService_CIClaimedReceiptPrinter_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CDevices_CPointOfService_CIClaimedReceiptPrinter_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CDevices_CPointOfService_CIClaimedReceiptPrinterVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CDevices_CPointOfService_CIClaimedReceiptPrinter* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CDevices_CPointOfService_CIClaimedReceiptPrinter* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CDevices_CPointOfService_CIClaimedReceiptPrinter* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CDevices_CPointOfService_CIClaimedReceiptPrinter* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CDevices_CPointOfService_CIClaimedReceiptPrinter* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CDevices_CPointOfService_CIClaimedReceiptPrinter* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_SidewaysMaxLines)(__x_ABI_CWindows_CDevices_CPointOfService_CIClaimedReceiptPrinter* This,
        UINT32* value);
    HRESULT (STDMETHODCALLTYPE* get_SidewaysMaxChars)(__x_ABI_CWindows_CDevices_CPointOfService_CIClaimedReceiptPrinter* This,
        UINT32* value);
    HRESULT (STDMETHODCALLTYPE* get_LinesToPaperCut)(__x_ABI_CWindows_CDevices_CPointOfService_CIClaimedReceiptPrinter* This,
        UINT32* value);
    HRESULT (STDMETHODCALLTYPE* get_PageSize)(__x_ABI_CWindows_CDevices_CPointOfService_CIClaimedReceiptPrinter* This,
        struct __x_ABI_CWindows_CFoundation_CSize* value);
    HRESULT (STDMETHODCALLTYPE* get_PrintArea)(__x_ABI_CWindows_CDevices_CPointOfService_CIClaimedReceiptPrinter* This,
        struct __x_ABI_CWindows_CFoundation_CRect* value);
    HRESULT (STDMETHODCALLTYPE* CreateJob)(__x_ABI_CWindows_CDevices_CPointOfService_CIClaimedReceiptPrinter* This,
        __x_ABI_CWindows_CDevices_CPointOfService_CIReceiptPrintJob** value);

        END_INTERFACE
    } __x_ABI_CWindows_CDevices_CPointOfService_CIClaimedReceiptPrinterVtbl;

    interface __x_ABI_CWindows_CDevices_CPointOfService_CIClaimedReceiptPrinter
    {
        CONST_VTBL struct __x_ABI_CWindows_CDevices_CPointOfService_CIClaimedReceiptPrinterVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CDevices_CPointOfService_CIClaimedReceiptPrinter;
#endif /* !defined(____x_ABI_CWindows_CDevices_CPointOfService_CIClaimedReceiptPrinter_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CDevices_CPointOfService_CIClaimedSlipPrinter_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CDevices_CPointOfService_CIClaimedSlipPrinter_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CDevices_CPointOfService_CIClaimedSlipPrinterVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CDevices_CPointOfService_CIClaimedSlipPrinter* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CDevices_CPointOfService_CIClaimedSlipPrinter* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CDevices_CPointOfService_CIClaimedSlipPrinter* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CDevices_CPointOfService_CIClaimedSlipPrinter* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CDevices_CPointOfService_CIClaimedSlipPrinter* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CDevices_CPointOfService_CIClaimedSlipPrinter* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_SidewaysMaxLines)(__x_ABI_CWindows_CDevices_CPointOfService_CIClaimedSlipPrinter* This,
        UINT32* value);
    HRESULT (STDMETHODCALLTYPE* get_SidewaysMaxChars)(__x_ABI_CWindows_CDevices_CPointOfService_CIClaimedSlipPrinter* This,
        UINT32* value);
    HRESULT (STDMETHODCALLTYPE* get_MaxLines)(__x_ABI_CWindows_CDevices_CPointOfService_CIClaimedSlipPrinter* This,
        UINT32* value);
    HRESULT (STDMETHODCALLTYPE* get_LinesNearEndToEnd)(__x_ABI_CWindows_CDevices_CPointOfService_CIClaimedSlipPrinter* This,
        UINT32* value);
    HRESULT (STDMETHODCALLTYPE* get_PrintSide)(__x_ABI_CWindows_CDevices_CPointOfService_CIClaimedSlipPrinter* This,
        enum __x_ABI_CWindows_CDevices_CPointOfService_CPosPrinterPrintSide* value);
    HRESULT (STDMETHODCALLTYPE* get_PageSize)(__x_ABI_CWindows_CDevices_CPointOfService_CIClaimedSlipPrinter* This,
        struct __x_ABI_CWindows_CFoundation_CSize* value);
    HRESULT (STDMETHODCALLTYPE* get_PrintArea)(__x_ABI_CWindows_CDevices_CPointOfService_CIClaimedSlipPrinter* This,
        struct __x_ABI_CWindows_CFoundation_CRect* value);
    HRESULT (STDMETHODCALLTYPE* OpenJaws)(__x_ABI_CWindows_CDevices_CPointOfService_CIClaimedSlipPrinter* This);
    HRESULT (STDMETHODCALLTYPE* CloseJaws)(__x_ABI_CWindows_CDevices_CPointOfService_CIClaimedSlipPrinter* This);
    HRESULT (STDMETHODCALLTYPE* InsertSlipAsync)(__x_ABI_CWindows_CDevices_CPointOfService_CIClaimedSlipPrinter* This,
        struct __x_ABI_CWindows_CFoundation_CTimeSpan timeout,
        __x_ABI_C__FIAsyncOperation_1_boolean** result);
    HRESULT (STDMETHODCALLTYPE* RemoveSlipAsync)(__x_ABI_CWindows_CDevices_CPointOfService_CIClaimedSlipPrinter* This,
        struct __x_ABI_CWindows_CFoundation_CTimeSpan timeout,
        __x_ABI_C__FIAsyncOperation_1_boolean** result);
    HRESULT (STDMETHODCALLTYPE* ChangePrintSide)(__x_ABI_CWindows_CDevices_CPointOfService_CIClaimedSlipPrinter* This,
        enum __x_ABI_CWindows_CDevices_CPointOfService_CPosPrinterPrintSide printSide);
    HRESULT (STDMETHODCALLTYPE* CreateJob)(__x_ABI_CWindows_CDevices_CPointOfService_CIClaimedSlipPrinter* This,
        __x_ABI_CWindows_CDevices_CPointOfService_CIReceiptOrSlipJob** value);

        END_INTERFACE
    } __x_ABI_CWindows_CDevices_CPointOfService_CIClaimedSlipPrinterVtbl;

    interface __x_ABI_CWindows_CDevices_CPointOfService_CIClaimedSlipPrinter
    {
        CONST_VTBL struct __x_ABI_CWindows_CDevices_CPointOfService_CIClaimedSlipPrinterVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CDevices_CPointOfService_CIClaimedSlipPrinter;
#endif /* !defined(____x_ABI_CWindows_CDevices_CPointOfService_CIClaimedSlipPrinter_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CDevices_CPointOfService_CICommonClaimedPosPrinterStation_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CDevices_CPointOfService_CICommonClaimedPosPrinterStation_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CDevices_CPointOfService_CICommonClaimedPosPrinterStationVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CDevices_CPointOfService_CICommonClaimedPosPrinterStation* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CDevices_CPointOfService_CICommonClaimedPosPrinterStation* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CDevices_CPointOfService_CICommonClaimedPosPrinterStation* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CDevices_CPointOfService_CICommonClaimedPosPrinterStation* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CDevices_CPointOfService_CICommonClaimedPosPrinterStation* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CDevices_CPointOfService_CICommonClaimedPosPrinterStation* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* put_CharactersPerLine)(__x_ABI_CWindows_CDevices_CPointOfService_CICommonClaimedPosPrinterStation* This,
        UINT32 value);
    HRESULT (STDMETHODCALLTYPE* get_CharactersPerLine)(__x_ABI_CWindows_CDevices_CPointOfService_CICommonClaimedPosPrinterStation* This,
        UINT32* value);
    HRESULT (STDMETHODCALLTYPE* put_LineHeight)(__x_ABI_CWindows_CDevices_CPointOfService_CICommonClaimedPosPrinterStation* This,
        UINT32 value);
    HRESULT (STDMETHODCALLTYPE* get_LineHeight)(__x_ABI_CWindows_CDevices_CPointOfService_CICommonClaimedPosPrinterStation* This,
        UINT32* value);
    HRESULT (STDMETHODCALLTYPE* put_LineSpacing)(__x_ABI_CWindows_CDevices_CPointOfService_CICommonClaimedPosPrinterStation* This,
        UINT32 value);
    HRESULT (STDMETHODCALLTYPE* get_LineSpacing)(__x_ABI_CWindows_CDevices_CPointOfService_CICommonClaimedPosPrinterStation* This,
        UINT32* value);
    HRESULT (STDMETHODCALLTYPE* get_LineWidth)(__x_ABI_CWindows_CDevices_CPointOfService_CICommonClaimedPosPrinterStation* This,
        UINT32* value);
    HRESULT (STDMETHODCALLTYPE* put_IsLetterQuality)(__x_ABI_CWindows_CDevices_CPointOfService_CICommonClaimedPosPrinterStation* This,
        boolean value);
    HRESULT (STDMETHODCALLTYPE* get_IsLetterQuality)(__x_ABI_CWindows_CDevices_CPointOfService_CICommonClaimedPosPrinterStation* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* get_IsPaperNearEnd)(__x_ABI_CWindows_CDevices_CPointOfService_CICommonClaimedPosPrinterStation* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* put_ColorCartridge)(__x_ABI_CWindows_CDevices_CPointOfService_CICommonClaimedPosPrinterStation* This,
        enum __x_ABI_CWindows_CDevices_CPointOfService_CPosPrinterColorCartridge value);
    HRESULT (STDMETHODCALLTYPE* get_ColorCartridge)(__x_ABI_CWindows_CDevices_CPointOfService_CICommonClaimedPosPrinterStation* This,
        enum __x_ABI_CWindows_CDevices_CPointOfService_CPosPrinterColorCartridge* value);
    HRESULT (STDMETHODCALLTYPE* get_IsCoverOpen)(__x_ABI_CWindows_CDevices_CPointOfService_CICommonClaimedPosPrinterStation* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* get_IsCartridgeRemoved)(__x_ABI_CWindows_CDevices_CPointOfService_CICommonClaimedPosPrinterStation* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* get_IsCartridgeEmpty)(__x_ABI_CWindows_CDevices_CPointOfService_CICommonClaimedPosPrinterStation* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* get_IsHeadCleaning)(__x_ABI_CWindows_CDevices_CPointOfService_CICommonClaimedPosPrinterStation* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* get_IsPaperEmpty)(__x_ABI_CWindows_CDevices_CPointOfService_CICommonClaimedPosPrinterStation* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* get_IsReadyToPrint)(__x_ABI_CWindows_CDevices_CPointOfService_CICommonClaimedPosPrinterStation* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* ValidateData)(__x_ABI_CWindows_CDevices_CPointOfService_CICommonClaimedPosPrinterStation* This,
        HSTRING data,
        boolean* result);

        END_INTERFACE
    } __x_ABI_CWindows_CDevices_CPointOfService_CICommonClaimedPosPrinterStationVtbl;

    interface __x_ABI_CWindows_CDevices_CPointOfService_CICommonClaimedPosPrinterStation
    {
        CONST_VTBL struct __x_ABI_CWindows_CDevices_CPointOfService_CICommonClaimedPosPrinterStationVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CDevices_CPointOfService_CICommonClaimedPosPrinterStation;
#endif /* !defined(____x_ABI_CWindows_CDevices_CPointOfService_CICommonClaimedPosPrinterStation_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CDevices_CPointOfService_CICommonPosPrintStationCapabilities_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CDevices_CPointOfService_CICommonPosPrintStationCapabilities_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CDevices_CPointOfService_CICommonPosPrintStationCapabilitiesVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CDevices_CPointOfService_CICommonPosPrintStationCapabilities* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CDevices_CPointOfService_CICommonPosPrintStationCapabilities* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CDevices_CPointOfService_CICommonPosPrintStationCapabilities* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CDevices_CPointOfService_CICommonPosPrintStationCapabilities* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CDevices_CPointOfService_CICommonPosPrintStationCapabilities* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CDevices_CPointOfService_CICommonPosPrintStationCapabilities* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_IsPrinterPresent)(__x_ABI_CWindows_CDevices_CPointOfService_CICommonPosPrintStationCapabilities* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* get_IsDualColorSupported)(__x_ABI_CWindows_CDevices_CPointOfService_CICommonPosPrintStationCapabilities* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* get_ColorCartridgeCapabilities)(__x_ABI_CWindows_CDevices_CPointOfService_CICommonPosPrintStationCapabilities* This,
        enum __x_ABI_CWindows_CDevices_CPointOfService_CPosPrinterColorCapabilities* value);
    HRESULT (STDMETHODCALLTYPE* get_CartridgeSensors)(__x_ABI_CWindows_CDevices_CPointOfService_CICommonPosPrintStationCapabilities* This,
        enum __x_ABI_CWindows_CDevices_CPointOfService_CPosPrinterCartridgeSensors* value);
    HRESULT (STDMETHODCALLTYPE* get_IsBoldSupported)(__x_ABI_CWindows_CDevices_CPointOfService_CICommonPosPrintStationCapabilities* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* get_IsItalicSupported)(__x_ABI_CWindows_CDevices_CPointOfService_CICommonPosPrintStationCapabilities* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* get_IsUnderlineSupported)(__x_ABI_CWindows_CDevices_CPointOfService_CICommonPosPrintStationCapabilities* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* get_IsDoubleHighPrintSupported)(__x_ABI_CWindows_CDevices_CPointOfService_CICommonPosPrintStationCapabilities* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* get_IsDoubleWidePrintSupported)(__x_ABI_CWindows_CDevices_CPointOfService_CICommonPosPrintStationCapabilities* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* get_IsDoubleHighDoubleWidePrintSupported)(__x_ABI_CWindows_CDevices_CPointOfService_CICommonPosPrintStationCapabilities* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* get_IsPaperEmptySensorSupported)(__x_ABI_CWindows_CDevices_CPointOfService_CICommonPosPrintStationCapabilities* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* get_IsPaperNearEndSensorSupported)(__x_ABI_CWindows_CDevices_CPointOfService_CICommonPosPrintStationCapabilities* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* get_SupportedCharactersPerLine)(__x_ABI_CWindows_CDevices_CPointOfService_CICommonPosPrintStationCapabilities* This,
        __x_ABI_C__FIVectorView_1_UINT32** value);

        END_INTERFACE
    } __x_ABI_CWindows_CDevices_CPointOfService_CICommonPosPrintStationCapabilitiesVtbl;

    interface __x_ABI_CWindows_CDevices_CPointOfService_CICommonPosPrintStationCapabilities
    {
        CONST_VTBL struct __x_ABI_CWindows_CDevices_CPointOfService_CICommonPosPrintStationCapabilitiesVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CDevices_CPointOfService_CICommonPosPrintStationCapabilities;
#endif /* !defined(____x_ABI_CWindows_CDevices_CPointOfService_CICommonPosPrintStationCapabilities_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CDevices_CPointOfService_CICommonReceiptSlipCapabilities_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CDevices_CPointOfService_CICommonReceiptSlipCapabilities_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CDevices_CPointOfService_CICommonReceiptSlipCapabilitiesVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CDevices_CPointOfService_CICommonReceiptSlipCapabilities* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CDevices_CPointOfService_CICommonReceiptSlipCapabilities* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CDevices_CPointOfService_CICommonReceiptSlipCapabilities* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CDevices_CPointOfService_CICommonReceiptSlipCapabilities* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CDevices_CPointOfService_CICommonReceiptSlipCapabilities* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CDevices_CPointOfService_CICommonReceiptSlipCapabilities* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_IsBarcodeSupported)(__x_ABI_CWindows_CDevices_CPointOfService_CICommonReceiptSlipCapabilities* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* get_IsBitmapSupported)(__x_ABI_CWindows_CDevices_CPointOfService_CICommonReceiptSlipCapabilities* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* get_IsLeft90RotationSupported)(__x_ABI_CWindows_CDevices_CPointOfService_CICommonReceiptSlipCapabilities* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* get_IsRight90RotationSupported)(__x_ABI_CWindows_CDevices_CPointOfService_CICommonReceiptSlipCapabilities* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* get_Is180RotationSupported)(__x_ABI_CWindows_CDevices_CPointOfService_CICommonReceiptSlipCapabilities* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* get_IsPrintAreaSupported)(__x_ABI_CWindows_CDevices_CPointOfService_CICommonReceiptSlipCapabilities* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* get_RuledLineCapabilities)(__x_ABI_CWindows_CDevices_CPointOfService_CICommonReceiptSlipCapabilities* This,
        enum __x_ABI_CWindows_CDevices_CPointOfService_CPosPrinterRuledLineCapabilities* value);
    HRESULT (STDMETHODCALLTYPE* get_SupportedBarcodeRotations)(__x_ABI_CWindows_CDevices_CPointOfService_CICommonReceiptSlipCapabilities* This,
        __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CDevices__CPointOfService__CPosPrinterRotation** value);
    HRESULT (STDMETHODCALLTYPE* get_SupportedBitmapRotations)(__x_ABI_CWindows_CDevices_CPointOfService_CICommonReceiptSlipCapabilities* This,
        __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CDevices__CPointOfService__CPosPrinterRotation** value);

        END_INTERFACE
    } __x_ABI_CWindows_CDevices_CPointOfService_CICommonReceiptSlipCapabilitiesVtbl;

    interface __x_ABI_CWindows_CDevices_CPointOfService_CICommonReceiptSlipCapabilities
    {
        CONST_VTBL struct __x_ABI_CWindows_CDevices_CPointOfService_CICommonReceiptSlipCapabilitiesVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CDevices_CPointOfService_CICommonReceiptSlipCapabilities;
#endif /* !defined(____x_ABI_CWindows_CDevices_CPointOfService_CICommonReceiptSlipCapabilities_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CDevices_CPointOfService_CIJournalPrintJob_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CDevices_CPointOfService_CIJournalPrintJob_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CDevices_CPointOfService_CIJournalPrintJobVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CDevices_CPointOfService_CIJournalPrintJob* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CDevices_CPointOfService_CIJournalPrintJob* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CDevices_CPointOfService_CIJournalPrintJob* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CDevices_CPointOfService_CIJournalPrintJob* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CDevices_CPointOfService_CIJournalPrintJob* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CDevices_CPointOfService_CIJournalPrintJob* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* Print)(__x_ABI_CWindows_CDevices_CPointOfService_CIJournalPrintJob* This,
        HSTRING data,
        __x_ABI_CWindows_CDevices_CPointOfService_CIPosPrinterPrintOptions* printOptions);
    HRESULT (STDMETHODCALLTYPE* FeedPaperByLine)(__x_ABI_CWindows_CDevices_CPointOfService_CIJournalPrintJob* This,
        INT32 lineCount);
    HRESULT (STDMETHODCALLTYPE* FeedPaperByMapModeUnit)(__x_ABI_CWindows_CDevices_CPointOfService_CIJournalPrintJob* This,
        INT32 distance);

        END_INTERFACE
    } __x_ABI_CWindows_CDevices_CPointOfService_CIJournalPrintJobVtbl;

    interface __x_ABI_CWindows_CDevices_CPointOfService_CIJournalPrintJob
    {
        CONST_VTBL struct __x_ABI_CWindows_CDevices_CPointOfService_CIJournalPrintJobVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CDevices_CPointOfService_CIJournalPrintJob;
#endif /* !defined(____x_ABI_CWindows_CDevices_CPointOfService_CIJournalPrintJob_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CDevices_CPointOfService_CIJournalPrinterCapabilities_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CDevices_CPointOfService_CIJournalPrinterCapabilities_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CDevices_CPointOfService_CIJournalPrinterCapabilitiesVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CDevices_CPointOfService_CIJournalPrinterCapabilities* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CDevices_CPointOfService_CIJournalPrinterCapabilities* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CDevices_CPointOfService_CIJournalPrinterCapabilities* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CDevices_CPointOfService_CIJournalPrinterCapabilities* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CDevices_CPointOfService_CIJournalPrinterCapabilities* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CDevices_CPointOfService_CIJournalPrinterCapabilities* This,
            TrustLevel* trustLevel);
    
        END_INTERFACE
    } __x_ABI_CWindows_CDevices_CPointOfService_CIJournalPrinterCapabilitiesVtbl;

    interface __x_ABI_CWindows_CDevices_CPointOfService_CIJournalPrinterCapabilities
    {
        CONST_VTBL struct __x_ABI_CWindows_CDevices_CPointOfService_CIJournalPrinterCapabilitiesVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CDevices_CPointOfService_CIJournalPrinterCapabilities;
#endif /* !defined(____x_ABI_CWindows_CDevices_CPointOfService_CIJournalPrinterCapabilities_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CDevices_CPointOfService_CIJournalPrinterCapabilities2_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CDevices_CPointOfService_CIJournalPrinterCapabilities2_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CDevices_CPointOfService_CIJournalPrinterCapabilities2Vtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CDevices_CPointOfService_CIJournalPrinterCapabilities2* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CDevices_CPointOfService_CIJournalPrinterCapabilities2* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CDevices_CPointOfService_CIJournalPrinterCapabilities2* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CDevices_CPointOfService_CIJournalPrinterCapabilities2* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CDevices_CPointOfService_CIJournalPrinterCapabilities2* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CDevices_CPointOfService_CIJournalPrinterCapabilities2* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_IsReverseVideoSupported)(__x_ABI_CWindows_CDevices_CPointOfService_CIJournalPrinterCapabilities2* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* get_IsStrikethroughSupported)(__x_ABI_CWindows_CDevices_CPointOfService_CIJournalPrinterCapabilities2* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* get_IsSuperscriptSupported)(__x_ABI_CWindows_CDevices_CPointOfService_CIJournalPrinterCapabilities2* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* get_IsSubscriptSupported)(__x_ABI_CWindows_CDevices_CPointOfService_CIJournalPrinterCapabilities2* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* get_IsReversePaperFeedByLineSupported)(__x_ABI_CWindows_CDevices_CPointOfService_CIJournalPrinterCapabilities2* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* get_IsReversePaperFeedByMapModeUnitSupported)(__x_ABI_CWindows_CDevices_CPointOfService_CIJournalPrinterCapabilities2* This,
        boolean* value);

        END_INTERFACE
    } __x_ABI_CWindows_CDevices_CPointOfService_CIJournalPrinterCapabilities2Vtbl;

    interface __x_ABI_CWindows_CDevices_CPointOfService_CIJournalPrinterCapabilities2
    {
        CONST_VTBL struct __x_ABI_CWindows_CDevices_CPointOfService_CIJournalPrinterCapabilities2Vtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CDevices_CPointOfService_CIJournalPrinterCapabilities2;
#endif /* !defined(____x_ABI_CWindows_CDevices_CPointOfService_CIJournalPrinterCapabilities2_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CDevices_CPointOfService_CILineDisplay_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CDevices_CPointOfService_CILineDisplay_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CDevices_CPointOfService_CILineDisplayVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CDevices_CPointOfService_CILineDisplay* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CDevices_CPointOfService_CILineDisplay* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CDevices_CPointOfService_CILineDisplay* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CDevices_CPointOfService_CILineDisplay* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CDevices_CPointOfService_CILineDisplay* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CDevices_CPointOfService_CILineDisplay* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_DeviceId)(__x_ABI_CWindows_CDevices_CPointOfService_CILineDisplay* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* get_Capabilities)(__x_ABI_CWindows_CDevices_CPointOfService_CILineDisplay* This,
        __x_ABI_CWindows_CDevices_CPointOfService_CILineDisplayCapabilities** value);
    HRESULT (STDMETHODCALLTYPE* get_PhysicalDeviceName)(__x_ABI_CWindows_CDevices_CPointOfService_CILineDisplay* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* get_PhysicalDeviceDescription)(__x_ABI_CWindows_CDevices_CPointOfService_CILineDisplay* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* get_DeviceControlDescription)(__x_ABI_CWindows_CDevices_CPointOfService_CILineDisplay* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* get_DeviceControlVersion)(__x_ABI_CWindows_CDevices_CPointOfService_CILineDisplay* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* get_DeviceServiceVersion)(__x_ABI_CWindows_CDevices_CPointOfService_CILineDisplay* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* ClaimAsync)(__x_ABI_CWindows_CDevices_CPointOfService_CILineDisplay* This,
        __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CDevices__CPointOfService__CClaimedLineDisplay** result);

        END_INTERFACE
    } __x_ABI_CWindows_CDevices_CPointOfService_CILineDisplayVtbl;

    interface __x_ABI_CWindows_CDevices_CPointOfService_CILineDisplay
    {
        CONST_VTBL struct __x_ABI_CWindows_CDevices_CPointOfService_CILineDisplayVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CDevices_CPointOfService_CILineDisplay;
#endif /* !defined(____x_ABI_CWindows_CDevices_CPointOfService_CILineDisplay_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CDevices_CPointOfService_CILineDisplay2_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CDevices_CPointOfService_CILineDisplay2_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CDevices_CPointOfService_CILineDisplay2Vtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CDevices_CPointOfService_CILineDisplay2* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CDevices_CPointOfService_CILineDisplay2* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CDevices_CPointOfService_CILineDisplay2* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CDevices_CPointOfService_CILineDisplay2* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CDevices_CPointOfService_CILineDisplay2* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CDevices_CPointOfService_CILineDisplay2* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* CheckPowerStatusAsync)(__x_ABI_CWindows_CDevices_CPointOfService_CILineDisplay2* This,
        __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CDevices__CPointOfService__CLineDisplayPowerStatus** result);

        END_INTERFACE
    } __x_ABI_CWindows_CDevices_CPointOfService_CILineDisplay2Vtbl;

    interface __x_ABI_CWindows_CDevices_CPointOfService_CILineDisplay2
    {
        CONST_VTBL struct __x_ABI_CWindows_CDevices_CPointOfService_CILineDisplay2Vtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CDevices_CPointOfService_CILineDisplay2;
#endif /* !defined(____x_ABI_CWindows_CDevices_CPointOfService_CILineDisplay2_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CDevices_CPointOfService_CILineDisplayAttributes_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CDevices_CPointOfService_CILineDisplayAttributes_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CDevices_CPointOfService_CILineDisplayAttributesVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CDevices_CPointOfService_CILineDisplayAttributes* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CDevices_CPointOfService_CILineDisplayAttributes* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CDevices_CPointOfService_CILineDisplayAttributes* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CDevices_CPointOfService_CILineDisplayAttributes* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CDevices_CPointOfService_CILineDisplayAttributes* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CDevices_CPointOfService_CILineDisplayAttributes* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_IsPowerNotifyEnabled)(__x_ABI_CWindows_CDevices_CPointOfService_CILineDisplayAttributes* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* put_IsPowerNotifyEnabled)(__x_ABI_CWindows_CDevices_CPointOfService_CILineDisplayAttributes* This,
        boolean value);
    HRESULT (STDMETHODCALLTYPE* get_Brightness)(__x_ABI_CWindows_CDevices_CPointOfService_CILineDisplayAttributes* This,
        INT32* value);
    HRESULT (STDMETHODCALLTYPE* put_Brightness)(__x_ABI_CWindows_CDevices_CPointOfService_CILineDisplayAttributes* This,
        INT32 value);
    HRESULT (STDMETHODCALLTYPE* get_BlinkRate)(__x_ABI_CWindows_CDevices_CPointOfService_CILineDisplayAttributes* This,
        struct __x_ABI_CWindows_CFoundation_CTimeSpan* value);
    HRESULT (STDMETHODCALLTYPE* put_BlinkRate)(__x_ABI_CWindows_CDevices_CPointOfService_CILineDisplayAttributes* This,
        struct __x_ABI_CWindows_CFoundation_CTimeSpan value);
    HRESULT (STDMETHODCALLTYPE* get_ScreenSizeInCharacters)(__x_ABI_CWindows_CDevices_CPointOfService_CILineDisplayAttributes* This,
        struct __x_ABI_CWindows_CFoundation_CSize* value);
    HRESULT (STDMETHODCALLTYPE* put_ScreenSizeInCharacters)(__x_ABI_CWindows_CDevices_CPointOfService_CILineDisplayAttributes* This,
        struct __x_ABI_CWindows_CFoundation_CSize value);
    HRESULT (STDMETHODCALLTYPE* get_CharacterSet)(__x_ABI_CWindows_CDevices_CPointOfService_CILineDisplayAttributes* This,
        INT32* value);
    HRESULT (STDMETHODCALLTYPE* put_CharacterSet)(__x_ABI_CWindows_CDevices_CPointOfService_CILineDisplayAttributes* This,
        INT32 value);
    HRESULT (STDMETHODCALLTYPE* get_IsCharacterSetMappingEnabled)(__x_ABI_CWindows_CDevices_CPointOfService_CILineDisplayAttributes* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* put_IsCharacterSetMappingEnabled)(__x_ABI_CWindows_CDevices_CPointOfService_CILineDisplayAttributes* This,
        boolean value);
    HRESULT (STDMETHODCALLTYPE* get_CurrentWindow)(__x_ABI_CWindows_CDevices_CPointOfService_CILineDisplayAttributes* This,
        __x_ABI_CWindows_CDevices_CPointOfService_CILineDisplayWindow** value);
    HRESULT (STDMETHODCALLTYPE* put_CurrentWindow)(__x_ABI_CWindows_CDevices_CPointOfService_CILineDisplayAttributes* This,
        __x_ABI_CWindows_CDevices_CPointOfService_CILineDisplayWindow* value);

        END_INTERFACE
    } __x_ABI_CWindows_CDevices_CPointOfService_CILineDisplayAttributesVtbl;

    interface __x_ABI_CWindows_CDevices_CPointOfService_CILineDisplayAttributes
    {
        CONST_VTBL struct __x_ABI_CWindows_CDevices_CPointOfService_CILineDisplayAttributesVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CDevices_CPointOfService_CILineDisplayAttributes;
#endif /* !defined(____x_ABI_CWindows_CDevices_CPointOfService_CILineDisplayAttributes_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CDevices_CPointOfService_CILineDisplayCapabilities_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CDevices_CPointOfService_CILineDisplayCapabilities_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CDevices_CPointOfService_CILineDisplayCapabilitiesVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CDevices_CPointOfService_CILineDisplayCapabilities* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CDevices_CPointOfService_CILineDisplayCapabilities* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CDevices_CPointOfService_CILineDisplayCapabilities* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CDevices_CPointOfService_CILineDisplayCapabilities* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CDevices_CPointOfService_CILineDisplayCapabilities* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CDevices_CPointOfService_CILineDisplayCapabilities* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_IsStatisticsReportingSupported)(__x_ABI_CWindows_CDevices_CPointOfService_CILineDisplayCapabilities* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* get_IsStatisticsUpdatingSupported)(__x_ABI_CWindows_CDevices_CPointOfService_CILineDisplayCapabilities* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* get_PowerReportingType)(__x_ABI_CWindows_CDevices_CPointOfService_CILineDisplayCapabilities* This,
        enum __x_ABI_CWindows_CDevices_CPointOfService_CUnifiedPosPowerReportingType* value);
    HRESULT (STDMETHODCALLTYPE* get_CanChangeScreenSize)(__x_ABI_CWindows_CDevices_CPointOfService_CILineDisplayCapabilities* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* get_CanDisplayBitmaps)(__x_ABI_CWindows_CDevices_CPointOfService_CILineDisplayCapabilities* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* get_CanReadCharacterAtCursor)(__x_ABI_CWindows_CDevices_CPointOfService_CILineDisplayCapabilities* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* get_CanMapCharacterSets)(__x_ABI_CWindows_CDevices_CPointOfService_CILineDisplayCapabilities* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* get_CanDisplayCustomGlyphs)(__x_ABI_CWindows_CDevices_CPointOfService_CILineDisplayCapabilities* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* get_CanReverse)(__x_ABI_CWindows_CDevices_CPointOfService_CILineDisplayCapabilities* This,
        enum __x_ABI_CWindows_CDevices_CPointOfService_CLineDisplayTextAttributeGranularity* value);
    HRESULT (STDMETHODCALLTYPE* get_CanBlink)(__x_ABI_CWindows_CDevices_CPointOfService_CILineDisplayCapabilities* This,
        enum __x_ABI_CWindows_CDevices_CPointOfService_CLineDisplayTextAttributeGranularity* value);
    HRESULT (STDMETHODCALLTYPE* get_CanChangeBlinkRate)(__x_ABI_CWindows_CDevices_CPointOfService_CILineDisplayCapabilities* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* get_IsBrightnessSupported)(__x_ABI_CWindows_CDevices_CPointOfService_CILineDisplayCapabilities* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* get_IsCursorSupported)(__x_ABI_CWindows_CDevices_CPointOfService_CILineDisplayCapabilities* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* get_IsHorizontalMarqueeSupported)(__x_ABI_CWindows_CDevices_CPointOfService_CILineDisplayCapabilities* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* get_IsVerticalMarqueeSupported)(__x_ABI_CWindows_CDevices_CPointOfService_CILineDisplayCapabilities* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* get_IsInterCharacterWaitSupported)(__x_ABI_CWindows_CDevices_CPointOfService_CILineDisplayCapabilities* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* get_SupportedDescriptors)(__x_ABI_CWindows_CDevices_CPointOfService_CILineDisplayCapabilities* This,
        UINT32* value);
    HRESULT (STDMETHODCALLTYPE* get_SupportedWindows)(__x_ABI_CWindows_CDevices_CPointOfService_CILineDisplayCapabilities* This,
        UINT32* value);

        END_INTERFACE
    } __x_ABI_CWindows_CDevices_CPointOfService_CILineDisplayCapabilitiesVtbl;

    interface __x_ABI_CWindows_CDevices_CPointOfService_CILineDisplayCapabilities
    {
        CONST_VTBL struct __x_ABI_CWindows_CDevices_CPointOfService_CILineDisplayCapabilitiesVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CDevices_CPointOfService_CILineDisplayCapabilities;
#endif /* !defined(____x_ABI_CWindows_CDevices_CPointOfService_CILineDisplayCapabilities_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CDevices_CPointOfService_CILineDisplayCursor_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CDevices_CPointOfService_CILineDisplayCursor_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CDevices_CPointOfService_CILineDisplayCursorVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CDevices_CPointOfService_CILineDisplayCursor* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CDevices_CPointOfService_CILineDisplayCursor* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CDevices_CPointOfService_CILineDisplayCursor* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CDevices_CPointOfService_CILineDisplayCursor* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CDevices_CPointOfService_CILineDisplayCursor* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CDevices_CPointOfService_CILineDisplayCursor* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_CanCustomize)(__x_ABI_CWindows_CDevices_CPointOfService_CILineDisplayCursor* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* get_IsBlinkSupported)(__x_ABI_CWindows_CDevices_CPointOfService_CILineDisplayCursor* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* get_IsBlockSupported)(__x_ABI_CWindows_CDevices_CPointOfService_CILineDisplayCursor* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* get_IsHalfBlockSupported)(__x_ABI_CWindows_CDevices_CPointOfService_CILineDisplayCursor* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* get_IsUnderlineSupported)(__x_ABI_CWindows_CDevices_CPointOfService_CILineDisplayCursor* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* get_IsReverseSupported)(__x_ABI_CWindows_CDevices_CPointOfService_CILineDisplayCursor* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* get_IsOtherSupported)(__x_ABI_CWindows_CDevices_CPointOfService_CILineDisplayCursor* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* GetAttributes)(__x_ABI_CWindows_CDevices_CPointOfService_CILineDisplayCursor* This,
        __x_ABI_CWindows_CDevices_CPointOfService_CILineDisplayCursorAttributes** result);
    HRESULT (STDMETHODCALLTYPE* TryUpdateAttributesAsync)(__x_ABI_CWindows_CDevices_CPointOfService_CILineDisplayCursor* This,
        __x_ABI_CWindows_CDevices_CPointOfService_CILineDisplayCursorAttributes* attributes,
        __x_ABI_C__FIAsyncOperation_1_boolean** operation);

        END_INTERFACE
    } __x_ABI_CWindows_CDevices_CPointOfService_CILineDisplayCursorVtbl;

    interface __x_ABI_CWindows_CDevices_CPointOfService_CILineDisplayCursor
    {
        CONST_VTBL struct __x_ABI_CWindows_CDevices_CPointOfService_CILineDisplayCursorVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CDevices_CPointOfService_CILineDisplayCursor;
#endif /* !defined(____x_ABI_CWindows_CDevices_CPointOfService_CILineDisplayCursor_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CDevices_CPointOfService_CILineDisplayCursorAttributes_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CDevices_CPointOfService_CILineDisplayCursorAttributes_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CDevices_CPointOfService_CILineDisplayCursorAttributesVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CDevices_CPointOfService_CILineDisplayCursorAttributes* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CDevices_CPointOfService_CILineDisplayCursorAttributes* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CDevices_CPointOfService_CILineDisplayCursorAttributes* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CDevices_CPointOfService_CILineDisplayCursorAttributes* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CDevices_CPointOfService_CILineDisplayCursorAttributes* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CDevices_CPointOfService_CILineDisplayCursorAttributes* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_IsBlinkEnabled)(__x_ABI_CWindows_CDevices_CPointOfService_CILineDisplayCursorAttributes* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* put_IsBlinkEnabled)(__x_ABI_CWindows_CDevices_CPointOfService_CILineDisplayCursorAttributes* This,
        boolean value);
    HRESULT (STDMETHODCALLTYPE* get_CursorType)(__x_ABI_CWindows_CDevices_CPointOfService_CILineDisplayCursorAttributes* This,
        enum __x_ABI_CWindows_CDevices_CPointOfService_CLineDisplayCursorType* value);
    HRESULT (STDMETHODCALLTYPE* put_CursorType)(__x_ABI_CWindows_CDevices_CPointOfService_CILineDisplayCursorAttributes* This,
        enum __x_ABI_CWindows_CDevices_CPointOfService_CLineDisplayCursorType value);
    HRESULT (STDMETHODCALLTYPE* get_IsAutoAdvanceEnabled)(__x_ABI_CWindows_CDevices_CPointOfService_CILineDisplayCursorAttributes* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* put_IsAutoAdvanceEnabled)(__x_ABI_CWindows_CDevices_CPointOfService_CILineDisplayCursorAttributes* This,
        boolean value);
    HRESULT (STDMETHODCALLTYPE* get_Position)(__x_ABI_CWindows_CDevices_CPointOfService_CILineDisplayCursorAttributes* This,
        struct __x_ABI_CWindows_CFoundation_CPoint* value);
    HRESULT (STDMETHODCALLTYPE* put_Position)(__x_ABI_CWindows_CDevices_CPointOfService_CILineDisplayCursorAttributes* This,
        struct __x_ABI_CWindows_CFoundation_CPoint value);

        END_INTERFACE
    } __x_ABI_CWindows_CDevices_CPointOfService_CILineDisplayCursorAttributesVtbl;

    interface __x_ABI_CWindows_CDevices_CPointOfService_CILineDisplayCursorAttributes
    {
        CONST_VTBL struct __x_ABI_CWindows_CDevices_CPointOfService_CILineDisplayCursorAttributesVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CDevices_CPointOfService_CILineDisplayCursorAttributes;
#endif /* !defined(____x_ABI_CWindows_CDevices_CPointOfService_CILineDisplayCursorAttributes_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CDevices_CPointOfService_CILineDisplayCustomGlyphs_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CDevices_CPointOfService_CILineDisplayCustomGlyphs_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CDevices_CPointOfService_CILineDisplayCustomGlyphsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CDevices_CPointOfService_CILineDisplayCustomGlyphs* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CDevices_CPointOfService_CILineDisplayCustomGlyphs* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CDevices_CPointOfService_CILineDisplayCustomGlyphs* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CDevices_CPointOfService_CILineDisplayCustomGlyphs* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CDevices_CPointOfService_CILineDisplayCustomGlyphs* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CDevices_CPointOfService_CILineDisplayCustomGlyphs* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_SizeInPixels)(__x_ABI_CWindows_CDevices_CPointOfService_CILineDisplayCustomGlyphs* This,
        struct __x_ABI_CWindows_CFoundation_CSize* value);
    HRESULT (STDMETHODCALLTYPE* get_SupportedGlyphCodes)(__x_ABI_CWindows_CDevices_CPointOfService_CILineDisplayCustomGlyphs* This,
        __x_ABI_C__FIVectorView_1_UINT32** value);
    HRESULT (STDMETHODCALLTYPE* TryRedefineAsync)(__x_ABI_CWindows_CDevices_CPointOfService_CILineDisplayCustomGlyphs* This,
        UINT32 glyphCode,
        __x_ABI_CWindows_CStorage_CStreams_CIBuffer* glyphData,
        __x_ABI_C__FIAsyncOperation_1_boolean** operation);

        END_INTERFACE
    } __x_ABI_CWindows_CDevices_CPointOfService_CILineDisplayCustomGlyphsVtbl;

    interface __x_ABI_CWindows_CDevices_CPointOfService_CILineDisplayCustomGlyphs
    {
        CONST_VTBL struct __x_ABI_CWindows_CDevices_CPointOfService_CILineDisplayCustomGlyphsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CDevices_CPointOfService_CILineDisplayCustomGlyphs;
#endif /* !defined(____x_ABI_CWindows_CDevices_CPointOfService_CILineDisplayCustomGlyphs_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CDevices_CPointOfService_CILineDisplayMarquee_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CDevices_CPointOfService_CILineDisplayMarquee_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CDevices_CPointOfService_CILineDisplayMarqueeVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CDevices_CPointOfService_CILineDisplayMarquee* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CDevices_CPointOfService_CILineDisplayMarquee* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CDevices_CPointOfService_CILineDisplayMarquee* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CDevices_CPointOfService_CILineDisplayMarquee* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CDevices_CPointOfService_CILineDisplayMarquee* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CDevices_CPointOfService_CILineDisplayMarquee* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Format)(__x_ABI_CWindows_CDevices_CPointOfService_CILineDisplayMarquee* This,
        enum __x_ABI_CWindows_CDevices_CPointOfService_CLineDisplayMarqueeFormat* value);
    HRESULT (STDMETHODCALLTYPE* put_Format)(__x_ABI_CWindows_CDevices_CPointOfService_CILineDisplayMarquee* This,
        enum __x_ABI_CWindows_CDevices_CPointOfService_CLineDisplayMarqueeFormat value);
    HRESULT (STDMETHODCALLTYPE* get_RepeatWaitInterval)(__x_ABI_CWindows_CDevices_CPointOfService_CILineDisplayMarquee* This,
        struct __x_ABI_CWindows_CFoundation_CTimeSpan* value);
    HRESULT (STDMETHODCALLTYPE* put_RepeatWaitInterval)(__x_ABI_CWindows_CDevices_CPointOfService_CILineDisplayMarquee* This,
        struct __x_ABI_CWindows_CFoundation_CTimeSpan value);
    HRESULT (STDMETHODCALLTYPE* get_ScrollWaitInterval)(__x_ABI_CWindows_CDevices_CPointOfService_CILineDisplayMarquee* This,
        struct __x_ABI_CWindows_CFoundation_CTimeSpan* value);
    HRESULT (STDMETHODCALLTYPE* put_ScrollWaitInterval)(__x_ABI_CWindows_CDevices_CPointOfService_CILineDisplayMarquee* This,
        struct __x_ABI_CWindows_CFoundation_CTimeSpan value);
    HRESULT (STDMETHODCALLTYPE* TryStartScrollingAsync)(__x_ABI_CWindows_CDevices_CPointOfService_CILineDisplayMarquee* This,
        enum __x_ABI_CWindows_CDevices_CPointOfService_CLineDisplayScrollDirection direction,
        __x_ABI_C__FIAsyncOperation_1_boolean** operation);
    HRESULT (STDMETHODCALLTYPE* TryStopScrollingAsync)(__x_ABI_CWindows_CDevices_CPointOfService_CILineDisplayMarquee* This,
        __x_ABI_C__FIAsyncOperation_1_boolean** operation);

        END_INTERFACE
    } __x_ABI_CWindows_CDevices_CPointOfService_CILineDisplayMarqueeVtbl;

    interface __x_ABI_CWindows_CDevices_CPointOfService_CILineDisplayMarquee
    {
        CONST_VTBL struct __x_ABI_CWindows_CDevices_CPointOfService_CILineDisplayMarqueeVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CDevices_CPointOfService_CILineDisplayMarquee;
#endif /* !defined(____x_ABI_CWindows_CDevices_CPointOfService_CILineDisplayMarquee_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CDevices_CPointOfService_CILineDisplayStatics_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CDevices_CPointOfService_CILineDisplayStatics_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CDevices_CPointOfService_CILineDisplayStaticsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CDevices_CPointOfService_CILineDisplayStatics* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CDevices_CPointOfService_CILineDisplayStatics* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CDevices_CPointOfService_CILineDisplayStatics* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CDevices_CPointOfService_CILineDisplayStatics* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CDevices_CPointOfService_CILineDisplayStatics* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CDevices_CPointOfService_CILineDisplayStatics* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* FromIdAsync)(__x_ABI_CWindows_CDevices_CPointOfService_CILineDisplayStatics* This,
        HSTRING deviceId,
        __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CDevices__CPointOfService__CLineDisplay** operation);
    HRESULT (STDMETHODCALLTYPE* GetDefaultAsync)(__x_ABI_CWindows_CDevices_CPointOfService_CILineDisplayStatics* This,
        __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CDevices__CPointOfService__CLineDisplay** result);
    HRESULT (STDMETHODCALLTYPE* GetDeviceSelector)(__x_ABI_CWindows_CDevices_CPointOfService_CILineDisplayStatics* This,
        HSTRING* result);
    HRESULT (STDMETHODCALLTYPE* GetDeviceSelectorWithConnectionTypes)(__x_ABI_CWindows_CDevices_CPointOfService_CILineDisplayStatics* This,
        enum __x_ABI_CWindows_CDevices_CPointOfService_CPosConnectionTypes connectionTypes,
        HSTRING* value);

        END_INTERFACE
    } __x_ABI_CWindows_CDevices_CPointOfService_CILineDisplayStaticsVtbl;

    interface __x_ABI_CWindows_CDevices_CPointOfService_CILineDisplayStatics
    {
        CONST_VTBL struct __x_ABI_CWindows_CDevices_CPointOfService_CILineDisplayStaticsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CDevices_CPointOfService_CILineDisplayStatics;
#endif /* !defined(____x_ABI_CWindows_CDevices_CPointOfService_CILineDisplayStatics_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CDevices_CPointOfService_CILineDisplayStatics2_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CDevices_CPointOfService_CILineDisplayStatics2_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CDevices_CPointOfService_CILineDisplayStatics2Vtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CDevices_CPointOfService_CILineDisplayStatics2* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CDevices_CPointOfService_CILineDisplayStatics2* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CDevices_CPointOfService_CILineDisplayStatics2* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CDevices_CPointOfService_CILineDisplayStatics2* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CDevices_CPointOfService_CILineDisplayStatics2* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CDevices_CPointOfService_CILineDisplayStatics2* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_StatisticsCategorySelector)(__x_ABI_CWindows_CDevices_CPointOfService_CILineDisplayStatics2* This,
        __x_ABI_CWindows_CDevices_CPointOfService_CILineDisplayStatisticsCategorySelector** value);

        END_INTERFACE
    } __x_ABI_CWindows_CDevices_CPointOfService_CILineDisplayStatics2Vtbl;

    interface __x_ABI_CWindows_CDevices_CPointOfService_CILineDisplayStatics2
    {
        CONST_VTBL struct __x_ABI_CWindows_CDevices_CPointOfService_CILineDisplayStatics2Vtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CDevices_CPointOfService_CILineDisplayStatics2;
#endif /* !defined(____x_ABI_CWindows_CDevices_CPointOfService_CILineDisplayStatics2_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CDevices_CPointOfService_CILineDisplayStatisticsCategorySelector_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CDevices_CPointOfService_CILineDisplayStatisticsCategorySelector_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CDevices_CPointOfService_CILineDisplayStatisticsCategorySelectorVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CDevices_CPointOfService_CILineDisplayStatisticsCategorySelector* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CDevices_CPointOfService_CILineDisplayStatisticsCategorySelector* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CDevices_CPointOfService_CILineDisplayStatisticsCategorySelector* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CDevices_CPointOfService_CILineDisplayStatisticsCategorySelector* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CDevices_CPointOfService_CILineDisplayStatisticsCategorySelector* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CDevices_CPointOfService_CILineDisplayStatisticsCategorySelector* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_AllStatistics)(__x_ABI_CWindows_CDevices_CPointOfService_CILineDisplayStatisticsCategorySelector* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* get_UnifiedPosStatistics)(__x_ABI_CWindows_CDevices_CPointOfService_CILineDisplayStatisticsCategorySelector* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* get_ManufacturerStatistics)(__x_ABI_CWindows_CDevices_CPointOfService_CILineDisplayStatisticsCategorySelector* This,
        HSTRING* value);

        END_INTERFACE
    } __x_ABI_CWindows_CDevices_CPointOfService_CILineDisplayStatisticsCategorySelectorVtbl;

    interface __x_ABI_CWindows_CDevices_CPointOfService_CILineDisplayStatisticsCategorySelector
    {
        CONST_VTBL struct __x_ABI_CWindows_CDevices_CPointOfService_CILineDisplayStatisticsCategorySelectorVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CDevices_CPointOfService_CILineDisplayStatisticsCategorySelector;
#endif /* !defined(____x_ABI_CWindows_CDevices_CPointOfService_CILineDisplayStatisticsCategorySelector_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CDevices_CPointOfService_CILineDisplayStatusUpdatedEventArgs_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CDevices_CPointOfService_CILineDisplayStatusUpdatedEventArgs_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CDevices_CPointOfService_CILineDisplayStatusUpdatedEventArgsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CDevices_CPointOfService_CILineDisplayStatusUpdatedEventArgs* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CDevices_CPointOfService_CILineDisplayStatusUpdatedEventArgs* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CDevices_CPointOfService_CILineDisplayStatusUpdatedEventArgs* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CDevices_CPointOfService_CILineDisplayStatusUpdatedEventArgs* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CDevices_CPointOfService_CILineDisplayStatusUpdatedEventArgs* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CDevices_CPointOfService_CILineDisplayStatusUpdatedEventArgs* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Status)(__x_ABI_CWindows_CDevices_CPointOfService_CILineDisplayStatusUpdatedEventArgs* This,
        enum __x_ABI_CWindows_CDevices_CPointOfService_CLineDisplayPowerStatus* value);

        END_INTERFACE
    } __x_ABI_CWindows_CDevices_CPointOfService_CILineDisplayStatusUpdatedEventArgsVtbl;

    interface __x_ABI_CWindows_CDevices_CPointOfService_CILineDisplayStatusUpdatedEventArgs
    {
        CONST_VTBL struct __x_ABI_CWindows_CDevices_CPointOfService_CILineDisplayStatusUpdatedEventArgsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CDevices_CPointOfService_CILineDisplayStatusUpdatedEventArgs;
#endif /* !defined(____x_ABI_CWindows_CDevices_CPointOfService_CILineDisplayStatusUpdatedEventArgs_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CDevices_CPointOfService_CILineDisplayStoredBitmap_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CDevices_CPointOfService_CILineDisplayStoredBitmap_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CDevices_CPointOfService_CILineDisplayStoredBitmapVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CDevices_CPointOfService_CILineDisplayStoredBitmap* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CDevices_CPointOfService_CILineDisplayStoredBitmap* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CDevices_CPointOfService_CILineDisplayStoredBitmap* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CDevices_CPointOfService_CILineDisplayStoredBitmap* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CDevices_CPointOfService_CILineDisplayStoredBitmap* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CDevices_CPointOfService_CILineDisplayStoredBitmap* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_EscapeSequence)(__x_ABI_CWindows_CDevices_CPointOfService_CILineDisplayStoredBitmap* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* TryDeleteAsync)(__x_ABI_CWindows_CDevices_CPointOfService_CILineDisplayStoredBitmap* This,
        __x_ABI_C__FIAsyncOperation_1_boolean** operation);

        END_INTERFACE
    } __x_ABI_CWindows_CDevices_CPointOfService_CILineDisplayStoredBitmapVtbl;

    interface __x_ABI_CWindows_CDevices_CPointOfService_CILineDisplayStoredBitmap
    {
        CONST_VTBL struct __x_ABI_CWindows_CDevices_CPointOfService_CILineDisplayStoredBitmapVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CDevices_CPointOfService_CILineDisplayStoredBitmap;
#endif /* !defined(____x_ABI_CWindows_CDevices_CPointOfService_CILineDisplayStoredBitmap_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CDevices_CPointOfService_CILineDisplayWindow_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CDevices_CPointOfService_CILineDisplayWindow_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CDevices_CPointOfService_CILineDisplayWindowVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CDevices_CPointOfService_CILineDisplayWindow* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CDevices_CPointOfService_CILineDisplayWindow* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CDevices_CPointOfService_CILineDisplayWindow* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CDevices_CPointOfService_CILineDisplayWindow* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CDevices_CPointOfService_CILineDisplayWindow* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CDevices_CPointOfService_CILineDisplayWindow* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_SizeInCharacters)(__x_ABI_CWindows_CDevices_CPointOfService_CILineDisplayWindow* This,
        struct __x_ABI_CWindows_CFoundation_CSize* value);
    HRESULT (STDMETHODCALLTYPE* get_InterCharacterWaitInterval)(__x_ABI_CWindows_CDevices_CPointOfService_CILineDisplayWindow* This,
        struct __x_ABI_CWindows_CFoundation_CTimeSpan* value);
    HRESULT (STDMETHODCALLTYPE* put_InterCharacterWaitInterval)(__x_ABI_CWindows_CDevices_CPointOfService_CILineDisplayWindow* This,
        struct __x_ABI_CWindows_CFoundation_CTimeSpan value);
    HRESULT (STDMETHODCALLTYPE* TryRefreshAsync)(__x_ABI_CWindows_CDevices_CPointOfService_CILineDisplayWindow* This,
        __x_ABI_C__FIAsyncOperation_1_boolean** operation);
    HRESULT (STDMETHODCALLTYPE* TryDisplayTextAsync)(__x_ABI_CWindows_CDevices_CPointOfService_CILineDisplayWindow* This,
        HSTRING text,
        enum __x_ABI_CWindows_CDevices_CPointOfService_CLineDisplayTextAttribute displayAttribute,
        __x_ABI_C__FIAsyncOperation_1_boolean** operation);
    HRESULT (STDMETHODCALLTYPE* TryDisplayTextAtPositionAsync)(__x_ABI_CWindows_CDevices_CPointOfService_CILineDisplayWindow* This,
        HSTRING text,
        enum __x_ABI_CWindows_CDevices_CPointOfService_CLineDisplayTextAttribute displayAttribute,
        struct __x_ABI_CWindows_CFoundation_CPoint startPosition,
        __x_ABI_C__FIAsyncOperation_1_boolean** operation);
    HRESULT (STDMETHODCALLTYPE* TryDisplayTextNormalAsync)(__x_ABI_CWindows_CDevices_CPointOfService_CILineDisplayWindow* This,
        HSTRING text,
        __x_ABI_C__FIAsyncOperation_1_boolean** operation);
    HRESULT (STDMETHODCALLTYPE* TryScrollTextAsync)(__x_ABI_CWindows_CDevices_CPointOfService_CILineDisplayWindow* This,
        enum __x_ABI_CWindows_CDevices_CPointOfService_CLineDisplayScrollDirection direction,
        UINT32 numberOfColumnsOrRows,
        __x_ABI_C__FIAsyncOperation_1_boolean** operation);
    HRESULT (STDMETHODCALLTYPE* TryClearTextAsync)(__x_ABI_CWindows_CDevices_CPointOfService_CILineDisplayWindow* This,
        __x_ABI_C__FIAsyncOperation_1_boolean** operation);

        END_INTERFACE
    } __x_ABI_CWindows_CDevices_CPointOfService_CILineDisplayWindowVtbl;

    interface __x_ABI_CWindows_CDevices_CPointOfService_CILineDisplayWindow
    {
        CONST_VTBL struct __x_ABI_CWindows_CDevices_CPointOfService_CILineDisplayWindowVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CDevices_CPointOfService_CILineDisplayWindow;
#endif /* !defined(____x_ABI_CWindows_CDevices_CPointOfService_CILineDisplayWindow_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CDevices_CPointOfService_CILineDisplayWindow2_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CDevices_CPointOfService_CILineDisplayWindow2_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CDevices_CPointOfService_CILineDisplayWindow2Vtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CDevices_CPointOfService_CILineDisplayWindow2* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CDevices_CPointOfService_CILineDisplayWindow2* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CDevices_CPointOfService_CILineDisplayWindow2* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CDevices_CPointOfService_CILineDisplayWindow2* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CDevices_CPointOfService_CILineDisplayWindow2* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CDevices_CPointOfService_CILineDisplayWindow2* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Cursor)(__x_ABI_CWindows_CDevices_CPointOfService_CILineDisplayWindow2* This,
        __x_ABI_CWindows_CDevices_CPointOfService_CILineDisplayCursor** value);
    HRESULT (STDMETHODCALLTYPE* get_Marquee)(__x_ABI_CWindows_CDevices_CPointOfService_CILineDisplayWindow2* This,
        __x_ABI_CWindows_CDevices_CPointOfService_CILineDisplayMarquee** value);
    HRESULT (STDMETHODCALLTYPE* ReadCharacterAtCursorAsync)(__x_ABI_CWindows_CDevices_CPointOfService_CILineDisplayWindow2* This,
        __x_ABI_C__FIAsyncOperation_1_UINT32** result);
    HRESULT (STDMETHODCALLTYPE* TryDisplayStoredBitmapAtCursorAsync)(__x_ABI_CWindows_CDevices_CPointOfService_CILineDisplayWindow2* This,
        __x_ABI_CWindows_CDevices_CPointOfService_CILineDisplayStoredBitmap* bitmap,
        __x_ABI_C__FIAsyncOperation_1_boolean** operation);
    HRESULT (STDMETHODCALLTYPE* TryDisplayStorageFileBitmapAtCursorAsync)(__x_ABI_CWindows_CDevices_CPointOfService_CILineDisplayWindow2* This,
        __x_ABI_CWindows_CStorage_CIStorageFile* bitmap,
        __x_ABI_C__FIAsyncOperation_1_boolean** operation);
    HRESULT (STDMETHODCALLTYPE* TryDisplayStorageFileBitmapAtCursorWithAlignmentAsync)(__x_ABI_CWindows_CDevices_CPointOfService_CILineDisplayWindow2* This,
        __x_ABI_CWindows_CStorage_CIStorageFile* bitmap,
        enum __x_ABI_CWindows_CDevices_CPointOfService_CLineDisplayHorizontalAlignment horizontalAlignment,
        enum __x_ABI_CWindows_CDevices_CPointOfService_CLineDisplayVerticalAlignment verticalAlignment,
        __x_ABI_C__FIAsyncOperation_1_boolean** operation);
    HRESULT (STDMETHODCALLTYPE* TryDisplayStorageFileBitmapAtCursorWithAlignmentAndWidthAsync)(__x_ABI_CWindows_CDevices_CPointOfService_CILineDisplayWindow2* This,
        __x_ABI_CWindows_CStorage_CIStorageFile* bitmap,
        enum __x_ABI_CWindows_CDevices_CPointOfService_CLineDisplayHorizontalAlignment horizontalAlignment,
        enum __x_ABI_CWindows_CDevices_CPointOfService_CLineDisplayVerticalAlignment verticalAlignment,
        INT32 widthInPixels,
        __x_ABI_C__FIAsyncOperation_1_boolean** operation);
    HRESULT (STDMETHODCALLTYPE* TryDisplayStorageFileBitmapAtPointAsync)(__x_ABI_CWindows_CDevices_CPointOfService_CILineDisplayWindow2* This,
        __x_ABI_CWindows_CStorage_CIStorageFile* bitmap,
        struct __x_ABI_CWindows_CFoundation_CPoint offsetInPixels,
        __x_ABI_C__FIAsyncOperation_1_boolean** operation);
    HRESULT (STDMETHODCALLTYPE* TryDisplayStorageFileBitmapAtPointWithWidthAsync)(__x_ABI_CWindows_CDevices_CPointOfService_CILineDisplayWindow2* This,
        __x_ABI_CWindows_CStorage_CIStorageFile* bitmap,
        struct __x_ABI_CWindows_CFoundation_CPoint offsetInPixels,
        INT32 widthInPixels,
        __x_ABI_C__FIAsyncOperation_1_boolean** operation);

        END_INTERFACE
    } __x_ABI_CWindows_CDevices_CPointOfService_CILineDisplayWindow2Vtbl;

    interface __x_ABI_CWindows_CDevices_CPointOfService_CILineDisplayWindow2
    {
        CONST_VTBL struct __x_ABI_CWindows_CDevices_CPointOfService_CILineDisplayWindow2Vtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CDevices_CPointOfService_CILineDisplayWindow2;
#endif /* !defined(____x_ABI_CWindows_CDevices_CPointOfService_CILineDisplayWindow2_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CDevices_CPointOfService_CIMagneticStripeReader_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CDevices_CPointOfService_CIMagneticStripeReader_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CDevices_CPointOfService_CIMagneticStripeReaderVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CDevices_CPointOfService_CIMagneticStripeReader* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CDevices_CPointOfService_CIMagneticStripeReader* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CDevices_CPointOfService_CIMagneticStripeReader* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CDevices_CPointOfService_CIMagneticStripeReader* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CDevices_CPointOfService_CIMagneticStripeReader* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CDevices_CPointOfService_CIMagneticStripeReader* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_DeviceId)(__x_ABI_CWindows_CDevices_CPointOfService_CIMagneticStripeReader* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* get_Capabilities)(__x_ABI_CWindows_CDevices_CPointOfService_CIMagneticStripeReader* This,
        __x_ABI_CWindows_CDevices_CPointOfService_CIMagneticStripeReaderCapabilities** value);
    HRESULT (STDMETHODCALLTYPE* get_SupportedCardTypes)(__x_ABI_CWindows_CDevices_CPointOfService_CIMagneticStripeReader* This,
        UINT32* valueLength,
        UINT32** value);
    HRESULT (STDMETHODCALLTYPE* get_DeviceAuthenticationProtocol)(__x_ABI_CWindows_CDevices_CPointOfService_CIMagneticStripeReader* This,
        enum __x_ABI_CWindows_CDevices_CPointOfService_CMagneticStripeReaderAuthenticationProtocol* value);
    HRESULT (STDMETHODCALLTYPE* CheckHealthAsync)(__x_ABI_CWindows_CDevices_CPointOfService_CIMagneticStripeReader* This,
        enum __x_ABI_CWindows_CDevices_CPointOfService_CUnifiedPosHealthCheckLevel level,
        __x_ABI_C__FIAsyncOperation_1_HSTRING** operation);
    HRESULT (STDMETHODCALLTYPE* ClaimReaderAsync)(__x_ABI_CWindows_CDevices_CPointOfService_CIMagneticStripeReader* This,
        __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CDevices__CPointOfService__CClaimedMagneticStripeReader** operation);
    HRESULT (STDMETHODCALLTYPE* RetrieveStatisticsAsync)(__x_ABI_CWindows_CDevices_CPointOfService_CIMagneticStripeReader* This,
        __x_ABI_C__FIIterable_1_HSTRING* statisticsCategories,
        __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CStorage__CStreams__CIBuffer** operation);
    HRESULT (STDMETHODCALLTYPE* GetErrorReportingType)(__x_ABI_CWindows_CDevices_CPointOfService_CIMagneticStripeReader* This,
        enum __x_ABI_CWindows_CDevices_CPointOfService_CMagneticStripeReaderErrorReportingType* value);
    HRESULT (STDMETHODCALLTYPE* add_StatusUpdated)(__x_ABI_CWindows_CDevices_CPointOfService_CIMagneticStripeReader* This,
        __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CDevices__CPointOfService__CMagneticStripeReader___x_ABI_CWindows__CDevices__CPointOfService__CMagneticStripeReaderStatusUpdatedEventArgs* handler,
        EventRegistrationToken* token);
    HRESULT (STDMETHODCALLTYPE* remove_StatusUpdated)(__x_ABI_CWindows_CDevices_CPointOfService_CIMagneticStripeReader* This,
        EventRegistrationToken token);

        END_INTERFACE
    } __x_ABI_CWindows_CDevices_CPointOfService_CIMagneticStripeReaderVtbl;

    interface __x_ABI_CWindows_CDevices_CPointOfService_CIMagneticStripeReader
    {
        CONST_VTBL struct __x_ABI_CWindows_CDevices_CPointOfService_CIMagneticStripeReaderVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CDevices_CPointOfService_CIMagneticStripeReader;
#endif /* !defined(____x_ABI_CWindows_CDevices_CPointOfService_CIMagneticStripeReader_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CDevices_CPointOfService_CIMagneticStripeReaderAamvaCardDataReceivedEventArgs_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CDevices_CPointOfService_CIMagneticStripeReaderAamvaCardDataReceivedEventArgs_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CDevices_CPointOfService_CIMagneticStripeReaderAamvaCardDataReceivedEventArgsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CDevices_CPointOfService_CIMagneticStripeReaderAamvaCardDataReceivedEventArgs* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CDevices_CPointOfService_CIMagneticStripeReaderAamvaCardDataReceivedEventArgs* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CDevices_CPointOfService_CIMagneticStripeReaderAamvaCardDataReceivedEventArgs* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CDevices_CPointOfService_CIMagneticStripeReaderAamvaCardDataReceivedEventArgs* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CDevices_CPointOfService_CIMagneticStripeReaderAamvaCardDataReceivedEventArgs* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CDevices_CPointOfService_CIMagneticStripeReaderAamvaCardDataReceivedEventArgs* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Report)(__x_ABI_CWindows_CDevices_CPointOfService_CIMagneticStripeReaderAamvaCardDataReceivedEventArgs* This,
        __x_ABI_CWindows_CDevices_CPointOfService_CIMagneticStripeReaderReport** value);
    HRESULT (STDMETHODCALLTYPE* get_LicenseNumber)(__x_ABI_CWindows_CDevices_CPointOfService_CIMagneticStripeReaderAamvaCardDataReceivedEventArgs* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* get_ExpirationDate)(__x_ABI_CWindows_CDevices_CPointOfService_CIMagneticStripeReaderAamvaCardDataReceivedEventArgs* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* get_Restrictions)(__x_ABI_CWindows_CDevices_CPointOfService_CIMagneticStripeReaderAamvaCardDataReceivedEventArgs* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* get_Class)(__x_ABI_CWindows_CDevices_CPointOfService_CIMagneticStripeReaderAamvaCardDataReceivedEventArgs* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* get_Endorsements)(__x_ABI_CWindows_CDevices_CPointOfService_CIMagneticStripeReaderAamvaCardDataReceivedEventArgs* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* get_BirthDate)(__x_ABI_CWindows_CDevices_CPointOfService_CIMagneticStripeReaderAamvaCardDataReceivedEventArgs* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* get_FirstName)(__x_ABI_CWindows_CDevices_CPointOfService_CIMagneticStripeReaderAamvaCardDataReceivedEventArgs* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* get_Surname)(__x_ABI_CWindows_CDevices_CPointOfService_CIMagneticStripeReaderAamvaCardDataReceivedEventArgs* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* get_Suffix)(__x_ABI_CWindows_CDevices_CPointOfService_CIMagneticStripeReaderAamvaCardDataReceivedEventArgs* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* get_Gender)(__x_ABI_CWindows_CDevices_CPointOfService_CIMagneticStripeReaderAamvaCardDataReceivedEventArgs* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* get_HairColor)(__x_ABI_CWindows_CDevices_CPointOfService_CIMagneticStripeReaderAamvaCardDataReceivedEventArgs* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* get_EyeColor)(__x_ABI_CWindows_CDevices_CPointOfService_CIMagneticStripeReaderAamvaCardDataReceivedEventArgs* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* get_Height)(__x_ABI_CWindows_CDevices_CPointOfService_CIMagneticStripeReaderAamvaCardDataReceivedEventArgs* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* get_Weight)(__x_ABI_CWindows_CDevices_CPointOfService_CIMagneticStripeReaderAamvaCardDataReceivedEventArgs* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* get_Address)(__x_ABI_CWindows_CDevices_CPointOfService_CIMagneticStripeReaderAamvaCardDataReceivedEventArgs* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* get_City)(__x_ABI_CWindows_CDevices_CPointOfService_CIMagneticStripeReaderAamvaCardDataReceivedEventArgs* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* get_State)(__x_ABI_CWindows_CDevices_CPointOfService_CIMagneticStripeReaderAamvaCardDataReceivedEventArgs* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* get_PostalCode)(__x_ABI_CWindows_CDevices_CPointOfService_CIMagneticStripeReaderAamvaCardDataReceivedEventArgs* This,
        HSTRING* value);

        END_INTERFACE
    } __x_ABI_CWindows_CDevices_CPointOfService_CIMagneticStripeReaderAamvaCardDataReceivedEventArgsVtbl;

    interface __x_ABI_CWindows_CDevices_CPointOfService_CIMagneticStripeReaderAamvaCardDataReceivedEventArgs
    {
        CONST_VTBL struct __x_ABI_CWindows_CDevices_CPointOfService_CIMagneticStripeReaderAamvaCardDataReceivedEventArgsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CDevices_CPointOfService_CIMagneticStripeReaderAamvaCardDataReceivedEventArgs;
#endif /* !defined(____x_ABI_CWindows_CDevices_CPointOfService_CIMagneticStripeReaderAamvaCardDataReceivedEventArgs_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CDevices_CPointOfService_CIMagneticStripeReaderBankCardDataReceivedEventArgs_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CDevices_CPointOfService_CIMagneticStripeReaderBankCardDataReceivedEventArgs_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CDevices_CPointOfService_CIMagneticStripeReaderBankCardDataReceivedEventArgsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CDevices_CPointOfService_CIMagneticStripeReaderBankCardDataReceivedEventArgs* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CDevices_CPointOfService_CIMagneticStripeReaderBankCardDataReceivedEventArgs* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CDevices_CPointOfService_CIMagneticStripeReaderBankCardDataReceivedEventArgs* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CDevices_CPointOfService_CIMagneticStripeReaderBankCardDataReceivedEventArgs* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CDevices_CPointOfService_CIMagneticStripeReaderBankCardDataReceivedEventArgs* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CDevices_CPointOfService_CIMagneticStripeReaderBankCardDataReceivedEventArgs* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Report)(__x_ABI_CWindows_CDevices_CPointOfService_CIMagneticStripeReaderBankCardDataReceivedEventArgs* This,
        __x_ABI_CWindows_CDevices_CPointOfService_CIMagneticStripeReaderReport** value);
    HRESULT (STDMETHODCALLTYPE* get_AccountNumber)(__x_ABI_CWindows_CDevices_CPointOfService_CIMagneticStripeReaderBankCardDataReceivedEventArgs* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* get_ExpirationDate)(__x_ABI_CWindows_CDevices_CPointOfService_CIMagneticStripeReaderBankCardDataReceivedEventArgs* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* get_ServiceCode)(__x_ABI_CWindows_CDevices_CPointOfService_CIMagneticStripeReaderBankCardDataReceivedEventArgs* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* get_Title)(__x_ABI_CWindows_CDevices_CPointOfService_CIMagneticStripeReaderBankCardDataReceivedEventArgs* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* get_FirstName)(__x_ABI_CWindows_CDevices_CPointOfService_CIMagneticStripeReaderBankCardDataReceivedEventArgs* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* get_MiddleInitial)(__x_ABI_CWindows_CDevices_CPointOfService_CIMagneticStripeReaderBankCardDataReceivedEventArgs* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* get_Surname)(__x_ABI_CWindows_CDevices_CPointOfService_CIMagneticStripeReaderBankCardDataReceivedEventArgs* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* get_Suffix)(__x_ABI_CWindows_CDevices_CPointOfService_CIMagneticStripeReaderBankCardDataReceivedEventArgs* This,
        HSTRING* value);

        END_INTERFACE
    } __x_ABI_CWindows_CDevices_CPointOfService_CIMagneticStripeReaderBankCardDataReceivedEventArgsVtbl;

    interface __x_ABI_CWindows_CDevices_CPointOfService_CIMagneticStripeReaderBankCardDataReceivedEventArgs
    {
        CONST_VTBL struct __x_ABI_CWindows_CDevices_CPointOfService_CIMagneticStripeReaderBankCardDataReceivedEventArgsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CDevices_CPointOfService_CIMagneticStripeReaderBankCardDataReceivedEventArgs;
#endif /* !defined(____x_ABI_CWindows_CDevices_CPointOfService_CIMagneticStripeReaderBankCardDataReceivedEventArgs_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CDevices_CPointOfService_CIMagneticStripeReaderCapabilities_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CDevices_CPointOfService_CIMagneticStripeReaderCapabilities_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CDevices_CPointOfService_CIMagneticStripeReaderCapabilitiesVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CDevices_CPointOfService_CIMagneticStripeReaderCapabilities* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CDevices_CPointOfService_CIMagneticStripeReaderCapabilities* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CDevices_CPointOfService_CIMagneticStripeReaderCapabilities* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CDevices_CPointOfService_CIMagneticStripeReaderCapabilities* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CDevices_CPointOfService_CIMagneticStripeReaderCapabilities* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CDevices_CPointOfService_CIMagneticStripeReaderCapabilities* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_CardAuthentication)(__x_ABI_CWindows_CDevices_CPointOfService_CIMagneticStripeReaderCapabilities* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* get_SupportedEncryptionAlgorithms)(__x_ABI_CWindows_CDevices_CPointOfService_CIMagneticStripeReaderCapabilities* This,
        UINT32* value);
    HRESULT (STDMETHODCALLTYPE* get_AuthenticationLevel)(__x_ABI_CWindows_CDevices_CPointOfService_CIMagneticStripeReaderCapabilities* This,
        enum __x_ABI_CWindows_CDevices_CPointOfService_CMagneticStripeReaderAuthenticationLevel* value);
    HRESULT (STDMETHODCALLTYPE* get_IsIsoSupported)(__x_ABI_CWindows_CDevices_CPointOfService_CIMagneticStripeReaderCapabilities* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* get_IsJisOneSupported)(__x_ABI_CWindows_CDevices_CPointOfService_CIMagneticStripeReaderCapabilities* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* get_IsJisTwoSupported)(__x_ABI_CWindows_CDevices_CPointOfService_CIMagneticStripeReaderCapabilities* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* get_PowerReportingType)(__x_ABI_CWindows_CDevices_CPointOfService_CIMagneticStripeReaderCapabilities* This,
        enum __x_ABI_CWindows_CDevices_CPointOfService_CUnifiedPosPowerReportingType* value);
    HRESULT (STDMETHODCALLTYPE* get_IsStatisticsReportingSupported)(__x_ABI_CWindows_CDevices_CPointOfService_CIMagneticStripeReaderCapabilities* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* get_IsStatisticsUpdatingSupported)(__x_ABI_CWindows_CDevices_CPointOfService_CIMagneticStripeReaderCapabilities* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* get_IsTrackDataMaskingSupported)(__x_ABI_CWindows_CDevices_CPointOfService_CIMagneticStripeReaderCapabilities* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* get_IsTransmitSentinelsSupported)(__x_ABI_CWindows_CDevices_CPointOfService_CIMagneticStripeReaderCapabilities* This,
        boolean* value);

        END_INTERFACE
    } __x_ABI_CWindows_CDevices_CPointOfService_CIMagneticStripeReaderCapabilitiesVtbl;

    interface __x_ABI_CWindows_CDevices_CPointOfService_CIMagneticStripeReaderCapabilities
    {
        CONST_VTBL struct __x_ABI_CWindows_CDevices_CPointOfService_CIMagneticStripeReaderCapabilitiesVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CDevices_CPointOfService_CIMagneticStripeReaderCapabilities;
#endif /* !defined(____x_ABI_CWindows_CDevices_CPointOfService_CIMagneticStripeReaderCapabilities_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CDevices_CPointOfService_CIMagneticStripeReaderCardTypesStatics_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CDevices_CPointOfService_CIMagneticStripeReaderCardTypesStatics_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CDevices_CPointOfService_CIMagneticStripeReaderCardTypesStaticsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CDevices_CPointOfService_CIMagneticStripeReaderCardTypesStatics* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CDevices_CPointOfService_CIMagneticStripeReaderCardTypesStatics* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CDevices_CPointOfService_CIMagneticStripeReaderCardTypesStatics* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CDevices_CPointOfService_CIMagneticStripeReaderCardTypesStatics* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CDevices_CPointOfService_CIMagneticStripeReaderCardTypesStatics* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CDevices_CPointOfService_CIMagneticStripeReaderCardTypesStatics* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Unknown)(__x_ABI_CWindows_CDevices_CPointOfService_CIMagneticStripeReaderCardTypesStatics* This,
        UINT32* value);
    HRESULT (STDMETHODCALLTYPE* get_Bank)(__x_ABI_CWindows_CDevices_CPointOfService_CIMagneticStripeReaderCardTypesStatics* This,
        UINT32* value);
    HRESULT (STDMETHODCALLTYPE* get_Aamva)(__x_ABI_CWindows_CDevices_CPointOfService_CIMagneticStripeReaderCardTypesStatics* This,
        UINT32* value);
    HRESULT (STDMETHODCALLTYPE* get_ExtendedBase)(__x_ABI_CWindows_CDevices_CPointOfService_CIMagneticStripeReaderCardTypesStatics* This,
        UINT32* value);

        END_INTERFACE
    } __x_ABI_CWindows_CDevices_CPointOfService_CIMagneticStripeReaderCardTypesStaticsVtbl;

    interface __x_ABI_CWindows_CDevices_CPointOfService_CIMagneticStripeReaderCardTypesStatics
    {
        CONST_VTBL struct __x_ABI_CWindows_CDevices_CPointOfService_CIMagneticStripeReaderCardTypesStaticsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CDevices_CPointOfService_CIMagneticStripeReaderCardTypesStatics;
#endif /* !defined(____x_ABI_CWindows_CDevices_CPointOfService_CIMagneticStripeReaderCardTypesStatics_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CDevices_CPointOfService_CIMagneticStripeReaderEncryptionAlgorithmsStatics_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CDevices_CPointOfService_CIMagneticStripeReaderEncryptionAlgorithmsStatics_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CDevices_CPointOfService_CIMagneticStripeReaderEncryptionAlgorithmsStaticsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CDevices_CPointOfService_CIMagneticStripeReaderEncryptionAlgorithmsStatics* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CDevices_CPointOfService_CIMagneticStripeReaderEncryptionAlgorithmsStatics* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CDevices_CPointOfService_CIMagneticStripeReaderEncryptionAlgorithmsStatics* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CDevices_CPointOfService_CIMagneticStripeReaderEncryptionAlgorithmsStatics* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CDevices_CPointOfService_CIMagneticStripeReaderEncryptionAlgorithmsStatics* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CDevices_CPointOfService_CIMagneticStripeReaderEncryptionAlgorithmsStatics* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_None)(__x_ABI_CWindows_CDevices_CPointOfService_CIMagneticStripeReaderEncryptionAlgorithmsStatics* This,
        UINT32* value);
    HRESULT (STDMETHODCALLTYPE* get_TripleDesDukpt)(__x_ABI_CWindows_CDevices_CPointOfService_CIMagneticStripeReaderEncryptionAlgorithmsStatics* This,
        UINT32* value);
    HRESULT (STDMETHODCALLTYPE* get_ExtendedBase)(__x_ABI_CWindows_CDevices_CPointOfService_CIMagneticStripeReaderEncryptionAlgorithmsStatics* This,
        UINT32* value);

        END_INTERFACE
    } __x_ABI_CWindows_CDevices_CPointOfService_CIMagneticStripeReaderEncryptionAlgorithmsStaticsVtbl;

    interface __x_ABI_CWindows_CDevices_CPointOfService_CIMagneticStripeReaderEncryptionAlgorithmsStatics
    {
        CONST_VTBL struct __x_ABI_CWindows_CDevices_CPointOfService_CIMagneticStripeReaderEncryptionAlgorithmsStaticsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CDevices_CPointOfService_CIMagneticStripeReaderEncryptionAlgorithmsStatics;
#endif /* !defined(____x_ABI_CWindows_CDevices_CPointOfService_CIMagneticStripeReaderEncryptionAlgorithmsStatics_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CDevices_CPointOfService_CIMagneticStripeReaderErrorOccurredEventArgs_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CDevices_CPointOfService_CIMagneticStripeReaderErrorOccurredEventArgs_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CDevices_CPointOfService_CIMagneticStripeReaderErrorOccurredEventArgsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CDevices_CPointOfService_CIMagneticStripeReaderErrorOccurredEventArgs* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CDevices_CPointOfService_CIMagneticStripeReaderErrorOccurredEventArgs* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CDevices_CPointOfService_CIMagneticStripeReaderErrorOccurredEventArgs* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CDevices_CPointOfService_CIMagneticStripeReaderErrorOccurredEventArgs* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CDevices_CPointOfService_CIMagneticStripeReaderErrorOccurredEventArgs* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CDevices_CPointOfService_CIMagneticStripeReaderErrorOccurredEventArgs* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Track1Status)(__x_ABI_CWindows_CDevices_CPointOfService_CIMagneticStripeReaderErrorOccurredEventArgs* This,
        enum __x_ABI_CWindows_CDevices_CPointOfService_CMagneticStripeReaderTrackErrorType* value);
    HRESULT (STDMETHODCALLTYPE* get_Track2Status)(__x_ABI_CWindows_CDevices_CPointOfService_CIMagneticStripeReaderErrorOccurredEventArgs* This,
        enum __x_ABI_CWindows_CDevices_CPointOfService_CMagneticStripeReaderTrackErrorType* value);
    HRESULT (STDMETHODCALLTYPE* get_Track3Status)(__x_ABI_CWindows_CDevices_CPointOfService_CIMagneticStripeReaderErrorOccurredEventArgs* This,
        enum __x_ABI_CWindows_CDevices_CPointOfService_CMagneticStripeReaderTrackErrorType* value);
    HRESULT (STDMETHODCALLTYPE* get_Track4Status)(__x_ABI_CWindows_CDevices_CPointOfService_CIMagneticStripeReaderErrorOccurredEventArgs* This,
        enum __x_ABI_CWindows_CDevices_CPointOfService_CMagneticStripeReaderTrackErrorType* value);
    HRESULT (STDMETHODCALLTYPE* get_ErrorData)(__x_ABI_CWindows_CDevices_CPointOfService_CIMagneticStripeReaderErrorOccurredEventArgs* This,
        __x_ABI_CWindows_CDevices_CPointOfService_CIUnifiedPosErrorData** value);
    HRESULT (STDMETHODCALLTYPE* get_PartialInputData)(__x_ABI_CWindows_CDevices_CPointOfService_CIMagneticStripeReaderErrorOccurredEventArgs* This,
        __x_ABI_CWindows_CDevices_CPointOfService_CIMagneticStripeReaderReport** value);

        END_INTERFACE
    } __x_ABI_CWindows_CDevices_CPointOfService_CIMagneticStripeReaderErrorOccurredEventArgsVtbl;

    interface __x_ABI_CWindows_CDevices_CPointOfService_CIMagneticStripeReaderErrorOccurredEventArgs
    {
        CONST_VTBL struct __x_ABI_CWindows_CDevices_CPointOfService_CIMagneticStripeReaderErrorOccurredEventArgsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CDevices_CPointOfService_CIMagneticStripeReaderErrorOccurredEventArgs;
#endif /* !defined(____x_ABI_CWindows_CDevices_CPointOfService_CIMagneticStripeReaderErrorOccurredEventArgs_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CDevices_CPointOfService_CIMagneticStripeReaderReport_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CDevices_CPointOfService_CIMagneticStripeReaderReport_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CDevices_CPointOfService_CIMagneticStripeReaderReportVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CDevices_CPointOfService_CIMagneticStripeReaderReport* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CDevices_CPointOfService_CIMagneticStripeReaderReport* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CDevices_CPointOfService_CIMagneticStripeReaderReport* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CDevices_CPointOfService_CIMagneticStripeReaderReport* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CDevices_CPointOfService_CIMagneticStripeReaderReport* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CDevices_CPointOfService_CIMagneticStripeReaderReport* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_CardType)(__x_ABI_CWindows_CDevices_CPointOfService_CIMagneticStripeReaderReport* This,
        UINT32* value);
    HRESULT (STDMETHODCALLTYPE* get_Track1)(__x_ABI_CWindows_CDevices_CPointOfService_CIMagneticStripeReaderReport* This,
        __x_ABI_CWindows_CDevices_CPointOfService_CIMagneticStripeReaderTrackData** value);
    HRESULT (STDMETHODCALLTYPE* get_Track2)(__x_ABI_CWindows_CDevices_CPointOfService_CIMagneticStripeReaderReport* This,
        __x_ABI_CWindows_CDevices_CPointOfService_CIMagneticStripeReaderTrackData** value);
    HRESULT (STDMETHODCALLTYPE* get_Track3)(__x_ABI_CWindows_CDevices_CPointOfService_CIMagneticStripeReaderReport* This,
        __x_ABI_CWindows_CDevices_CPointOfService_CIMagneticStripeReaderTrackData** value);
    HRESULT (STDMETHODCALLTYPE* get_Track4)(__x_ABI_CWindows_CDevices_CPointOfService_CIMagneticStripeReaderReport* This,
        __x_ABI_CWindows_CDevices_CPointOfService_CIMagneticStripeReaderTrackData** value);
    HRESULT (STDMETHODCALLTYPE* get_Properties)(__x_ABI_CWindows_CDevices_CPointOfService_CIMagneticStripeReaderReport* This,
        __x_ABI_C__FIMapView_2_HSTRING_HSTRING** value);
    HRESULT (STDMETHODCALLTYPE* get_CardAuthenticationData)(__x_ABI_CWindows_CDevices_CPointOfService_CIMagneticStripeReaderReport* This,
        __x_ABI_CWindows_CStorage_CStreams_CIBuffer** value);
    HRESULT (STDMETHODCALLTYPE* get_CardAuthenticationDataLength)(__x_ABI_CWindows_CDevices_CPointOfService_CIMagneticStripeReaderReport* This,
        UINT32* value);
    HRESULT (STDMETHODCALLTYPE* get_AdditionalSecurityInformation)(__x_ABI_CWindows_CDevices_CPointOfService_CIMagneticStripeReaderReport* This,
        __x_ABI_CWindows_CStorage_CStreams_CIBuffer** value);

        END_INTERFACE
    } __x_ABI_CWindows_CDevices_CPointOfService_CIMagneticStripeReaderReportVtbl;

    interface __x_ABI_CWindows_CDevices_CPointOfService_CIMagneticStripeReaderReport
    {
        CONST_VTBL struct __x_ABI_CWindows_CDevices_CPointOfService_CIMagneticStripeReaderReportVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CDevices_CPointOfService_CIMagneticStripeReaderReport;
#endif /* !defined(____x_ABI_CWindows_CDevices_CPointOfService_CIMagneticStripeReaderReport_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CDevices_CPointOfService_CIMagneticStripeReaderStatics_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CDevices_CPointOfService_CIMagneticStripeReaderStatics_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CDevices_CPointOfService_CIMagneticStripeReaderStaticsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CDevices_CPointOfService_CIMagneticStripeReaderStatics* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CDevices_CPointOfService_CIMagneticStripeReaderStatics* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CDevices_CPointOfService_CIMagneticStripeReaderStatics* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CDevices_CPointOfService_CIMagneticStripeReaderStatics* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CDevices_CPointOfService_CIMagneticStripeReaderStatics* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CDevices_CPointOfService_CIMagneticStripeReaderStatics* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* GetDefaultAsync)(__x_ABI_CWindows_CDevices_CPointOfService_CIMagneticStripeReaderStatics* This,
        __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CDevices__CPointOfService__CMagneticStripeReader** result);
    HRESULT (STDMETHODCALLTYPE* FromIdAsync)(__x_ABI_CWindows_CDevices_CPointOfService_CIMagneticStripeReaderStatics* This,
        HSTRING deviceId,
        __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CDevices__CPointOfService__CMagneticStripeReader** result);
    HRESULT (STDMETHODCALLTYPE* GetDeviceSelector)(__x_ABI_CWindows_CDevices_CPointOfService_CIMagneticStripeReaderStatics* This,
        HSTRING* value);

        END_INTERFACE
    } __x_ABI_CWindows_CDevices_CPointOfService_CIMagneticStripeReaderStaticsVtbl;

    interface __x_ABI_CWindows_CDevices_CPointOfService_CIMagneticStripeReaderStatics
    {
        CONST_VTBL struct __x_ABI_CWindows_CDevices_CPointOfService_CIMagneticStripeReaderStaticsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CDevices_CPointOfService_CIMagneticStripeReaderStatics;
#endif /* !defined(____x_ABI_CWindows_CDevices_CPointOfService_CIMagneticStripeReaderStatics_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CDevices_CPointOfService_CIMagneticStripeReaderStatics2_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CDevices_CPointOfService_CIMagneticStripeReaderStatics2_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CDevices_CPointOfService_CIMagneticStripeReaderStatics2Vtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CDevices_CPointOfService_CIMagneticStripeReaderStatics2* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CDevices_CPointOfService_CIMagneticStripeReaderStatics2* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CDevices_CPointOfService_CIMagneticStripeReaderStatics2* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CDevices_CPointOfService_CIMagneticStripeReaderStatics2* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CDevices_CPointOfService_CIMagneticStripeReaderStatics2* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CDevices_CPointOfService_CIMagneticStripeReaderStatics2* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* GetDeviceSelectorWithConnectionTypes)(__x_ABI_CWindows_CDevices_CPointOfService_CIMagneticStripeReaderStatics2* This,
        enum __x_ABI_CWindows_CDevices_CPointOfService_CPosConnectionTypes connectionTypes,
        HSTRING* value);

        END_INTERFACE
    } __x_ABI_CWindows_CDevices_CPointOfService_CIMagneticStripeReaderStatics2Vtbl;

    interface __x_ABI_CWindows_CDevices_CPointOfService_CIMagneticStripeReaderStatics2
    {
        CONST_VTBL struct __x_ABI_CWindows_CDevices_CPointOfService_CIMagneticStripeReaderStatics2Vtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CDevices_CPointOfService_CIMagneticStripeReaderStatics2;
#endif /* !defined(____x_ABI_CWindows_CDevices_CPointOfService_CIMagneticStripeReaderStatics2_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CDevices_CPointOfService_CIMagneticStripeReaderStatusUpdatedEventArgs_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CDevices_CPointOfService_CIMagneticStripeReaderStatusUpdatedEventArgs_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CDevices_CPointOfService_CIMagneticStripeReaderStatusUpdatedEventArgsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CDevices_CPointOfService_CIMagneticStripeReaderStatusUpdatedEventArgs* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CDevices_CPointOfService_CIMagneticStripeReaderStatusUpdatedEventArgs* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CDevices_CPointOfService_CIMagneticStripeReaderStatusUpdatedEventArgs* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CDevices_CPointOfService_CIMagneticStripeReaderStatusUpdatedEventArgs* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CDevices_CPointOfService_CIMagneticStripeReaderStatusUpdatedEventArgs* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CDevices_CPointOfService_CIMagneticStripeReaderStatusUpdatedEventArgs* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Status)(__x_ABI_CWindows_CDevices_CPointOfService_CIMagneticStripeReaderStatusUpdatedEventArgs* This,
        enum __x_ABI_CWindows_CDevices_CPointOfService_CMagneticStripeReaderStatus* value);
    HRESULT (STDMETHODCALLTYPE* get_ExtendedStatus)(__x_ABI_CWindows_CDevices_CPointOfService_CIMagneticStripeReaderStatusUpdatedEventArgs* This,
        UINT32* value);

        END_INTERFACE
    } __x_ABI_CWindows_CDevices_CPointOfService_CIMagneticStripeReaderStatusUpdatedEventArgsVtbl;

    interface __x_ABI_CWindows_CDevices_CPointOfService_CIMagneticStripeReaderStatusUpdatedEventArgs
    {
        CONST_VTBL struct __x_ABI_CWindows_CDevices_CPointOfService_CIMagneticStripeReaderStatusUpdatedEventArgsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CDevices_CPointOfService_CIMagneticStripeReaderStatusUpdatedEventArgs;
#endif /* !defined(____x_ABI_CWindows_CDevices_CPointOfService_CIMagneticStripeReaderStatusUpdatedEventArgs_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CDevices_CPointOfService_CIMagneticStripeReaderTrackData_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CDevices_CPointOfService_CIMagneticStripeReaderTrackData_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CDevices_CPointOfService_CIMagneticStripeReaderTrackDataVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CDevices_CPointOfService_CIMagneticStripeReaderTrackData* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CDevices_CPointOfService_CIMagneticStripeReaderTrackData* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CDevices_CPointOfService_CIMagneticStripeReaderTrackData* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CDevices_CPointOfService_CIMagneticStripeReaderTrackData* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CDevices_CPointOfService_CIMagneticStripeReaderTrackData* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CDevices_CPointOfService_CIMagneticStripeReaderTrackData* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Data)(__x_ABI_CWindows_CDevices_CPointOfService_CIMagneticStripeReaderTrackData* This,
        __x_ABI_CWindows_CStorage_CStreams_CIBuffer** value);
    HRESULT (STDMETHODCALLTYPE* get_DiscretionaryData)(__x_ABI_CWindows_CDevices_CPointOfService_CIMagneticStripeReaderTrackData* This,
        __x_ABI_CWindows_CStorage_CStreams_CIBuffer** value);
    HRESULT (STDMETHODCALLTYPE* get_EncryptedData)(__x_ABI_CWindows_CDevices_CPointOfService_CIMagneticStripeReaderTrackData* This,
        __x_ABI_CWindows_CStorage_CStreams_CIBuffer** value);

        END_INTERFACE
    } __x_ABI_CWindows_CDevices_CPointOfService_CIMagneticStripeReaderTrackDataVtbl;

    interface __x_ABI_CWindows_CDevices_CPointOfService_CIMagneticStripeReaderTrackData
    {
        CONST_VTBL struct __x_ABI_CWindows_CDevices_CPointOfService_CIMagneticStripeReaderTrackDataVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CDevices_CPointOfService_CIMagneticStripeReaderTrackData;
#endif /* !defined(____x_ABI_CWindows_CDevices_CPointOfService_CIMagneticStripeReaderTrackData_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CDevices_CPointOfService_CIMagneticStripeReaderVendorSpecificCardDataReceivedEventArgs_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CDevices_CPointOfService_CIMagneticStripeReaderVendorSpecificCardDataReceivedEventArgs_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CDevices_CPointOfService_CIMagneticStripeReaderVendorSpecificCardDataReceivedEventArgsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CDevices_CPointOfService_CIMagneticStripeReaderVendorSpecificCardDataReceivedEventArgs* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CDevices_CPointOfService_CIMagneticStripeReaderVendorSpecificCardDataReceivedEventArgs* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CDevices_CPointOfService_CIMagneticStripeReaderVendorSpecificCardDataReceivedEventArgs* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CDevices_CPointOfService_CIMagneticStripeReaderVendorSpecificCardDataReceivedEventArgs* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CDevices_CPointOfService_CIMagneticStripeReaderVendorSpecificCardDataReceivedEventArgs* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CDevices_CPointOfService_CIMagneticStripeReaderVendorSpecificCardDataReceivedEventArgs* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Report)(__x_ABI_CWindows_CDevices_CPointOfService_CIMagneticStripeReaderVendorSpecificCardDataReceivedEventArgs* This,
        __x_ABI_CWindows_CDevices_CPointOfService_CIMagneticStripeReaderReport** value);

        END_INTERFACE
    } __x_ABI_CWindows_CDevices_CPointOfService_CIMagneticStripeReaderVendorSpecificCardDataReceivedEventArgsVtbl;

    interface __x_ABI_CWindows_CDevices_CPointOfService_CIMagneticStripeReaderVendorSpecificCardDataReceivedEventArgs
    {
        CONST_VTBL struct __x_ABI_CWindows_CDevices_CPointOfService_CIMagneticStripeReaderVendorSpecificCardDataReceivedEventArgsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CDevices_CPointOfService_CIMagneticStripeReaderVendorSpecificCardDataReceivedEventArgs;
#endif /* !defined(____x_ABI_CWindows_CDevices_CPointOfService_CIMagneticStripeReaderVendorSpecificCardDataReceivedEventArgs_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CDevices_CPointOfService_CIPosPrinter_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CDevices_CPointOfService_CIPosPrinter_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CDevices_CPointOfService_CIPosPrinterVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CDevices_CPointOfService_CIPosPrinter* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CDevices_CPointOfService_CIPosPrinter* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CDevices_CPointOfService_CIPosPrinter* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CDevices_CPointOfService_CIPosPrinter* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CDevices_CPointOfService_CIPosPrinter* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CDevices_CPointOfService_CIPosPrinter* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_DeviceId)(__x_ABI_CWindows_CDevices_CPointOfService_CIPosPrinter* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* get_Capabilities)(__x_ABI_CWindows_CDevices_CPointOfService_CIPosPrinter* This,
        __x_ABI_CWindows_CDevices_CPointOfService_CIPosPrinterCapabilities** value);
    HRESULT (STDMETHODCALLTYPE* get_SupportedCharacterSets)(__x_ABI_CWindows_CDevices_CPointOfService_CIPosPrinter* This,
        __x_ABI_C__FIVectorView_1_UINT32** value);
    HRESULT (STDMETHODCALLTYPE* get_SupportedTypeFaces)(__x_ABI_CWindows_CDevices_CPointOfService_CIPosPrinter* This,
        __x_ABI_C__FIVectorView_1_HSTRING** value);
    HRESULT (STDMETHODCALLTYPE* get_Status)(__x_ABI_CWindows_CDevices_CPointOfService_CIPosPrinter* This,
        __x_ABI_CWindows_CDevices_CPointOfService_CIPosPrinterStatus** value);
    HRESULT (STDMETHODCALLTYPE* ClaimPrinterAsync)(__x_ABI_CWindows_CDevices_CPointOfService_CIPosPrinter* This,
        __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CDevices__CPointOfService__CClaimedPosPrinter** operation);
    HRESULT (STDMETHODCALLTYPE* CheckHealthAsync)(__x_ABI_CWindows_CDevices_CPointOfService_CIPosPrinter* This,
        enum __x_ABI_CWindows_CDevices_CPointOfService_CUnifiedPosHealthCheckLevel level,
        __x_ABI_C__FIAsyncOperation_1_HSTRING** operation);
    HRESULT (STDMETHODCALLTYPE* GetStatisticsAsync)(__x_ABI_CWindows_CDevices_CPointOfService_CIPosPrinter* This,
        __x_ABI_C__FIIterable_1_HSTRING* statisticsCategories,
        __x_ABI_C__FIAsyncOperation_1_HSTRING** operation);
    HRESULT (STDMETHODCALLTYPE* add_StatusUpdated)(__x_ABI_CWindows_CDevices_CPointOfService_CIPosPrinter* This,
        __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CDevices__CPointOfService__CPosPrinter___x_ABI_CWindows__CDevices__CPointOfService__CPosPrinterStatusUpdatedEventArgs* handler,
        EventRegistrationToken* token);
    HRESULT (STDMETHODCALLTYPE* remove_StatusUpdated)(__x_ABI_CWindows_CDevices_CPointOfService_CIPosPrinter* This,
        EventRegistrationToken token);

        END_INTERFACE
    } __x_ABI_CWindows_CDevices_CPointOfService_CIPosPrinterVtbl;

    interface __x_ABI_CWindows_CDevices_CPointOfService_CIPosPrinter
    {
        CONST_VTBL struct __x_ABI_CWindows_CDevices_CPointOfService_CIPosPrinterVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CDevices_CPointOfService_CIPosPrinter;
#endif /* !defined(____x_ABI_CWindows_CDevices_CPointOfService_CIPosPrinter_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CDevices_CPointOfService_CIPosPrinter2_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CDevices_CPointOfService_CIPosPrinter2_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CDevices_CPointOfService_CIPosPrinter2Vtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CDevices_CPointOfService_CIPosPrinter2* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CDevices_CPointOfService_CIPosPrinter2* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CDevices_CPointOfService_CIPosPrinter2* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CDevices_CPointOfService_CIPosPrinter2* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CDevices_CPointOfService_CIPosPrinter2* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CDevices_CPointOfService_CIPosPrinter2* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_SupportedBarcodeSymbologies)(__x_ABI_CWindows_CDevices_CPointOfService_CIPosPrinter2* This,
        __x_ABI_C__FIVectorView_1_UINT32** value);
    HRESULT (STDMETHODCALLTYPE* GetFontProperty)(__x_ABI_CWindows_CDevices_CPointOfService_CIPosPrinter2* This,
        HSTRING typeface,
        __x_ABI_CWindows_CDevices_CPointOfService_CIPosPrinterFontProperty** result);

        END_INTERFACE
    } __x_ABI_CWindows_CDevices_CPointOfService_CIPosPrinter2Vtbl;

    interface __x_ABI_CWindows_CDevices_CPointOfService_CIPosPrinter2
    {
        CONST_VTBL struct __x_ABI_CWindows_CDevices_CPointOfService_CIPosPrinter2Vtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CDevices_CPointOfService_CIPosPrinter2;
#endif /* !defined(____x_ABI_CWindows_CDevices_CPointOfService_CIPosPrinter2_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CDevices_CPointOfService_CIPosPrinterCapabilities_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CDevices_CPointOfService_CIPosPrinterCapabilities_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CDevices_CPointOfService_CIPosPrinterCapabilitiesVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CDevices_CPointOfService_CIPosPrinterCapabilities* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CDevices_CPointOfService_CIPosPrinterCapabilities* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CDevices_CPointOfService_CIPosPrinterCapabilities* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CDevices_CPointOfService_CIPosPrinterCapabilities* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CDevices_CPointOfService_CIPosPrinterCapabilities* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CDevices_CPointOfService_CIPosPrinterCapabilities* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_PowerReportingType)(__x_ABI_CWindows_CDevices_CPointOfService_CIPosPrinterCapabilities* This,
        enum __x_ABI_CWindows_CDevices_CPointOfService_CUnifiedPosPowerReportingType* value);
    HRESULT (STDMETHODCALLTYPE* get_IsStatisticsReportingSupported)(__x_ABI_CWindows_CDevices_CPointOfService_CIPosPrinterCapabilities* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* get_IsStatisticsUpdatingSupported)(__x_ABI_CWindows_CDevices_CPointOfService_CIPosPrinterCapabilities* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* get_DefaultCharacterSet)(__x_ABI_CWindows_CDevices_CPointOfService_CIPosPrinterCapabilities* This,
        UINT32* value);
    HRESULT (STDMETHODCALLTYPE* get_HasCoverSensor)(__x_ABI_CWindows_CDevices_CPointOfService_CIPosPrinterCapabilities* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* get_CanMapCharacterSet)(__x_ABI_CWindows_CDevices_CPointOfService_CIPosPrinterCapabilities* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* get_IsTransactionSupported)(__x_ABI_CWindows_CDevices_CPointOfService_CIPosPrinterCapabilities* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* get_Receipt)(__x_ABI_CWindows_CDevices_CPointOfService_CIPosPrinterCapabilities* This,
        __x_ABI_CWindows_CDevices_CPointOfService_CIReceiptPrinterCapabilities** value);
    HRESULT (STDMETHODCALLTYPE* get_Slip)(__x_ABI_CWindows_CDevices_CPointOfService_CIPosPrinterCapabilities* This,
        __x_ABI_CWindows_CDevices_CPointOfService_CISlipPrinterCapabilities** value);
    HRESULT (STDMETHODCALLTYPE* get_Journal)(__x_ABI_CWindows_CDevices_CPointOfService_CIPosPrinterCapabilities* This,
        __x_ABI_CWindows_CDevices_CPointOfService_CIJournalPrinterCapabilities** value);

        END_INTERFACE
    } __x_ABI_CWindows_CDevices_CPointOfService_CIPosPrinterCapabilitiesVtbl;

    interface __x_ABI_CWindows_CDevices_CPointOfService_CIPosPrinterCapabilities
    {
        CONST_VTBL struct __x_ABI_CWindows_CDevices_CPointOfService_CIPosPrinterCapabilitiesVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CDevices_CPointOfService_CIPosPrinterCapabilities;
#endif /* !defined(____x_ABI_CWindows_CDevices_CPointOfService_CIPosPrinterCapabilities_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CDevices_CPointOfService_CIPosPrinterCharacterSetIdsStatics_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CDevices_CPointOfService_CIPosPrinterCharacterSetIdsStatics_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CDevices_CPointOfService_CIPosPrinterCharacterSetIdsStaticsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CDevices_CPointOfService_CIPosPrinterCharacterSetIdsStatics* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CDevices_CPointOfService_CIPosPrinterCharacterSetIdsStatics* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CDevices_CPointOfService_CIPosPrinterCharacterSetIdsStatics* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CDevices_CPointOfService_CIPosPrinterCharacterSetIdsStatics* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CDevices_CPointOfService_CIPosPrinterCharacterSetIdsStatics* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CDevices_CPointOfService_CIPosPrinterCharacterSetIdsStatics* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Utf16LE)(__x_ABI_CWindows_CDevices_CPointOfService_CIPosPrinterCharacterSetIdsStatics* This,
        UINT32* value);
    HRESULT (STDMETHODCALLTYPE* get_Ascii)(__x_ABI_CWindows_CDevices_CPointOfService_CIPosPrinterCharacterSetIdsStatics* This,
        UINT32* value);
    HRESULT (STDMETHODCALLTYPE* get_Ansi)(__x_ABI_CWindows_CDevices_CPointOfService_CIPosPrinterCharacterSetIdsStatics* This,
        UINT32* value);

        END_INTERFACE
    } __x_ABI_CWindows_CDevices_CPointOfService_CIPosPrinterCharacterSetIdsStaticsVtbl;

    interface __x_ABI_CWindows_CDevices_CPointOfService_CIPosPrinterCharacterSetIdsStatics
    {
        CONST_VTBL struct __x_ABI_CWindows_CDevices_CPointOfService_CIPosPrinterCharacterSetIdsStaticsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CDevices_CPointOfService_CIPosPrinterCharacterSetIdsStatics;
#endif /* !defined(____x_ABI_CWindows_CDevices_CPointOfService_CIPosPrinterCharacterSetIdsStatics_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CDevices_CPointOfService_CIPosPrinterFontProperty_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CDevices_CPointOfService_CIPosPrinterFontProperty_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CDevices_CPointOfService_CIPosPrinterFontPropertyVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CDevices_CPointOfService_CIPosPrinterFontProperty* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CDevices_CPointOfService_CIPosPrinterFontProperty* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CDevices_CPointOfService_CIPosPrinterFontProperty* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CDevices_CPointOfService_CIPosPrinterFontProperty* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CDevices_CPointOfService_CIPosPrinterFontProperty* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CDevices_CPointOfService_CIPosPrinterFontProperty* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_TypeFace)(__x_ABI_CWindows_CDevices_CPointOfService_CIPosPrinterFontProperty* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* get_IsScalableToAnySize)(__x_ABI_CWindows_CDevices_CPointOfService_CIPosPrinterFontProperty* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* get_CharacterSizes)(__x_ABI_CWindows_CDevices_CPointOfService_CIPosPrinterFontProperty* This,
        __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CDevices__CPointOfService__CSizeUInt32** value);

        END_INTERFACE
    } __x_ABI_CWindows_CDevices_CPointOfService_CIPosPrinterFontPropertyVtbl;

    interface __x_ABI_CWindows_CDevices_CPointOfService_CIPosPrinterFontProperty
    {
        CONST_VTBL struct __x_ABI_CWindows_CDevices_CPointOfService_CIPosPrinterFontPropertyVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CDevices_CPointOfService_CIPosPrinterFontProperty;
#endif /* !defined(____x_ABI_CWindows_CDevices_CPointOfService_CIPosPrinterFontProperty_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CDevices_CPointOfService_CIPosPrinterJob_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CDevices_CPointOfService_CIPosPrinterJob_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CDevices_CPointOfService_CIPosPrinterJobVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CDevices_CPointOfService_CIPosPrinterJob* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CDevices_CPointOfService_CIPosPrinterJob* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CDevices_CPointOfService_CIPosPrinterJob* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CDevices_CPointOfService_CIPosPrinterJob* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CDevices_CPointOfService_CIPosPrinterJob* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CDevices_CPointOfService_CIPosPrinterJob* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* Print)(__x_ABI_CWindows_CDevices_CPointOfService_CIPosPrinterJob* This,
        HSTRING data);
    HRESULT (STDMETHODCALLTYPE* PrintLine)(__x_ABI_CWindows_CDevices_CPointOfService_CIPosPrinterJob* This,
        HSTRING data);
    HRESULT (STDMETHODCALLTYPE* PrintNewline)(__x_ABI_CWindows_CDevices_CPointOfService_CIPosPrinterJob* This);
    HRESULT (STDMETHODCALLTYPE* ExecuteAsync)(__x_ABI_CWindows_CDevices_CPointOfService_CIPosPrinterJob* This,
        __x_ABI_C__FIAsyncOperation_1_boolean** operation);

        END_INTERFACE
    } __x_ABI_CWindows_CDevices_CPointOfService_CIPosPrinterJobVtbl;

    interface __x_ABI_CWindows_CDevices_CPointOfService_CIPosPrinterJob
    {
        CONST_VTBL struct __x_ABI_CWindows_CDevices_CPointOfService_CIPosPrinterJobVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CDevices_CPointOfService_CIPosPrinterJob;
#endif /* !defined(____x_ABI_CWindows_CDevices_CPointOfService_CIPosPrinterJob_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CDevices_CPointOfService_CIPosPrinterPrintOptions_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CDevices_CPointOfService_CIPosPrinterPrintOptions_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CDevices_CPointOfService_CIPosPrinterPrintOptionsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CDevices_CPointOfService_CIPosPrinterPrintOptions* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CDevices_CPointOfService_CIPosPrinterPrintOptions* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CDevices_CPointOfService_CIPosPrinterPrintOptions* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CDevices_CPointOfService_CIPosPrinterPrintOptions* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CDevices_CPointOfService_CIPosPrinterPrintOptions* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CDevices_CPointOfService_CIPosPrinterPrintOptions* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_TypeFace)(__x_ABI_CWindows_CDevices_CPointOfService_CIPosPrinterPrintOptions* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* put_TypeFace)(__x_ABI_CWindows_CDevices_CPointOfService_CIPosPrinterPrintOptions* This,
        HSTRING value);
    HRESULT (STDMETHODCALLTYPE* get_CharacterHeight)(__x_ABI_CWindows_CDevices_CPointOfService_CIPosPrinterPrintOptions* This,
        UINT32* value);
    HRESULT (STDMETHODCALLTYPE* put_CharacterHeight)(__x_ABI_CWindows_CDevices_CPointOfService_CIPosPrinterPrintOptions* This,
        UINT32 value);
    HRESULT (STDMETHODCALLTYPE* get_Bold)(__x_ABI_CWindows_CDevices_CPointOfService_CIPosPrinterPrintOptions* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* put_Bold)(__x_ABI_CWindows_CDevices_CPointOfService_CIPosPrinterPrintOptions* This,
        boolean value);
    HRESULT (STDMETHODCALLTYPE* get_Italic)(__x_ABI_CWindows_CDevices_CPointOfService_CIPosPrinterPrintOptions* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* put_Italic)(__x_ABI_CWindows_CDevices_CPointOfService_CIPosPrinterPrintOptions* This,
        boolean value);
    HRESULT (STDMETHODCALLTYPE* get_Underline)(__x_ABI_CWindows_CDevices_CPointOfService_CIPosPrinterPrintOptions* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* put_Underline)(__x_ABI_CWindows_CDevices_CPointOfService_CIPosPrinterPrintOptions* This,
        boolean value);
    HRESULT (STDMETHODCALLTYPE* get_ReverseVideo)(__x_ABI_CWindows_CDevices_CPointOfService_CIPosPrinterPrintOptions* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* put_ReverseVideo)(__x_ABI_CWindows_CDevices_CPointOfService_CIPosPrinterPrintOptions* This,
        boolean value);
    HRESULT (STDMETHODCALLTYPE* get_Strikethrough)(__x_ABI_CWindows_CDevices_CPointOfService_CIPosPrinterPrintOptions* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* put_Strikethrough)(__x_ABI_CWindows_CDevices_CPointOfService_CIPosPrinterPrintOptions* This,
        boolean value);
    HRESULT (STDMETHODCALLTYPE* get_Superscript)(__x_ABI_CWindows_CDevices_CPointOfService_CIPosPrinterPrintOptions* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* put_Superscript)(__x_ABI_CWindows_CDevices_CPointOfService_CIPosPrinterPrintOptions* This,
        boolean value);
    HRESULT (STDMETHODCALLTYPE* get_Subscript)(__x_ABI_CWindows_CDevices_CPointOfService_CIPosPrinterPrintOptions* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* put_Subscript)(__x_ABI_CWindows_CDevices_CPointOfService_CIPosPrinterPrintOptions* This,
        boolean value);
    HRESULT (STDMETHODCALLTYPE* get_DoubleWide)(__x_ABI_CWindows_CDevices_CPointOfService_CIPosPrinterPrintOptions* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* put_DoubleWide)(__x_ABI_CWindows_CDevices_CPointOfService_CIPosPrinterPrintOptions* This,
        boolean value);
    HRESULT (STDMETHODCALLTYPE* get_DoubleHigh)(__x_ABI_CWindows_CDevices_CPointOfService_CIPosPrinterPrintOptions* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* put_DoubleHigh)(__x_ABI_CWindows_CDevices_CPointOfService_CIPosPrinterPrintOptions* This,
        boolean value);
    HRESULT (STDMETHODCALLTYPE* get_Alignment)(__x_ABI_CWindows_CDevices_CPointOfService_CIPosPrinterPrintOptions* This,
        enum __x_ABI_CWindows_CDevices_CPointOfService_CPosPrinterAlignment* value);
    HRESULT (STDMETHODCALLTYPE* put_Alignment)(__x_ABI_CWindows_CDevices_CPointOfService_CIPosPrinterPrintOptions* This,
        enum __x_ABI_CWindows_CDevices_CPointOfService_CPosPrinterAlignment value);
    HRESULT (STDMETHODCALLTYPE* get_CharacterSet)(__x_ABI_CWindows_CDevices_CPointOfService_CIPosPrinterPrintOptions* This,
        UINT32* value);
    HRESULT (STDMETHODCALLTYPE* put_CharacterSet)(__x_ABI_CWindows_CDevices_CPointOfService_CIPosPrinterPrintOptions* This,
        UINT32 value);

        END_INTERFACE
    } __x_ABI_CWindows_CDevices_CPointOfService_CIPosPrinterPrintOptionsVtbl;

    interface __x_ABI_CWindows_CDevices_CPointOfService_CIPosPrinterPrintOptions
    {
        CONST_VTBL struct __x_ABI_CWindows_CDevices_CPointOfService_CIPosPrinterPrintOptionsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CDevices_CPointOfService_CIPosPrinterPrintOptions;
#endif /* !defined(____x_ABI_CWindows_CDevices_CPointOfService_CIPosPrinterPrintOptions_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CDevices_CPointOfService_CIPosPrinterReleaseDeviceRequestedEventArgs_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CDevices_CPointOfService_CIPosPrinterReleaseDeviceRequestedEventArgs_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CDevices_CPointOfService_CIPosPrinterReleaseDeviceRequestedEventArgsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CDevices_CPointOfService_CIPosPrinterReleaseDeviceRequestedEventArgs* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CDevices_CPointOfService_CIPosPrinterReleaseDeviceRequestedEventArgs* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CDevices_CPointOfService_CIPosPrinterReleaseDeviceRequestedEventArgs* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CDevices_CPointOfService_CIPosPrinterReleaseDeviceRequestedEventArgs* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CDevices_CPointOfService_CIPosPrinterReleaseDeviceRequestedEventArgs* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CDevices_CPointOfService_CIPosPrinterReleaseDeviceRequestedEventArgs* This,
            TrustLevel* trustLevel);
    
        END_INTERFACE
    } __x_ABI_CWindows_CDevices_CPointOfService_CIPosPrinterReleaseDeviceRequestedEventArgsVtbl;

    interface __x_ABI_CWindows_CDevices_CPointOfService_CIPosPrinterReleaseDeviceRequestedEventArgs
    {
        CONST_VTBL struct __x_ABI_CWindows_CDevices_CPointOfService_CIPosPrinterReleaseDeviceRequestedEventArgsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CDevices_CPointOfService_CIPosPrinterReleaseDeviceRequestedEventArgs;
#endif /* !defined(____x_ABI_CWindows_CDevices_CPointOfService_CIPosPrinterReleaseDeviceRequestedEventArgs_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CDevices_CPointOfService_CIPosPrinterStatics_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CDevices_CPointOfService_CIPosPrinterStatics_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CDevices_CPointOfService_CIPosPrinterStaticsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CDevices_CPointOfService_CIPosPrinterStatics* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CDevices_CPointOfService_CIPosPrinterStatics* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CDevices_CPointOfService_CIPosPrinterStatics* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CDevices_CPointOfService_CIPosPrinterStatics* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CDevices_CPointOfService_CIPosPrinterStatics* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CDevices_CPointOfService_CIPosPrinterStatics* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* GetDefaultAsync)(__x_ABI_CWindows_CDevices_CPointOfService_CIPosPrinterStatics* This,
        __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CDevices__CPointOfService__CPosPrinter** result);
    HRESULT (STDMETHODCALLTYPE* FromIdAsync)(__x_ABI_CWindows_CDevices_CPointOfService_CIPosPrinterStatics* This,
        HSTRING deviceId,
        __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CDevices__CPointOfService__CPosPrinter** result);
    HRESULT (STDMETHODCALLTYPE* GetDeviceSelector)(__x_ABI_CWindows_CDevices_CPointOfService_CIPosPrinterStatics* This,
        HSTRING* value);

        END_INTERFACE
    } __x_ABI_CWindows_CDevices_CPointOfService_CIPosPrinterStaticsVtbl;

    interface __x_ABI_CWindows_CDevices_CPointOfService_CIPosPrinterStatics
    {
        CONST_VTBL struct __x_ABI_CWindows_CDevices_CPointOfService_CIPosPrinterStaticsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CDevices_CPointOfService_CIPosPrinterStatics;
#endif /* !defined(____x_ABI_CWindows_CDevices_CPointOfService_CIPosPrinterStatics_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CDevices_CPointOfService_CIPosPrinterStatics2_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CDevices_CPointOfService_CIPosPrinterStatics2_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CDevices_CPointOfService_CIPosPrinterStatics2Vtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CDevices_CPointOfService_CIPosPrinterStatics2* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CDevices_CPointOfService_CIPosPrinterStatics2* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CDevices_CPointOfService_CIPosPrinterStatics2* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CDevices_CPointOfService_CIPosPrinterStatics2* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CDevices_CPointOfService_CIPosPrinterStatics2* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CDevices_CPointOfService_CIPosPrinterStatics2* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* GetDeviceSelectorWithConnectionTypes)(__x_ABI_CWindows_CDevices_CPointOfService_CIPosPrinterStatics2* This,
        enum __x_ABI_CWindows_CDevices_CPointOfService_CPosConnectionTypes connectionTypes,
        HSTRING* value);

        END_INTERFACE
    } __x_ABI_CWindows_CDevices_CPointOfService_CIPosPrinterStatics2Vtbl;

    interface __x_ABI_CWindows_CDevices_CPointOfService_CIPosPrinterStatics2
    {
        CONST_VTBL struct __x_ABI_CWindows_CDevices_CPointOfService_CIPosPrinterStatics2Vtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CDevices_CPointOfService_CIPosPrinterStatics2;
#endif /* !defined(____x_ABI_CWindows_CDevices_CPointOfService_CIPosPrinterStatics2_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CDevices_CPointOfService_CIPosPrinterStatus_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CDevices_CPointOfService_CIPosPrinterStatus_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CDevices_CPointOfService_CIPosPrinterStatusVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CDevices_CPointOfService_CIPosPrinterStatus* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CDevices_CPointOfService_CIPosPrinterStatus* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CDevices_CPointOfService_CIPosPrinterStatus* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CDevices_CPointOfService_CIPosPrinterStatus* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CDevices_CPointOfService_CIPosPrinterStatus* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CDevices_CPointOfService_CIPosPrinterStatus* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_StatusKind)(__x_ABI_CWindows_CDevices_CPointOfService_CIPosPrinterStatus* This,
        enum __x_ABI_CWindows_CDevices_CPointOfService_CPosPrinterStatusKind* value);
    HRESULT (STDMETHODCALLTYPE* get_ExtendedStatus)(__x_ABI_CWindows_CDevices_CPointOfService_CIPosPrinterStatus* This,
        UINT32* value);

        END_INTERFACE
    } __x_ABI_CWindows_CDevices_CPointOfService_CIPosPrinterStatusVtbl;

    interface __x_ABI_CWindows_CDevices_CPointOfService_CIPosPrinterStatus
    {
        CONST_VTBL struct __x_ABI_CWindows_CDevices_CPointOfService_CIPosPrinterStatusVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CDevices_CPointOfService_CIPosPrinterStatus;
#endif /* !defined(____x_ABI_CWindows_CDevices_CPointOfService_CIPosPrinterStatus_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CDevices_CPointOfService_CIPosPrinterStatusUpdatedEventArgs_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CDevices_CPointOfService_CIPosPrinterStatusUpdatedEventArgs_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CDevices_CPointOfService_CIPosPrinterStatusUpdatedEventArgsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CDevices_CPointOfService_CIPosPrinterStatusUpdatedEventArgs* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CDevices_CPointOfService_CIPosPrinterStatusUpdatedEventArgs* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CDevices_CPointOfService_CIPosPrinterStatusUpdatedEventArgs* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CDevices_CPointOfService_CIPosPrinterStatusUpdatedEventArgs* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CDevices_CPointOfService_CIPosPrinterStatusUpdatedEventArgs* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CDevices_CPointOfService_CIPosPrinterStatusUpdatedEventArgs* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Status)(__x_ABI_CWindows_CDevices_CPointOfService_CIPosPrinterStatusUpdatedEventArgs* This,
        __x_ABI_CWindows_CDevices_CPointOfService_CIPosPrinterStatus** value);

        END_INTERFACE
    } __x_ABI_CWindows_CDevices_CPointOfService_CIPosPrinterStatusUpdatedEventArgsVtbl;

    interface __x_ABI_CWindows_CDevices_CPointOfService_CIPosPrinterStatusUpdatedEventArgs
    {
        CONST_VTBL struct __x_ABI_CWindows_CDevices_CPointOfService_CIPosPrinterStatusUpdatedEventArgsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CDevices_CPointOfService_CIPosPrinterStatusUpdatedEventArgs;
#endif /* !defined(____x_ABI_CWindows_CDevices_CPointOfService_CIPosPrinterStatusUpdatedEventArgs_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CDevices_CPointOfService_CIReceiptOrSlipJob_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CDevices_CPointOfService_CIReceiptOrSlipJob_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CDevices_CPointOfService_CIReceiptOrSlipJobVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CDevices_CPointOfService_CIReceiptOrSlipJob* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CDevices_CPointOfService_CIReceiptOrSlipJob* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CDevices_CPointOfService_CIReceiptOrSlipJob* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CDevices_CPointOfService_CIReceiptOrSlipJob* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CDevices_CPointOfService_CIReceiptOrSlipJob* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CDevices_CPointOfService_CIReceiptOrSlipJob* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* SetBarcodeRotation)(__x_ABI_CWindows_CDevices_CPointOfService_CIReceiptOrSlipJob* This,
        enum __x_ABI_CWindows_CDevices_CPointOfService_CPosPrinterRotation value);
    HRESULT (STDMETHODCALLTYPE* SetPrintRotation)(__x_ABI_CWindows_CDevices_CPointOfService_CIReceiptOrSlipJob* This,
        enum __x_ABI_CWindows_CDevices_CPointOfService_CPosPrinterRotation value,
        boolean includeBitmaps);
    HRESULT (STDMETHODCALLTYPE* SetPrintArea)(__x_ABI_CWindows_CDevices_CPointOfService_CIReceiptOrSlipJob* This,
        struct __x_ABI_CWindows_CFoundation_CRect value);
    HRESULT (STDMETHODCALLTYPE* SetBitmap)(__x_ABI_CWindows_CDevices_CPointOfService_CIReceiptOrSlipJob* This,
        UINT32 bitmapNumber,
        __x_ABI_CWindows_CGraphics_CImaging_CIBitmapFrame* bitmap,
        enum __x_ABI_CWindows_CDevices_CPointOfService_CPosPrinterAlignment alignment);
    HRESULT (STDMETHODCALLTYPE* SetBitmapCustomWidthStandardAlign)(__x_ABI_CWindows_CDevices_CPointOfService_CIReceiptOrSlipJob* This,
        UINT32 bitmapNumber,
        __x_ABI_CWindows_CGraphics_CImaging_CIBitmapFrame* bitmap,
        enum __x_ABI_CWindows_CDevices_CPointOfService_CPosPrinterAlignment alignment,
        UINT32 width);
    HRESULT (STDMETHODCALLTYPE* SetCustomAlignedBitmap)(__x_ABI_CWindows_CDevices_CPointOfService_CIReceiptOrSlipJob* This,
        UINT32 bitmapNumber,
        __x_ABI_CWindows_CGraphics_CImaging_CIBitmapFrame* bitmap,
        UINT32 alignmentDistance);
    HRESULT (STDMETHODCALLTYPE* SetBitmapCustomWidthCustomAlign)(__x_ABI_CWindows_CDevices_CPointOfService_CIReceiptOrSlipJob* This,
        UINT32 bitmapNumber,
        __x_ABI_CWindows_CGraphics_CImaging_CIBitmapFrame* bitmap,
        UINT32 alignmentDistance,
        UINT32 width);
    HRESULT (STDMETHODCALLTYPE* PrintSavedBitmap)(__x_ABI_CWindows_CDevices_CPointOfService_CIReceiptOrSlipJob* This,
        UINT32 bitmapNumber);
    HRESULT (STDMETHODCALLTYPE* DrawRuledLine)(__x_ABI_CWindows_CDevices_CPointOfService_CIReceiptOrSlipJob* This,
        HSTRING positionList,
        enum __x_ABI_CWindows_CDevices_CPointOfService_CPosPrinterLineDirection lineDirection,
        UINT32 lineWidth,
        enum __x_ABI_CWindows_CDevices_CPointOfService_CPosPrinterLineStyle lineStyle,
        UINT32 lineColor);
    HRESULT (STDMETHODCALLTYPE* PrintBarcode)(__x_ABI_CWindows_CDevices_CPointOfService_CIReceiptOrSlipJob* This,
        HSTRING data,
        UINT32 symbology,
        UINT32 height,
        UINT32 width,
        enum __x_ABI_CWindows_CDevices_CPointOfService_CPosPrinterBarcodeTextPosition textPosition,
        enum __x_ABI_CWindows_CDevices_CPointOfService_CPosPrinterAlignment alignment);
    HRESULT (STDMETHODCALLTYPE* PrintBarcodeCustomAlign)(__x_ABI_CWindows_CDevices_CPointOfService_CIReceiptOrSlipJob* This,
        HSTRING data,
        UINT32 symbology,
        UINT32 height,
        UINT32 width,
        enum __x_ABI_CWindows_CDevices_CPointOfService_CPosPrinterBarcodeTextPosition textPosition,
        UINT32 alignmentDistance);
    HRESULT (STDMETHODCALLTYPE* PrintBitmap)(__x_ABI_CWindows_CDevices_CPointOfService_CIReceiptOrSlipJob* This,
        __x_ABI_CWindows_CGraphics_CImaging_CIBitmapFrame* bitmap,
        enum __x_ABI_CWindows_CDevices_CPointOfService_CPosPrinterAlignment alignment);
    HRESULT (STDMETHODCALLTYPE* PrintBitmapCustomWidthStandardAlign)(__x_ABI_CWindows_CDevices_CPointOfService_CIReceiptOrSlipJob* This,
        __x_ABI_CWindows_CGraphics_CImaging_CIBitmapFrame* bitmap,
        enum __x_ABI_CWindows_CDevices_CPointOfService_CPosPrinterAlignment alignment,
        UINT32 width);
    HRESULT (STDMETHODCALLTYPE* PrintCustomAlignedBitmap)(__x_ABI_CWindows_CDevices_CPointOfService_CIReceiptOrSlipJob* This,
        __x_ABI_CWindows_CGraphics_CImaging_CIBitmapFrame* bitmap,
        UINT32 alignmentDistance);
    HRESULT (STDMETHODCALLTYPE* PrintBitmapCustomWidthCustomAlign)(__x_ABI_CWindows_CDevices_CPointOfService_CIReceiptOrSlipJob* This,
        __x_ABI_CWindows_CGraphics_CImaging_CIBitmapFrame* bitmap,
        UINT32 alignmentDistance,
        UINT32 width);

        END_INTERFACE
    } __x_ABI_CWindows_CDevices_CPointOfService_CIReceiptOrSlipJobVtbl;

    interface __x_ABI_CWindows_CDevices_CPointOfService_CIReceiptOrSlipJob
    {
        CONST_VTBL struct __x_ABI_CWindows_CDevices_CPointOfService_CIReceiptOrSlipJobVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CDevices_CPointOfService_CIReceiptOrSlipJob;
#endif /* !defined(____x_ABI_CWindows_CDevices_CPointOfService_CIReceiptOrSlipJob_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CDevices_CPointOfService_CIReceiptPrintJob_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CDevices_CPointOfService_CIReceiptPrintJob_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CDevices_CPointOfService_CIReceiptPrintJobVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CDevices_CPointOfService_CIReceiptPrintJob* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CDevices_CPointOfService_CIReceiptPrintJob* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CDevices_CPointOfService_CIReceiptPrintJob* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CDevices_CPointOfService_CIReceiptPrintJob* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CDevices_CPointOfService_CIReceiptPrintJob* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CDevices_CPointOfService_CIReceiptPrintJob* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* MarkFeed)(__x_ABI_CWindows_CDevices_CPointOfService_CIReceiptPrintJob* This,
        enum __x_ABI_CWindows_CDevices_CPointOfService_CPosPrinterMarkFeedKind kind);
    HRESULT (STDMETHODCALLTYPE* CutPaper)(__x_ABI_CWindows_CDevices_CPointOfService_CIReceiptPrintJob* This,
        DOUBLE percentage);
    HRESULT (STDMETHODCALLTYPE* CutPaperDefault)(__x_ABI_CWindows_CDevices_CPointOfService_CIReceiptPrintJob* This);

        END_INTERFACE
    } __x_ABI_CWindows_CDevices_CPointOfService_CIReceiptPrintJobVtbl;

    interface __x_ABI_CWindows_CDevices_CPointOfService_CIReceiptPrintJob
    {
        CONST_VTBL struct __x_ABI_CWindows_CDevices_CPointOfService_CIReceiptPrintJobVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CDevices_CPointOfService_CIReceiptPrintJob;
#endif /* !defined(____x_ABI_CWindows_CDevices_CPointOfService_CIReceiptPrintJob_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CDevices_CPointOfService_CIReceiptPrintJob2_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CDevices_CPointOfService_CIReceiptPrintJob2_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CDevices_CPointOfService_CIReceiptPrintJob2Vtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CDevices_CPointOfService_CIReceiptPrintJob2* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CDevices_CPointOfService_CIReceiptPrintJob2* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CDevices_CPointOfService_CIReceiptPrintJob2* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CDevices_CPointOfService_CIReceiptPrintJob2* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CDevices_CPointOfService_CIReceiptPrintJob2* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CDevices_CPointOfService_CIReceiptPrintJob2* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* StampPaper)(__x_ABI_CWindows_CDevices_CPointOfService_CIReceiptPrintJob2* This);
    HRESULT (STDMETHODCALLTYPE* Print)(__x_ABI_CWindows_CDevices_CPointOfService_CIReceiptPrintJob2* This,
        HSTRING data,
        __x_ABI_CWindows_CDevices_CPointOfService_CIPosPrinterPrintOptions* printOptions);
    HRESULT (STDMETHODCALLTYPE* FeedPaperByLine)(__x_ABI_CWindows_CDevices_CPointOfService_CIReceiptPrintJob2* This,
        INT32 lineCount);
    HRESULT (STDMETHODCALLTYPE* FeedPaperByMapModeUnit)(__x_ABI_CWindows_CDevices_CPointOfService_CIReceiptPrintJob2* This,
        INT32 distance);

        END_INTERFACE
    } __x_ABI_CWindows_CDevices_CPointOfService_CIReceiptPrintJob2Vtbl;

    interface __x_ABI_CWindows_CDevices_CPointOfService_CIReceiptPrintJob2
    {
        CONST_VTBL struct __x_ABI_CWindows_CDevices_CPointOfService_CIReceiptPrintJob2Vtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CDevices_CPointOfService_CIReceiptPrintJob2;
#endif /* !defined(____x_ABI_CWindows_CDevices_CPointOfService_CIReceiptPrintJob2_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CDevices_CPointOfService_CIReceiptPrinterCapabilities_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CDevices_CPointOfService_CIReceiptPrinterCapabilities_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CDevices_CPointOfService_CIReceiptPrinterCapabilitiesVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CDevices_CPointOfService_CIReceiptPrinterCapabilities* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CDevices_CPointOfService_CIReceiptPrinterCapabilities* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CDevices_CPointOfService_CIReceiptPrinterCapabilities* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CDevices_CPointOfService_CIReceiptPrinterCapabilities* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CDevices_CPointOfService_CIReceiptPrinterCapabilities* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CDevices_CPointOfService_CIReceiptPrinterCapabilities* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_CanCutPaper)(__x_ABI_CWindows_CDevices_CPointOfService_CIReceiptPrinterCapabilities* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* get_IsStampSupported)(__x_ABI_CWindows_CDevices_CPointOfService_CIReceiptPrinterCapabilities* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* get_MarkFeedCapabilities)(__x_ABI_CWindows_CDevices_CPointOfService_CIReceiptPrinterCapabilities* This,
        enum __x_ABI_CWindows_CDevices_CPointOfService_CPosPrinterMarkFeedCapabilities* value);

        END_INTERFACE
    } __x_ABI_CWindows_CDevices_CPointOfService_CIReceiptPrinterCapabilitiesVtbl;

    interface __x_ABI_CWindows_CDevices_CPointOfService_CIReceiptPrinterCapabilities
    {
        CONST_VTBL struct __x_ABI_CWindows_CDevices_CPointOfService_CIReceiptPrinterCapabilitiesVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CDevices_CPointOfService_CIReceiptPrinterCapabilities;
#endif /* !defined(____x_ABI_CWindows_CDevices_CPointOfService_CIReceiptPrinterCapabilities_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CDevices_CPointOfService_CIReceiptPrinterCapabilities2_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CDevices_CPointOfService_CIReceiptPrinterCapabilities2_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CDevices_CPointOfService_CIReceiptPrinterCapabilities2Vtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CDevices_CPointOfService_CIReceiptPrinterCapabilities2* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CDevices_CPointOfService_CIReceiptPrinterCapabilities2* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CDevices_CPointOfService_CIReceiptPrinterCapabilities2* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CDevices_CPointOfService_CIReceiptPrinterCapabilities2* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CDevices_CPointOfService_CIReceiptPrinterCapabilities2* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CDevices_CPointOfService_CIReceiptPrinterCapabilities2* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_IsReverseVideoSupported)(__x_ABI_CWindows_CDevices_CPointOfService_CIReceiptPrinterCapabilities2* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* get_IsStrikethroughSupported)(__x_ABI_CWindows_CDevices_CPointOfService_CIReceiptPrinterCapabilities2* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* get_IsSuperscriptSupported)(__x_ABI_CWindows_CDevices_CPointOfService_CIReceiptPrinterCapabilities2* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* get_IsSubscriptSupported)(__x_ABI_CWindows_CDevices_CPointOfService_CIReceiptPrinterCapabilities2* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* get_IsReversePaperFeedByLineSupported)(__x_ABI_CWindows_CDevices_CPointOfService_CIReceiptPrinterCapabilities2* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* get_IsReversePaperFeedByMapModeUnitSupported)(__x_ABI_CWindows_CDevices_CPointOfService_CIReceiptPrinterCapabilities2* This,
        boolean* value);

        END_INTERFACE
    } __x_ABI_CWindows_CDevices_CPointOfService_CIReceiptPrinterCapabilities2Vtbl;

    interface __x_ABI_CWindows_CDevices_CPointOfService_CIReceiptPrinterCapabilities2
    {
        CONST_VTBL struct __x_ABI_CWindows_CDevices_CPointOfService_CIReceiptPrinterCapabilities2Vtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CDevices_CPointOfService_CIReceiptPrinterCapabilities2;
#endif /* !defined(____x_ABI_CWindows_CDevices_CPointOfService_CIReceiptPrinterCapabilities2_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CDevices_CPointOfService_CISlipPrintJob_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CDevices_CPointOfService_CISlipPrintJob_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CDevices_CPointOfService_CISlipPrintJobVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CDevices_CPointOfService_CISlipPrintJob* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CDevices_CPointOfService_CISlipPrintJob* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CDevices_CPointOfService_CISlipPrintJob* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CDevices_CPointOfService_CISlipPrintJob* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CDevices_CPointOfService_CISlipPrintJob* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CDevices_CPointOfService_CISlipPrintJob* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* Print)(__x_ABI_CWindows_CDevices_CPointOfService_CISlipPrintJob* This,
        HSTRING data,
        __x_ABI_CWindows_CDevices_CPointOfService_CIPosPrinterPrintOptions* printOptions);
    HRESULT (STDMETHODCALLTYPE* FeedPaperByLine)(__x_ABI_CWindows_CDevices_CPointOfService_CISlipPrintJob* This,
        INT32 lineCount);
    HRESULT (STDMETHODCALLTYPE* FeedPaperByMapModeUnit)(__x_ABI_CWindows_CDevices_CPointOfService_CISlipPrintJob* This,
        INT32 distance);

        END_INTERFACE
    } __x_ABI_CWindows_CDevices_CPointOfService_CISlipPrintJobVtbl;

    interface __x_ABI_CWindows_CDevices_CPointOfService_CISlipPrintJob
    {
        CONST_VTBL struct __x_ABI_CWindows_CDevices_CPointOfService_CISlipPrintJobVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CDevices_CPointOfService_CISlipPrintJob;
#endif /* !defined(____x_ABI_CWindows_CDevices_CPointOfService_CISlipPrintJob_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CDevices_CPointOfService_CISlipPrinterCapabilities_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CDevices_CPointOfService_CISlipPrinterCapabilities_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CDevices_CPointOfService_CISlipPrinterCapabilitiesVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CDevices_CPointOfService_CISlipPrinterCapabilities* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CDevices_CPointOfService_CISlipPrinterCapabilities* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CDevices_CPointOfService_CISlipPrinterCapabilities* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CDevices_CPointOfService_CISlipPrinterCapabilities* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CDevices_CPointOfService_CISlipPrinterCapabilities* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CDevices_CPointOfService_CISlipPrinterCapabilities* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_IsFullLengthSupported)(__x_ABI_CWindows_CDevices_CPointOfService_CISlipPrinterCapabilities* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* get_IsBothSidesPrintingSupported)(__x_ABI_CWindows_CDevices_CPointOfService_CISlipPrinterCapabilities* This,
        boolean* value);

        END_INTERFACE
    } __x_ABI_CWindows_CDevices_CPointOfService_CISlipPrinterCapabilitiesVtbl;

    interface __x_ABI_CWindows_CDevices_CPointOfService_CISlipPrinterCapabilities
    {
        CONST_VTBL struct __x_ABI_CWindows_CDevices_CPointOfService_CISlipPrinterCapabilitiesVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CDevices_CPointOfService_CISlipPrinterCapabilities;
#endif /* !defined(____x_ABI_CWindows_CDevices_CPointOfService_CISlipPrinterCapabilities_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CDevices_CPointOfService_CISlipPrinterCapabilities2_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CDevices_CPointOfService_CISlipPrinterCapabilities2_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CDevices_CPointOfService_CISlipPrinterCapabilities2Vtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CDevices_CPointOfService_CISlipPrinterCapabilities2* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CDevices_CPointOfService_CISlipPrinterCapabilities2* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CDevices_CPointOfService_CISlipPrinterCapabilities2* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CDevices_CPointOfService_CISlipPrinterCapabilities2* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CDevices_CPointOfService_CISlipPrinterCapabilities2* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CDevices_CPointOfService_CISlipPrinterCapabilities2* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_IsReverseVideoSupported)(__x_ABI_CWindows_CDevices_CPointOfService_CISlipPrinterCapabilities2* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* get_IsStrikethroughSupported)(__x_ABI_CWindows_CDevices_CPointOfService_CISlipPrinterCapabilities2* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* get_IsSuperscriptSupported)(__x_ABI_CWindows_CDevices_CPointOfService_CISlipPrinterCapabilities2* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* get_IsSubscriptSupported)(__x_ABI_CWindows_CDevices_CPointOfService_CISlipPrinterCapabilities2* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* get_IsReversePaperFeedByLineSupported)(__x_ABI_CWindows_CDevices_CPointOfService_CISlipPrinterCapabilities2* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* get_IsReversePaperFeedByMapModeUnitSupported)(__x_ABI_CWindows_CDevices_CPointOfService_CISlipPrinterCapabilities2* This,
        boolean* value);

        END_INTERFACE
    } __x_ABI_CWindows_CDevices_CPointOfService_CISlipPrinterCapabilities2Vtbl;

    interface __x_ABI_CWindows_CDevices_CPointOfService_CISlipPrinterCapabilities2
    {
        CONST_VTBL struct __x_ABI_CWindows_CDevices_CPointOfService_CISlipPrinterCapabilities2Vtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CDevices_CPointOfService_CISlipPrinterCapabilities2;
#endif /* !defined(____x_ABI_CWindows_CDevices_CPointOfService_CISlipPrinterCapabilities2_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CDevices_CPointOfService_CIUnifiedPosErrorData_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CDevices_CPointOfService_CIUnifiedPosErrorData_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CDevices_CPointOfService_CIUnifiedPosErrorDataVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CDevices_CPointOfService_CIUnifiedPosErrorData* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CDevices_CPointOfService_CIUnifiedPosErrorData* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CDevices_CPointOfService_CIUnifiedPosErrorData* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CDevices_CPointOfService_CIUnifiedPosErrorData* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CDevices_CPointOfService_CIUnifiedPosErrorData* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CDevices_CPointOfService_CIUnifiedPosErrorData* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Message)(__x_ABI_CWindows_CDevices_CPointOfService_CIUnifiedPosErrorData* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* get_Severity)(__x_ABI_CWindows_CDevices_CPointOfService_CIUnifiedPosErrorData* This,
        enum __x_ABI_CWindows_CDevices_CPointOfService_CUnifiedPosErrorSeverity* value);
    HRESULT (STDMETHODCALLTYPE* get_Reason)(__x_ABI_CWindows_CDevices_CPointOfService_CIUnifiedPosErrorData* This,
        enum __x_ABI_CWindows_CDevices_CPointOfService_CUnifiedPosErrorReason* value);
    HRESULT (STDMETHODCALLTYPE* get_ExtendedReason)(__x_ABI_CWindows_CDevices_CPointOfService_CIUnifiedPosErrorData* This,
        UINT32* value);

        END_INTERFACE
    } __x_ABI_CWindows_CDevices_CPointOfService_CIUnifiedPosErrorDataVtbl;

    interface __x_ABI_CWindows_CDevices_CPointOfService_CIUnifiedPosErrorData
    {
        CONST_VTBL struct __x_ABI_CWindows_CDevices_CPointOfService_CIUnifiedPosErrorDataVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CDevices_CPointOfService_CIUnifiedPosErrorData;
#endif /* !defined(____x_ABI_CWindows_CDevices_CPointOfService_CIUnifiedPosErrorData_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CDevices_CPointOfService_CIUnifiedPosErrorDataFactory_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CDevices_CPointOfService_CIUnifiedPosErrorDataFactory_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CDevices_CPointOfService_CIUnifiedPosErrorDataFactoryVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CDevices_CPointOfService_CIUnifiedPosErrorDataFactory* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CDevices_CPointOfService_CIUnifiedPosErrorDataFactory* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CDevices_CPointOfService_CIUnifiedPosErrorDataFactory* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CDevices_CPointOfService_CIUnifiedPosErrorDataFactory* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CDevices_CPointOfService_CIUnifiedPosErrorDataFactory* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CDevices_CPointOfService_CIUnifiedPosErrorDataFactory* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* CreateInstance)(__x_ABI_CWindows_CDevices_CPointOfService_CIUnifiedPosErrorDataFactory* This,
        HSTRING message,
        enum __x_ABI_CWindows_CDevices_CPointOfService_CUnifiedPosErrorSeverity severity,
        enum __x_ABI_CWindows_CDevices_CPointOfService_CUnifiedPosErrorReason reason,
        UINT32 extendedReason,
        __x_ABI_CWindows_CDevices_CPointOfService_CIUnifiedPosErrorData** result);

        END_INTERFACE
    } __x_ABI_CWindows_CDevices_CPointOfService_CIUnifiedPosErrorDataFactoryVtbl;

    interface __x_ABI_CWindows_CDevices_CPointOfService_CIUnifiedPosErrorDataFactory
    {
        CONST_VTBL struct __x_ABI_CWindows_CDevices_CPointOfService_CIUnifiedPosErrorDataFactoryVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CDevices_CPointOfService_CIUnifiedPosErrorDataFactory;
#endif /* !defined(____x_ABI_CWindows_CDevices_CPointOfService_CIUnifiedPosErrorDataFactory_INTERFACE_DEFINED__) */
    
