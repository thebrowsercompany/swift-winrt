// WARNING: Please don't edit this file. It was generated by Swift/WinRT v0.0.1

#pragma once
// Header files for imported files
#include <inspectable.h>
#include <EventToken.h>
#include <windowscontracts.h>
#include "Windows.Foundation.h"

/* Forward Declarations */
#ifndef ____x_ABI_CWindows_CSystem_CPower_CIBackgroundEnergyManagerStatics_FWD_DEFINED__
#define ____x_ABI_CWindows_CSystem_CPower_CIBackgroundEnergyManagerStatics_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CSystem_CPower_CIBackgroundEnergyManagerStatics __x_ABI_CWindows_CSystem_CPower_CIBackgroundEnergyManagerStatics;

#endif // ____x_ABI_CWindows_CSystem_CPower_CIBackgroundEnergyManagerStatics_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CSystem_CPower_CIForegroundEnergyManagerStatics_FWD_DEFINED__
#define ____x_ABI_CWindows_CSystem_CPower_CIForegroundEnergyManagerStatics_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CSystem_CPower_CIForegroundEnergyManagerStatics __x_ABI_CWindows_CSystem_CPower_CIForegroundEnergyManagerStatics;

#endif // ____x_ABI_CWindows_CSystem_CPower_CIForegroundEnergyManagerStatics_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CSystem_CPower_CIPowerManagerStatics_FWD_DEFINED__
#define ____x_ABI_CWindows_CSystem_CPower_CIPowerManagerStatics_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CSystem_CPower_CIPowerManagerStatics __x_ABI_CWindows_CSystem_CPower_CIPowerManagerStatics;

#endif // ____x_ABI_CWindows_CSystem_CPower_CIPowerManagerStatics_FWD_DEFINED__

// Parameterized interface forward declarations (C)

// Collection interface definitions

#if !defined(____x_ABI_C__FIEventHandler_1_IInspectable_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIEventHandler_1_IInspectable_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIEventHandler_1_IInspectable __x_ABI_C__FIEventHandler_1_IInspectable;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIEventHandler_1_IInspectable;

    typedef struct __x_ABI_C__FIEventHandler_1_IInspectableVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIEventHandler_1_IInspectable* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIEventHandler_1_IInspectable* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIEventHandler_1_IInspectable* This);
        HRESULT (STDMETHODCALLTYPE* Invoke)(__x_ABI_C__FIEventHandler_1_IInspectable* This,
        IInspectable* sender,
        IInspectable* args);

        END_INTERFACE
    } __x_ABI_C__FIEventHandler_1_IInspectableVtbl;

    interface __x_ABI_C__FIEventHandler_1_IInspectable
    {
        CONST_VTBL struct __x_ABI_C__FIEventHandler_1_IInspectableVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIEventHandler_1_IInspectable_INTERFACE_DEFINED__
    
typedef struct __x_ABI_CWindows_CFoundation_CTimeSpan __x_ABI_CWindows_CFoundation_CTimeSpan;

typedef enum __x_ABI_CWindows_CSystem_CPower_CBatteryStatus __x_ABI_CWindows_CSystem_CPower_CBatteryStatus;

typedef enum __x_ABI_CWindows_CSystem_CPower_CEnergySaverStatus __x_ABI_CWindows_CSystem_CPower_CEnergySaverStatus;

typedef enum __x_ABI_CWindows_CSystem_CPower_CPowerSupplyStatus __x_ABI_CWindows_CSystem_CPower_CPowerSupplyStatus;

enum __x_ABI_CWindows_CSystem_CPower_CBatteryStatus
    {
        __x_ABI_CWindows_CSystem_CPower_CBatteryStatus_NotPresent = 0,
    __x_ABI_CWindows_CSystem_CPower_CBatteryStatus_Discharging = 1,
    __x_ABI_CWindows_CSystem_CPower_CBatteryStatus_Idle = 2,
    __x_ABI_CWindows_CSystem_CPower_CBatteryStatus_Charging = 3,
};

enum __x_ABI_CWindows_CSystem_CPower_CEnergySaverStatus
    {
        __x_ABI_CWindows_CSystem_CPower_CEnergySaverStatus_Disabled = 0,
    __x_ABI_CWindows_CSystem_CPower_CEnergySaverStatus_Off = 1,
    __x_ABI_CWindows_CSystem_CPower_CEnergySaverStatus_On = 2,
};

enum __x_ABI_CWindows_CSystem_CPower_CPowerSupplyStatus
    {
        __x_ABI_CWindows_CSystem_CPower_CPowerSupplyStatus_NotPresent = 0,
    __x_ABI_CWindows_CSystem_CPower_CPowerSupplyStatus_Inadequate = 1,
    __x_ABI_CWindows_CSystem_CPower_CPowerSupplyStatus_Adequate = 2,
};

#if !defined(____x_ABI_CWindows_CSystem_CPower_CIBackgroundEnergyManagerStatics_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CSystem_CPower_CIBackgroundEnergyManagerStatics_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CSystem_CPower_CIBackgroundEnergyManagerStaticsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CSystem_CPower_CIBackgroundEnergyManagerStatics* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CSystem_CPower_CIBackgroundEnergyManagerStatics* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CSystem_CPower_CIBackgroundEnergyManagerStatics* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CSystem_CPower_CIBackgroundEnergyManagerStatics* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CSystem_CPower_CIBackgroundEnergyManagerStatics* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CSystem_CPower_CIBackgroundEnergyManagerStatics* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_LowUsageLevel)(__x_ABI_CWindows_CSystem_CPower_CIBackgroundEnergyManagerStatics* This,
        UINT32* value);
    HRESULT (STDMETHODCALLTYPE* get_NearMaxAcceptableUsageLevel)(__x_ABI_CWindows_CSystem_CPower_CIBackgroundEnergyManagerStatics* This,
        UINT32* value);
    HRESULT (STDMETHODCALLTYPE* get_MaxAcceptableUsageLevel)(__x_ABI_CWindows_CSystem_CPower_CIBackgroundEnergyManagerStatics* This,
        UINT32* value);
    HRESULT (STDMETHODCALLTYPE* get_ExcessiveUsageLevel)(__x_ABI_CWindows_CSystem_CPower_CIBackgroundEnergyManagerStatics* This,
        UINT32* value);
    HRESULT (STDMETHODCALLTYPE* get_NearTerminationUsageLevel)(__x_ABI_CWindows_CSystem_CPower_CIBackgroundEnergyManagerStatics* This,
        UINT32* value);
    HRESULT (STDMETHODCALLTYPE* get_TerminationUsageLevel)(__x_ABI_CWindows_CSystem_CPower_CIBackgroundEnergyManagerStatics* This,
        UINT32* value);
    HRESULT (STDMETHODCALLTYPE* get_RecentEnergyUsage)(__x_ABI_CWindows_CSystem_CPower_CIBackgroundEnergyManagerStatics* This,
        UINT32* value);
    HRESULT (STDMETHODCALLTYPE* get_RecentEnergyUsageLevel)(__x_ABI_CWindows_CSystem_CPower_CIBackgroundEnergyManagerStatics* This,
        UINT32* value);
    HRESULT (STDMETHODCALLTYPE* add_RecentEnergyUsageIncreased)(__x_ABI_CWindows_CSystem_CPower_CIBackgroundEnergyManagerStatics* This,
        __x_ABI_C__FIEventHandler_1_IInspectable* handler,
        EventRegistrationToken* token);
    HRESULT (STDMETHODCALLTYPE* remove_RecentEnergyUsageIncreased)(__x_ABI_CWindows_CSystem_CPower_CIBackgroundEnergyManagerStatics* This,
        EventRegistrationToken token);
    HRESULT (STDMETHODCALLTYPE* add_RecentEnergyUsageReturnedToLow)(__x_ABI_CWindows_CSystem_CPower_CIBackgroundEnergyManagerStatics* This,
        __x_ABI_C__FIEventHandler_1_IInspectable* handler,
        EventRegistrationToken* token);
    HRESULT (STDMETHODCALLTYPE* remove_RecentEnergyUsageReturnedToLow)(__x_ABI_CWindows_CSystem_CPower_CIBackgroundEnergyManagerStatics* This,
        EventRegistrationToken token);

        END_INTERFACE
    } __x_ABI_CWindows_CSystem_CPower_CIBackgroundEnergyManagerStaticsVtbl;

    interface __x_ABI_CWindows_CSystem_CPower_CIBackgroundEnergyManagerStatics
    {
        CONST_VTBL struct __x_ABI_CWindows_CSystem_CPower_CIBackgroundEnergyManagerStaticsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CSystem_CPower_CIBackgroundEnergyManagerStatics;
#endif /* !defined(____x_ABI_CWindows_CSystem_CPower_CIBackgroundEnergyManagerStatics_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CSystem_CPower_CIForegroundEnergyManagerStatics_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CSystem_CPower_CIForegroundEnergyManagerStatics_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CSystem_CPower_CIForegroundEnergyManagerStaticsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CSystem_CPower_CIForegroundEnergyManagerStatics* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CSystem_CPower_CIForegroundEnergyManagerStatics* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CSystem_CPower_CIForegroundEnergyManagerStatics* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CSystem_CPower_CIForegroundEnergyManagerStatics* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CSystem_CPower_CIForegroundEnergyManagerStatics* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CSystem_CPower_CIForegroundEnergyManagerStatics* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_LowUsageLevel)(__x_ABI_CWindows_CSystem_CPower_CIForegroundEnergyManagerStatics* This,
        UINT32* value);
    HRESULT (STDMETHODCALLTYPE* get_NearMaxAcceptableUsageLevel)(__x_ABI_CWindows_CSystem_CPower_CIForegroundEnergyManagerStatics* This,
        UINT32* value);
    HRESULT (STDMETHODCALLTYPE* get_MaxAcceptableUsageLevel)(__x_ABI_CWindows_CSystem_CPower_CIForegroundEnergyManagerStatics* This,
        UINT32* value);
    HRESULT (STDMETHODCALLTYPE* get_ExcessiveUsageLevel)(__x_ABI_CWindows_CSystem_CPower_CIForegroundEnergyManagerStatics* This,
        UINT32* value);
    HRESULT (STDMETHODCALLTYPE* get_RecentEnergyUsage)(__x_ABI_CWindows_CSystem_CPower_CIForegroundEnergyManagerStatics* This,
        UINT32* value);
    HRESULT (STDMETHODCALLTYPE* get_RecentEnergyUsageLevel)(__x_ABI_CWindows_CSystem_CPower_CIForegroundEnergyManagerStatics* This,
        UINT32* value);
    HRESULT (STDMETHODCALLTYPE* add_RecentEnergyUsageIncreased)(__x_ABI_CWindows_CSystem_CPower_CIForegroundEnergyManagerStatics* This,
        __x_ABI_C__FIEventHandler_1_IInspectable* handler,
        EventRegistrationToken* token);
    HRESULT (STDMETHODCALLTYPE* remove_RecentEnergyUsageIncreased)(__x_ABI_CWindows_CSystem_CPower_CIForegroundEnergyManagerStatics* This,
        EventRegistrationToken token);
    HRESULT (STDMETHODCALLTYPE* add_RecentEnergyUsageReturnedToLow)(__x_ABI_CWindows_CSystem_CPower_CIForegroundEnergyManagerStatics* This,
        __x_ABI_C__FIEventHandler_1_IInspectable* handler,
        EventRegistrationToken* token);
    HRESULT (STDMETHODCALLTYPE* remove_RecentEnergyUsageReturnedToLow)(__x_ABI_CWindows_CSystem_CPower_CIForegroundEnergyManagerStatics* This,
        EventRegistrationToken token);

        END_INTERFACE
    } __x_ABI_CWindows_CSystem_CPower_CIForegroundEnergyManagerStaticsVtbl;

    interface __x_ABI_CWindows_CSystem_CPower_CIForegroundEnergyManagerStatics
    {
        CONST_VTBL struct __x_ABI_CWindows_CSystem_CPower_CIForegroundEnergyManagerStaticsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CSystem_CPower_CIForegroundEnergyManagerStatics;
#endif /* !defined(____x_ABI_CWindows_CSystem_CPower_CIForegroundEnergyManagerStatics_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CSystem_CPower_CIPowerManagerStatics_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CSystem_CPower_CIPowerManagerStatics_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CSystem_CPower_CIPowerManagerStaticsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CSystem_CPower_CIPowerManagerStatics* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CSystem_CPower_CIPowerManagerStatics* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CSystem_CPower_CIPowerManagerStatics* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CSystem_CPower_CIPowerManagerStatics* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CSystem_CPower_CIPowerManagerStatics* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CSystem_CPower_CIPowerManagerStatics* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_EnergySaverStatus)(__x_ABI_CWindows_CSystem_CPower_CIPowerManagerStatics* This,
        enum __x_ABI_CWindows_CSystem_CPower_CEnergySaverStatus* value);
    HRESULT (STDMETHODCALLTYPE* add_EnergySaverStatusChanged)(__x_ABI_CWindows_CSystem_CPower_CIPowerManagerStatics* This,
        __x_ABI_C__FIEventHandler_1_IInspectable* handler,
        EventRegistrationToken* token);
    HRESULT (STDMETHODCALLTYPE* remove_EnergySaverStatusChanged)(__x_ABI_CWindows_CSystem_CPower_CIPowerManagerStatics* This,
        EventRegistrationToken token);
    HRESULT (STDMETHODCALLTYPE* get_BatteryStatus)(__x_ABI_CWindows_CSystem_CPower_CIPowerManagerStatics* This,
        enum __x_ABI_CWindows_CSystem_CPower_CBatteryStatus* value);
    HRESULT (STDMETHODCALLTYPE* add_BatteryStatusChanged)(__x_ABI_CWindows_CSystem_CPower_CIPowerManagerStatics* This,
        __x_ABI_C__FIEventHandler_1_IInspectable* handler,
        EventRegistrationToken* token);
    HRESULT (STDMETHODCALLTYPE* remove_BatteryStatusChanged)(__x_ABI_CWindows_CSystem_CPower_CIPowerManagerStatics* This,
        EventRegistrationToken token);
    HRESULT (STDMETHODCALLTYPE* get_PowerSupplyStatus)(__x_ABI_CWindows_CSystem_CPower_CIPowerManagerStatics* This,
        enum __x_ABI_CWindows_CSystem_CPower_CPowerSupplyStatus* value);
    HRESULT (STDMETHODCALLTYPE* add_PowerSupplyStatusChanged)(__x_ABI_CWindows_CSystem_CPower_CIPowerManagerStatics* This,
        __x_ABI_C__FIEventHandler_1_IInspectable* handler,
        EventRegistrationToken* token);
    HRESULT (STDMETHODCALLTYPE* remove_PowerSupplyStatusChanged)(__x_ABI_CWindows_CSystem_CPower_CIPowerManagerStatics* This,
        EventRegistrationToken token);
    HRESULT (STDMETHODCALLTYPE* get_RemainingChargePercent)(__x_ABI_CWindows_CSystem_CPower_CIPowerManagerStatics* This,
        INT32* value);
    HRESULT (STDMETHODCALLTYPE* add_RemainingChargePercentChanged)(__x_ABI_CWindows_CSystem_CPower_CIPowerManagerStatics* This,
        __x_ABI_C__FIEventHandler_1_IInspectable* handler,
        EventRegistrationToken* token);
    HRESULT (STDMETHODCALLTYPE* remove_RemainingChargePercentChanged)(__x_ABI_CWindows_CSystem_CPower_CIPowerManagerStatics* This,
        EventRegistrationToken token);
    HRESULT (STDMETHODCALLTYPE* get_RemainingDischargeTime)(__x_ABI_CWindows_CSystem_CPower_CIPowerManagerStatics* This,
        struct __x_ABI_CWindows_CFoundation_CTimeSpan* value);
    HRESULT (STDMETHODCALLTYPE* add_RemainingDischargeTimeChanged)(__x_ABI_CWindows_CSystem_CPower_CIPowerManagerStatics* This,
        __x_ABI_C__FIEventHandler_1_IInspectable* handler,
        EventRegistrationToken* token);
    HRESULT (STDMETHODCALLTYPE* remove_RemainingDischargeTimeChanged)(__x_ABI_CWindows_CSystem_CPower_CIPowerManagerStatics* This,
        EventRegistrationToken token);

        END_INTERFACE
    } __x_ABI_CWindows_CSystem_CPower_CIPowerManagerStaticsVtbl;

    interface __x_ABI_CWindows_CSystem_CPower_CIPowerManagerStatics
    {
        CONST_VTBL struct __x_ABI_CWindows_CSystem_CPower_CIPowerManagerStaticsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CSystem_CPower_CIPowerManagerStatics;
#endif /* !defined(____x_ABI_CWindows_CSystem_CPower_CIPowerManagerStatics_INTERFACE_DEFINED__) */
    
