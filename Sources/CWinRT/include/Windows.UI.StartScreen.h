// WARNING: Please don't edit this file. It was generated by Swift/WinRT v0.0.1

#pragma once
// Header files for imported files
#include <inspectable.h>
#include <EventToken.h>
#include <windowscontracts.h>
#include "Windows.Foundation.h"
#include "Windows.ApplicationModel.Core.h"
#include "Windows.Perception.Spatial.h"
#include "Windows.System.h"
#include "Windows.UI.h"
#include "Windows.UI.Popups.h"
// Importing Collections header
#include "Windows.Foundation.Collections.h"

/* Forward Declarations */
#ifndef ____x_ABI_CWindows_CUI_CStartScreen_CIJumpList_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CStartScreen_CIJumpList_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CStartScreen_CIJumpList __x_ABI_CWindows_CUI_CStartScreen_CIJumpList;

#endif // ____x_ABI_CWindows_CUI_CStartScreen_CIJumpList_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CStartScreen_CIJumpListItem_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CStartScreen_CIJumpListItem_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CStartScreen_CIJumpListItem __x_ABI_CWindows_CUI_CStartScreen_CIJumpListItem;

#endif // ____x_ABI_CWindows_CUI_CStartScreen_CIJumpListItem_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CStartScreen_CIJumpListItemStatics_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CStartScreen_CIJumpListItemStatics_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CStartScreen_CIJumpListItemStatics __x_ABI_CWindows_CUI_CStartScreen_CIJumpListItemStatics;

#endif // ____x_ABI_CWindows_CUI_CStartScreen_CIJumpListItemStatics_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CStartScreen_CIJumpListStatics_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CStartScreen_CIJumpListStatics_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CStartScreen_CIJumpListStatics __x_ABI_CWindows_CUI_CStartScreen_CIJumpListStatics;

#endif // ____x_ABI_CWindows_CUI_CStartScreen_CIJumpListStatics_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CStartScreen_CISecondaryTile_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CStartScreen_CISecondaryTile_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CStartScreen_CISecondaryTile __x_ABI_CWindows_CUI_CStartScreen_CISecondaryTile;

#endif // ____x_ABI_CWindows_CUI_CStartScreen_CISecondaryTile_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CStartScreen_CISecondaryTile2_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CStartScreen_CISecondaryTile2_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CStartScreen_CISecondaryTile2 __x_ABI_CWindows_CUI_CStartScreen_CISecondaryTile2;

#endif // ____x_ABI_CWindows_CUI_CStartScreen_CISecondaryTile2_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CStartScreen_CISecondaryTileFactory_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CStartScreen_CISecondaryTileFactory_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CStartScreen_CISecondaryTileFactory __x_ABI_CWindows_CUI_CStartScreen_CISecondaryTileFactory;

#endif // ____x_ABI_CWindows_CUI_CStartScreen_CISecondaryTileFactory_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CStartScreen_CISecondaryTileFactory2_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CStartScreen_CISecondaryTileFactory2_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CStartScreen_CISecondaryTileFactory2 __x_ABI_CWindows_CUI_CStartScreen_CISecondaryTileFactory2;

#endif // ____x_ABI_CWindows_CUI_CStartScreen_CISecondaryTileFactory2_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CStartScreen_CISecondaryTileStatics_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CStartScreen_CISecondaryTileStatics_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CStartScreen_CISecondaryTileStatics __x_ABI_CWindows_CUI_CStartScreen_CISecondaryTileStatics;

#endif // ____x_ABI_CWindows_CUI_CStartScreen_CISecondaryTileStatics_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CStartScreen_CISecondaryTileVisualElements_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CStartScreen_CISecondaryTileVisualElements_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CStartScreen_CISecondaryTileVisualElements __x_ABI_CWindows_CUI_CStartScreen_CISecondaryTileVisualElements;

#endif // ____x_ABI_CWindows_CUI_CStartScreen_CISecondaryTileVisualElements_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CStartScreen_CISecondaryTileVisualElements2_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CStartScreen_CISecondaryTileVisualElements2_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CStartScreen_CISecondaryTileVisualElements2 __x_ABI_CWindows_CUI_CStartScreen_CISecondaryTileVisualElements2;

#endif // ____x_ABI_CWindows_CUI_CStartScreen_CISecondaryTileVisualElements2_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CStartScreen_CISecondaryTileVisualElements3_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CStartScreen_CISecondaryTileVisualElements3_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CStartScreen_CISecondaryTileVisualElements3 __x_ABI_CWindows_CUI_CStartScreen_CISecondaryTileVisualElements3;

#endif // ____x_ABI_CWindows_CUI_CStartScreen_CISecondaryTileVisualElements3_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CStartScreen_CISecondaryTileVisualElements4_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CStartScreen_CISecondaryTileVisualElements4_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CStartScreen_CISecondaryTileVisualElements4 __x_ABI_CWindows_CUI_CStartScreen_CISecondaryTileVisualElements4;

#endif // ____x_ABI_CWindows_CUI_CStartScreen_CISecondaryTileVisualElements4_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CStartScreen_CIStartScreenManager_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CStartScreen_CIStartScreenManager_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CStartScreen_CIStartScreenManager __x_ABI_CWindows_CUI_CStartScreen_CIStartScreenManager;

#endif // ____x_ABI_CWindows_CUI_CStartScreen_CIStartScreenManager_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CStartScreen_CIStartScreenManager2_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CStartScreen_CIStartScreenManager2_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CStartScreen_CIStartScreenManager2 __x_ABI_CWindows_CUI_CStartScreen_CIStartScreenManager2;

#endif // ____x_ABI_CWindows_CUI_CStartScreen_CIStartScreenManager2_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CStartScreen_CIStartScreenManagerStatics_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CStartScreen_CIStartScreenManagerStatics_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CStartScreen_CIStartScreenManagerStatics __x_ABI_CWindows_CUI_CStartScreen_CIStartScreenManagerStatics;

#endif // ____x_ABI_CWindows_CUI_CStartScreen_CIStartScreenManagerStatics_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CStartScreen_CITileMixedRealityModel_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CStartScreen_CITileMixedRealityModel_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CStartScreen_CITileMixedRealityModel __x_ABI_CWindows_CUI_CStartScreen_CITileMixedRealityModel;

#endif // ____x_ABI_CWindows_CUI_CStartScreen_CITileMixedRealityModel_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CStartScreen_CITileMixedRealityModel2_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CStartScreen_CITileMixedRealityModel2_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CStartScreen_CITileMixedRealityModel2 __x_ABI_CWindows_CUI_CStartScreen_CITileMixedRealityModel2;

#endif // ____x_ABI_CWindows_CUI_CStartScreen_CITileMixedRealityModel2_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CStartScreen_CIVisualElementsRequest_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CStartScreen_CIVisualElementsRequest_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CStartScreen_CIVisualElementsRequest __x_ABI_CWindows_CUI_CStartScreen_CIVisualElementsRequest;

#endif // ____x_ABI_CWindows_CUI_CStartScreen_CIVisualElementsRequest_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CStartScreen_CIVisualElementsRequestDeferral_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CStartScreen_CIVisualElementsRequestDeferral_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CStartScreen_CIVisualElementsRequestDeferral __x_ABI_CWindows_CUI_CStartScreen_CIVisualElementsRequestDeferral;

#endif // ____x_ABI_CWindows_CUI_CStartScreen_CIVisualElementsRequestDeferral_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CStartScreen_CIVisualElementsRequestedEventArgs_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CStartScreen_CIVisualElementsRequestedEventArgs_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CStartScreen_CIVisualElementsRequestedEventArgs __x_ABI_CWindows_CUI_CStartScreen_CIVisualElementsRequestedEventArgs;

#endif // ____x_ABI_CWindows_CUI_CStartScreen_CIVisualElementsRequestedEventArgs_FWD_DEFINED__

// Parameterized interface forward declarations (C)

// Collection interface definitions

typedef interface __x_ABI_C__FIAsyncOperationCompletedHandler_1_boolean __x_ABI_C__FIAsyncOperationCompletedHandler_1_boolean;

#if !defined(____x_ABI_C__FIAsyncOperation_1_boolean_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIAsyncOperation_1_boolean_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIAsyncOperation_1_boolean __x_ABI_C__FIAsyncOperation_1_boolean;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIAsyncOperation_1_boolean;

    typedef struct __x_ABI_C__FIAsyncOperation_1_booleanVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIAsyncOperation_1_boolean* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIAsyncOperation_1_boolean* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIAsyncOperation_1_boolean* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIAsyncOperation_1_boolean* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIAsyncOperation_1_boolean* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIAsyncOperation_1_boolean* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* put_Completed)(__x_ABI_C__FIAsyncOperation_1_boolean* This,
        __x_ABI_C__FIAsyncOperationCompletedHandler_1_boolean* handler);
    HRESULT (STDMETHODCALLTYPE* get_Completed)(__x_ABI_C__FIAsyncOperation_1_boolean* This,
        __x_ABI_C__FIAsyncOperationCompletedHandler_1_boolean** result);
    HRESULT (STDMETHODCALLTYPE* GetResults)(__x_ABI_C__FIAsyncOperation_1_boolean* This,
        boolean* result);

        END_INTERFACE
    } __x_ABI_C__FIAsyncOperation_1_booleanVtbl;

    interface __x_ABI_C__FIAsyncOperation_1_boolean
    {
        CONST_VTBL struct __x_ABI_C__FIAsyncOperation_1_booleanVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIAsyncOperation_1_boolean_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIAsyncOperationCompletedHandler_1_boolean_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIAsyncOperationCompletedHandler_1_boolean_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIAsyncOperationCompletedHandler_1_boolean __x_ABI_C__FIAsyncOperationCompletedHandler_1_boolean;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIAsyncOperationCompletedHandler_1_boolean;

    typedef struct __x_ABI_C__FIAsyncOperationCompletedHandler_1_booleanVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIAsyncOperationCompletedHandler_1_boolean* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIAsyncOperationCompletedHandler_1_boolean* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIAsyncOperationCompletedHandler_1_boolean* This);
        HRESULT (STDMETHODCALLTYPE* Invoke)(__x_ABI_C__FIAsyncOperationCompletedHandler_1_boolean* This,
        __x_ABI_C__FIAsyncOperation_1_boolean* asyncInfo,
        enum __x_ABI_CWindows_CFoundation_CAsyncStatus asyncStatus);

        END_INTERFACE
    } __x_ABI_C__FIAsyncOperationCompletedHandler_1_booleanVtbl;

    interface __x_ABI_C__FIAsyncOperationCompletedHandler_1_boolean
    {
        CONST_VTBL struct __x_ABI_C__FIAsyncOperationCompletedHandler_1_booleanVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIAsyncOperationCompletedHandler_1_boolean_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CStartScreen__CSecondaryTile_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CStartScreen__CSecondaryTile_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CStartScreen__CSecondaryTile __x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CStartScreen__CSecondaryTile;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CStartScreen__CSecondaryTile;

    typedef struct __x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CStartScreen__CSecondaryTileVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CStartScreen__CSecondaryTile* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CStartScreen__CSecondaryTile* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CStartScreen__CSecondaryTile* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CStartScreen__CSecondaryTile* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CStartScreen__CSecondaryTile* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CStartScreen__CSecondaryTile* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Current)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CStartScreen__CSecondaryTile* This,
        __x_ABI_CWindows_CUI_CStartScreen_CISecondaryTile** result);
    HRESULT (STDMETHODCALLTYPE* get_HasCurrent)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CStartScreen__CSecondaryTile* This,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* MoveNext)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CStartScreen__CSecondaryTile* This,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CStartScreen__CSecondaryTile* This,
        UINT32 itemsLength,
        __x_ABI_CWindows_CUI_CStartScreen_CISecondaryTile** items,
        UINT32* result);

        END_INTERFACE
    } __x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CStartScreen__CSecondaryTileVtbl;

    interface __x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CStartScreen__CSecondaryTile
    {
        CONST_VTBL struct __x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CStartScreen__CSecondaryTileVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CStartScreen__CSecondaryTile_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIIterable_1___x_ABI_CWindows__CUI__CStartScreen__CSecondaryTile_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIIterable_1___x_ABI_CWindows__CUI__CStartScreen__CSecondaryTile_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIIterable_1___x_ABI_CWindows__CUI__CStartScreen__CSecondaryTile __x_ABI_C__FIIterable_1___x_ABI_CWindows__CUI__CStartScreen__CSecondaryTile;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIIterable_1___x_ABI_CWindows__CUI__CStartScreen__CSecondaryTile;

    typedef struct __x_ABI_C__FIIterable_1___x_ABI_CWindows__CUI__CStartScreen__CSecondaryTileVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CUI__CStartScreen__CSecondaryTile* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CUI__CStartScreen__CSecondaryTile* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CUI__CStartScreen__CSecondaryTile* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CUI__CStartScreen__CSecondaryTile* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CUI__CStartScreen__CSecondaryTile* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CUI__CStartScreen__CSecondaryTile* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* First)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CUI__CStartScreen__CSecondaryTile* This,
        __x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CStartScreen__CSecondaryTile** result);

        END_INTERFACE
    } __x_ABI_C__FIIterable_1___x_ABI_CWindows__CUI__CStartScreen__CSecondaryTileVtbl;

    interface __x_ABI_C__FIIterable_1___x_ABI_CWindows__CUI__CStartScreen__CSecondaryTile
    {
        CONST_VTBL struct __x_ABI_C__FIIterable_1___x_ABI_CWindows__CUI__CStartScreen__CSecondaryTileVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIIterable_1___x_ABI_CWindows__CUI__CStartScreen__CSecondaryTile_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CStartScreen__CSecondaryTile_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CStartScreen__CSecondaryTile_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CStartScreen__CSecondaryTile __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CStartScreen__CSecondaryTile;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CStartScreen__CSecondaryTile;

    typedef struct __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CStartScreen__CSecondaryTileVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CStartScreen__CSecondaryTile* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CStartScreen__CSecondaryTile* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CStartScreen__CSecondaryTile* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CStartScreen__CSecondaryTile* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CStartScreen__CSecondaryTile* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CStartScreen__CSecondaryTile* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* GetAt)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CStartScreen__CSecondaryTile* This,
        UINT32 index,
        __x_ABI_CWindows_CUI_CStartScreen_CISecondaryTile** result);
    HRESULT (STDMETHODCALLTYPE* get_Size)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CStartScreen__CSecondaryTile* This,
        UINT32* result);
    HRESULT (STDMETHODCALLTYPE* IndexOf)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CStartScreen__CSecondaryTile* This,
        __x_ABI_CWindows_CUI_CStartScreen_CISecondaryTile* value,
        UINT32* index,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CStartScreen__CSecondaryTile* This,
        UINT32 startIndex,
        UINT32 itemsLength,
        __x_ABI_CWindows_CUI_CStartScreen_CISecondaryTile** items,
        UINT32* result);

        END_INTERFACE
    } __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CStartScreen__CSecondaryTileVtbl;

    interface __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CStartScreen__CSecondaryTile
    {
        CONST_VTBL struct __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CStartScreen__CSecondaryTileVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CStartScreen__CSecondaryTile_INTERFACE_DEFINED__
    
typedef interface __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CStartScreen__CSecondaryTile __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CStartScreen__CSecondaryTile;

#if !defined(____x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CStartScreen__CSecondaryTile_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CStartScreen__CSecondaryTile_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CStartScreen__CSecondaryTile __x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CStartScreen__CSecondaryTile;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CStartScreen__CSecondaryTile;

    typedef struct __x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CStartScreen__CSecondaryTileVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CStartScreen__CSecondaryTile* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CStartScreen__CSecondaryTile* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CStartScreen__CSecondaryTile* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CStartScreen__CSecondaryTile* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CStartScreen__CSecondaryTile* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CStartScreen__CSecondaryTile* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* put_Completed)(__x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CStartScreen__CSecondaryTile* This,
        __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CStartScreen__CSecondaryTile* handler);
    HRESULT (STDMETHODCALLTYPE* get_Completed)(__x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CStartScreen__CSecondaryTile* This,
        __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CStartScreen__CSecondaryTile** result);
    HRESULT (STDMETHODCALLTYPE* GetResults)(__x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CStartScreen__CSecondaryTile* This,
        __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CStartScreen__CSecondaryTile** result);

        END_INTERFACE
    } __x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CStartScreen__CSecondaryTileVtbl;

    interface __x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CStartScreen__CSecondaryTile
    {
        CONST_VTBL struct __x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CStartScreen__CSecondaryTileVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CStartScreen__CSecondaryTile_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CStartScreen__CSecondaryTile_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CStartScreen__CSecondaryTile_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CStartScreen__CSecondaryTile __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CStartScreen__CSecondaryTile;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CStartScreen__CSecondaryTile;

    typedef struct __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CStartScreen__CSecondaryTileVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CStartScreen__CSecondaryTile* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CStartScreen__CSecondaryTile* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CStartScreen__CSecondaryTile* This);
        HRESULT (STDMETHODCALLTYPE* Invoke)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CStartScreen__CSecondaryTile* This,
        __x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CStartScreen__CSecondaryTile* asyncInfo,
        enum __x_ABI_CWindows_CFoundation_CAsyncStatus asyncStatus);

        END_INTERFACE
    } __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CStartScreen__CSecondaryTileVtbl;

    interface __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CStartScreen__CSecondaryTile
    {
        CONST_VTBL struct __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CStartScreen__CSecondaryTileVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CStartScreen__CSecondaryTile_INTERFACE_DEFINED__
    
typedef interface __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CUI__CStartScreen__CJumpList __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CUI__CStartScreen__CJumpList;

#if !defined(____x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CUI__CStartScreen__CJumpList_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CUI__CStartScreen__CJumpList_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CUI__CStartScreen__CJumpList __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CUI__CStartScreen__CJumpList;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CUI__CStartScreen__CJumpList;

    typedef struct __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CUI__CStartScreen__CJumpListVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CUI__CStartScreen__CJumpList* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CUI__CStartScreen__CJumpList* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CUI__CStartScreen__CJumpList* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CUI__CStartScreen__CJumpList* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CUI__CStartScreen__CJumpList* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CUI__CStartScreen__CJumpList* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* put_Completed)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CUI__CStartScreen__CJumpList* This,
        __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CUI__CStartScreen__CJumpList* handler);
    HRESULT (STDMETHODCALLTYPE* get_Completed)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CUI__CStartScreen__CJumpList* This,
        __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CUI__CStartScreen__CJumpList** result);
    HRESULT (STDMETHODCALLTYPE* GetResults)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CUI__CStartScreen__CJumpList* This,
        __x_ABI_CWindows_CUI_CStartScreen_CIJumpList** result);

        END_INTERFACE
    } __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CUI__CStartScreen__CJumpListVtbl;

    interface __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CUI__CStartScreen__CJumpList
    {
        CONST_VTBL struct __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CUI__CStartScreen__CJumpListVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CUI__CStartScreen__CJumpList_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CUI__CStartScreen__CJumpList_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CUI__CStartScreen__CJumpList_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CUI__CStartScreen__CJumpList __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CUI__CStartScreen__CJumpList;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CUI__CStartScreen__CJumpList;

    typedef struct __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CUI__CStartScreen__CJumpListVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CUI__CStartScreen__CJumpList* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CUI__CStartScreen__CJumpList* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CUI__CStartScreen__CJumpList* This);
        HRESULT (STDMETHODCALLTYPE* Invoke)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CUI__CStartScreen__CJumpList* This,
        __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CUI__CStartScreen__CJumpList* asyncInfo,
        enum __x_ABI_CWindows_CFoundation_CAsyncStatus asyncStatus);

        END_INTERFACE
    } __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CUI__CStartScreen__CJumpListVtbl;

    interface __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CUI__CStartScreen__CJumpList
    {
        CONST_VTBL struct __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CUI__CStartScreen__CJumpListVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CUI__CStartScreen__CJumpList_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CStartScreen__CJumpListItem_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CStartScreen__CJumpListItem_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CStartScreen__CJumpListItem __x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CStartScreen__CJumpListItem;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CStartScreen__CJumpListItem;

    typedef struct __x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CStartScreen__CJumpListItemVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CStartScreen__CJumpListItem* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CStartScreen__CJumpListItem* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CStartScreen__CJumpListItem* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CStartScreen__CJumpListItem* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CStartScreen__CJumpListItem* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CStartScreen__CJumpListItem* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Current)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CStartScreen__CJumpListItem* This,
        __x_ABI_CWindows_CUI_CStartScreen_CIJumpListItem** result);
    HRESULT (STDMETHODCALLTYPE* get_HasCurrent)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CStartScreen__CJumpListItem* This,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* MoveNext)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CStartScreen__CJumpListItem* This,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CStartScreen__CJumpListItem* This,
        UINT32 itemsLength,
        __x_ABI_CWindows_CUI_CStartScreen_CIJumpListItem** items,
        UINT32* result);

        END_INTERFACE
    } __x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CStartScreen__CJumpListItemVtbl;

    interface __x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CStartScreen__CJumpListItem
    {
        CONST_VTBL struct __x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CStartScreen__CJumpListItemVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CStartScreen__CJumpListItem_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIIterable_1___x_ABI_CWindows__CUI__CStartScreen__CJumpListItem_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIIterable_1___x_ABI_CWindows__CUI__CStartScreen__CJumpListItem_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIIterable_1___x_ABI_CWindows__CUI__CStartScreen__CJumpListItem __x_ABI_C__FIIterable_1___x_ABI_CWindows__CUI__CStartScreen__CJumpListItem;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIIterable_1___x_ABI_CWindows__CUI__CStartScreen__CJumpListItem;

    typedef struct __x_ABI_C__FIIterable_1___x_ABI_CWindows__CUI__CStartScreen__CJumpListItemVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CUI__CStartScreen__CJumpListItem* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CUI__CStartScreen__CJumpListItem* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CUI__CStartScreen__CJumpListItem* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CUI__CStartScreen__CJumpListItem* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CUI__CStartScreen__CJumpListItem* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CUI__CStartScreen__CJumpListItem* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* First)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CUI__CStartScreen__CJumpListItem* This,
        __x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CStartScreen__CJumpListItem** result);

        END_INTERFACE
    } __x_ABI_C__FIIterable_1___x_ABI_CWindows__CUI__CStartScreen__CJumpListItemVtbl;

    interface __x_ABI_C__FIIterable_1___x_ABI_CWindows__CUI__CStartScreen__CJumpListItem
    {
        CONST_VTBL struct __x_ABI_C__FIIterable_1___x_ABI_CWindows__CUI__CStartScreen__CJumpListItemVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIIterable_1___x_ABI_CWindows__CUI__CStartScreen__CJumpListItem_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CStartScreen__CSecondaryTileVisualElements_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CStartScreen__CSecondaryTileVisualElements_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CStartScreen__CSecondaryTileVisualElements __x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CStartScreen__CSecondaryTileVisualElements;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CStartScreen__CSecondaryTileVisualElements;

    typedef struct __x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CStartScreen__CSecondaryTileVisualElementsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CStartScreen__CSecondaryTileVisualElements* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CStartScreen__CSecondaryTileVisualElements* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CStartScreen__CSecondaryTileVisualElements* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CStartScreen__CSecondaryTileVisualElements* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CStartScreen__CSecondaryTileVisualElements* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CStartScreen__CSecondaryTileVisualElements* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Current)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CStartScreen__CSecondaryTileVisualElements* This,
        __x_ABI_CWindows_CUI_CStartScreen_CISecondaryTileVisualElements** result);
    HRESULT (STDMETHODCALLTYPE* get_HasCurrent)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CStartScreen__CSecondaryTileVisualElements* This,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* MoveNext)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CStartScreen__CSecondaryTileVisualElements* This,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CStartScreen__CSecondaryTileVisualElements* This,
        UINT32 itemsLength,
        __x_ABI_CWindows_CUI_CStartScreen_CISecondaryTileVisualElements** items,
        UINT32* result);

        END_INTERFACE
    } __x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CStartScreen__CSecondaryTileVisualElementsVtbl;

    interface __x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CStartScreen__CSecondaryTileVisualElements
    {
        CONST_VTBL struct __x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CStartScreen__CSecondaryTileVisualElementsVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CStartScreen__CSecondaryTileVisualElements_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIIterable_1___x_ABI_CWindows__CUI__CStartScreen__CSecondaryTileVisualElements_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIIterable_1___x_ABI_CWindows__CUI__CStartScreen__CSecondaryTileVisualElements_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIIterable_1___x_ABI_CWindows__CUI__CStartScreen__CSecondaryTileVisualElements __x_ABI_C__FIIterable_1___x_ABI_CWindows__CUI__CStartScreen__CSecondaryTileVisualElements;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIIterable_1___x_ABI_CWindows__CUI__CStartScreen__CSecondaryTileVisualElements;

    typedef struct __x_ABI_C__FIIterable_1___x_ABI_CWindows__CUI__CStartScreen__CSecondaryTileVisualElementsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CUI__CStartScreen__CSecondaryTileVisualElements* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CUI__CStartScreen__CSecondaryTileVisualElements* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CUI__CStartScreen__CSecondaryTileVisualElements* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CUI__CStartScreen__CSecondaryTileVisualElements* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CUI__CStartScreen__CSecondaryTileVisualElements* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CUI__CStartScreen__CSecondaryTileVisualElements* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* First)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CUI__CStartScreen__CSecondaryTileVisualElements* This,
        __x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CStartScreen__CSecondaryTileVisualElements** result);

        END_INTERFACE
    } __x_ABI_C__FIIterable_1___x_ABI_CWindows__CUI__CStartScreen__CSecondaryTileVisualElementsVtbl;

    interface __x_ABI_C__FIIterable_1___x_ABI_CWindows__CUI__CStartScreen__CSecondaryTileVisualElements
    {
        CONST_VTBL struct __x_ABI_C__FIIterable_1___x_ABI_CWindows__CUI__CStartScreen__CSecondaryTileVisualElementsVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIIterable_1___x_ABI_CWindows__CUI__CStartScreen__CSecondaryTileVisualElements_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CStartScreen__CJumpListItem_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CStartScreen__CJumpListItem_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CStartScreen__CJumpListItem __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CStartScreen__CJumpListItem;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CStartScreen__CJumpListItem;

    typedef struct __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CStartScreen__CJumpListItemVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CStartScreen__CJumpListItem* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CStartScreen__CJumpListItem* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CStartScreen__CJumpListItem* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CStartScreen__CJumpListItem* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CStartScreen__CJumpListItem* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CStartScreen__CJumpListItem* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* GetAt)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CStartScreen__CJumpListItem* This,
        UINT32 index,
        __x_ABI_CWindows_CUI_CStartScreen_CIJumpListItem** result);
    HRESULT (STDMETHODCALLTYPE* get_Size)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CStartScreen__CJumpListItem* This,
        UINT32* result);
    HRESULT (STDMETHODCALLTYPE* IndexOf)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CStartScreen__CJumpListItem* This,
        __x_ABI_CWindows_CUI_CStartScreen_CIJumpListItem* value,
        UINT32* index,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CStartScreen__CJumpListItem* This,
        UINT32 startIndex,
        UINT32 itemsLength,
        __x_ABI_CWindows_CUI_CStartScreen_CIJumpListItem** items,
        UINT32* result);

        END_INTERFACE
    } __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CStartScreen__CJumpListItemVtbl;

    interface __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CStartScreen__CJumpListItem
    {
        CONST_VTBL struct __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CStartScreen__CJumpListItemVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CStartScreen__CJumpListItem_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CStartScreen__CSecondaryTileVisualElements_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CStartScreen__CSecondaryTileVisualElements_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CStartScreen__CSecondaryTileVisualElements __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CStartScreen__CSecondaryTileVisualElements;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CStartScreen__CSecondaryTileVisualElements;

    typedef struct __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CStartScreen__CSecondaryTileVisualElementsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CStartScreen__CSecondaryTileVisualElements* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CStartScreen__CSecondaryTileVisualElements* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CStartScreen__CSecondaryTileVisualElements* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CStartScreen__CSecondaryTileVisualElements* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CStartScreen__CSecondaryTileVisualElements* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CStartScreen__CSecondaryTileVisualElements* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* GetAt)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CStartScreen__CSecondaryTileVisualElements* This,
        UINT32 index,
        __x_ABI_CWindows_CUI_CStartScreen_CISecondaryTileVisualElements** result);
    HRESULT (STDMETHODCALLTYPE* get_Size)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CStartScreen__CSecondaryTileVisualElements* This,
        UINT32* result);
    HRESULT (STDMETHODCALLTYPE* IndexOf)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CStartScreen__CSecondaryTileVisualElements* This,
        __x_ABI_CWindows_CUI_CStartScreen_CISecondaryTileVisualElements* value,
        UINT32* index,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CStartScreen__CSecondaryTileVisualElements* This,
        UINT32 startIndex,
        UINT32 itemsLength,
        __x_ABI_CWindows_CUI_CStartScreen_CISecondaryTileVisualElements** items,
        UINT32* result);

        END_INTERFACE
    } __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CStartScreen__CSecondaryTileVisualElementsVtbl;

    interface __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CStartScreen__CSecondaryTileVisualElements
    {
        CONST_VTBL struct __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CStartScreen__CSecondaryTileVisualElementsVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CStartScreen__CSecondaryTileVisualElements_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CStartScreen__CJumpListItem_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CStartScreen__CJumpListItem_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CStartScreen__CJumpListItem __x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CStartScreen__CJumpListItem;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CStartScreen__CJumpListItem;

    typedef struct __x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CStartScreen__CJumpListItemVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CStartScreen__CJumpListItem* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CStartScreen__CJumpListItem* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CStartScreen__CJumpListItem* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CStartScreen__CJumpListItem* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CStartScreen__CJumpListItem* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CStartScreen__CJumpListItem* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* GetAt)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CStartScreen__CJumpListItem* This,
        UINT32 index,
        __x_ABI_CWindows_CUI_CStartScreen_CIJumpListItem** result);
    HRESULT (STDMETHODCALLTYPE* get_Size)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CStartScreen__CJumpListItem* This,
        UINT32* result);
    HRESULT (STDMETHODCALLTYPE* GetView)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CStartScreen__CJumpListItem* This,
        __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CStartScreen__CJumpListItem** result);
    HRESULT (STDMETHODCALLTYPE* IndexOf)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CStartScreen__CJumpListItem* This,
        __x_ABI_CWindows_CUI_CStartScreen_CIJumpListItem* value,
        UINT32* index,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* SetAt)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CStartScreen__CJumpListItem* This,
        UINT32 index,
        __x_ABI_CWindows_CUI_CStartScreen_CIJumpListItem* value);
    HRESULT (STDMETHODCALLTYPE* InsertAt)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CStartScreen__CJumpListItem* This,
        UINT32 index,
        __x_ABI_CWindows_CUI_CStartScreen_CIJumpListItem* value);
    HRESULT (STDMETHODCALLTYPE* RemoveAt)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CStartScreen__CJumpListItem* This,
        UINT32 index);
    HRESULT (STDMETHODCALLTYPE* Append)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CStartScreen__CJumpListItem* This,
        __x_ABI_CWindows_CUI_CStartScreen_CIJumpListItem* value);
    HRESULT (STDMETHODCALLTYPE* RemoveAtEnd)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CStartScreen__CJumpListItem* This);
    HRESULT (STDMETHODCALLTYPE* Clear)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CStartScreen__CJumpListItem* This);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CStartScreen__CJumpListItem* This,
        UINT32 startIndex,
        UINT32 itemsLength,
        __x_ABI_CWindows_CUI_CStartScreen_CIJumpListItem** items,
        UINT32* result);
    HRESULT (STDMETHODCALLTYPE* ReplaceAll)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CStartScreen__CJumpListItem* This,
        UINT32 itemsLength,
        __x_ABI_CWindows_CUI_CStartScreen_CIJumpListItem** items);

        END_INTERFACE
    } __x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CStartScreen__CJumpListItemVtbl;

    interface __x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CStartScreen__CJumpListItem
    {
        CONST_VTBL struct __x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CStartScreen__CJumpListItemVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CStartScreen__CJumpListItem_INTERFACE_DEFINED__
    
typedef struct __x_ABI_CWindows_CPerception_CSpatial_CSpatialBoundingBox __x_ABI_CWindows_CPerception_CSpatial_CSpatialBoundingBox;

#if !defined(____x_ABI_C__FIReference_1___x_ABI_CWindows__CPerception__CSpatial__CSpatialBoundingBox_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIReference_1___x_ABI_CWindows__CPerception__CSpatial__CSpatialBoundingBox_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIReference_1___x_ABI_CWindows__CPerception__CSpatial__CSpatialBoundingBox __x_ABI_C__FIReference_1___x_ABI_CWindows__CPerception__CSpatial__CSpatialBoundingBox;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIReference_1___x_ABI_CWindows__CPerception__CSpatial__CSpatialBoundingBox;

    typedef struct __x_ABI_C__FIReference_1___x_ABI_CWindows__CPerception__CSpatial__CSpatialBoundingBoxVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIReference_1___x_ABI_CWindows__CPerception__CSpatial__CSpatialBoundingBox* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIReference_1___x_ABI_CWindows__CPerception__CSpatial__CSpatialBoundingBox* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIReference_1___x_ABI_CWindows__CPerception__CSpatial__CSpatialBoundingBox* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIReference_1___x_ABI_CWindows__CPerception__CSpatial__CSpatialBoundingBox* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIReference_1___x_ABI_CWindows__CPerception__CSpatial__CSpatialBoundingBox* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIReference_1___x_ABI_CWindows__CPerception__CSpatial__CSpatialBoundingBox* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Value)(__x_ABI_C__FIReference_1___x_ABI_CWindows__CPerception__CSpatial__CSpatialBoundingBox* This,
        struct __x_ABI_CWindows_CPerception_CSpatial_CSpatialBoundingBox* result);

        END_INTERFACE
    } __x_ABI_C__FIReference_1___x_ABI_CWindows__CPerception__CSpatial__CSpatialBoundingBoxVtbl;

    interface __x_ABI_C__FIReference_1___x_ABI_CWindows__CPerception__CSpatial__CSpatialBoundingBox
    {
        CONST_VTBL struct __x_ABI_C__FIReference_1___x_ABI_CWindows__CPerception__CSpatial__CSpatialBoundingBoxVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIReference_1___x_ABI_CWindows__CPerception__CSpatial__CSpatialBoundingBox_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CStartScreen__CSecondaryTile___x_ABI_CWindows__CUI__CStartScreen__CVisualElementsRequestedEventArgs_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CStartScreen__CSecondaryTile___x_ABI_CWindows__CUI__CStartScreen__CVisualElementsRequestedEventArgs_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CStartScreen__CSecondaryTile___x_ABI_CWindows__CUI__CStartScreen__CVisualElementsRequestedEventArgs __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CStartScreen__CSecondaryTile___x_ABI_CWindows__CUI__CStartScreen__CVisualElementsRequestedEventArgs;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CStartScreen__CSecondaryTile___x_ABI_CWindows__CUI__CStartScreen__CVisualElementsRequestedEventArgs;

    typedef struct __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CStartScreen__CSecondaryTile___x_ABI_CWindows__CUI__CStartScreen__CVisualElementsRequestedEventArgsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CStartScreen__CSecondaryTile___x_ABI_CWindows__CUI__CStartScreen__CVisualElementsRequestedEventArgs* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CStartScreen__CSecondaryTile___x_ABI_CWindows__CUI__CStartScreen__CVisualElementsRequestedEventArgs* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CStartScreen__CSecondaryTile___x_ABI_CWindows__CUI__CStartScreen__CVisualElementsRequestedEventArgs* This);
        HRESULT (STDMETHODCALLTYPE* Invoke)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CStartScreen__CSecondaryTile___x_ABI_CWindows__CUI__CStartScreen__CVisualElementsRequestedEventArgs* This,
        __x_ABI_CWindows_CUI_CStartScreen_CISecondaryTile* sender,
        __x_ABI_CWindows_CUI_CStartScreen_CIVisualElementsRequestedEventArgs* args);

        END_INTERFACE
    } __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CStartScreen__CSecondaryTile___x_ABI_CWindows__CUI__CStartScreen__CVisualElementsRequestedEventArgsVtbl;

    interface __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CStartScreen__CSecondaryTile___x_ABI_CWindows__CUI__CStartScreen__CVisualElementsRequestedEventArgs
    {
        CONST_VTBL struct __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CStartScreen__CSecondaryTile___x_ABI_CWindows__CUI__CStartScreen__CVisualElementsRequestedEventArgsVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CStartScreen__CSecondaryTile___x_ABI_CWindows__CUI__CStartScreen__CVisualElementsRequestedEventArgs_INTERFACE_DEFINED__
    
#ifndef ____x_ABI_CWindows_CApplicationModel_CCore_CIAppListEntry_FWD_DEFINED__
#define ____x_ABI_CWindows_CApplicationModel_CCore_CIAppListEntry_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CApplicationModel_CCore_CIAppListEntry __x_ABI_CWindows_CApplicationModel_CCore_CIAppListEntry;

#endif // ____x_ABI_CWindows_CApplicationModel_CCore_CIAppListEntry_FWD_DEFINED__

typedef enum __x_ABI_CWindows_CFoundation_CAsyncStatus __x_ABI_CWindows_CFoundation_CAsyncStatus;

typedef struct __x_ABI_CWindows_CFoundation_CDateTime __x_ABI_CWindows_CFoundation_CDateTime;

#ifndef ____x_ABI_CWindows_CFoundation_CIAsyncAction_FWD_DEFINED__
#define ____x_ABI_CWindows_CFoundation_CIAsyncAction_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CFoundation_CIAsyncAction __x_ABI_CWindows_CFoundation_CIAsyncAction;

#endif // ____x_ABI_CWindows_CFoundation_CIAsyncAction_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CFoundation_CIAsyncInfo_FWD_DEFINED__
#define ____x_ABI_CWindows_CFoundation_CIAsyncInfo_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CFoundation_CIAsyncInfo __x_ABI_CWindows_CFoundation_CIAsyncInfo;

#endif // ____x_ABI_CWindows_CFoundation_CIAsyncInfo_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CFoundation_CIPropertyValue_FWD_DEFINED__
#define ____x_ABI_CWindows_CFoundation_CIPropertyValue_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CFoundation_CIPropertyValue __x_ABI_CWindows_CFoundation_CIPropertyValue;

#endif // ____x_ABI_CWindows_CFoundation_CIPropertyValue_FWD_DEFINED__

typedef struct __x_ABI_CWindows_CFoundation_CPoint __x_ABI_CWindows_CFoundation_CPoint;

typedef struct __x_ABI_CWindows_CFoundation_CRect __x_ABI_CWindows_CFoundation_CRect;

#ifndef ____x_ABI_CWindows_CFoundation_CIUriRuntimeClass_FWD_DEFINED__
#define ____x_ABI_CWindows_CFoundation_CIUriRuntimeClass_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CFoundation_CIUriRuntimeClass __x_ABI_CWindows_CFoundation_CIUriRuntimeClass;

#endif // ____x_ABI_CWindows_CFoundation_CIUriRuntimeClass_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CSystem_CIUser_FWD_DEFINED__
#define ____x_ABI_CWindows_CSystem_CIUser_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CSystem_CIUser __x_ABI_CWindows_CSystem_CIUser;

#endif // ____x_ABI_CWindows_CSystem_CIUser_FWD_DEFINED__

typedef struct __x_ABI_CWindows_CUI_CColor __x_ABI_CWindows_CUI_CColor;

typedef enum __x_ABI_CWindows_CUI_CPopups_CPlacement __x_ABI_CWindows_CUI_CPopups_CPlacement;

typedef enum __x_ABI_CWindows_CUI_CStartScreen_CForegroundText __x_ABI_CWindows_CUI_CStartScreen_CForegroundText;

typedef enum __x_ABI_CWindows_CUI_CStartScreen_CJumpListItemKind __x_ABI_CWindows_CUI_CStartScreen_CJumpListItemKind;

typedef enum __x_ABI_CWindows_CUI_CStartScreen_CJumpListSystemGroupKind __x_ABI_CWindows_CUI_CStartScreen_CJumpListSystemGroupKind;

typedef enum __x_ABI_CWindows_CUI_CStartScreen_CTileMixedRealityModelActivationBehavior __x_ABI_CWindows_CUI_CStartScreen_CTileMixedRealityModelActivationBehavior;

typedef enum __x_ABI_CWindows_CUI_CStartScreen_CTileOptions __x_ABI_CWindows_CUI_CStartScreen_CTileOptions;

typedef enum __x_ABI_CWindows_CUI_CStartScreen_CTileSize __x_ABI_CWindows_CUI_CStartScreen_CTileSize;

enum __x_ABI_CWindows_CUI_CStartScreen_CForegroundText
    {
        __x_ABI_CWindows_CUI_CStartScreen_CForegroundText_Dark = 0,
    __x_ABI_CWindows_CUI_CStartScreen_CForegroundText_Light = 1,
};

enum __x_ABI_CWindows_CUI_CStartScreen_CJumpListItemKind
    {
        __x_ABI_CWindows_CUI_CStartScreen_CJumpListItemKind_Arguments = 0,
    __x_ABI_CWindows_CUI_CStartScreen_CJumpListItemKind_Separator = 1,
};

enum __x_ABI_CWindows_CUI_CStartScreen_CJumpListSystemGroupKind
    {
        __x_ABI_CWindows_CUI_CStartScreen_CJumpListSystemGroupKind_None = 0,
    __x_ABI_CWindows_CUI_CStartScreen_CJumpListSystemGroupKind_Frequent = 1,
    __x_ABI_CWindows_CUI_CStartScreen_CJumpListSystemGroupKind_Recent = 2,
};

enum __x_ABI_CWindows_CUI_CStartScreen_CTileMixedRealityModelActivationBehavior
    {
        __x_ABI_CWindows_CUI_CStartScreen_CTileMixedRealityModelActivationBehavior_Default = 0,
    __x_ABI_CWindows_CUI_CStartScreen_CTileMixedRealityModelActivationBehavior_None = 1,
};

enum __x_ABI_CWindows_CUI_CStartScreen_CTileOptions
    {
        __x_ABI_CWindows_CUI_CStartScreen_CTileOptions_None = 0,
    __x_ABI_CWindows_CUI_CStartScreen_CTileOptions_ShowNameOnLogo = 0x1,
    __x_ABI_CWindows_CUI_CStartScreen_CTileOptions_ShowNameOnWideLogo = 0x2,
    __x_ABI_CWindows_CUI_CStartScreen_CTileOptions_CopyOnDeployment = 0x4,
};

enum __x_ABI_CWindows_CUI_CStartScreen_CTileSize
    {
        __x_ABI_CWindows_CUI_CStartScreen_CTileSize_Default = 0,
    __x_ABI_CWindows_CUI_CStartScreen_CTileSize_Square30x30 = 1,
    __x_ABI_CWindows_CUI_CStartScreen_CTileSize_Square70x70 = 2,
    __x_ABI_CWindows_CUI_CStartScreen_CTileSize_Square150x150 = 3,
    __x_ABI_CWindows_CUI_CStartScreen_CTileSize_Wide310x150 = 4,
    __x_ABI_CWindows_CUI_CStartScreen_CTileSize_Square310x310 = 5,
    __x_ABI_CWindows_CUI_CStartScreen_CTileSize_Square71x71 = 6,
    __x_ABI_CWindows_CUI_CStartScreen_CTileSize_Square44x44 = 7,
};

#if !defined(____x_ABI_CWindows_CUI_CStartScreen_CIJumpList_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CStartScreen_CIJumpList_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CStartScreen_CIJumpListVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CStartScreen_CIJumpList* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CStartScreen_CIJumpList* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CStartScreen_CIJumpList* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CStartScreen_CIJumpList* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CStartScreen_CIJumpList* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CStartScreen_CIJumpList* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Items)(__x_ABI_CWindows_CUI_CStartScreen_CIJumpList* This,
        __x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CStartScreen__CJumpListItem** value);
    HRESULT (STDMETHODCALLTYPE* get_SystemGroupKind)(__x_ABI_CWindows_CUI_CStartScreen_CIJumpList* This,
        enum __x_ABI_CWindows_CUI_CStartScreen_CJumpListSystemGroupKind* value);
    HRESULT (STDMETHODCALLTYPE* put_SystemGroupKind)(__x_ABI_CWindows_CUI_CStartScreen_CIJumpList* This,
        enum __x_ABI_CWindows_CUI_CStartScreen_CJumpListSystemGroupKind value);
    HRESULT (STDMETHODCALLTYPE* SaveAsync)(__x_ABI_CWindows_CUI_CStartScreen_CIJumpList* This,
        __x_ABI_CWindows_CFoundation_CIAsyncAction** result);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CStartScreen_CIJumpListVtbl;

    interface __x_ABI_CWindows_CUI_CStartScreen_CIJumpList
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CStartScreen_CIJumpListVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CStartScreen_CIJumpList;
#endif /* !defined(____x_ABI_CWindows_CUI_CStartScreen_CIJumpList_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CStartScreen_CIJumpListItem_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CStartScreen_CIJumpListItem_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CStartScreen_CIJumpListItemVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CStartScreen_CIJumpListItem* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CStartScreen_CIJumpListItem* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CStartScreen_CIJumpListItem* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CStartScreen_CIJumpListItem* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CStartScreen_CIJumpListItem* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CStartScreen_CIJumpListItem* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Kind)(__x_ABI_CWindows_CUI_CStartScreen_CIJumpListItem* This,
        enum __x_ABI_CWindows_CUI_CStartScreen_CJumpListItemKind* value);
    HRESULT (STDMETHODCALLTYPE* get_Arguments)(__x_ABI_CWindows_CUI_CStartScreen_CIJumpListItem* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* get_RemovedByUser)(__x_ABI_CWindows_CUI_CStartScreen_CIJumpListItem* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* get_Description)(__x_ABI_CWindows_CUI_CStartScreen_CIJumpListItem* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* put_Description)(__x_ABI_CWindows_CUI_CStartScreen_CIJumpListItem* This,
        HSTRING value);
    HRESULT (STDMETHODCALLTYPE* get_DisplayName)(__x_ABI_CWindows_CUI_CStartScreen_CIJumpListItem* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* put_DisplayName)(__x_ABI_CWindows_CUI_CStartScreen_CIJumpListItem* This,
        HSTRING value);
    HRESULT (STDMETHODCALLTYPE* get_GroupName)(__x_ABI_CWindows_CUI_CStartScreen_CIJumpListItem* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* put_GroupName)(__x_ABI_CWindows_CUI_CStartScreen_CIJumpListItem* This,
        HSTRING value);
    HRESULT (STDMETHODCALLTYPE* get_Logo)(__x_ABI_CWindows_CUI_CStartScreen_CIJumpListItem* This,
        __x_ABI_CWindows_CFoundation_CIUriRuntimeClass** value);
    HRESULT (STDMETHODCALLTYPE* put_Logo)(__x_ABI_CWindows_CUI_CStartScreen_CIJumpListItem* This,
        __x_ABI_CWindows_CFoundation_CIUriRuntimeClass* value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CStartScreen_CIJumpListItemVtbl;

    interface __x_ABI_CWindows_CUI_CStartScreen_CIJumpListItem
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CStartScreen_CIJumpListItemVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CStartScreen_CIJumpListItem;
#endif /* !defined(____x_ABI_CWindows_CUI_CStartScreen_CIJumpListItem_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CStartScreen_CIJumpListItemStatics_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CStartScreen_CIJumpListItemStatics_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CStartScreen_CIJumpListItemStaticsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CStartScreen_CIJumpListItemStatics* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CStartScreen_CIJumpListItemStatics* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CStartScreen_CIJumpListItemStatics* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CStartScreen_CIJumpListItemStatics* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CStartScreen_CIJumpListItemStatics* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CStartScreen_CIJumpListItemStatics* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* CreateWithArguments)(__x_ABI_CWindows_CUI_CStartScreen_CIJumpListItemStatics* This,
        HSTRING arguments,
        HSTRING displayName,
        __x_ABI_CWindows_CUI_CStartScreen_CIJumpListItem** result);
    HRESULT (STDMETHODCALLTYPE* CreateSeparator)(__x_ABI_CWindows_CUI_CStartScreen_CIJumpListItemStatics* This,
        __x_ABI_CWindows_CUI_CStartScreen_CIJumpListItem** result);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CStartScreen_CIJumpListItemStaticsVtbl;

    interface __x_ABI_CWindows_CUI_CStartScreen_CIJumpListItemStatics
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CStartScreen_CIJumpListItemStaticsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CStartScreen_CIJumpListItemStatics;
#endif /* !defined(____x_ABI_CWindows_CUI_CStartScreen_CIJumpListItemStatics_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CStartScreen_CIJumpListStatics_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CStartScreen_CIJumpListStatics_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CStartScreen_CIJumpListStaticsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CStartScreen_CIJumpListStatics* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CStartScreen_CIJumpListStatics* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CStartScreen_CIJumpListStatics* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CStartScreen_CIJumpListStatics* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CStartScreen_CIJumpListStatics* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CStartScreen_CIJumpListStatics* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* LoadCurrentAsync)(__x_ABI_CWindows_CUI_CStartScreen_CIJumpListStatics* This,
        __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CUI__CStartScreen__CJumpList** result);
    HRESULT (STDMETHODCALLTYPE* IsSupported)(__x_ABI_CWindows_CUI_CStartScreen_CIJumpListStatics* This,
        boolean* result);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CStartScreen_CIJumpListStaticsVtbl;

    interface __x_ABI_CWindows_CUI_CStartScreen_CIJumpListStatics
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CStartScreen_CIJumpListStaticsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CStartScreen_CIJumpListStatics;
#endif /* !defined(____x_ABI_CWindows_CUI_CStartScreen_CIJumpListStatics_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CStartScreen_CISecondaryTile_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CStartScreen_CISecondaryTile_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CStartScreen_CISecondaryTileVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CStartScreen_CISecondaryTile* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CStartScreen_CISecondaryTile* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CStartScreen_CISecondaryTile* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CStartScreen_CISecondaryTile* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CStartScreen_CISecondaryTile* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CStartScreen_CISecondaryTile* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* put_TileId)(__x_ABI_CWindows_CUI_CStartScreen_CISecondaryTile* This,
        HSTRING value);
    HRESULT (STDMETHODCALLTYPE* get_TileId)(__x_ABI_CWindows_CUI_CStartScreen_CISecondaryTile* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* put_Arguments)(__x_ABI_CWindows_CUI_CStartScreen_CISecondaryTile* This,
        HSTRING value);
    HRESULT (STDMETHODCALLTYPE* get_Arguments)(__x_ABI_CWindows_CUI_CStartScreen_CISecondaryTile* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* put_ShortName)(__x_ABI_CWindows_CUI_CStartScreen_CISecondaryTile* This,
        HSTRING value);
    HRESULT (STDMETHODCALLTYPE* get_ShortName)(__x_ABI_CWindows_CUI_CStartScreen_CISecondaryTile* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* put_DisplayName)(__x_ABI_CWindows_CUI_CStartScreen_CISecondaryTile* This,
        HSTRING value);
    HRESULT (STDMETHODCALLTYPE* get_DisplayName)(__x_ABI_CWindows_CUI_CStartScreen_CISecondaryTile* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* put_Logo)(__x_ABI_CWindows_CUI_CStartScreen_CISecondaryTile* This,
        __x_ABI_CWindows_CFoundation_CIUriRuntimeClass* value);
    HRESULT (STDMETHODCALLTYPE* get_Logo)(__x_ABI_CWindows_CUI_CStartScreen_CISecondaryTile* This,
        __x_ABI_CWindows_CFoundation_CIUriRuntimeClass** value);
    HRESULT (STDMETHODCALLTYPE* put_SmallLogo)(__x_ABI_CWindows_CUI_CStartScreen_CISecondaryTile* This,
        __x_ABI_CWindows_CFoundation_CIUriRuntimeClass* value);
    HRESULT (STDMETHODCALLTYPE* get_SmallLogo)(__x_ABI_CWindows_CUI_CStartScreen_CISecondaryTile* This,
        __x_ABI_CWindows_CFoundation_CIUriRuntimeClass** value);
    HRESULT (STDMETHODCALLTYPE* put_WideLogo)(__x_ABI_CWindows_CUI_CStartScreen_CISecondaryTile* This,
        __x_ABI_CWindows_CFoundation_CIUriRuntimeClass* value);
    HRESULT (STDMETHODCALLTYPE* get_WideLogo)(__x_ABI_CWindows_CUI_CStartScreen_CISecondaryTile* This,
        __x_ABI_CWindows_CFoundation_CIUriRuntimeClass** value);
    HRESULT (STDMETHODCALLTYPE* put_LockScreenBadgeLogo)(__x_ABI_CWindows_CUI_CStartScreen_CISecondaryTile* This,
        __x_ABI_CWindows_CFoundation_CIUriRuntimeClass* value);
    HRESULT (STDMETHODCALLTYPE* get_LockScreenBadgeLogo)(__x_ABI_CWindows_CUI_CStartScreen_CISecondaryTile* This,
        __x_ABI_CWindows_CFoundation_CIUriRuntimeClass** value);
    HRESULT (STDMETHODCALLTYPE* put_LockScreenDisplayBadgeAndTileText)(__x_ABI_CWindows_CUI_CStartScreen_CISecondaryTile* This,
        boolean value);
    HRESULT (STDMETHODCALLTYPE* get_LockScreenDisplayBadgeAndTileText)(__x_ABI_CWindows_CUI_CStartScreen_CISecondaryTile* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* put_TileOptions)(__x_ABI_CWindows_CUI_CStartScreen_CISecondaryTile* This,
        enum __x_ABI_CWindows_CUI_CStartScreen_CTileOptions value);
    HRESULT (STDMETHODCALLTYPE* get_TileOptions)(__x_ABI_CWindows_CUI_CStartScreen_CISecondaryTile* This,
        enum __x_ABI_CWindows_CUI_CStartScreen_CTileOptions* value);
    HRESULT (STDMETHODCALLTYPE* put_ForegroundText)(__x_ABI_CWindows_CUI_CStartScreen_CISecondaryTile* This,
        enum __x_ABI_CWindows_CUI_CStartScreen_CForegroundText value);
    HRESULT (STDMETHODCALLTYPE* get_ForegroundText)(__x_ABI_CWindows_CUI_CStartScreen_CISecondaryTile* This,
        enum __x_ABI_CWindows_CUI_CStartScreen_CForegroundText* value);
    HRESULT (STDMETHODCALLTYPE* put_BackgroundColor)(__x_ABI_CWindows_CUI_CStartScreen_CISecondaryTile* This,
        struct __x_ABI_CWindows_CUI_CColor value);
    HRESULT (STDMETHODCALLTYPE* get_BackgroundColor)(__x_ABI_CWindows_CUI_CStartScreen_CISecondaryTile* This,
        struct __x_ABI_CWindows_CUI_CColor* value);
    HRESULT (STDMETHODCALLTYPE* RequestCreateAsync)(__x_ABI_CWindows_CUI_CStartScreen_CISecondaryTile* This,
        __x_ABI_C__FIAsyncOperation_1_boolean** operation);
    HRESULT (STDMETHODCALLTYPE* RequestCreateAsyncWithPoint)(__x_ABI_CWindows_CUI_CStartScreen_CISecondaryTile* This,
        struct __x_ABI_CWindows_CFoundation_CPoint invocationPoint,
        __x_ABI_C__FIAsyncOperation_1_boolean** operation);
    HRESULT (STDMETHODCALLTYPE* RequestCreateAsyncWithRect)(__x_ABI_CWindows_CUI_CStartScreen_CISecondaryTile* This,
        struct __x_ABI_CWindows_CFoundation_CRect selection,
        __x_ABI_C__FIAsyncOperation_1_boolean** operation);
    HRESULT (STDMETHODCALLTYPE* RequestCreateAsyncWithRectAndPlacement)(__x_ABI_CWindows_CUI_CStartScreen_CISecondaryTile* This,
        struct __x_ABI_CWindows_CFoundation_CRect selection,
        enum __x_ABI_CWindows_CUI_CPopups_CPlacement preferredPlacement,
        __x_ABI_C__FIAsyncOperation_1_boolean** operation);
    HRESULT (STDMETHODCALLTYPE* RequestDeleteAsync)(__x_ABI_CWindows_CUI_CStartScreen_CISecondaryTile* This,
        __x_ABI_C__FIAsyncOperation_1_boolean** operation);
    HRESULT (STDMETHODCALLTYPE* RequestDeleteAsyncWithPoint)(__x_ABI_CWindows_CUI_CStartScreen_CISecondaryTile* This,
        struct __x_ABI_CWindows_CFoundation_CPoint invocationPoint,
        __x_ABI_C__FIAsyncOperation_1_boolean** operation);
    HRESULT (STDMETHODCALLTYPE* RequestDeleteAsyncWithRect)(__x_ABI_CWindows_CUI_CStartScreen_CISecondaryTile* This,
        struct __x_ABI_CWindows_CFoundation_CRect selection,
        __x_ABI_C__FIAsyncOperation_1_boolean** operation);
    HRESULT (STDMETHODCALLTYPE* RequestDeleteAsyncWithRectAndPlacement)(__x_ABI_CWindows_CUI_CStartScreen_CISecondaryTile* This,
        struct __x_ABI_CWindows_CFoundation_CRect selection,
        enum __x_ABI_CWindows_CUI_CPopups_CPlacement preferredPlacement,
        __x_ABI_C__FIAsyncOperation_1_boolean** operation);
    HRESULT (STDMETHODCALLTYPE* UpdateAsync)(__x_ABI_CWindows_CUI_CStartScreen_CISecondaryTile* This,
        __x_ABI_C__FIAsyncOperation_1_boolean** operation);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CStartScreen_CISecondaryTileVtbl;

    interface __x_ABI_CWindows_CUI_CStartScreen_CISecondaryTile
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CStartScreen_CISecondaryTileVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CStartScreen_CISecondaryTile;
#endif /* !defined(____x_ABI_CWindows_CUI_CStartScreen_CISecondaryTile_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CStartScreen_CISecondaryTile2_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CStartScreen_CISecondaryTile2_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CStartScreen_CISecondaryTile2Vtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CStartScreen_CISecondaryTile2* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CStartScreen_CISecondaryTile2* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CStartScreen_CISecondaryTile2* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CStartScreen_CISecondaryTile2* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CStartScreen_CISecondaryTile2* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CStartScreen_CISecondaryTile2* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* put_PhoneticName)(__x_ABI_CWindows_CUI_CStartScreen_CISecondaryTile2* This,
        HSTRING value);
    HRESULT (STDMETHODCALLTYPE* get_PhoneticName)(__x_ABI_CWindows_CUI_CStartScreen_CISecondaryTile2* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* get_VisualElements)(__x_ABI_CWindows_CUI_CStartScreen_CISecondaryTile2* This,
        __x_ABI_CWindows_CUI_CStartScreen_CISecondaryTileVisualElements** value);
    HRESULT (STDMETHODCALLTYPE* put_RoamingEnabled)(__x_ABI_CWindows_CUI_CStartScreen_CISecondaryTile2* This,
        boolean value);
    HRESULT (STDMETHODCALLTYPE* get_RoamingEnabled)(__x_ABI_CWindows_CUI_CStartScreen_CISecondaryTile2* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* add_VisualElementsRequested)(__x_ABI_CWindows_CUI_CStartScreen_CISecondaryTile2* This,
        __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CStartScreen__CSecondaryTile___x_ABI_CWindows__CUI__CStartScreen__CVisualElementsRequestedEventArgs* handler,
        EventRegistrationToken* token);
    HRESULT (STDMETHODCALLTYPE* remove_VisualElementsRequested)(__x_ABI_CWindows_CUI_CStartScreen_CISecondaryTile2* This,
        EventRegistrationToken token);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CStartScreen_CISecondaryTile2Vtbl;

    interface __x_ABI_CWindows_CUI_CStartScreen_CISecondaryTile2
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CStartScreen_CISecondaryTile2Vtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CStartScreen_CISecondaryTile2;
#endif /* !defined(____x_ABI_CWindows_CUI_CStartScreen_CISecondaryTile2_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CStartScreen_CISecondaryTileFactory_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CStartScreen_CISecondaryTileFactory_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CStartScreen_CISecondaryTileFactoryVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CStartScreen_CISecondaryTileFactory* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CStartScreen_CISecondaryTileFactory* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CStartScreen_CISecondaryTileFactory* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CStartScreen_CISecondaryTileFactory* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CStartScreen_CISecondaryTileFactory* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CStartScreen_CISecondaryTileFactory* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* CreateTile)(__x_ABI_CWindows_CUI_CStartScreen_CISecondaryTileFactory* This,
        HSTRING tileId,
        HSTRING shortName,
        HSTRING displayName,
        HSTRING arguments,
        enum __x_ABI_CWindows_CUI_CStartScreen_CTileOptions tileOptions,
        __x_ABI_CWindows_CFoundation_CIUriRuntimeClass* logoReference,
        __x_ABI_CWindows_CUI_CStartScreen_CISecondaryTile** value);
    HRESULT (STDMETHODCALLTYPE* CreateWideTile)(__x_ABI_CWindows_CUI_CStartScreen_CISecondaryTileFactory* This,
        HSTRING tileId,
        HSTRING shortName,
        HSTRING displayName,
        HSTRING arguments,
        enum __x_ABI_CWindows_CUI_CStartScreen_CTileOptions tileOptions,
        __x_ABI_CWindows_CFoundation_CIUriRuntimeClass* logoReference,
        __x_ABI_CWindows_CFoundation_CIUriRuntimeClass* wideLogoReference,
        __x_ABI_CWindows_CUI_CStartScreen_CISecondaryTile** value);
    HRESULT (STDMETHODCALLTYPE* CreateWithId)(__x_ABI_CWindows_CUI_CStartScreen_CISecondaryTileFactory* This,
        HSTRING tileId,
        __x_ABI_CWindows_CUI_CStartScreen_CISecondaryTile** value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CStartScreen_CISecondaryTileFactoryVtbl;

    interface __x_ABI_CWindows_CUI_CStartScreen_CISecondaryTileFactory
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CStartScreen_CISecondaryTileFactoryVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CStartScreen_CISecondaryTileFactory;
#endif /* !defined(____x_ABI_CWindows_CUI_CStartScreen_CISecondaryTileFactory_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CStartScreen_CISecondaryTileFactory2_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CStartScreen_CISecondaryTileFactory2_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CStartScreen_CISecondaryTileFactory2Vtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CStartScreen_CISecondaryTileFactory2* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CStartScreen_CISecondaryTileFactory2* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CStartScreen_CISecondaryTileFactory2* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CStartScreen_CISecondaryTileFactory2* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CStartScreen_CISecondaryTileFactory2* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CStartScreen_CISecondaryTileFactory2* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* CreateMinimalTile)(__x_ABI_CWindows_CUI_CStartScreen_CISecondaryTileFactory2* This,
        HSTRING tileId,
        HSTRING displayName,
        HSTRING arguments,
        __x_ABI_CWindows_CFoundation_CIUriRuntimeClass* square150x150Logo,
        enum __x_ABI_CWindows_CUI_CStartScreen_CTileSize desiredSize,
        __x_ABI_CWindows_CUI_CStartScreen_CISecondaryTile** value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CStartScreen_CISecondaryTileFactory2Vtbl;

    interface __x_ABI_CWindows_CUI_CStartScreen_CISecondaryTileFactory2
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CStartScreen_CISecondaryTileFactory2Vtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CStartScreen_CISecondaryTileFactory2;
#endif /* !defined(____x_ABI_CWindows_CUI_CStartScreen_CISecondaryTileFactory2_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CStartScreen_CISecondaryTileStatics_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CStartScreen_CISecondaryTileStatics_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CStartScreen_CISecondaryTileStaticsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CStartScreen_CISecondaryTileStatics* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CStartScreen_CISecondaryTileStatics* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CStartScreen_CISecondaryTileStatics* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CStartScreen_CISecondaryTileStatics* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CStartScreen_CISecondaryTileStatics* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CStartScreen_CISecondaryTileStatics* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* Exists)(__x_ABI_CWindows_CUI_CStartScreen_CISecondaryTileStatics* This,
        HSTRING tileId,
        boolean* exists);
    HRESULT (STDMETHODCALLTYPE* FindAllAsync)(__x_ABI_CWindows_CUI_CStartScreen_CISecondaryTileStatics* This,
        __x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CStartScreen__CSecondaryTile** operation);
    HRESULT (STDMETHODCALLTYPE* FindAllForApplicationAsync)(__x_ABI_CWindows_CUI_CStartScreen_CISecondaryTileStatics* This,
        HSTRING applicationId,
        __x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CStartScreen__CSecondaryTile** operation);
    HRESULT (STDMETHODCALLTYPE* FindAllForPackageAsync)(__x_ABI_CWindows_CUI_CStartScreen_CISecondaryTileStatics* This,
        __x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CStartScreen__CSecondaryTile** operation);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CStartScreen_CISecondaryTileStaticsVtbl;

    interface __x_ABI_CWindows_CUI_CStartScreen_CISecondaryTileStatics
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CStartScreen_CISecondaryTileStaticsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CStartScreen_CISecondaryTileStatics;
#endif /* !defined(____x_ABI_CWindows_CUI_CStartScreen_CISecondaryTileStatics_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CStartScreen_CISecondaryTileVisualElements_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CStartScreen_CISecondaryTileVisualElements_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CStartScreen_CISecondaryTileVisualElementsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CStartScreen_CISecondaryTileVisualElements* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CStartScreen_CISecondaryTileVisualElements* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CStartScreen_CISecondaryTileVisualElements* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CStartScreen_CISecondaryTileVisualElements* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CStartScreen_CISecondaryTileVisualElements* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CStartScreen_CISecondaryTileVisualElements* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* put_Square30x30Logo)(__x_ABI_CWindows_CUI_CStartScreen_CISecondaryTileVisualElements* This,
        __x_ABI_CWindows_CFoundation_CIUriRuntimeClass* value);
    HRESULT (STDMETHODCALLTYPE* get_Square30x30Logo)(__x_ABI_CWindows_CUI_CStartScreen_CISecondaryTileVisualElements* This,
        __x_ABI_CWindows_CFoundation_CIUriRuntimeClass** value);
    HRESULT (STDMETHODCALLTYPE* put_Square70x70Logo)(__x_ABI_CWindows_CUI_CStartScreen_CISecondaryTileVisualElements* This,
        __x_ABI_CWindows_CFoundation_CIUriRuntimeClass* value);
    HRESULT (STDMETHODCALLTYPE* get_Square70x70Logo)(__x_ABI_CWindows_CUI_CStartScreen_CISecondaryTileVisualElements* This,
        __x_ABI_CWindows_CFoundation_CIUriRuntimeClass** value);
    HRESULT (STDMETHODCALLTYPE* put_Square150x150Logo)(__x_ABI_CWindows_CUI_CStartScreen_CISecondaryTileVisualElements* This,
        __x_ABI_CWindows_CFoundation_CIUriRuntimeClass* value);
    HRESULT (STDMETHODCALLTYPE* get_Square150x150Logo)(__x_ABI_CWindows_CUI_CStartScreen_CISecondaryTileVisualElements* This,
        __x_ABI_CWindows_CFoundation_CIUriRuntimeClass** value);
    HRESULT (STDMETHODCALLTYPE* put_Wide310x150Logo)(__x_ABI_CWindows_CUI_CStartScreen_CISecondaryTileVisualElements* This,
        __x_ABI_CWindows_CFoundation_CIUriRuntimeClass* value);
    HRESULT (STDMETHODCALLTYPE* get_Wide310x150Logo)(__x_ABI_CWindows_CUI_CStartScreen_CISecondaryTileVisualElements* This,
        __x_ABI_CWindows_CFoundation_CIUriRuntimeClass** value);
    HRESULT (STDMETHODCALLTYPE* put_Square310x310Logo)(__x_ABI_CWindows_CUI_CStartScreen_CISecondaryTileVisualElements* This,
        __x_ABI_CWindows_CFoundation_CIUriRuntimeClass* value);
    HRESULT (STDMETHODCALLTYPE* get_Square310x310Logo)(__x_ABI_CWindows_CUI_CStartScreen_CISecondaryTileVisualElements* This,
        __x_ABI_CWindows_CFoundation_CIUriRuntimeClass** value);
    HRESULT (STDMETHODCALLTYPE* put_ForegroundText)(__x_ABI_CWindows_CUI_CStartScreen_CISecondaryTileVisualElements* This,
        enum __x_ABI_CWindows_CUI_CStartScreen_CForegroundText value);
    HRESULT (STDMETHODCALLTYPE* get_ForegroundText)(__x_ABI_CWindows_CUI_CStartScreen_CISecondaryTileVisualElements* This,
        enum __x_ABI_CWindows_CUI_CStartScreen_CForegroundText* value);
    HRESULT (STDMETHODCALLTYPE* put_BackgroundColor)(__x_ABI_CWindows_CUI_CStartScreen_CISecondaryTileVisualElements* This,
        struct __x_ABI_CWindows_CUI_CColor value);
    HRESULT (STDMETHODCALLTYPE* get_BackgroundColor)(__x_ABI_CWindows_CUI_CStartScreen_CISecondaryTileVisualElements* This,
        struct __x_ABI_CWindows_CUI_CColor* value);
    HRESULT (STDMETHODCALLTYPE* put_ShowNameOnSquare150x150Logo)(__x_ABI_CWindows_CUI_CStartScreen_CISecondaryTileVisualElements* This,
        boolean value);
    HRESULT (STDMETHODCALLTYPE* get_ShowNameOnSquare150x150Logo)(__x_ABI_CWindows_CUI_CStartScreen_CISecondaryTileVisualElements* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* put_ShowNameOnWide310x150Logo)(__x_ABI_CWindows_CUI_CStartScreen_CISecondaryTileVisualElements* This,
        boolean value);
    HRESULT (STDMETHODCALLTYPE* get_ShowNameOnWide310x150Logo)(__x_ABI_CWindows_CUI_CStartScreen_CISecondaryTileVisualElements* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* put_ShowNameOnSquare310x310Logo)(__x_ABI_CWindows_CUI_CStartScreen_CISecondaryTileVisualElements* This,
        boolean value);
    HRESULT (STDMETHODCALLTYPE* get_ShowNameOnSquare310x310Logo)(__x_ABI_CWindows_CUI_CStartScreen_CISecondaryTileVisualElements* This,
        boolean* value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CStartScreen_CISecondaryTileVisualElementsVtbl;

    interface __x_ABI_CWindows_CUI_CStartScreen_CISecondaryTileVisualElements
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CStartScreen_CISecondaryTileVisualElementsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CStartScreen_CISecondaryTileVisualElements;
#endif /* !defined(____x_ABI_CWindows_CUI_CStartScreen_CISecondaryTileVisualElements_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CStartScreen_CISecondaryTileVisualElements2_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CStartScreen_CISecondaryTileVisualElements2_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CStartScreen_CISecondaryTileVisualElements2Vtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CStartScreen_CISecondaryTileVisualElements2* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CStartScreen_CISecondaryTileVisualElements2* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CStartScreen_CISecondaryTileVisualElements2* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CStartScreen_CISecondaryTileVisualElements2* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CStartScreen_CISecondaryTileVisualElements2* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CStartScreen_CISecondaryTileVisualElements2* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* put_Square71x71Logo)(__x_ABI_CWindows_CUI_CStartScreen_CISecondaryTileVisualElements2* This,
        __x_ABI_CWindows_CFoundation_CIUriRuntimeClass* value);
    HRESULT (STDMETHODCALLTYPE* get_Square71x71Logo)(__x_ABI_CWindows_CUI_CStartScreen_CISecondaryTileVisualElements2* This,
        __x_ABI_CWindows_CFoundation_CIUriRuntimeClass** value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CStartScreen_CISecondaryTileVisualElements2Vtbl;

    interface __x_ABI_CWindows_CUI_CStartScreen_CISecondaryTileVisualElements2
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CStartScreen_CISecondaryTileVisualElements2Vtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CStartScreen_CISecondaryTileVisualElements2;
#endif /* !defined(____x_ABI_CWindows_CUI_CStartScreen_CISecondaryTileVisualElements2_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CStartScreen_CISecondaryTileVisualElements3_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CStartScreen_CISecondaryTileVisualElements3_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CStartScreen_CISecondaryTileVisualElements3Vtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CStartScreen_CISecondaryTileVisualElements3* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CStartScreen_CISecondaryTileVisualElements3* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CStartScreen_CISecondaryTileVisualElements3* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CStartScreen_CISecondaryTileVisualElements3* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CStartScreen_CISecondaryTileVisualElements3* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CStartScreen_CISecondaryTileVisualElements3* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* put_Square44x44Logo)(__x_ABI_CWindows_CUI_CStartScreen_CISecondaryTileVisualElements3* This,
        __x_ABI_CWindows_CFoundation_CIUriRuntimeClass* value);
    HRESULT (STDMETHODCALLTYPE* get_Square44x44Logo)(__x_ABI_CWindows_CUI_CStartScreen_CISecondaryTileVisualElements3* This,
        __x_ABI_CWindows_CFoundation_CIUriRuntimeClass** value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CStartScreen_CISecondaryTileVisualElements3Vtbl;

    interface __x_ABI_CWindows_CUI_CStartScreen_CISecondaryTileVisualElements3
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CStartScreen_CISecondaryTileVisualElements3Vtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CStartScreen_CISecondaryTileVisualElements3;
#endif /* !defined(____x_ABI_CWindows_CUI_CStartScreen_CISecondaryTileVisualElements3_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CStartScreen_CISecondaryTileVisualElements4_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CStartScreen_CISecondaryTileVisualElements4_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CStartScreen_CISecondaryTileVisualElements4Vtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CStartScreen_CISecondaryTileVisualElements4* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CStartScreen_CISecondaryTileVisualElements4* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CStartScreen_CISecondaryTileVisualElements4* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CStartScreen_CISecondaryTileVisualElements4* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CStartScreen_CISecondaryTileVisualElements4* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CStartScreen_CISecondaryTileVisualElements4* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_MixedRealityModel)(__x_ABI_CWindows_CUI_CStartScreen_CISecondaryTileVisualElements4* This,
        __x_ABI_CWindows_CUI_CStartScreen_CITileMixedRealityModel** value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CStartScreen_CISecondaryTileVisualElements4Vtbl;

    interface __x_ABI_CWindows_CUI_CStartScreen_CISecondaryTileVisualElements4
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CStartScreen_CISecondaryTileVisualElements4Vtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CStartScreen_CISecondaryTileVisualElements4;
#endif /* !defined(____x_ABI_CWindows_CUI_CStartScreen_CISecondaryTileVisualElements4_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CStartScreen_CIStartScreenManager_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CStartScreen_CIStartScreenManager_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CStartScreen_CIStartScreenManagerVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CStartScreen_CIStartScreenManager* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CStartScreen_CIStartScreenManager* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CStartScreen_CIStartScreenManager* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CStartScreen_CIStartScreenManager* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CStartScreen_CIStartScreenManager* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CStartScreen_CIStartScreenManager* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_User)(__x_ABI_CWindows_CUI_CStartScreen_CIStartScreenManager* This,
        __x_ABI_CWindows_CSystem_CIUser** value);
    HRESULT (STDMETHODCALLTYPE* SupportsAppListEntry)(__x_ABI_CWindows_CUI_CStartScreen_CIStartScreenManager* This,
        __x_ABI_CWindows_CApplicationModel_CCore_CIAppListEntry* appListEntry,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* ContainsAppListEntryAsync)(__x_ABI_CWindows_CUI_CStartScreen_CIStartScreenManager* This,
        __x_ABI_CWindows_CApplicationModel_CCore_CIAppListEntry* appListEntry,
        __x_ABI_C__FIAsyncOperation_1_boolean** operation);
    HRESULT (STDMETHODCALLTYPE* RequestAddAppListEntryAsync)(__x_ABI_CWindows_CUI_CStartScreen_CIStartScreenManager* This,
        __x_ABI_CWindows_CApplicationModel_CCore_CIAppListEntry* appListEntry,
        __x_ABI_C__FIAsyncOperation_1_boolean** operation);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CStartScreen_CIStartScreenManagerVtbl;

    interface __x_ABI_CWindows_CUI_CStartScreen_CIStartScreenManager
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CStartScreen_CIStartScreenManagerVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CStartScreen_CIStartScreenManager;
#endif /* !defined(____x_ABI_CWindows_CUI_CStartScreen_CIStartScreenManager_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CStartScreen_CIStartScreenManager2_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CStartScreen_CIStartScreenManager2_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CStartScreen_CIStartScreenManager2Vtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CStartScreen_CIStartScreenManager2* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CStartScreen_CIStartScreenManager2* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CStartScreen_CIStartScreenManager2* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CStartScreen_CIStartScreenManager2* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CStartScreen_CIStartScreenManager2* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CStartScreen_CIStartScreenManager2* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* ContainsSecondaryTileAsync)(__x_ABI_CWindows_CUI_CStartScreen_CIStartScreenManager2* This,
        HSTRING tileId,
        __x_ABI_C__FIAsyncOperation_1_boolean** operation);
    HRESULT (STDMETHODCALLTYPE* TryRemoveSecondaryTileAsync)(__x_ABI_CWindows_CUI_CStartScreen_CIStartScreenManager2* This,
        HSTRING tileId,
        __x_ABI_C__FIAsyncOperation_1_boolean** operation);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CStartScreen_CIStartScreenManager2Vtbl;

    interface __x_ABI_CWindows_CUI_CStartScreen_CIStartScreenManager2
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CStartScreen_CIStartScreenManager2Vtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CStartScreen_CIStartScreenManager2;
#endif /* !defined(____x_ABI_CWindows_CUI_CStartScreen_CIStartScreenManager2_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CStartScreen_CIStartScreenManagerStatics_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CStartScreen_CIStartScreenManagerStatics_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CStartScreen_CIStartScreenManagerStaticsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CStartScreen_CIStartScreenManagerStatics* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CStartScreen_CIStartScreenManagerStatics* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CStartScreen_CIStartScreenManagerStatics* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CStartScreen_CIStartScreenManagerStatics* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CStartScreen_CIStartScreenManagerStatics* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CStartScreen_CIStartScreenManagerStatics* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* GetDefault)(__x_ABI_CWindows_CUI_CStartScreen_CIStartScreenManagerStatics* This,
        __x_ABI_CWindows_CUI_CStartScreen_CIStartScreenManager** value);
    HRESULT (STDMETHODCALLTYPE* GetForUser)(__x_ABI_CWindows_CUI_CStartScreen_CIStartScreenManagerStatics* This,
        __x_ABI_CWindows_CSystem_CIUser* user,
        __x_ABI_CWindows_CUI_CStartScreen_CIStartScreenManager** result);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CStartScreen_CIStartScreenManagerStaticsVtbl;

    interface __x_ABI_CWindows_CUI_CStartScreen_CIStartScreenManagerStatics
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CStartScreen_CIStartScreenManagerStaticsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CStartScreen_CIStartScreenManagerStatics;
#endif /* !defined(____x_ABI_CWindows_CUI_CStartScreen_CIStartScreenManagerStatics_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CStartScreen_CITileMixedRealityModel_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CStartScreen_CITileMixedRealityModel_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CStartScreen_CITileMixedRealityModelVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CStartScreen_CITileMixedRealityModel* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CStartScreen_CITileMixedRealityModel* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CStartScreen_CITileMixedRealityModel* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CStartScreen_CITileMixedRealityModel* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CStartScreen_CITileMixedRealityModel* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CStartScreen_CITileMixedRealityModel* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* put_Uri)(__x_ABI_CWindows_CUI_CStartScreen_CITileMixedRealityModel* This,
        __x_ABI_CWindows_CFoundation_CIUriRuntimeClass* value);
    HRESULT (STDMETHODCALLTYPE* get_Uri)(__x_ABI_CWindows_CUI_CStartScreen_CITileMixedRealityModel* This,
        __x_ABI_CWindows_CFoundation_CIUriRuntimeClass** value);
    HRESULT (STDMETHODCALLTYPE* put_BoundingBox)(__x_ABI_CWindows_CUI_CStartScreen_CITileMixedRealityModel* This,
        __x_ABI_C__FIReference_1___x_ABI_CWindows__CPerception__CSpatial__CSpatialBoundingBox* value);
    HRESULT (STDMETHODCALLTYPE* get_BoundingBox)(__x_ABI_CWindows_CUI_CStartScreen_CITileMixedRealityModel* This,
        __x_ABI_C__FIReference_1___x_ABI_CWindows__CPerception__CSpatial__CSpatialBoundingBox** value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CStartScreen_CITileMixedRealityModelVtbl;

    interface __x_ABI_CWindows_CUI_CStartScreen_CITileMixedRealityModel
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CStartScreen_CITileMixedRealityModelVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CStartScreen_CITileMixedRealityModel;
#endif /* !defined(____x_ABI_CWindows_CUI_CStartScreen_CITileMixedRealityModel_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CStartScreen_CITileMixedRealityModel2_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CStartScreen_CITileMixedRealityModel2_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CStartScreen_CITileMixedRealityModel2Vtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CStartScreen_CITileMixedRealityModel2* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CStartScreen_CITileMixedRealityModel2* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CStartScreen_CITileMixedRealityModel2* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CStartScreen_CITileMixedRealityModel2* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CStartScreen_CITileMixedRealityModel2* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CStartScreen_CITileMixedRealityModel2* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* put_ActivationBehavior)(__x_ABI_CWindows_CUI_CStartScreen_CITileMixedRealityModel2* This,
        enum __x_ABI_CWindows_CUI_CStartScreen_CTileMixedRealityModelActivationBehavior value);
    HRESULT (STDMETHODCALLTYPE* get_ActivationBehavior)(__x_ABI_CWindows_CUI_CStartScreen_CITileMixedRealityModel2* This,
        enum __x_ABI_CWindows_CUI_CStartScreen_CTileMixedRealityModelActivationBehavior* value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CStartScreen_CITileMixedRealityModel2Vtbl;

    interface __x_ABI_CWindows_CUI_CStartScreen_CITileMixedRealityModel2
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CStartScreen_CITileMixedRealityModel2Vtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CStartScreen_CITileMixedRealityModel2;
#endif /* !defined(____x_ABI_CWindows_CUI_CStartScreen_CITileMixedRealityModel2_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CStartScreen_CIVisualElementsRequest_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CStartScreen_CIVisualElementsRequest_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CStartScreen_CIVisualElementsRequestVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CStartScreen_CIVisualElementsRequest* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CStartScreen_CIVisualElementsRequest* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CStartScreen_CIVisualElementsRequest* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CStartScreen_CIVisualElementsRequest* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CStartScreen_CIVisualElementsRequest* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CStartScreen_CIVisualElementsRequest* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_VisualElements)(__x_ABI_CWindows_CUI_CStartScreen_CIVisualElementsRequest* This,
        __x_ABI_CWindows_CUI_CStartScreen_CISecondaryTileVisualElements** value);
    HRESULT (STDMETHODCALLTYPE* get_AlternateVisualElements)(__x_ABI_CWindows_CUI_CStartScreen_CIVisualElementsRequest* This,
        __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CStartScreen__CSecondaryTileVisualElements** value);
    HRESULT (STDMETHODCALLTYPE* get_Deadline)(__x_ABI_CWindows_CUI_CStartScreen_CIVisualElementsRequest* This,
        struct __x_ABI_CWindows_CFoundation_CDateTime* value);
    HRESULT (STDMETHODCALLTYPE* GetDeferral)(__x_ABI_CWindows_CUI_CStartScreen_CIVisualElementsRequest* This,
        __x_ABI_CWindows_CUI_CStartScreen_CIVisualElementsRequestDeferral** deferral);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CStartScreen_CIVisualElementsRequestVtbl;

    interface __x_ABI_CWindows_CUI_CStartScreen_CIVisualElementsRequest
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CStartScreen_CIVisualElementsRequestVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CStartScreen_CIVisualElementsRequest;
#endif /* !defined(____x_ABI_CWindows_CUI_CStartScreen_CIVisualElementsRequest_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CStartScreen_CIVisualElementsRequestDeferral_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CStartScreen_CIVisualElementsRequestDeferral_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CStartScreen_CIVisualElementsRequestDeferralVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CStartScreen_CIVisualElementsRequestDeferral* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CStartScreen_CIVisualElementsRequestDeferral* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CStartScreen_CIVisualElementsRequestDeferral* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CStartScreen_CIVisualElementsRequestDeferral* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CStartScreen_CIVisualElementsRequestDeferral* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CStartScreen_CIVisualElementsRequestDeferral* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* Complete)(__x_ABI_CWindows_CUI_CStartScreen_CIVisualElementsRequestDeferral* This);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CStartScreen_CIVisualElementsRequestDeferralVtbl;

    interface __x_ABI_CWindows_CUI_CStartScreen_CIVisualElementsRequestDeferral
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CStartScreen_CIVisualElementsRequestDeferralVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CStartScreen_CIVisualElementsRequestDeferral;
#endif /* !defined(____x_ABI_CWindows_CUI_CStartScreen_CIVisualElementsRequestDeferral_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CStartScreen_CIVisualElementsRequestedEventArgs_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CStartScreen_CIVisualElementsRequestedEventArgs_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CStartScreen_CIVisualElementsRequestedEventArgsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CStartScreen_CIVisualElementsRequestedEventArgs* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CStartScreen_CIVisualElementsRequestedEventArgs* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CStartScreen_CIVisualElementsRequestedEventArgs* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CStartScreen_CIVisualElementsRequestedEventArgs* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CStartScreen_CIVisualElementsRequestedEventArgs* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CStartScreen_CIVisualElementsRequestedEventArgs* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Request)(__x_ABI_CWindows_CUI_CStartScreen_CIVisualElementsRequestedEventArgs* This,
        __x_ABI_CWindows_CUI_CStartScreen_CIVisualElementsRequest** value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CStartScreen_CIVisualElementsRequestedEventArgsVtbl;

    interface __x_ABI_CWindows_CUI_CStartScreen_CIVisualElementsRequestedEventArgs
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CStartScreen_CIVisualElementsRequestedEventArgsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CStartScreen_CIVisualElementsRequestedEventArgs;
#endif /* !defined(____x_ABI_CWindows_CUI_CStartScreen_CIVisualElementsRequestedEventArgs_INTERFACE_DEFINED__) */
    
