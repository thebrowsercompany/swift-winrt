// WARNING: Please don't edit this file. It was generated by Swift/WinRT v0.0.1

#pragma once
// Header files for imported files
#include <inspectable.h>
#include <EventToken.h>
#include <windowscontracts.h>
#include "IVectorChangedEventArgs.h"
// Importing Collections header
#include "Windows.Foundation.Collections.h"

/* Forward Declarations */
#ifndef ____x_ABI_CWindows_CFoundation_CIAsyncActionCompletedHandler_FWD_DEFINED__
#define ____x_ABI_CWindows_CFoundation_CIAsyncActionCompletedHandler_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CFoundation_CIAsyncActionCompletedHandler __x_ABI_CWindows_CFoundation_CIAsyncActionCompletedHandler;

#endif // ____x_ABI_CWindows_CFoundation_CIAsyncActionCompletedHandler_FWD_DEFINED__

    #ifndef ____x_ABI_CWindows_CFoundation_CIDeferralCompletedHandler_FWD_DEFINED__
#define ____x_ABI_CWindows_CFoundation_CIDeferralCompletedHandler_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CFoundation_CIDeferralCompletedHandler __x_ABI_CWindows_CFoundation_CIDeferralCompletedHandler;

#endif // ____x_ABI_CWindows_CFoundation_CIDeferralCompletedHandler_FWD_DEFINED__

    #ifndef ____x_ABI_CWindows_CFoundation_CIAsyncAction_FWD_DEFINED__
#define ____x_ABI_CWindows_CFoundation_CIAsyncAction_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CFoundation_CIAsyncAction __x_ABI_CWindows_CFoundation_CIAsyncAction;

#endif // ____x_ABI_CWindows_CFoundation_CIAsyncAction_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CFoundation_CIAsyncInfo_FWD_DEFINED__
#define ____x_ABI_CWindows_CFoundation_CIAsyncInfo_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CFoundation_CIAsyncInfo __x_ABI_CWindows_CFoundation_CIAsyncInfo;

#endif // ____x_ABI_CWindows_CFoundation_CIAsyncInfo_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CFoundation_CIClosable_FWD_DEFINED__
#define ____x_ABI_CWindows_CFoundation_CIClosable_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CFoundation_CIClosable __x_ABI_CWindows_CFoundation_CIClosable;

#endif // ____x_ABI_CWindows_CFoundation_CIClosable_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CFoundation_CIDeferral_FWD_DEFINED__
#define ____x_ABI_CWindows_CFoundation_CIDeferral_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CFoundation_CIDeferral __x_ABI_CWindows_CFoundation_CIDeferral;

#endif // ____x_ABI_CWindows_CFoundation_CIDeferral_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CFoundation_CIDeferralFactory_FWD_DEFINED__
#define ____x_ABI_CWindows_CFoundation_CIDeferralFactory_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CFoundation_CIDeferralFactory __x_ABI_CWindows_CFoundation_CIDeferralFactory;

#endif // ____x_ABI_CWindows_CFoundation_CIDeferralFactory_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CFoundation_CIGetActivationFactory_FWD_DEFINED__
#define ____x_ABI_CWindows_CFoundation_CIGetActivationFactory_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CFoundation_CIGetActivationFactory __x_ABI_CWindows_CFoundation_CIGetActivationFactory;

#endif // ____x_ABI_CWindows_CFoundation_CIGetActivationFactory_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CFoundation_CIGuidHelperStatics_FWD_DEFINED__
#define ____x_ABI_CWindows_CFoundation_CIGuidHelperStatics_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CFoundation_CIGuidHelperStatics __x_ABI_CWindows_CFoundation_CIGuidHelperStatics;

#endif // ____x_ABI_CWindows_CFoundation_CIGuidHelperStatics_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CFoundation_CIMemoryBuffer_FWD_DEFINED__
#define ____x_ABI_CWindows_CFoundation_CIMemoryBuffer_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CFoundation_CIMemoryBuffer __x_ABI_CWindows_CFoundation_CIMemoryBuffer;

#endif // ____x_ABI_CWindows_CFoundation_CIMemoryBuffer_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CFoundation_CIMemoryBufferFactory_FWD_DEFINED__
#define ____x_ABI_CWindows_CFoundation_CIMemoryBufferFactory_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CFoundation_CIMemoryBufferFactory __x_ABI_CWindows_CFoundation_CIMemoryBufferFactory;

#endif // ____x_ABI_CWindows_CFoundation_CIMemoryBufferFactory_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CFoundation_CIMemoryBufferReference_FWD_DEFINED__
#define ____x_ABI_CWindows_CFoundation_CIMemoryBufferReference_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CFoundation_CIMemoryBufferReference __x_ABI_CWindows_CFoundation_CIMemoryBufferReference;

#endif // ____x_ABI_CWindows_CFoundation_CIMemoryBufferReference_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CFoundation_CIPropertyValue_FWD_DEFINED__
#define ____x_ABI_CWindows_CFoundation_CIPropertyValue_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CFoundation_CIPropertyValue __x_ABI_CWindows_CFoundation_CIPropertyValue;

#endif // ____x_ABI_CWindows_CFoundation_CIPropertyValue_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CFoundation_CIPropertyValueStatics_FWD_DEFINED__
#define ____x_ABI_CWindows_CFoundation_CIPropertyValueStatics_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CFoundation_CIPropertyValueStatics __x_ABI_CWindows_CFoundation_CIPropertyValueStatics;

#endif // ____x_ABI_CWindows_CFoundation_CIPropertyValueStatics_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CFoundation_CIStringable_FWD_DEFINED__
#define ____x_ABI_CWindows_CFoundation_CIStringable_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CFoundation_CIStringable __x_ABI_CWindows_CFoundation_CIStringable;

#endif // ____x_ABI_CWindows_CFoundation_CIStringable_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CFoundation_CIUriEscapeStatics_FWD_DEFINED__
#define ____x_ABI_CWindows_CFoundation_CIUriEscapeStatics_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CFoundation_CIUriEscapeStatics __x_ABI_CWindows_CFoundation_CIUriEscapeStatics;

#endif // ____x_ABI_CWindows_CFoundation_CIUriEscapeStatics_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CFoundation_CIUriRuntimeClass_FWD_DEFINED__
#define ____x_ABI_CWindows_CFoundation_CIUriRuntimeClass_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CFoundation_CIUriRuntimeClass __x_ABI_CWindows_CFoundation_CIUriRuntimeClass;

#endif // ____x_ABI_CWindows_CFoundation_CIUriRuntimeClass_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CFoundation_CIUriRuntimeClassFactory_FWD_DEFINED__
#define ____x_ABI_CWindows_CFoundation_CIUriRuntimeClassFactory_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CFoundation_CIUriRuntimeClassFactory __x_ABI_CWindows_CFoundation_CIUriRuntimeClassFactory;

#endif // ____x_ABI_CWindows_CFoundation_CIUriRuntimeClassFactory_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CFoundation_CIUriRuntimeClassWithAbsoluteCanonicalUri_FWD_DEFINED__
#define ____x_ABI_CWindows_CFoundation_CIUriRuntimeClassWithAbsoluteCanonicalUri_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CFoundation_CIUriRuntimeClassWithAbsoluteCanonicalUri __x_ABI_CWindows_CFoundation_CIUriRuntimeClassWithAbsoluteCanonicalUri;

#endif // ____x_ABI_CWindows_CFoundation_CIUriRuntimeClassWithAbsoluteCanonicalUri_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CFoundation_CIWwwFormUrlDecoderEntry_FWD_DEFINED__
#define ____x_ABI_CWindows_CFoundation_CIWwwFormUrlDecoderEntry_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CFoundation_CIWwwFormUrlDecoderEntry __x_ABI_CWindows_CFoundation_CIWwwFormUrlDecoderEntry;

#endif // ____x_ABI_CWindows_CFoundation_CIWwwFormUrlDecoderEntry_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CFoundation_CIWwwFormUrlDecoderRuntimeClass_FWD_DEFINED__
#define ____x_ABI_CWindows_CFoundation_CIWwwFormUrlDecoderRuntimeClass_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CFoundation_CIWwwFormUrlDecoderRuntimeClass __x_ABI_CWindows_CFoundation_CIWwwFormUrlDecoderRuntimeClass;

#endif // ____x_ABI_CWindows_CFoundation_CIWwwFormUrlDecoderRuntimeClass_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CFoundation_CIWwwFormUrlDecoderRuntimeClassFactory_FWD_DEFINED__
#define ____x_ABI_CWindows_CFoundation_CIWwwFormUrlDecoderRuntimeClassFactory_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CFoundation_CIWwwFormUrlDecoderRuntimeClassFactory __x_ABI_CWindows_CFoundation_CIWwwFormUrlDecoderRuntimeClassFactory;

#endif // ____x_ABI_CWindows_CFoundation_CIWwwFormUrlDecoderRuntimeClassFactory_FWD_DEFINED__

// Parameterized interface forward declarations (C)

// Collection interface definitions

#if !defined(____x_ABI_C__FIIterator_1___x_ABI_CWindows__CFoundation__CIWwwFormUrlDecoderEntry_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIIterator_1___x_ABI_CWindows__CFoundation__CIWwwFormUrlDecoderEntry_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIIterator_1___x_ABI_CWindows__CFoundation__CIWwwFormUrlDecoderEntry __x_ABI_C__FIIterator_1___x_ABI_CWindows__CFoundation__CIWwwFormUrlDecoderEntry;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIIterator_1___x_ABI_CWindows__CFoundation__CIWwwFormUrlDecoderEntry;

    typedef struct __x_ABI_C__FIIterator_1___x_ABI_CWindows__CFoundation__CIWwwFormUrlDecoderEntryVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CFoundation__CIWwwFormUrlDecoderEntry* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CFoundation__CIWwwFormUrlDecoderEntry* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CFoundation__CIWwwFormUrlDecoderEntry* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CFoundation__CIWwwFormUrlDecoderEntry* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CFoundation__CIWwwFormUrlDecoderEntry* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CFoundation__CIWwwFormUrlDecoderEntry* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Current)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CFoundation__CIWwwFormUrlDecoderEntry* This,
        __x_ABI_CWindows_CFoundation_CIWwwFormUrlDecoderEntry** result);
    HRESULT (STDMETHODCALLTYPE* get_HasCurrent)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CFoundation__CIWwwFormUrlDecoderEntry* This,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* MoveNext)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CFoundation__CIWwwFormUrlDecoderEntry* This,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CFoundation__CIWwwFormUrlDecoderEntry* This,
        UINT32 itemsLength,
        __x_ABI_CWindows_CFoundation_CIWwwFormUrlDecoderEntry** items,
        UINT32* result);

        END_INTERFACE
    } __x_ABI_C__FIIterator_1___x_ABI_CWindows__CFoundation__CIWwwFormUrlDecoderEntryVtbl;

    interface __x_ABI_C__FIIterator_1___x_ABI_CWindows__CFoundation__CIWwwFormUrlDecoderEntry
    {
        CONST_VTBL struct __x_ABI_C__FIIterator_1___x_ABI_CWindows__CFoundation__CIWwwFormUrlDecoderEntryVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIIterator_1___x_ABI_CWindows__CFoundation__CIWwwFormUrlDecoderEntry_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIIterable_1___x_ABI_CWindows__CFoundation__CIWwwFormUrlDecoderEntry_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIIterable_1___x_ABI_CWindows__CFoundation__CIWwwFormUrlDecoderEntry_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIIterable_1___x_ABI_CWindows__CFoundation__CIWwwFormUrlDecoderEntry __x_ABI_C__FIIterable_1___x_ABI_CWindows__CFoundation__CIWwwFormUrlDecoderEntry;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIIterable_1___x_ABI_CWindows__CFoundation__CIWwwFormUrlDecoderEntry;

    typedef struct __x_ABI_C__FIIterable_1___x_ABI_CWindows__CFoundation__CIWwwFormUrlDecoderEntryVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CFoundation__CIWwwFormUrlDecoderEntry* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CFoundation__CIWwwFormUrlDecoderEntry* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CFoundation__CIWwwFormUrlDecoderEntry* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CFoundation__CIWwwFormUrlDecoderEntry* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CFoundation__CIWwwFormUrlDecoderEntry* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CFoundation__CIWwwFormUrlDecoderEntry* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* First)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CFoundation__CIWwwFormUrlDecoderEntry* This,
        __x_ABI_C__FIIterator_1___x_ABI_CWindows__CFoundation__CIWwwFormUrlDecoderEntry** result);

        END_INTERFACE
    } __x_ABI_C__FIIterable_1___x_ABI_CWindows__CFoundation__CIWwwFormUrlDecoderEntryVtbl;

    interface __x_ABI_C__FIIterable_1___x_ABI_CWindows__CFoundation__CIWwwFormUrlDecoderEntry
    {
        CONST_VTBL struct __x_ABI_C__FIIterable_1___x_ABI_CWindows__CFoundation__CIWwwFormUrlDecoderEntryVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIIterable_1___x_ABI_CWindows__CFoundation__CIWwwFormUrlDecoderEntry_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIVectorView_1___x_ABI_CWindows__CFoundation__CIWwwFormUrlDecoderEntry_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIVectorView_1___x_ABI_CWindows__CFoundation__CIWwwFormUrlDecoderEntry_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CFoundation__CIWwwFormUrlDecoderEntry __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CFoundation__CIWwwFormUrlDecoderEntry;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CFoundation__CIWwwFormUrlDecoderEntry;

    typedef struct __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CFoundation__CIWwwFormUrlDecoderEntryVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CFoundation__CIWwwFormUrlDecoderEntry* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CFoundation__CIWwwFormUrlDecoderEntry* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CFoundation__CIWwwFormUrlDecoderEntry* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CFoundation__CIWwwFormUrlDecoderEntry* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CFoundation__CIWwwFormUrlDecoderEntry* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CFoundation__CIWwwFormUrlDecoderEntry* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* GetAt)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CFoundation__CIWwwFormUrlDecoderEntry* This,
        UINT32 index,
        __x_ABI_CWindows_CFoundation_CIWwwFormUrlDecoderEntry** result);
    HRESULT (STDMETHODCALLTYPE* get_Size)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CFoundation__CIWwwFormUrlDecoderEntry* This,
        UINT32* result);
    HRESULT (STDMETHODCALLTYPE* IndexOf)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CFoundation__CIWwwFormUrlDecoderEntry* This,
        __x_ABI_CWindows_CFoundation_CIWwwFormUrlDecoderEntry* value,
        UINT32* index,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CFoundation__CIWwwFormUrlDecoderEntry* This,
        UINT32 startIndex,
        UINT32 itemsLength,
        __x_ABI_CWindows_CFoundation_CIWwwFormUrlDecoderEntry** items,
        UINT32* result);

        END_INTERFACE
    } __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CFoundation__CIWwwFormUrlDecoderEntryVtbl;

    interface __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CFoundation__CIWwwFormUrlDecoderEntry
    {
        CONST_VTBL struct __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CFoundation__CIWwwFormUrlDecoderEntryVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIVectorView_1___x_ABI_CWindows__CFoundation__CIWwwFormUrlDecoderEntry_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CFoundation__CIMemoryBufferReference_IInspectable_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CFoundation__CIMemoryBufferReference_IInspectable_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CFoundation__CIMemoryBufferReference_IInspectable __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CFoundation__CIMemoryBufferReference_IInspectable;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CFoundation__CIMemoryBufferReference_IInspectable;

    typedef struct __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CFoundation__CIMemoryBufferReference_IInspectableVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CFoundation__CIMemoryBufferReference_IInspectable* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CFoundation__CIMemoryBufferReference_IInspectable* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CFoundation__CIMemoryBufferReference_IInspectable* This);
        HRESULT (STDMETHODCALLTYPE* Invoke)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CFoundation__CIMemoryBufferReference_IInspectable* This,
        __x_ABI_CWindows_CFoundation_CIMemoryBufferReference* sender,
        IInspectable* args);

        END_INTERFACE
    } __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CFoundation__CIMemoryBufferReference_IInspectableVtbl;

    interface __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CFoundation__CIMemoryBufferReference_IInspectable
    {
        CONST_VTBL struct __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CFoundation__CIMemoryBufferReference_IInspectableVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CFoundation__CIMemoryBufferReference_IInspectable_INTERFACE_DEFINED__
    
typedef enum __x_ABI_CWindows_CFoundation_CAsyncStatus __x_ABI_CWindows_CFoundation_CAsyncStatus;

typedef enum __x_ABI_CWindows_CFoundation_CPropertyType __x_ABI_CWindows_CFoundation_CPropertyType;

typedef struct __x_ABI_CWindows_CFoundation_CDateTime __x_ABI_CWindows_CFoundation_CDateTime;

typedef struct __x_ABI_CWindows_CFoundation_CPoint __x_ABI_CWindows_CFoundation_CPoint;

typedef struct __x_ABI_CWindows_CFoundation_CRect __x_ABI_CWindows_CFoundation_CRect;

typedef struct __x_ABI_CWindows_CFoundation_CSize __x_ABI_CWindows_CFoundation_CSize;

typedef struct __x_ABI_CWindows_CFoundation_CTimeSpan __x_ABI_CWindows_CFoundation_CTimeSpan;

enum __x_ABI_CWindows_CFoundation_CAsyncStatus
    {
        __x_ABI_CWindows_CFoundation_CAsyncStatus_Canceled = 2,
    __x_ABI_CWindows_CFoundation_CAsyncStatus_Completed = 1,
    __x_ABI_CWindows_CFoundation_CAsyncStatus_Error = 3,
    __x_ABI_CWindows_CFoundation_CAsyncStatus_Started = 0,
};

enum __x_ABI_CWindows_CFoundation_CPropertyType
    {
        __x_ABI_CWindows_CFoundation_CPropertyType_Empty = 0,
    __x_ABI_CWindows_CFoundation_CPropertyType_UInt8 = 1,
    __x_ABI_CWindows_CFoundation_CPropertyType_Int16 = 2,
    __x_ABI_CWindows_CFoundation_CPropertyType_UInt16 = 3,
    __x_ABI_CWindows_CFoundation_CPropertyType_Int32 = 4,
    __x_ABI_CWindows_CFoundation_CPropertyType_UInt32 = 5,
    __x_ABI_CWindows_CFoundation_CPropertyType_Int64 = 6,
    __x_ABI_CWindows_CFoundation_CPropertyType_UInt64 = 7,
    __x_ABI_CWindows_CFoundation_CPropertyType_Single = 8,
    __x_ABI_CWindows_CFoundation_CPropertyType_Double = 9,
    __x_ABI_CWindows_CFoundation_CPropertyType_Char16 = 10,
    __x_ABI_CWindows_CFoundation_CPropertyType_Boolean = 11,
    __x_ABI_CWindows_CFoundation_CPropertyType_String = 12,
    __x_ABI_CWindows_CFoundation_CPropertyType_Inspectable = 13,
    __x_ABI_CWindows_CFoundation_CPropertyType_DateTime = 14,
    __x_ABI_CWindows_CFoundation_CPropertyType_TimeSpan = 15,
    __x_ABI_CWindows_CFoundation_CPropertyType_Guid = 16,
    __x_ABI_CWindows_CFoundation_CPropertyType_Point = 17,
    __x_ABI_CWindows_CFoundation_CPropertyType_Size = 18,
    __x_ABI_CWindows_CFoundation_CPropertyType_Rect = 19,
    __x_ABI_CWindows_CFoundation_CPropertyType_OtherType = 20,
    __x_ABI_CWindows_CFoundation_CPropertyType_UInt8Array = 1025,
    __x_ABI_CWindows_CFoundation_CPropertyType_Int16Array = 1026,
    __x_ABI_CWindows_CFoundation_CPropertyType_UInt16Array = 1027,
    __x_ABI_CWindows_CFoundation_CPropertyType_Int32Array = 1028,
    __x_ABI_CWindows_CFoundation_CPropertyType_UInt32Array = 1029,
    __x_ABI_CWindows_CFoundation_CPropertyType_Int64Array = 1030,
    __x_ABI_CWindows_CFoundation_CPropertyType_UInt64Array = 1031,
    __x_ABI_CWindows_CFoundation_CPropertyType_SingleArray = 1032,
    __x_ABI_CWindows_CFoundation_CPropertyType_DoubleArray = 1033,
    __x_ABI_CWindows_CFoundation_CPropertyType_Char16Array = 1034,
    __x_ABI_CWindows_CFoundation_CPropertyType_BooleanArray = 1035,
    __x_ABI_CWindows_CFoundation_CPropertyType_StringArray = 1036,
    __x_ABI_CWindows_CFoundation_CPropertyType_InspectableArray = 1037,
    __x_ABI_CWindows_CFoundation_CPropertyType_DateTimeArray = 1038,
    __x_ABI_CWindows_CFoundation_CPropertyType_TimeSpanArray = 1039,
    __x_ABI_CWindows_CFoundation_CPropertyType_GuidArray = 1040,
    __x_ABI_CWindows_CFoundation_CPropertyType_PointArray = 1041,
    __x_ABI_CWindows_CFoundation_CPropertyType_SizeArray = 1042,
    __x_ABI_CWindows_CFoundation_CPropertyType_RectArray = 1043,
    __x_ABI_CWindows_CFoundation_CPropertyType_OtherTypeArray = 1044,
};

struct __x_ABI_CWindows_CFoundation_CDateTime
    {
        INT64 UniversalTime;
};

struct __x_ABI_CWindows_CFoundation_CPoint
    {
        FLOAT X;
    FLOAT Y;
};

struct __x_ABI_CWindows_CFoundation_CRect
    {
        FLOAT X;
    FLOAT Y;
    FLOAT Width;
    FLOAT Height;
};

struct __x_ABI_CWindows_CFoundation_CSize
    {
        FLOAT Width;
    FLOAT Height;
};

struct __x_ABI_CWindows_CFoundation_CTimeSpan
    {
        INT64 Duration;
};

#if !defined(____x_ABI_CWindows_CFoundation_CIAsyncActionCompletedHandler_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CFoundation_CIAsyncActionCompletedHandler_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CFoundation_CIAsyncActionCompletedHandlerVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CFoundation_CIAsyncActionCompletedHandler* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CFoundation_CIAsyncActionCompletedHandler* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CFoundation_CIAsyncActionCompletedHandler* This);
        HRESULT (STDMETHODCALLTYPE* Invoke)(__x_ABI_CWindows_CFoundation_CIAsyncActionCompletedHandler* This,
        __x_ABI_CWindows_CFoundation_CIAsyncAction* asyncInfo,
        enum __x_ABI_CWindows_CFoundation_CAsyncStatus asyncStatus);

        END_INTERFACE
    } __x_ABI_CWindows_CFoundation_CIAsyncActionCompletedHandlerVtbl;

    interface __x_ABI_CWindows_CFoundation_CIAsyncActionCompletedHandler
    {
        CONST_VTBL struct __x_ABI_CWindows_CFoundation_CIAsyncActionCompletedHandlerVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CFoundation_CIAsyncActionCompletedHandler;
    #endif /* !defined(____x_ABI_CWindows_CFoundation_CIAsyncActionCompletedHandler_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CFoundation_CIDeferralCompletedHandler_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CFoundation_CIDeferralCompletedHandler_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CFoundation_CIDeferralCompletedHandlerVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CFoundation_CIDeferralCompletedHandler* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CFoundation_CIDeferralCompletedHandler* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CFoundation_CIDeferralCompletedHandler* This);
        HRESULT (STDMETHODCALLTYPE* Invoke)(__x_ABI_CWindows_CFoundation_CIDeferralCompletedHandler* This);

        END_INTERFACE
    } __x_ABI_CWindows_CFoundation_CIDeferralCompletedHandlerVtbl;

    interface __x_ABI_CWindows_CFoundation_CIDeferralCompletedHandler
    {
        CONST_VTBL struct __x_ABI_CWindows_CFoundation_CIDeferralCompletedHandlerVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CFoundation_CIDeferralCompletedHandler;
    #endif /* !defined(____x_ABI_CWindows_CFoundation_CIDeferralCompletedHandler_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CFoundation_CIAsyncAction_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CFoundation_CIAsyncAction_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CFoundation_CIAsyncActionVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CFoundation_CIAsyncAction* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CFoundation_CIAsyncAction* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CFoundation_CIAsyncAction* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CFoundation_CIAsyncAction* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CFoundation_CIAsyncAction* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CFoundation_CIAsyncAction* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* put_Completed)(__x_ABI_CWindows_CFoundation_CIAsyncAction* This,
        __x_ABI_CWindows_CFoundation_CIAsyncActionCompletedHandler* handler);
    HRESULT (STDMETHODCALLTYPE* get_Completed)(__x_ABI_CWindows_CFoundation_CIAsyncAction* This,
        __x_ABI_CWindows_CFoundation_CIAsyncActionCompletedHandler** handler);
    HRESULT (STDMETHODCALLTYPE* GetResults)(__x_ABI_CWindows_CFoundation_CIAsyncAction* This);

        END_INTERFACE
    } __x_ABI_CWindows_CFoundation_CIAsyncActionVtbl;

    interface __x_ABI_CWindows_CFoundation_CIAsyncAction
    {
        CONST_VTBL struct __x_ABI_CWindows_CFoundation_CIAsyncActionVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CFoundation_CIAsyncAction;
#endif /* !defined(____x_ABI_CWindows_CFoundation_CIAsyncAction_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CFoundation_CIAsyncInfo_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CFoundation_CIAsyncInfo_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CFoundation_CIAsyncInfoVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CFoundation_CIAsyncInfo* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CFoundation_CIAsyncInfo* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CFoundation_CIAsyncInfo* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CFoundation_CIAsyncInfo* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CFoundation_CIAsyncInfo* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CFoundation_CIAsyncInfo* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Id)(__x_ABI_CWindows_CFoundation_CIAsyncInfo* This,
        UINT32* result);
    HRESULT (STDMETHODCALLTYPE* get_Status)(__x_ABI_CWindows_CFoundation_CIAsyncInfo* This,
        enum __x_ABI_CWindows_CFoundation_CAsyncStatus* result);
    HRESULT (STDMETHODCALLTYPE* get_ErrorCode)(__x_ABI_CWindows_CFoundation_CIAsyncInfo* This,
        HRESULT* result);
    HRESULT (STDMETHODCALLTYPE* Cancel)(__x_ABI_CWindows_CFoundation_CIAsyncInfo* This);
    HRESULT (STDMETHODCALLTYPE* Close)(__x_ABI_CWindows_CFoundation_CIAsyncInfo* This);

        END_INTERFACE
    } __x_ABI_CWindows_CFoundation_CIAsyncInfoVtbl;

    interface __x_ABI_CWindows_CFoundation_CIAsyncInfo
    {
        CONST_VTBL struct __x_ABI_CWindows_CFoundation_CIAsyncInfoVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CFoundation_CIAsyncInfo;
#endif /* !defined(____x_ABI_CWindows_CFoundation_CIAsyncInfo_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CFoundation_CIClosable_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CFoundation_CIClosable_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CFoundation_CIClosableVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CFoundation_CIClosable* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CFoundation_CIClosable* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CFoundation_CIClosable* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CFoundation_CIClosable* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CFoundation_CIClosable* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CFoundation_CIClosable* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* Close)(__x_ABI_CWindows_CFoundation_CIClosable* This);

        END_INTERFACE
    } __x_ABI_CWindows_CFoundation_CIClosableVtbl;

    interface __x_ABI_CWindows_CFoundation_CIClosable
    {
        CONST_VTBL struct __x_ABI_CWindows_CFoundation_CIClosableVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CFoundation_CIClosable;
#endif /* !defined(____x_ABI_CWindows_CFoundation_CIClosable_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CFoundation_CIDeferral_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CFoundation_CIDeferral_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CFoundation_CIDeferralVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CFoundation_CIDeferral* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CFoundation_CIDeferral* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CFoundation_CIDeferral* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CFoundation_CIDeferral* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CFoundation_CIDeferral* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CFoundation_CIDeferral* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* Complete)(__x_ABI_CWindows_CFoundation_CIDeferral* This);

        END_INTERFACE
    } __x_ABI_CWindows_CFoundation_CIDeferralVtbl;

    interface __x_ABI_CWindows_CFoundation_CIDeferral
    {
        CONST_VTBL struct __x_ABI_CWindows_CFoundation_CIDeferralVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CFoundation_CIDeferral;
#endif /* !defined(____x_ABI_CWindows_CFoundation_CIDeferral_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CFoundation_CIDeferralFactory_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CFoundation_CIDeferralFactory_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CFoundation_CIDeferralFactoryVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CFoundation_CIDeferralFactory* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CFoundation_CIDeferralFactory* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CFoundation_CIDeferralFactory* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CFoundation_CIDeferralFactory* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CFoundation_CIDeferralFactory* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CFoundation_CIDeferralFactory* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* Create)(__x_ABI_CWindows_CFoundation_CIDeferralFactory* This,
        __x_ABI_CWindows_CFoundation_CIDeferralCompletedHandler* handler,
        __x_ABI_CWindows_CFoundation_CIDeferral** result);

        END_INTERFACE
    } __x_ABI_CWindows_CFoundation_CIDeferralFactoryVtbl;

    interface __x_ABI_CWindows_CFoundation_CIDeferralFactory
    {
        CONST_VTBL struct __x_ABI_CWindows_CFoundation_CIDeferralFactoryVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CFoundation_CIDeferralFactory;
#endif /* !defined(____x_ABI_CWindows_CFoundation_CIDeferralFactory_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CFoundation_CIGetActivationFactory_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CFoundation_CIGetActivationFactory_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CFoundation_CIGetActivationFactoryVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CFoundation_CIGetActivationFactory* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CFoundation_CIGetActivationFactory* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CFoundation_CIGetActivationFactory* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CFoundation_CIGetActivationFactory* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CFoundation_CIGetActivationFactory* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CFoundation_CIGetActivationFactory* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* GetActivationFactory)(__x_ABI_CWindows_CFoundation_CIGetActivationFactory* This,
        HSTRING activatableClassId,
        IInspectable** factory);

        END_INTERFACE
    } __x_ABI_CWindows_CFoundation_CIGetActivationFactoryVtbl;

    interface __x_ABI_CWindows_CFoundation_CIGetActivationFactory
    {
        CONST_VTBL struct __x_ABI_CWindows_CFoundation_CIGetActivationFactoryVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CFoundation_CIGetActivationFactory;
#endif /* !defined(____x_ABI_CWindows_CFoundation_CIGetActivationFactory_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CFoundation_CIGuidHelperStatics_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CFoundation_CIGuidHelperStatics_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CFoundation_CIGuidHelperStaticsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CFoundation_CIGuidHelperStatics* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CFoundation_CIGuidHelperStatics* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CFoundation_CIGuidHelperStatics* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CFoundation_CIGuidHelperStatics* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CFoundation_CIGuidHelperStatics* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CFoundation_CIGuidHelperStatics* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* CreateNewGuid)(__x_ABI_CWindows_CFoundation_CIGuidHelperStatics* This,
        GUID* result);
    HRESULT (STDMETHODCALLTYPE* get_Empty)(__x_ABI_CWindows_CFoundation_CIGuidHelperStatics* This,
        GUID* value);
    HRESULT (STDMETHODCALLTYPE* Equals)(__x_ABI_CWindows_CFoundation_CIGuidHelperStatics* This,
        const GUID* target,
        const GUID* value,
        boolean* result);

        END_INTERFACE
    } __x_ABI_CWindows_CFoundation_CIGuidHelperStaticsVtbl;

    interface __x_ABI_CWindows_CFoundation_CIGuidHelperStatics
    {
        CONST_VTBL struct __x_ABI_CWindows_CFoundation_CIGuidHelperStaticsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CFoundation_CIGuidHelperStatics;
#endif /* !defined(____x_ABI_CWindows_CFoundation_CIGuidHelperStatics_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CFoundation_CIMemoryBuffer_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CFoundation_CIMemoryBuffer_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CFoundation_CIMemoryBufferVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CFoundation_CIMemoryBuffer* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CFoundation_CIMemoryBuffer* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CFoundation_CIMemoryBuffer* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CFoundation_CIMemoryBuffer* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CFoundation_CIMemoryBuffer* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CFoundation_CIMemoryBuffer* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* CreateReference)(__x_ABI_CWindows_CFoundation_CIMemoryBuffer* This,
        __x_ABI_CWindows_CFoundation_CIMemoryBufferReference** reference);

        END_INTERFACE
    } __x_ABI_CWindows_CFoundation_CIMemoryBufferVtbl;

    interface __x_ABI_CWindows_CFoundation_CIMemoryBuffer
    {
        CONST_VTBL struct __x_ABI_CWindows_CFoundation_CIMemoryBufferVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CFoundation_CIMemoryBuffer;
#endif /* !defined(____x_ABI_CWindows_CFoundation_CIMemoryBuffer_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CFoundation_CIMemoryBufferFactory_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CFoundation_CIMemoryBufferFactory_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CFoundation_CIMemoryBufferFactoryVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CFoundation_CIMemoryBufferFactory* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CFoundation_CIMemoryBufferFactory* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CFoundation_CIMemoryBufferFactory* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CFoundation_CIMemoryBufferFactory* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CFoundation_CIMemoryBufferFactory* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CFoundation_CIMemoryBufferFactory* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* Create)(__x_ABI_CWindows_CFoundation_CIMemoryBufferFactory* This,
        UINT32 capacity,
        __x_ABI_CWindows_CFoundation_CIMemoryBuffer** value);

        END_INTERFACE
    } __x_ABI_CWindows_CFoundation_CIMemoryBufferFactoryVtbl;

    interface __x_ABI_CWindows_CFoundation_CIMemoryBufferFactory
    {
        CONST_VTBL struct __x_ABI_CWindows_CFoundation_CIMemoryBufferFactoryVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CFoundation_CIMemoryBufferFactory;
#endif /* !defined(____x_ABI_CWindows_CFoundation_CIMemoryBufferFactory_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CFoundation_CIMemoryBufferReference_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CFoundation_CIMemoryBufferReference_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CFoundation_CIMemoryBufferReferenceVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CFoundation_CIMemoryBufferReference* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CFoundation_CIMemoryBufferReference* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CFoundation_CIMemoryBufferReference* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CFoundation_CIMemoryBufferReference* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CFoundation_CIMemoryBufferReference* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CFoundation_CIMemoryBufferReference* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Capacity)(__x_ABI_CWindows_CFoundation_CIMemoryBufferReference* This,
        UINT32* value);
    HRESULT (STDMETHODCALLTYPE* add_Closed)(__x_ABI_CWindows_CFoundation_CIMemoryBufferReference* This,
        __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CFoundation__CIMemoryBufferReference_IInspectable* handler,
        EventRegistrationToken* cookie);
    HRESULT (STDMETHODCALLTYPE* remove_Closed)(__x_ABI_CWindows_CFoundation_CIMemoryBufferReference* This,
        EventRegistrationToken cookie);

        END_INTERFACE
    } __x_ABI_CWindows_CFoundation_CIMemoryBufferReferenceVtbl;

    interface __x_ABI_CWindows_CFoundation_CIMemoryBufferReference
    {
        CONST_VTBL struct __x_ABI_CWindows_CFoundation_CIMemoryBufferReferenceVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CFoundation_CIMemoryBufferReference;
#endif /* !defined(____x_ABI_CWindows_CFoundation_CIMemoryBufferReference_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CFoundation_CIPropertyValue_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CFoundation_CIPropertyValue_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CFoundation_CIPropertyValueVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CFoundation_CIPropertyValue* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CFoundation_CIPropertyValue* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CFoundation_CIPropertyValue* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CFoundation_CIPropertyValue* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CFoundation_CIPropertyValue* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CFoundation_CIPropertyValue* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Type)(__x_ABI_CWindows_CFoundation_CIPropertyValue* This,
        enum __x_ABI_CWindows_CFoundation_CPropertyType* value);
    HRESULT (STDMETHODCALLTYPE* get_IsNumericScalar)(__x_ABI_CWindows_CFoundation_CIPropertyValue* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* GetUInt8)(__x_ABI_CWindows_CFoundation_CIPropertyValue* This,
        BYTE* value);
    HRESULT (STDMETHODCALLTYPE* GetInt16)(__x_ABI_CWindows_CFoundation_CIPropertyValue* This,
        INT16* value);
    HRESULT (STDMETHODCALLTYPE* GetUInt16)(__x_ABI_CWindows_CFoundation_CIPropertyValue* This,
        UINT16* value);
    HRESULT (STDMETHODCALLTYPE* GetInt32)(__x_ABI_CWindows_CFoundation_CIPropertyValue* This,
        INT32* value);
    HRESULT (STDMETHODCALLTYPE* GetUInt32)(__x_ABI_CWindows_CFoundation_CIPropertyValue* This,
        UINT32* value);
    HRESULT (STDMETHODCALLTYPE* GetInt64)(__x_ABI_CWindows_CFoundation_CIPropertyValue* This,
        INT64* value);
    HRESULT (STDMETHODCALLTYPE* GetUInt64)(__x_ABI_CWindows_CFoundation_CIPropertyValue* This,
        UINT64* value);
    HRESULT (STDMETHODCALLTYPE* GetSingle)(__x_ABI_CWindows_CFoundation_CIPropertyValue* This,
        FLOAT* value);
    HRESULT (STDMETHODCALLTYPE* GetDouble)(__x_ABI_CWindows_CFoundation_CIPropertyValue* This,
        DOUBLE* value);
    HRESULT (STDMETHODCALLTYPE* GetChar16)(__x_ABI_CWindows_CFoundation_CIPropertyValue* This,
        WCHAR* value);
    HRESULT (STDMETHODCALLTYPE* GetBoolean)(__x_ABI_CWindows_CFoundation_CIPropertyValue* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* GetString)(__x_ABI_CWindows_CFoundation_CIPropertyValue* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* GetGuid)(__x_ABI_CWindows_CFoundation_CIPropertyValue* This,
        GUID* value);
    HRESULT (STDMETHODCALLTYPE* GetDateTime)(__x_ABI_CWindows_CFoundation_CIPropertyValue* This,
        struct __x_ABI_CWindows_CFoundation_CDateTime* value);
    HRESULT (STDMETHODCALLTYPE* GetTimeSpan)(__x_ABI_CWindows_CFoundation_CIPropertyValue* This,
        struct __x_ABI_CWindows_CFoundation_CTimeSpan* value);
    HRESULT (STDMETHODCALLTYPE* GetPoint)(__x_ABI_CWindows_CFoundation_CIPropertyValue* This,
        struct __x_ABI_CWindows_CFoundation_CPoint* value);
    HRESULT (STDMETHODCALLTYPE* GetSize)(__x_ABI_CWindows_CFoundation_CIPropertyValue* This,
        struct __x_ABI_CWindows_CFoundation_CSize* value);
    HRESULT (STDMETHODCALLTYPE* GetRect)(__x_ABI_CWindows_CFoundation_CIPropertyValue* This,
        struct __x_ABI_CWindows_CFoundation_CRect* value);
    HRESULT (STDMETHODCALLTYPE* GetUInt8Array)(__x_ABI_CWindows_CFoundation_CIPropertyValue* This,
        UINT32* valueLength,
        BYTE** value);
    HRESULT (STDMETHODCALLTYPE* GetInt16Array)(__x_ABI_CWindows_CFoundation_CIPropertyValue* This,
        UINT32* valueLength,
        INT16** value);
    HRESULT (STDMETHODCALLTYPE* GetUInt16Array)(__x_ABI_CWindows_CFoundation_CIPropertyValue* This,
        UINT32* valueLength,
        UINT16** value);
    HRESULT (STDMETHODCALLTYPE* GetInt32Array)(__x_ABI_CWindows_CFoundation_CIPropertyValue* This,
        UINT32* valueLength,
        INT32** value);
    HRESULT (STDMETHODCALLTYPE* GetUInt32Array)(__x_ABI_CWindows_CFoundation_CIPropertyValue* This,
        UINT32* valueLength,
        UINT32** value);
    HRESULT (STDMETHODCALLTYPE* GetInt64Array)(__x_ABI_CWindows_CFoundation_CIPropertyValue* This,
        UINT32* valueLength,
        INT64** value);
    HRESULT (STDMETHODCALLTYPE* GetUInt64Array)(__x_ABI_CWindows_CFoundation_CIPropertyValue* This,
        UINT32* valueLength,
        UINT64** value);
    HRESULT (STDMETHODCALLTYPE* GetSingleArray)(__x_ABI_CWindows_CFoundation_CIPropertyValue* This,
        UINT32* valueLength,
        FLOAT** value);
    HRESULT (STDMETHODCALLTYPE* GetDoubleArray)(__x_ABI_CWindows_CFoundation_CIPropertyValue* This,
        UINT32* valueLength,
        DOUBLE** value);
    HRESULT (STDMETHODCALLTYPE* GetChar16Array)(__x_ABI_CWindows_CFoundation_CIPropertyValue* This,
        UINT32* valueLength,
        WCHAR** value);
    HRESULT (STDMETHODCALLTYPE* GetBooleanArray)(__x_ABI_CWindows_CFoundation_CIPropertyValue* This,
        UINT32* valueLength,
        boolean** value);
    HRESULT (STDMETHODCALLTYPE* GetStringArray)(__x_ABI_CWindows_CFoundation_CIPropertyValue* This,
        UINT32* valueLength,
        HSTRING** value);
    HRESULT (STDMETHODCALLTYPE* GetInspectableArray)(__x_ABI_CWindows_CFoundation_CIPropertyValue* This,
        UINT32* valueLength,
        IInspectable*** value);
    HRESULT (STDMETHODCALLTYPE* GetGuidArray)(__x_ABI_CWindows_CFoundation_CIPropertyValue* This,
        UINT32* valueLength,
        GUID** value);
    HRESULT (STDMETHODCALLTYPE* GetDateTimeArray)(__x_ABI_CWindows_CFoundation_CIPropertyValue* This,
        UINT32* valueLength,
        struct __x_ABI_CWindows_CFoundation_CDateTime** value);
    HRESULT (STDMETHODCALLTYPE* GetTimeSpanArray)(__x_ABI_CWindows_CFoundation_CIPropertyValue* This,
        UINT32* valueLength,
        struct __x_ABI_CWindows_CFoundation_CTimeSpan** value);
    HRESULT (STDMETHODCALLTYPE* GetPointArray)(__x_ABI_CWindows_CFoundation_CIPropertyValue* This,
        UINT32* valueLength,
        struct __x_ABI_CWindows_CFoundation_CPoint** value);
    HRESULT (STDMETHODCALLTYPE* GetSizeArray)(__x_ABI_CWindows_CFoundation_CIPropertyValue* This,
        UINT32* valueLength,
        struct __x_ABI_CWindows_CFoundation_CSize** value);
    HRESULT (STDMETHODCALLTYPE* GetRectArray)(__x_ABI_CWindows_CFoundation_CIPropertyValue* This,
        UINT32* valueLength,
        struct __x_ABI_CWindows_CFoundation_CRect** value);

        END_INTERFACE
    } __x_ABI_CWindows_CFoundation_CIPropertyValueVtbl;

    interface __x_ABI_CWindows_CFoundation_CIPropertyValue
    {
        CONST_VTBL struct __x_ABI_CWindows_CFoundation_CIPropertyValueVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CFoundation_CIPropertyValue;
#endif /* !defined(____x_ABI_CWindows_CFoundation_CIPropertyValue_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CFoundation_CIPropertyValueStatics_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CFoundation_CIPropertyValueStatics_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CFoundation_CIPropertyValueStaticsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CFoundation_CIPropertyValueStatics* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CFoundation_CIPropertyValueStatics* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CFoundation_CIPropertyValueStatics* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CFoundation_CIPropertyValueStatics* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CFoundation_CIPropertyValueStatics* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CFoundation_CIPropertyValueStatics* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* CreateEmpty)(__x_ABI_CWindows_CFoundation_CIPropertyValueStatics* This,
        IInspectable** propertyValue);
    HRESULT (STDMETHODCALLTYPE* CreateUInt8)(__x_ABI_CWindows_CFoundation_CIPropertyValueStatics* This,
        BYTE value,
        IInspectable** propertyValue);
    HRESULT (STDMETHODCALLTYPE* CreateInt16)(__x_ABI_CWindows_CFoundation_CIPropertyValueStatics* This,
        INT16 value,
        IInspectable** propertyValue);
    HRESULT (STDMETHODCALLTYPE* CreateUInt16)(__x_ABI_CWindows_CFoundation_CIPropertyValueStatics* This,
        UINT16 value,
        IInspectable** propertyValue);
    HRESULT (STDMETHODCALLTYPE* CreateInt32)(__x_ABI_CWindows_CFoundation_CIPropertyValueStatics* This,
        INT32 value,
        IInspectable** propertyValue);
    HRESULT (STDMETHODCALLTYPE* CreateUInt32)(__x_ABI_CWindows_CFoundation_CIPropertyValueStatics* This,
        UINT32 value,
        IInspectable** propertyValue);
    HRESULT (STDMETHODCALLTYPE* CreateInt64)(__x_ABI_CWindows_CFoundation_CIPropertyValueStatics* This,
        INT64 value,
        IInspectable** propertyValue);
    HRESULT (STDMETHODCALLTYPE* CreateUInt64)(__x_ABI_CWindows_CFoundation_CIPropertyValueStatics* This,
        UINT64 value,
        IInspectable** propertyValue);
    HRESULT (STDMETHODCALLTYPE* CreateSingle)(__x_ABI_CWindows_CFoundation_CIPropertyValueStatics* This,
        FLOAT value,
        IInspectable** propertyValue);
    HRESULT (STDMETHODCALLTYPE* CreateDouble)(__x_ABI_CWindows_CFoundation_CIPropertyValueStatics* This,
        DOUBLE value,
        IInspectable** propertyValue);
    HRESULT (STDMETHODCALLTYPE* CreateChar16)(__x_ABI_CWindows_CFoundation_CIPropertyValueStatics* This,
        WCHAR value,
        IInspectable** propertyValue);
    HRESULT (STDMETHODCALLTYPE* CreateBoolean)(__x_ABI_CWindows_CFoundation_CIPropertyValueStatics* This,
        boolean value,
        IInspectable** propertyValue);
    HRESULT (STDMETHODCALLTYPE* CreateString)(__x_ABI_CWindows_CFoundation_CIPropertyValueStatics* This,
        HSTRING value,
        IInspectable** propertyValue);
    HRESULT (STDMETHODCALLTYPE* CreateInspectable)(__x_ABI_CWindows_CFoundation_CIPropertyValueStatics* This,
        IInspectable* value,
        IInspectable** propertyValue);
    HRESULT (STDMETHODCALLTYPE* CreateGuid)(__x_ABI_CWindows_CFoundation_CIPropertyValueStatics* This,
        GUID value,
        IInspectable** propertyValue);
    HRESULT (STDMETHODCALLTYPE* CreateDateTime)(__x_ABI_CWindows_CFoundation_CIPropertyValueStatics* This,
        struct __x_ABI_CWindows_CFoundation_CDateTime value,
        IInspectable** propertyValue);
    HRESULT (STDMETHODCALLTYPE* CreateTimeSpan)(__x_ABI_CWindows_CFoundation_CIPropertyValueStatics* This,
        struct __x_ABI_CWindows_CFoundation_CTimeSpan value,
        IInspectable** propertyValue);
    HRESULT (STDMETHODCALLTYPE* CreatePoint)(__x_ABI_CWindows_CFoundation_CIPropertyValueStatics* This,
        struct __x_ABI_CWindows_CFoundation_CPoint value,
        IInspectable** propertyValue);
    HRESULT (STDMETHODCALLTYPE* CreateSize)(__x_ABI_CWindows_CFoundation_CIPropertyValueStatics* This,
        struct __x_ABI_CWindows_CFoundation_CSize value,
        IInspectable** propertyValue);
    HRESULT (STDMETHODCALLTYPE* CreateRect)(__x_ABI_CWindows_CFoundation_CIPropertyValueStatics* This,
        struct __x_ABI_CWindows_CFoundation_CRect value,
        IInspectable** propertyValue);
    HRESULT (STDMETHODCALLTYPE* CreateUInt8Array)(__x_ABI_CWindows_CFoundation_CIPropertyValueStatics* This,
        UINT32 valueLength,
        BYTE* value,
        IInspectable** propertyValue);
    HRESULT (STDMETHODCALLTYPE* CreateInt16Array)(__x_ABI_CWindows_CFoundation_CIPropertyValueStatics* This,
        UINT32 valueLength,
        INT16* value,
        IInspectable** propertyValue);
    HRESULT (STDMETHODCALLTYPE* CreateUInt16Array)(__x_ABI_CWindows_CFoundation_CIPropertyValueStatics* This,
        UINT32 valueLength,
        UINT16* value,
        IInspectable** propertyValue);
    HRESULT (STDMETHODCALLTYPE* CreateInt32Array)(__x_ABI_CWindows_CFoundation_CIPropertyValueStatics* This,
        UINT32 valueLength,
        INT32* value,
        IInspectable** propertyValue);
    HRESULT (STDMETHODCALLTYPE* CreateUInt32Array)(__x_ABI_CWindows_CFoundation_CIPropertyValueStatics* This,
        UINT32 valueLength,
        UINT32* value,
        IInspectable** propertyValue);
    HRESULT (STDMETHODCALLTYPE* CreateInt64Array)(__x_ABI_CWindows_CFoundation_CIPropertyValueStatics* This,
        UINT32 valueLength,
        INT64* value,
        IInspectable** propertyValue);
    HRESULT (STDMETHODCALLTYPE* CreateUInt64Array)(__x_ABI_CWindows_CFoundation_CIPropertyValueStatics* This,
        UINT32 valueLength,
        UINT64* value,
        IInspectable** propertyValue);
    HRESULT (STDMETHODCALLTYPE* CreateSingleArray)(__x_ABI_CWindows_CFoundation_CIPropertyValueStatics* This,
        UINT32 valueLength,
        FLOAT* value,
        IInspectable** propertyValue);
    HRESULT (STDMETHODCALLTYPE* CreateDoubleArray)(__x_ABI_CWindows_CFoundation_CIPropertyValueStatics* This,
        UINT32 valueLength,
        DOUBLE* value,
        IInspectable** propertyValue);
    HRESULT (STDMETHODCALLTYPE* CreateChar16Array)(__x_ABI_CWindows_CFoundation_CIPropertyValueStatics* This,
        UINT32 valueLength,
        WCHAR* value,
        IInspectable** propertyValue);
    HRESULT (STDMETHODCALLTYPE* CreateBooleanArray)(__x_ABI_CWindows_CFoundation_CIPropertyValueStatics* This,
        UINT32 valueLength,
        boolean* value,
        IInspectable** propertyValue);
    HRESULT (STDMETHODCALLTYPE* CreateStringArray)(__x_ABI_CWindows_CFoundation_CIPropertyValueStatics* This,
        UINT32 valueLength,
        HSTRING* value,
        IInspectable** propertyValue);
    HRESULT (STDMETHODCALLTYPE* CreateInspectableArray)(__x_ABI_CWindows_CFoundation_CIPropertyValueStatics* This,
        UINT32 valueLength,
        IInspectable** value,
        IInspectable** propertyValue);
    HRESULT (STDMETHODCALLTYPE* CreateGuidArray)(__x_ABI_CWindows_CFoundation_CIPropertyValueStatics* This,
        UINT32 valueLength,
        GUID* value,
        IInspectable** propertyValue);
    HRESULT (STDMETHODCALLTYPE* CreateDateTimeArray)(__x_ABI_CWindows_CFoundation_CIPropertyValueStatics* This,
        UINT32 valueLength,
        struct __x_ABI_CWindows_CFoundation_CDateTime* value,
        IInspectable** propertyValue);
    HRESULT (STDMETHODCALLTYPE* CreateTimeSpanArray)(__x_ABI_CWindows_CFoundation_CIPropertyValueStatics* This,
        UINT32 valueLength,
        struct __x_ABI_CWindows_CFoundation_CTimeSpan* value,
        IInspectable** propertyValue);
    HRESULT (STDMETHODCALLTYPE* CreatePointArray)(__x_ABI_CWindows_CFoundation_CIPropertyValueStatics* This,
        UINT32 valueLength,
        struct __x_ABI_CWindows_CFoundation_CPoint* value,
        IInspectable** propertyValue);
    HRESULT (STDMETHODCALLTYPE* CreateSizeArray)(__x_ABI_CWindows_CFoundation_CIPropertyValueStatics* This,
        UINT32 valueLength,
        struct __x_ABI_CWindows_CFoundation_CSize* value,
        IInspectable** propertyValue);
    HRESULT (STDMETHODCALLTYPE* CreateRectArray)(__x_ABI_CWindows_CFoundation_CIPropertyValueStatics* This,
        UINT32 valueLength,
        struct __x_ABI_CWindows_CFoundation_CRect* value,
        IInspectable** propertyValue);

        END_INTERFACE
    } __x_ABI_CWindows_CFoundation_CIPropertyValueStaticsVtbl;

    interface __x_ABI_CWindows_CFoundation_CIPropertyValueStatics
    {
        CONST_VTBL struct __x_ABI_CWindows_CFoundation_CIPropertyValueStaticsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CFoundation_CIPropertyValueStatics;
#endif /* !defined(____x_ABI_CWindows_CFoundation_CIPropertyValueStatics_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CFoundation_CIStringable_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CFoundation_CIStringable_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CFoundation_CIStringableVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CFoundation_CIStringable* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CFoundation_CIStringable* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CFoundation_CIStringable* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CFoundation_CIStringable* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CFoundation_CIStringable* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CFoundation_CIStringable* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* ToString)(__x_ABI_CWindows_CFoundation_CIStringable* This,
        HSTRING* value);

        END_INTERFACE
    } __x_ABI_CWindows_CFoundation_CIStringableVtbl;

    interface __x_ABI_CWindows_CFoundation_CIStringable
    {
        CONST_VTBL struct __x_ABI_CWindows_CFoundation_CIStringableVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CFoundation_CIStringable;
#endif /* !defined(____x_ABI_CWindows_CFoundation_CIStringable_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CFoundation_CIUriEscapeStatics_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CFoundation_CIUriEscapeStatics_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CFoundation_CIUriEscapeStaticsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CFoundation_CIUriEscapeStatics* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CFoundation_CIUriEscapeStatics* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CFoundation_CIUriEscapeStatics* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CFoundation_CIUriEscapeStatics* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CFoundation_CIUriEscapeStatics* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CFoundation_CIUriEscapeStatics* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* UnescapeComponent)(__x_ABI_CWindows_CFoundation_CIUriEscapeStatics* This,
        HSTRING toUnescape,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* EscapeComponent)(__x_ABI_CWindows_CFoundation_CIUriEscapeStatics* This,
        HSTRING toEscape,
        HSTRING* value);

        END_INTERFACE
    } __x_ABI_CWindows_CFoundation_CIUriEscapeStaticsVtbl;

    interface __x_ABI_CWindows_CFoundation_CIUriEscapeStatics
    {
        CONST_VTBL struct __x_ABI_CWindows_CFoundation_CIUriEscapeStaticsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CFoundation_CIUriEscapeStatics;
#endif /* !defined(____x_ABI_CWindows_CFoundation_CIUriEscapeStatics_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CFoundation_CIUriRuntimeClass_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CFoundation_CIUriRuntimeClass_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CFoundation_CIUriRuntimeClassVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CFoundation_CIUriRuntimeClass* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CFoundation_CIUriRuntimeClass* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CFoundation_CIUriRuntimeClass* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CFoundation_CIUriRuntimeClass* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CFoundation_CIUriRuntimeClass* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CFoundation_CIUriRuntimeClass* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_AbsoluteUri)(__x_ABI_CWindows_CFoundation_CIUriRuntimeClass* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* get_DisplayUri)(__x_ABI_CWindows_CFoundation_CIUriRuntimeClass* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* get_Domain)(__x_ABI_CWindows_CFoundation_CIUriRuntimeClass* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* get_Extension)(__x_ABI_CWindows_CFoundation_CIUriRuntimeClass* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* get_Fragment)(__x_ABI_CWindows_CFoundation_CIUriRuntimeClass* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* get_Host)(__x_ABI_CWindows_CFoundation_CIUriRuntimeClass* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* get_Password)(__x_ABI_CWindows_CFoundation_CIUriRuntimeClass* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* get_Path)(__x_ABI_CWindows_CFoundation_CIUriRuntimeClass* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* get_Query)(__x_ABI_CWindows_CFoundation_CIUriRuntimeClass* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* get_QueryParsed)(__x_ABI_CWindows_CFoundation_CIUriRuntimeClass* This,
        __x_ABI_CWindows_CFoundation_CIWwwFormUrlDecoderRuntimeClass** ppWwwFormUrlDecoder);
    HRESULT (STDMETHODCALLTYPE* get_RawUri)(__x_ABI_CWindows_CFoundation_CIUriRuntimeClass* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* get_SchemeName)(__x_ABI_CWindows_CFoundation_CIUriRuntimeClass* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* get_UserName)(__x_ABI_CWindows_CFoundation_CIUriRuntimeClass* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* get_Port)(__x_ABI_CWindows_CFoundation_CIUriRuntimeClass* This,
        INT32* value);
    HRESULT (STDMETHODCALLTYPE* get_Suspicious)(__x_ABI_CWindows_CFoundation_CIUriRuntimeClass* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* Equals)(__x_ABI_CWindows_CFoundation_CIUriRuntimeClass* This,
        __x_ABI_CWindows_CFoundation_CIUriRuntimeClass* pUri,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* CombineUri)(__x_ABI_CWindows_CFoundation_CIUriRuntimeClass* This,
        HSTRING relativeUri,
        __x_ABI_CWindows_CFoundation_CIUriRuntimeClass** instance);

        END_INTERFACE
    } __x_ABI_CWindows_CFoundation_CIUriRuntimeClassVtbl;

    interface __x_ABI_CWindows_CFoundation_CIUriRuntimeClass
    {
        CONST_VTBL struct __x_ABI_CWindows_CFoundation_CIUriRuntimeClassVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CFoundation_CIUriRuntimeClass;
#endif /* !defined(____x_ABI_CWindows_CFoundation_CIUriRuntimeClass_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CFoundation_CIUriRuntimeClassFactory_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CFoundation_CIUriRuntimeClassFactory_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CFoundation_CIUriRuntimeClassFactoryVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CFoundation_CIUriRuntimeClassFactory* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CFoundation_CIUriRuntimeClassFactory* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CFoundation_CIUriRuntimeClassFactory* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CFoundation_CIUriRuntimeClassFactory* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CFoundation_CIUriRuntimeClassFactory* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CFoundation_CIUriRuntimeClassFactory* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* CreateUri)(__x_ABI_CWindows_CFoundation_CIUriRuntimeClassFactory* This,
        HSTRING uri,
        __x_ABI_CWindows_CFoundation_CIUriRuntimeClass** instance);
    HRESULT (STDMETHODCALLTYPE* CreateWithRelativeUri)(__x_ABI_CWindows_CFoundation_CIUriRuntimeClassFactory* This,
        HSTRING baseUri,
        HSTRING relativeUri,
        __x_ABI_CWindows_CFoundation_CIUriRuntimeClass** instance);

        END_INTERFACE
    } __x_ABI_CWindows_CFoundation_CIUriRuntimeClassFactoryVtbl;

    interface __x_ABI_CWindows_CFoundation_CIUriRuntimeClassFactory
    {
        CONST_VTBL struct __x_ABI_CWindows_CFoundation_CIUriRuntimeClassFactoryVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CFoundation_CIUriRuntimeClassFactory;
#endif /* !defined(____x_ABI_CWindows_CFoundation_CIUriRuntimeClassFactory_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CFoundation_CIUriRuntimeClassWithAbsoluteCanonicalUri_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CFoundation_CIUriRuntimeClassWithAbsoluteCanonicalUri_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CFoundation_CIUriRuntimeClassWithAbsoluteCanonicalUriVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CFoundation_CIUriRuntimeClassWithAbsoluteCanonicalUri* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CFoundation_CIUriRuntimeClassWithAbsoluteCanonicalUri* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CFoundation_CIUriRuntimeClassWithAbsoluteCanonicalUri* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CFoundation_CIUriRuntimeClassWithAbsoluteCanonicalUri* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CFoundation_CIUriRuntimeClassWithAbsoluteCanonicalUri* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CFoundation_CIUriRuntimeClassWithAbsoluteCanonicalUri* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_AbsoluteCanonicalUri)(__x_ABI_CWindows_CFoundation_CIUriRuntimeClassWithAbsoluteCanonicalUri* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* get_DisplayIri)(__x_ABI_CWindows_CFoundation_CIUriRuntimeClassWithAbsoluteCanonicalUri* This,
        HSTRING* value);

        END_INTERFACE
    } __x_ABI_CWindows_CFoundation_CIUriRuntimeClassWithAbsoluteCanonicalUriVtbl;

    interface __x_ABI_CWindows_CFoundation_CIUriRuntimeClassWithAbsoluteCanonicalUri
    {
        CONST_VTBL struct __x_ABI_CWindows_CFoundation_CIUriRuntimeClassWithAbsoluteCanonicalUriVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CFoundation_CIUriRuntimeClassWithAbsoluteCanonicalUri;
#endif /* !defined(____x_ABI_CWindows_CFoundation_CIUriRuntimeClassWithAbsoluteCanonicalUri_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CFoundation_CIWwwFormUrlDecoderEntry_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CFoundation_CIWwwFormUrlDecoderEntry_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CFoundation_CIWwwFormUrlDecoderEntryVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CFoundation_CIWwwFormUrlDecoderEntry* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CFoundation_CIWwwFormUrlDecoderEntry* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CFoundation_CIWwwFormUrlDecoderEntry* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CFoundation_CIWwwFormUrlDecoderEntry* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CFoundation_CIWwwFormUrlDecoderEntry* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CFoundation_CIWwwFormUrlDecoderEntry* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Name)(__x_ABI_CWindows_CFoundation_CIWwwFormUrlDecoderEntry* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* get_Value)(__x_ABI_CWindows_CFoundation_CIWwwFormUrlDecoderEntry* This,
        HSTRING* value);

        END_INTERFACE
    } __x_ABI_CWindows_CFoundation_CIWwwFormUrlDecoderEntryVtbl;

    interface __x_ABI_CWindows_CFoundation_CIWwwFormUrlDecoderEntry
    {
        CONST_VTBL struct __x_ABI_CWindows_CFoundation_CIWwwFormUrlDecoderEntryVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CFoundation_CIWwwFormUrlDecoderEntry;
#endif /* !defined(____x_ABI_CWindows_CFoundation_CIWwwFormUrlDecoderEntry_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CFoundation_CIWwwFormUrlDecoderRuntimeClass_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CFoundation_CIWwwFormUrlDecoderRuntimeClass_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CFoundation_CIWwwFormUrlDecoderRuntimeClassVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CFoundation_CIWwwFormUrlDecoderRuntimeClass* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CFoundation_CIWwwFormUrlDecoderRuntimeClass* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CFoundation_CIWwwFormUrlDecoderRuntimeClass* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CFoundation_CIWwwFormUrlDecoderRuntimeClass* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CFoundation_CIWwwFormUrlDecoderRuntimeClass* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CFoundation_CIWwwFormUrlDecoderRuntimeClass* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* GetFirstValueByName)(__x_ABI_CWindows_CFoundation_CIWwwFormUrlDecoderRuntimeClass* This,
        HSTRING name,
        HSTRING* phstrValue);

        END_INTERFACE
    } __x_ABI_CWindows_CFoundation_CIWwwFormUrlDecoderRuntimeClassVtbl;

    interface __x_ABI_CWindows_CFoundation_CIWwwFormUrlDecoderRuntimeClass
    {
        CONST_VTBL struct __x_ABI_CWindows_CFoundation_CIWwwFormUrlDecoderRuntimeClassVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CFoundation_CIWwwFormUrlDecoderRuntimeClass;
#endif /* !defined(____x_ABI_CWindows_CFoundation_CIWwwFormUrlDecoderRuntimeClass_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CFoundation_CIWwwFormUrlDecoderRuntimeClassFactory_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CFoundation_CIWwwFormUrlDecoderRuntimeClassFactory_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CFoundation_CIWwwFormUrlDecoderRuntimeClassFactoryVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CFoundation_CIWwwFormUrlDecoderRuntimeClassFactory* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CFoundation_CIWwwFormUrlDecoderRuntimeClassFactory* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CFoundation_CIWwwFormUrlDecoderRuntimeClassFactory* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CFoundation_CIWwwFormUrlDecoderRuntimeClassFactory* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CFoundation_CIWwwFormUrlDecoderRuntimeClassFactory* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CFoundation_CIWwwFormUrlDecoderRuntimeClassFactory* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* CreateWwwFormUrlDecoder)(__x_ABI_CWindows_CFoundation_CIWwwFormUrlDecoderRuntimeClassFactory* This,
        HSTRING query,
        __x_ABI_CWindows_CFoundation_CIWwwFormUrlDecoderRuntimeClass** instance);

        END_INTERFACE
    } __x_ABI_CWindows_CFoundation_CIWwwFormUrlDecoderRuntimeClassFactoryVtbl;

    interface __x_ABI_CWindows_CFoundation_CIWwwFormUrlDecoderRuntimeClassFactory
    {
        CONST_VTBL struct __x_ABI_CWindows_CFoundation_CIWwwFormUrlDecoderRuntimeClassFactoryVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CFoundation_CIWwwFormUrlDecoderRuntimeClassFactory;
#endif /* !defined(____x_ABI_CWindows_CFoundation_CIWwwFormUrlDecoderRuntimeClassFactory_INTERFACE_DEFINED__) */
    
