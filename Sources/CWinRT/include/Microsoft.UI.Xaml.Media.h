// WARNING: Please don't edit this file. It was generated by Swift/WinRT v0.0.1

#pragma once
// Header files for imported files
#include <inspectable.h>
#include <EventToken.h>
#include <windowscontracts.h>
#include "Windows.Foundation.h"
#include "Microsoft.UI.Composition.h"
#include "Microsoft.UI.Composition.SystemBackdrops.h"
#include "Microsoft.UI.Xaml.h"
#include "Microsoft.UI.Xaml.Controls.Primitives.h"
#include "Microsoft.UI.Xaml.Media.Media3D.h"
#include "Windows.Storage.Streams.h"
#include "Windows.UI.h"
// Importing Collections header
#include "Windows.Foundation.Collections.h"

/* Forward Declarations */
#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIAcrylicBrush_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIAcrylicBrush_FWD_DEFINED__
    typedef interface __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIAcrylicBrush __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIAcrylicBrush;

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIAcrylicBrush_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIAcrylicBrush2_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIAcrylicBrush2_FWD_DEFINED__
    typedef interface __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIAcrylicBrush2 __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIAcrylicBrush2;

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIAcrylicBrush2_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIAcrylicBrushFactory_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIAcrylicBrushFactory_FWD_DEFINED__
    typedef interface __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIAcrylicBrushFactory __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIAcrylicBrushFactory;

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIAcrylicBrushFactory_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIAcrylicBrushStatics_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIAcrylicBrushStatics_FWD_DEFINED__
    typedef interface __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIAcrylicBrushStatics __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIAcrylicBrushStatics;

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIAcrylicBrushStatics_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIAcrylicBrushStatics2_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIAcrylicBrushStatics2_FWD_DEFINED__
    typedef interface __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIAcrylicBrushStatics2 __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIAcrylicBrushStatics2;

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIAcrylicBrushStatics2_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIArcSegment_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIArcSegment_FWD_DEFINED__
    typedef interface __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIArcSegment __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIArcSegment;

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIArcSegment_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIArcSegmentStatics_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIArcSegmentStatics_FWD_DEFINED__
    typedef interface __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIArcSegmentStatics __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIArcSegmentStatics;

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIArcSegmentStatics_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIBezierSegment_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIBezierSegment_FWD_DEFINED__
    typedef interface __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIBezierSegment __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIBezierSegment;

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIBezierSegment_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIBezierSegmentStatics_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIBezierSegmentStatics_FWD_DEFINED__
    typedef interface __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIBezierSegmentStatics __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIBezierSegmentStatics;

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIBezierSegmentStatics_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIBitmapCache_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIBitmapCache_FWD_DEFINED__
    typedef interface __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIBitmapCache __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIBitmapCache;

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIBitmapCache_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIBrush_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIBrush_FWD_DEFINED__
    typedef interface __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIBrush __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIBrush;

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIBrush_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIBrushFactory_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIBrushFactory_FWD_DEFINED__
    typedef interface __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIBrushFactory __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIBrushFactory;

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIBrushFactory_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIBrushOverrides_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIBrushOverrides_FWD_DEFINED__
    typedef interface __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIBrushOverrides __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIBrushOverrides;

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIBrushOverrides_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIBrushStatics_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIBrushStatics_FWD_DEFINED__
    typedef interface __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIBrushStatics __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIBrushStatics;

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIBrushStatics_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CICacheMode_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CICacheMode_FWD_DEFINED__
    typedef interface __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CICacheMode __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CICacheMode;

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CICacheMode_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CICacheModeFactory_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CICacheModeFactory_FWD_DEFINED__
    typedef interface __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CICacheModeFactory __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CICacheModeFactory;

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CICacheModeFactory_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CICompositeTransform_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CICompositeTransform_FWD_DEFINED__
    typedef interface __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CICompositeTransform __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CICompositeTransform;

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CICompositeTransform_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CICompositeTransformStatics_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CICompositeTransformStatics_FWD_DEFINED__
    typedef interface __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CICompositeTransformStatics __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CICompositeTransformStatics;

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CICompositeTransformStatics_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CICompositionTarget_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CICompositionTarget_FWD_DEFINED__
    typedef interface __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CICompositionTarget __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CICompositionTarget;

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CICompositionTarget_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CICompositionTargetStatics_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CICompositionTargetStatics_FWD_DEFINED__
    typedef interface __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CICompositionTargetStatics __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CICompositionTargetStatics;

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CICompositionTargetStatics_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIDesktopAcrylicBackdrop_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIDesktopAcrylicBackdrop_FWD_DEFINED__
    typedef interface __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIDesktopAcrylicBackdrop __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIDesktopAcrylicBackdrop;

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIDesktopAcrylicBackdrop_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIDesktopAcrylicBackdropFactory_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIDesktopAcrylicBackdropFactory_FWD_DEFINED__
    typedef interface __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIDesktopAcrylicBackdropFactory __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIDesktopAcrylicBackdropFactory;

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIDesktopAcrylicBackdropFactory_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIEllipseGeometry_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIEllipseGeometry_FWD_DEFINED__
    typedef interface __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIEllipseGeometry __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIEllipseGeometry;

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIEllipseGeometry_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIEllipseGeometryStatics_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIEllipseGeometryStatics_FWD_DEFINED__
    typedef interface __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIEllipseGeometryStatics __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIEllipseGeometryStatics;

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIEllipseGeometryStatics_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIFontFamily_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIFontFamily_FWD_DEFINED__
    typedef interface __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIFontFamily __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIFontFamily;

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIFontFamily_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIFontFamilyFactory_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIFontFamilyFactory_FWD_DEFINED__
    typedef interface __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIFontFamilyFactory __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIFontFamilyFactory;

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIFontFamilyFactory_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIFontFamilyStatics_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIFontFamilyStatics_FWD_DEFINED__
    typedef interface __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIFontFamilyStatics __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIFontFamilyStatics;

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIFontFamilyStatics_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIGeneralTransform_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIGeneralTransform_FWD_DEFINED__
    typedef interface __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIGeneralTransform __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIGeneralTransform;

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIGeneralTransform_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIGeneralTransformFactory_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIGeneralTransformFactory_FWD_DEFINED__
    typedef interface __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIGeneralTransformFactory __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIGeneralTransformFactory;

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIGeneralTransformFactory_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIGeneralTransformOverrides_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIGeneralTransformOverrides_FWD_DEFINED__
    typedef interface __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIGeneralTransformOverrides __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIGeneralTransformOverrides;

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIGeneralTransformOverrides_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIGeometry_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIGeometry_FWD_DEFINED__
    typedef interface __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIGeometry __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIGeometry;

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIGeometry_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIGeometryFactory_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIGeometryFactory_FWD_DEFINED__
    typedef interface __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIGeometryFactory __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIGeometryFactory;

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIGeometryFactory_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIGeometryGroup_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIGeometryGroup_FWD_DEFINED__
    typedef interface __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIGeometryGroup __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIGeometryGroup;

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIGeometryGroup_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIGeometryGroupStatics_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIGeometryGroupStatics_FWD_DEFINED__
    typedef interface __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIGeometryGroupStatics __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIGeometryGroupStatics;

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIGeometryGroupStatics_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIGeometryStatics_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIGeometryStatics_FWD_DEFINED__
    typedef interface __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIGeometryStatics __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIGeometryStatics;

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIGeometryStatics_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIGradientBrush_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIGradientBrush_FWD_DEFINED__
    typedef interface __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIGradientBrush __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIGradientBrush;

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIGradientBrush_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIGradientBrushFactory_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIGradientBrushFactory_FWD_DEFINED__
    typedef interface __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIGradientBrushFactory __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIGradientBrushFactory;

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIGradientBrushFactory_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIGradientBrushStatics_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIGradientBrushStatics_FWD_DEFINED__
    typedef interface __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIGradientBrushStatics __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIGradientBrushStatics;

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIGradientBrushStatics_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIGradientStop_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIGradientStop_FWD_DEFINED__
    typedef interface __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIGradientStop __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIGradientStop;

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIGradientStop_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIGradientStopStatics_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIGradientStopStatics_FWD_DEFINED__
    typedef interface __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIGradientStopStatics __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIGradientStopStatics;

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIGradientStopStatics_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIImageBrush_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIImageBrush_FWD_DEFINED__
    typedef interface __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIImageBrush __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIImageBrush;

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIImageBrush_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIImageBrushStatics_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIImageBrushStatics_FWD_DEFINED__
    typedef interface __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIImageBrushStatics __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIImageBrushStatics;

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIImageBrushStatics_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIImageSource_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIImageSource_FWD_DEFINED__
    typedef interface __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIImageSource __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIImageSource;

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIImageSource_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIImageSourceFactory_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIImageSourceFactory_FWD_DEFINED__
    typedef interface __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIImageSourceFactory __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIImageSourceFactory;

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIImageSourceFactory_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CILineGeometry_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CILineGeometry_FWD_DEFINED__
    typedef interface __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CILineGeometry __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CILineGeometry;

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CILineGeometry_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CILineGeometryStatics_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CILineGeometryStatics_FWD_DEFINED__
    typedef interface __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CILineGeometryStatics __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CILineGeometryStatics;

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CILineGeometryStatics_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CILineSegment_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CILineSegment_FWD_DEFINED__
    typedef interface __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CILineSegment __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CILineSegment;

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CILineSegment_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CILineSegmentStatics_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CILineSegmentStatics_FWD_DEFINED__
    typedef interface __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CILineSegmentStatics __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CILineSegmentStatics;

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CILineSegmentStatics_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CILinearGradientBrush_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CILinearGradientBrush_FWD_DEFINED__
    typedef interface __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CILinearGradientBrush __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CILinearGradientBrush;

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CILinearGradientBrush_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CILinearGradientBrushFactory_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CILinearGradientBrushFactory_FWD_DEFINED__
    typedef interface __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CILinearGradientBrushFactory __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CILinearGradientBrushFactory;

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CILinearGradientBrushFactory_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CILinearGradientBrushStatics_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CILinearGradientBrushStatics_FWD_DEFINED__
    typedef interface __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CILinearGradientBrushStatics __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CILinearGradientBrushStatics;

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CILinearGradientBrushStatics_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CILoadedImageSourceLoadCompletedEventArgs_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CILoadedImageSourceLoadCompletedEventArgs_FWD_DEFINED__
    typedef interface __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CILoadedImageSourceLoadCompletedEventArgs __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CILoadedImageSourceLoadCompletedEventArgs;

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CILoadedImageSourceLoadCompletedEventArgs_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CILoadedImageSurface_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CILoadedImageSurface_FWD_DEFINED__
    typedef interface __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CILoadedImageSurface __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CILoadedImageSurface;

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CILoadedImageSurface_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CILoadedImageSurfaceStatics_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CILoadedImageSurfaceStatics_FWD_DEFINED__
    typedef interface __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CILoadedImageSurfaceStatics __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CILoadedImageSurfaceStatics;

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CILoadedImageSurfaceStatics_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIMatrix3DProjection_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIMatrix3DProjection_FWD_DEFINED__
    typedef interface __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIMatrix3DProjection __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIMatrix3DProjection;

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIMatrix3DProjection_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIMatrix3DProjectionStatics_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIMatrix3DProjectionStatics_FWD_DEFINED__
    typedef interface __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIMatrix3DProjectionStatics __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIMatrix3DProjectionStatics;

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIMatrix3DProjectionStatics_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIMatrixHelper_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIMatrixHelper_FWD_DEFINED__
    typedef interface __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIMatrixHelper __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIMatrixHelper;

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIMatrixHelper_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIMatrixHelperStatics_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIMatrixHelperStatics_FWD_DEFINED__
    typedef interface __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIMatrixHelperStatics __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIMatrixHelperStatics;

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIMatrixHelperStatics_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIMatrixTransform_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIMatrixTransform_FWD_DEFINED__
    typedef interface __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIMatrixTransform __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIMatrixTransform;

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIMatrixTransform_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIMatrixTransformStatics_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIMatrixTransformStatics_FWD_DEFINED__
    typedef interface __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIMatrixTransformStatics __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIMatrixTransformStatics;

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIMatrixTransformStatics_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIMediaTransportControlsThumbnailRequestedEventArgs_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIMediaTransportControlsThumbnailRequestedEventArgs_FWD_DEFINED__
    typedef interface __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIMediaTransportControlsThumbnailRequestedEventArgs __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIMediaTransportControlsThumbnailRequestedEventArgs;

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIMediaTransportControlsThumbnailRequestedEventArgs_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIMicaBackdrop_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIMicaBackdrop_FWD_DEFINED__
    typedef interface __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIMicaBackdrop __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIMicaBackdrop;

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIMicaBackdrop_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIMicaBackdropFactory_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIMicaBackdropFactory_FWD_DEFINED__
    typedef interface __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIMicaBackdropFactory __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIMicaBackdropFactory;

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIMicaBackdropFactory_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIMicaBackdropStatics_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIMicaBackdropStatics_FWD_DEFINED__
    typedef interface __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIMicaBackdropStatics __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIMicaBackdropStatics;

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIMicaBackdropStatics_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPathFigure_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPathFigure_FWD_DEFINED__
    typedef interface __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPathFigure __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPathFigure;

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPathFigure_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPathFigureStatics_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPathFigureStatics_FWD_DEFINED__
    typedef interface __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPathFigureStatics __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPathFigureStatics;

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPathFigureStatics_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPathGeometry_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPathGeometry_FWD_DEFINED__
    typedef interface __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPathGeometry __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPathGeometry;

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPathGeometry_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPathGeometryStatics_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPathGeometryStatics_FWD_DEFINED__
    typedef interface __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPathGeometryStatics __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPathGeometryStatics;

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPathGeometryStatics_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPathSegment_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPathSegment_FWD_DEFINED__
    typedef interface __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPathSegment __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPathSegment;

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPathSegment_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPathSegmentFactory_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPathSegmentFactory_FWD_DEFINED__
    typedef interface __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPathSegmentFactory __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPathSegmentFactory;

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPathSegmentFactory_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPlaneProjection_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPlaneProjection_FWD_DEFINED__
    typedef interface __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPlaneProjection __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPlaneProjection;

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPlaneProjection_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPlaneProjectionStatics_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPlaneProjectionStatics_FWD_DEFINED__
    typedef interface __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPlaneProjectionStatics __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPlaneProjectionStatics;

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPlaneProjectionStatics_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPolyBezierSegment_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPolyBezierSegment_FWD_DEFINED__
    typedef interface __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPolyBezierSegment __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPolyBezierSegment;

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPolyBezierSegment_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPolyBezierSegmentStatics_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPolyBezierSegmentStatics_FWD_DEFINED__
    typedef interface __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPolyBezierSegmentStatics __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPolyBezierSegmentStatics;

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPolyBezierSegmentStatics_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPolyLineSegment_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPolyLineSegment_FWD_DEFINED__
    typedef interface __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPolyLineSegment __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPolyLineSegment;

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPolyLineSegment_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPolyLineSegmentStatics_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPolyLineSegmentStatics_FWD_DEFINED__
    typedef interface __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPolyLineSegmentStatics __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPolyLineSegmentStatics;

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPolyLineSegmentStatics_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPolyQuadraticBezierSegment_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPolyQuadraticBezierSegment_FWD_DEFINED__
    typedef interface __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPolyQuadraticBezierSegment __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPolyQuadraticBezierSegment;

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPolyQuadraticBezierSegment_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPolyQuadraticBezierSegmentStatics_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPolyQuadraticBezierSegmentStatics_FWD_DEFINED__
    typedef interface __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPolyQuadraticBezierSegmentStatics __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPolyQuadraticBezierSegmentStatics;

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPolyQuadraticBezierSegmentStatics_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIProjection_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIProjection_FWD_DEFINED__
    typedef interface __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIProjection __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIProjection;

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIProjection_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIProjectionFactory_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIProjectionFactory_FWD_DEFINED__
    typedef interface __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIProjectionFactory __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIProjectionFactory;

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIProjectionFactory_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIQuadraticBezierSegment_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIQuadraticBezierSegment_FWD_DEFINED__
    typedef interface __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIQuadraticBezierSegment __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIQuadraticBezierSegment;

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIQuadraticBezierSegment_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIQuadraticBezierSegmentStatics_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIQuadraticBezierSegmentStatics_FWD_DEFINED__
    typedef interface __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIQuadraticBezierSegmentStatics __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIQuadraticBezierSegmentStatics;

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIQuadraticBezierSegmentStatics_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIRadialGradientBrush_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIRadialGradientBrush_FWD_DEFINED__
    typedef interface __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIRadialGradientBrush __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIRadialGradientBrush;

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIRadialGradientBrush_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIRadialGradientBrushFactory_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIRadialGradientBrushFactory_FWD_DEFINED__
    typedef interface __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIRadialGradientBrushFactory __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIRadialGradientBrushFactory;

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIRadialGradientBrushFactory_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIRadialGradientBrushStatics_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIRadialGradientBrushStatics_FWD_DEFINED__
    typedef interface __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIRadialGradientBrushStatics __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIRadialGradientBrushStatics;

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIRadialGradientBrushStatics_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIRectangleGeometry_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIRectangleGeometry_FWD_DEFINED__
    typedef interface __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIRectangleGeometry __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIRectangleGeometry;

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIRectangleGeometry_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIRectangleGeometryStatics_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIRectangleGeometryStatics_FWD_DEFINED__
    typedef interface __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIRectangleGeometryStatics __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIRectangleGeometryStatics;

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIRectangleGeometryStatics_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIRenderedEventArgs_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIRenderedEventArgs_FWD_DEFINED__
    typedef interface __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIRenderedEventArgs __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIRenderedEventArgs;

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIRenderedEventArgs_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIRenderingEventArgs_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIRenderingEventArgs_FWD_DEFINED__
    typedef interface __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIRenderingEventArgs __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIRenderingEventArgs;

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIRenderingEventArgs_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIRotateTransform_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIRotateTransform_FWD_DEFINED__
    typedef interface __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIRotateTransform __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIRotateTransform;

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIRotateTransform_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIRotateTransformStatics_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIRotateTransformStatics_FWD_DEFINED__
    typedef interface __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIRotateTransformStatics __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIRotateTransformStatics;

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIRotateTransformStatics_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIScaleTransform_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIScaleTransform_FWD_DEFINED__
    typedef interface __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIScaleTransform __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIScaleTransform;

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIScaleTransform_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIScaleTransformStatics_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIScaleTransformStatics_FWD_DEFINED__
    typedef interface __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIScaleTransformStatics __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIScaleTransformStatics;

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIScaleTransformStatics_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIShadow_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIShadow_FWD_DEFINED__
    typedef interface __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIShadow __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIShadow;

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIShadow_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIShadowFactory_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIShadowFactory_FWD_DEFINED__
    typedef interface __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIShadowFactory __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIShadowFactory;

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIShadowFactory_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CISkewTransform_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CISkewTransform_FWD_DEFINED__
    typedef interface __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CISkewTransform __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CISkewTransform;

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CISkewTransform_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CISkewTransformStatics_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CISkewTransformStatics_FWD_DEFINED__
    typedef interface __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CISkewTransformStatics __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CISkewTransformStatics;

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CISkewTransformStatics_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CISolidColorBrush_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CISolidColorBrush_FWD_DEFINED__
    typedef interface __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CISolidColorBrush __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CISolidColorBrush;

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CISolidColorBrush_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CISolidColorBrushFactory_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CISolidColorBrushFactory_FWD_DEFINED__
    typedef interface __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CISolidColorBrushFactory __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CISolidColorBrushFactory;

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CISolidColorBrushFactory_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CISolidColorBrushStatics_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CISolidColorBrushStatics_FWD_DEFINED__
    typedef interface __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CISolidColorBrushStatics __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CISolidColorBrushStatics;

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CISolidColorBrushStatics_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CISystemBackdrop_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CISystemBackdrop_FWD_DEFINED__
    typedef interface __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CISystemBackdrop __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CISystemBackdrop;

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CISystemBackdrop_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CISystemBackdropFactory_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CISystemBackdropFactory_FWD_DEFINED__
    typedef interface __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CISystemBackdropFactory __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CISystemBackdropFactory;

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CISystemBackdropFactory_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CISystemBackdropOverrides_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CISystemBackdropOverrides_FWD_DEFINED__
    typedef interface __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CISystemBackdropOverrides __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CISystemBackdropOverrides;

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CISystemBackdropOverrides_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIThemeShadow_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIThemeShadow_FWD_DEFINED__
    typedef interface __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIThemeShadow __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIThemeShadow;

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIThemeShadow_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIThemeShadowFactory_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIThemeShadowFactory_FWD_DEFINED__
    typedef interface __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIThemeShadowFactory __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIThemeShadowFactory;

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIThemeShadowFactory_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CITileBrush_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CITileBrush_FWD_DEFINED__
    typedef interface __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CITileBrush __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CITileBrush;

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CITileBrush_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CITileBrushFactory_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CITileBrushFactory_FWD_DEFINED__
    typedef interface __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CITileBrushFactory __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CITileBrushFactory;

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CITileBrushFactory_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CITileBrushStatics_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CITileBrushStatics_FWD_DEFINED__
    typedef interface __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CITileBrushStatics __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CITileBrushStatics;

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CITileBrushStatics_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CITransform_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CITransform_FWD_DEFINED__
    typedef interface __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CITransform __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CITransform;

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CITransform_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CITransformFactory_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CITransformFactory_FWD_DEFINED__
    typedef interface __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CITransformFactory __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CITransformFactory;

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CITransformFactory_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CITransformGroup_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CITransformGroup_FWD_DEFINED__
    typedef interface __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CITransformGroup __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CITransformGroup;

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CITransformGroup_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CITransformGroupStatics_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CITransformGroupStatics_FWD_DEFINED__
    typedef interface __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CITransformGroupStatics __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CITransformGroupStatics;

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CITransformGroupStatics_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CITranslateTransform_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CITranslateTransform_FWD_DEFINED__
    typedef interface __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CITranslateTransform __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CITranslateTransform;

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CITranslateTransform_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CITranslateTransformStatics_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CITranslateTransformStatics_FWD_DEFINED__
    typedef interface __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CITranslateTransformStatics __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CITranslateTransformStatics;

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CITranslateTransformStatics_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIVisualTreeHelper_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIVisualTreeHelper_FWD_DEFINED__
    typedef interface __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIVisualTreeHelper __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIVisualTreeHelper;

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIVisualTreeHelper_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIVisualTreeHelperStatics_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIVisualTreeHelperStatics_FWD_DEFINED__
    typedef interface __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIVisualTreeHelperStatics __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIVisualTreeHelperStatics;

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIVisualTreeHelperStatics_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIXamlCompositionBrushBase_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIXamlCompositionBrushBase_FWD_DEFINED__
    typedef interface __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIXamlCompositionBrushBase __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIXamlCompositionBrushBase;

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIXamlCompositionBrushBase_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIXamlCompositionBrushBaseFactory_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIXamlCompositionBrushBaseFactory_FWD_DEFINED__
    typedef interface __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIXamlCompositionBrushBaseFactory __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIXamlCompositionBrushBaseFactory;

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIXamlCompositionBrushBaseFactory_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIXamlCompositionBrushBaseOverrides_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIXamlCompositionBrushBaseOverrides_FWD_DEFINED__
    typedef interface __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIXamlCompositionBrushBaseOverrides __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIXamlCompositionBrushBaseOverrides;

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIXamlCompositionBrushBaseOverrides_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIXamlCompositionBrushBaseProtected_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIXamlCompositionBrushBaseProtected_FWD_DEFINED__
    typedef interface __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIXamlCompositionBrushBaseProtected __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIXamlCompositionBrushBaseProtected;

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIXamlCompositionBrushBaseProtected_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIXamlCompositionBrushBaseStatics_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIXamlCompositionBrushBaseStatics_FWD_DEFINED__
    typedef interface __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIXamlCompositionBrushBaseStatics __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIXamlCompositionBrushBaseStatics;

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIXamlCompositionBrushBaseStatics_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIXamlLight_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIXamlLight_FWD_DEFINED__
    typedef interface __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIXamlLight __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIXamlLight;

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIXamlLight_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIXamlLightFactory_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIXamlLightFactory_FWD_DEFINED__
    typedef interface __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIXamlLightFactory __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIXamlLightFactory;

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIXamlLightFactory_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIXamlLightOverrides_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIXamlLightOverrides_FWD_DEFINED__
    typedef interface __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIXamlLightOverrides __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIXamlLightOverrides;

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIXamlLightOverrides_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIXamlLightProtected_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIXamlLightProtected_FWD_DEFINED__
    typedef interface __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIXamlLightProtected __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIXamlLightProtected;

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIXamlLightProtected_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIXamlLightStatics_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIXamlLightStatics_FWD_DEFINED__
    typedef interface __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIXamlLightStatics __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIXamlLightStatics;

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIXamlLightStatics_FWD_DEFINED__

// Parameterized interface forward declarations (C)

// Collection interface definitions

#if !defined(____x_ABI_C__FIIterator_1_double_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIIterator_1_double_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIIterator_1_double __x_ABI_C__FIIterator_1_double;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIIterator_1_double;

    typedef struct __x_ABI_C__FIIterator_1_doubleVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIIterator_1_double* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIIterator_1_double* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIIterator_1_double* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIIterator_1_double* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIIterator_1_double* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIIterator_1_double* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Current)(__x_ABI_C__FIIterator_1_double* This,
        DOUBLE* result);
    HRESULT (STDMETHODCALLTYPE* get_HasCurrent)(__x_ABI_C__FIIterator_1_double* This,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* MoveNext)(__x_ABI_C__FIIterator_1_double* This,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__x_ABI_C__FIIterator_1_double* This,
        UINT32 itemsLength,
        DOUBLE* items,
        UINT32* result);

        END_INTERFACE
    } __x_ABI_C__FIIterator_1_doubleVtbl;

    interface __x_ABI_C__FIIterator_1_double
    {
        CONST_VTBL struct __x_ABI_C__FIIterator_1_doubleVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIIterator_1_double_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIIterable_1_double_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIIterable_1_double_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIIterable_1_double __x_ABI_C__FIIterable_1_double;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIIterable_1_double;

    typedef struct __x_ABI_C__FIIterable_1_doubleVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIIterable_1_double* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIIterable_1_double* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIIterable_1_double* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIIterable_1_double* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIIterable_1_double* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIIterable_1_double* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* First)(__x_ABI_C__FIIterable_1_double* This,
        __x_ABI_C__FIIterator_1_double** result);

        END_INTERFACE
    } __x_ABI_C__FIIterable_1_doubleVtbl;

    interface __x_ABI_C__FIIterable_1_double
    {
        CONST_VTBL struct __x_ABI_C__FIIterable_1_doubleVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIIterable_1_double_INTERFACE_DEFINED__
    
#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIPopup_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIPopup_FWD_DEFINED__
    typedef interface __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIPopup __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIPopup;

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIPopup_FWD_DEFINED__

#if !defined(____x_ABI_C__FIIterator_1___x_ABI_CMicrosoft__CUI__CXaml__CControls__CPrimitives__CPopup_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIIterator_1___x_ABI_CMicrosoft__CUI__CXaml__CControls__CPrimitives__CPopup_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIIterator_1___x_ABI_CMicrosoft__CUI__CXaml__CControls__CPrimitives__CPopup __x_ABI_C__FIIterator_1___x_ABI_CMicrosoft__CUI__CXaml__CControls__CPrimitives__CPopup;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIIterator_1___x_ABI_CMicrosoft__CUI__CXaml__CControls__CPrimitives__CPopup;

    typedef struct __x_ABI_C__FIIterator_1___x_ABI_CMicrosoft__CUI__CXaml__CControls__CPrimitives__CPopupVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIIterator_1___x_ABI_CMicrosoft__CUI__CXaml__CControls__CPrimitives__CPopup* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIIterator_1___x_ABI_CMicrosoft__CUI__CXaml__CControls__CPrimitives__CPopup* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIIterator_1___x_ABI_CMicrosoft__CUI__CXaml__CControls__CPrimitives__CPopup* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIIterator_1___x_ABI_CMicrosoft__CUI__CXaml__CControls__CPrimitives__CPopup* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIIterator_1___x_ABI_CMicrosoft__CUI__CXaml__CControls__CPrimitives__CPopup* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIIterator_1___x_ABI_CMicrosoft__CUI__CXaml__CControls__CPrimitives__CPopup* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Current)(__x_ABI_C__FIIterator_1___x_ABI_CMicrosoft__CUI__CXaml__CControls__CPrimitives__CPopup* This,
        __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIPopup** result);
    HRESULT (STDMETHODCALLTYPE* get_HasCurrent)(__x_ABI_C__FIIterator_1___x_ABI_CMicrosoft__CUI__CXaml__CControls__CPrimitives__CPopup* This,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* MoveNext)(__x_ABI_C__FIIterator_1___x_ABI_CMicrosoft__CUI__CXaml__CControls__CPrimitives__CPopup* This,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__x_ABI_C__FIIterator_1___x_ABI_CMicrosoft__CUI__CXaml__CControls__CPrimitives__CPopup* This,
        UINT32 itemsLength,
        __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIPopup** items,
        UINT32* result);

        END_INTERFACE
    } __x_ABI_C__FIIterator_1___x_ABI_CMicrosoft__CUI__CXaml__CControls__CPrimitives__CPopupVtbl;

    interface __x_ABI_C__FIIterator_1___x_ABI_CMicrosoft__CUI__CXaml__CControls__CPrimitives__CPopup
    {
        CONST_VTBL struct __x_ABI_C__FIIterator_1___x_ABI_CMicrosoft__CUI__CXaml__CControls__CPrimitives__CPopupVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIIterator_1___x_ABI_CMicrosoft__CUI__CXaml__CControls__CPrimitives__CPopup_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIIterable_1___x_ABI_CMicrosoft__CUI__CXaml__CControls__CPrimitives__CPopup_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIIterable_1___x_ABI_CMicrosoft__CUI__CXaml__CControls__CPrimitives__CPopup_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIIterable_1___x_ABI_CMicrosoft__CUI__CXaml__CControls__CPrimitives__CPopup __x_ABI_C__FIIterable_1___x_ABI_CMicrosoft__CUI__CXaml__CControls__CPrimitives__CPopup;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIIterable_1___x_ABI_CMicrosoft__CUI__CXaml__CControls__CPrimitives__CPopup;

    typedef struct __x_ABI_C__FIIterable_1___x_ABI_CMicrosoft__CUI__CXaml__CControls__CPrimitives__CPopupVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIIterable_1___x_ABI_CMicrosoft__CUI__CXaml__CControls__CPrimitives__CPopup* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIIterable_1___x_ABI_CMicrosoft__CUI__CXaml__CControls__CPrimitives__CPopup* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIIterable_1___x_ABI_CMicrosoft__CUI__CXaml__CControls__CPrimitives__CPopup* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIIterable_1___x_ABI_CMicrosoft__CUI__CXaml__CControls__CPrimitives__CPopup* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIIterable_1___x_ABI_CMicrosoft__CUI__CXaml__CControls__CPrimitives__CPopup* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIIterable_1___x_ABI_CMicrosoft__CUI__CXaml__CControls__CPrimitives__CPopup* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* First)(__x_ABI_C__FIIterable_1___x_ABI_CMicrosoft__CUI__CXaml__CControls__CPrimitives__CPopup* This,
        __x_ABI_C__FIIterator_1___x_ABI_CMicrosoft__CUI__CXaml__CControls__CPrimitives__CPopup** result);

        END_INTERFACE
    } __x_ABI_C__FIIterable_1___x_ABI_CMicrosoft__CUI__CXaml__CControls__CPrimitives__CPopupVtbl;

    interface __x_ABI_C__FIIterable_1___x_ABI_CMicrosoft__CUI__CXaml__CControls__CPrimitives__CPopup
    {
        CONST_VTBL struct __x_ABI_C__FIIterable_1___x_ABI_CMicrosoft__CUI__CXaml__CControls__CPrimitives__CPopupVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIIterable_1___x_ABI_CMicrosoft__CUI__CXaml__CControls__CPrimitives__CPopup_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIIterator_1___x_ABI_CMicrosoft__CUI__CXaml__CMedia__CBrush_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIIterator_1___x_ABI_CMicrosoft__CUI__CXaml__CMedia__CBrush_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIIterator_1___x_ABI_CMicrosoft__CUI__CXaml__CMedia__CBrush __x_ABI_C__FIIterator_1___x_ABI_CMicrosoft__CUI__CXaml__CMedia__CBrush;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIIterator_1___x_ABI_CMicrosoft__CUI__CXaml__CMedia__CBrush;

    typedef struct __x_ABI_C__FIIterator_1___x_ABI_CMicrosoft__CUI__CXaml__CMedia__CBrushVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIIterator_1___x_ABI_CMicrosoft__CUI__CXaml__CMedia__CBrush* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIIterator_1___x_ABI_CMicrosoft__CUI__CXaml__CMedia__CBrush* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIIterator_1___x_ABI_CMicrosoft__CUI__CXaml__CMedia__CBrush* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIIterator_1___x_ABI_CMicrosoft__CUI__CXaml__CMedia__CBrush* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIIterator_1___x_ABI_CMicrosoft__CUI__CXaml__CMedia__CBrush* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIIterator_1___x_ABI_CMicrosoft__CUI__CXaml__CMedia__CBrush* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Current)(__x_ABI_C__FIIterator_1___x_ABI_CMicrosoft__CUI__CXaml__CMedia__CBrush* This,
        __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIBrush** result);
    HRESULT (STDMETHODCALLTYPE* get_HasCurrent)(__x_ABI_C__FIIterator_1___x_ABI_CMicrosoft__CUI__CXaml__CMedia__CBrush* This,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* MoveNext)(__x_ABI_C__FIIterator_1___x_ABI_CMicrosoft__CUI__CXaml__CMedia__CBrush* This,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__x_ABI_C__FIIterator_1___x_ABI_CMicrosoft__CUI__CXaml__CMedia__CBrush* This,
        UINT32 itemsLength,
        __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIBrush** items,
        UINT32* result);

        END_INTERFACE
    } __x_ABI_C__FIIterator_1___x_ABI_CMicrosoft__CUI__CXaml__CMedia__CBrushVtbl;

    interface __x_ABI_C__FIIterator_1___x_ABI_CMicrosoft__CUI__CXaml__CMedia__CBrush
    {
        CONST_VTBL struct __x_ABI_C__FIIterator_1___x_ABI_CMicrosoft__CUI__CXaml__CMedia__CBrushVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIIterator_1___x_ABI_CMicrosoft__CUI__CXaml__CMedia__CBrush_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIIterable_1___x_ABI_CMicrosoft__CUI__CXaml__CMedia__CBrush_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIIterable_1___x_ABI_CMicrosoft__CUI__CXaml__CMedia__CBrush_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIIterable_1___x_ABI_CMicrosoft__CUI__CXaml__CMedia__CBrush __x_ABI_C__FIIterable_1___x_ABI_CMicrosoft__CUI__CXaml__CMedia__CBrush;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIIterable_1___x_ABI_CMicrosoft__CUI__CXaml__CMedia__CBrush;

    typedef struct __x_ABI_C__FIIterable_1___x_ABI_CMicrosoft__CUI__CXaml__CMedia__CBrushVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIIterable_1___x_ABI_CMicrosoft__CUI__CXaml__CMedia__CBrush* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIIterable_1___x_ABI_CMicrosoft__CUI__CXaml__CMedia__CBrush* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIIterable_1___x_ABI_CMicrosoft__CUI__CXaml__CMedia__CBrush* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIIterable_1___x_ABI_CMicrosoft__CUI__CXaml__CMedia__CBrush* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIIterable_1___x_ABI_CMicrosoft__CUI__CXaml__CMedia__CBrush* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIIterable_1___x_ABI_CMicrosoft__CUI__CXaml__CMedia__CBrush* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* First)(__x_ABI_C__FIIterable_1___x_ABI_CMicrosoft__CUI__CXaml__CMedia__CBrush* This,
        __x_ABI_C__FIIterator_1___x_ABI_CMicrosoft__CUI__CXaml__CMedia__CBrush** result);

        END_INTERFACE
    } __x_ABI_C__FIIterable_1___x_ABI_CMicrosoft__CUI__CXaml__CMedia__CBrushVtbl;

    interface __x_ABI_C__FIIterable_1___x_ABI_CMicrosoft__CUI__CXaml__CMedia__CBrush
    {
        CONST_VTBL struct __x_ABI_C__FIIterable_1___x_ABI_CMicrosoft__CUI__CXaml__CMedia__CBrushVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIIterable_1___x_ABI_CMicrosoft__CUI__CXaml__CMedia__CBrush_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIIterator_1___x_ABI_CMicrosoft__CUI__CXaml__CMedia__CGeometry_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIIterator_1___x_ABI_CMicrosoft__CUI__CXaml__CMedia__CGeometry_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIIterator_1___x_ABI_CMicrosoft__CUI__CXaml__CMedia__CGeometry __x_ABI_C__FIIterator_1___x_ABI_CMicrosoft__CUI__CXaml__CMedia__CGeometry;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIIterator_1___x_ABI_CMicrosoft__CUI__CXaml__CMedia__CGeometry;

    typedef struct __x_ABI_C__FIIterator_1___x_ABI_CMicrosoft__CUI__CXaml__CMedia__CGeometryVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIIterator_1___x_ABI_CMicrosoft__CUI__CXaml__CMedia__CGeometry* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIIterator_1___x_ABI_CMicrosoft__CUI__CXaml__CMedia__CGeometry* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIIterator_1___x_ABI_CMicrosoft__CUI__CXaml__CMedia__CGeometry* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIIterator_1___x_ABI_CMicrosoft__CUI__CXaml__CMedia__CGeometry* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIIterator_1___x_ABI_CMicrosoft__CUI__CXaml__CMedia__CGeometry* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIIterator_1___x_ABI_CMicrosoft__CUI__CXaml__CMedia__CGeometry* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Current)(__x_ABI_C__FIIterator_1___x_ABI_CMicrosoft__CUI__CXaml__CMedia__CGeometry* This,
        __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIGeometry** result);
    HRESULT (STDMETHODCALLTYPE* get_HasCurrent)(__x_ABI_C__FIIterator_1___x_ABI_CMicrosoft__CUI__CXaml__CMedia__CGeometry* This,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* MoveNext)(__x_ABI_C__FIIterator_1___x_ABI_CMicrosoft__CUI__CXaml__CMedia__CGeometry* This,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__x_ABI_C__FIIterator_1___x_ABI_CMicrosoft__CUI__CXaml__CMedia__CGeometry* This,
        UINT32 itemsLength,
        __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIGeometry** items,
        UINT32* result);

        END_INTERFACE
    } __x_ABI_C__FIIterator_1___x_ABI_CMicrosoft__CUI__CXaml__CMedia__CGeometryVtbl;

    interface __x_ABI_C__FIIterator_1___x_ABI_CMicrosoft__CUI__CXaml__CMedia__CGeometry
    {
        CONST_VTBL struct __x_ABI_C__FIIterator_1___x_ABI_CMicrosoft__CUI__CXaml__CMedia__CGeometryVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIIterator_1___x_ABI_CMicrosoft__CUI__CXaml__CMedia__CGeometry_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIIterable_1___x_ABI_CMicrosoft__CUI__CXaml__CMedia__CGeometry_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIIterable_1___x_ABI_CMicrosoft__CUI__CXaml__CMedia__CGeometry_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIIterable_1___x_ABI_CMicrosoft__CUI__CXaml__CMedia__CGeometry __x_ABI_C__FIIterable_1___x_ABI_CMicrosoft__CUI__CXaml__CMedia__CGeometry;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIIterable_1___x_ABI_CMicrosoft__CUI__CXaml__CMedia__CGeometry;

    typedef struct __x_ABI_C__FIIterable_1___x_ABI_CMicrosoft__CUI__CXaml__CMedia__CGeometryVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIIterable_1___x_ABI_CMicrosoft__CUI__CXaml__CMedia__CGeometry* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIIterable_1___x_ABI_CMicrosoft__CUI__CXaml__CMedia__CGeometry* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIIterable_1___x_ABI_CMicrosoft__CUI__CXaml__CMedia__CGeometry* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIIterable_1___x_ABI_CMicrosoft__CUI__CXaml__CMedia__CGeometry* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIIterable_1___x_ABI_CMicrosoft__CUI__CXaml__CMedia__CGeometry* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIIterable_1___x_ABI_CMicrosoft__CUI__CXaml__CMedia__CGeometry* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* First)(__x_ABI_C__FIIterable_1___x_ABI_CMicrosoft__CUI__CXaml__CMedia__CGeometry* This,
        __x_ABI_C__FIIterator_1___x_ABI_CMicrosoft__CUI__CXaml__CMedia__CGeometry** result);

        END_INTERFACE
    } __x_ABI_C__FIIterable_1___x_ABI_CMicrosoft__CUI__CXaml__CMedia__CGeometryVtbl;

    interface __x_ABI_C__FIIterable_1___x_ABI_CMicrosoft__CUI__CXaml__CMedia__CGeometry
    {
        CONST_VTBL struct __x_ABI_C__FIIterable_1___x_ABI_CMicrosoft__CUI__CXaml__CMedia__CGeometryVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIIterable_1___x_ABI_CMicrosoft__CUI__CXaml__CMedia__CGeometry_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIIterator_1___x_ABI_CMicrosoft__CUI__CXaml__CMedia__CGradientStop_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIIterator_1___x_ABI_CMicrosoft__CUI__CXaml__CMedia__CGradientStop_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIIterator_1___x_ABI_CMicrosoft__CUI__CXaml__CMedia__CGradientStop __x_ABI_C__FIIterator_1___x_ABI_CMicrosoft__CUI__CXaml__CMedia__CGradientStop;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIIterator_1___x_ABI_CMicrosoft__CUI__CXaml__CMedia__CGradientStop;

    typedef struct __x_ABI_C__FIIterator_1___x_ABI_CMicrosoft__CUI__CXaml__CMedia__CGradientStopVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIIterator_1___x_ABI_CMicrosoft__CUI__CXaml__CMedia__CGradientStop* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIIterator_1___x_ABI_CMicrosoft__CUI__CXaml__CMedia__CGradientStop* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIIterator_1___x_ABI_CMicrosoft__CUI__CXaml__CMedia__CGradientStop* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIIterator_1___x_ABI_CMicrosoft__CUI__CXaml__CMedia__CGradientStop* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIIterator_1___x_ABI_CMicrosoft__CUI__CXaml__CMedia__CGradientStop* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIIterator_1___x_ABI_CMicrosoft__CUI__CXaml__CMedia__CGradientStop* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Current)(__x_ABI_C__FIIterator_1___x_ABI_CMicrosoft__CUI__CXaml__CMedia__CGradientStop* This,
        __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIGradientStop** result);
    HRESULT (STDMETHODCALLTYPE* get_HasCurrent)(__x_ABI_C__FIIterator_1___x_ABI_CMicrosoft__CUI__CXaml__CMedia__CGradientStop* This,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* MoveNext)(__x_ABI_C__FIIterator_1___x_ABI_CMicrosoft__CUI__CXaml__CMedia__CGradientStop* This,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__x_ABI_C__FIIterator_1___x_ABI_CMicrosoft__CUI__CXaml__CMedia__CGradientStop* This,
        UINT32 itemsLength,
        __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIGradientStop** items,
        UINT32* result);

        END_INTERFACE
    } __x_ABI_C__FIIterator_1___x_ABI_CMicrosoft__CUI__CXaml__CMedia__CGradientStopVtbl;

    interface __x_ABI_C__FIIterator_1___x_ABI_CMicrosoft__CUI__CXaml__CMedia__CGradientStop
    {
        CONST_VTBL struct __x_ABI_C__FIIterator_1___x_ABI_CMicrosoft__CUI__CXaml__CMedia__CGradientStopVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIIterator_1___x_ABI_CMicrosoft__CUI__CXaml__CMedia__CGradientStop_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIIterable_1___x_ABI_CMicrosoft__CUI__CXaml__CMedia__CGradientStop_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIIterable_1___x_ABI_CMicrosoft__CUI__CXaml__CMedia__CGradientStop_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIIterable_1___x_ABI_CMicrosoft__CUI__CXaml__CMedia__CGradientStop __x_ABI_C__FIIterable_1___x_ABI_CMicrosoft__CUI__CXaml__CMedia__CGradientStop;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIIterable_1___x_ABI_CMicrosoft__CUI__CXaml__CMedia__CGradientStop;

    typedef struct __x_ABI_C__FIIterable_1___x_ABI_CMicrosoft__CUI__CXaml__CMedia__CGradientStopVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIIterable_1___x_ABI_CMicrosoft__CUI__CXaml__CMedia__CGradientStop* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIIterable_1___x_ABI_CMicrosoft__CUI__CXaml__CMedia__CGradientStop* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIIterable_1___x_ABI_CMicrosoft__CUI__CXaml__CMedia__CGradientStop* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIIterable_1___x_ABI_CMicrosoft__CUI__CXaml__CMedia__CGradientStop* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIIterable_1___x_ABI_CMicrosoft__CUI__CXaml__CMedia__CGradientStop* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIIterable_1___x_ABI_CMicrosoft__CUI__CXaml__CMedia__CGradientStop* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* First)(__x_ABI_C__FIIterable_1___x_ABI_CMicrosoft__CUI__CXaml__CMedia__CGradientStop* This,
        __x_ABI_C__FIIterator_1___x_ABI_CMicrosoft__CUI__CXaml__CMedia__CGradientStop** result);

        END_INTERFACE
    } __x_ABI_C__FIIterable_1___x_ABI_CMicrosoft__CUI__CXaml__CMedia__CGradientStopVtbl;

    interface __x_ABI_C__FIIterable_1___x_ABI_CMicrosoft__CUI__CXaml__CMedia__CGradientStop
    {
        CONST_VTBL struct __x_ABI_C__FIIterable_1___x_ABI_CMicrosoft__CUI__CXaml__CMedia__CGradientStopVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIIterable_1___x_ABI_CMicrosoft__CUI__CXaml__CMedia__CGradientStop_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIIterator_1___x_ABI_CMicrosoft__CUI__CXaml__CMedia__CPathFigure_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIIterator_1___x_ABI_CMicrosoft__CUI__CXaml__CMedia__CPathFigure_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIIterator_1___x_ABI_CMicrosoft__CUI__CXaml__CMedia__CPathFigure __x_ABI_C__FIIterator_1___x_ABI_CMicrosoft__CUI__CXaml__CMedia__CPathFigure;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIIterator_1___x_ABI_CMicrosoft__CUI__CXaml__CMedia__CPathFigure;

    typedef struct __x_ABI_C__FIIterator_1___x_ABI_CMicrosoft__CUI__CXaml__CMedia__CPathFigureVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIIterator_1___x_ABI_CMicrosoft__CUI__CXaml__CMedia__CPathFigure* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIIterator_1___x_ABI_CMicrosoft__CUI__CXaml__CMedia__CPathFigure* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIIterator_1___x_ABI_CMicrosoft__CUI__CXaml__CMedia__CPathFigure* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIIterator_1___x_ABI_CMicrosoft__CUI__CXaml__CMedia__CPathFigure* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIIterator_1___x_ABI_CMicrosoft__CUI__CXaml__CMedia__CPathFigure* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIIterator_1___x_ABI_CMicrosoft__CUI__CXaml__CMedia__CPathFigure* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Current)(__x_ABI_C__FIIterator_1___x_ABI_CMicrosoft__CUI__CXaml__CMedia__CPathFigure* This,
        __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPathFigure** result);
    HRESULT (STDMETHODCALLTYPE* get_HasCurrent)(__x_ABI_C__FIIterator_1___x_ABI_CMicrosoft__CUI__CXaml__CMedia__CPathFigure* This,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* MoveNext)(__x_ABI_C__FIIterator_1___x_ABI_CMicrosoft__CUI__CXaml__CMedia__CPathFigure* This,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__x_ABI_C__FIIterator_1___x_ABI_CMicrosoft__CUI__CXaml__CMedia__CPathFigure* This,
        UINT32 itemsLength,
        __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPathFigure** items,
        UINT32* result);

        END_INTERFACE
    } __x_ABI_C__FIIterator_1___x_ABI_CMicrosoft__CUI__CXaml__CMedia__CPathFigureVtbl;

    interface __x_ABI_C__FIIterator_1___x_ABI_CMicrosoft__CUI__CXaml__CMedia__CPathFigure
    {
        CONST_VTBL struct __x_ABI_C__FIIterator_1___x_ABI_CMicrosoft__CUI__CXaml__CMedia__CPathFigureVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIIterator_1___x_ABI_CMicrosoft__CUI__CXaml__CMedia__CPathFigure_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIIterable_1___x_ABI_CMicrosoft__CUI__CXaml__CMedia__CPathFigure_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIIterable_1___x_ABI_CMicrosoft__CUI__CXaml__CMedia__CPathFigure_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIIterable_1___x_ABI_CMicrosoft__CUI__CXaml__CMedia__CPathFigure __x_ABI_C__FIIterable_1___x_ABI_CMicrosoft__CUI__CXaml__CMedia__CPathFigure;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIIterable_1___x_ABI_CMicrosoft__CUI__CXaml__CMedia__CPathFigure;

    typedef struct __x_ABI_C__FIIterable_1___x_ABI_CMicrosoft__CUI__CXaml__CMedia__CPathFigureVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIIterable_1___x_ABI_CMicrosoft__CUI__CXaml__CMedia__CPathFigure* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIIterable_1___x_ABI_CMicrosoft__CUI__CXaml__CMedia__CPathFigure* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIIterable_1___x_ABI_CMicrosoft__CUI__CXaml__CMedia__CPathFigure* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIIterable_1___x_ABI_CMicrosoft__CUI__CXaml__CMedia__CPathFigure* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIIterable_1___x_ABI_CMicrosoft__CUI__CXaml__CMedia__CPathFigure* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIIterable_1___x_ABI_CMicrosoft__CUI__CXaml__CMedia__CPathFigure* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* First)(__x_ABI_C__FIIterable_1___x_ABI_CMicrosoft__CUI__CXaml__CMedia__CPathFigure* This,
        __x_ABI_C__FIIterator_1___x_ABI_CMicrosoft__CUI__CXaml__CMedia__CPathFigure** result);

        END_INTERFACE
    } __x_ABI_C__FIIterable_1___x_ABI_CMicrosoft__CUI__CXaml__CMedia__CPathFigureVtbl;

    interface __x_ABI_C__FIIterable_1___x_ABI_CMicrosoft__CUI__CXaml__CMedia__CPathFigure
    {
        CONST_VTBL struct __x_ABI_C__FIIterable_1___x_ABI_CMicrosoft__CUI__CXaml__CMedia__CPathFigureVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIIterable_1___x_ABI_CMicrosoft__CUI__CXaml__CMedia__CPathFigure_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIIterator_1___x_ABI_CMicrosoft__CUI__CXaml__CMedia__CPathSegment_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIIterator_1___x_ABI_CMicrosoft__CUI__CXaml__CMedia__CPathSegment_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIIterator_1___x_ABI_CMicrosoft__CUI__CXaml__CMedia__CPathSegment __x_ABI_C__FIIterator_1___x_ABI_CMicrosoft__CUI__CXaml__CMedia__CPathSegment;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIIterator_1___x_ABI_CMicrosoft__CUI__CXaml__CMedia__CPathSegment;

    typedef struct __x_ABI_C__FIIterator_1___x_ABI_CMicrosoft__CUI__CXaml__CMedia__CPathSegmentVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIIterator_1___x_ABI_CMicrosoft__CUI__CXaml__CMedia__CPathSegment* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIIterator_1___x_ABI_CMicrosoft__CUI__CXaml__CMedia__CPathSegment* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIIterator_1___x_ABI_CMicrosoft__CUI__CXaml__CMedia__CPathSegment* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIIterator_1___x_ABI_CMicrosoft__CUI__CXaml__CMedia__CPathSegment* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIIterator_1___x_ABI_CMicrosoft__CUI__CXaml__CMedia__CPathSegment* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIIterator_1___x_ABI_CMicrosoft__CUI__CXaml__CMedia__CPathSegment* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Current)(__x_ABI_C__FIIterator_1___x_ABI_CMicrosoft__CUI__CXaml__CMedia__CPathSegment* This,
        __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPathSegment** result);
    HRESULT (STDMETHODCALLTYPE* get_HasCurrent)(__x_ABI_C__FIIterator_1___x_ABI_CMicrosoft__CUI__CXaml__CMedia__CPathSegment* This,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* MoveNext)(__x_ABI_C__FIIterator_1___x_ABI_CMicrosoft__CUI__CXaml__CMedia__CPathSegment* This,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__x_ABI_C__FIIterator_1___x_ABI_CMicrosoft__CUI__CXaml__CMedia__CPathSegment* This,
        UINT32 itemsLength,
        __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPathSegment** items,
        UINT32* result);

        END_INTERFACE
    } __x_ABI_C__FIIterator_1___x_ABI_CMicrosoft__CUI__CXaml__CMedia__CPathSegmentVtbl;

    interface __x_ABI_C__FIIterator_1___x_ABI_CMicrosoft__CUI__CXaml__CMedia__CPathSegment
    {
        CONST_VTBL struct __x_ABI_C__FIIterator_1___x_ABI_CMicrosoft__CUI__CXaml__CMedia__CPathSegmentVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIIterator_1___x_ABI_CMicrosoft__CUI__CXaml__CMedia__CPathSegment_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIIterable_1___x_ABI_CMicrosoft__CUI__CXaml__CMedia__CPathSegment_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIIterable_1___x_ABI_CMicrosoft__CUI__CXaml__CMedia__CPathSegment_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIIterable_1___x_ABI_CMicrosoft__CUI__CXaml__CMedia__CPathSegment __x_ABI_C__FIIterable_1___x_ABI_CMicrosoft__CUI__CXaml__CMedia__CPathSegment;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIIterable_1___x_ABI_CMicrosoft__CUI__CXaml__CMedia__CPathSegment;

    typedef struct __x_ABI_C__FIIterable_1___x_ABI_CMicrosoft__CUI__CXaml__CMedia__CPathSegmentVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIIterable_1___x_ABI_CMicrosoft__CUI__CXaml__CMedia__CPathSegment* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIIterable_1___x_ABI_CMicrosoft__CUI__CXaml__CMedia__CPathSegment* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIIterable_1___x_ABI_CMicrosoft__CUI__CXaml__CMedia__CPathSegment* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIIterable_1___x_ABI_CMicrosoft__CUI__CXaml__CMedia__CPathSegment* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIIterable_1___x_ABI_CMicrosoft__CUI__CXaml__CMedia__CPathSegment* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIIterable_1___x_ABI_CMicrosoft__CUI__CXaml__CMedia__CPathSegment* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* First)(__x_ABI_C__FIIterable_1___x_ABI_CMicrosoft__CUI__CXaml__CMedia__CPathSegment* This,
        __x_ABI_C__FIIterator_1___x_ABI_CMicrosoft__CUI__CXaml__CMedia__CPathSegment** result);

        END_INTERFACE
    } __x_ABI_C__FIIterable_1___x_ABI_CMicrosoft__CUI__CXaml__CMedia__CPathSegmentVtbl;

    interface __x_ABI_C__FIIterable_1___x_ABI_CMicrosoft__CUI__CXaml__CMedia__CPathSegment
    {
        CONST_VTBL struct __x_ABI_C__FIIterable_1___x_ABI_CMicrosoft__CUI__CXaml__CMedia__CPathSegmentVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIIterable_1___x_ABI_CMicrosoft__CUI__CXaml__CMedia__CPathSegment_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIIterator_1___x_ABI_CMicrosoft__CUI__CXaml__CMedia__CTransform_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIIterator_1___x_ABI_CMicrosoft__CUI__CXaml__CMedia__CTransform_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIIterator_1___x_ABI_CMicrosoft__CUI__CXaml__CMedia__CTransform __x_ABI_C__FIIterator_1___x_ABI_CMicrosoft__CUI__CXaml__CMedia__CTransform;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIIterator_1___x_ABI_CMicrosoft__CUI__CXaml__CMedia__CTransform;

    typedef struct __x_ABI_C__FIIterator_1___x_ABI_CMicrosoft__CUI__CXaml__CMedia__CTransformVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIIterator_1___x_ABI_CMicrosoft__CUI__CXaml__CMedia__CTransform* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIIterator_1___x_ABI_CMicrosoft__CUI__CXaml__CMedia__CTransform* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIIterator_1___x_ABI_CMicrosoft__CUI__CXaml__CMedia__CTransform* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIIterator_1___x_ABI_CMicrosoft__CUI__CXaml__CMedia__CTransform* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIIterator_1___x_ABI_CMicrosoft__CUI__CXaml__CMedia__CTransform* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIIterator_1___x_ABI_CMicrosoft__CUI__CXaml__CMedia__CTransform* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Current)(__x_ABI_C__FIIterator_1___x_ABI_CMicrosoft__CUI__CXaml__CMedia__CTransform* This,
        __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CITransform** result);
    HRESULT (STDMETHODCALLTYPE* get_HasCurrent)(__x_ABI_C__FIIterator_1___x_ABI_CMicrosoft__CUI__CXaml__CMedia__CTransform* This,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* MoveNext)(__x_ABI_C__FIIterator_1___x_ABI_CMicrosoft__CUI__CXaml__CMedia__CTransform* This,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__x_ABI_C__FIIterator_1___x_ABI_CMicrosoft__CUI__CXaml__CMedia__CTransform* This,
        UINT32 itemsLength,
        __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CITransform** items,
        UINT32* result);

        END_INTERFACE
    } __x_ABI_C__FIIterator_1___x_ABI_CMicrosoft__CUI__CXaml__CMedia__CTransformVtbl;

    interface __x_ABI_C__FIIterator_1___x_ABI_CMicrosoft__CUI__CXaml__CMedia__CTransform
    {
        CONST_VTBL struct __x_ABI_C__FIIterator_1___x_ABI_CMicrosoft__CUI__CXaml__CMedia__CTransformVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIIterator_1___x_ABI_CMicrosoft__CUI__CXaml__CMedia__CTransform_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIIterable_1___x_ABI_CMicrosoft__CUI__CXaml__CMedia__CTransform_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIIterable_1___x_ABI_CMicrosoft__CUI__CXaml__CMedia__CTransform_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIIterable_1___x_ABI_CMicrosoft__CUI__CXaml__CMedia__CTransform __x_ABI_C__FIIterable_1___x_ABI_CMicrosoft__CUI__CXaml__CMedia__CTransform;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIIterable_1___x_ABI_CMicrosoft__CUI__CXaml__CMedia__CTransform;

    typedef struct __x_ABI_C__FIIterable_1___x_ABI_CMicrosoft__CUI__CXaml__CMedia__CTransformVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIIterable_1___x_ABI_CMicrosoft__CUI__CXaml__CMedia__CTransform* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIIterable_1___x_ABI_CMicrosoft__CUI__CXaml__CMedia__CTransform* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIIterable_1___x_ABI_CMicrosoft__CUI__CXaml__CMedia__CTransform* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIIterable_1___x_ABI_CMicrosoft__CUI__CXaml__CMedia__CTransform* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIIterable_1___x_ABI_CMicrosoft__CUI__CXaml__CMedia__CTransform* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIIterable_1___x_ABI_CMicrosoft__CUI__CXaml__CMedia__CTransform* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* First)(__x_ABI_C__FIIterable_1___x_ABI_CMicrosoft__CUI__CXaml__CMedia__CTransform* This,
        __x_ABI_C__FIIterator_1___x_ABI_CMicrosoft__CUI__CXaml__CMedia__CTransform** result);

        END_INTERFACE
    } __x_ABI_C__FIIterable_1___x_ABI_CMicrosoft__CUI__CXaml__CMedia__CTransformVtbl;

    interface __x_ABI_C__FIIterable_1___x_ABI_CMicrosoft__CUI__CXaml__CMedia__CTransform
    {
        CONST_VTBL struct __x_ABI_C__FIIterable_1___x_ABI_CMicrosoft__CUI__CXaml__CMedia__CTransformVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIIterable_1___x_ABI_CMicrosoft__CUI__CXaml__CMedia__CTransform_INTERFACE_DEFINED__
    
#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CIUIElement_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CIUIElement_FWD_DEFINED__
    typedef interface __x_ABI_CMicrosoft_CUI_CXaml_CIUIElement __x_ABI_CMicrosoft_CUI_CXaml_CIUIElement;

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CIUIElement_FWD_DEFINED__

#if !defined(____x_ABI_C__FIIterator_1___x_ABI_CMicrosoft__CUI__CXaml__CUIElement_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIIterator_1___x_ABI_CMicrosoft__CUI__CXaml__CUIElement_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIIterator_1___x_ABI_CMicrosoft__CUI__CXaml__CUIElement __x_ABI_C__FIIterator_1___x_ABI_CMicrosoft__CUI__CXaml__CUIElement;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIIterator_1___x_ABI_CMicrosoft__CUI__CXaml__CUIElement;

    typedef struct __x_ABI_C__FIIterator_1___x_ABI_CMicrosoft__CUI__CXaml__CUIElementVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIIterator_1___x_ABI_CMicrosoft__CUI__CXaml__CUIElement* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIIterator_1___x_ABI_CMicrosoft__CUI__CXaml__CUIElement* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIIterator_1___x_ABI_CMicrosoft__CUI__CXaml__CUIElement* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIIterator_1___x_ABI_CMicrosoft__CUI__CXaml__CUIElement* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIIterator_1___x_ABI_CMicrosoft__CUI__CXaml__CUIElement* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIIterator_1___x_ABI_CMicrosoft__CUI__CXaml__CUIElement* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Current)(__x_ABI_C__FIIterator_1___x_ABI_CMicrosoft__CUI__CXaml__CUIElement* This,
        __x_ABI_CMicrosoft_CUI_CXaml_CIUIElement** result);
    HRESULT (STDMETHODCALLTYPE* get_HasCurrent)(__x_ABI_C__FIIterator_1___x_ABI_CMicrosoft__CUI__CXaml__CUIElement* This,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* MoveNext)(__x_ABI_C__FIIterator_1___x_ABI_CMicrosoft__CUI__CXaml__CUIElement* This,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__x_ABI_C__FIIterator_1___x_ABI_CMicrosoft__CUI__CXaml__CUIElement* This,
        UINT32 itemsLength,
        __x_ABI_CMicrosoft_CUI_CXaml_CIUIElement** items,
        UINT32* result);

        END_INTERFACE
    } __x_ABI_C__FIIterator_1___x_ABI_CMicrosoft__CUI__CXaml__CUIElementVtbl;

    interface __x_ABI_C__FIIterator_1___x_ABI_CMicrosoft__CUI__CXaml__CUIElement
    {
        CONST_VTBL struct __x_ABI_C__FIIterator_1___x_ABI_CMicrosoft__CUI__CXaml__CUIElementVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIIterator_1___x_ABI_CMicrosoft__CUI__CXaml__CUIElement_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIIterable_1___x_ABI_CMicrosoft__CUI__CXaml__CUIElement_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIIterable_1___x_ABI_CMicrosoft__CUI__CXaml__CUIElement_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIIterable_1___x_ABI_CMicrosoft__CUI__CXaml__CUIElement __x_ABI_C__FIIterable_1___x_ABI_CMicrosoft__CUI__CXaml__CUIElement;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIIterable_1___x_ABI_CMicrosoft__CUI__CXaml__CUIElement;

    typedef struct __x_ABI_C__FIIterable_1___x_ABI_CMicrosoft__CUI__CXaml__CUIElementVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIIterable_1___x_ABI_CMicrosoft__CUI__CXaml__CUIElement* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIIterable_1___x_ABI_CMicrosoft__CUI__CXaml__CUIElement* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIIterable_1___x_ABI_CMicrosoft__CUI__CXaml__CUIElement* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIIterable_1___x_ABI_CMicrosoft__CUI__CXaml__CUIElement* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIIterable_1___x_ABI_CMicrosoft__CUI__CXaml__CUIElement* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIIterable_1___x_ABI_CMicrosoft__CUI__CXaml__CUIElement* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* First)(__x_ABI_C__FIIterable_1___x_ABI_CMicrosoft__CUI__CXaml__CUIElement* This,
        __x_ABI_C__FIIterator_1___x_ABI_CMicrosoft__CUI__CXaml__CUIElement** result);

        END_INTERFACE
    } __x_ABI_C__FIIterable_1___x_ABI_CMicrosoft__CUI__CXaml__CUIElementVtbl;

    interface __x_ABI_C__FIIterable_1___x_ABI_CMicrosoft__CUI__CXaml__CUIElement
    {
        CONST_VTBL struct __x_ABI_C__FIIterable_1___x_ABI_CMicrosoft__CUI__CXaml__CUIElementVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIIterable_1___x_ABI_CMicrosoft__CUI__CXaml__CUIElement_INTERFACE_DEFINED__
    
typedef struct __x_ABI_CWindows_CFoundation_CPoint __x_ABI_CWindows_CFoundation_CPoint;

#if !defined(____x_ABI_C__FIIterator_1___x_ABI_CWindows__CFoundation__CPoint_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIIterator_1___x_ABI_CWindows__CFoundation__CPoint_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIIterator_1___x_ABI_CWindows__CFoundation__CPoint __x_ABI_C__FIIterator_1___x_ABI_CWindows__CFoundation__CPoint;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIIterator_1___x_ABI_CWindows__CFoundation__CPoint;

    typedef struct __x_ABI_C__FIIterator_1___x_ABI_CWindows__CFoundation__CPointVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CFoundation__CPoint* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CFoundation__CPoint* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CFoundation__CPoint* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CFoundation__CPoint* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CFoundation__CPoint* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CFoundation__CPoint* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Current)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CFoundation__CPoint* This,
        struct __x_ABI_CWindows_CFoundation_CPoint* result);
    HRESULT (STDMETHODCALLTYPE* get_HasCurrent)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CFoundation__CPoint* This,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* MoveNext)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CFoundation__CPoint* This,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CFoundation__CPoint* This,
        UINT32 itemsLength,
        struct __x_ABI_CWindows_CFoundation_CPoint* items,
        UINT32* result);

        END_INTERFACE
    } __x_ABI_C__FIIterator_1___x_ABI_CWindows__CFoundation__CPointVtbl;

    interface __x_ABI_C__FIIterator_1___x_ABI_CWindows__CFoundation__CPoint
    {
        CONST_VTBL struct __x_ABI_C__FIIterator_1___x_ABI_CWindows__CFoundation__CPointVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIIterator_1___x_ABI_CWindows__CFoundation__CPoint_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIIterable_1___x_ABI_CWindows__CFoundation__CPoint_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIIterable_1___x_ABI_CWindows__CFoundation__CPoint_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIIterable_1___x_ABI_CWindows__CFoundation__CPoint __x_ABI_C__FIIterable_1___x_ABI_CWindows__CFoundation__CPoint;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIIterable_1___x_ABI_CWindows__CFoundation__CPoint;

    typedef struct __x_ABI_C__FIIterable_1___x_ABI_CWindows__CFoundation__CPointVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CFoundation__CPoint* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CFoundation__CPoint* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CFoundation__CPoint* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CFoundation__CPoint* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CFoundation__CPoint* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CFoundation__CPoint* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* First)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CFoundation__CPoint* This,
        __x_ABI_C__FIIterator_1___x_ABI_CWindows__CFoundation__CPoint** result);

        END_INTERFACE
    } __x_ABI_C__FIIterable_1___x_ABI_CWindows__CFoundation__CPointVtbl;

    interface __x_ABI_C__FIIterable_1___x_ABI_CWindows__CFoundation__CPoint
    {
        CONST_VTBL struct __x_ABI_C__FIIterable_1___x_ABI_CWindows__CFoundation__CPointVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIIterable_1___x_ABI_CWindows__CFoundation__CPoint_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIVectorView_1___x_ABI_CMicrosoft__CUI__CXaml__CMedia__CGradientStop_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIVectorView_1___x_ABI_CMicrosoft__CUI__CXaml__CMedia__CGradientStop_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIVectorView_1___x_ABI_CMicrosoft__CUI__CXaml__CMedia__CGradientStop __x_ABI_C__FIVectorView_1___x_ABI_CMicrosoft__CUI__CXaml__CMedia__CGradientStop;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIVectorView_1___x_ABI_CMicrosoft__CUI__CXaml__CMedia__CGradientStop;

    typedef struct __x_ABI_C__FIVectorView_1___x_ABI_CMicrosoft__CUI__CXaml__CMedia__CGradientStopVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIVectorView_1___x_ABI_CMicrosoft__CUI__CXaml__CMedia__CGradientStop* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIVectorView_1___x_ABI_CMicrosoft__CUI__CXaml__CMedia__CGradientStop* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIVectorView_1___x_ABI_CMicrosoft__CUI__CXaml__CMedia__CGradientStop* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIVectorView_1___x_ABI_CMicrosoft__CUI__CXaml__CMedia__CGradientStop* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIVectorView_1___x_ABI_CMicrosoft__CUI__CXaml__CMedia__CGradientStop* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIVectorView_1___x_ABI_CMicrosoft__CUI__CXaml__CMedia__CGradientStop* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* GetAt)(__x_ABI_C__FIVectorView_1___x_ABI_CMicrosoft__CUI__CXaml__CMedia__CGradientStop* This,
        UINT32 index,
        __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIGradientStop** result);
    HRESULT (STDMETHODCALLTYPE* get_Size)(__x_ABI_C__FIVectorView_1___x_ABI_CMicrosoft__CUI__CXaml__CMedia__CGradientStop* This,
        UINT32* result);
    HRESULT (STDMETHODCALLTYPE* IndexOf)(__x_ABI_C__FIVectorView_1___x_ABI_CMicrosoft__CUI__CXaml__CMedia__CGradientStop* This,
        __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIGradientStop* value,
        UINT32* index,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__x_ABI_C__FIVectorView_1___x_ABI_CMicrosoft__CUI__CXaml__CMedia__CGradientStop* This,
        UINT32 startIndex,
        UINT32 itemsLength,
        __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIGradientStop** items,
        UINT32* result);

        END_INTERFACE
    } __x_ABI_C__FIVectorView_1___x_ABI_CMicrosoft__CUI__CXaml__CMedia__CGradientStopVtbl;

    interface __x_ABI_C__FIVectorView_1___x_ABI_CMicrosoft__CUI__CXaml__CMedia__CGradientStop
    {
        CONST_VTBL struct __x_ABI_C__FIVectorView_1___x_ABI_CMicrosoft__CUI__CXaml__CMedia__CGradientStopVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIVectorView_1___x_ABI_CMicrosoft__CUI__CXaml__CMedia__CGradientStop_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIVector_1___x_ABI_CMicrosoft__CUI__CXaml__CMedia__CGradientStop_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIVector_1___x_ABI_CMicrosoft__CUI__CXaml__CMedia__CGradientStop_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIVector_1___x_ABI_CMicrosoft__CUI__CXaml__CMedia__CGradientStop __x_ABI_C__FIVector_1___x_ABI_CMicrosoft__CUI__CXaml__CMedia__CGradientStop;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIVector_1___x_ABI_CMicrosoft__CUI__CXaml__CMedia__CGradientStop;

    typedef struct __x_ABI_C__FIVector_1___x_ABI_CMicrosoft__CUI__CXaml__CMedia__CGradientStopVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIVector_1___x_ABI_CMicrosoft__CUI__CXaml__CMedia__CGradientStop* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIVector_1___x_ABI_CMicrosoft__CUI__CXaml__CMedia__CGradientStop* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIVector_1___x_ABI_CMicrosoft__CUI__CXaml__CMedia__CGradientStop* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIVector_1___x_ABI_CMicrosoft__CUI__CXaml__CMedia__CGradientStop* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIVector_1___x_ABI_CMicrosoft__CUI__CXaml__CMedia__CGradientStop* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIVector_1___x_ABI_CMicrosoft__CUI__CXaml__CMedia__CGradientStop* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* GetAt)(__x_ABI_C__FIVector_1___x_ABI_CMicrosoft__CUI__CXaml__CMedia__CGradientStop* This,
        UINT32 index,
        __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIGradientStop** result);
    HRESULT (STDMETHODCALLTYPE* get_Size)(__x_ABI_C__FIVector_1___x_ABI_CMicrosoft__CUI__CXaml__CMedia__CGradientStop* This,
        UINT32* result);
    HRESULT (STDMETHODCALLTYPE* GetView)(__x_ABI_C__FIVector_1___x_ABI_CMicrosoft__CUI__CXaml__CMedia__CGradientStop* This,
        __x_ABI_C__FIVectorView_1___x_ABI_CMicrosoft__CUI__CXaml__CMedia__CGradientStop** result);
    HRESULT (STDMETHODCALLTYPE* IndexOf)(__x_ABI_C__FIVector_1___x_ABI_CMicrosoft__CUI__CXaml__CMedia__CGradientStop* This,
        __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIGradientStop* value,
        UINT32* index,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* SetAt)(__x_ABI_C__FIVector_1___x_ABI_CMicrosoft__CUI__CXaml__CMedia__CGradientStop* This,
        UINT32 index,
        __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIGradientStop* value);
    HRESULT (STDMETHODCALLTYPE* InsertAt)(__x_ABI_C__FIVector_1___x_ABI_CMicrosoft__CUI__CXaml__CMedia__CGradientStop* This,
        UINT32 index,
        __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIGradientStop* value);
    HRESULT (STDMETHODCALLTYPE* RemoveAt)(__x_ABI_C__FIVector_1___x_ABI_CMicrosoft__CUI__CXaml__CMedia__CGradientStop* This,
        UINT32 index);
    HRESULT (STDMETHODCALLTYPE* Append)(__x_ABI_C__FIVector_1___x_ABI_CMicrosoft__CUI__CXaml__CMedia__CGradientStop* This,
        __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIGradientStop* value);
    HRESULT (STDMETHODCALLTYPE* RemoveAtEnd)(__x_ABI_C__FIVector_1___x_ABI_CMicrosoft__CUI__CXaml__CMedia__CGradientStop* This);
    HRESULT (STDMETHODCALLTYPE* Clear)(__x_ABI_C__FIVector_1___x_ABI_CMicrosoft__CUI__CXaml__CMedia__CGradientStop* This);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__x_ABI_C__FIVector_1___x_ABI_CMicrosoft__CUI__CXaml__CMedia__CGradientStop* This,
        UINT32 startIndex,
        UINT32 itemsLength,
        __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIGradientStop** items,
        UINT32* result);
    HRESULT (STDMETHODCALLTYPE* ReplaceAll)(__x_ABI_C__FIVector_1___x_ABI_CMicrosoft__CUI__CXaml__CMedia__CGradientStop* This,
        UINT32 itemsLength,
        __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIGradientStop** items);

        END_INTERFACE
    } __x_ABI_C__FIVector_1___x_ABI_CMicrosoft__CUI__CXaml__CMedia__CGradientStopVtbl;

    interface __x_ABI_C__FIVector_1___x_ABI_CMicrosoft__CUI__CXaml__CMedia__CGradientStop
    {
        CONST_VTBL struct __x_ABI_C__FIVector_1___x_ABI_CMicrosoft__CUI__CXaml__CMedia__CGradientStopVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIVector_1___x_ABI_CMicrosoft__CUI__CXaml__CMedia__CGradientStop_INTERFACE_DEFINED__
    
typedef interface __x_ABI_C__FIObservableVector_1___x_ABI_CMicrosoft__CUI__CXaml__CMedia__CGradientStop __x_ABI_C__FIObservableVector_1___x_ABI_CMicrosoft__CUI__CXaml__CMedia__CGradientStop;

#if !defined(____x_ABI_C__FVectorChangedEventHandler_1___x_ABI_CMicrosoft__CUI__CXaml__CMedia__CGradientStop_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FVectorChangedEventHandler_1___x_ABI_CMicrosoft__CUI__CXaml__CMedia__CGradientStop_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FVectorChangedEventHandler_1___x_ABI_CMicrosoft__CUI__CXaml__CMedia__CGradientStop __x_ABI_C__FVectorChangedEventHandler_1___x_ABI_CMicrosoft__CUI__CXaml__CMedia__CGradientStop;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FVectorChangedEventHandler_1___x_ABI_CMicrosoft__CUI__CXaml__CMedia__CGradientStop;

    typedef struct __x_ABI_C__FVectorChangedEventHandler_1___x_ABI_CMicrosoft__CUI__CXaml__CMedia__CGradientStopVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FVectorChangedEventHandler_1___x_ABI_CMicrosoft__CUI__CXaml__CMedia__CGradientStop* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FVectorChangedEventHandler_1___x_ABI_CMicrosoft__CUI__CXaml__CMedia__CGradientStop* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FVectorChangedEventHandler_1___x_ABI_CMicrosoft__CUI__CXaml__CMedia__CGradientStop* This);
        HRESULT (STDMETHODCALLTYPE* Invoke)(__x_ABI_C__FVectorChangedEventHandler_1___x_ABI_CMicrosoft__CUI__CXaml__CMedia__CGradientStop* This,
        __x_ABI_C__FIObservableVector_1___x_ABI_CMicrosoft__CUI__CXaml__CMedia__CGradientStop* sender,
        __x_ABI_CWindows_CFoundation_CCollections_CIVectorChangedEventArgs* event);

        END_INTERFACE
    } __x_ABI_C__FVectorChangedEventHandler_1___x_ABI_CMicrosoft__CUI__CXaml__CMedia__CGradientStopVtbl;

    interface __x_ABI_C__FVectorChangedEventHandler_1___x_ABI_CMicrosoft__CUI__CXaml__CMedia__CGradientStop
    {
        CONST_VTBL struct __x_ABI_C__FVectorChangedEventHandler_1___x_ABI_CMicrosoft__CUI__CXaml__CMedia__CGradientStopVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FVectorChangedEventHandler_1___x_ABI_CMicrosoft__CUI__CXaml__CMedia__CGradientStop_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIObservableVector_1___x_ABI_CMicrosoft__CUI__CXaml__CMedia__CGradientStop_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIObservableVector_1___x_ABI_CMicrosoft__CUI__CXaml__CMedia__CGradientStop_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIObservableVector_1___x_ABI_CMicrosoft__CUI__CXaml__CMedia__CGradientStop __x_ABI_C__FIObservableVector_1___x_ABI_CMicrosoft__CUI__CXaml__CMedia__CGradientStop;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIObservableVector_1___x_ABI_CMicrosoft__CUI__CXaml__CMedia__CGradientStop;

    typedef struct __x_ABI_C__FIObservableVector_1___x_ABI_CMicrosoft__CUI__CXaml__CMedia__CGradientStopVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIObservableVector_1___x_ABI_CMicrosoft__CUI__CXaml__CMedia__CGradientStop* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIObservableVector_1___x_ABI_CMicrosoft__CUI__CXaml__CMedia__CGradientStop* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIObservableVector_1___x_ABI_CMicrosoft__CUI__CXaml__CMedia__CGradientStop* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIObservableVector_1___x_ABI_CMicrosoft__CUI__CXaml__CMedia__CGradientStop* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIObservableVector_1___x_ABI_CMicrosoft__CUI__CXaml__CMedia__CGradientStop* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIObservableVector_1___x_ABI_CMicrosoft__CUI__CXaml__CMedia__CGradientStop* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* add_VectorChanged)(__x_ABI_C__FIObservableVector_1___x_ABI_CMicrosoft__CUI__CXaml__CMedia__CGradientStop* This,
        __x_ABI_C__FVectorChangedEventHandler_1___x_ABI_CMicrosoft__CUI__CXaml__CMedia__CGradientStop* vhnd,
        EventRegistrationToken* result);
    HRESULT (STDMETHODCALLTYPE* remove_VectorChanged)(__x_ABI_C__FIObservableVector_1___x_ABI_CMicrosoft__CUI__CXaml__CMedia__CGradientStop* This,
        EventRegistrationToken token);

        END_INTERFACE
    } __x_ABI_C__FIObservableVector_1___x_ABI_CMicrosoft__CUI__CXaml__CMedia__CGradientStopVtbl;

    interface __x_ABI_C__FIObservableVector_1___x_ABI_CMicrosoft__CUI__CXaml__CMedia__CGradientStop
    {
        CONST_VTBL struct __x_ABI_C__FIObservableVector_1___x_ABI_CMicrosoft__CUI__CXaml__CMedia__CGradientStopVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIObservableVector_1___x_ABI_CMicrosoft__CUI__CXaml__CMedia__CGradientStop_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIVectorView_1_double_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIVectorView_1_double_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIVectorView_1_double __x_ABI_C__FIVectorView_1_double;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIVectorView_1_double;

    typedef struct __x_ABI_C__FIVectorView_1_doubleVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIVectorView_1_double* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIVectorView_1_double* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIVectorView_1_double* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIVectorView_1_double* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIVectorView_1_double* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIVectorView_1_double* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* GetAt)(__x_ABI_C__FIVectorView_1_double* This,
        UINT32 index,
        DOUBLE* result);
    HRESULT (STDMETHODCALLTYPE* get_Size)(__x_ABI_C__FIVectorView_1_double* This,
        UINT32* result);
    HRESULT (STDMETHODCALLTYPE* IndexOf)(__x_ABI_C__FIVectorView_1_double* This,
        DOUBLE value,
        UINT32* index,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__x_ABI_C__FIVectorView_1_double* This,
        UINT32 startIndex,
        UINT32 itemsLength,
        DOUBLE* items,
        UINT32* result);

        END_INTERFACE
    } __x_ABI_C__FIVectorView_1_doubleVtbl;

    interface __x_ABI_C__FIVectorView_1_double
    {
        CONST_VTBL struct __x_ABI_C__FIVectorView_1_doubleVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIVectorView_1_double_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIVectorView_1___x_ABI_CMicrosoft__CUI__CXaml__CControls__CPrimitives__CPopup_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIVectorView_1___x_ABI_CMicrosoft__CUI__CXaml__CControls__CPrimitives__CPopup_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIVectorView_1___x_ABI_CMicrosoft__CUI__CXaml__CControls__CPrimitives__CPopup __x_ABI_C__FIVectorView_1___x_ABI_CMicrosoft__CUI__CXaml__CControls__CPrimitives__CPopup;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIVectorView_1___x_ABI_CMicrosoft__CUI__CXaml__CControls__CPrimitives__CPopup;

    typedef struct __x_ABI_C__FIVectorView_1___x_ABI_CMicrosoft__CUI__CXaml__CControls__CPrimitives__CPopupVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIVectorView_1___x_ABI_CMicrosoft__CUI__CXaml__CControls__CPrimitives__CPopup* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIVectorView_1___x_ABI_CMicrosoft__CUI__CXaml__CControls__CPrimitives__CPopup* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIVectorView_1___x_ABI_CMicrosoft__CUI__CXaml__CControls__CPrimitives__CPopup* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIVectorView_1___x_ABI_CMicrosoft__CUI__CXaml__CControls__CPrimitives__CPopup* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIVectorView_1___x_ABI_CMicrosoft__CUI__CXaml__CControls__CPrimitives__CPopup* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIVectorView_1___x_ABI_CMicrosoft__CUI__CXaml__CControls__CPrimitives__CPopup* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* GetAt)(__x_ABI_C__FIVectorView_1___x_ABI_CMicrosoft__CUI__CXaml__CControls__CPrimitives__CPopup* This,
        UINT32 index,
        __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIPopup** result);
    HRESULT (STDMETHODCALLTYPE* get_Size)(__x_ABI_C__FIVectorView_1___x_ABI_CMicrosoft__CUI__CXaml__CControls__CPrimitives__CPopup* This,
        UINT32* result);
    HRESULT (STDMETHODCALLTYPE* IndexOf)(__x_ABI_C__FIVectorView_1___x_ABI_CMicrosoft__CUI__CXaml__CControls__CPrimitives__CPopup* This,
        __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIPopup* value,
        UINT32* index,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__x_ABI_C__FIVectorView_1___x_ABI_CMicrosoft__CUI__CXaml__CControls__CPrimitives__CPopup* This,
        UINT32 startIndex,
        UINT32 itemsLength,
        __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIPopup** items,
        UINT32* result);

        END_INTERFACE
    } __x_ABI_C__FIVectorView_1___x_ABI_CMicrosoft__CUI__CXaml__CControls__CPrimitives__CPopupVtbl;

    interface __x_ABI_C__FIVectorView_1___x_ABI_CMicrosoft__CUI__CXaml__CControls__CPrimitives__CPopup
    {
        CONST_VTBL struct __x_ABI_C__FIVectorView_1___x_ABI_CMicrosoft__CUI__CXaml__CControls__CPrimitives__CPopupVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIVectorView_1___x_ABI_CMicrosoft__CUI__CXaml__CControls__CPrimitives__CPopup_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIVectorView_1___x_ABI_CMicrosoft__CUI__CXaml__CMedia__CBrush_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIVectorView_1___x_ABI_CMicrosoft__CUI__CXaml__CMedia__CBrush_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIVectorView_1___x_ABI_CMicrosoft__CUI__CXaml__CMedia__CBrush __x_ABI_C__FIVectorView_1___x_ABI_CMicrosoft__CUI__CXaml__CMedia__CBrush;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIVectorView_1___x_ABI_CMicrosoft__CUI__CXaml__CMedia__CBrush;

    typedef struct __x_ABI_C__FIVectorView_1___x_ABI_CMicrosoft__CUI__CXaml__CMedia__CBrushVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIVectorView_1___x_ABI_CMicrosoft__CUI__CXaml__CMedia__CBrush* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIVectorView_1___x_ABI_CMicrosoft__CUI__CXaml__CMedia__CBrush* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIVectorView_1___x_ABI_CMicrosoft__CUI__CXaml__CMedia__CBrush* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIVectorView_1___x_ABI_CMicrosoft__CUI__CXaml__CMedia__CBrush* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIVectorView_1___x_ABI_CMicrosoft__CUI__CXaml__CMedia__CBrush* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIVectorView_1___x_ABI_CMicrosoft__CUI__CXaml__CMedia__CBrush* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* GetAt)(__x_ABI_C__FIVectorView_1___x_ABI_CMicrosoft__CUI__CXaml__CMedia__CBrush* This,
        UINT32 index,
        __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIBrush** result);
    HRESULT (STDMETHODCALLTYPE* get_Size)(__x_ABI_C__FIVectorView_1___x_ABI_CMicrosoft__CUI__CXaml__CMedia__CBrush* This,
        UINT32* result);
    HRESULT (STDMETHODCALLTYPE* IndexOf)(__x_ABI_C__FIVectorView_1___x_ABI_CMicrosoft__CUI__CXaml__CMedia__CBrush* This,
        __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIBrush* value,
        UINT32* index,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__x_ABI_C__FIVectorView_1___x_ABI_CMicrosoft__CUI__CXaml__CMedia__CBrush* This,
        UINT32 startIndex,
        UINT32 itemsLength,
        __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIBrush** items,
        UINT32* result);

        END_INTERFACE
    } __x_ABI_C__FIVectorView_1___x_ABI_CMicrosoft__CUI__CXaml__CMedia__CBrushVtbl;

    interface __x_ABI_C__FIVectorView_1___x_ABI_CMicrosoft__CUI__CXaml__CMedia__CBrush
    {
        CONST_VTBL struct __x_ABI_C__FIVectorView_1___x_ABI_CMicrosoft__CUI__CXaml__CMedia__CBrushVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIVectorView_1___x_ABI_CMicrosoft__CUI__CXaml__CMedia__CBrush_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIVectorView_1___x_ABI_CMicrosoft__CUI__CXaml__CMedia__CGeometry_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIVectorView_1___x_ABI_CMicrosoft__CUI__CXaml__CMedia__CGeometry_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIVectorView_1___x_ABI_CMicrosoft__CUI__CXaml__CMedia__CGeometry __x_ABI_C__FIVectorView_1___x_ABI_CMicrosoft__CUI__CXaml__CMedia__CGeometry;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIVectorView_1___x_ABI_CMicrosoft__CUI__CXaml__CMedia__CGeometry;

    typedef struct __x_ABI_C__FIVectorView_1___x_ABI_CMicrosoft__CUI__CXaml__CMedia__CGeometryVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIVectorView_1___x_ABI_CMicrosoft__CUI__CXaml__CMedia__CGeometry* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIVectorView_1___x_ABI_CMicrosoft__CUI__CXaml__CMedia__CGeometry* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIVectorView_1___x_ABI_CMicrosoft__CUI__CXaml__CMedia__CGeometry* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIVectorView_1___x_ABI_CMicrosoft__CUI__CXaml__CMedia__CGeometry* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIVectorView_1___x_ABI_CMicrosoft__CUI__CXaml__CMedia__CGeometry* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIVectorView_1___x_ABI_CMicrosoft__CUI__CXaml__CMedia__CGeometry* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* GetAt)(__x_ABI_C__FIVectorView_1___x_ABI_CMicrosoft__CUI__CXaml__CMedia__CGeometry* This,
        UINT32 index,
        __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIGeometry** result);
    HRESULT (STDMETHODCALLTYPE* get_Size)(__x_ABI_C__FIVectorView_1___x_ABI_CMicrosoft__CUI__CXaml__CMedia__CGeometry* This,
        UINT32* result);
    HRESULT (STDMETHODCALLTYPE* IndexOf)(__x_ABI_C__FIVectorView_1___x_ABI_CMicrosoft__CUI__CXaml__CMedia__CGeometry* This,
        __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIGeometry* value,
        UINT32* index,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__x_ABI_C__FIVectorView_1___x_ABI_CMicrosoft__CUI__CXaml__CMedia__CGeometry* This,
        UINT32 startIndex,
        UINT32 itemsLength,
        __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIGeometry** items,
        UINT32* result);

        END_INTERFACE
    } __x_ABI_C__FIVectorView_1___x_ABI_CMicrosoft__CUI__CXaml__CMedia__CGeometryVtbl;

    interface __x_ABI_C__FIVectorView_1___x_ABI_CMicrosoft__CUI__CXaml__CMedia__CGeometry
    {
        CONST_VTBL struct __x_ABI_C__FIVectorView_1___x_ABI_CMicrosoft__CUI__CXaml__CMedia__CGeometryVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIVectorView_1___x_ABI_CMicrosoft__CUI__CXaml__CMedia__CGeometry_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIVectorView_1___x_ABI_CMicrosoft__CUI__CXaml__CMedia__CPathFigure_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIVectorView_1___x_ABI_CMicrosoft__CUI__CXaml__CMedia__CPathFigure_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIVectorView_1___x_ABI_CMicrosoft__CUI__CXaml__CMedia__CPathFigure __x_ABI_C__FIVectorView_1___x_ABI_CMicrosoft__CUI__CXaml__CMedia__CPathFigure;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIVectorView_1___x_ABI_CMicrosoft__CUI__CXaml__CMedia__CPathFigure;

    typedef struct __x_ABI_C__FIVectorView_1___x_ABI_CMicrosoft__CUI__CXaml__CMedia__CPathFigureVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIVectorView_1___x_ABI_CMicrosoft__CUI__CXaml__CMedia__CPathFigure* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIVectorView_1___x_ABI_CMicrosoft__CUI__CXaml__CMedia__CPathFigure* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIVectorView_1___x_ABI_CMicrosoft__CUI__CXaml__CMedia__CPathFigure* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIVectorView_1___x_ABI_CMicrosoft__CUI__CXaml__CMedia__CPathFigure* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIVectorView_1___x_ABI_CMicrosoft__CUI__CXaml__CMedia__CPathFigure* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIVectorView_1___x_ABI_CMicrosoft__CUI__CXaml__CMedia__CPathFigure* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* GetAt)(__x_ABI_C__FIVectorView_1___x_ABI_CMicrosoft__CUI__CXaml__CMedia__CPathFigure* This,
        UINT32 index,
        __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPathFigure** result);
    HRESULT (STDMETHODCALLTYPE* get_Size)(__x_ABI_C__FIVectorView_1___x_ABI_CMicrosoft__CUI__CXaml__CMedia__CPathFigure* This,
        UINT32* result);
    HRESULT (STDMETHODCALLTYPE* IndexOf)(__x_ABI_C__FIVectorView_1___x_ABI_CMicrosoft__CUI__CXaml__CMedia__CPathFigure* This,
        __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPathFigure* value,
        UINT32* index,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__x_ABI_C__FIVectorView_1___x_ABI_CMicrosoft__CUI__CXaml__CMedia__CPathFigure* This,
        UINT32 startIndex,
        UINT32 itemsLength,
        __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPathFigure** items,
        UINT32* result);

        END_INTERFACE
    } __x_ABI_C__FIVectorView_1___x_ABI_CMicrosoft__CUI__CXaml__CMedia__CPathFigureVtbl;

    interface __x_ABI_C__FIVectorView_1___x_ABI_CMicrosoft__CUI__CXaml__CMedia__CPathFigure
    {
        CONST_VTBL struct __x_ABI_C__FIVectorView_1___x_ABI_CMicrosoft__CUI__CXaml__CMedia__CPathFigureVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIVectorView_1___x_ABI_CMicrosoft__CUI__CXaml__CMedia__CPathFigure_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIVectorView_1___x_ABI_CMicrosoft__CUI__CXaml__CMedia__CPathSegment_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIVectorView_1___x_ABI_CMicrosoft__CUI__CXaml__CMedia__CPathSegment_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIVectorView_1___x_ABI_CMicrosoft__CUI__CXaml__CMedia__CPathSegment __x_ABI_C__FIVectorView_1___x_ABI_CMicrosoft__CUI__CXaml__CMedia__CPathSegment;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIVectorView_1___x_ABI_CMicrosoft__CUI__CXaml__CMedia__CPathSegment;

    typedef struct __x_ABI_C__FIVectorView_1___x_ABI_CMicrosoft__CUI__CXaml__CMedia__CPathSegmentVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIVectorView_1___x_ABI_CMicrosoft__CUI__CXaml__CMedia__CPathSegment* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIVectorView_1___x_ABI_CMicrosoft__CUI__CXaml__CMedia__CPathSegment* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIVectorView_1___x_ABI_CMicrosoft__CUI__CXaml__CMedia__CPathSegment* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIVectorView_1___x_ABI_CMicrosoft__CUI__CXaml__CMedia__CPathSegment* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIVectorView_1___x_ABI_CMicrosoft__CUI__CXaml__CMedia__CPathSegment* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIVectorView_1___x_ABI_CMicrosoft__CUI__CXaml__CMedia__CPathSegment* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* GetAt)(__x_ABI_C__FIVectorView_1___x_ABI_CMicrosoft__CUI__CXaml__CMedia__CPathSegment* This,
        UINT32 index,
        __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPathSegment** result);
    HRESULT (STDMETHODCALLTYPE* get_Size)(__x_ABI_C__FIVectorView_1___x_ABI_CMicrosoft__CUI__CXaml__CMedia__CPathSegment* This,
        UINT32* result);
    HRESULT (STDMETHODCALLTYPE* IndexOf)(__x_ABI_C__FIVectorView_1___x_ABI_CMicrosoft__CUI__CXaml__CMedia__CPathSegment* This,
        __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPathSegment* value,
        UINT32* index,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__x_ABI_C__FIVectorView_1___x_ABI_CMicrosoft__CUI__CXaml__CMedia__CPathSegment* This,
        UINT32 startIndex,
        UINT32 itemsLength,
        __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPathSegment** items,
        UINT32* result);

        END_INTERFACE
    } __x_ABI_C__FIVectorView_1___x_ABI_CMicrosoft__CUI__CXaml__CMedia__CPathSegmentVtbl;

    interface __x_ABI_C__FIVectorView_1___x_ABI_CMicrosoft__CUI__CXaml__CMedia__CPathSegment
    {
        CONST_VTBL struct __x_ABI_C__FIVectorView_1___x_ABI_CMicrosoft__CUI__CXaml__CMedia__CPathSegmentVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIVectorView_1___x_ABI_CMicrosoft__CUI__CXaml__CMedia__CPathSegment_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIVectorView_1___x_ABI_CMicrosoft__CUI__CXaml__CMedia__CTransform_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIVectorView_1___x_ABI_CMicrosoft__CUI__CXaml__CMedia__CTransform_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIVectorView_1___x_ABI_CMicrosoft__CUI__CXaml__CMedia__CTransform __x_ABI_C__FIVectorView_1___x_ABI_CMicrosoft__CUI__CXaml__CMedia__CTransform;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIVectorView_1___x_ABI_CMicrosoft__CUI__CXaml__CMedia__CTransform;

    typedef struct __x_ABI_C__FIVectorView_1___x_ABI_CMicrosoft__CUI__CXaml__CMedia__CTransformVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIVectorView_1___x_ABI_CMicrosoft__CUI__CXaml__CMedia__CTransform* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIVectorView_1___x_ABI_CMicrosoft__CUI__CXaml__CMedia__CTransform* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIVectorView_1___x_ABI_CMicrosoft__CUI__CXaml__CMedia__CTransform* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIVectorView_1___x_ABI_CMicrosoft__CUI__CXaml__CMedia__CTransform* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIVectorView_1___x_ABI_CMicrosoft__CUI__CXaml__CMedia__CTransform* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIVectorView_1___x_ABI_CMicrosoft__CUI__CXaml__CMedia__CTransform* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* GetAt)(__x_ABI_C__FIVectorView_1___x_ABI_CMicrosoft__CUI__CXaml__CMedia__CTransform* This,
        UINT32 index,
        __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CITransform** result);
    HRESULT (STDMETHODCALLTYPE* get_Size)(__x_ABI_C__FIVectorView_1___x_ABI_CMicrosoft__CUI__CXaml__CMedia__CTransform* This,
        UINT32* result);
    HRESULT (STDMETHODCALLTYPE* IndexOf)(__x_ABI_C__FIVectorView_1___x_ABI_CMicrosoft__CUI__CXaml__CMedia__CTransform* This,
        __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CITransform* value,
        UINT32* index,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__x_ABI_C__FIVectorView_1___x_ABI_CMicrosoft__CUI__CXaml__CMedia__CTransform* This,
        UINT32 startIndex,
        UINT32 itemsLength,
        __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CITransform** items,
        UINT32* result);

        END_INTERFACE
    } __x_ABI_C__FIVectorView_1___x_ABI_CMicrosoft__CUI__CXaml__CMedia__CTransformVtbl;

    interface __x_ABI_C__FIVectorView_1___x_ABI_CMicrosoft__CUI__CXaml__CMedia__CTransform
    {
        CONST_VTBL struct __x_ABI_C__FIVectorView_1___x_ABI_CMicrosoft__CUI__CXaml__CMedia__CTransformVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIVectorView_1___x_ABI_CMicrosoft__CUI__CXaml__CMedia__CTransform_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIVectorView_1___x_ABI_CWindows__CFoundation__CPoint_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIVectorView_1___x_ABI_CWindows__CFoundation__CPoint_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CFoundation__CPoint __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CFoundation__CPoint;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CFoundation__CPoint;

    typedef struct __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CFoundation__CPointVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CFoundation__CPoint* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CFoundation__CPoint* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CFoundation__CPoint* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CFoundation__CPoint* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CFoundation__CPoint* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CFoundation__CPoint* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* GetAt)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CFoundation__CPoint* This,
        UINT32 index,
        struct __x_ABI_CWindows_CFoundation_CPoint* result);
    HRESULT (STDMETHODCALLTYPE* get_Size)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CFoundation__CPoint* This,
        UINT32* result);
    HRESULT (STDMETHODCALLTYPE* IndexOf)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CFoundation__CPoint* This,
        struct __x_ABI_CWindows_CFoundation_CPoint value,
        UINT32* index,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CFoundation__CPoint* This,
        UINT32 startIndex,
        UINT32 itemsLength,
        struct __x_ABI_CWindows_CFoundation_CPoint* items,
        UINT32* result);

        END_INTERFACE
    } __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CFoundation__CPointVtbl;

    interface __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CFoundation__CPoint
    {
        CONST_VTBL struct __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CFoundation__CPointVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIVectorView_1___x_ABI_CWindows__CFoundation__CPoint_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIVector_1_double_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIVector_1_double_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIVector_1_double __x_ABI_C__FIVector_1_double;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIVector_1_double;

    typedef struct __x_ABI_C__FIVector_1_doubleVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIVector_1_double* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIVector_1_double* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIVector_1_double* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIVector_1_double* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIVector_1_double* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIVector_1_double* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* GetAt)(__x_ABI_C__FIVector_1_double* This,
        UINT32 index,
        DOUBLE* result);
    HRESULT (STDMETHODCALLTYPE* get_Size)(__x_ABI_C__FIVector_1_double* This,
        UINT32* result);
    HRESULT (STDMETHODCALLTYPE* GetView)(__x_ABI_C__FIVector_1_double* This,
        __x_ABI_C__FIVectorView_1_double** result);
    HRESULT (STDMETHODCALLTYPE* IndexOf)(__x_ABI_C__FIVector_1_double* This,
        DOUBLE value,
        UINT32* index,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* SetAt)(__x_ABI_C__FIVector_1_double* This,
        UINT32 index,
        DOUBLE value);
    HRESULT (STDMETHODCALLTYPE* InsertAt)(__x_ABI_C__FIVector_1_double* This,
        UINT32 index,
        DOUBLE value);
    HRESULT (STDMETHODCALLTYPE* RemoveAt)(__x_ABI_C__FIVector_1_double* This,
        UINT32 index);
    HRESULT (STDMETHODCALLTYPE* Append)(__x_ABI_C__FIVector_1_double* This,
        DOUBLE value);
    HRESULT (STDMETHODCALLTYPE* RemoveAtEnd)(__x_ABI_C__FIVector_1_double* This);
    HRESULT (STDMETHODCALLTYPE* Clear)(__x_ABI_C__FIVector_1_double* This);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__x_ABI_C__FIVector_1_double* This,
        UINT32 startIndex,
        UINT32 itemsLength,
        DOUBLE* items,
        UINT32* result);
    HRESULT (STDMETHODCALLTYPE* ReplaceAll)(__x_ABI_C__FIVector_1_double* This,
        UINT32 itemsLength,
        DOUBLE* items);

        END_INTERFACE
    } __x_ABI_C__FIVector_1_doubleVtbl;

    interface __x_ABI_C__FIVector_1_double
    {
        CONST_VTBL struct __x_ABI_C__FIVector_1_doubleVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIVector_1_double_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIVector_1___x_ABI_CMicrosoft__CUI__CXaml__CMedia__CBrush_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIVector_1___x_ABI_CMicrosoft__CUI__CXaml__CMedia__CBrush_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIVector_1___x_ABI_CMicrosoft__CUI__CXaml__CMedia__CBrush __x_ABI_C__FIVector_1___x_ABI_CMicrosoft__CUI__CXaml__CMedia__CBrush;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIVector_1___x_ABI_CMicrosoft__CUI__CXaml__CMedia__CBrush;

    typedef struct __x_ABI_C__FIVector_1___x_ABI_CMicrosoft__CUI__CXaml__CMedia__CBrushVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIVector_1___x_ABI_CMicrosoft__CUI__CXaml__CMedia__CBrush* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIVector_1___x_ABI_CMicrosoft__CUI__CXaml__CMedia__CBrush* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIVector_1___x_ABI_CMicrosoft__CUI__CXaml__CMedia__CBrush* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIVector_1___x_ABI_CMicrosoft__CUI__CXaml__CMedia__CBrush* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIVector_1___x_ABI_CMicrosoft__CUI__CXaml__CMedia__CBrush* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIVector_1___x_ABI_CMicrosoft__CUI__CXaml__CMedia__CBrush* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* GetAt)(__x_ABI_C__FIVector_1___x_ABI_CMicrosoft__CUI__CXaml__CMedia__CBrush* This,
        UINT32 index,
        __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIBrush** result);
    HRESULT (STDMETHODCALLTYPE* get_Size)(__x_ABI_C__FIVector_1___x_ABI_CMicrosoft__CUI__CXaml__CMedia__CBrush* This,
        UINT32* result);
    HRESULT (STDMETHODCALLTYPE* GetView)(__x_ABI_C__FIVector_1___x_ABI_CMicrosoft__CUI__CXaml__CMedia__CBrush* This,
        __x_ABI_C__FIVectorView_1___x_ABI_CMicrosoft__CUI__CXaml__CMedia__CBrush** result);
    HRESULT (STDMETHODCALLTYPE* IndexOf)(__x_ABI_C__FIVector_1___x_ABI_CMicrosoft__CUI__CXaml__CMedia__CBrush* This,
        __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIBrush* value,
        UINT32* index,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* SetAt)(__x_ABI_C__FIVector_1___x_ABI_CMicrosoft__CUI__CXaml__CMedia__CBrush* This,
        UINT32 index,
        __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIBrush* value);
    HRESULT (STDMETHODCALLTYPE* InsertAt)(__x_ABI_C__FIVector_1___x_ABI_CMicrosoft__CUI__CXaml__CMedia__CBrush* This,
        UINT32 index,
        __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIBrush* value);
    HRESULT (STDMETHODCALLTYPE* RemoveAt)(__x_ABI_C__FIVector_1___x_ABI_CMicrosoft__CUI__CXaml__CMedia__CBrush* This,
        UINT32 index);
    HRESULT (STDMETHODCALLTYPE* Append)(__x_ABI_C__FIVector_1___x_ABI_CMicrosoft__CUI__CXaml__CMedia__CBrush* This,
        __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIBrush* value);
    HRESULT (STDMETHODCALLTYPE* RemoveAtEnd)(__x_ABI_C__FIVector_1___x_ABI_CMicrosoft__CUI__CXaml__CMedia__CBrush* This);
    HRESULT (STDMETHODCALLTYPE* Clear)(__x_ABI_C__FIVector_1___x_ABI_CMicrosoft__CUI__CXaml__CMedia__CBrush* This);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__x_ABI_C__FIVector_1___x_ABI_CMicrosoft__CUI__CXaml__CMedia__CBrush* This,
        UINT32 startIndex,
        UINT32 itemsLength,
        __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIBrush** items,
        UINT32* result);
    HRESULT (STDMETHODCALLTYPE* ReplaceAll)(__x_ABI_C__FIVector_1___x_ABI_CMicrosoft__CUI__CXaml__CMedia__CBrush* This,
        UINT32 itemsLength,
        __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIBrush** items);

        END_INTERFACE
    } __x_ABI_C__FIVector_1___x_ABI_CMicrosoft__CUI__CXaml__CMedia__CBrushVtbl;

    interface __x_ABI_C__FIVector_1___x_ABI_CMicrosoft__CUI__CXaml__CMedia__CBrush
    {
        CONST_VTBL struct __x_ABI_C__FIVector_1___x_ABI_CMicrosoft__CUI__CXaml__CMedia__CBrushVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIVector_1___x_ABI_CMicrosoft__CUI__CXaml__CMedia__CBrush_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIVector_1___x_ABI_CMicrosoft__CUI__CXaml__CMedia__CGeometry_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIVector_1___x_ABI_CMicrosoft__CUI__CXaml__CMedia__CGeometry_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIVector_1___x_ABI_CMicrosoft__CUI__CXaml__CMedia__CGeometry __x_ABI_C__FIVector_1___x_ABI_CMicrosoft__CUI__CXaml__CMedia__CGeometry;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIVector_1___x_ABI_CMicrosoft__CUI__CXaml__CMedia__CGeometry;

    typedef struct __x_ABI_C__FIVector_1___x_ABI_CMicrosoft__CUI__CXaml__CMedia__CGeometryVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIVector_1___x_ABI_CMicrosoft__CUI__CXaml__CMedia__CGeometry* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIVector_1___x_ABI_CMicrosoft__CUI__CXaml__CMedia__CGeometry* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIVector_1___x_ABI_CMicrosoft__CUI__CXaml__CMedia__CGeometry* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIVector_1___x_ABI_CMicrosoft__CUI__CXaml__CMedia__CGeometry* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIVector_1___x_ABI_CMicrosoft__CUI__CXaml__CMedia__CGeometry* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIVector_1___x_ABI_CMicrosoft__CUI__CXaml__CMedia__CGeometry* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* GetAt)(__x_ABI_C__FIVector_1___x_ABI_CMicrosoft__CUI__CXaml__CMedia__CGeometry* This,
        UINT32 index,
        __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIGeometry** result);
    HRESULT (STDMETHODCALLTYPE* get_Size)(__x_ABI_C__FIVector_1___x_ABI_CMicrosoft__CUI__CXaml__CMedia__CGeometry* This,
        UINT32* result);
    HRESULT (STDMETHODCALLTYPE* GetView)(__x_ABI_C__FIVector_1___x_ABI_CMicrosoft__CUI__CXaml__CMedia__CGeometry* This,
        __x_ABI_C__FIVectorView_1___x_ABI_CMicrosoft__CUI__CXaml__CMedia__CGeometry** result);
    HRESULT (STDMETHODCALLTYPE* IndexOf)(__x_ABI_C__FIVector_1___x_ABI_CMicrosoft__CUI__CXaml__CMedia__CGeometry* This,
        __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIGeometry* value,
        UINT32* index,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* SetAt)(__x_ABI_C__FIVector_1___x_ABI_CMicrosoft__CUI__CXaml__CMedia__CGeometry* This,
        UINT32 index,
        __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIGeometry* value);
    HRESULT (STDMETHODCALLTYPE* InsertAt)(__x_ABI_C__FIVector_1___x_ABI_CMicrosoft__CUI__CXaml__CMedia__CGeometry* This,
        UINT32 index,
        __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIGeometry* value);
    HRESULT (STDMETHODCALLTYPE* RemoveAt)(__x_ABI_C__FIVector_1___x_ABI_CMicrosoft__CUI__CXaml__CMedia__CGeometry* This,
        UINT32 index);
    HRESULT (STDMETHODCALLTYPE* Append)(__x_ABI_C__FIVector_1___x_ABI_CMicrosoft__CUI__CXaml__CMedia__CGeometry* This,
        __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIGeometry* value);
    HRESULT (STDMETHODCALLTYPE* RemoveAtEnd)(__x_ABI_C__FIVector_1___x_ABI_CMicrosoft__CUI__CXaml__CMedia__CGeometry* This);
    HRESULT (STDMETHODCALLTYPE* Clear)(__x_ABI_C__FIVector_1___x_ABI_CMicrosoft__CUI__CXaml__CMedia__CGeometry* This);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__x_ABI_C__FIVector_1___x_ABI_CMicrosoft__CUI__CXaml__CMedia__CGeometry* This,
        UINT32 startIndex,
        UINT32 itemsLength,
        __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIGeometry** items,
        UINT32* result);
    HRESULT (STDMETHODCALLTYPE* ReplaceAll)(__x_ABI_C__FIVector_1___x_ABI_CMicrosoft__CUI__CXaml__CMedia__CGeometry* This,
        UINT32 itemsLength,
        __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIGeometry** items);

        END_INTERFACE
    } __x_ABI_C__FIVector_1___x_ABI_CMicrosoft__CUI__CXaml__CMedia__CGeometryVtbl;

    interface __x_ABI_C__FIVector_1___x_ABI_CMicrosoft__CUI__CXaml__CMedia__CGeometry
    {
        CONST_VTBL struct __x_ABI_C__FIVector_1___x_ABI_CMicrosoft__CUI__CXaml__CMedia__CGeometryVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIVector_1___x_ABI_CMicrosoft__CUI__CXaml__CMedia__CGeometry_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIVector_1___x_ABI_CMicrosoft__CUI__CXaml__CMedia__CPathFigure_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIVector_1___x_ABI_CMicrosoft__CUI__CXaml__CMedia__CPathFigure_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIVector_1___x_ABI_CMicrosoft__CUI__CXaml__CMedia__CPathFigure __x_ABI_C__FIVector_1___x_ABI_CMicrosoft__CUI__CXaml__CMedia__CPathFigure;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIVector_1___x_ABI_CMicrosoft__CUI__CXaml__CMedia__CPathFigure;

    typedef struct __x_ABI_C__FIVector_1___x_ABI_CMicrosoft__CUI__CXaml__CMedia__CPathFigureVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIVector_1___x_ABI_CMicrosoft__CUI__CXaml__CMedia__CPathFigure* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIVector_1___x_ABI_CMicrosoft__CUI__CXaml__CMedia__CPathFigure* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIVector_1___x_ABI_CMicrosoft__CUI__CXaml__CMedia__CPathFigure* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIVector_1___x_ABI_CMicrosoft__CUI__CXaml__CMedia__CPathFigure* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIVector_1___x_ABI_CMicrosoft__CUI__CXaml__CMedia__CPathFigure* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIVector_1___x_ABI_CMicrosoft__CUI__CXaml__CMedia__CPathFigure* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* GetAt)(__x_ABI_C__FIVector_1___x_ABI_CMicrosoft__CUI__CXaml__CMedia__CPathFigure* This,
        UINT32 index,
        __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPathFigure** result);
    HRESULT (STDMETHODCALLTYPE* get_Size)(__x_ABI_C__FIVector_1___x_ABI_CMicrosoft__CUI__CXaml__CMedia__CPathFigure* This,
        UINT32* result);
    HRESULT (STDMETHODCALLTYPE* GetView)(__x_ABI_C__FIVector_1___x_ABI_CMicrosoft__CUI__CXaml__CMedia__CPathFigure* This,
        __x_ABI_C__FIVectorView_1___x_ABI_CMicrosoft__CUI__CXaml__CMedia__CPathFigure** result);
    HRESULT (STDMETHODCALLTYPE* IndexOf)(__x_ABI_C__FIVector_1___x_ABI_CMicrosoft__CUI__CXaml__CMedia__CPathFigure* This,
        __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPathFigure* value,
        UINT32* index,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* SetAt)(__x_ABI_C__FIVector_1___x_ABI_CMicrosoft__CUI__CXaml__CMedia__CPathFigure* This,
        UINT32 index,
        __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPathFigure* value);
    HRESULT (STDMETHODCALLTYPE* InsertAt)(__x_ABI_C__FIVector_1___x_ABI_CMicrosoft__CUI__CXaml__CMedia__CPathFigure* This,
        UINT32 index,
        __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPathFigure* value);
    HRESULT (STDMETHODCALLTYPE* RemoveAt)(__x_ABI_C__FIVector_1___x_ABI_CMicrosoft__CUI__CXaml__CMedia__CPathFigure* This,
        UINT32 index);
    HRESULT (STDMETHODCALLTYPE* Append)(__x_ABI_C__FIVector_1___x_ABI_CMicrosoft__CUI__CXaml__CMedia__CPathFigure* This,
        __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPathFigure* value);
    HRESULT (STDMETHODCALLTYPE* RemoveAtEnd)(__x_ABI_C__FIVector_1___x_ABI_CMicrosoft__CUI__CXaml__CMedia__CPathFigure* This);
    HRESULT (STDMETHODCALLTYPE* Clear)(__x_ABI_C__FIVector_1___x_ABI_CMicrosoft__CUI__CXaml__CMedia__CPathFigure* This);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__x_ABI_C__FIVector_1___x_ABI_CMicrosoft__CUI__CXaml__CMedia__CPathFigure* This,
        UINT32 startIndex,
        UINT32 itemsLength,
        __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPathFigure** items,
        UINT32* result);
    HRESULT (STDMETHODCALLTYPE* ReplaceAll)(__x_ABI_C__FIVector_1___x_ABI_CMicrosoft__CUI__CXaml__CMedia__CPathFigure* This,
        UINT32 itemsLength,
        __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPathFigure** items);

        END_INTERFACE
    } __x_ABI_C__FIVector_1___x_ABI_CMicrosoft__CUI__CXaml__CMedia__CPathFigureVtbl;

    interface __x_ABI_C__FIVector_1___x_ABI_CMicrosoft__CUI__CXaml__CMedia__CPathFigure
    {
        CONST_VTBL struct __x_ABI_C__FIVector_1___x_ABI_CMicrosoft__CUI__CXaml__CMedia__CPathFigureVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIVector_1___x_ABI_CMicrosoft__CUI__CXaml__CMedia__CPathFigure_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIVector_1___x_ABI_CMicrosoft__CUI__CXaml__CMedia__CPathSegment_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIVector_1___x_ABI_CMicrosoft__CUI__CXaml__CMedia__CPathSegment_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIVector_1___x_ABI_CMicrosoft__CUI__CXaml__CMedia__CPathSegment __x_ABI_C__FIVector_1___x_ABI_CMicrosoft__CUI__CXaml__CMedia__CPathSegment;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIVector_1___x_ABI_CMicrosoft__CUI__CXaml__CMedia__CPathSegment;

    typedef struct __x_ABI_C__FIVector_1___x_ABI_CMicrosoft__CUI__CXaml__CMedia__CPathSegmentVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIVector_1___x_ABI_CMicrosoft__CUI__CXaml__CMedia__CPathSegment* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIVector_1___x_ABI_CMicrosoft__CUI__CXaml__CMedia__CPathSegment* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIVector_1___x_ABI_CMicrosoft__CUI__CXaml__CMedia__CPathSegment* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIVector_1___x_ABI_CMicrosoft__CUI__CXaml__CMedia__CPathSegment* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIVector_1___x_ABI_CMicrosoft__CUI__CXaml__CMedia__CPathSegment* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIVector_1___x_ABI_CMicrosoft__CUI__CXaml__CMedia__CPathSegment* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* GetAt)(__x_ABI_C__FIVector_1___x_ABI_CMicrosoft__CUI__CXaml__CMedia__CPathSegment* This,
        UINT32 index,
        __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPathSegment** result);
    HRESULT (STDMETHODCALLTYPE* get_Size)(__x_ABI_C__FIVector_1___x_ABI_CMicrosoft__CUI__CXaml__CMedia__CPathSegment* This,
        UINT32* result);
    HRESULT (STDMETHODCALLTYPE* GetView)(__x_ABI_C__FIVector_1___x_ABI_CMicrosoft__CUI__CXaml__CMedia__CPathSegment* This,
        __x_ABI_C__FIVectorView_1___x_ABI_CMicrosoft__CUI__CXaml__CMedia__CPathSegment** result);
    HRESULT (STDMETHODCALLTYPE* IndexOf)(__x_ABI_C__FIVector_1___x_ABI_CMicrosoft__CUI__CXaml__CMedia__CPathSegment* This,
        __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPathSegment* value,
        UINT32* index,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* SetAt)(__x_ABI_C__FIVector_1___x_ABI_CMicrosoft__CUI__CXaml__CMedia__CPathSegment* This,
        UINT32 index,
        __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPathSegment* value);
    HRESULT (STDMETHODCALLTYPE* InsertAt)(__x_ABI_C__FIVector_1___x_ABI_CMicrosoft__CUI__CXaml__CMedia__CPathSegment* This,
        UINT32 index,
        __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPathSegment* value);
    HRESULT (STDMETHODCALLTYPE* RemoveAt)(__x_ABI_C__FIVector_1___x_ABI_CMicrosoft__CUI__CXaml__CMedia__CPathSegment* This,
        UINT32 index);
    HRESULT (STDMETHODCALLTYPE* Append)(__x_ABI_C__FIVector_1___x_ABI_CMicrosoft__CUI__CXaml__CMedia__CPathSegment* This,
        __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPathSegment* value);
    HRESULT (STDMETHODCALLTYPE* RemoveAtEnd)(__x_ABI_C__FIVector_1___x_ABI_CMicrosoft__CUI__CXaml__CMedia__CPathSegment* This);
    HRESULT (STDMETHODCALLTYPE* Clear)(__x_ABI_C__FIVector_1___x_ABI_CMicrosoft__CUI__CXaml__CMedia__CPathSegment* This);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__x_ABI_C__FIVector_1___x_ABI_CMicrosoft__CUI__CXaml__CMedia__CPathSegment* This,
        UINT32 startIndex,
        UINT32 itemsLength,
        __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPathSegment** items,
        UINT32* result);
    HRESULT (STDMETHODCALLTYPE* ReplaceAll)(__x_ABI_C__FIVector_1___x_ABI_CMicrosoft__CUI__CXaml__CMedia__CPathSegment* This,
        UINT32 itemsLength,
        __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPathSegment** items);

        END_INTERFACE
    } __x_ABI_C__FIVector_1___x_ABI_CMicrosoft__CUI__CXaml__CMedia__CPathSegmentVtbl;

    interface __x_ABI_C__FIVector_1___x_ABI_CMicrosoft__CUI__CXaml__CMedia__CPathSegment
    {
        CONST_VTBL struct __x_ABI_C__FIVector_1___x_ABI_CMicrosoft__CUI__CXaml__CMedia__CPathSegmentVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIVector_1___x_ABI_CMicrosoft__CUI__CXaml__CMedia__CPathSegment_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIVector_1___x_ABI_CMicrosoft__CUI__CXaml__CMedia__CTransform_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIVector_1___x_ABI_CMicrosoft__CUI__CXaml__CMedia__CTransform_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIVector_1___x_ABI_CMicrosoft__CUI__CXaml__CMedia__CTransform __x_ABI_C__FIVector_1___x_ABI_CMicrosoft__CUI__CXaml__CMedia__CTransform;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIVector_1___x_ABI_CMicrosoft__CUI__CXaml__CMedia__CTransform;

    typedef struct __x_ABI_C__FIVector_1___x_ABI_CMicrosoft__CUI__CXaml__CMedia__CTransformVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIVector_1___x_ABI_CMicrosoft__CUI__CXaml__CMedia__CTransform* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIVector_1___x_ABI_CMicrosoft__CUI__CXaml__CMedia__CTransform* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIVector_1___x_ABI_CMicrosoft__CUI__CXaml__CMedia__CTransform* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIVector_1___x_ABI_CMicrosoft__CUI__CXaml__CMedia__CTransform* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIVector_1___x_ABI_CMicrosoft__CUI__CXaml__CMedia__CTransform* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIVector_1___x_ABI_CMicrosoft__CUI__CXaml__CMedia__CTransform* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* GetAt)(__x_ABI_C__FIVector_1___x_ABI_CMicrosoft__CUI__CXaml__CMedia__CTransform* This,
        UINT32 index,
        __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CITransform** result);
    HRESULT (STDMETHODCALLTYPE* get_Size)(__x_ABI_C__FIVector_1___x_ABI_CMicrosoft__CUI__CXaml__CMedia__CTransform* This,
        UINT32* result);
    HRESULT (STDMETHODCALLTYPE* GetView)(__x_ABI_C__FIVector_1___x_ABI_CMicrosoft__CUI__CXaml__CMedia__CTransform* This,
        __x_ABI_C__FIVectorView_1___x_ABI_CMicrosoft__CUI__CXaml__CMedia__CTransform** result);
    HRESULT (STDMETHODCALLTYPE* IndexOf)(__x_ABI_C__FIVector_1___x_ABI_CMicrosoft__CUI__CXaml__CMedia__CTransform* This,
        __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CITransform* value,
        UINT32* index,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* SetAt)(__x_ABI_C__FIVector_1___x_ABI_CMicrosoft__CUI__CXaml__CMedia__CTransform* This,
        UINT32 index,
        __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CITransform* value);
    HRESULT (STDMETHODCALLTYPE* InsertAt)(__x_ABI_C__FIVector_1___x_ABI_CMicrosoft__CUI__CXaml__CMedia__CTransform* This,
        UINT32 index,
        __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CITransform* value);
    HRESULT (STDMETHODCALLTYPE* RemoveAt)(__x_ABI_C__FIVector_1___x_ABI_CMicrosoft__CUI__CXaml__CMedia__CTransform* This,
        UINT32 index);
    HRESULT (STDMETHODCALLTYPE* Append)(__x_ABI_C__FIVector_1___x_ABI_CMicrosoft__CUI__CXaml__CMedia__CTransform* This,
        __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CITransform* value);
    HRESULT (STDMETHODCALLTYPE* RemoveAtEnd)(__x_ABI_C__FIVector_1___x_ABI_CMicrosoft__CUI__CXaml__CMedia__CTransform* This);
    HRESULT (STDMETHODCALLTYPE* Clear)(__x_ABI_C__FIVector_1___x_ABI_CMicrosoft__CUI__CXaml__CMedia__CTransform* This);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__x_ABI_C__FIVector_1___x_ABI_CMicrosoft__CUI__CXaml__CMedia__CTransform* This,
        UINT32 startIndex,
        UINT32 itemsLength,
        __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CITransform** items,
        UINT32* result);
    HRESULT (STDMETHODCALLTYPE* ReplaceAll)(__x_ABI_C__FIVector_1___x_ABI_CMicrosoft__CUI__CXaml__CMedia__CTransform* This,
        UINT32 itemsLength,
        __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CITransform** items);

        END_INTERFACE
    } __x_ABI_C__FIVector_1___x_ABI_CMicrosoft__CUI__CXaml__CMedia__CTransformVtbl;

    interface __x_ABI_C__FIVector_1___x_ABI_CMicrosoft__CUI__CXaml__CMedia__CTransform
    {
        CONST_VTBL struct __x_ABI_C__FIVector_1___x_ABI_CMicrosoft__CUI__CXaml__CMedia__CTransformVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIVector_1___x_ABI_CMicrosoft__CUI__CXaml__CMedia__CTransform_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIVector_1___x_ABI_CWindows__CFoundation__CPoint_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIVector_1___x_ABI_CWindows__CFoundation__CPoint_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIVector_1___x_ABI_CWindows__CFoundation__CPoint __x_ABI_C__FIVector_1___x_ABI_CWindows__CFoundation__CPoint;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIVector_1___x_ABI_CWindows__CFoundation__CPoint;

    typedef struct __x_ABI_C__FIVector_1___x_ABI_CWindows__CFoundation__CPointVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CFoundation__CPoint* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CFoundation__CPoint* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CFoundation__CPoint* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CFoundation__CPoint* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CFoundation__CPoint* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CFoundation__CPoint* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* GetAt)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CFoundation__CPoint* This,
        UINT32 index,
        struct __x_ABI_CWindows_CFoundation_CPoint* result);
    HRESULT (STDMETHODCALLTYPE* get_Size)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CFoundation__CPoint* This,
        UINT32* result);
    HRESULT (STDMETHODCALLTYPE* GetView)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CFoundation__CPoint* This,
        __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CFoundation__CPoint** result);
    HRESULT (STDMETHODCALLTYPE* IndexOf)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CFoundation__CPoint* This,
        struct __x_ABI_CWindows_CFoundation_CPoint value,
        UINT32* index,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* SetAt)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CFoundation__CPoint* This,
        UINT32 index,
        struct __x_ABI_CWindows_CFoundation_CPoint value);
    HRESULT (STDMETHODCALLTYPE* InsertAt)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CFoundation__CPoint* This,
        UINT32 index,
        struct __x_ABI_CWindows_CFoundation_CPoint value);
    HRESULT (STDMETHODCALLTYPE* RemoveAt)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CFoundation__CPoint* This,
        UINT32 index);
    HRESULT (STDMETHODCALLTYPE* Append)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CFoundation__CPoint* This,
        struct __x_ABI_CWindows_CFoundation_CPoint value);
    HRESULT (STDMETHODCALLTYPE* RemoveAtEnd)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CFoundation__CPoint* This);
    HRESULT (STDMETHODCALLTYPE* Clear)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CFoundation__CPoint* This);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CFoundation__CPoint* This,
        UINT32 startIndex,
        UINT32 itemsLength,
        struct __x_ABI_CWindows_CFoundation_CPoint* items,
        UINT32* result);
    HRESULT (STDMETHODCALLTYPE* ReplaceAll)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CFoundation__CPoint* This,
        UINT32 itemsLength,
        struct __x_ABI_CWindows_CFoundation_CPoint* items);

        END_INTERFACE
    } __x_ABI_C__FIVector_1___x_ABI_CWindows__CFoundation__CPointVtbl;

    interface __x_ABI_C__FIVector_1___x_ABI_CWindows__CFoundation__CPoint
    {
        CONST_VTBL struct __x_ABI_C__FIVector_1___x_ABI_CWindows__CFoundation__CPointVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIVector_1___x_ABI_CWindows__CFoundation__CPoint_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIEventHandler_1_IInspectable_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIEventHandler_1_IInspectable_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIEventHandler_1_IInspectable __x_ABI_C__FIEventHandler_1_IInspectable;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIEventHandler_1_IInspectable;

    typedef struct __x_ABI_C__FIEventHandler_1_IInspectableVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIEventHandler_1_IInspectable* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIEventHandler_1_IInspectable* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIEventHandler_1_IInspectable* This);
        HRESULT (STDMETHODCALLTYPE* Invoke)(__x_ABI_C__FIEventHandler_1_IInspectable* This,
        IInspectable* sender,
        IInspectable* args);

        END_INTERFACE
    } __x_ABI_C__FIEventHandler_1_IInspectableVtbl;

    interface __x_ABI_C__FIEventHandler_1_IInspectable
    {
        CONST_VTBL struct __x_ABI_C__FIEventHandler_1_IInspectableVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIEventHandler_1_IInspectable_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIEventHandler_1___x_ABI_CMicrosoft__CUI__CXaml__CMedia__CRenderedEventArgs_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIEventHandler_1___x_ABI_CMicrosoft__CUI__CXaml__CMedia__CRenderedEventArgs_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIEventHandler_1___x_ABI_CMicrosoft__CUI__CXaml__CMedia__CRenderedEventArgs __x_ABI_C__FIEventHandler_1___x_ABI_CMicrosoft__CUI__CXaml__CMedia__CRenderedEventArgs;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIEventHandler_1___x_ABI_CMicrosoft__CUI__CXaml__CMedia__CRenderedEventArgs;

    typedef struct __x_ABI_C__FIEventHandler_1___x_ABI_CMicrosoft__CUI__CXaml__CMedia__CRenderedEventArgsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIEventHandler_1___x_ABI_CMicrosoft__CUI__CXaml__CMedia__CRenderedEventArgs* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIEventHandler_1___x_ABI_CMicrosoft__CUI__CXaml__CMedia__CRenderedEventArgs* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIEventHandler_1___x_ABI_CMicrosoft__CUI__CXaml__CMedia__CRenderedEventArgs* This);
        HRESULT (STDMETHODCALLTYPE* Invoke)(__x_ABI_C__FIEventHandler_1___x_ABI_CMicrosoft__CUI__CXaml__CMedia__CRenderedEventArgs* This,
        IInspectable* sender,
        __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIRenderedEventArgs* args);

        END_INTERFACE
    } __x_ABI_C__FIEventHandler_1___x_ABI_CMicrosoft__CUI__CXaml__CMedia__CRenderedEventArgsVtbl;

    interface __x_ABI_C__FIEventHandler_1___x_ABI_CMicrosoft__CUI__CXaml__CMedia__CRenderedEventArgs
    {
        CONST_VTBL struct __x_ABI_C__FIEventHandler_1___x_ABI_CMicrosoft__CUI__CXaml__CMedia__CRenderedEventArgsVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIEventHandler_1___x_ABI_CMicrosoft__CUI__CXaml__CMedia__CRenderedEventArgs_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIReference_1_double_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIReference_1_double_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIReference_1_double __x_ABI_C__FIReference_1_double;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIReference_1_double;

    typedef struct __x_ABI_C__FIReference_1_doubleVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIReference_1_double* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIReference_1_double* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIReference_1_double* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIReference_1_double* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIReference_1_double* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIReference_1_double* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Value)(__x_ABI_C__FIReference_1_double* This,
        DOUBLE* result);

        END_INTERFACE
    } __x_ABI_C__FIReference_1_doubleVtbl;

    interface __x_ABI_C__FIReference_1_double
    {
        CONST_VTBL struct __x_ABI_C__FIReference_1_doubleVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIReference_1_double_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CUI__CXaml__CMedia__CLoadedImageSurface___x_ABI_CMicrosoft__CUI__CXaml__CMedia__CLoadedImageSourceLoadCompletedEventArgs_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CUI__CXaml__CMedia__CLoadedImageSurface___x_ABI_CMicrosoft__CUI__CXaml__CMedia__CLoadedImageSourceLoadCompletedEventArgs_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CUI__CXaml__CMedia__CLoadedImageSurface___x_ABI_CMicrosoft__CUI__CXaml__CMedia__CLoadedImageSourceLoadCompletedEventArgs __x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CUI__CXaml__CMedia__CLoadedImageSurface___x_ABI_CMicrosoft__CUI__CXaml__CMedia__CLoadedImageSourceLoadCompletedEventArgs;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CUI__CXaml__CMedia__CLoadedImageSurface___x_ABI_CMicrosoft__CUI__CXaml__CMedia__CLoadedImageSourceLoadCompletedEventArgs;

    typedef struct __x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CUI__CXaml__CMedia__CLoadedImageSurface___x_ABI_CMicrosoft__CUI__CXaml__CMedia__CLoadedImageSourceLoadCompletedEventArgsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CUI__CXaml__CMedia__CLoadedImageSurface___x_ABI_CMicrosoft__CUI__CXaml__CMedia__CLoadedImageSourceLoadCompletedEventArgs* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CUI__CXaml__CMedia__CLoadedImageSurface___x_ABI_CMicrosoft__CUI__CXaml__CMedia__CLoadedImageSourceLoadCompletedEventArgs* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CUI__CXaml__CMedia__CLoadedImageSurface___x_ABI_CMicrosoft__CUI__CXaml__CMedia__CLoadedImageSourceLoadCompletedEventArgs* This);
        HRESULT (STDMETHODCALLTYPE* Invoke)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CUI__CXaml__CMedia__CLoadedImageSurface___x_ABI_CMicrosoft__CUI__CXaml__CMedia__CLoadedImageSourceLoadCompletedEventArgs* This,
        __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CILoadedImageSurface* sender,
        __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CILoadedImageSourceLoadCompletedEventArgs* args);

        END_INTERFACE
    } __x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CUI__CXaml__CMedia__CLoadedImageSurface___x_ABI_CMicrosoft__CUI__CXaml__CMedia__CLoadedImageSourceLoadCompletedEventArgsVtbl;

    interface __x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CUI__CXaml__CMedia__CLoadedImageSurface___x_ABI_CMicrosoft__CUI__CXaml__CMedia__CLoadedImageSourceLoadCompletedEventArgs
    {
        CONST_VTBL struct __x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CUI__CXaml__CMedia__CLoadedImageSurface___x_ABI_CMicrosoft__CUI__CXaml__CMedia__CLoadedImageSourceLoadCompletedEventArgsVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CUI__CXaml__CMedia__CLoadedImageSurface___x_ABI_CMicrosoft__CUI__CXaml__CMedia__CLoadedImageSourceLoadCompletedEventArgs_INTERFACE_DEFINED__
    
#ifndef ____x_ABI_CMicrosoft_CUI_CComposition_CIAnimationPropertyInfo_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CComposition_CIAnimationPropertyInfo_FWD_DEFINED__
    typedef interface __x_ABI_CMicrosoft_CUI_CComposition_CIAnimationPropertyInfo __x_ABI_CMicrosoft_CUI_CComposition_CIAnimationPropertyInfo;

#endif // ____x_ABI_CMicrosoft_CUI_CComposition_CIAnimationPropertyInfo_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CComposition_CICompositionBrush_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CComposition_CICompositionBrush_FWD_DEFINED__
    typedef interface __x_ABI_CMicrosoft_CUI_CComposition_CICompositionBrush __x_ABI_CMicrosoft_CUI_CComposition_CICompositionBrush;

#endif // ____x_ABI_CMicrosoft_CUI_CComposition_CICompositionBrush_FWD_DEFINED__

typedef enum __x_ABI_CMicrosoft_CUI_CComposition_CCompositionColorSpace __x_ABI_CMicrosoft_CUI_CComposition_CCompositionColorSpace;

#ifndef ____x_ABI_CMicrosoft_CUI_CComposition_CICompositionLight_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CComposition_CICompositionLight_FWD_DEFINED__
    typedef interface __x_ABI_CMicrosoft_CUI_CComposition_CICompositionLight __x_ABI_CMicrosoft_CUI_CComposition_CICompositionLight;

#endif // ____x_ABI_CMicrosoft_CUI_CComposition_CICompositionLight_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CComposition_CICompositor_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CComposition_CICompositor_FWD_DEFINED__
    typedef interface __x_ABI_CMicrosoft_CUI_CComposition_CICompositor __x_ABI_CMicrosoft_CUI_CComposition_CICompositor;

#endif // ____x_ABI_CMicrosoft_CUI_CComposition_CICompositor_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CComposition_CIAnimationObject_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CComposition_CIAnimationObject_FWD_DEFINED__
    typedef interface __x_ABI_CMicrosoft_CUI_CComposition_CIAnimationObject __x_ABI_CMicrosoft_CUI_CComposition_CIAnimationObject;

#endif // ____x_ABI_CMicrosoft_CUI_CComposition_CIAnimationObject_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CComposition_CICompositionSupportsSystemBackdrop_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CComposition_CICompositionSupportsSystemBackdrop_FWD_DEFINED__
    typedef interface __x_ABI_CMicrosoft_CUI_CComposition_CICompositionSupportsSystemBackdrop __x_ABI_CMicrosoft_CUI_CComposition_CICompositionSupportsSystemBackdrop;

#endif // ____x_ABI_CMicrosoft_CUI_CComposition_CICompositionSupportsSystemBackdrop_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CComposition_CICompositionSurface_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CComposition_CICompositionSurface_FWD_DEFINED__
    typedef interface __x_ABI_CMicrosoft_CUI_CComposition_CICompositionSurface __x_ABI_CMicrosoft_CUI_CComposition_CICompositionSurface;

#endif // ____x_ABI_CMicrosoft_CUI_CComposition_CICompositionSurface_FWD_DEFINED__

typedef enum __x_ABI_CMicrosoft_CUI_CComposition_CSystemBackdrops_CMicaKind __x_ABI_CMicrosoft_CUI_CComposition_CSystemBackdrops_CMicaKind;

#ifndef ____x_ABI_CMicrosoft_CUI_CComposition_CSystemBackdrops_CISystemBackdropConfiguration_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CComposition_CSystemBackdrops_CISystemBackdropConfiguration_FWD_DEFINED__
    typedef interface __x_ABI_CMicrosoft_CUI_CComposition_CSystemBackdrops_CISystemBackdropConfiguration __x_ABI_CMicrosoft_CUI_CComposition_CSystemBackdrops_CISystemBackdropConfiguration;

#endif // ____x_ABI_CMicrosoft_CUI_CComposition_CSystemBackdrops_CISystemBackdropConfiguration_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CIDependencyObject_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CIDependencyObject_FWD_DEFINED__
    typedef interface __x_ABI_CMicrosoft_CUI_CXaml_CIDependencyObject __x_ABI_CMicrosoft_CUI_CXaml_CIDependencyObject;

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CIDependencyObject_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CIDependencyProperty_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CIDependencyProperty_FWD_DEFINED__
    typedef interface __x_ABI_CMicrosoft_CUI_CXaml_CIDependencyProperty __x_ABI_CMicrosoft_CUI_CXaml_CIDependencyProperty;

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CIDependencyProperty_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CIExceptionRoutedEventHandler_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CIExceptionRoutedEventHandler_FWD_DEFINED__
typedef interface __x_ABI_CMicrosoft_CUI_CXaml_CIExceptionRoutedEventHandler __x_ABI_CMicrosoft_CUI_CXaml_CIExceptionRoutedEventHandler;

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CIExceptionRoutedEventHandler_FWD_DEFINED__

    typedef struct __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CMedia3D_CMatrix3D __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CMedia3D_CMatrix3D;

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CIRoutedEventHandler_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CIRoutedEventHandler_FWD_DEFINED__
typedef interface __x_ABI_CMicrosoft_CUI_CXaml_CIRoutedEventHandler __x_ABI_CMicrosoft_CUI_CXaml_CIRoutedEventHandler;

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CIRoutedEventHandler_FWD_DEFINED__

    #if !defined(____x_ABI_C__FIVectorView_1___x_ABI_CMicrosoft__CUI__CXaml__CUIElement_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIVectorView_1___x_ABI_CMicrosoft__CUI__CXaml__CUIElement_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIVectorView_1___x_ABI_CMicrosoft__CUI__CXaml__CUIElement __x_ABI_C__FIVectorView_1___x_ABI_CMicrosoft__CUI__CXaml__CUIElement;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIVectorView_1___x_ABI_CMicrosoft__CUI__CXaml__CUIElement;

    typedef struct __x_ABI_C__FIVectorView_1___x_ABI_CMicrosoft__CUI__CXaml__CUIElementVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIVectorView_1___x_ABI_CMicrosoft__CUI__CXaml__CUIElement* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIVectorView_1___x_ABI_CMicrosoft__CUI__CXaml__CUIElement* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIVectorView_1___x_ABI_CMicrosoft__CUI__CXaml__CUIElement* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIVectorView_1___x_ABI_CMicrosoft__CUI__CXaml__CUIElement* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIVectorView_1___x_ABI_CMicrosoft__CUI__CXaml__CUIElement* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIVectorView_1___x_ABI_CMicrosoft__CUI__CXaml__CUIElement* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* GetAt)(__x_ABI_C__FIVectorView_1___x_ABI_CMicrosoft__CUI__CXaml__CUIElement* This,
        UINT32 index,
        __x_ABI_CMicrosoft_CUI_CXaml_CIUIElement** result);
    HRESULT (STDMETHODCALLTYPE* get_Size)(__x_ABI_C__FIVectorView_1___x_ABI_CMicrosoft__CUI__CXaml__CUIElement* This,
        UINT32* result);
    HRESULT (STDMETHODCALLTYPE* IndexOf)(__x_ABI_C__FIVectorView_1___x_ABI_CMicrosoft__CUI__CXaml__CUIElement* This,
        __x_ABI_CMicrosoft_CUI_CXaml_CIUIElement* value,
        UINT32* index,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__x_ABI_C__FIVectorView_1___x_ABI_CMicrosoft__CUI__CXaml__CUIElement* This,
        UINT32 startIndex,
        UINT32 itemsLength,
        __x_ABI_CMicrosoft_CUI_CXaml_CIUIElement** items,
        UINT32* result);

        END_INTERFACE
    } __x_ABI_C__FIVectorView_1___x_ABI_CMicrosoft__CUI__CXaml__CUIElementVtbl;

    interface __x_ABI_C__FIVectorView_1___x_ABI_CMicrosoft__CUI__CXaml__CUIElement
    {
        CONST_VTBL struct __x_ABI_C__FIVectorView_1___x_ABI_CMicrosoft__CUI__CXaml__CUIElementVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIVectorView_1___x_ABI_CMicrosoft__CUI__CXaml__CUIElement_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIVector_1___x_ABI_CMicrosoft__CUI__CXaml__CUIElement_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIVector_1___x_ABI_CMicrosoft__CUI__CXaml__CUIElement_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIVector_1___x_ABI_CMicrosoft__CUI__CXaml__CUIElement __x_ABI_C__FIVector_1___x_ABI_CMicrosoft__CUI__CXaml__CUIElement;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIVector_1___x_ABI_CMicrosoft__CUI__CXaml__CUIElement;

    typedef struct __x_ABI_C__FIVector_1___x_ABI_CMicrosoft__CUI__CXaml__CUIElementVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIVector_1___x_ABI_CMicrosoft__CUI__CXaml__CUIElement* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIVector_1___x_ABI_CMicrosoft__CUI__CXaml__CUIElement* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIVector_1___x_ABI_CMicrosoft__CUI__CXaml__CUIElement* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIVector_1___x_ABI_CMicrosoft__CUI__CXaml__CUIElement* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIVector_1___x_ABI_CMicrosoft__CUI__CXaml__CUIElement* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIVector_1___x_ABI_CMicrosoft__CUI__CXaml__CUIElement* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* GetAt)(__x_ABI_C__FIVector_1___x_ABI_CMicrosoft__CUI__CXaml__CUIElement* This,
        UINT32 index,
        __x_ABI_CMicrosoft_CUI_CXaml_CIUIElement** result);
    HRESULT (STDMETHODCALLTYPE* get_Size)(__x_ABI_C__FIVector_1___x_ABI_CMicrosoft__CUI__CXaml__CUIElement* This,
        UINT32* result);
    HRESULT (STDMETHODCALLTYPE* GetView)(__x_ABI_C__FIVector_1___x_ABI_CMicrosoft__CUI__CXaml__CUIElement* This,
        __x_ABI_C__FIVectorView_1___x_ABI_CMicrosoft__CUI__CXaml__CUIElement** result);
    HRESULT (STDMETHODCALLTYPE* IndexOf)(__x_ABI_C__FIVector_1___x_ABI_CMicrosoft__CUI__CXaml__CUIElement* This,
        __x_ABI_CMicrosoft_CUI_CXaml_CIUIElement* value,
        UINT32* index,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* SetAt)(__x_ABI_C__FIVector_1___x_ABI_CMicrosoft__CUI__CXaml__CUIElement* This,
        UINT32 index,
        __x_ABI_CMicrosoft_CUI_CXaml_CIUIElement* value);
    HRESULT (STDMETHODCALLTYPE* InsertAt)(__x_ABI_C__FIVector_1___x_ABI_CMicrosoft__CUI__CXaml__CUIElement* This,
        UINT32 index,
        __x_ABI_CMicrosoft_CUI_CXaml_CIUIElement* value);
    HRESULT (STDMETHODCALLTYPE* RemoveAt)(__x_ABI_C__FIVector_1___x_ABI_CMicrosoft__CUI__CXaml__CUIElement* This,
        UINT32 index);
    HRESULT (STDMETHODCALLTYPE* Append)(__x_ABI_C__FIVector_1___x_ABI_CMicrosoft__CUI__CXaml__CUIElement* This,
        __x_ABI_CMicrosoft_CUI_CXaml_CIUIElement* value);
    HRESULT (STDMETHODCALLTYPE* RemoveAtEnd)(__x_ABI_C__FIVector_1___x_ABI_CMicrosoft__CUI__CXaml__CUIElement* This);
    HRESULT (STDMETHODCALLTYPE* Clear)(__x_ABI_C__FIVector_1___x_ABI_CMicrosoft__CUI__CXaml__CUIElement* This);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__x_ABI_C__FIVector_1___x_ABI_CMicrosoft__CUI__CXaml__CUIElement* This,
        UINT32 startIndex,
        UINT32 itemsLength,
        __x_ABI_CMicrosoft_CUI_CXaml_CIUIElement** items,
        UINT32* result);
    HRESULT (STDMETHODCALLTYPE* ReplaceAll)(__x_ABI_C__FIVector_1___x_ABI_CMicrosoft__CUI__CXaml__CUIElement* This,
        UINT32 itemsLength,
        __x_ABI_CMicrosoft_CUI_CXaml_CIUIElement** items);

        END_INTERFACE
    } __x_ABI_C__FIVector_1___x_ABI_CMicrosoft__CUI__CXaml__CUIElementVtbl;

    interface __x_ABI_C__FIVector_1___x_ABI_CMicrosoft__CUI__CXaml__CUIElement
    {
        CONST_VTBL struct __x_ABI_C__FIVector_1___x_ABI_CMicrosoft__CUI__CXaml__CUIElementVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIVector_1___x_ABI_CMicrosoft__CUI__CXaml__CUIElement_INTERFACE_DEFINED__
    
#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CIWindow_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CIWindow_FWD_DEFINED__
    typedef interface __x_ABI_CMicrosoft_CUI_CXaml_CIWindow __x_ABI_CMicrosoft_CUI_CXaml_CIWindow;

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CIWindow_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CIXamlRoot_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CIXamlRoot_FWD_DEFINED__
    typedef interface __x_ABI_CMicrosoft_CUI_CXaml_CIXamlRoot __x_ABI_CMicrosoft_CUI_CXaml_CIXamlRoot;

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CIXamlRoot_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CFoundation_CIDeferral_FWD_DEFINED__
#define ____x_ABI_CWindows_CFoundation_CIDeferral_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CFoundation_CIDeferral __x_ABI_CWindows_CFoundation_CIDeferral;

#endif // ____x_ABI_CWindows_CFoundation_CIDeferral_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CFoundation_CIClosable_FWD_DEFINED__
#define ____x_ABI_CWindows_CFoundation_CIClosable_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CFoundation_CIClosable __x_ABI_CWindows_CFoundation_CIClosable;

#endif // ____x_ABI_CWindows_CFoundation_CIClosable_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CFoundation_CIPropertyValue_FWD_DEFINED__
#define ____x_ABI_CWindows_CFoundation_CIPropertyValue_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CFoundation_CIPropertyValue __x_ABI_CWindows_CFoundation_CIPropertyValue;

#endif // ____x_ABI_CWindows_CFoundation_CIPropertyValue_FWD_DEFINED__

typedef struct __x_ABI_CWindows_CFoundation_CRect __x_ABI_CWindows_CFoundation_CRect;

typedef struct __x_ABI_CWindows_CFoundation_CSize __x_ABI_CWindows_CFoundation_CSize;

typedef struct __x_ABI_CWindows_CFoundation_CTimeSpan __x_ABI_CWindows_CFoundation_CTimeSpan;

#ifndef ____x_ABI_CWindows_CFoundation_CIUriRuntimeClass_FWD_DEFINED__
#define ____x_ABI_CWindows_CFoundation_CIUriRuntimeClass_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CFoundation_CIUriRuntimeClass __x_ABI_CWindows_CFoundation_CIUriRuntimeClass;

#endif // ____x_ABI_CWindows_CFoundation_CIUriRuntimeClass_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CStorage_CStreams_CIInputStream_FWD_DEFINED__
#define ____x_ABI_CWindows_CStorage_CStreams_CIInputStream_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CStorage_CStreams_CIInputStream __x_ABI_CWindows_CStorage_CStreams_CIInputStream;

#endif // ____x_ABI_CWindows_CStorage_CStreams_CIInputStream_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CStorage_CStreams_CIRandomAccessStream_FWD_DEFINED__
#define ____x_ABI_CWindows_CStorage_CStreams_CIRandomAccessStream_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CStorage_CStreams_CIRandomAccessStream __x_ABI_CWindows_CStorage_CStreams_CIRandomAccessStream;

#endif // ____x_ABI_CWindows_CStorage_CStreams_CIRandomAccessStream_FWD_DEFINED__

typedef struct __x_ABI_CWindows_CUI_CColor __x_ABI_CWindows_CUI_CColor;

typedef enum __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CAlignmentX __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CAlignmentX;

typedef enum __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CAlignmentY __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CAlignmentY;

typedef enum __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CBrushMappingMode __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CBrushMappingMode;

typedef enum __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CColorInterpolationMode __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CColorInterpolationMode;

typedef enum __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CFillRule __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CFillRule;

typedef enum __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CGradientSpreadMethod __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CGradientSpreadMethod;

typedef enum __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CLoadedImageSourceLoadStatus __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CLoadedImageSourceLoadStatus;

typedef enum __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CStretch __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CStretch;

typedef enum __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CSweepDirection __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CSweepDirection;

typedef struct __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CMatrix __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CMatrix;

enum __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CAlignmentX
    {
        __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CAlignmentX_Left = 0,
    __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CAlignmentX_Center = 1,
    __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CAlignmentX_Right = 2,
};

enum __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CAlignmentY
    {
        __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CAlignmentY_Top = 0,
    __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CAlignmentY_Center = 1,
    __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CAlignmentY_Bottom = 2,
};

enum __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CBrushMappingMode
    {
        __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CBrushMappingMode_Absolute = 0,
    __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CBrushMappingMode_RelativeToBoundingBox = 1,
};

enum __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CColorInterpolationMode
    {
        __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CColorInterpolationMode_ScRgbLinearInterpolation = 0,
    __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CColorInterpolationMode_SRgbLinearInterpolation = 1,
};

enum __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CElementCompositeMode
    {
        __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CElementCompositeMode_Inherit = 0,
    __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CElementCompositeMode_SourceOver = 1,
    __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CElementCompositeMode_MinBlend = 2,
};

enum __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CFastPlayFallbackBehaviour
    {
        __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CFastPlayFallbackBehaviour_Skip = 0,
    __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CFastPlayFallbackBehaviour_Hide = 1,
    __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CFastPlayFallbackBehaviour_Disable = 2,
};

enum __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CFillRule
    {
        __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CFillRule_EvenOdd = 0,
    __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CFillRule_Nonzero = 1,
};

enum __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CGradientSpreadMethod
    {
        __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CGradientSpreadMethod_Pad = 0,
    __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CGradientSpreadMethod_Reflect = 1,
    __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CGradientSpreadMethod_Repeat = 2,
};

enum __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CLoadedImageSourceLoadStatus
    {
        __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CLoadedImageSourceLoadStatus_Success = 0,
    __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CLoadedImageSourceLoadStatus_NetworkError = 1,
    __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CLoadedImageSourceLoadStatus_InvalidFormat = 2,
    __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CLoadedImageSourceLoadStatus_Other = 3,
};

enum __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CPenLineCap
    {
        __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CPenLineCap_Flat = 0,
    __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CPenLineCap_Square = 1,
    __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CPenLineCap_Round = 2,
    __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CPenLineCap_Triangle = 3,
};

enum __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CPenLineJoin
    {
        __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CPenLineJoin_Miter = 0,
    __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CPenLineJoin_Bevel = 1,
    __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CPenLineJoin_Round = 2,
};

enum __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CStretch
    {
        __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CStretch_None = 0,
    __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CStretch_Fill = 1,
    __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CStretch_Uniform = 2,
    __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CStretch_UniformToFill = 3,
};

enum __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CStyleSimulations
    {
        __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CStyleSimulations_None = 0,
    __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CStyleSimulations_BoldSimulation = 1,
    __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CStyleSimulations_ItalicSimulation = 2,
    __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CStyleSimulations_BoldItalicSimulation = 3,
};

enum __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CSweepDirection
    {
        __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CSweepDirection_Counterclockwise = 0,
    __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CSweepDirection_Clockwise = 1,
};

struct __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CMatrix
    {
        DOUBLE M11;
    DOUBLE M12;
    DOUBLE M21;
    DOUBLE M22;
    DOUBLE OffsetX;
    DOUBLE OffsetY;
};

#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIAcrylicBrush_INTERFACE_DEFINED__)
    #define ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIAcrylicBrush_INTERFACE_DEFINED__
    typedef struct __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIAcrylicBrushVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIAcrylicBrush* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIAcrylicBrush* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIAcrylicBrush* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIAcrylicBrush* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIAcrylicBrush* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIAcrylicBrush* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_TintColor)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIAcrylicBrush* This,
        struct __x_ABI_CWindows_CUI_CColor* value);
    HRESULT (STDMETHODCALLTYPE* put_TintColor)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIAcrylicBrush* This,
        struct __x_ABI_CWindows_CUI_CColor value);
    HRESULT (STDMETHODCALLTYPE* get_TintOpacity)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIAcrylicBrush* This,
        DOUBLE* value);
    HRESULT (STDMETHODCALLTYPE* put_TintOpacity)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIAcrylicBrush* This,
        DOUBLE value);
    HRESULT (STDMETHODCALLTYPE* get_TintTransitionDuration)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIAcrylicBrush* This,
        struct __x_ABI_CWindows_CFoundation_CTimeSpan* value);
    HRESULT (STDMETHODCALLTYPE* put_TintTransitionDuration)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIAcrylicBrush* This,
        struct __x_ABI_CWindows_CFoundation_CTimeSpan value);
    HRESULT (STDMETHODCALLTYPE* get_AlwaysUseFallback)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIAcrylicBrush* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* put_AlwaysUseFallback)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIAcrylicBrush* This,
        boolean value);

        END_INTERFACE
    } __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIAcrylicBrushVtbl;

    interface __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIAcrylicBrush
    {
        CONST_VTBL struct __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIAcrylicBrushVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIAcrylicBrush;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIAcrylicBrush_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIAcrylicBrush2_INTERFACE_DEFINED__)
    #define ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIAcrylicBrush2_INTERFACE_DEFINED__
    typedef struct __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIAcrylicBrush2Vtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIAcrylicBrush2* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIAcrylicBrush2* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIAcrylicBrush2* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIAcrylicBrush2* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIAcrylicBrush2* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIAcrylicBrush2* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_TintLuminosityOpacity)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIAcrylicBrush2* This,
        __x_ABI_C__FIReference_1_double** value);
    HRESULT (STDMETHODCALLTYPE* put_TintLuminosityOpacity)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIAcrylicBrush2* This,
        __x_ABI_C__FIReference_1_double* value);

        END_INTERFACE
    } __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIAcrylicBrush2Vtbl;

    interface __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIAcrylicBrush2
    {
        CONST_VTBL struct __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIAcrylicBrush2Vtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIAcrylicBrush2;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIAcrylicBrush2_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIAcrylicBrushFactory_INTERFACE_DEFINED__)
    #define ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIAcrylicBrushFactory_INTERFACE_DEFINED__
    typedef struct __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIAcrylicBrushFactoryVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIAcrylicBrushFactory* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIAcrylicBrushFactory* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIAcrylicBrushFactory* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIAcrylicBrushFactory* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIAcrylicBrushFactory* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIAcrylicBrushFactory* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* CreateInstance)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIAcrylicBrushFactory* This,
        IInspectable* baseInterface,
        IInspectable** innerInterface,
        __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIAcrylicBrush** value);

        END_INTERFACE
    } __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIAcrylicBrushFactoryVtbl;

    interface __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIAcrylicBrushFactory
    {
        CONST_VTBL struct __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIAcrylicBrushFactoryVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIAcrylicBrushFactory;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIAcrylicBrushFactory_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIAcrylicBrushStatics_INTERFACE_DEFINED__)
    #define ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIAcrylicBrushStatics_INTERFACE_DEFINED__
    typedef struct __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIAcrylicBrushStaticsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIAcrylicBrushStatics* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIAcrylicBrushStatics* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIAcrylicBrushStatics* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIAcrylicBrushStatics* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIAcrylicBrushStatics* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIAcrylicBrushStatics* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_TintColorProperty)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIAcrylicBrushStatics* This,
        __x_ABI_CMicrosoft_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_TintOpacityProperty)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIAcrylicBrushStatics* This,
        __x_ABI_CMicrosoft_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_TintTransitionDurationProperty)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIAcrylicBrushStatics* This,
        __x_ABI_CMicrosoft_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_AlwaysUseFallbackProperty)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIAcrylicBrushStatics* This,
        __x_ABI_CMicrosoft_CUI_CXaml_CIDependencyProperty** value);

        END_INTERFACE
    } __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIAcrylicBrushStaticsVtbl;

    interface __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIAcrylicBrushStatics
    {
        CONST_VTBL struct __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIAcrylicBrushStaticsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIAcrylicBrushStatics;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIAcrylicBrushStatics_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIAcrylicBrushStatics2_INTERFACE_DEFINED__)
    #define ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIAcrylicBrushStatics2_INTERFACE_DEFINED__
    typedef struct __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIAcrylicBrushStatics2Vtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIAcrylicBrushStatics2* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIAcrylicBrushStatics2* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIAcrylicBrushStatics2* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIAcrylicBrushStatics2* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIAcrylicBrushStatics2* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIAcrylicBrushStatics2* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_TintLuminosityOpacityProperty)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIAcrylicBrushStatics2* This,
        __x_ABI_CMicrosoft_CUI_CXaml_CIDependencyProperty** value);

        END_INTERFACE
    } __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIAcrylicBrushStatics2Vtbl;

    interface __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIAcrylicBrushStatics2
    {
        CONST_VTBL struct __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIAcrylicBrushStatics2Vtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIAcrylicBrushStatics2;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIAcrylicBrushStatics2_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIArcSegment_INTERFACE_DEFINED__)
    #define ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIArcSegment_INTERFACE_DEFINED__
    typedef struct __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIArcSegmentVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIArcSegment* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIArcSegment* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIArcSegment* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIArcSegment* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIArcSegment* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIArcSegment* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Point)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIArcSegment* This,
        struct __x_ABI_CWindows_CFoundation_CPoint* value);
    HRESULT (STDMETHODCALLTYPE* put_Point)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIArcSegment* This,
        struct __x_ABI_CWindows_CFoundation_CPoint value);
    HRESULT (STDMETHODCALLTYPE* get_Size)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIArcSegment* This,
        struct __x_ABI_CWindows_CFoundation_CSize* value);
    HRESULT (STDMETHODCALLTYPE* put_Size)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIArcSegment* This,
        struct __x_ABI_CWindows_CFoundation_CSize value);
    HRESULT (STDMETHODCALLTYPE* get_RotationAngle)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIArcSegment* This,
        DOUBLE* value);
    HRESULT (STDMETHODCALLTYPE* put_RotationAngle)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIArcSegment* This,
        DOUBLE value);
    HRESULT (STDMETHODCALLTYPE* get_IsLargeArc)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIArcSegment* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* put_IsLargeArc)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIArcSegment* This,
        boolean value);
    HRESULT (STDMETHODCALLTYPE* get_SweepDirection)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIArcSegment* This,
        enum __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CSweepDirection* value);
    HRESULT (STDMETHODCALLTYPE* put_SweepDirection)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIArcSegment* This,
        enum __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CSweepDirection value);

        END_INTERFACE
    } __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIArcSegmentVtbl;

    interface __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIArcSegment
    {
        CONST_VTBL struct __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIArcSegmentVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIArcSegment;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIArcSegment_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIArcSegmentStatics_INTERFACE_DEFINED__)
    #define ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIArcSegmentStatics_INTERFACE_DEFINED__
    typedef struct __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIArcSegmentStaticsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIArcSegmentStatics* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIArcSegmentStatics* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIArcSegmentStatics* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIArcSegmentStatics* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIArcSegmentStatics* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIArcSegmentStatics* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_PointProperty)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIArcSegmentStatics* This,
        __x_ABI_CMicrosoft_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_SizeProperty)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIArcSegmentStatics* This,
        __x_ABI_CMicrosoft_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_RotationAngleProperty)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIArcSegmentStatics* This,
        __x_ABI_CMicrosoft_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_IsLargeArcProperty)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIArcSegmentStatics* This,
        __x_ABI_CMicrosoft_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_SweepDirectionProperty)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIArcSegmentStatics* This,
        __x_ABI_CMicrosoft_CUI_CXaml_CIDependencyProperty** value);

        END_INTERFACE
    } __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIArcSegmentStaticsVtbl;

    interface __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIArcSegmentStatics
    {
        CONST_VTBL struct __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIArcSegmentStaticsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIArcSegmentStatics;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIArcSegmentStatics_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIBezierSegment_INTERFACE_DEFINED__)
    #define ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIBezierSegment_INTERFACE_DEFINED__
    typedef struct __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIBezierSegmentVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIBezierSegment* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIBezierSegment* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIBezierSegment* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIBezierSegment* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIBezierSegment* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIBezierSegment* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Point1)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIBezierSegment* This,
        struct __x_ABI_CWindows_CFoundation_CPoint* value);
    HRESULT (STDMETHODCALLTYPE* put_Point1)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIBezierSegment* This,
        struct __x_ABI_CWindows_CFoundation_CPoint value);
    HRESULT (STDMETHODCALLTYPE* get_Point2)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIBezierSegment* This,
        struct __x_ABI_CWindows_CFoundation_CPoint* value);
    HRESULT (STDMETHODCALLTYPE* put_Point2)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIBezierSegment* This,
        struct __x_ABI_CWindows_CFoundation_CPoint value);
    HRESULT (STDMETHODCALLTYPE* get_Point3)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIBezierSegment* This,
        struct __x_ABI_CWindows_CFoundation_CPoint* value);
    HRESULT (STDMETHODCALLTYPE* put_Point3)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIBezierSegment* This,
        struct __x_ABI_CWindows_CFoundation_CPoint value);

        END_INTERFACE
    } __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIBezierSegmentVtbl;

    interface __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIBezierSegment
    {
        CONST_VTBL struct __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIBezierSegmentVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIBezierSegment;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIBezierSegment_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIBezierSegmentStatics_INTERFACE_DEFINED__)
    #define ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIBezierSegmentStatics_INTERFACE_DEFINED__
    typedef struct __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIBezierSegmentStaticsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIBezierSegmentStatics* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIBezierSegmentStatics* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIBezierSegmentStatics* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIBezierSegmentStatics* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIBezierSegmentStatics* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIBezierSegmentStatics* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Point1Property)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIBezierSegmentStatics* This,
        __x_ABI_CMicrosoft_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_Point2Property)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIBezierSegmentStatics* This,
        __x_ABI_CMicrosoft_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_Point3Property)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIBezierSegmentStatics* This,
        __x_ABI_CMicrosoft_CUI_CXaml_CIDependencyProperty** value);

        END_INTERFACE
    } __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIBezierSegmentStaticsVtbl;

    interface __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIBezierSegmentStatics
    {
        CONST_VTBL struct __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIBezierSegmentStaticsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIBezierSegmentStatics;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIBezierSegmentStatics_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIBitmapCache_INTERFACE_DEFINED__)
    #define ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIBitmapCache_INTERFACE_DEFINED__
    typedef struct __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIBitmapCacheVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIBitmapCache* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIBitmapCache* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIBitmapCache* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIBitmapCache* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIBitmapCache* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIBitmapCache* This,
            TrustLevel* trustLevel);
    
        END_INTERFACE
    } __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIBitmapCacheVtbl;

    interface __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIBitmapCache
    {
        CONST_VTBL struct __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIBitmapCacheVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIBitmapCache;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIBitmapCache_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIBrush_INTERFACE_DEFINED__)
    #define ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIBrush_INTERFACE_DEFINED__
    typedef struct __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIBrushVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIBrush* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIBrush* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIBrush* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIBrush* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIBrush* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIBrush* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Opacity)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIBrush* This,
        DOUBLE* value);
    HRESULT (STDMETHODCALLTYPE* put_Opacity)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIBrush* This,
        DOUBLE value);
    HRESULT (STDMETHODCALLTYPE* get_Transform)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIBrush* This,
        __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CITransform** value);
    HRESULT (STDMETHODCALLTYPE* put_Transform)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIBrush* This,
        __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CITransform* value);
    HRESULT (STDMETHODCALLTYPE* get_RelativeTransform)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIBrush* This,
        __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CITransform** value);
    HRESULT (STDMETHODCALLTYPE* put_RelativeTransform)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIBrush* This,
        __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CITransform* value);

        END_INTERFACE
    } __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIBrushVtbl;

    interface __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIBrush
    {
        CONST_VTBL struct __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIBrushVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIBrush;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIBrush_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIBrushFactory_INTERFACE_DEFINED__)
    #define ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIBrushFactory_INTERFACE_DEFINED__
    typedef struct __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIBrushFactoryVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIBrushFactory* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIBrushFactory* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIBrushFactory* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIBrushFactory* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIBrushFactory* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIBrushFactory* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* CreateInstance)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIBrushFactory* This,
        IInspectable* baseInterface,
        IInspectable** innerInterface,
        __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIBrush** value);

        END_INTERFACE
    } __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIBrushFactoryVtbl;

    interface __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIBrushFactory
    {
        CONST_VTBL struct __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIBrushFactoryVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIBrushFactory;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIBrushFactory_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIBrushOverrides_INTERFACE_DEFINED__)
    #define ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIBrushOverrides_INTERFACE_DEFINED__
    typedef struct __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIBrushOverridesVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIBrushOverrides* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIBrushOverrides* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIBrushOverrides* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIBrushOverrides* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIBrushOverrides* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIBrushOverrides* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* PopulatePropertyInfoOverride)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIBrushOverrides* This,
        HSTRING propertyName,
        __x_ABI_CMicrosoft_CUI_CComposition_CIAnimationPropertyInfo* animationPropertyInfo);

        END_INTERFACE
    } __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIBrushOverridesVtbl;

    interface __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIBrushOverrides
    {
        CONST_VTBL struct __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIBrushOverridesVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIBrushOverrides;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIBrushOverrides_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIBrushStatics_INTERFACE_DEFINED__)
    #define ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIBrushStatics_INTERFACE_DEFINED__
    typedef struct __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIBrushStaticsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIBrushStatics* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIBrushStatics* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIBrushStatics* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIBrushStatics* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIBrushStatics* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIBrushStatics* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_OpacityProperty)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIBrushStatics* This,
        __x_ABI_CMicrosoft_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_TransformProperty)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIBrushStatics* This,
        __x_ABI_CMicrosoft_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_RelativeTransformProperty)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIBrushStatics* This,
        __x_ABI_CMicrosoft_CUI_CXaml_CIDependencyProperty** value);

        END_INTERFACE
    } __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIBrushStaticsVtbl;

    interface __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIBrushStatics
    {
        CONST_VTBL struct __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIBrushStaticsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIBrushStatics;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIBrushStatics_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CICacheMode_INTERFACE_DEFINED__)
    #define ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CICacheMode_INTERFACE_DEFINED__
    typedef struct __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CICacheModeVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CICacheMode* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CICacheMode* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CICacheMode* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CICacheMode* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CICacheMode* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CICacheMode* This,
            TrustLevel* trustLevel);
    
        END_INTERFACE
    } __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CICacheModeVtbl;

    interface __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CICacheMode
    {
        CONST_VTBL struct __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CICacheModeVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CMedia_CICacheMode;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CICacheMode_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CICacheModeFactory_INTERFACE_DEFINED__)
    #define ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CICacheModeFactory_INTERFACE_DEFINED__
    typedef struct __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CICacheModeFactoryVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CICacheModeFactory* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CICacheModeFactory* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CICacheModeFactory* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CICacheModeFactory* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CICacheModeFactory* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CICacheModeFactory* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* CreateInstance)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CICacheModeFactory* This,
        IInspectable* baseInterface,
        IInspectable** innerInterface,
        __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CICacheMode** value);

        END_INTERFACE
    } __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CICacheModeFactoryVtbl;

    interface __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CICacheModeFactory
    {
        CONST_VTBL struct __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CICacheModeFactoryVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CMedia_CICacheModeFactory;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CICacheModeFactory_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CICompositeTransform_INTERFACE_DEFINED__)
    #define ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CICompositeTransform_INTERFACE_DEFINED__
    typedef struct __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CICompositeTransformVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CICompositeTransform* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CICompositeTransform* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CICompositeTransform* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CICompositeTransform* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CICompositeTransform* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CICompositeTransform* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_CenterX)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CICompositeTransform* This,
        DOUBLE* value);
    HRESULT (STDMETHODCALLTYPE* put_CenterX)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CICompositeTransform* This,
        DOUBLE value);
    HRESULT (STDMETHODCALLTYPE* get_CenterY)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CICompositeTransform* This,
        DOUBLE* value);
    HRESULT (STDMETHODCALLTYPE* put_CenterY)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CICompositeTransform* This,
        DOUBLE value);
    HRESULT (STDMETHODCALLTYPE* get_ScaleX)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CICompositeTransform* This,
        DOUBLE* value);
    HRESULT (STDMETHODCALLTYPE* put_ScaleX)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CICompositeTransform* This,
        DOUBLE value);
    HRESULT (STDMETHODCALLTYPE* get_ScaleY)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CICompositeTransform* This,
        DOUBLE* value);
    HRESULT (STDMETHODCALLTYPE* put_ScaleY)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CICompositeTransform* This,
        DOUBLE value);
    HRESULT (STDMETHODCALLTYPE* get_SkewX)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CICompositeTransform* This,
        DOUBLE* value);
    HRESULT (STDMETHODCALLTYPE* put_SkewX)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CICompositeTransform* This,
        DOUBLE value);
    HRESULT (STDMETHODCALLTYPE* get_SkewY)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CICompositeTransform* This,
        DOUBLE* value);
    HRESULT (STDMETHODCALLTYPE* put_SkewY)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CICompositeTransform* This,
        DOUBLE value);
    HRESULT (STDMETHODCALLTYPE* get_Rotation)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CICompositeTransform* This,
        DOUBLE* value);
    HRESULT (STDMETHODCALLTYPE* put_Rotation)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CICompositeTransform* This,
        DOUBLE value);
    HRESULT (STDMETHODCALLTYPE* get_TranslateX)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CICompositeTransform* This,
        DOUBLE* value);
    HRESULT (STDMETHODCALLTYPE* put_TranslateX)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CICompositeTransform* This,
        DOUBLE value);
    HRESULT (STDMETHODCALLTYPE* get_TranslateY)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CICompositeTransform* This,
        DOUBLE* value);
    HRESULT (STDMETHODCALLTYPE* put_TranslateY)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CICompositeTransform* This,
        DOUBLE value);

        END_INTERFACE
    } __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CICompositeTransformVtbl;

    interface __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CICompositeTransform
    {
        CONST_VTBL struct __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CICompositeTransformVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CMedia_CICompositeTransform;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CICompositeTransform_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CICompositeTransformStatics_INTERFACE_DEFINED__)
    #define ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CICompositeTransformStatics_INTERFACE_DEFINED__
    typedef struct __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CICompositeTransformStaticsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CICompositeTransformStatics* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CICompositeTransformStatics* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CICompositeTransformStatics* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CICompositeTransformStatics* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CICompositeTransformStatics* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CICompositeTransformStatics* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_CenterXProperty)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CICompositeTransformStatics* This,
        __x_ABI_CMicrosoft_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_CenterYProperty)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CICompositeTransformStatics* This,
        __x_ABI_CMicrosoft_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_ScaleXProperty)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CICompositeTransformStatics* This,
        __x_ABI_CMicrosoft_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_ScaleYProperty)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CICompositeTransformStatics* This,
        __x_ABI_CMicrosoft_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_SkewXProperty)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CICompositeTransformStatics* This,
        __x_ABI_CMicrosoft_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_SkewYProperty)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CICompositeTransformStatics* This,
        __x_ABI_CMicrosoft_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_RotationProperty)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CICompositeTransformStatics* This,
        __x_ABI_CMicrosoft_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_TranslateXProperty)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CICompositeTransformStatics* This,
        __x_ABI_CMicrosoft_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_TranslateYProperty)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CICompositeTransformStatics* This,
        __x_ABI_CMicrosoft_CUI_CXaml_CIDependencyProperty** value);

        END_INTERFACE
    } __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CICompositeTransformStaticsVtbl;

    interface __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CICompositeTransformStatics
    {
        CONST_VTBL struct __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CICompositeTransformStaticsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CMedia_CICompositeTransformStatics;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CICompositeTransformStatics_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CICompositionTarget_INTERFACE_DEFINED__)
    #define ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CICompositionTarget_INTERFACE_DEFINED__
    typedef struct __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CICompositionTargetVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CICompositionTarget* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CICompositionTarget* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CICompositionTarget* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CICompositionTarget* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CICompositionTarget* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CICompositionTarget* This,
            TrustLevel* trustLevel);
    
        END_INTERFACE
    } __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CICompositionTargetVtbl;

    interface __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CICompositionTarget
    {
        CONST_VTBL struct __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CICompositionTargetVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CMedia_CICompositionTarget;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CICompositionTarget_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CICompositionTargetStatics_INTERFACE_DEFINED__)
    #define ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CICompositionTargetStatics_INTERFACE_DEFINED__
    typedef struct __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CICompositionTargetStaticsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CICompositionTargetStatics* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CICompositionTargetStatics* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CICompositionTargetStatics* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CICompositionTargetStatics* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CICompositionTargetStatics* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CICompositionTargetStatics* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* add_Rendering)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CICompositionTargetStatics* This,
        __x_ABI_C__FIEventHandler_1_IInspectable* handler,
        EventRegistrationToken* token);
    HRESULT (STDMETHODCALLTYPE* remove_Rendering)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CICompositionTargetStatics* This,
        EventRegistrationToken token);
    HRESULT (STDMETHODCALLTYPE* add_Rendered)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CICompositionTargetStatics* This,
        __x_ABI_C__FIEventHandler_1___x_ABI_CMicrosoft__CUI__CXaml__CMedia__CRenderedEventArgs* handler,
        EventRegistrationToken* token);
    HRESULT (STDMETHODCALLTYPE* remove_Rendered)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CICompositionTargetStatics* This,
        EventRegistrationToken token);
    HRESULT (STDMETHODCALLTYPE* add_SurfaceContentsLost)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CICompositionTargetStatics* This,
        __x_ABI_C__FIEventHandler_1_IInspectable* handler,
        EventRegistrationToken* token);
    HRESULT (STDMETHODCALLTYPE* remove_SurfaceContentsLost)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CICompositionTargetStatics* This,
        EventRegistrationToken token);
    HRESULT (STDMETHODCALLTYPE* GetCompositorForCurrentThread)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CICompositionTargetStatics* This,
        __x_ABI_CMicrosoft_CUI_CComposition_CICompositor** result);

        END_INTERFACE
    } __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CICompositionTargetStaticsVtbl;

    interface __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CICompositionTargetStatics
    {
        CONST_VTBL struct __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CICompositionTargetStaticsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CMedia_CICompositionTargetStatics;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CICompositionTargetStatics_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIDesktopAcrylicBackdrop_INTERFACE_DEFINED__)
    #define ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIDesktopAcrylicBackdrop_INTERFACE_DEFINED__
    typedef struct __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIDesktopAcrylicBackdropVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIDesktopAcrylicBackdrop* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIDesktopAcrylicBackdrop* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIDesktopAcrylicBackdrop* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIDesktopAcrylicBackdrop* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIDesktopAcrylicBackdrop* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIDesktopAcrylicBackdrop* This,
            TrustLevel* trustLevel);
    
        END_INTERFACE
    } __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIDesktopAcrylicBackdropVtbl;

    interface __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIDesktopAcrylicBackdrop
    {
        CONST_VTBL struct __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIDesktopAcrylicBackdropVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIDesktopAcrylicBackdrop;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIDesktopAcrylicBackdrop_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIDesktopAcrylicBackdropFactory_INTERFACE_DEFINED__)
    #define ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIDesktopAcrylicBackdropFactory_INTERFACE_DEFINED__
    typedef struct __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIDesktopAcrylicBackdropFactoryVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIDesktopAcrylicBackdropFactory* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIDesktopAcrylicBackdropFactory* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIDesktopAcrylicBackdropFactory* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIDesktopAcrylicBackdropFactory* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIDesktopAcrylicBackdropFactory* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIDesktopAcrylicBackdropFactory* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* CreateInstance)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIDesktopAcrylicBackdropFactory* This,
        IInspectable* baseInterface,
        IInspectable** innerInterface,
        __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIDesktopAcrylicBackdrop** value);

        END_INTERFACE
    } __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIDesktopAcrylicBackdropFactoryVtbl;

    interface __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIDesktopAcrylicBackdropFactory
    {
        CONST_VTBL struct __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIDesktopAcrylicBackdropFactoryVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIDesktopAcrylicBackdropFactory;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIDesktopAcrylicBackdropFactory_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIEllipseGeometry_INTERFACE_DEFINED__)
    #define ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIEllipseGeometry_INTERFACE_DEFINED__
    typedef struct __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIEllipseGeometryVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIEllipseGeometry* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIEllipseGeometry* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIEllipseGeometry* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIEllipseGeometry* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIEllipseGeometry* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIEllipseGeometry* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Center)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIEllipseGeometry* This,
        struct __x_ABI_CWindows_CFoundation_CPoint* value);
    HRESULT (STDMETHODCALLTYPE* put_Center)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIEllipseGeometry* This,
        struct __x_ABI_CWindows_CFoundation_CPoint value);
    HRESULT (STDMETHODCALLTYPE* get_RadiusX)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIEllipseGeometry* This,
        DOUBLE* value);
    HRESULT (STDMETHODCALLTYPE* put_RadiusX)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIEllipseGeometry* This,
        DOUBLE value);
    HRESULT (STDMETHODCALLTYPE* get_RadiusY)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIEllipseGeometry* This,
        DOUBLE* value);
    HRESULT (STDMETHODCALLTYPE* put_RadiusY)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIEllipseGeometry* This,
        DOUBLE value);

        END_INTERFACE
    } __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIEllipseGeometryVtbl;

    interface __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIEllipseGeometry
    {
        CONST_VTBL struct __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIEllipseGeometryVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIEllipseGeometry;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIEllipseGeometry_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIEllipseGeometryStatics_INTERFACE_DEFINED__)
    #define ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIEllipseGeometryStatics_INTERFACE_DEFINED__
    typedef struct __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIEllipseGeometryStaticsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIEllipseGeometryStatics* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIEllipseGeometryStatics* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIEllipseGeometryStatics* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIEllipseGeometryStatics* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIEllipseGeometryStatics* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIEllipseGeometryStatics* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_CenterProperty)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIEllipseGeometryStatics* This,
        __x_ABI_CMicrosoft_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_RadiusXProperty)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIEllipseGeometryStatics* This,
        __x_ABI_CMicrosoft_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_RadiusYProperty)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIEllipseGeometryStatics* This,
        __x_ABI_CMicrosoft_CUI_CXaml_CIDependencyProperty** value);

        END_INTERFACE
    } __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIEllipseGeometryStaticsVtbl;

    interface __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIEllipseGeometryStatics
    {
        CONST_VTBL struct __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIEllipseGeometryStaticsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIEllipseGeometryStatics;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIEllipseGeometryStatics_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIFontFamily_INTERFACE_DEFINED__)
    #define ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIFontFamily_INTERFACE_DEFINED__
    typedef struct __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIFontFamilyVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIFontFamily* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIFontFamily* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIFontFamily* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIFontFamily* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIFontFamily* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIFontFamily* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Source)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIFontFamily* This,
        HSTRING* value);

        END_INTERFACE
    } __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIFontFamilyVtbl;

    interface __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIFontFamily
    {
        CONST_VTBL struct __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIFontFamilyVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIFontFamily;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIFontFamily_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIFontFamilyFactory_INTERFACE_DEFINED__)
    #define ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIFontFamilyFactory_INTERFACE_DEFINED__
    typedef struct __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIFontFamilyFactoryVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIFontFamilyFactory* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIFontFamilyFactory* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIFontFamilyFactory* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIFontFamilyFactory* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIFontFamilyFactory* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIFontFamilyFactory* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* CreateInstanceWithName)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIFontFamilyFactory* This,
        HSTRING familyName,
        IInspectable* baseInterface,
        IInspectable** innerInterface,
        __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIFontFamily** value);

        END_INTERFACE
    } __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIFontFamilyFactoryVtbl;

    interface __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIFontFamilyFactory
    {
        CONST_VTBL struct __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIFontFamilyFactoryVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIFontFamilyFactory;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIFontFamilyFactory_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIFontFamilyStatics_INTERFACE_DEFINED__)
    #define ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIFontFamilyStatics_INTERFACE_DEFINED__
    typedef struct __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIFontFamilyStaticsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIFontFamilyStatics* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIFontFamilyStatics* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIFontFamilyStatics* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIFontFamilyStatics* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIFontFamilyStatics* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIFontFamilyStatics* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_XamlAutoFontFamily)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIFontFamilyStatics* This,
        __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIFontFamily** value);

        END_INTERFACE
    } __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIFontFamilyStaticsVtbl;

    interface __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIFontFamilyStatics
    {
        CONST_VTBL struct __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIFontFamilyStaticsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIFontFamilyStatics;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIFontFamilyStatics_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIGeneralTransform_INTERFACE_DEFINED__)
    #define ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIGeneralTransform_INTERFACE_DEFINED__
    typedef struct __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIGeneralTransformVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIGeneralTransform* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIGeneralTransform* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIGeneralTransform* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIGeneralTransform* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIGeneralTransform* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIGeneralTransform* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Inverse)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIGeneralTransform* This,
        __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIGeneralTransform** value);
    HRESULT (STDMETHODCALLTYPE* TransformPoint)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIGeneralTransform* This,
        struct __x_ABI_CWindows_CFoundation_CPoint point,
        struct __x_ABI_CWindows_CFoundation_CPoint* result);
    HRESULT (STDMETHODCALLTYPE* TryTransform)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIGeneralTransform* This,
        struct __x_ABI_CWindows_CFoundation_CPoint inPoint,
        struct __x_ABI_CWindows_CFoundation_CPoint* outPoint,
        boolean* returnValue);
    HRESULT (STDMETHODCALLTYPE* TransformBounds)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIGeneralTransform* This,
        struct __x_ABI_CWindows_CFoundation_CRect rect,
        struct __x_ABI_CWindows_CFoundation_CRect* result);

        END_INTERFACE
    } __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIGeneralTransformVtbl;

    interface __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIGeneralTransform
    {
        CONST_VTBL struct __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIGeneralTransformVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIGeneralTransform;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIGeneralTransform_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIGeneralTransformFactory_INTERFACE_DEFINED__)
    #define ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIGeneralTransformFactory_INTERFACE_DEFINED__
    typedef struct __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIGeneralTransformFactoryVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIGeneralTransformFactory* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIGeneralTransformFactory* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIGeneralTransformFactory* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIGeneralTransformFactory* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIGeneralTransformFactory* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIGeneralTransformFactory* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* CreateInstance)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIGeneralTransformFactory* This,
        IInspectable* baseInterface,
        IInspectable** innerInterface,
        __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIGeneralTransform** value);

        END_INTERFACE
    } __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIGeneralTransformFactoryVtbl;

    interface __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIGeneralTransformFactory
    {
        CONST_VTBL struct __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIGeneralTransformFactoryVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIGeneralTransformFactory;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIGeneralTransformFactory_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIGeneralTransformOverrides_INTERFACE_DEFINED__)
    #define ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIGeneralTransformOverrides_INTERFACE_DEFINED__
    typedef struct __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIGeneralTransformOverridesVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIGeneralTransformOverrides* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIGeneralTransformOverrides* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIGeneralTransformOverrides* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIGeneralTransformOverrides* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIGeneralTransformOverrides* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIGeneralTransformOverrides* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_InverseCore)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIGeneralTransformOverrides* This,
        __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIGeneralTransform** value);
    HRESULT (STDMETHODCALLTYPE* TryTransformCore)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIGeneralTransformOverrides* This,
        struct __x_ABI_CWindows_CFoundation_CPoint inPoint,
        struct __x_ABI_CWindows_CFoundation_CPoint* outPoint,
        boolean* returnValue);
    HRESULT (STDMETHODCALLTYPE* TransformBoundsCore)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIGeneralTransformOverrides* This,
        struct __x_ABI_CWindows_CFoundation_CRect rect,
        struct __x_ABI_CWindows_CFoundation_CRect* result);

        END_INTERFACE
    } __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIGeneralTransformOverridesVtbl;

    interface __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIGeneralTransformOverrides
    {
        CONST_VTBL struct __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIGeneralTransformOverridesVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIGeneralTransformOverrides;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIGeneralTransformOverrides_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIGeometry_INTERFACE_DEFINED__)
    #define ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIGeometry_INTERFACE_DEFINED__
    typedef struct __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIGeometryVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIGeometry* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIGeometry* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIGeometry* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIGeometry* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIGeometry* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIGeometry* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Transform)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIGeometry* This,
        __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CITransform** value);
    HRESULT (STDMETHODCALLTYPE* put_Transform)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIGeometry* This,
        __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CITransform* value);
    HRESULT (STDMETHODCALLTYPE* get_Bounds)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIGeometry* This,
        struct __x_ABI_CWindows_CFoundation_CRect* value);

        END_INTERFACE
    } __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIGeometryVtbl;

    interface __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIGeometry
    {
        CONST_VTBL struct __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIGeometryVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIGeometry;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIGeometry_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIGeometryFactory_INTERFACE_DEFINED__)
    #define ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIGeometryFactory_INTERFACE_DEFINED__
    typedef struct __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIGeometryFactoryVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIGeometryFactory* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIGeometryFactory* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIGeometryFactory* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIGeometryFactory* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIGeometryFactory* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIGeometryFactory* This,
            TrustLevel* trustLevel);
    
        END_INTERFACE
    } __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIGeometryFactoryVtbl;

    interface __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIGeometryFactory
    {
        CONST_VTBL struct __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIGeometryFactoryVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIGeometryFactory;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIGeometryFactory_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIGeometryGroup_INTERFACE_DEFINED__)
    #define ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIGeometryGroup_INTERFACE_DEFINED__
    typedef struct __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIGeometryGroupVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIGeometryGroup* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIGeometryGroup* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIGeometryGroup* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIGeometryGroup* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIGeometryGroup* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIGeometryGroup* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_FillRule)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIGeometryGroup* This,
        enum __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CFillRule* value);
    HRESULT (STDMETHODCALLTYPE* put_FillRule)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIGeometryGroup* This,
        enum __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CFillRule value);
    HRESULT (STDMETHODCALLTYPE* get_Children)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIGeometryGroup* This,
        __x_ABI_C__FIVector_1___x_ABI_CMicrosoft__CUI__CXaml__CMedia__CGeometry** value);
    HRESULT (STDMETHODCALLTYPE* put_Children)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIGeometryGroup* This,
        __x_ABI_C__FIVector_1___x_ABI_CMicrosoft__CUI__CXaml__CMedia__CGeometry* value);

        END_INTERFACE
    } __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIGeometryGroupVtbl;

    interface __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIGeometryGroup
    {
        CONST_VTBL struct __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIGeometryGroupVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIGeometryGroup;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIGeometryGroup_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIGeometryGroupStatics_INTERFACE_DEFINED__)
    #define ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIGeometryGroupStatics_INTERFACE_DEFINED__
    typedef struct __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIGeometryGroupStaticsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIGeometryGroupStatics* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIGeometryGroupStatics* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIGeometryGroupStatics* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIGeometryGroupStatics* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIGeometryGroupStatics* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIGeometryGroupStatics* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_FillRuleProperty)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIGeometryGroupStatics* This,
        __x_ABI_CMicrosoft_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_ChildrenProperty)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIGeometryGroupStatics* This,
        __x_ABI_CMicrosoft_CUI_CXaml_CIDependencyProperty** value);

        END_INTERFACE
    } __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIGeometryGroupStaticsVtbl;

    interface __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIGeometryGroupStatics
    {
        CONST_VTBL struct __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIGeometryGroupStaticsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIGeometryGroupStatics;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIGeometryGroupStatics_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIGeometryStatics_INTERFACE_DEFINED__)
    #define ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIGeometryStatics_INTERFACE_DEFINED__
    typedef struct __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIGeometryStaticsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIGeometryStatics* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIGeometryStatics* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIGeometryStatics* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIGeometryStatics* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIGeometryStatics* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIGeometryStatics* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Empty)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIGeometryStatics* This,
        __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIGeometry** value);
    HRESULT (STDMETHODCALLTYPE* get_StandardFlatteningTolerance)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIGeometryStatics* This,
        DOUBLE* value);
    HRESULT (STDMETHODCALLTYPE* get_TransformProperty)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIGeometryStatics* This,
        __x_ABI_CMicrosoft_CUI_CXaml_CIDependencyProperty** value);

        END_INTERFACE
    } __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIGeometryStaticsVtbl;

    interface __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIGeometryStatics
    {
        CONST_VTBL struct __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIGeometryStaticsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIGeometryStatics;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIGeometryStatics_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIGradientBrush_INTERFACE_DEFINED__)
    #define ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIGradientBrush_INTERFACE_DEFINED__
    typedef struct __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIGradientBrushVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIGradientBrush* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIGradientBrush* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIGradientBrush* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIGradientBrush* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIGradientBrush* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIGradientBrush* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_SpreadMethod)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIGradientBrush* This,
        enum __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CGradientSpreadMethod* value);
    HRESULT (STDMETHODCALLTYPE* put_SpreadMethod)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIGradientBrush* This,
        enum __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CGradientSpreadMethod value);
    HRESULT (STDMETHODCALLTYPE* get_MappingMode)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIGradientBrush* This,
        enum __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CBrushMappingMode* value);
    HRESULT (STDMETHODCALLTYPE* put_MappingMode)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIGradientBrush* This,
        enum __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CBrushMappingMode value);
    HRESULT (STDMETHODCALLTYPE* get_ColorInterpolationMode)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIGradientBrush* This,
        enum __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CColorInterpolationMode* value);
    HRESULT (STDMETHODCALLTYPE* put_ColorInterpolationMode)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIGradientBrush* This,
        enum __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CColorInterpolationMode value);
    HRESULT (STDMETHODCALLTYPE* get_GradientStops)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIGradientBrush* This,
        __x_ABI_C__FIVector_1___x_ABI_CMicrosoft__CUI__CXaml__CMedia__CGradientStop** value);
    HRESULT (STDMETHODCALLTYPE* put_GradientStops)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIGradientBrush* This,
        __x_ABI_C__FIVector_1___x_ABI_CMicrosoft__CUI__CXaml__CMedia__CGradientStop* value);

        END_INTERFACE
    } __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIGradientBrushVtbl;

    interface __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIGradientBrush
    {
        CONST_VTBL struct __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIGradientBrushVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIGradientBrush;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIGradientBrush_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIGradientBrushFactory_INTERFACE_DEFINED__)
    #define ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIGradientBrushFactory_INTERFACE_DEFINED__
    typedef struct __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIGradientBrushFactoryVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIGradientBrushFactory* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIGradientBrushFactory* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIGradientBrushFactory* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIGradientBrushFactory* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIGradientBrushFactory* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIGradientBrushFactory* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* CreateInstance)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIGradientBrushFactory* This,
        IInspectable* baseInterface,
        IInspectable** innerInterface,
        __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIGradientBrush** value);

        END_INTERFACE
    } __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIGradientBrushFactoryVtbl;

    interface __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIGradientBrushFactory
    {
        CONST_VTBL struct __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIGradientBrushFactoryVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIGradientBrushFactory;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIGradientBrushFactory_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIGradientBrushStatics_INTERFACE_DEFINED__)
    #define ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIGradientBrushStatics_INTERFACE_DEFINED__
    typedef struct __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIGradientBrushStaticsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIGradientBrushStatics* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIGradientBrushStatics* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIGradientBrushStatics* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIGradientBrushStatics* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIGradientBrushStatics* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIGradientBrushStatics* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_SpreadMethodProperty)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIGradientBrushStatics* This,
        __x_ABI_CMicrosoft_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_MappingModeProperty)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIGradientBrushStatics* This,
        __x_ABI_CMicrosoft_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_ColorInterpolationModeProperty)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIGradientBrushStatics* This,
        __x_ABI_CMicrosoft_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_GradientStopsProperty)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIGradientBrushStatics* This,
        __x_ABI_CMicrosoft_CUI_CXaml_CIDependencyProperty** value);

        END_INTERFACE
    } __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIGradientBrushStaticsVtbl;

    interface __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIGradientBrushStatics
    {
        CONST_VTBL struct __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIGradientBrushStaticsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIGradientBrushStatics;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIGradientBrushStatics_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIGradientStop_INTERFACE_DEFINED__)
    #define ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIGradientStop_INTERFACE_DEFINED__
    typedef struct __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIGradientStopVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIGradientStop* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIGradientStop* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIGradientStop* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIGradientStop* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIGradientStop* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIGradientStop* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Color)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIGradientStop* This,
        struct __x_ABI_CWindows_CUI_CColor* value);
    HRESULT (STDMETHODCALLTYPE* put_Color)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIGradientStop* This,
        struct __x_ABI_CWindows_CUI_CColor value);
    HRESULT (STDMETHODCALLTYPE* get_Offset)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIGradientStop* This,
        DOUBLE* value);
    HRESULT (STDMETHODCALLTYPE* put_Offset)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIGradientStop* This,
        DOUBLE value);

        END_INTERFACE
    } __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIGradientStopVtbl;

    interface __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIGradientStop
    {
        CONST_VTBL struct __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIGradientStopVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIGradientStop;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIGradientStop_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIGradientStopStatics_INTERFACE_DEFINED__)
    #define ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIGradientStopStatics_INTERFACE_DEFINED__
    typedef struct __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIGradientStopStaticsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIGradientStopStatics* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIGradientStopStatics* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIGradientStopStatics* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIGradientStopStatics* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIGradientStopStatics* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIGradientStopStatics* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_ColorProperty)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIGradientStopStatics* This,
        __x_ABI_CMicrosoft_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_OffsetProperty)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIGradientStopStatics* This,
        __x_ABI_CMicrosoft_CUI_CXaml_CIDependencyProperty** value);

        END_INTERFACE
    } __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIGradientStopStaticsVtbl;

    interface __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIGradientStopStatics
    {
        CONST_VTBL struct __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIGradientStopStaticsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIGradientStopStatics;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIGradientStopStatics_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIImageBrush_INTERFACE_DEFINED__)
    #define ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIImageBrush_INTERFACE_DEFINED__
    typedef struct __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIImageBrushVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIImageBrush* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIImageBrush* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIImageBrush* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIImageBrush* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIImageBrush* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIImageBrush* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_ImageSource)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIImageBrush* This,
        __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIImageSource** value);
    HRESULT (STDMETHODCALLTYPE* put_ImageSource)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIImageBrush* This,
        __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIImageSource* value);
    HRESULT (STDMETHODCALLTYPE* add_ImageFailed)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIImageBrush* This,
        __x_ABI_CMicrosoft_CUI_CXaml_CIExceptionRoutedEventHandler* handler,
        EventRegistrationToken* token);
    HRESULT (STDMETHODCALLTYPE* remove_ImageFailed)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIImageBrush* This,
        EventRegistrationToken token);
    HRESULT (STDMETHODCALLTYPE* add_ImageOpened)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIImageBrush* This,
        __x_ABI_CMicrosoft_CUI_CXaml_CIRoutedEventHandler* handler,
        EventRegistrationToken* token);
    HRESULT (STDMETHODCALLTYPE* remove_ImageOpened)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIImageBrush* This,
        EventRegistrationToken token);

        END_INTERFACE
    } __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIImageBrushVtbl;

    interface __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIImageBrush
    {
        CONST_VTBL struct __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIImageBrushVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIImageBrush;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIImageBrush_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIImageBrushStatics_INTERFACE_DEFINED__)
    #define ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIImageBrushStatics_INTERFACE_DEFINED__
    typedef struct __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIImageBrushStaticsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIImageBrushStatics* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIImageBrushStatics* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIImageBrushStatics* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIImageBrushStatics* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIImageBrushStatics* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIImageBrushStatics* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_ImageSourceProperty)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIImageBrushStatics* This,
        __x_ABI_CMicrosoft_CUI_CXaml_CIDependencyProperty** value);

        END_INTERFACE
    } __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIImageBrushStaticsVtbl;

    interface __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIImageBrushStatics
    {
        CONST_VTBL struct __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIImageBrushStaticsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIImageBrushStatics;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIImageBrushStatics_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIImageSource_INTERFACE_DEFINED__)
    #define ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIImageSource_INTERFACE_DEFINED__
    typedef struct __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIImageSourceVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIImageSource* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIImageSource* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIImageSource* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIImageSource* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIImageSource* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIImageSource* This,
            TrustLevel* trustLevel);
    
        END_INTERFACE
    } __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIImageSourceVtbl;

    interface __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIImageSource
    {
        CONST_VTBL struct __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIImageSourceVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIImageSource;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIImageSource_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIImageSourceFactory_INTERFACE_DEFINED__)
    #define ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIImageSourceFactory_INTERFACE_DEFINED__
    typedef struct __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIImageSourceFactoryVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIImageSourceFactory* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIImageSourceFactory* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIImageSourceFactory* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIImageSourceFactory* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIImageSourceFactory* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIImageSourceFactory* This,
            TrustLevel* trustLevel);
    
        END_INTERFACE
    } __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIImageSourceFactoryVtbl;

    interface __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIImageSourceFactory
    {
        CONST_VTBL struct __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIImageSourceFactoryVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIImageSourceFactory;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIImageSourceFactory_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CILineGeometry_INTERFACE_DEFINED__)
    #define ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CILineGeometry_INTERFACE_DEFINED__
    typedef struct __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CILineGeometryVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CILineGeometry* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CILineGeometry* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CILineGeometry* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CILineGeometry* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CILineGeometry* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CILineGeometry* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_StartPoint)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CILineGeometry* This,
        struct __x_ABI_CWindows_CFoundation_CPoint* value);
    HRESULT (STDMETHODCALLTYPE* put_StartPoint)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CILineGeometry* This,
        struct __x_ABI_CWindows_CFoundation_CPoint value);
    HRESULT (STDMETHODCALLTYPE* get_EndPoint)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CILineGeometry* This,
        struct __x_ABI_CWindows_CFoundation_CPoint* value);
    HRESULT (STDMETHODCALLTYPE* put_EndPoint)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CILineGeometry* This,
        struct __x_ABI_CWindows_CFoundation_CPoint value);

        END_INTERFACE
    } __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CILineGeometryVtbl;

    interface __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CILineGeometry
    {
        CONST_VTBL struct __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CILineGeometryVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CMedia_CILineGeometry;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CILineGeometry_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CILineGeometryStatics_INTERFACE_DEFINED__)
    #define ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CILineGeometryStatics_INTERFACE_DEFINED__
    typedef struct __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CILineGeometryStaticsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CILineGeometryStatics* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CILineGeometryStatics* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CILineGeometryStatics* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CILineGeometryStatics* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CILineGeometryStatics* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CILineGeometryStatics* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_StartPointProperty)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CILineGeometryStatics* This,
        __x_ABI_CMicrosoft_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_EndPointProperty)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CILineGeometryStatics* This,
        __x_ABI_CMicrosoft_CUI_CXaml_CIDependencyProperty** value);

        END_INTERFACE
    } __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CILineGeometryStaticsVtbl;

    interface __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CILineGeometryStatics
    {
        CONST_VTBL struct __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CILineGeometryStaticsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CMedia_CILineGeometryStatics;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CILineGeometryStatics_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CILineSegment_INTERFACE_DEFINED__)
    #define ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CILineSegment_INTERFACE_DEFINED__
    typedef struct __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CILineSegmentVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CILineSegment* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CILineSegment* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CILineSegment* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CILineSegment* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CILineSegment* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CILineSegment* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Point)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CILineSegment* This,
        struct __x_ABI_CWindows_CFoundation_CPoint* value);
    HRESULT (STDMETHODCALLTYPE* put_Point)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CILineSegment* This,
        struct __x_ABI_CWindows_CFoundation_CPoint value);

        END_INTERFACE
    } __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CILineSegmentVtbl;

    interface __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CILineSegment
    {
        CONST_VTBL struct __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CILineSegmentVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CMedia_CILineSegment;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CILineSegment_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CILineSegmentStatics_INTERFACE_DEFINED__)
    #define ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CILineSegmentStatics_INTERFACE_DEFINED__
    typedef struct __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CILineSegmentStaticsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CILineSegmentStatics* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CILineSegmentStatics* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CILineSegmentStatics* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CILineSegmentStatics* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CILineSegmentStatics* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CILineSegmentStatics* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_PointProperty)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CILineSegmentStatics* This,
        __x_ABI_CMicrosoft_CUI_CXaml_CIDependencyProperty** value);

        END_INTERFACE
    } __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CILineSegmentStaticsVtbl;

    interface __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CILineSegmentStatics
    {
        CONST_VTBL struct __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CILineSegmentStaticsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CMedia_CILineSegmentStatics;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CILineSegmentStatics_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CILinearGradientBrush_INTERFACE_DEFINED__)
    #define ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CILinearGradientBrush_INTERFACE_DEFINED__
    typedef struct __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CILinearGradientBrushVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CILinearGradientBrush* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CILinearGradientBrush* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CILinearGradientBrush* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CILinearGradientBrush* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CILinearGradientBrush* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CILinearGradientBrush* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_StartPoint)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CILinearGradientBrush* This,
        struct __x_ABI_CWindows_CFoundation_CPoint* value);
    HRESULT (STDMETHODCALLTYPE* put_StartPoint)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CILinearGradientBrush* This,
        struct __x_ABI_CWindows_CFoundation_CPoint value);
    HRESULT (STDMETHODCALLTYPE* get_EndPoint)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CILinearGradientBrush* This,
        struct __x_ABI_CWindows_CFoundation_CPoint* value);
    HRESULT (STDMETHODCALLTYPE* put_EndPoint)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CILinearGradientBrush* This,
        struct __x_ABI_CWindows_CFoundation_CPoint value);

        END_INTERFACE
    } __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CILinearGradientBrushVtbl;

    interface __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CILinearGradientBrush
    {
        CONST_VTBL struct __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CILinearGradientBrushVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CMedia_CILinearGradientBrush;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CILinearGradientBrush_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CILinearGradientBrushFactory_INTERFACE_DEFINED__)
    #define ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CILinearGradientBrushFactory_INTERFACE_DEFINED__
    typedef struct __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CILinearGradientBrushFactoryVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CILinearGradientBrushFactory* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CILinearGradientBrushFactory* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CILinearGradientBrushFactory* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CILinearGradientBrushFactory* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CILinearGradientBrushFactory* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CILinearGradientBrushFactory* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* CreateInstanceWithGradientStopCollectionAndAngle)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CILinearGradientBrushFactory* This,
        __x_ABI_C__FIVector_1___x_ABI_CMicrosoft__CUI__CXaml__CMedia__CGradientStop* gradientStopCollection,
        DOUBLE angle,
        __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CILinearGradientBrush** value);

        END_INTERFACE
    } __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CILinearGradientBrushFactoryVtbl;

    interface __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CILinearGradientBrushFactory
    {
        CONST_VTBL struct __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CILinearGradientBrushFactoryVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CMedia_CILinearGradientBrushFactory;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CILinearGradientBrushFactory_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CILinearGradientBrushStatics_INTERFACE_DEFINED__)
    #define ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CILinearGradientBrushStatics_INTERFACE_DEFINED__
    typedef struct __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CILinearGradientBrushStaticsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CILinearGradientBrushStatics* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CILinearGradientBrushStatics* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CILinearGradientBrushStatics* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CILinearGradientBrushStatics* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CILinearGradientBrushStatics* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CILinearGradientBrushStatics* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_StartPointProperty)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CILinearGradientBrushStatics* This,
        __x_ABI_CMicrosoft_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_EndPointProperty)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CILinearGradientBrushStatics* This,
        __x_ABI_CMicrosoft_CUI_CXaml_CIDependencyProperty** value);

        END_INTERFACE
    } __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CILinearGradientBrushStaticsVtbl;

    interface __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CILinearGradientBrushStatics
    {
        CONST_VTBL struct __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CILinearGradientBrushStaticsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CMedia_CILinearGradientBrushStatics;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CILinearGradientBrushStatics_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CILoadedImageSourceLoadCompletedEventArgs_INTERFACE_DEFINED__)
    #define ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CILoadedImageSourceLoadCompletedEventArgs_INTERFACE_DEFINED__
    typedef struct __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CILoadedImageSourceLoadCompletedEventArgsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CILoadedImageSourceLoadCompletedEventArgs* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CILoadedImageSourceLoadCompletedEventArgs* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CILoadedImageSourceLoadCompletedEventArgs* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CILoadedImageSourceLoadCompletedEventArgs* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CILoadedImageSourceLoadCompletedEventArgs* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CILoadedImageSourceLoadCompletedEventArgs* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Status)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CILoadedImageSourceLoadCompletedEventArgs* This,
        enum __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CLoadedImageSourceLoadStatus* value);

        END_INTERFACE
    } __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CILoadedImageSourceLoadCompletedEventArgsVtbl;

    interface __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CILoadedImageSourceLoadCompletedEventArgs
    {
        CONST_VTBL struct __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CILoadedImageSourceLoadCompletedEventArgsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CMedia_CILoadedImageSourceLoadCompletedEventArgs;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CILoadedImageSourceLoadCompletedEventArgs_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CILoadedImageSurface_INTERFACE_DEFINED__)
    #define ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CILoadedImageSurface_INTERFACE_DEFINED__
    typedef struct __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CILoadedImageSurfaceVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CILoadedImageSurface* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CILoadedImageSurface* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CILoadedImageSurface* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CILoadedImageSurface* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CILoadedImageSurface* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CILoadedImageSurface* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_DecodedPhysicalSize)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CILoadedImageSurface* This,
        struct __x_ABI_CWindows_CFoundation_CSize* value);
    HRESULT (STDMETHODCALLTYPE* get_DecodedSize)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CILoadedImageSurface* This,
        struct __x_ABI_CWindows_CFoundation_CSize* value);
    HRESULT (STDMETHODCALLTYPE* get_NaturalSize)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CILoadedImageSurface* This,
        struct __x_ABI_CWindows_CFoundation_CSize* value);
    HRESULT (STDMETHODCALLTYPE* add_LoadCompleted)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CILoadedImageSurface* This,
        __x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CUI__CXaml__CMedia__CLoadedImageSurface___x_ABI_CMicrosoft__CUI__CXaml__CMedia__CLoadedImageSourceLoadCompletedEventArgs* handler,
        EventRegistrationToken* token);
    HRESULT (STDMETHODCALLTYPE* remove_LoadCompleted)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CILoadedImageSurface* This,
        EventRegistrationToken token);

        END_INTERFACE
    } __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CILoadedImageSurfaceVtbl;

    interface __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CILoadedImageSurface
    {
        CONST_VTBL struct __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CILoadedImageSurfaceVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CMedia_CILoadedImageSurface;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CILoadedImageSurface_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CILoadedImageSurfaceStatics_INTERFACE_DEFINED__)
    #define ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CILoadedImageSurfaceStatics_INTERFACE_DEFINED__
    typedef struct __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CILoadedImageSurfaceStaticsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CILoadedImageSurfaceStatics* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CILoadedImageSurfaceStatics* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CILoadedImageSurfaceStatics* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CILoadedImageSurfaceStatics* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CILoadedImageSurfaceStatics* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CILoadedImageSurfaceStatics* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* StartLoadFromUriWithSize)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CILoadedImageSurfaceStatics* This,
        __x_ABI_CWindows_CFoundation_CIUriRuntimeClass* uri,
        struct __x_ABI_CWindows_CFoundation_CSize desiredMaxSize,
        __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CILoadedImageSurface** result);
    HRESULT (STDMETHODCALLTYPE* StartLoadFromUri)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CILoadedImageSurfaceStatics* This,
        __x_ABI_CWindows_CFoundation_CIUriRuntimeClass* uri,
        __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CILoadedImageSurface** result);
    HRESULT (STDMETHODCALLTYPE* StartLoadFromStreamWithSize)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CILoadedImageSurfaceStatics* This,
        __x_ABI_CWindows_CStorage_CStreams_CIRandomAccessStream* stream,
        struct __x_ABI_CWindows_CFoundation_CSize desiredMaxSize,
        __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CILoadedImageSurface** result);
    HRESULT (STDMETHODCALLTYPE* StartLoadFromStream)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CILoadedImageSurfaceStatics* This,
        __x_ABI_CWindows_CStorage_CStreams_CIRandomAccessStream* stream,
        __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CILoadedImageSurface** result);

        END_INTERFACE
    } __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CILoadedImageSurfaceStaticsVtbl;

    interface __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CILoadedImageSurfaceStatics
    {
        CONST_VTBL struct __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CILoadedImageSurfaceStaticsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CMedia_CILoadedImageSurfaceStatics;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CILoadedImageSurfaceStatics_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIMatrix3DProjection_INTERFACE_DEFINED__)
    #define ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIMatrix3DProjection_INTERFACE_DEFINED__
    typedef struct __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIMatrix3DProjectionVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIMatrix3DProjection* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIMatrix3DProjection* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIMatrix3DProjection* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIMatrix3DProjection* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIMatrix3DProjection* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIMatrix3DProjection* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_ProjectionMatrix)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIMatrix3DProjection* This,
        struct __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CMedia3D_CMatrix3D* value);
    HRESULT (STDMETHODCALLTYPE* put_ProjectionMatrix)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIMatrix3DProjection* This,
        struct __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CMedia3D_CMatrix3D value);

        END_INTERFACE
    } __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIMatrix3DProjectionVtbl;

    interface __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIMatrix3DProjection
    {
        CONST_VTBL struct __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIMatrix3DProjectionVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIMatrix3DProjection;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIMatrix3DProjection_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIMatrix3DProjectionStatics_INTERFACE_DEFINED__)
    #define ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIMatrix3DProjectionStatics_INTERFACE_DEFINED__
    typedef struct __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIMatrix3DProjectionStaticsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIMatrix3DProjectionStatics* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIMatrix3DProjectionStatics* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIMatrix3DProjectionStatics* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIMatrix3DProjectionStatics* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIMatrix3DProjectionStatics* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIMatrix3DProjectionStatics* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_ProjectionMatrixProperty)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIMatrix3DProjectionStatics* This,
        __x_ABI_CMicrosoft_CUI_CXaml_CIDependencyProperty** value);

        END_INTERFACE
    } __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIMatrix3DProjectionStaticsVtbl;

    interface __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIMatrix3DProjectionStatics
    {
        CONST_VTBL struct __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIMatrix3DProjectionStaticsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIMatrix3DProjectionStatics;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIMatrix3DProjectionStatics_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIMatrixHelper_INTERFACE_DEFINED__)
    #define ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIMatrixHelper_INTERFACE_DEFINED__
    typedef struct __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIMatrixHelperVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIMatrixHelper* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIMatrixHelper* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIMatrixHelper* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIMatrixHelper* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIMatrixHelper* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIMatrixHelper* This,
            TrustLevel* trustLevel);
    
        END_INTERFACE
    } __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIMatrixHelperVtbl;

    interface __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIMatrixHelper
    {
        CONST_VTBL struct __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIMatrixHelperVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIMatrixHelper;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIMatrixHelper_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIMatrixHelperStatics_INTERFACE_DEFINED__)
    #define ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIMatrixHelperStatics_INTERFACE_DEFINED__
    typedef struct __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIMatrixHelperStaticsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIMatrixHelperStatics* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIMatrixHelperStatics* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIMatrixHelperStatics* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIMatrixHelperStatics* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIMatrixHelperStatics* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIMatrixHelperStatics* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Identity)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIMatrixHelperStatics* This,
        struct __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CMatrix* value);
    HRESULT (STDMETHODCALLTYPE* FromElements)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIMatrixHelperStatics* This,
        DOUBLE m11,
        DOUBLE m12,
        DOUBLE m21,
        DOUBLE m22,
        DOUBLE offsetX,
        DOUBLE offsetY,
        struct __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CMatrix* result);
    HRESULT (STDMETHODCALLTYPE* GetIsIdentity)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIMatrixHelperStatics* This,
        struct __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CMatrix target,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* Transform)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIMatrixHelperStatics* This,
        struct __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CMatrix target,
        struct __x_ABI_CWindows_CFoundation_CPoint point,
        struct __x_ABI_CWindows_CFoundation_CPoint* result);

        END_INTERFACE
    } __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIMatrixHelperStaticsVtbl;

    interface __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIMatrixHelperStatics
    {
        CONST_VTBL struct __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIMatrixHelperStaticsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIMatrixHelperStatics;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIMatrixHelperStatics_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIMatrixTransform_INTERFACE_DEFINED__)
    #define ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIMatrixTransform_INTERFACE_DEFINED__
    typedef struct __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIMatrixTransformVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIMatrixTransform* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIMatrixTransform* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIMatrixTransform* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIMatrixTransform* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIMatrixTransform* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIMatrixTransform* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Matrix)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIMatrixTransform* This,
        struct __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CMatrix* value);
    HRESULT (STDMETHODCALLTYPE* put_Matrix)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIMatrixTransform* This,
        struct __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CMatrix value);

        END_INTERFACE
    } __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIMatrixTransformVtbl;

    interface __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIMatrixTransform
    {
        CONST_VTBL struct __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIMatrixTransformVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIMatrixTransform;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIMatrixTransform_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIMatrixTransformStatics_INTERFACE_DEFINED__)
    #define ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIMatrixTransformStatics_INTERFACE_DEFINED__
    typedef struct __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIMatrixTransformStaticsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIMatrixTransformStatics* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIMatrixTransformStatics* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIMatrixTransformStatics* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIMatrixTransformStatics* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIMatrixTransformStatics* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIMatrixTransformStatics* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_MatrixProperty)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIMatrixTransformStatics* This,
        __x_ABI_CMicrosoft_CUI_CXaml_CIDependencyProperty** value);

        END_INTERFACE
    } __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIMatrixTransformStaticsVtbl;

    interface __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIMatrixTransformStatics
    {
        CONST_VTBL struct __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIMatrixTransformStaticsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIMatrixTransformStatics;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIMatrixTransformStatics_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIMediaTransportControlsThumbnailRequestedEventArgs_INTERFACE_DEFINED__)
    #define ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIMediaTransportControlsThumbnailRequestedEventArgs_INTERFACE_DEFINED__
    typedef struct __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIMediaTransportControlsThumbnailRequestedEventArgsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIMediaTransportControlsThumbnailRequestedEventArgs* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIMediaTransportControlsThumbnailRequestedEventArgs* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIMediaTransportControlsThumbnailRequestedEventArgs* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIMediaTransportControlsThumbnailRequestedEventArgs* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIMediaTransportControlsThumbnailRequestedEventArgs* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIMediaTransportControlsThumbnailRequestedEventArgs* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* SetThumbnailImage)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIMediaTransportControlsThumbnailRequestedEventArgs* This,
        __x_ABI_CWindows_CStorage_CStreams_CIInputStream* source);
    HRESULT (STDMETHODCALLTYPE* GetDeferral)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIMediaTransportControlsThumbnailRequestedEventArgs* This,
        __x_ABI_CWindows_CFoundation_CIDeferral** result);

        END_INTERFACE
    } __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIMediaTransportControlsThumbnailRequestedEventArgsVtbl;

    interface __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIMediaTransportControlsThumbnailRequestedEventArgs
    {
        CONST_VTBL struct __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIMediaTransportControlsThumbnailRequestedEventArgsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIMediaTransportControlsThumbnailRequestedEventArgs;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIMediaTransportControlsThumbnailRequestedEventArgs_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIMicaBackdrop_INTERFACE_DEFINED__)
    #define ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIMicaBackdrop_INTERFACE_DEFINED__
    typedef struct __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIMicaBackdropVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIMicaBackdrop* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIMicaBackdrop* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIMicaBackdrop* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIMicaBackdrop* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIMicaBackdrop* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIMicaBackdrop* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Kind)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIMicaBackdrop* This,
        enum __x_ABI_CMicrosoft_CUI_CComposition_CSystemBackdrops_CMicaKind* value);
    HRESULT (STDMETHODCALLTYPE* put_Kind)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIMicaBackdrop* This,
        enum __x_ABI_CMicrosoft_CUI_CComposition_CSystemBackdrops_CMicaKind value);

        END_INTERFACE
    } __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIMicaBackdropVtbl;

    interface __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIMicaBackdrop
    {
        CONST_VTBL struct __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIMicaBackdropVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIMicaBackdrop;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIMicaBackdrop_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIMicaBackdropFactory_INTERFACE_DEFINED__)
    #define ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIMicaBackdropFactory_INTERFACE_DEFINED__
    typedef struct __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIMicaBackdropFactoryVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIMicaBackdropFactory* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIMicaBackdropFactory* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIMicaBackdropFactory* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIMicaBackdropFactory* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIMicaBackdropFactory* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIMicaBackdropFactory* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* CreateInstance)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIMicaBackdropFactory* This,
        IInspectable* baseInterface,
        IInspectable** innerInterface,
        __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIMicaBackdrop** value);

        END_INTERFACE
    } __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIMicaBackdropFactoryVtbl;

    interface __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIMicaBackdropFactory
    {
        CONST_VTBL struct __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIMicaBackdropFactoryVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIMicaBackdropFactory;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIMicaBackdropFactory_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIMicaBackdropStatics_INTERFACE_DEFINED__)
    #define ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIMicaBackdropStatics_INTERFACE_DEFINED__
    typedef struct __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIMicaBackdropStaticsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIMicaBackdropStatics* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIMicaBackdropStatics* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIMicaBackdropStatics* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIMicaBackdropStatics* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIMicaBackdropStatics* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIMicaBackdropStatics* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_KindProperty)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIMicaBackdropStatics* This,
        __x_ABI_CMicrosoft_CUI_CXaml_CIDependencyProperty** value);

        END_INTERFACE
    } __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIMicaBackdropStaticsVtbl;

    interface __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIMicaBackdropStatics
    {
        CONST_VTBL struct __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIMicaBackdropStaticsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIMicaBackdropStatics;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIMicaBackdropStatics_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPathFigure_INTERFACE_DEFINED__)
    #define ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPathFigure_INTERFACE_DEFINED__
    typedef struct __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPathFigureVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPathFigure* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPathFigure* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPathFigure* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPathFigure* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPathFigure* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPathFigure* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Segments)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPathFigure* This,
        __x_ABI_C__FIVector_1___x_ABI_CMicrosoft__CUI__CXaml__CMedia__CPathSegment** value);
    HRESULT (STDMETHODCALLTYPE* put_Segments)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPathFigure* This,
        __x_ABI_C__FIVector_1___x_ABI_CMicrosoft__CUI__CXaml__CMedia__CPathSegment* value);
    HRESULT (STDMETHODCALLTYPE* get_StartPoint)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPathFigure* This,
        struct __x_ABI_CWindows_CFoundation_CPoint* value);
    HRESULT (STDMETHODCALLTYPE* put_StartPoint)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPathFigure* This,
        struct __x_ABI_CWindows_CFoundation_CPoint value);
    HRESULT (STDMETHODCALLTYPE* get_IsClosed)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPathFigure* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* put_IsClosed)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPathFigure* This,
        boolean value);
    HRESULT (STDMETHODCALLTYPE* get_IsFilled)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPathFigure* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* put_IsFilled)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPathFigure* This,
        boolean value);

        END_INTERFACE
    } __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPathFigureVtbl;

    interface __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPathFigure
    {
        CONST_VTBL struct __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPathFigureVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPathFigure;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPathFigure_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPathFigureStatics_INTERFACE_DEFINED__)
    #define ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPathFigureStatics_INTERFACE_DEFINED__
    typedef struct __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPathFigureStaticsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPathFigureStatics* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPathFigureStatics* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPathFigureStatics* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPathFigureStatics* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPathFigureStatics* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPathFigureStatics* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_SegmentsProperty)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPathFigureStatics* This,
        __x_ABI_CMicrosoft_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_StartPointProperty)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPathFigureStatics* This,
        __x_ABI_CMicrosoft_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_IsClosedProperty)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPathFigureStatics* This,
        __x_ABI_CMicrosoft_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_IsFilledProperty)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPathFigureStatics* This,
        __x_ABI_CMicrosoft_CUI_CXaml_CIDependencyProperty** value);

        END_INTERFACE
    } __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPathFigureStaticsVtbl;

    interface __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPathFigureStatics
    {
        CONST_VTBL struct __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPathFigureStaticsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPathFigureStatics;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPathFigureStatics_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPathGeometry_INTERFACE_DEFINED__)
    #define ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPathGeometry_INTERFACE_DEFINED__
    typedef struct __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPathGeometryVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPathGeometry* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPathGeometry* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPathGeometry* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPathGeometry* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPathGeometry* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPathGeometry* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_FillRule)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPathGeometry* This,
        enum __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CFillRule* value);
    HRESULT (STDMETHODCALLTYPE* put_FillRule)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPathGeometry* This,
        enum __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CFillRule value);
    HRESULT (STDMETHODCALLTYPE* get_Figures)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPathGeometry* This,
        __x_ABI_C__FIVector_1___x_ABI_CMicrosoft__CUI__CXaml__CMedia__CPathFigure** value);
    HRESULT (STDMETHODCALLTYPE* put_Figures)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPathGeometry* This,
        __x_ABI_C__FIVector_1___x_ABI_CMicrosoft__CUI__CXaml__CMedia__CPathFigure* value);

        END_INTERFACE
    } __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPathGeometryVtbl;

    interface __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPathGeometry
    {
        CONST_VTBL struct __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPathGeometryVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPathGeometry;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPathGeometry_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPathGeometryStatics_INTERFACE_DEFINED__)
    #define ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPathGeometryStatics_INTERFACE_DEFINED__
    typedef struct __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPathGeometryStaticsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPathGeometryStatics* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPathGeometryStatics* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPathGeometryStatics* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPathGeometryStatics* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPathGeometryStatics* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPathGeometryStatics* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_FillRuleProperty)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPathGeometryStatics* This,
        __x_ABI_CMicrosoft_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_FiguresProperty)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPathGeometryStatics* This,
        __x_ABI_CMicrosoft_CUI_CXaml_CIDependencyProperty** value);

        END_INTERFACE
    } __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPathGeometryStaticsVtbl;

    interface __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPathGeometryStatics
    {
        CONST_VTBL struct __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPathGeometryStaticsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPathGeometryStatics;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPathGeometryStatics_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPathSegment_INTERFACE_DEFINED__)
    #define ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPathSegment_INTERFACE_DEFINED__
    typedef struct __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPathSegmentVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPathSegment* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPathSegment* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPathSegment* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPathSegment* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPathSegment* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPathSegment* This,
            TrustLevel* trustLevel);
    
        END_INTERFACE
    } __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPathSegmentVtbl;

    interface __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPathSegment
    {
        CONST_VTBL struct __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPathSegmentVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPathSegment;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPathSegment_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPathSegmentFactory_INTERFACE_DEFINED__)
    #define ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPathSegmentFactory_INTERFACE_DEFINED__
    typedef struct __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPathSegmentFactoryVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPathSegmentFactory* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPathSegmentFactory* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPathSegmentFactory* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPathSegmentFactory* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPathSegmentFactory* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPathSegmentFactory* This,
            TrustLevel* trustLevel);
    
        END_INTERFACE
    } __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPathSegmentFactoryVtbl;

    interface __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPathSegmentFactory
    {
        CONST_VTBL struct __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPathSegmentFactoryVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPathSegmentFactory;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPathSegmentFactory_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPlaneProjection_INTERFACE_DEFINED__)
    #define ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPlaneProjection_INTERFACE_DEFINED__
    typedef struct __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPlaneProjectionVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPlaneProjection* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPlaneProjection* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPlaneProjection* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPlaneProjection* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPlaneProjection* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPlaneProjection* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_LocalOffsetX)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPlaneProjection* This,
        DOUBLE* value);
    HRESULT (STDMETHODCALLTYPE* put_LocalOffsetX)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPlaneProjection* This,
        DOUBLE value);
    HRESULT (STDMETHODCALLTYPE* get_LocalOffsetY)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPlaneProjection* This,
        DOUBLE* value);
    HRESULT (STDMETHODCALLTYPE* put_LocalOffsetY)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPlaneProjection* This,
        DOUBLE value);
    HRESULT (STDMETHODCALLTYPE* get_LocalOffsetZ)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPlaneProjection* This,
        DOUBLE* value);
    HRESULT (STDMETHODCALLTYPE* put_LocalOffsetZ)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPlaneProjection* This,
        DOUBLE value);
    HRESULT (STDMETHODCALLTYPE* get_RotationX)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPlaneProjection* This,
        DOUBLE* value);
    HRESULT (STDMETHODCALLTYPE* put_RotationX)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPlaneProjection* This,
        DOUBLE value);
    HRESULT (STDMETHODCALLTYPE* get_RotationY)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPlaneProjection* This,
        DOUBLE* value);
    HRESULT (STDMETHODCALLTYPE* put_RotationY)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPlaneProjection* This,
        DOUBLE value);
    HRESULT (STDMETHODCALLTYPE* get_RotationZ)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPlaneProjection* This,
        DOUBLE* value);
    HRESULT (STDMETHODCALLTYPE* put_RotationZ)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPlaneProjection* This,
        DOUBLE value);
    HRESULT (STDMETHODCALLTYPE* get_CenterOfRotationX)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPlaneProjection* This,
        DOUBLE* value);
    HRESULT (STDMETHODCALLTYPE* put_CenterOfRotationX)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPlaneProjection* This,
        DOUBLE value);
    HRESULT (STDMETHODCALLTYPE* get_CenterOfRotationY)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPlaneProjection* This,
        DOUBLE* value);
    HRESULT (STDMETHODCALLTYPE* put_CenterOfRotationY)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPlaneProjection* This,
        DOUBLE value);
    HRESULT (STDMETHODCALLTYPE* get_CenterOfRotationZ)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPlaneProjection* This,
        DOUBLE* value);
    HRESULT (STDMETHODCALLTYPE* put_CenterOfRotationZ)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPlaneProjection* This,
        DOUBLE value);
    HRESULT (STDMETHODCALLTYPE* get_GlobalOffsetX)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPlaneProjection* This,
        DOUBLE* value);
    HRESULT (STDMETHODCALLTYPE* put_GlobalOffsetX)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPlaneProjection* This,
        DOUBLE value);
    HRESULT (STDMETHODCALLTYPE* get_GlobalOffsetY)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPlaneProjection* This,
        DOUBLE* value);
    HRESULT (STDMETHODCALLTYPE* put_GlobalOffsetY)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPlaneProjection* This,
        DOUBLE value);
    HRESULT (STDMETHODCALLTYPE* get_GlobalOffsetZ)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPlaneProjection* This,
        DOUBLE* value);
    HRESULT (STDMETHODCALLTYPE* put_GlobalOffsetZ)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPlaneProjection* This,
        DOUBLE value);
    HRESULT (STDMETHODCALLTYPE* get_ProjectionMatrix)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPlaneProjection* This,
        struct __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CMedia3D_CMatrix3D* value);

        END_INTERFACE
    } __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPlaneProjectionVtbl;

    interface __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPlaneProjection
    {
        CONST_VTBL struct __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPlaneProjectionVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPlaneProjection;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPlaneProjection_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPlaneProjectionStatics_INTERFACE_DEFINED__)
    #define ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPlaneProjectionStatics_INTERFACE_DEFINED__
    typedef struct __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPlaneProjectionStaticsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPlaneProjectionStatics* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPlaneProjectionStatics* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPlaneProjectionStatics* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPlaneProjectionStatics* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPlaneProjectionStatics* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPlaneProjectionStatics* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_LocalOffsetXProperty)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPlaneProjectionStatics* This,
        __x_ABI_CMicrosoft_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_LocalOffsetYProperty)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPlaneProjectionStatics* This,
        __x_ABI_CMicrosoft_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_LocalOffsetZProperty)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPlaneProjectionStatics* This,
        __x_ABI_CMicrosoft_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_RotationXProperty)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPlaneProjectionStatics* This,
        __x_ABI_CMicrosoft_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_RotationYProperty)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPlaneProjectionStatics* This,
        __x_ABI_CMicrosoft_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_RotationZProperty)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPlaneProjectionStatics* This,
        __x_ABI_CMicrosoft_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_CenterOfRotationXProperty)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPlaneProjectionStatics* This,
        __x_ABI_CMicrosoft_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_CenterOfRotationYProperty)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPlaneProjectionStatics* This,
        __x_ABI_CMicrosoft_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_CenterOfRotationZProperty)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPlaneProjectionStatics* This,
        __x_ABI_CMicrosoft_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_GlobalOffsetXProperty)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPlaneProjectionStatics* This,
        __x_ABI_CMicrosoft_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_GlobalOffsetYProperty)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPlaneProjectionStatics* This,
        __x_ABI_CMicrosoft_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_GlobalOffsetZProperty)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPlaneProjectionStatics* This,
        __x_ABI_CMicrosoft_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_ProjectionMatrixProperty)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPlaneProjectionStatics* This,
        __x_ABI_CMicrosoft_CUI_CXaml_CIDependencyProperty** value);

        END_INTERFACE
    } __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPlaneProjectionStaticsVtbl;

    interface __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPlaneProjectionStatics
    {
        CONST_VTBL struct __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPlaneProjectionStaticsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPlaneProjectionStatics;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPlaneProjectionStatics_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPolyBezierSegment_INTERFACE_DEFINED__)
    #define ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPolyBezierSegment_INTERFACE_DEFINED__
    typedef struct __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPolyBezierSegmentVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPolyBezierSegment* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPolyBezierSegment* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPolyBezierSegment* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPolyBezierSegment* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPolyBezierSegment* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPolyBezierSegment* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Points)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPolyBezierSegment* This,
        __x_ABI_C__FIVector_1___x_ABI_CWindows__CFoundation__CPoint** value);
    HRESULT (STDMETHODCALLTYPE* put_Points)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPolyBezierSegment* This,
        __x_ABI_C__FIVector_1___x_ABI_CWindows__CFoundation__CPoint* value);

        END_INTERFACE
    } __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPolyBezierSegmentVtbl;

    interface __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPolyBezierSegment
    {
        CONST_VTBL struct __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPolyBezierSegmentVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPolyBezierSegment;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPolyBezierSegment_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPolyBezierSegmentStatics_INTERFACE_DEFINED__)
    #define ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPolyBezierSegmentStatics_INTERFACE_DEFINED__
    typedef struct __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPolyBezierSegmentStaticsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPolyBezierSegmentStatics* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPolyBezierSegmentStatics* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPolyBezierSegmentStatics* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPolyBezierSegmentStatics* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPolyBezierSegmentStatics* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPolyBezierSegmentStatics* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_PointsProperty)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPolyBezierSegmentStatics* This,
        __x_ABI_CMicrosoft_CUI_CXaml_CIDependencyProperty** value);

        END_INTERFACE
    } __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPolyBezierSegmentStaticsVtbl;

    interface __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPolyBezierSegmentStatics
    {
        CONST_VTBL struct __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPolyBezierSegmentStaticsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPolyBezierSegmentStatics;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPolyBezierSegmentStatics_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPolyLineSegment_INTERFACE_DEFINED__)
    #define ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPolyLineSegment_INTERFACE_DEFINED__
    typedef struct __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPolyLineSegmentVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPolyLineSegment* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPolyLineSegment* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPolyLineSegment* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPolyLineSegment* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPolyLineSegment* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPolyLineSegment* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Points)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPolyLineSegment* This,
        __x_ABI_C__FIVector_1___x_ABI_CWindows__CFoundation__CPoint** value);
    HRESULT (STDMETHODCALLTYPE* put_Points)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPolyLineSegment* This,
        __x_ABI_C__FIVector_1___x_ABI_CWindows__CFoundation__CPoint* value);

        END_INTERFACE
    } __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPolyLineSegmentVtbl;

    interface __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPolyLineSegment
    {
        CONST_VTBL struct __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPolyLineSegmentVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPolyLineSegment;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPolyLineSegment_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPolyLineSegmentStatics_INTERFACE_DEFINED__)
    #define ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPolyLineSegmentStatics_INTERFACE_DEFINED__
    typedef struct __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPolyLineSegmentStaticsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPolyLineSegmentStatics* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPolyLineSegmentStatics* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPolyLineSegmentStatics* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPolyLineSegmentStatics* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPolyLineSegmentStatics* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPolyLineSegmentStatics* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_PointsProperty)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPolyLineSegmentStatics* This,
        __x_ABI_CMicrosoft_CUI_CXaml_CIDependencyProperty** value);

        END_INTERFACE
    } __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPolyLineSegmentStaticsVtbl;

    interface __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPolyLineSegmentStatics
    {
        CONST_VTBL struct __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPolyLineSegmentStaticsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPolyLineSegmentStatics;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPolyLineSegmentStatics_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPolyQuadraticBezierSegment_INTERFACE_DEFINED__)
    #define ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPolyQuadraticBezierSegment_INTERFACE_DEFINED__
    typedef struct __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPolyQuadraticBezierSegmentVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPolyQuadraticBezierSegment* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPolyQuadraticBezierSegment* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPolyQuadraticBezierSegment* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPolyQuadraticBezierSegment* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPolyQuadraticBezierSegment* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPolyQuadraticBezierSegment* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Points)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPolyQuadraticBezierSegment* This,
        __x_ABI_C__FIVector_1___x_ABI_CWindows__CFoundation__CPoint** value);
    HRESULT (STDMETHODCALLTYPE* put_Points)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPolyQuadraticBezierSegment* This,
        __x_ABI_C__FIVector_1___x_ABI_CWindows__CFoundation__CPoint* value);

        END_INTERFACE
    } __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPolyQuadraticBezierSegmentVtbl;

    interface __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPolyQuadraticBezierSegment
    {
        CONST_VTBL struct __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPolyQuadraticBezierSegmentVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPolyQuadraticBezierSegment;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPolyQuadraticBezierSegment_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPolyQuadraticBezierSegmentStatics_INTERFACE_DEFINED__)
    #define ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPolyQuadraticBezierSegmentStatics_INTERFACE_DEFINED__
    typedef struct __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPolyQuadraticBezierSegmentStaticsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPolyQuadraticBezierSegmentStatics* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPolyQuadraticBezierSegmentStatics* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPolyQuadraticBezierSegmentStatics* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPolyQuadraticBezierSegmentStatics* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPolyQuadraticBezierSegmentStatics* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPolyQuadraticBezierSegmentStatics* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_PointsProperty)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPolyQuadraticBezierSegmentStatics* This,
        __x_ABI_CMicrosoft_CUI_CXaml_CIDependencyProperty** value);

        END_INTERFACE
    } __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPolyQuadraticBezierSegmentStaticsVtbl;

    interface __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPolyQuadraticBezierSegmentStatics
    {
        CONST_VTBL struct __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPolyQuadraticBezierSegmentStaticsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPolyQuadraticBezierSegmentStatics;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPolyQuadraticBezierSegmentStatics_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIProjection_INTERFACE_DEFINED__)
    #define ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIProjection_INTERFACE_DEFINED__
    typedef struct __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIProjectionVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIProjection* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIProjection* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIProjection* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIProjection* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIProjection* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIProjection* This,
            TrustLevel* trustLevel);
    
        END_INTERFACE
    } __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIProjectionVtbl;

    interface __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIProjection
    {
        CONST_VTBL struct __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIProjectionVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIProjection;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIProjection_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIProjectionFactory_INTERFACE_DEFINED__)
    #define ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIProjectionFactory_INTERFACE_DEFINED__
    typedef struct __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIProjectionFactoryVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIProjectionFactory* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIProjectionFactory* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIProjectionFactory* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIProjectionFactory* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIProjectionFactory* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIProjectionFactory* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* CreateInstance)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIProjectionFactory* This,
        IInspectable* baseInterface,
        IInspectable** innerInterface,
        __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIProjection** value);

        END_INTERFACE
    } __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIProjectionFactoryVtbl;

    interface __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIProjectionFactory
    {
        CONST_VTBL struct __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIProjectionFactoryVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIProjectionFactory;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIProjectionFactory_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIQuadraticBezierSegment_INTERFACE_DEFINED__)
    #define ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIQuadraticBezierSegment_INTERFACE_DEFINED__
    typedef struct __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIQuadraticBezierSegmentVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIQuadraticBezierSegment* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIQuadraticBezierSegment* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIQuadraticBezierSegment* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIQuadraticBezierSegment* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIQuadraticBezierSegment* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIQuadraticBezierSegment* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Point1)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIQuadraticBezierSegment* This,
        struct __x_ABI_CWindows_CFoundation_CPoint* value);
    HRESULT (STDMETHODCALLTYPE* put_Point1)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIQuadraticBezierSegment* This,
        struct __x_ABI_CWindows_CFoundation_CPoint value);
    HRESULT (STDMETHODCALLTYPE* get_Point2)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIQuadraticBezierSegment* This,
        struct __x_ABI_CWindows_CFoundation_CPoint* value);
    HRESULT (STDMETHODCALLTYPE* put_Point2)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIQuadraticBezierSegment* This,
        struct __x_ABI_CWindows_CFoundation_CPoint value);

        END_INTERFACE
    } __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIQuadraticBezierSegmentVtbl;

    interface __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIQuadraticBezierSegment
    {
        CONST_VTBL struct __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIQuadraticBezierSegmentVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIQuadraticBezierSegment;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIQuadraticBezierSegment_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIQuadraticBezierSegmentStatics_INTERFACE_DEFINED__)
    #define ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIQuadraticBezierSegmentStatics_INTERFACE_DEFINED__
    typedef struct __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIQuadraticBezierSegmentStaticsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIQuadraticBezierSegmentStatics* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIQuadraticBezierSegmentStatics* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIQuadraticBezierSegmentStatics* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIQuadraticBezierSegmentStatics* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIQuadraticBezierSegmentStatics* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIQuadraticBezierSegmentStatics* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Point1Property)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIQuadraticBezierSegmentStatics* This,
        __x_ABI_CMicrosoft_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_Point2Property)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIQuadraticBezierSegmentStatics* This,
        __x_ABI_CMicrosoft_CUI_CXaml_CIDependencyProperty** value);

        END_INTERFACE
    } __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIQuadraticBezierSegmentStaticsVtbl;

    interface __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIQuadraticBezierSegmentStatics
    {
        CONST_VTBL struct __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIQuadraticBezierSegmentStaticsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIQuadraticBezierSegmentStatics;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIQuadraticBezierSegmentStatics_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIRadialGradientBrush_INTERFACE_DEFINED__)
    #define ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIRadialGradientBrush_INTERFACE_DEFINED__
    typedef struct __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIRadialGradientBrushVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIRadialGradientBrush* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIRadialGradientBrush* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIRadialGradientBrush* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIRadialGradientBrush* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIRadialGradientBrush* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIRadialGradientBrush* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Center)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIRadialGradientBrush* This,
        struct __x_ABI_CWindows_CFoundation_CPoint* value);
    HRESULT (STDMETHODCALLTYPE* put_Center)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIRadialGradientBrush* This,
        struct __x_ABI_CWindows_CFoundation_CPoint value);
    HRESULT (STDMETHODCALLTYPE* get_RadiusX)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIRadialGradientBrush* This,
        DOUBLE* value);
    HRESULT (STDMETHODCALLTYPE* put_RadiusX)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIRadialGradientBrush* This,
        DOUBLE value);
    HRESULT (STDMETHODCALLTYPE* get_RadiusY)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIRadialGradientBrush* This,
        DOUBLE* value);
    HRESULT (STDMETHODCALLTYPE* put_RadiusY)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIRadialGradientBrush* This,
        DOUBLE value);
    HRESULT (STDMETHODCALLTYPE* get_GradientOrigin)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIRadialGradientBrush* This,
        struct __x_ABI_CWindows_CFoundation_CPoint* value);
    HRESULT (STDMETHODCALLTYPE* put_GradientOrigin)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIRadialGradientBrush* This,
        struct __x_ABI_CWindows_CFoundation_CPoint value);
    HRESULT (STDMETHODCALLTYPE* get_MappingMode)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIRadialGradientBrush* This,
        enum __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CBrushMappingMode* value);
    HRESULT (STDMETHODCALLTYPE* put_MappingMode)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIRadialGradientBrush* This,
        enum __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CBrushMappingMode value);
    HRESULT (STDMETHODCALLTYPE* get_InterpolationSpace)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIRadialGradientBrush* This,
        enum __x_ABI_CMicrosoft_CUI_CComposition_CCompositionColorSpace* value);
    HRESULT (STDMETHODCALLTYPE* put_InterpolationSpace)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIRadialGradientBrush* This,
        enum __x_ABI_CMicrosoft_CUI_CComposition_CCompositionColorSpace value);
    HRESULT (STDMETHODCALLTYPE* get_SpreadMethod)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIRadialGradientBrush* This,
        enum __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CGradientSpreadMethod* value);
    HRESULT (STDMETHODCALLTYPE* put_SpreadMethod)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIRadialGradientBrush* This,
        enum __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CGradientSpreadMethod value);
    HRESULT (STDMETHODCALLTYPE* get_GradientStops)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIRadialGradientBrush* This,
        __x_ABI_C__FIObservableVector_1___x_ABI_CMicrosoft__CUI__CXaml__CMedia__CGradientStop** value);

        END_INTERFACE
    } __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIRadialGradientBrushVtbl;

    interface __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIRadialGradientBrush
    {
        CONST_VTBL struct __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIRadialGradientBrushVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIRadialGradientBrush;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIRadialGradientBrush_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIRadialGradientBrushFactory_INTERFACE_DEFINED__)
    #define ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIRadialGradientBrushFactory_INTERFACE_DEFINED__
    typedef struct __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIRadialGradientBrushFactoryVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIRadialGradientBrushFactory* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIRadialGradientBrushFactory* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIRadialGradientBrushFactory* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIRadialGradientBrushFactory* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIRadialGradientBrushFactory* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIRadialGradientBrushFactory* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* CreateInstance)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIRadialGradientBrushFactory* This,
        IInspectable* baseInterface,
        IInspectable** innerInterface,
        __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIRadialGradientBrush** value);

        END_INTERFACE
    } __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIRadialGradientBrushFactoryVtbl;

    interface __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIRadialGradientBrushFactory
    {
        CONST_VTBL struct __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIRadialGradientBrushFactoryVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIRadialGradientBrushFactory;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIRadialGradientBrushFactory_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIRadialGradientBrushStatics_INTERFACE_DEFINED__)
    #define ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIRadialGradientBrushStatics_INTERFACE_DEFINED__
    typedef struct __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIRadialGradientBrushStaticsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIRadialGradientBrushStatics* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIRadialGradientBrushStatics* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIRadialGradientBrushStatics* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIRadialGradientBrushStatics* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIRadialGradientBrushStatics* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIRadialGradientBrushStatics* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_CenterProperty)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIRadialGradientBrushStatics* This,
        __x_ABI_CMicrosoft_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_RadiusXProperty)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIRadialGradientBrushStatics* This,
        __x_ABI_CMicrosoft_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_RadiusYProperty)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIRadialGradientBrushStatics* This,
        __x_ABI_CMicrosoft_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_GradientOriginProperty)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIRadialGradientBrushStatics* This,
        __x_ABI_CMicrosoft_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_InterpolationSpaceProperty)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIRadialGradientBrushStatics* This,
        __x_ABI_CMicrosoft_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_MappingModeProperty)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIRadialGradientBrushStatics* This,
        __x_ABI_CMicrosoft_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_SpreadMethodProperty)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIRadialGradientBrushStatics* This,
        __x_ABI_CMicrosoft_CUI_CXaml_CIDependencyProperty** value);

        END_INTERFACE
    } __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIRadialGradientBrushStaticsVtbl;

    interface __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIRadialGradientBrushStatics
    {
        CONST_VTBL struct __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIRadialGradientBrushStaticsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIRadialGradientBrushStatics;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIRadialGradientBrushStatics_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIRectangleGeometry_INTERFACE_DEFINED__)
    #define ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIRectangleGeometry_INTERFACE_DEFINED__
    typedef struct __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIRectangleGeometryVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIRectangleGeometry* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIRectangleGeometry* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIRectangleGeometry* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIRectangleGeometry* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIRectangleGeometry* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIRectangleGeometry* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Rect)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIRectangleGeometry* This,
        struct __x_ABI_CWindows_CFoundation_CRect* value);
    HRESULT (STDMETHODCALLTYPE* put_Rect)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIRectangleGeometry* This,
        struct __x_ABI_CWindows_CFoundation_CRect value);

        END_INTERFACE
    } __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIRectangleGeometryVtbl;

    interface __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIRectangleGeometry
    {
        CONST_VTBL struct __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIRectangleGeometryVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIRectangleGeometry;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIRectangleGeometry_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIRectangleGeometryStatics_INTERFACE_DEFINED__)
    #define ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIRectangleGeometryStatics_INTERFACE_DEFINED__
    typedef struct __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIRectangleGeometryStaticsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIRectangleGeometryStatics* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIRectangleGeometryStatics* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIRectangleGeometryStatics* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIRectangleGeometryStatics* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIRectangleGeometryStatics* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIRectangleGeometryStatics* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_RectProperty)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIRectangleGeometryStatics* This,
        __x_ABI_CMicrosoft_CUI_CXaml_CIDependencyProperty** value);

        END_INTERFACE
    } __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIRectangleGeometryStaticsVtbl;

    interface __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIRectangleGeometryStatics
    {
        CONST_VTBL struct __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIRectangleGeometryStaticsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIRectangleGeometryStatics;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIRectangleGeometryStatics_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIRenderedEventArgs_INTERFACE_DEFINED__)
    #define ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIRenderedEventArgs_INTERFACE_DEFINED__
    typedef struct __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIRenderedEventArgsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIRenderedEventArgs* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIRenderedEventArgs* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIRenderedEventArgs* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIRenderedEventArgs* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIRenderedEventArgs* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIRenderedEventArgs* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_FrameDuration)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIRenderedEventArgs* This,
        struct __x_ABI_CWindows_CFoundation_CTimeSpan* value);

        END_INTERFACE
    } __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIRenderedEventArgsVtbl;

    interface __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIRenderedEventArgs
    {
        CONST_VTBL struct __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIRenderedEventArgsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIRenderedEventArgs;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIRenderedEventArgs_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIRenderingEventArgs_INTERFACE_DEFINED__)
    #define ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIRenderingEventArgs_INTERFACE_DEFINED__
    typedef struct __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIRenderingEventArgsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIRenderingEventArgs* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIRenderingEventArgs* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIRenderingEventArgs* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIRenderingEventArgs* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIRenderingEventArgs* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIRenderingEventArgs* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_RenderingTime)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIRenderingEventArgs* This,
        struct __x_ABI_CWindows_CFoundation_CTimeSpan* value);

        END_INTERFACE
    } __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIRenderingEventArgsVtbl;

    interface __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIRenderingEventArgs
    {
        CONST_VTBL struct __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIRenderingEventArgsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIRenderingEventArgs;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIRenderingEventArgs_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIRotateTransform_INTERFACE_DEFINED__)
    #define ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIRotateTransform_INTERFACE_DEFINED__
    typedef struct __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIRotateTransformVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIRotateTransform* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIRotateTransform* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIRotateTransform* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIRotateTransform* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIRotateTransform* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIRotateTransform* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_CenterX)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIRotateTransform* This,
        DOUBLE* value);
    HRESULT (STDMETHODCALLTYPE* put_CenterX)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIRotateTransform* This,
        DOUBLE value);
    HRESULT (STDMETHODCALLTYPE* get_CenterY)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIRotateTransform* This,
        DOUBLE* value);
    HRESULT (STDMETHODCALLTYPE* put_CenterY)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIRotateTransform* This,
        DOUBLE value);
    HRESULT (STDMETHODCALLTYPE* get_Angle)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIRotateTransform* This,
        DOUBLE* value);
    HRESULT (STDMETHODCALLTYPE* put_Angle)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIRotateTransform* This,
        DOUBLE value);

        END_INTERFACE
    } __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIRotateTransformVtbl;

    interface __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIRotateTransform
    {
        CONST_VTBL struct __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIRotateTransformVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIRotateTransform;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIRotateTransform_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIRotateTransformStatics_INTERFACE_DEFINED__)
    #define ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIRotateTransformStatics_INTERFACE_DEFINED__
    typedef struct __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIRotateTransformStaticsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIRotateTransformStatics* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIRotateTransformStatics* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIRotateTransformStatics* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIRotateTransformStatics* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIRotateTransformStatics* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIRotateTransformStatics* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_CenterXProperty)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIRotateTransformStatics* This,
        __x_ABI_CMicrosoft_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_CenterYProperty)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIRotateTransformStatics* This,
        __x_ABI_CMicrosoft_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_AngleProperty)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIRotateTransformStatics* This,
        __x_ABI_CMicrosoft_CUI_CXaml_CIDependencyProperty** value);

        END_INTERFACE
    } __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIRotateTransformStaticsVtbl;

    interface __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIRotateTransformStatics
    {
        CONST_VTBL struct __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIRotateTransformStaticsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIRotateTransformStatics;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIRotateTransformStatics_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIScaleTransform_INTERFACE_DEFINED__)
    #define ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIScaleTransform_INTERFACE_DEFINED__
    typedef struct __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIScaleTransformVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIScaleTransform* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIScaleTransform* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIScaleTransform* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIScaleTransform* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIScaleTransform* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIScaleTransform* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_CenterX)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIScaleTransform* This,
        DOUBLE* value);
    HRESULT (STDMETHODCALLTYPE* put_CenterX)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIScaleTransform* This,
        DOUBLE value);
    HRESULT (STDMETHODCALLTYPE* get_CenterY)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIScaleTransform* This,
        DOUBLE* value);
    HRESULT (STDMETHODCALLTYPE* put_CenterY)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIScaleTransform* This,
        DOUBLE value);
    HRESULT (STDMETHODCALLTYPE* get_ScaleX)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIScaleTransform* This,
        DOUBLE* value);
    HRESULT (STDMETHODCALLTYPE* put_ScaleX)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIScaleTransform* This,
        DOUBLE value);
    HRESULT (STDMETHODCALLTYPE* get_ScaleY)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIScaleTransform* This,
        DOUBLE* value);
    HRESULT (STDMETHODCALLTYPE* put_ScaleY)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIScaleTransform* This,
        DOUBLE value);

        END_INTERFACE
    } __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIScaleTransformVtbl;

    interface __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIScaleTransform
    {
        CONST_VTBL struct __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIScaleTransformVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIScaleTransform;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIScaleTransform_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIScaleTransformStatics_INTERFACE_DEFINED__)
    #define ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIScaleTransformStatics_INTERFACE_DEFINED__
    typedef struct __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIScaleTransformStaticsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIScaleTransformStatics* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIScaleTransformStatics* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIScaleTransformStatics* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIScaleTransformStatics* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIScaleTransformStatics* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIScaleTransformStatics* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_CenterXProperty)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIScaleTransformStatics* This,
        __x_ABI_CMicrosoft_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_CenterYProperty)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIScaleTransformStatics* This,
        __x_ABI_CMicrosoft_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_ScaleXProperty)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIScaleTransformStatics* This,
        __x_ABI_CMicrosoft_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_ScaleYProperty)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIScaleTransformStatics* This,
        __x_ABI_CMicrosoft_CUI_CXaml_CIDependencyProperty** value);

        END_INTERFACE
    } __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIScaleTransformStaticsVtbl;

    interface __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIScaleTransformStatics
    {
        CONST_VTBL struct __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIScaleTransformStaticsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIScaleTransformStatics;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIScaleTransformStatics_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIShadow_INTERFACE_DEFINED__)
    #define ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIShadow_INTERFACE_DEFINED__
    typedef struct __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIShadowVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIShadow* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIShadow* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIShadow* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIShadow* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIShadow* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIShadow* This,
            TrustLevel* trustLevel);
    
        END_INTERFACE
    } __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIShadowVtbl;

    interface __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIShadow
    {
        CONST_VTBL struct __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIShadowVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIShadow;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIShadow_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIShadowFactory_INTERFACE_DEFINED__)
    #define ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIShadowFactory_INTERFACE_DEFINED__
    typedef struct __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIShadowFactoryVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIShadowFactory* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIShadowFactory* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIShadowFactory* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIShadowFactory* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIShadowFactory* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIShadowFactory* This,
            TrustLevel* trustLevel);
    
        END_INTERFACE
    } __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIShadowFactoryVtbl;

    interface __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIShadowFactory
    {
        CONST_VTBL struct __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIShadowFactoryVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIShadowFactory;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIShadowFactory_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CISkewTransform_INTERFACE_DEFINED__)
    #define ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CISkewTransform_INTERFACE_DEFINED__
    typedef struct __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CISkewTransformVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CISkewTransform* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CISkewTransform* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CISkewTransform* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CISkewTransform* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CISkewTransform* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CISkewTransform* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_CenterX)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CISkewTransform* This,
        DOUBLE* value);
    HRESULT (STDMETHODCALLTYPE* put_CenterX)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CISkewTransform* This,
        DOUBLE value);
    HRESULT (STDMETHODCALLTYPE* get_CenterY)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CISkewTransform* This,
        DOUBLE* value);
    HRESULT (STDMETHODCALLTYPE* put_CenterY)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CISkewTransform* This,
        DOUBLE value);
    HRESULT (STDMETHODCALLTYPE* get_AngleX)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CISkewTransform* This,
        DOUBLE* value);
    HRESULT (STDMETHODCALLTYPE* put_AngleX)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CISkewTransform* This,
        DOUBLE value);
    HRESULT (STDMETHODCALLTYPE* get_AngleY)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CISkewTransform* This,
        DOUBLE* value);
    HRESULT (STDMETHODCALLTYPE* put_AngleY)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CISkewTransform* This,
        DOUBLE value);

        END_INTERFACE
    } __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CISkewTransformVtbl;

    interface __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CISkewTransform
    {
        CONST_VTBL struct __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CISkewTransformVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CMedia_CISkewTransform;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CISkewTransform_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CISkewTransformStatics_INTERFACE_DEFINED__)
    #define ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CISkewTransformStatics_INTERFACE_DEFINED__
    typedef struct __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CISkewTransformStaticsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CISkewTransformStatics* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CISkewTransformStatics* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CISkewTransformStatics* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CISkewTransformStatics* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CISkewTransformStatics* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CISkewTransformStatics* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_CenterXProperty)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CISkewTransformStatics* This,
        __x_ABI_CMicrosoft_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_CenterYProperty)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CISkewTransformStatics* This,
        __x_ABI_CMicrosoft_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_AngleXProperty)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CISkewTransformStatics* This,
        __x_ABI_CMicrosoft_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_AngleYProperty)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CISkewTransformStatics* This,
        __x_ABI_CMicrosoft_CUI_CXaml_CIDependencyProperty** value);

        END_INTERFACE
    } __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CISkewTransformStaticsVtbl;

    interface __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CISkewTransformStatics
    {
        CONST_VTBL struct __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CISkewTransformStaticsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CMedia_CISkewTransformStatics;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CISkewTransformStatics_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CISolidColorBrush_INTERFACE_DEFINED__)
    #define ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CISolidColorBrush_INTERFACE_DEFINED__
    typedef struct __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CISolidColorBrushVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CISolidColorBrush* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CISolidColorBrush* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CISolidColorBrush* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CISolidColorBrush* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CISolidColorBrush* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CISolidColorBrush* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Color)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CISolidColorBrush* This,
        struct __x_ABI_CWindows_CUI_CColor* value);
    HRESULT (STDMETHODCALLTYPE* put_Color)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CISolidColorBrush* This,
        struct __x_ABI_CWindows_CUI_CColor value);

        END_INTERFACE
    } __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CISolidColorBrushVtbl;

    interface __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CISolidColorBrush
    {
        CONST_VTBL struct __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CISolidColorBrushVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CMedia_CISolidColorBrush;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CISolidColorBrush_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CISolidColorBrushFactory_INTERFACE_DEFINED__)
    #define ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CISolidColorBrushFactory_INTERFACE_DEFINED__
    typedef struct __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CISolidColorBrushFactoryVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CISolidColorBrushFactory* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CISolidColorBrushFactory* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CISolidColorBrushFactory* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CISolidColorBrushFactory* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CISolidColorBrushFactory* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CISolidColorBrushFactory* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* CreateInstanceWithColor)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CISolidColorBrushFactory* This,
        struct __x_ABI_CWindows_CUI_CColor color,
        __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CISolidColorBrush** value);

        END_INTERFACE
    } __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CISolidColorBrushFactoryVtbl;

    interface __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CISolidColorBrushFactory
    {
        CONST_VTBL struct __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CISolidColorBrushFactoryVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CMedia_CISolidColorBrushFactory;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CISolidColorBrushFactory_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CISolidColorBrushStatics_INTERFACE_DEFINED__)
    #define ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CISolidColorBrushStatics_INTERFACE_DEFINED__
    typedef struct __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CISolidColorBrushStaticsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CISolidColorBrushStatics* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CISolidColorBrushStatics* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CISolidColorBrushStatics* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CISolidColorBrushStatics* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CISolidColorBrushStatics* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CISolidColorBrushStatics* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_ColorProperty)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CISolidColorBrushStatics* This,
        __x_ABI_CMicrosoft_CUI_CXaml_CIDependencyProperty** value);

        END_INTERFACE
    } __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CISolidColorBrushStaticsVtbl;

    interface __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CISolidColorBrushStatics
    {
        CONST_VTBL struct __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CISolidColorBrushStaticsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CMedia_CISolidColorBrushStatics;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CISolidColorBrushStatics_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CISystemBackdrop_INTERFACE_DEFINED__)
    #define ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CISystemBackdrop_INTERFACE_DEFINED__
    typedef struct __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CISystemBackdropVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CISystemBackdrop* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CISystemBackdrop* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CISystemBackdrop* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CISystemBackdrop* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CISystemBackdrop* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CISystemBackdrop* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* GetDefaultSystemBackdropConfiguration)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CISystemBackdrop* This,
        __x_ABI_CMicrosoft_CUI_CComposition_CICompositionSupportsSystemBackdrop* target,
        __x_ABI_CMicrosoft_CUI_CXaml_CIXamlRoot* xamlRoot,
        __x_ABI_CMicrosoft_CUI_CComposition_CSystemBackdrops_CISystemBackdropConfiguration** result);

        END_INTERFACE
    } __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CISystemBackdropVtbl;

    interface __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CISystemBackdrop
    {
        CONST_VTBL struct __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CISystemBackdropVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CMedia_CISystemBackdrop;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CISystemBackdrop_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CISystemBackdropFactory_INTERFACE_DEFINED__)
    #define ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CISystemBackdropFactory_INTERFACE_DEFINED__
    typedef struct __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CISystemBackdropFactoryVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CISystemBackdropFactory* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CISystemBackdropFactory* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CISystemBackdropFactory* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CISystemBackdropFactory* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CISystemBackdropFactory* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CISystemBackdropFactory* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* CreateInstance)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CISystemBackdropFactory* This,
        IInspectable* baseInterface,
        IInspectable** innerInterface,
        __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CISystemBackdrop** value);

        END_INTERFACE
    } __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CISystemBackdropFactoryVtbl;

    interface __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CISystemBackdropFactory
    {
        CONST_VTBL struct __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CISystemBackdropFactoryVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CMedia_CISystemBackdropFactory;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CISystemBackdropFactory_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CISystemBackdropOverrides_INTERFACE_DEFINED__)
    #define ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CISystemBackdropOverrides_INTERFACE_DEFINED__
    typedef struct __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CISystemBackdropOverridesVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CISystemBackdropOverrides* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CISystemBackdropOverrides* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CISystemBackdropOverrides* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CISystemBackdropOverrides* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CISystemBackdropOverrides* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CISystemBackdropOverrides* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* OnTargetConnected)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CISystemBackdropOverrides* This,
        __x_ABI_CMicrosoft_CUI_CComposition_CICompositionSupportsSystemBackdrop* connectedTarget,
        __x_ABI_CMicrosoft_CUI_CXaml_CIXamlRoot* xamlRoot);
    HRESULT (STDMETHODCALLTYPE* OnTargetDisconnected)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CISystemBackdropOverrides* This,
        __x_ABI_CMicrosoft_CUI_CComposition_CICompositionSupportsSystemBackdrop* disconnectedTarget);
    HRESULT (STDMETHODCALLTYPE* OnDefaultSystemBackdropConfigurationChanged)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CISystemBackdropOverrides* This,
        __x_ABI_CMicrosoft_CUI_CComposition_CICompositionSupportsSystemBackdrop* target,
        __x_ABI_CMicrosoft_CUI_CXaml_CIXamlRoot* xamlRoot);

        END_INTERFACE
    } __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CISystemBackdropOverridesVtbl;

    interface __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CISystemBackdropOverrides
    {
        CONST_VTBL struct __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CISystemBackdropOverridesVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CMedia_CISystemBackdropOverrides;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CISystemBackdropOverrides_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIThemeShadow_INTERFACE_DEFINED__)
    #define ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIThemeShadow_INTERFACE_DEFINED__
    typedef struct __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIThemeShadowVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIThemeShadow* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIThemeShadow* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIThemeShadow* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIThemeShadow* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIThemeShadow* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIThemeShadow* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Receivers)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIThemeShadow* This,
        __x_ABI_C__FIVector_1___x_ABI_CMicrosoft__CUI__CXaml__CUIElement** value);

        END_INTERFACE
    } __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIThemeShadowVtbl;

    interface __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIThemeShadow
    {
        CONST_VTBL struct __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIThemeShadowVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIThemeShadow;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIThemeShadow_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIThemeShadowFactory_INTERFACE_DEFINED__)
    #define ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIThemeShadowFactory_INTERFACE_DEFINED__
    typedef struct __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIThemeShadowFactoryVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIThemeShadowFactory* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIThemeShadowFactory* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIThemeShadowFactory* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIThemeShadowFactory* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIThemeShadowFactory* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIThemeShadowFactory* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* CreateInstance)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIThemeShadowFactory* This,
        IInspectable* baseInterface,
        IInspectable** innerInterface,
        __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIThemeShadow** value);

        END_INTERFACE
    } __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIThemeShadowFactoryVtbl;

    interface __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIThemeShadowFactory
    {
        CONST_VTBL struct __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIThemeShadowFactoryVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIThemeShadowFactory;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIThemeShadowFactory_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CITileBrush_INTERFACE_DEFINED__)
    #define ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CITileBrush_INTERFACE_DEFINED__
    typedef struct __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CITileBrushVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CITileBrush* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CITileBrush* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CITileBrush* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CITileBrush* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CITileBrush* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CITileBrush* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_AlignmentX)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CITileBrush* This,
        enum __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CAlignmentX* value);
    HRESULT (STDMETHODCALLTYPE* put_AlignmentX)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CITileBrush* This,
        enum __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CAlignmentX value);
    HRESULT (STDMETHODCALLTYPE* get_AlignmentY)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CITileBrush* This,
        enum __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CAlignmentY* value);
    HRESULT (STDMETHODCALLTYPE* put_AlignmentY)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CITileBrush* This,
        enum __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CAlignmentY value);
    HRESULT (STDMETHODCALLTYPE* get_Stretch)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CITileBrush* This,
        enum __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CStretch* value);
    HRESULT (STDMETHODCALLTYPE* put_Stretch)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CITileBrush* This,
        enum __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CStretch value);

        END_INTERFACE
    } __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CITileBrushVtbl;

    interface __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CITileBrush
    {
        CONST_VTBL struct __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CITileBrushVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CMedia_CITileBrush;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CITileBrush_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CITileBrushFactory_INTERFACE_DEFINED__)
    #define ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CITileBrushFactory_INTERFACE_DEFINED__
    typedef struct __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CITileBrushFactoryVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CITileBrushFactory* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CITileBrushFactory* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CITileBrushFactory* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CITileBrushFactory* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CITileBrushFactory* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CITileBrushFactory* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* CreateInstance)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CITileBrushFactory* This,
        IInspectable* baseInterface,
        IInspectable** innerInterface,
        __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CITileBrush** value);

        END_INTERFACE
    } __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CITileBrushFactoryVtbl;

    interface __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CITileBrushFactory
    {
        CONST_VTBL struct __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CITileBrushFactoryVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CMedia_CITileBrushFactory;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CITileBrushFactory_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CITileBrushStatics_INTERFACE_DEFINED__)
    #define ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CITileBrushStatics_INTERFACE_DEFINED__
    typedef struct __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CITileBrushStaticsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CITileBrushStatics* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CITileBrushStatics* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CITileBrushStatics* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CITileBrushStatics* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CITileBrushStatics* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CITileBrushStatics* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_AlignmentXProperty)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CITileBrushStatics* This,
        __x_ABI_CMicrosoft_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_AlignmentYProperty)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CITileBrushStatics* This,
        __x_ABI_CMicrosoft_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_StretchProperty)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CITileBrushStatics* This,
        __x_ABI_CMicrosoft_CUI_CXaml_CIDependencyProperty** value);

        END_INTERFACE
    } __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CITileBrushStaticsVtbl;

    interface __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CITileBrushStatics
    {
        CONST_VTBL struct __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CITileBrushStaticsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CMedia_CITileBrushStatics;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CITileBrushStatics_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CITransform_INTERFACE_DEFINED__)
    #define ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CITransform_INTERFACE_DEFINED__
    typedef struct __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CITransformVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CITransform* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CITransform* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CITransform* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CITransform* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CITransform* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CITransform* This,
            TrustLevel* trustLevel);
    
        END_INTERFACE
    } __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CITransformVtbl;

    interface __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CITransform
    {
        CONST_VTBL struct __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CITransformVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CMedia_CITransform;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CITransform_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CITransformFactory_INTERFACE_DEFINED__)
    #define ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CITransformFactory_INTERFACE_DEFINED__
    typedef struct __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CITransformFactoryVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CITransformFactory* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CITransformFactory* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CITransformFactory* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CITransformFactory* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CITransformFactory* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CITransformFactory* This,
            TrustLevel* trustLevel);
    
        END_INTERFACE
    } __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CITransformFactoryVtbl;

    interface __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CITransformFactory
    {
        CONST_VTBL struct __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CITransformFactoryVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CMedia_CITransformFactory;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CITransformFactory_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CITransformGroup_INTERFACE_DEFINED__)
    #define ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CITransformGroup_INTERFACE_DEFINED__
    typedef struct __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CITransformGroupVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CITransformGroup* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CITransformGroup* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CITransformGroup* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CITransformGroup* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CITransformGroup* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CITransformGroup* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Children)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CITransformGroup* This,
        __x_ABI_C__FIVector_1___x_ABI_CMicrosoft__CUI__CXaml__CMedia__CTransform** value);
    HRESULT (STDMETHODCALLTYPE* put_Children)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CITransformGroup* This,
        __x_ABI_C__FIVector_1___x_ABI_CMicrosoft__CUI__CXaml__CMedia__CTransform* value);
    HRESULT (STDMETHODCALLTYPE* get_Value)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CITransformGroup* This,
        struct __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CMatrix* value);

        END_INTERFACE
    } __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CITransformGroupVtbl;

    interface __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CITransformGroup
    {
        CONST_VTBL struct __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CITransformGroupVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CMedia_CITransformGroup;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CITransformGroup_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CITransformGroupStatics_INTERFACE_DEFINED__)
    #define ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CITransformGroupStatics_INTERFACE_DEFINED__
    typedef struct __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CITransformGroupStaticsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CITransformGroupStatics* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CITransformGroupStatics* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CITransformGroupStatics* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CITransformGroupStatics* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CITransformGroupStatics* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CITransformGroupStatics* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_ChildrenProperty)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CITransformGroupStatics* This,
        __x_ABI_CMicrosoft_CUI_CXaml_CIDependencyProperty** value);

        END_INTERFACE
    } __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CITransformGroupStaticsVtbl;

    interface __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CITransformGroupStatics
    {
        CONST_VTBL struct __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CITransformGroupStaticsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CMedia_CITransformGroupStatics;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CITransformGroupStatics_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CITranslateTransform_INTERFACE_DEFINED__)
    #define ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CITranslateTransform_INTERFACE_DEFINED__
    typedef struct __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CITranslateTransformVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CITranslateTransform* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CITranslateTransform* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CITranslateTransform* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CITranslateTransform* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CITranslateTransform* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CITranslateTransform* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_X)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CITranslateTransform* This,
        DOUBLE* value);
    HRESULT (STDMETHODCALLTYPE* put_X)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CITranslateTransform* This,
        DOUBLE value);
    HRESULT (STDMETHODCALLTYPE* get_Y)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CITranslateTransform* This,
        DOUBLE* value);
    HRESULT (STDMETHODCALLTYPE* put_Y)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CITranslateTransform* This,
        DOUBLE value);

        END_INTERFACE
    } __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CITranslateTransformVtbl;

    interface __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CITranslateTransform
    {
        CONST_VTBL struct __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CITranslateTransformVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CMedia_CITranslateTransform;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CITranslateTransform_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CITranslateTransformStatics_INTERFACE_DEFINED__)
    #define ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CITranslateTransformStatics_INTERFACE_DEFINED__
    typedef struct __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CITranslateTransformStaticsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CITranslateTransformStatics* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CITranslateTransformStatics* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CITranslateTransformStatics* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CITranslateTransformStatics* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CITranslateTransformStatics* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CITranslateTransformStatics* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_XProperty)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CITranslateTransformStatics* This,
        __x_ABI_CMicrosoft_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_YProperty)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CITranslateTransformStatics* This,
        __x_ABI_CMicrosoft_CUI_CXaml_CIDependencyProperty** value);

        END_INTERFACE
    } __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CITranslateTransformStaticsVtbl;

    interface __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CITranslateTransformStatics
    {
        CONST_VTBL struct __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CITranslateTransformStaticsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CMedia_CITranslateTransformStatics;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CITranslateTransformStatics_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIVisualTreeHelper_INTERFACE_DEFINED__)
    #define ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIVisualTreeHelper_INTERFACE_DEFINED__
    typedef struct __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIVisualTreeHelperVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIVisualTreeHelper* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIVisualTreeHelper* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIVisualTreeHelper* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIVisualTreeHelper* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIVisualTreeHelper* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIVisualTreeHelper* This,
            TrustLevel* trustLevel);
    
        END_INTERFACE
    } __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIVisualTreeHelperVtbl;

    interface __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIVisualTreeHelper
    {
        CONST_VTBL struct __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIVisualTreeHelperVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIVisualTreeHelper;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIVisualTreeHelper_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIVisualTreeHelperStatics_INTERFACE_DEFINED__)
    #define ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIVisualTreeHelperStatics_INTERFACE_DEFINED__
    typedef struct __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIVisualTreeHelperStaticsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIVisualTreeHelperStatics* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIVisualTreeHelperStatics* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIVisualTreeHelperStatics* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIVisualTreeHelperStatics* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIVisualTreeHelperStatics* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIVisualTreeHelperStatics* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* FindElementsInHostCoordinatesPoint)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIVisualTreeHelperStatics* This,
        struct __x_ABI_CWindows_CFoundation_CPoint intersectingPoint,
        __x_ABI_CMicrosoft_CUI_CXaml_CIUIElement* subtree,
        __x_ABI_C__FIIterable_1___x_ABI_CMicrosoft__CUI__CXaml__CUIElement** result);
    HRESULT (STDMETHODCALLTYPE* FindElementsInHostCoordinatesRect)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIVisualTreeHelperStatics* This,
        struct __x_ABI_CWindows_CFoundation_CRect intersectingRect,
        __x_ABI_CMicrosoft_CUI_CXaml_CIUIElement* subtree,
        __x_ABI_C__FIIterable_1___x_ABI_CMicrosoft__CUI__CXaml__CUIElement** result);
    HRESULT (STDMETHODCALLTYPE* FindAllElementsInHostCoordinatesPoint)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIVisualTreeHelperStatics* This,
        struct __x_ABI_CWindows_CFoundation_CPoint intersectingPoint,
        __x_ABI_CMicrosoft_CUI_CXaml_CIUIElement* subtree,
        boolean includeAllElements,
        __x_ABI_C__FIIterable_1___x_ABI_CMicrosoft__CUI__CXaml__CUIElement** result);
    HRESULT (STDMETHODCALLTYPE* FindAllElementsInHostCoordinatesRect)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIVisualTreeHelperStatics* This,
        struct __x_ABI_CWindows_CFoundation_CRect intersectingRect,
        __x_ABI_CMicrosoft_CUI_CXaml_CIUIElement* subtree,
        boolean includeAllElements,
        __x_ABI_C__FIIterable_1___x_ABI_CMicrosoft__CUI__CXaml__CUIElement** result);
    HRESULT (STDMETHODCALLTYPE* GetChild)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIVisualTreeHelperStatics* This,
        __x_ABI_CMicrosoft_CUI_CXaml_CIDependencyObject* reference,
        INT32 childIndex,
        __x_ABI_CMicrosoft_CUI_CXaml_CIDependencyObject** result);
    HRESULT (STDMETHODCALLTYPE* GetChildrenCount)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIVisualTreeHelperStatics* This,
        __x_ABI_CMicrosoft_CUI_CXaml_CIDependencyObject* reference,
        INT32* result);
    HRESULT (STDMETHODCALLTYPE* GetParent)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIVisualTreeHelperStatics* This,
        __x_ABI_CMicrosoft_CUI_CXaml_CIDependencyObject* reference,
        __x_ABI_CMicrosoft_CUI_CXaml_CIDependencyObject** result);
    HRESULT (STDMETHODCALLTYPE* DisconnectChildrenRecursive)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIVisualTreeHelperStatics* This,
        __x_ABI_CMicrosoft_CUI_CXaml_CIUIElement* element);
    HRESULT (STDMETHODCALLTYPE* GetOpenPopups)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIVisualTreeHelperStatics* This,
        __x_ABI_CMicrosoft_CUI_CXaml_CIWindow* window,
        __x_ABI_C__FIVectorView_1___x_ABI_CMicrosoft__CUI__CXaml__CControls__CPrimitives__CPopup** result);
    HRESULT (STDMETHODCALLTYPE* GetOpenPopupsForXamlRoot)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIVisualTreeHelperStatics* This,
        __x_ABI_CMicrosoft_CUI_CXaml_CIXamlRoot* xamlRoot,
        __x_ABI_C__FIVectorView_1___x_ABI_CMicrosoft__CUI__CXaml__CControls__CPrimitives__CPopup** result);

        END_INTERFACE
    } __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIVisualTreeHelperStaticsVtbl;

    interface __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIVisualTreeHelperStatics
    {
        CONST_VTBL struct __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIVisualTreeHelperStaticsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIVisualTreeHelperStatics;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIVisualTreeHelperStatics_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIXamlCompositionBrushBase_INTERFACE_DEFINED__)
    #define ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIXamlCompositionBrushBase_INTERFACE_DEFINED__
    typedef struct __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIXamlCompositionBrushBaseVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIXamlCompositionBrushBase* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIXamlCompositionBrushBase* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIXamlCompositionBrushBase* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIXamlCompositionBrushBase* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIXamlCompositionBrushBase* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIXamlCompositionBrushBase* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_FallbackColor)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIXamlCompositionBrushBase* This,
        struct __x_ABI_CWindows_CUI_CColor* value);
    HRESULT (STDMETHODCALLTYPE* put_FallbackColor)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIXamlCompositionBrushBase* This,
        struct __x_ABI_CWindows_CUI_CColor value);

        END_INTERFACE
    } __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIXamlCompositionBrushBaseVtbl;

    interface __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIXamlCompositionBrushBase
    {
        CONST_VTBL struct __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIXamlCompositionBrushBaseVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIXamlCompositionBrushBase;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIXamlCompositionBrushBase_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIXamlCompositionBrushBaseFactory_INTERFACE_DEFINED__)
    #define ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIXamlCompositionBrushBaseFactory_INTERFACE_DEFINED__
    typedef struct __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIXamlCompositionBrushBaseFactoryVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIXamlCompositionBrushBaseFactory* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIXamlCompositionBrushBaseFactory* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIXamlCompositionBrushBaseFactory* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIXamlCompositionBrushBaseFactory* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIXamlCompositionBrushBaseFactory* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIXamlCompositionBrushBaseFactory* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* CreateInstance)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIXamlCompositionBrushBaseFactory* This,
        IInspectable* baseInterface,
        IInspectable** innerInterface,
        __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIXamlCompositionBrushBase** value);

        END_INTERFACE
    } __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIXamlCompositionBrushBaseFactoryVtbl;

    interface __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIXamlCompositionBrushBaseFactory
    {
        CONST_VTBL struct __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIXamlCompositionBrushBaseFactoryVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIXamlCompositionBrushBaseFactory;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIXamlCompositionBrushBaseFactory_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIXamlCompositionBrushBaseOverrides_INTERFACE_DEFINED__)
    #define ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIXamlCompositionBrushBaseOverrides_INTERFACE_DEFINED__
    typedef struct __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIXamlCompositionBrushBaseOverridesVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIXamlCompositionBrushBaseOverrides* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIXamlCompositionBrushBaseOverrides* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIXamlCompositionBrushBaseOverrides* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIXamlCompositionBrushBaseOverrides* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIXamlCompositionBrushBaseOverrides* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIXamlCompositionBrushBaseOverrides* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* OnConnected)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIXamlCompositionBrushBaseOverrides* This);
    HRESULT (STDMETHODCALLTYPE* OnDisconnected)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIXamlCompositionBrushBaseOverrides* This);

        END_INTERFACE
    } __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIXamlCompositionBrushBaseOverridesVtbl;

    interface __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIXamlCompositionBrushBaseOverrides
    {
        CONST_VTBL struct __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIXamlCompositionBrushBaseOverridesVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIXamlCompositionBrushBaseOverrides;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIXamlCompositionBrushBaseOverrides_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIXamlCompositionBrushBaseProtected_INTERFACE_DEFINED__)
    #define ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIXamlCompositionBrushBaseProtected_INTERFACE_DEFINED__
    typedef struct __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIXamlCompositionBrushBaseProtectedVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIXamlCompositionBrushBaseProtected* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIXamlCompositionBrushBaseProtected* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIXamlCompositionBrushBaseProtected* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIXamlCompositionBrushBaseProtected* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIXamlCompositionBrushBaseProtected* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIXamlCompositionBrushBaseProtected* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_CompositionBrush)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIXamlCompositionBrushBaseProtected* This,
        __x_ABI_CMicrosoft_CUI_CComposition_CICompositionBrush** value);
    HRESULT (STDMETHODCALLTYPE* put_CompositionBrush)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIXamlCompositionBrushBaseProtected* This,
        __x_ABI_CMicrosoft_CUI_CComposition_CICompositionBrush* value);

        END_INTERFACE
    } __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIXamlCompositionBrushBaseProtectedVtbl;

    interface __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIXamlCompositionBrushBaseProtected
    {
        CONST_VTBL struct __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIXamlCompositionBrushBaseProtectedVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIXamlCompositionBrushBaseProtected;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIXamlCompositionBrushBaseProtected_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIXamlCompositionBrushBaseStatics_INTERFACE_DEFINED__)
    #define ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIXamlCompositionBrushBaseStatics_INTERFACE_DEFINED__
    typedef struct __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIXamlCompositionBrushBaseStaticsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIXamlCompositionBrushBaseStatics* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIXamlCompositionBrushBaseStatics* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIXamlCompositionBrushBaseStatics* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIXamlCompositionBrushBaseStatics* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIXamlCompositionBrushBaseStatics* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIXamlCompositionBrushBaseStatics* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_FallbackColorProperty)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIXamlCompositionBrushBaseStatics* This,
        __x_ABI_CMicrosoft_CUI_CXaml_CIDependencyProperty** value);

        END_INTERFACE
    } __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIXamlCompositionBrushBaseStaticsVtbl;

    interface __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIXamlCompositionBrushBaseStatics
    {
        CONST_VTBL struct __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIXamlCompositionBrushBaseStaticsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIXamlCompositionBrushBaseStatics;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIXamlCompositionBrushBaseStatics_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIXamlLight_INTERFACE_DEFINED__)
    #define ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIXamlLight_INTERFACE_DEFINED__
    typedef struct __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIXamlLightVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIXamlLight* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIXamlLight* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIXamlLight* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIXamlLight* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIXamlLight* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIXamlLight* This,
            TrustLevel* trustLevel);
    
        END_INTERFACE
    } __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIXamlLightVtbl;

    interface __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIXamlLight
    {
        CONST_VTBL struct __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIXamlLightVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIXamlLight;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIXamlLight_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIXamlLightFactory_INTERFACE_DEFINED__)
    #define ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIXamlLightFactory_INTERFACE_DEFINED__
    typedef struct __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIXamlLightFactoryVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIXamlLightFactory* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIXamlLightFactory* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIXamlLightFactory* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIXamlLightFactory* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIXamlLightFactory* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIXamlLightFactory* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* CreateInstance)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIXamlLightFactory* This,
        IInspectable* baseInterface,
        IInspectable** innerInterface,
        __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIXamlLight** value);

        END_INTERFACE
    } __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIXamlLightFactoryVtbl;

    interface __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIXamlLightFactory
    {
        CONST_VTBL struct __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIXamlLightFactoryVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIXamlLightFactory;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIXamlLightFactory_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIXamlLightOverrides_INTERFACE_DEFINED__)
    #define ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIXamlLightOverrides_INTERFACE_DEFINED__
    typedef struct __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIXamlLightOverridesVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIXamlLightOverrides* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIXamlLightOverrides* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIXamlLightOverrides* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIXamlLightOverrides* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIXamlLightOverrides* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIXamlLightOverrides* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* GetId)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIXamlLightOverrides* This,
        HSTRING* result);
    HRESULT (STDMETHODCALLTYPE* OnConnected)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIXamlLightOverrides* This,
        __x_ABI_CMicrosoft_CUI_CXaml_CIUIElement* newElement);
    HRESULT (STDMETHODCALLTYPE* OnDisconnected)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIXamlLightOverrides* This,
        __x_ABI_CMicrosoft_CUI_CXaml_CIUIElement* oldElement);

        END_INTERFACE
    } __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIXamlLightOverridesVtbl;

    interface __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIXamlLightOverrides
    {
        CONST_VTBL struct __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIXamlLightOverridesVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIXamlLightOverrides;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIXamlLightOverrides_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIXamlLightProtected_INTERFACE_DEFINED__)
    #define ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIXamlLightProtected_INTERFACE_DEFINED__
    typedef struct __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIXamlLightProtectedVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIXamlLightProtected* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIXamlLightProtected* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIXamlLightProtected* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIXamlLightProtected* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIXamlLightProtected* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIXamlLightProtected* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_CompositionLight)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIXamlLightProtected* This,
        __x_ABI_CMicrosoft_CUI_CComposition_CICompositionLight** value);
    HRESULT (STDMETHODCALLTYPE* put_CompositionLight)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIXamlLightProtected* This,
        __x_ABI_CMicrosoft_CUI_CComposition_CICompositionLight* value);

        END_INTERFACE
    } __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIXamlLightProtectedVtbl;

    interface __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIXamlLightProtected
    {
        CONST_VTBL struct __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIXamlLightProtectedVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIXamlLightProtected;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIXamlLightProtected_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIXamlLightStatics_INTERFACE_DEFINED__)
    #define ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIXamlLightStatics_INTERFACE_DEFINED__
    typedef struct __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIXamlLightStaticsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIXamlLightStatics* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIXamlLightStatics* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIXamlLightStatics* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIXamlLightStatics* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIXamlLightStatics* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIXamlLightStatics* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* AddTargetElement)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIXamlLightStatics* This,
        HSTRING lightId,
        __x_ABI_CMicrosoft_CUI_CXaml_CIUIElement* element);
    HRESULT (STDMETHODCALLTYPE* RemoveTargetElement)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIXamlLightStatics* This,
        HSTRING lightId,
        __x_ABI_CMicrosoft_CUI_CXaml_CIUIElement* element);
    HRESULT (STDMETHODCALLTYPE* AddTargetBrush)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIXamlLightStatics* This,
        HSTRING lightId,
        __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIBrush* brush);
    HRESULT (STDMETHODCALLTYPE* RemoveTargetBrush)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIXamlLightStatics* This,
        HSTRING lightId,
        __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIBrush* brush);

        END_INTERFACE
    } __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIXamlLightStaticsVtbl;

    interface __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIXamlLightStatics
    {
        CONST_VTBL struct __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIXamlLightStaticsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIXamlLightStatics;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIXamlLightStatics_INTERFACE_DEFINED__) */
    
