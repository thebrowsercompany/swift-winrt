// WARNING: Please don't edit this file. It was generated by Swift/WinRT v0.0.1

#pragma once
// Header files for imported files
#include <inspectable.h>
#include <EventToken.h>
#include <windowscontracts.h>
#include "Windows.Foundation.h"
#include "Windows.ApplicationModel.AppService.h"
#include "Windows.Networking.Sockets.h"
#include "Windows.Web.Http.h"
// Importing Collections header
#include "Windows.Foundation.Collections.h"

/* Forward Declarations */
#ifndef ____x_ABI_CWindows_CSystem_CDiagnostics_CDevicePortal_CIDevicePortalConnection_FWD_DEFINED__
#define ____x_ABI_CWindows_CSystem_CDiagnostics_CDevicePortal_CIDevicePortalConnection_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CSystem_CDiagnostics_CDevicePortal_CIDevicePortalConnection __x_ABI_CWindows_CSystem_CDiagnostics_CDevicePortal_CIDevicePortalConnection;

#endif // ____x_ABI_CWindows_CSystem_CDiagnostics_CDevicePortal_CIDevicePortalConnection_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CSystem_CDiagnostics_CDevicePortal_CIDevicePortalConnectionClosedEventArgs_FWD_DEFINED__
#define ____x_ABI_CWindows_CSystem_CDiagnostics_CDevicePortal_CIDevicePortalConnectionClosedEventArgs_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CSystem_CDiagnostics_CDevicePortal_CIDevicePortalConnectionClosedEventArgs __x_ABI_CWindows_CSystem_CDiagnostics_CDevicePortal_CIDevicePortalConnectionClosedEventArgs;

#endif // ____x_ABI_CWindows_CSystem_CDiagnostics_CDevicePortal_CIDevicePortalConnectionClosedEventArgs_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CSystem_CDiagnostics_CDevicePortal_CIDevicePortalConnectionRequestReceivedEventArgs_FWD_DEFINED__
#define ____x_ABI_CWindows_CSystem_CDiagnostics_CDevicePortal_CIDevicePortalConnectionRequestReceivedEventArgs_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CSystem_CDiagnostics_CDevicePortal_CIDevicePortalConnectionRequestReceivedEventArgs __x_ABI_CWindows_CSystem_CDiagnostics_CDevicePortal_CIDevicePortalConnectionRequestReceivedEventArgs;

#endif // ____x_ABI_CWindows_CSystem_CDiagnostics_CDevicePortal_CIDevicePortalConnectionRequestReceivedEventArgs_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CSystem_CDiagnostics_CDevicePortal_CIDevicePortalConnectionStatics_FWD_DEFINED__
#define ____x_ABI_CWindows_CSystem_CDiagnostics_CDevicePortal_CIDevicePortalConnectionStatics_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CSystem_CDiagnostics_CDevicePortal_CIDevicePortalConnectionStatics __x_ABI_CWindows_CSystem_CDiagnostics_CDevicePortal_CIDevicePortalConnectionStatics;

#endif // ____x_ABI_CWindows_CSystem_CDiagnostics_CDevicePortal_CIDevicePortalConnectionStatics_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CSystem_CDiagnostics_CDevicePortal_CIDevicePortalWebSocketConnection_FWD_DEFINED__
#define ____x_ABI_CWindows_CSystem_CDiagnostics_CDevicePortal_CIDevicePortalWebSocketConnection_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CSystem_CDiagnostics_CDevicePortal_CIDevicePortalWebSocketConnection __x_ABI_CWindows_CSystem_CDiagnostics_CDevicePortal_CIDevicePortalWebSocketConnection;

#endif // ____x_ABI_CWindows_CSystem_CDiagnostics_CDevicePortal_CIDevicePortalWebSocketConnection_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CSystem_CDiagnostics_CDevicePortal_CIDevicePortalWebSocketConnectionRequestReceivedEventArgs_FWD_DEFINED__
#define ____x_ABI_CWindows_CSystem_CDiagnostics_CDevicePortal_CIDevicePortalWebSocketConnectionRequestReceivedEventArgs_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CSystem_CDiagnostics_CDevicePortal_CIDevicePortalWebSocketConnectionRequestReceivedEventArgs __x_ABI_CWindows_CSystem_CDiagnostics_CDevicePortal_CIDevicePortalWebSocketConnectionRequestReceivedEventArgs;

#endif // ____x_ABI_CWindows_CSystem_CDiagnostics_CDevicePortal_CIDevicePortalWebSocketConnectionRequestReceivedEventArgs_FWD_DEFINED__

// Parameterized interface forward declarations (C)

// Collection interface definitions

#if !defined(____x_ABI_C__FIIterator_1_HSTRING_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIIterator_1_HSTRING_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIIterator_1_HSTRING __x_ABI_C__FIIterator_1_HSTRING;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIIterator_1_HSTRING;

    typedef struct __x_ABI_C__FIIterator_1_HSTRINGVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIIterator_1_HSTRING* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIIterator_1_HSTRING* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIIterator_1_HSTRING* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIIterator_1_HSTRING* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIIterator_1_HSTRING* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIIterator_1_HSTRING* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Current)(__x_ABI_C__FIIterator_1_HSTRING* This,
        HSTRING* result);
    HRESULT (STDMETHODCALLTYPE* get_HasCurrent)(__x_ABI_C__FIIterator_1_HSTRING* This,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* MoveNext)(__x_ABI_C__FIIterator_1_HSTRING* This,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__x_ABI_C__FIIterator_1_HSTRING* This,
        UINT32 itemsLength,
        HSTRING* items,
        UINT32* result);

        END_INTERFACE
    } __x_ABI_C__FIIterator_1_HSTRINGVtbl;

    interface __x_ABI_C__FIIterator_1_HSTRING
    {
        CONST_VTBL struct __x_ABI_C__FIIterator_1_HSTRINGVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIIterator_1_HSTRING_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIIterable_1_HSTRING_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIIterable_1_HSTRING_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIIterable_1_HSTRING __x_ABI_C__FIIterable_1_HSTRING;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIIterable_1_HSTRING;

    typedef struct __x_ABI_C__FIIterable_1_HSTRINGVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIIterable_1_HSTRING* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIIterable_1_HSTRING* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIIterable_1_HSTRING* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIIterable_1_HSTRING* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIIterable_1_HSTRING* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIIterable_1_HSTRING* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* First)(__x_ABI_C__FIIterable_1_HSTRING* This,
        __x_ABI_C__FIIterator_1_HSTRING** result);

        END_INTERFACE
    } __x_ABI_C__FIIterable_1_HSTRINGVtbl;

    interface __x_ABI_C__FIIterable_1_HSTRING
    {
        CONST_VTBL struct __x_ABI_C__FIIterable_1_HSTRINGVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIIterable_1_HSTRING_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIVectorView_1_HSTRING_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIVectorView_1_HSTRING_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIVectorView_1_HSTRING __x_ABI_C__FIVectorView_1_HSTRING;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIVectorView_1_HSTRING;

    typedef struct __x_ABI_C__FIVectorView_1_HSTRINGVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIVectorView_1_HSTRING* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIVectorView_1_HSTRING* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIVectorView_1_HSTRING* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIVectorView_1_HSTRING* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIVectorView_1_HSTRING* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIVectorView_1_HSTRING* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* GetAt)(__x_ABI_C__FIVectorView_1_HSTRING* This,
        UINT32 index,
        HSTRING* result);
    HRESULT (STDMETHODCALLTYPE* get_Size)(__x_ABI_C__FIVectorView_1_HSTRING* This,
        UINT32* result);
    HRESULT (STDMETHODCALLTYPE* IndexOf)(__x_ABI_C__FIVectorView_1_HSTRING* This,
        HSTRING value,
        UINT32* index,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__x_ABI_C__FIVectorView_1_HSTRING* This,
        UINT32 startIndex,
        UINT32 itemsLength,
        HSTRING* items,
        UINT32* result);

        END_INTERFACE
    } __x_ABI_C__FIVectorView_1_HSTRINGVtbl;

    interface __x_ABI_C__FIVectorView_1_HSTRING
    {
        CONST_VTBL struct __x_ABI_C__FIVectorView_1_HSTRINGVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIVectorView_1_HSTRING_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CSystem__CDiagnostics__CDevicePortal__CDevicePortalConnection___x_ABI_CWindows__CSystem__CDiagnostics__CDevicePortal__CDevicePortalConnectionClosedEventArgs_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CSystem__CDiagnostics__CDevicePortal__CDevicePortalConnection___x_ABI_CWindows__CSystem__CDiagnostics__CDevicePortal__CDevicePortalConnectionClosedEventArgs_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CSystem__CDiagnostics__CDevicePortal__CDevicePortalConnection___x_ABI_CWindows__CSystem__CDiagnostics__CDevicePortal__CDevicePortalConnectionClosedEventArgs __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CSystem__CDiagnostics__CDevicePortal__CDevicePortalConnection___x_ABI_CWindows__CSystem__CDiagnostics__CDevicePortal__CDevicePortalConnectionClosedEventArgs;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CSystem__CDiagnostics__CDevicePortal__CDevicePortalConnection___x_ABI_CWindows__CSystem__CDiagnostics__CDevicePortal__CDevicePortalConnectionClosedEventArgs;

    typedef struct __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CSystem__CDiagnostics__CDevicePortal__CDevicePortalConnection___x_ABI_CWindows__CSystem__CDiagnostics__CDevicePortal__CDevicePortalConnectionClosedEventArgsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CSystem__CDiagnostics__CDevicePortal__CDevicePortalConnection___x_ABI_CWindows__CSystem__CDiagnostics__CDevicePortal__CDevicePortalConnectionClosedEventArgs* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CSystem__CDiagnostics__CDevicePortal__CDevicePortalConnection___x_ABI_CWindows__CSystem__CDiagnostics__CDevicePortal__CDevicePortalConnectionClosedEventArgs* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CSystem__CDiagnostics__CDevicePortal__CDevicePortalConnection___x_ABI_CWindows__CSystem__CDiagnostics__CDevicePortal__CDevicePortalConnectionClosedEventArgs* This);
        HRESULT (STDMETHODCALLTYPE* Invoke)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CSystem__CDiagnostics__CDevicePortal__CDevicePortalConnection___x_ABI_CWindows__CSystem__CDiagnostics__CDevicePortal__CDevicePortalConnectionClosedEventArgs* This,
        __x_ABI_CWindows_CSystem_CDiagnostics_CDevicePortal_CIDevicePortalConnection* sender,
        __x_ABI_CWindows_CSystem_CDiagnostics_CDevicePortal_CIDevicePortalConnectionClosedEventArgs* args);

        END_INTERFACE
    } __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CSystem__CDiagnostics__CDevicePortal__CDevicePortalConnection___x_ABI_CWindows__CSystem__CDiagnostics__CDevicePortal__CDevicePortalConnectionClosedEventArgsVtbl;

    interface __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CSystem__CDiagnostics__CDevicePortal__CDevicePortalConnection___x_ABI_CWindows__CSystem__CDiagnostics__CDevicePortal__CDevicePortalConnectionClosedEventArgs
    {
        CONST_VTBL struct __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CSystem__CDiagnostics__CDevicePortal__CDevicePortalConnection___x_ABI_CWindows__CSystem__CDiagnostics__CDevicePortal__CDevicePortalConnectionClosedEventArgsVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CSystem__CDiagnostics__CDevicePortal__CDevicePortalConnection___x_ABI_CWindows__CSystem__CDiagnostics__CDevicePortal__CDevicePortalConnectionClosedEventArgs_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CSystem__CDiagnostics__CDevicePortal__CDevicePortalConnection___x_ABI_CWindows__CSystem__CDiagnostics__CDevicePortal__CDevicePortalConnectionRequestReceivedEventArgs_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CSystem__CDiagnostics__CDevicePortal__CDevicePortalConnection___x_ABI_CWindows__CSystem__CDiagnostics__CDevicePortal__CDevicePortalConnectionRequestReceivedEventArgs_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CSystem__CDiagnostics__CDevicePortal__CDevicePortalConnection___x_ABI_CWindows__CSystem__CDiagnostics__CDevicePortal__CDevicePortalConnectionRequestReceivedEventArgs __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CSystem__CDiagnostics__CDevicePortal__CDevicePortalConnection___x_ABI_CWindows__CSystem__CDiagnostics__CDevicePortal__CDevicePortalConnectionRequestReceivedEventArgs;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CSystem__CDiagnostics__CDevicePortal__CDevicePortalConnection___x_ABI_CWindows__CSystem__CDiagnostics__CDevicePortal__CDevicePortalConnectionRequestReceivedEventArgs;

    typedef struct __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CSystem__CDiagnostics__CDevicePortal__CDevicePortalConnection___x_ABI_CWindows__CSystem__CDiagnostics__CDevicePortal__CDevicePortalConnectionRequestReceivedEventArgsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CSystem__CDiagnostics__CDevicePortal__CDevicePortalConnection___x_ABI_CWindows__CSystem__CDiagnostics__CDevicePortal__CDevicePortalConnectionRequestReceivedEventArgs* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CSystem__CDiagnostics__CDevicePortal__CDevicePortalConnection___x_ABI_CWindows__CSystem__CDiagnostics__CDevicePortal__CDevicePortalConnectionRequestReceivedEventArgs* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CSystem__CDiagnostics__CDevicePortal__CDevicePortalConnection___x_ABI_CWindows__CSystem__CDiagnostics__CDevicePortal__CDevicePortalConnectionRequestReceivedEventArgs* This);
        HRESULT (STDMETHODCALLTYPE* Invoke)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CSystem__CDiagnostics__CDevicePortal__CDevicePortalConnection___x_ABI_CWindows__CSystem__CDiagnostics__CDevicePortal__CDevicePortalConnectionRequestReceivedEventArgs* This,
        __x_ABI_CWindows_CSystem_CDiagnostics_CDevicePortal_CIDevicePortalConnection* sender,
        __x_ABI_CWindows_CSystem_CDiagnostics_CDevicePortal_CIDevicePortalConnectionRequestReceivedEventArgs* args);

        END_INTERFACE
    } __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CSystem__CDiagnostics__CDevicePortal__CDevicePortalConnection___x_ABI_CWindows__CSystem__CDiagnostics__CDevicePortal__CDevicePortalConnectionRequestReceivedEventArgsVtbl;

    interface __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CSystem__CDiagnostics__CDevicePortal__CDevicePortalConnection___x_ABI_CWindows__CSystem__CDiagnostics__CDevicePortal__CDevicePortalConnectionRequestReceivedEventArgs
    {
        CONST_VTBL struct __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CSystem__CDiagnostics__CDevicePortal__CDevicePortalConnection___x_ABI_CWindows__CSystem__CDiagnostics__CDevicePortal__CDevicePortalConnectionRequestReceivedEventArgsVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CSystem__CDiagnostics__CDevicePortal__CDevicePortalConnection___x_ABI_CWindows__CSystem__CDiagnostics__CDevicePortal__CDevicePortalConnectionRequestReceivedEventArgs_INTERFACE_DEFINED__
    
#ifndef ____x_ABI_CWindows_CApplicationModel_CAppService_CIAppServiceConnection_FWD_DEFINED__
#define ____x_ABI_CWindows_CApplicationModel_CAppService_CIAppServiceConnection_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CApplicationModel_CAppService_CIAppServiceConnection __x_ABI_CWindows_CApplicationModel_CAppService_CIAppServiceConnection;

#endif // ____x_ABI_CWindows_CApplicationModel_CAppService_CIAppServiceConnection_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CFoundation_CIDeferral_FWD_DEFINED__
#define ____x_ABI_CWindows_CFoundation_CIDeferral_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CFoundation_CIDeferral __x_ABI_CWindows_CFoundation_CIDeferral;

#endif // ____x_ABI_CWindows_CFoundation_CIDeferral_FWD_DEFINED__

typedef enum __x_ABI_CWindows_CNetworking_CSockets_CMessageWebSocketReceiveMode __x_ABI_CWindows_CNetworking_CSockets_CMessageWebSocketReceiveMode;

#ifndef ____x_ABI_CWindows_CNetworking_CSockets_CIServerMessageWebSocket_FWD_DEFINED__
#define ____x_ABI_CWindows_CNetworking_CSockets_CIServerMessageWebSocket_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CNetworking_CSockets_CIServerMessageWebSocket __x_ABI_CWindows_CNetworking_CSockets_CIServerMessageWebSocket;

#endif // ____x_ABI_CWindows_CNetworking_CSockets_CIServerMessageWebSocket_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CNetworking_CSockets_CIServerStreamWebSocket_FWD_DEFINED__
#define ____x_ABI_CWindows_CNetworking_CSockets_CIServerStreamWebSocket_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CNetworking_CSockets_CIServerStreamWebSocket __x_ABI_CWindows_CNetworking_CSockets_CIServerStreamWebSocket;

#endif // ____x_ABI_CWindows_CNetworking_CSockets_CIServerStreamWebSocket_FWD_DEFINED__

typedef enum __x_ABI_CWindows_CNetworking_CSockets_CSocketMessageType __x_ABI_CWindows_CNetworking_CSockets_CSocketMessageType;

#ifndef ____x_ABI_CWindows_CWeb_CHttp_CIHttpRequestMessage_FWD_DEFINED__
#define ____x_ABI_CWindows_CWeb_CHttp_CIHttpRequestMessage_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CWeb_CHttp_CIHttpRequestMessage __x_ABI_CWindows_CWeb_CHttp_CIHttpRequestMessage;

#endif // ____x_ABI_CWindows_CWeb_CHttp_CIHttpRequestMessage_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CWeb_CHttp_CIHttpResponseMessage_FWD_DEFINED__
#define ____x_ABI_CWindows_CWeb_CHttp_CIHttpResponseMessage_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CWeb_CHttp_CIHttpResponseMessage __x_ABI_CWindows_CWeb_CHttp_CIHttpResponseMessage;

#endif // ____x_ABI_CWindows_CWeb_CHttp_CIHttpResponseMessage_FWD_DEFINED__

typedef enum __x_ABI_CWindows_CSystem_CDiagnostics_CDevicePortal_CDevicePortalConnectionClosedReason __x_ABI_CWindows_CSystem_CDiagnostics_CDevicePortal_CDevicePortalConnectionClosedReason;

enum __x_ABI_CWindows_CSystem_CDiagnostics_CDevicePortal_CDevicePortalConnectionClosedReason
    {
        __x_ABI_CWindows_CSystem_CDiagnostics_CDevicePortal_CDevicePortalConnectionClosedReason_Unknown = 0,
    __x_ABI_CWindows_CSystem_CDiagnostics_CDevicePortal_CDevicePortalConnectionClosedReason_ResourceLimitsExceeded = 1,
    __x_ABI_CWindows_CSystem_CDiagnostics_CDevicePortal_CDevicePortalConnectionClosedReason_ProtocolError = 2,
    __x_ABI_CWindows_CSystem_CDiagnostics_CDevicePortal_CDevicePortalConnectionClosedReason_NotAuthorized = 3,
    __x_ABI_CWindows_CSystem_CDiagnostics_CDevicePortal_CDevicePortalConnectionClosedReason_UserNotPresent = 4,
    __x_ABI_CWindows_CSystem_CDiagnostics_CDevicePortal_CDevicePortalConnectionClosedReason_ServiceTerminated = 5,
};

#if !defined(____x_ABI_CWindows_CSystem_CDiagnostics_CDevicePortal_CIDevicePortalConnection_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CSystem_CDiagnostics_CDevicePortal_CIDevicePortalConnection_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CSystem_CDiagnostics_CDevicePortal_CIDevicePortalConnectionVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CSystem_CDiagnostics_CDevicePortal_CIDevicePortalConnection* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CSystem_CDiagnostics_CDevicePortal_CIDevicePortalConnection* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CSystem_CDiagnostics_CDevicePortal_CIDevicePortalConnection* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CSystem_CDiagnostics_CDevicePortal_CIDevicePortalConnection* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CSystem_CDiagnostics_CDevicePortal_CIDevicePortalConnection* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CSystem_CDiagnostics_CDevicePortal_CIDevicePortalConnection* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* add_Closed)(__x_ABI_CWindows_CSystem_CDiagnostics_CDevicePortal_CIDevicePortalConnection* This,
        __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CSystem__CDiagnostics__CDevicePortal__CDevicePortalConnection___x_ABI_CWindows__CSystem__CDiagnostics__CDevicePortal__CDevicePortalConnectionClosedEventArgs* handler,
        EventRegistrationToken* token);
    HRESULT (STDMETHODCALLTYPE* remove_Closed)(__x_ABI_CWindows_CSystem_CDiagnostics_CDevicePortal_CIDevicePortalConnection* This,
        EventRegistrationToken token);
    HRESULT (STDMETHODCALLTYPE* add_RequestReceived)(__x_ABI_CWindows_CSystem_CDiagnostics_CDevicePortal_CIDevicePortalConnection* This,
        __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CSystem__CDiagnostics__CDevicePortal__CDevicePortalConnection___x_ABI_CWindows__CSystem__CDiagnostics__CDevicePortal__CDevicePortalConnectionRequestReceivedEventArgs* handler,
        EventRegistrationToken* token);
    HRESULT (STDMETHODCALLTYPE* remove_RequestReceived)(__x_ABI_CWindows_CSystem_CDiagnostics_CDevicePortal_CIDevicePortalConnection* This,
        EventRegistrationToken token);

        END_INTERFACE
    } __x_ABI_CWindows_CSystem_CDiagnostics_CDevicePortal_CIDevicePortalConnectionVtbl;

    interface __x_ABI_CWindows_CSystem_CDiagnostics_CDevicePortal_CIDevicePortalConnection
    {
        CONST_VTBL struct __x_ABI_CWindows_CSystem_CDiagnostics_CDevicePortal_CIDevicePortalConnectionVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CSystem_CDiagnostics_CDevicePortal_CIDevicePortalConnection;
#endif /* !defined(____x_ABI_CWindows_CSystem_CDiagnostics_CDevicePortal_CIDevicePortalConnection_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CSystem_CDiagnostics_CDevicePortal_CIDevicePortalConnectionClosedEventArgs_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CSystem_CDiagnostics_CDevicePortal_CIDevicePortalConnectionClosedEventArgs_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CSystem_CDiagnostics_CDevicePortal_CIDevicePortalConnectionClosedEventArgsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CSystem_CDiagnostics_CDevicePortal_CIDevicePortalConnectionClosedEventArgs* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CSystem_CDiagnostics_CDevicePortal_CIDevicePortalConnectionClosedEventArgs* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CSystem_CDiagnostics_CDevicePortal_CIDevicePortalConnectionClosedEventArgs* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CSystem_CDiagnostics_CDevicePortal_CIDevicePortalConnectionClosedEventArgs* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CSystem_CDiagnostics_CDevicePortal_CIDevicePortalConnectionClosedEventArgs* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CSystem_CDiagnostics_CDevicePortal_CIDevicePortalConnectionClosedEventArgs* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Reason)(__x_ABI_CWindows_CSystem_CDiagnostics_CDevicePortal_CIDevicePortalConnectionClosedEventArgs* This,
        enum __x_ABI_CWindows_CSystem_CDiagnostics_CDevicePortal_CDevicePortalConnectionClosedReason* value);

        END_INTERFACE
    } __x_ABI_CWindows_CSystem_CDiagnostics_CDevicePortal_CIDevicePortalConnectionClosedEventArgsVtbl;

    interface __x_ABI_CWindows_CSystem_CDiagnostics_CDevicePortal_CIDevicePortalConnectionClosedEventArgs
    {
        CONST_VTBL struct __x_ABI_CWindows_CSystem_CDiagnostics_CDevicePortal_CIDevicePortalConnectionClosedEventArgsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CSystem_CDiagnostics_CDevicePortal_CIDevicePortalConnectionClosedEventArgs;
#endif /* !defined(____x_ABI_CWindows_CSystem_CDiagnostics_CDevicePortal_CIDevicePortalConnectionClosedEventArgs_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CSystem_CDiagnostics_CDevicePortal_CIDevicePortalConnectionRequestReceivedEventArgs_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CSystem_CDiagnostics_CDevicePortal_CIDevicePortalConnectionRequestReceivedEventArgs_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CSystem_CDiagnostics_CDevicePortal_CIDevicePortalConnectionRequestReceivedEventArgsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CSystem_CDiagnostics_CDevicePortal_CIDevicePortalConnectionRequestReceivedEventArgs* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CSystem_CDiagnostics_CDevicePortal_CIDevicePortalConnectionRequestReceivedEventArgs* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CSystem_CDiagnostics_CDevicePortal_CIDevicePortalConnectionRequestReceivedEventArgs* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CSystem_CDiagnostics_CDevicePortal_CIDevicePortalConnectionRequestReceivedEventArgs* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CSystem_CDiagnostics_CDevicePortal_CIDevicePortalConnectionRequestReceivedEventArgs* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CSystem_CDiagnostics_CDevicePortal_CIDevicePortalConnectionRequestReceivedEventArgs* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_RequestMessage)(__x_ABI_CWindows_CSystem_CDiagnostics_CDevicePortal_CIDevicePortalConnectionRequestReceivedEventArgs* This,
        __x_ABI_CWindows_CWeb_CHttp_CIHttpRequestMessage** value);
    HRESULT (STDMETHODCALLTYPE* get_ResponseMessage)(__x_ABI_CWindows_CSystem_CDiagnostics_CDevicePortal_CIDevicePortalConnectionRequestReceivedEventArgs* This,
        __x_ABI_CWindows_CWeb_CHttp_CIHttpResponseMessage** value);

        END_INTERFACE
    } __x_ABI_CWindows_CSystem_CDiagnostics_CDevicePortal_CIDevicePortalConnectionRequestReceivedEventArgsVtbl;

    interface __x_ABI_CWindows_CSystem_CDiagnostics_CDevicePortal_CIDevicePortalConnectionRequestReceivedEventArgs
    {
        CONST_VTBL struct __x_ABI_CWindows_CSystem_CDiagnostics_CDevicePortal_CIDevicePortalConnectionRequestReceivedEventArgsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CSystem_CDiagnostics_CDevicePortal_CIDevicePortalConnectionRequestReceivedEventArgs;
#endif /* !defined(____x_ABI_CWindows_CSystem_CDiagnostics_CDevicePortal_CIDevicePortalConnectionRequestReceivedEventArgs_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CSystem_CDiagnostics_CDevicePortal_CIDevicePortalConnectionStatics_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CSystem_CDiagnostics_CDevicePortal_CIDevicePortalConnectionStatics_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CSystem_CDiagnostics_CDevicePortal_CIDevicePortalConnectionStaticsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CSystem_CDiagnostics_CDevicePortal_CIDevicePortalConnectionStatics* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CSystem_CDiagnostics_CDevicePortal_CIDevicePortalConnectionStatics* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CSystem_CDiagnostics_CDevicePortal_CIDevicePortalConnectionStatics* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CSystem_CDiagnostics_CDevicePortal_CIDevicePortalConnectionStatics* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CSystem_CDiagnostics_CDevicePortal_CIDevicePortalConnectionStatics* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CSystem_CDiagnostics_CDevicePortal_CIDevicePortalConnectionStatics* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* GetForAppServiceConnection)(__x_ABI_CWindows_CSystem_CDiagnostics_CDevicePortal_CIDevicePortalConnectionStatics* This,
        __x_ABI_CWindows_CApplicationModel_CAppService_CIAppServiceConnection* appServiceConnection,
        __x_ABI_CWindows_CSystem_CDiagnostics_CDevicePortal_CIDevicePortalConnection** value);

        END_INTERFACE
    } __x_ABI_CWindows_CSystem_CDiagnostics_CDevicePortal_CIDevicePortalConnectionStaticsVtbl;

    interface __x_ABI_CWindows_CSystem_CDiagnostics_CDevicePortal_CIDevicePortalConnectionStatics
    {
        CONST_VTBL struct __x_ABI_CWindows_CSystem_CDiagnostics_CDevicePortal_CIDevicePortalConnectionStaticsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CSystem_CDiagnostics_CDevicePortal_CIDevicePortalConnectionStatics;
#endif /* !defined(____x_ABI_CWindows_CSystem_CDiagnostics_CDevicePortal_CIDevicePortalConnectionStatics_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CSystem_CDiagnostics_CDevicePortal_CIDevicePortalWebSocketConnection_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CSystem_CDiagnostics_CDevicePortal_CIDevicePortalWebSocketConnection_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CSystem_CDiagnostics_CDevicePortal_CIDevicePortalWebSocketConnectionVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CSystem_CDiagnostics_CDevicePortal_CIDevicePortalWebSocketConnection* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CSystem_CDiagnostics_CDevicePortal_CIDevicePortalWebSocketConnection* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CSystem_CDiagnostics_CDevicePortal_CIDevicePortalWebSocketConnection* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CSystem_CDiagnostics_CDevicePortal_CIDevicePortalWebSocketConnection* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CSystem_CDiagnostics_CDevicePortal_CIDevicePortalWebSocketConnection* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CSystem_CDiagnostics_CDevicePortal_CIDevicePortalWebSocketConnection* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* GetServerMessageWebSocketForRequest)(__x_ABI_CWindows_CSystem_CDiagnostics_CDevicePortal_CIDevicePortalWebSocketConnection* This,
        __x_ABI_CWindows_CWeb_CHttp_CIHttpRequestMessage* request,
        __x_ABI_CWindows_CNetworking_CSockets_CIServerMessageWebSocket** result);
    HRESULT (STDMETHODCALLTYPE* GetServerMessageWebSocketForRequest2)(__x_ABI_CWindows_CSystem_CDiagnostics_CDevicePortal_CIDevicePortalWebSocketConnection* This,
        __x_ABI_CWindows_CWeb_CHttp_CIHttpRequestMessage* request,
        enum __x_ABI_CWindows_CNetworking_CSockets_CSocketMessageType messageType,
        HSTRING protocol,
        __x_ABI_CWindows_CNetworking_CSockets_CIServerMessageWebSocket** result);
    HRESULT (STDMETHODCALLTYPE* GetServerMessageWebSocketForRequest3)(__x_ABI_CWindows_CSystem_CDiagnostics_CDevicePortal_CIDevicePortalWebSocketConnection* This,
        __x_ABI_CWindows_CWeb_CHttp_CIHttpRequestMessage* request,
        enum __x_ABI_CWindows_CNetworking_CSockets_CSocketMessageType messageType,
        HSTRING protocol,
        UINT32 outboundBufferSizeInBytes,
        UINT32 maxMessageSize,
        enum __x_ABI_CWindows_CNetworking_CSockets_CMessageWebSocketReceiveMode receiveMode,
        __x_ABI_CWindows_CNetworking_CSockets_CIServerMessageWebSocket** result);
    HRESULT (STDMETHODCALLTYPE* GetServerStreamWebSocketForRequest)(__x_ABI_CWindows_CSystem_CDiagnostics_CDevicePortal_CIDevicePortalWebSocketConnection* This,
        __x_ABI_CWindows_CWeb_CHttp_CIHttpRequestMessage* request,
        __x_ABI_CWindows_CNetworking_CSockets_CIServerStreamWebSocket** result);
    HRESULT (STDMETHODCALLTYPE* GetServerStreamWebSocketForRequest2)(__x_ABI_CWindows_CSystem_CDiagnostics_CDevicePortal_CIDevicePortalWebSocketConnection* This,
        __x_ABI_CWindows_CWeb_CHttp_CIHttpRequestMessage* request,
        HSTRING protocol,
        UINT32 outboundBufferSizeInBytes,
        boolean noDelay,
        __x_ABI_CWindows_CNetworking_CSockets_CIServerStreamWebSocket** result);

        END_INTERFACE
    } __x_ABI_CWindows_CSystem_CDiagnostics_CDevicePortal_CIDevicePortalWebSocketConnectionVtbl;

    interface __x_ABI_CWindows_CSystem_CDiagnostics_CDevicePortal_CIDevicePortalWebSocketConnection
    {
        CONST_VTBL struct __x_ABI_CWindows_CSystem_CDiagnostics_CDevicePortal_CIDevicePortalWebSocketConnectionVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CSystem_CDiagnostics_CDevicePortal_CIDevicePortalWebSocketConnection;
#endif /* !defined(____x_ABI_CWindows_CSystem_CDiagnostics_CDevicePortal_CIDevicePortalWebSocketConnection_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CSystem_CDiagnostics_CDevicePortal_CIDevicePortalWebSocketConnectionRequestReceivedEventArgs_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CSystem_CDiagnostics_CDevicePortal_CIDevicePortalWebSocketConnectionRequestReceivedEventArgs_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CSystem_CDiagnostics_CDevicePortal_CIDevicePortalWebSocketConnectionRequestReceivedEventArgsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CSystem_CDiagnostics_CDevicePortal_CIDevicePortalWebSocketConnectionRequestReceivedEventArgs* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CSystem_CDiagnostics_CDevicePortal_CIDevicePortalWebSocketConnectionRequestReceivedEventArgs* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CSystem_CDiagnostics_CDevicePortal_CIDevicePortalWebSocketConnectionRequestReceivedEventArgs* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CSystem_CDiagnostics_CDevicePortal_CIDevicePortalWebSocketConnectionRequestReceivedEventArgs* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CSystem_CDiagnostics_CDevicePortal_CIDevicePortalWebSocketConnectionRequestReceivedEventArgs* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CSystem_CDiagnostics_CDevicePortal_CIDevicePortalWebSocketConnectionRequestReceivedEventArgs* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_IsWebSocketUpgradeRequest)(__x_ABI_CWindows_CSystem_CDiagnostics_CDevicePortal_CIDevicePortalWebSocketConnectionRequestReceivedEventArgs* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* get_WebSocketProtocolsRequested)(__x_ABI_CWindows_CSystem_CDiagnostics_CDevicePortal_CIDevicePortalWebSocketConnectionRequestReceivedEventArgs* This,
        __x_ABI_C__FIVectorView_1_HSTRING** value);
    HRESULT (STDMETHODCALLTYPE* GetDeferral)(__x_ABI_CWindows_CSystem_CDiagnostics_CDevicePortal_CIDevicePortalWebSocketConnectionRequestReceivedEventArgs* This,
        __x_ABI_CWindows_CFoundation_CIDeferral** value);

        END_INTERFACE
    } __x_ABI_CWindows_CSystem_CDiagnostics_CDevicePortal_CIDevicePortalWebSocketConnectionRequestReceivedEventArgsVtbl;

    interface __x_ABI_CWindows_CSystem_CDiagnostics_CDevicePortal_CIDevicePortalWebSocketConnectionRequestReceivedEventArgs
    {
        CONST_VTBL struct __x_ABI_CWindows_CSystem_CDiagnostics_CDevicePortal_CIDevicePortalWebSocketConnectionRequestReceivedEventArgsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CSystem_CDiagnostics_CDevicePortal_CIDevicePortalWebSocketConnectionRequestReceivedEventArgs;
#endif /* !defined(____x_ABI_CWindows_CSystem_CDiagnostics_CDevicePortal_CIDevicePortalWebSocketConnectionRequestReceivedEventArgs_INTERFACE_DEFINED__) */
    
