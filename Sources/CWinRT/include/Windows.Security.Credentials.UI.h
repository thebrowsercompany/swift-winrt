// WARNING: Please don't edit this file. It was generated by Swift/WinRT v0.0.1

#pragma once
// Header files for imported files
#include <inspectable.h>
#include <EventToken.h>
#include <windowscontracts.h>
#include "Windows.Foundation.h"
#include "Windows.Storage.Streams.h"

/* Forward Declarations */
#ifndef ____x_ABI_CWindows_CSecurity_CCredentials_CUI_CICredentialPickerOptions_FWD_DEFINED__
#define ____x_ABI_CWindows_CSecurity_CCredentials_CUI_CICredentialPickerOptions_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CSecurity_CCredentials_CUI_CICredentialPickerOptions __x_ABI_CWindows_CSecurity_CCredentials_CUI_CICredentialPickerOptions;

#endif // ____x_ABI_CWindows_CSecurity_CCredentials_CUI_CICredentialPickerOptions_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CSecurity_CCredentials_CUI_CICredentialPickerResults_FWD_DEFINED__
#define ____x_ABI_CWindows_CSecurity_CCredentials_CUI_CICredentialPickerResults_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CSecurity_CCredentials_CUI_CICredentialPickerResults __x_ABI_CWindows_CSecurity_CCredentials_CUI_CICredentialPickerResults;

#endif // ____x_ABI_CWindows_CSecurity_CCredentials_CUI_CICredentialPickerResults_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CSecurity_CCredentials_CUI_CICredentialPickerStatics_FWD_DEFINED__
#define ____x_ABI_CWindows_CSecurity_CCredentials_CUI_CICredentialPickerStatics_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CSecurity_CCredentials_CUI_CICredentialPickerStatics __x_ABI_CWindows_CSecurity_CCredentials_CUI_CICredentialPickerStatics;

#endif // ____x_ABI_CWindows_CSecurity_CCredentials_CUI_CICredentialPickerStatics_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CSecurity_CCredentials_CUI_CIUserConsentVerifierStatics_FWD_DEFINED__
#define ____x_ABI_CWindows_CSecurity_CCredentials_CUI_CIUserConsentVerifierStatics_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CSecurity_CCredentials_CUI_CIUserConsentVerifierStatics __x_ABI_CWindows_CSecurity_CCredentials_CUI_CIUserConsentVerifierStatics;

#endif // ____x_ABI_CWindows_CSecurity_CCredentials_CUI_CIUserConsentVerifierStatics_FWD_DEFINED__

// Parameterized interface forward declarations (C)

// Collection interface definitions

typedef interface __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CSecurity__CCredentials__CUI__CCredentialPickerResults __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CSecurity__CCredentials__CUI__CCredentialPickerResults;

#if !defined(____x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CSecurity__CCredentials__CUI__CCredentialPickerResults_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CSecurity__CCredentials__CUI__CCredentialPickerResults_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CSecurity__CCredentials__CUI__CCredentialPickerResults __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CSecurity__CCredentials__CUI__CCredentialPickerResults;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CSecurity__CCredentials__CUI__CCredentialPickerResults;

    typedef struct __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CSecurity__CCredentials__CUI__CCredentialPickerResultsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CSecurity__CCredentials__CUI__CCredentialPickerResults* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CSecurity__CCredentials__CUI__CCredentialPickerResults* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CSecurity__CCredentials__CUI__CCredentialPickerResults* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CSecurity__CCredentials__CUI__CCredentialPickerResults* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CSecurity__CCredentials__CUI__CCredentialPickerResults* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CSecurity__CCredentials__CUI__CCredentialPickerResults* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* put_Completed)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CSecurity__CCredentials__CUI__CCredentialPickerResults* This,
        __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CSecurity__CCredentials__CUI__CCredentialPickerResults* handler);
    HRESULT (STDMETHODCALLTYPE* get_Completed)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CSecurity__CCredentials__CUI__CCredentialPickerResults* This,
        __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CSecurity__CCredentials__CUI__CCredentialPickerResults** result);
    HRESULT (STDMETHODCALLTYPE* GetResults)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CSecurity__CCredentials__CUI__CCredentialPickerResults* This,
        __x_ABI_CWindows_CSecurity_CCredentials_CUI_CICredentialPickerResults** result);

        END_INTERFACE
    } __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CSecurity__CCredentials__CUI__CCredentialPickerResultsVtbl;

    interface __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CSecurity__CCredentials__CUI__CCredentialPickerResults
    {
        CONST_VTBL struct __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CSecurity__CCredentials__CUI__CCredentialPickerResultsVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CSecurity__CCredentials__CUI__CCredentialPickerResults_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CSecurity__CCredentials__CUI__CCredentialPickerResults_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CSecurity__CCredentials__CUI__CCredentialPickerResults_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CSecurity__CCredentials__CUI__CCredentialPickerResults __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CSecurity__CCredentials__CUI__CCredentialPickerResults;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CSecurity__CCredentials__CUI__CCredentialPickerResults;

    typedef struct __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CSecurity__CCredentials__CUI__CCredentialPickerResultsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CSecurity__CCredentials__CUI__CCredentialPickerResults* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CSecurity__CCredentials__CUI__CCredentialPickerResults* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CSecurity__CCredentials__CUI__CCredentialPickerResults* This);
        HRESULT (STDMETHODCALLTYPE* Invoke)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CSecurity__CCredentials__CUI__CCredentialPickerResults* This,
        __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CSecurity__CCredentials__CUI__CCredentialPickerResults* asyncInfo,
        enum __x_ABI_CWindows_CFoundation_CAsyncStatus asyncStatus);

        END_INTERFACE
    } __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CSecurity__CCredentials__CUI__CCredentialPickerResultsVtbl;

    interface __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CSecurity__CCredentials__CUI__CCredentialPickerResults
    {
        CONST_VTBL struct __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CSecurity__CCredentials__CUI__CCredentialPickerResultsVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CSecurity__CCredentials__CUI__CCredentialPickerResults_INTERFACE_DEFINED__
    
typedef enum __x_ABI_CWindows_CSecurity_CCredentials_CUI_CUserConsentVerificationResult __x_ABI_CWindows_CSecurity_CCredentials_CUI_CUserConsentVerificationResult;

typedef interface __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CSecurity__CCredentials__CUI__CUserConsentVerificationResult __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CSecurity__CCredentials__CUI__CUserConsentVerificationResult;

#if !defined(____x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CSecurity__CCredentials__CUI__CUserConsentVerificationResult_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CSecurity__CCredentials__CUI__CUserConsentVerificationResult_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CSecurity__CCredentials__CUI__CUserConsentVerificationResult __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CSecurity__CCredentials__CUI__CUserConsentVerificationResult;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CSecurity__CCredentials__CUI__CUserConsentVerificationResult;

    typedef struct __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CSecurity__CCredentials__CUI__CUserConsentVerificationResultVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CSecurity__CCredentials__CUI__CUserConsentVerificationResult* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CSecurity__CCredentials__CUI__CUserConsentVerificationResult* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CSecurity__CCredentials__CUI__CUserConsentVerificationResult* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CSecurity__CCredentials__CUI__CUserConsentVerificationResult* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CSecurity__CCredentials__CUI__CUserConsentVerificationResult* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CSecurity__CCredentials__CUI__CUserConsentVerificationResult* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* put_Completed)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CSecurity__CCredentials__CUI__CUserConsentVerificationResult* This,
        __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CSecurity__CCredentials__CUI__CUserConsentVerificationResult* handler);
    HRESULT (STDMETHODCALLTYPE* get_Completed)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CSecurity__CCredentials__CUI__CUserConsentVerificationResult* This,
        __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CSecurity__CCredentials__CUI__CUserConsentVerificationResult** result);
    HRESULT (STDMETHODCALLTYPE* GetResults)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CSecurity__CCredentials__CUI__CUserConsentVerificationResult* This,
        enum __x_ABI_CWindows_CSecurity_CCredentials_CUI_CUserConsentVerificationResult* result);

        END_INTERFACE
    } __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CSecurity__CCredentials__CUI__CUserConsentVerificationResultVtbl;

    interface __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CSecurity__CCredentials__CUI__CUserConsentVerificationResult
    {
        CONST_VTBL struct __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CSecurity__CCredentials__CUI__CUserConsentVerificationResultVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CSecurity__CCredentials__CUI__CUserConsentVerificationResult_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CSecurity__CCredentials__CUI__CUserConsentVerificationResult_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CSecurity__CCredentials__CUI__CUserConsentVerificationResult_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CSecurity__CCredentials__CUI__CUserConsentVerificationResult __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CSecurity__CCredentials__CUI__CUserConsentVerificationResult;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CSecurity__CCredentials__CUI__CUserConsentVerificationResult;

    typedef struct __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CSecurity__CCredentials__CUI__CUserConsentVerificationResultVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CSecurity__CCredentials__CUI__CUserConsentVerificationResult* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CSecurity__CCredentials__CUI__CUserConsentVerificationResult* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CSecurity__CCredentials__CUI__CUserConsentVerificationResult* This);
        HRESULT (STDMETHODCALLTYPE* Invoke)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CSecurity__CCredentials__CUI__CUserConsentVerificationResult* This,
        __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CSecurity__CCredentials__CUI__CUserConsentVerificationResult* asyncInfo,
        enum __x_ABI_CWindows_CFoundation_CAsyncStatus asyncStatus);

        END_INTERFACE
    } __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CSecurity__CCredentials__CUI__CUserConsentVerificationResultVtbl;

    interface __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CSecurity__CCredentials__CUI__CUserConsentVerificationResult
    {
        CONST_VTBL struct __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CSecurity__CCredentials__CUI__CUserConsentVerificationResultVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CSecurity__CCredentials__CUI__CUserConsentVerificationResult_INTERFACE_DEFINED__
    
typedef enum __x_ABI_CWindows_CSecurity_CCredentials_CUI_CUserConsentVerifierAvailability __x_ABI_CWindows_CSecurity_CCredentials_CUI_CUserConsentVerifierAvailability;

typedef interface __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CSecurity__CCredentials__CUI__CUserConsentVerifierAvailability __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CSecurity__CCredentials__CUI__CUserConsentVerifierAvailability;

#if !defined(____x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CSecurity__CCredentials__CUI__CUserConsentVerifierAvailability_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CSecurity__CCredentials__CUI__CUserConsentVerifierAvailability_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CSecurity__CCredentials__CUI__CUserConsentVerifierAvailability __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CSecurity__CCredentials__CUI__CUserConsentVerifierAvailability;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CSecurity__CCredentials__CUI__CUserConsentVerifierAvailability;

    typedef struct __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CSecurity__CCredentials__CUI__CUserConsentVerifierAvailabilityVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CSecurity__CCredentials__CUI__CUserConsentVerifierAvailability* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CSecurity__CCredentials__CUI__CUserConsentVerifierAvailability* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CSecurity__CCredentials__CUI__CUserConsentVerifierAvailability* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CSecurity__CCredentials__CUI__CUserConsentVerifierAvailability* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CSecurity__CCredentials__CUI__CUserConsentVerifierAvailability* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CSecurity__CCredentials__CUI__CUserConsentVerifierAvailability* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* put_Completed)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CSecurity__CCredentials__CUI__CUserConsentVerifierAvailability* This,
        __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CSecurity__CCredentials__CUI__CUserConsentVerifierAvailability* handler);
    HRESULT (STDMETHODCALLTYPE* get_Completed)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CSecurity__CCredentials__CUI__CUserConsentVerifierAvailability* This,
        __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CSecurity__CCredentials__CUI__CUserConsentVerifierAvailability** result);
    HRESULT (STDMETHODCALLTYPE* GetResults)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CSecurity__CCredentials__CUI__CUserConsentVerifierAvailability* This,
        enum __x_ABI_CWindows_CSecurity_CCredentials_CUI_CUserConsentVerifierAvailability* result);

        END_INTERFACE
    } __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CSecurity__CCredentials__CUI__CUserConsentVerifierAvailabilityVtbl;

    interface __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CSecurity__CCredentials__CUI__CUserConsentVerifierAvailability
    {
        CONST_VTBL struct __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CSecurity__CCredentials__CUI__CUserConsentVerifierAvailabilityVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CSecurity__CCredentials__CUI__CUserConsentVerifierAvailability_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CSecurity__CCredentials__CUI__CUserConsentVerifierAvailability_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CSecurity__CCredentials__CUI__CUserConsentVerifierAvailability_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CSecurity__CCredentials__CUI__CUserConsentVerifierAvailability __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CSecurity__CCredentials__CUI__CUserConsentVerifierAvailability;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CSecurity__CCredentials__CUI__CUserConsentVerifierAvailability;

    typedef struct __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CSecurity__CCredentials__CUI__CUserConsentVerifierAvailabilityVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CSecurity__CCredentials__CUI__CUserConsentVerifierAvailability* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CSecurity__CCredentials__CUI__CUserConsentVerifierAvailability* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CSecurity__CCredentials__CUI__CUserConsentVerifierAvailability* This);
        HRESULT (STDMETHODCALLTYPE* Invoke)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CSecurity__CCredentials__CUI__CUserConsentVerifierAvailability* This,
        __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CSecurity__CCredentials__CUI__CUserConsentVerifierAvailability* asyncInfo,
        enum __x_ABI_CWindows_CFoundation_CAsyncStatus asyncStatus);

        END_INTERFACE
    } __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CSecurity__CCredentials__CUI__CUserConsentVerifierAvailabilityVtbl;

    interface __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CSecurity__CCredentials__CUI__CUserConsentVerifierAvailability
    {
        CONST_VTBL struct __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CSecurity__CCredentials__CUI__CUserConsentVerifierAvailabilityVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CSecurity__CCredentials__CUI__CUserConsentVerifierAvailability_INTERFACE_DEFINED__
    
typedef enum __x_ABI_CWindows_CFoundation_CAsyncStatus __x_ABI_CWindows_CFoundation_CAsyncStatus;

#ifndef ____x_ABI_CWindows_CFoundation_CIAsyncInfo_FWD_DEFINED__
#define ____x_ABI_CWindows_CFoundation_CIAsyncInfo_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CFoundation_CIAsyncInfo __x_ABI_CWindows_CFoundation_CIAsyncInfo;

#endif // ____x_ABI_CWindows_CFoundation_CIAsyncInfo_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CStorage_CStreams_CIBuffer_FWD_DEFINED__
#define ____x_ABI_CWindows_CStorage_CStreams_CIBuffer_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CStorage_CStreams_CIBuffer __x_ABI_CWindows_CStorage_CStreams_CIBuffer;

#endif // ____x_ABI_CWindows_CStorage_CStreams_CIBuffer_FWD_DEFINED__

typedef enum __x_ABI_CWindows_CSecurity_CCredentials_CUI_CAuthenticationProtocol __x_ABI_CWindows_CSecurity_CCredentials_CUI_CAuthenticationProtocol;

typedef enum __x_ABI_CWindows_CSecurity_CCredentials_CUI_CCredentialSaveOption __x_ABI_CWindows_CSecurity_CCredentials_CUI_CCredentialSaveOption;

enum __x_ABI_CWindows_CSecurity_CCredentials_CUI_CAuthenticationProtocol
    {
        __x_ABI_CWindows_CSecurity_CCredentials_CUI_CAuthenticationProtocol_Basic = 0,
    __x_ABI_CWindows_CSecurity_CCredentials_CUI_CAuthenticationProtocol_Digest = 1,
    __x_ABI_CWindows_CSecurity_CCredentials_CUI_CAuthenticationProtocol_Ntlm = 2,
    __x_ABI_CWindows_CSecurity_CCredentials_CUI_CAuthenticationProtocol_Kerberos = 3,
    __x_ABI_CWindows_CSecurity_CCredentials_CUI_CAuthenticationProtocol_Negotiate = 4,
    __x_ABI_CWindows_CSecurity_CCredentials_CUI_CAuthenticationProtocol_CredSsp = 5,
    __x_ABI_CWindows_CSecurity_CCredentials_CUI_CAuthenticationProtocol_Custom = 6,
};

enum __x_ABI_CWindows_CSecurity_CCredentials_CUI_CCredentialSaveOption
    {
        __x_ABI_CWindows_CSecurity_CCredentials_CUI_CCredentialSaveOption_Unselected = 0,
    __x_ABI_CWindows_CSecurity_CCredentials_CUI_CCredentialSaveOption_Selected = 1,
    __x_ABI_CWindows_CSecurity_CCredentials_CUI_CCredentialSaveOption_Hidden = 2,
};

enum __x_ABI_CWindows_CSecurity_CCredentials_CUI_CUserConsentVerificationResult
    {
        __x_ABI_CWindows_CSecurity_CCredentials_CUI_CUserConsentVerificationResult_Verified = 0,
    __x_ABI_CWindows_CSecurity_CCredentials_CUI_CUserConsentVerificationResult_DeviceNotPresent = 1,
    __x_ABI_CWindows_CSecurity_CCredentials_CUI_CUserConsentVerificationResult_NotConfiguredForUser = 2,
    __x_ABI_CWindows_CSecurity_CCredentials_CUI_CUserConsentVerificationResult_DisabledByPolicy = 3,
    __x_ABI_CWindows_CSecurity_CCredentials_CUI_CUserConsentVerificationResult_DeviceBusy = 4,
    __x_ABI_CWindows_CSecurity_CCredentials_CUI_CUserConsentVerificationResult_RetriesExhausted = 5,
    __x_ABI_CWindows_CSecurity_CCredentials_CUI_CUserConsentVerificationResult_Canceled = 6,
};

enum __x_ABI_CWindows_CSecurity_CCredentials_CUI_CUserConsentVerifierAvailability
    {
        __x_ABI_CWindows_CSecurity_CCredentials_CUI_CUserConsentVerifierAvailability_Available = 0,
    __x_ABI_CWindows_CSecurity_CCredentials_CUI_CUserConsentVerifierAvailability_DeviceNotPresent = 1,
    __x_ABI_CWindows_CSecurity_CCredentials_CUI_CUserConsentVerifierAvailability_NotConfiguredForUser = 2,
    __x_ABI_CWindows_CSecurity_CCredentials_CUI_CUserConsentVerifierAvailability_DisabledByPolicy = 3,
    __x_ABI_CWindows_CSecurity_CCredentials_CUI_CUserConsentVerifierAvailability_DeviceBusy = 4,
};

#if !defined(____x_ABI_CWindows_CSecurity_CCredentials_CUI_CICredentialPickerOptions_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CSecurity_CCredentials_CUI_CICredentialPickerOptions_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CSecurity_CCredentials_CUI_CICredentialPickerOptionsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CSecurity_CCredentials_CUI_CICredentialPickerOptions* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CSecurity_CCredentials_CUI_CICredentialPickerOptions* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CSecurity_CCredentials_CUI_CICredentialPickerOptions* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CSecurity_CCredentials_CUI_CICredentialPickerOptions* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CSecurity_CCredentials_CUI_CICredentialPickerOptions* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CSecurity_CCredentials_CUI_CICredentialPickerOptions* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* put_Caption)(__x_ABI_CWindows_CSecurity_CCredentials_CUI_CICredentialPickerOptions* This,
        HSTRING value);
    HRESULT (STDMETHODCALLTYPE* get_Caption)(__x_ABI_CWindows_CSecurity_CCredentials_CUI_CICredentialPickerOptions* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* put_Message)(__x_ABI_CWindows_CSecurity_CCredentials_CUI_CICredentialPickerOptions* This,
        HSTRING value);
    HRESULT (STDMETHODCALLTYPE* get_Message)(__x_ABI_CWindows_CSecurity_CCredentials_CUI_CICredentialPickerOptions* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* put_ErrorCode)(__x_ABI_CWindows_CSecurity_CCredentials_CUI_CICredentialPickerOptions* This,
        UINT32 value);
    HRESULT (STDMETHODCALLTYPE* get_ErrorCode)(__x_ABI_CWindows_CSecurity_CCredentials_CUI_CICredentialPickerOptions* This,
        UINT32* value);
    HRESULT (STDMETHODCALLTYPE* put_TargetName)(__x_ABI_CWindows_CSecurity_CCredentials_CUI_CICredentialPickerOptions* This,
        HSTRING value);
    HRESULT (STDMETHODCALLTYPE* get_TargetName)(__x_ABI_CWindows_CSecurity_CCredentials_CUI_CICredentialPickerOptions* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* put_AuthenticationProtocol)(__x_ABI_CWindows_CSecurity_CCredentials_CUI_CICredentialPickerOptions* This,
        enum __x_ABI_CWindows_CSecurity_CCredentials_CUI_CAuthenticationProtocol value);
    HRESULT (STDMETHODCALLTYPE* get_AuthenticationProtocol)(__x_ABI_CWindows_CSecurity_CCredentials_CUI_CICredentialPickerOptions* This,
        enum __x_ABI_CWindows_CSecurity_CCredentials_CUI_CAuthenticationProtocol* value);
    HRESULT (STDMETHODCALLTYPE* put_CustomAuthenticationProtocol)(__x_ABI_CWindows_CSecurity_CCredentials_CUI_CICredentialPickerOptions* This,
        HSTRING value);
    HRESULT (STDMETHODCALLTYPE* get_CustomAuthenticationProtocol)(__x_ABI_CWindows_CSecurity_CCredentials_CUI_CICredentialPickerOptions* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* put_PreviousCredential)(__x_ABI_CWindows_CSecurity_CCredentials_CUI_CICredentialPickerOptions* This,
        __x_ABI_CWindows_CStorage_CStreams_CIBuffer* value);
    HRESULT (STDMETHODCALLTYPE* get_PreviousCredential)(__x_ABI_CWindows_CSecurity_CCredentials_CUI_CICredentialPickerOptions* This,
        __x_ABI_CWindows_CStorage_CStreams_CIBuffer** value);
    HRESULT (STDMETHODCALLTYPE* put_AlwaysDisplayDialog)(__x_ABI_CWindows_CSecurity_CCredentials_CUI_CICredentialPickerOptions* This,
        boolean value);
    HRESULT (STDMETHODCALLTYPE* get_AlwaysDisplayDialog)(__x_ABI_CWindows_CSecurity_CCredentials_CUI_CICredentialPickerOptions* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* put_CallerSavesCredential)(__x_ABI_CWindows_CSecurity_CCredentials_CUI_CICredentialPickerOptions* This,
        boolean value);
    HRESULT (STDMETHODCALLTYPE* get_CallerSavesCredential)(__x_ABI_CWindows_CSecurity_CCredentials_CUI_CICredentialPickerOptions* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* put_CredentialSaveOption)(__x_ABI_CWindows_CSecurity_CCredentials_CUI_CICredentialPickerOptions* This,
        enum __x_ABI_CWindows_CSecurity_CCredentials_CUI_CCredentialSaveOption value);
    HRESULT (STDMETHODCALLTYPE* get_CredentialSaveOption)(__x_ABI_CWindows_CSecurity_CCredentials_CUI_CICredentialPickerOptions* This,
        enum __x_ABI_CWindows_CSecurity_CCredentials_CUI_CCredentialSaveOption* value);

        END_INTERFACE
    } __x_ABI_CWindows_CSecurity_CCredentials_CUI_CICredentialPickerOptionsVtbl;

    interface __x_ABI_CWindows_CSecurity_CCredentials_CUI_CICredentialPickerOptions
    {
        CONST_VTBL struct __x_ABI_CWindows_CSecurity_CCredentials_CUI_CICredentialPickerOptionsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CSecurity_CCredentials_CUI_CICredentialPickerOptions;
#endif /* !defined(____x_ABI_CWindows_CSecurity_CCredentials_CUI_CICredentialPickerOptions_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CSecurity_CCredentials_CUI_CICredentialPickerResults_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CSecurity_CCredentials_CUI_CICredentialPickerResults_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CSecurity_CCredentials_CUI_CICredentialPickerResultsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CSecurity_CCredentials_CUI_CICredentialPickerResults* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CSecurity_CCredentials_CUI_CICredentialPickerResults* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CSecurity_CCredentials_CUI_CICredentialPickerResults* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CSecurity_CCredentials_CUI_CICredentialPickerResults* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CSecurity_CCredentials_CUI_CICredentialPickerResults* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CSecurity_CCredentials_CUI_CICredentialPickerResults* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_ErrorCode)(__x_ABI_CWindows_CSecurity_CCredentials_CUI_CICredentialPickerResults* This,
        UINT32* value);
    HRESULT (STDMETHODCALLTYPE* get_CredentialSaveOption)(__x_ABI_CWindows_CSecurity_CCredentials_CUI_CICredentialPickerResults* This,
        enum __x_ABI_CWindows_CSecurity_CCredentials_CUI_CCredentialSaveOption* value);
    HRESULT (STDMETHODCALLTYPE* get_CredentialSaved)(__x_ABI_CWindows_CSecurity_CCredentials_CUI_CICredentialPickerResults* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* get_Credential)(__x_ABI_CWindows_CSecurity_CCredentials_CUI_CICredentialPickerResults* This,
        __x_ABI_CWindows_CStorage_CStreams_CIBuffer** value);
    HRESULT (STDMETHODCALLTYPE* get_CredentialDomainName)(__x_ABI_CWindows_CSecurity_CCredentials_CUI_CICredentialPickerResults* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* get_CredentialUserName)(__x_ABI_CWindows_CSecurity_CCredentials_CUI_CICredentialPickerResults* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* get_CredentialPassword)(__x_ABI_CWindows_CSecurity_CCredentials_CUI_CICredentialPickerResults* This,
        HSTRING* value);

        END_INTERFACE
    } __x_ABI_CWindows_CSecurity_CCredentials_CUI_CICredentialPickerResultsVtbl;

    interface __x_ABI_CWindows_CSecurity_CCredentials_CUI_CICredentialPickerResults
    {
        CONST_VTBL struct __x_ABI_CWindows_CSecurity_CCredentials_CUI_CICredentialPickerResultsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CSecurity_CCredentials_CUI_CICredentialPickerResults;
#endif /* !defined(____x_ABI_CWindows_CSecurity_CCredentials_CUI_CICredentialPickerResults_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CSecurity_CCredentials_CUI_CICredentialPickerStatics_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CSecurity_CCredentials_CUI_CICredentialPickerStatics_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CSecurity_CCredentials_CUI_CICredentialPickerStaticsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CSecurity_CCredentials_CUI_CICredentialPickerStatics* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CSecurity_CCredentials_CUI_CICredentialPickerStatics* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CSecurity_CCredentials_CUI_CICredentialPickerStatics* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CSecurity_CCredentials_CUI_CICredentialPickerStatics* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CSecurity_CCredentials_CUI_CICredentialPickerStatics* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CSecurity_CCredentials_CUI_CICredentialPickerStatics* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* PickWithOptionsAsync)(__x_ABI_CWindows_CSecurity_CCredentials_CUI_CICredentialPickerStatics* This,
        __x_ABI_CWindows_CSecurity_CCredentials_CUI_CICredentialPickerOptions* options,
        __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CSecurity__CCredentials__CUI__CCredentialPickerResults** operation);
    HRESULT (STDMETHODCALLTYPE* PickWithMessageAsync)(__x_ABI_CWindows_CSecurity_CCredentials_CUI_CICredentialPickerStatics* This,
        HSTRING targetName,
        HSTRING message,
        __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CSecurity__CCredentials__CUI__CCredentialPickerResults** operation);
    HRESULT (STDMETHODCALLTYPE* PickWithCaptionAsync)(__x_ABI_CWindows_CSecurity_CCredentials_CUI_CICredentialPickerStatics* This,
        HSTRING targetName,
        HSTRING message,
        HSTRING caption,
        __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CSecurity__CCredentials__CUI__CCredentialPickerResults** operation);

        END_INTERFACE
    } __x_ABI_CWindows_CSecurity_CCredentials_CUI_CICredentialPickerStaticsVtbl;

    interface __x_ABI_CWindows_CSecurity_CCredentials_CUI_CICredentialPickerStatics
    {
        CONST_VTBL struct __x_ABI_CWindows_CSecurity_CCredentials_CUI_CICredentialPickerStaticsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CSecurity_CCredentials_CUI_CICredentialPickerStatics;
#endif /* !defined(____x_ABI_CWindows_CSecurity_CCredentials_CUI_CICredentialPickerStatics_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CSecurity_CCredentials_CUI_CIUserConsentVerifierStatics_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CSecurity_CCredentials_CUI_CIUserConsentVerifierStatics_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CSecurity_CCredentials_CUI_CIUserConsentVerifierStaticsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CSecurity_CCredentials_CUI_CIUserConsentVerifierStatics* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CSecurity_CCredentials_CUI_CIUserConsentVerifierStatics* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CSecurity_CCredentials_CUI_CIUserConsentVerifierStatics* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CSecurity_CCredentials_CUI_CIUserConsentVerifierStatics* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CSecurity_CCredentials_CUI_CIUserConsentVerifierStatics* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CSecurity_CCredentials_CUI_CIUserConsentVerifierStatics* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* CheckAvailabilityAsync)(__x_ABI_CWindows_CSecurity_CCredentials_CUI_CIUserConsentVerifierStatics* This,
        __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CSecurity__CCredentials__CUI__CUserConsentVerifierAvailability** result);
    HRESULT (STDMETHODCALLTYPE* RequestVerificationAsync)(__x_ABI_CWindows_CSecurity_CCredentials_CUI_CIUserConsentVerifierStatics* This,
        HSTRING message,
        __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CSecurity__CCredentials__CUI__CUserConsentVerificationResult** result);

        END_INTERFACE
    } __x_ABI_CWindows_CSecurity_CCredentials_CUI_CIUserConsentVerifierStaticsVtbl;

    interface __x_ABI_CWindows_CSecurity_CCredentials_CUI_CIUserConsentVerifierStatics
    {
        CONST_VTBL struct __x_ABI_CWindows_CSecurity_CCredentials_CUI_CIUserConsentVerifierStaticsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CSecurity_CCredentials_CUI_CIUserConsentVerifierStatics;
#endif /* !defined(____x_ABI_CWindows_CSecurity_CCredentials_CUI_CIUserConsentVerifierStatics_INTERFACE_DEFINED__) */
    
