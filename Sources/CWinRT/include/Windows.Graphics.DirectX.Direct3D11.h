// WARNING: Please don't edit this file. It was generated by Swift/WinRT v0.0.1

#pragma once
// Header files for imported files
#include <inspectable.h>
#include <EventToken.h>
#include <windowscontracts.h>
#include "Windows.Foundation.h"
#include "Windows.Graphics.DirectX.h"

/* Forward Declarations */
#ifndef ____x_ABI_CWindows_CGraphics_CDirectX_CDirect3D11_CIDirect3DDevice_FWD_DEFINED__
#define ____x_ABI_CWindows_CGraphics_CDirectX_CDirect3D11_CIDirect3DDevice_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CGraphics_CDirectX_CDirect3D11_CIDirect3DDevice __x_ABI_CWindows_CGraphics_CDirectX_CDirect3D11_CIDirect3DDevice;

#endif // ____x_ABI_CWindows_CGraphics_CDirectX_CDirect3D11_CIDirect3DDevice_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CGraphics_CDirectX_CDirect3D11_CIDirect3DSurface_FWD_DEFINED__
#define ____x_ABI_CWindows_CGraphics_CDirectX_CDirect3D11_CIDirect3DSurface_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CGraphics_CDirectX_CDirect3D11_CIDirect3DSurface __x_ABI_CWindows_CGraphics_CDirectX_CDirect3D11_CIDirect3DSurface;

#endif // ____x_ABI_CWindows_CGraphics_CDirectX_CDirect3D11_CIDirect3DSurface_FWD_DEFINED__

// Parameterized interface forward declarations (C)

// Collection interface definitions

#ifndef ____x_ABI_CWindows_CFoundation_CIClosable_FWD_DEFINED__
#define ____x_ABI_CWindows_CFoundation_CIClosable_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CFoundation_CIClosable __x_ABI_CWindows_CFoundation_CIClosable;

#endif // ____x_ABI_CWindows_CFoundation_CIClosable_FWD_DEFINED__

typedef enum __x_ABI_CWindows_CGraphics_CDirectX_CDirectXPixelFormat __x_ABI_CWindows_CGraphics_CDirectX_CDirectXPixelFormat;

typedef struct __x_ABI_CWindows_CGraphics_CDirectX_CDirect3D11_CDirect3DMultisampleDescription __x_ABI_CWindows_CGraphics_CDirectX_CDirect3D11_CDirect3DMultisampleDescription;

typedef struct __x_ABI_CWindows_CGraphics_CDirectX_CDirect3D11_CDirect3DSurfaceDescription __x_ABI_CWindows_CGraphics_CDirectX_CDirect3D11_CDirect3DSurfaceDescription;

enum __x_ABI_CWindows_CGraphics_CDirectX_CDirect3D11_CDirect3DBindings
    {
        __x_ABI_CWindows_CGraphics_CDirectX_CDirect3D11_CDirect3DBindings_VertexBuffer = 0x1,
    __x_ABI_CWindows_CGraphics_CDirectX_CDirect3D11_CDirect3DBindings_IndexBuffer = 0x2,
    __x_ABI_CWindows_CGraphics_CDirectX_CDirect3D11_CDirect3DBindings_ConstantBuffer = 0x4,
    __x_ABI_CWindows_CGraphics_CDirectX_CDirect3D11_CDirect3DBindings_ShaderResource = 0x8,
    __x_ABI_CWindows_CGraphics_CDirectX_CDirect3D11_CDirect3DBindings_StreamOutput = 0x10,
    __x_ABI_CWindows_CGraphics_CDirectX_CDirect3D11_CDirect3DBindings_RenderTarget = 0x20,
    __x_ABI_CWindows_CGraphics_CDirectX_CDirect3D11_CDirect3DBindings_DepthStencil = 0x40,
    __x_ABI_CWindows_CGraphics_CDirectX_CDirect3D11_CDirect3DBindings_UnorderedAccess = 0x80,
    __x_ABI_CWindows_CGraphics_CDirectX_CDirect3D11_CDirect3DBindings_Decoder = 0x200,
    __x_ABI_CWindows_CGraphics_CDirectX_CDirect3D11_CDirect3DBindings_VideoEncoder = 0x400,
};

enum __x_ABI_CWindows_CGraphics_CDirectX_CDirect3D11_CDirect3DUsage
    {
        __x_ABI_CWindows_CGraphics_CDirectX_CDirect3D11_CDirect3DUsage_Default = 0,
    __x_ABI_CWindows_CGraphics_CDirectX_CDirect3D11_CDirect3DUsage_Immutable = 1,
    __x_ABI_CWindows_CGraphics_CDirectX_CDirect3D11_CDirect3DUsage_Dynamic = 2,
    __x_ABI_CWindows_CGraphics_CDirectX_CDirect3D11_CDirect3DUsage_Staging = 3,
};

struct __x_ABI_CWindows_CGraphics_CDirectX_CDirect3D11_CDirect3DMultisampleDescription
    {
        INT32 Count;
    INT32 Quality;
};

struct __x_ABI_CWindows_CGraphics_CDirectX_CDirect3D11_CDirect3DSurfaceDescription
    {
        INT32 Width;
    INT32 Height;
    enum __x_ABI_CWindows_CGraphics_CDirectX_CDirectXPixelFormat Format;
    struct __x_ABI_CWindows_CGraphics_CDirectX_CDirect3D11_CDirect3DMultisampleDescription MultisampleDescription;
};

#if !defined(____x_ABI_CWindows_CGraphics_CDirectX_CDirect3D11_CIDirect3DDevice_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CGraphics_CDirectX_CDirect3D11_CIDirect3DDevice_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CGraphics_CDirectX_CDirect3D11_CIDirect3DDeviceVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CGraphics_CDirectX_CDirect3D11_CIDirect3DDevice* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CGraphics_CDirectX_CDirect3D11_CIDirect3DDevice* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CGraphics_CDirectX_CDirect3D11_CIDirect3DDevice* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CGraphics_CDirectX_CDirect3D11_CIDirect3DDevice* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CGraphics_CDirectX_CDirect3D11_CIDirect3DDevice* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CGraphics_CDirectX_CDirect3D11_CIDirect3DDevice* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* Trim)(__x_ABI_CWindows_CGraphics_CDirectX_CDirect3D11_CIDirect3DDevice* This);

        END_INTERFACE
    } __x_ABI_CWindows_CGraphics_CDirectX_CDirect3D11_CIDirect3DDeviceVtbl;

    interface __x_ABI_CWindows_CGraphics_CDirectX_CDirect3D11_CIDirect3DDevice
    {
        CONST_VTBL struct __x_ABI_CWindows_CGraphics_CDirectX_CDirect3D11_CIDirect3DDeviceVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CGraphics_CDirectX_CDirect3D11_CIDirect3DDevice;
#endif /* !defined(____x_ABI_CWindows_CGraphics_CDirectX_CDirect3D11_CIDirect3DDevice_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CGraphics_CDirectX_CDirect3D11_CIDirect3DSurface_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CGraphics_CDirectX_CDirect3D11_CIDirect3DSurface_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CGraphics_CDirectX_CDirect3D11_CIDirect3DSurfaceVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CGraphics_CDirectX_CDirect3D11_CIDirect3DSurface* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CGraphics_CDirectX_CDirect3D11_CIDirect3DSurface* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CGraphics_CDirectX_CDirect3D11_CIDirect3DSurface* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CGraphics_CDirectX_CDirect3D11_CIDirect3DSurface* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CGraphics_CDirectX_CDirect3D11_CIDirect3DSurface* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CGraphics_CDirectX_CDirect3D11_CIDirect3DSurface* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Description)(__x_ABI_CWindows_CGraphics_CDirectX_CDirect3D11_CIDirect3DSurface* This,
        struct __x_ABI_CWindows_CGraphics_CDirectX_CDirect3D11_CDirect3DSurfaceDescription* value);

        END_INTERFACE
    } __x_ABI_CWindows_CGraphics_CDirectX_CDirect3D11_CIDirect3DSurfaceVtbl;

    interface __x_ABI_CWindows_CGraphics_CDirectX_CDirect3D11_CIDirect3DSurface
    {
        CONST_VTBL struct __x_ABI_CWindows_CGraphics_CDirectX_CDirect3D11_CIDirect3DSurfaceVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CGraphics_CDirectX_CDirect3D11_CIDirect3DSurface;
#endif /* !defined(____x_ABI_CWindows_CGraphics_CDirectX_CDirect3D11_CIDirect3DSurface_INTERFACE_DEFINED__) */
    
