// WARNING: Please don't edit this file. It was generated by Swift/WinRT v0.0.1

#pragma once
// Header files for imported files
#include <inspectable.h>
#include <EventToken.h>
#include <windowscontracts.h>
#include "Windows.Foundation.h"
#include "Windows.Devices.h"
#include "Windows.Devices.I2c.Provider.h"
// Importing Collections header
#include "Windows.Foundation.Collections.h"

/* Forward Declarations */
#ifndef ____x_ABI_CWindows_CDevices_CI2c_CII2cConnectionSettings_FWD_DEFINED__
#define ____x_ABI_CWindows_CDevices_CI2c_CII2cConnectionSettings_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CDevices_CI2c_CII2cConnectionSettings __x_ABI_CWindows_CDevices_CI2c_CII2cConnectionSettings;

#endif // ____x_ABI_CWindows_CDevices_CI2c_CII2cConnectionSettings_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CDevices_CI2c_CII2cConnectionSettingsFactory_FWD_DEFINED__
#define ____x_ABI_CWindows_CDevices_CI2c_CII2cConnectionSettingsFactory_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CDevices_CI2c_CII2cConnectionSettingsFactory __x_ABI_CWindows_CDevices_CI2c_CII2cConnectionSettingsFactory;

#endif // ____x_ABI_CWindows_CDevices_CI2c_CII2cConnectionSettingsFactory_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CDevices_CI2c_CII2cController_FWD_DEFINED__
#define ____x_ABI_CWindows_CDevices_CI2c_CII2cController_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CDevices_CI2c_CII2cController __x_ABI_CWindows_CDevices_CI2c_CII2cController;

#endif // ____x_ABI_CWindows_CDevices_CI2c_CII2cController_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CDevices_CI2c_CII2cControllerStatics_FWD_DEFINED__
#define ____x_ABI_CWindows_CDevices_CI2c_CII2cControllerStatics_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CDevices_CI2c_CII2cControllerStatics __x_ABI_CWindows_CDevices_CI2c_CII2cControllerStatics;

#endif // ____x_ABI_CWindows_CDevices_CI2c_CII2cControllerStatics_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CDevices_CI2c_CII2cDevice_FWD_DEFINED__
#define ____x_ABI_CWindows_CDevices_CI2c_CII2cDevice_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CDevices_CI2c_CII2cDevice __x_ABI_CWindows_CDevices_CI2c_CII2cDevice;

#endif // ____x_ABI_CWindows_CDevices_CI2c_CII2cDevice_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CDevices_CI2c_CII2cDeviceStatics_FWD_DEFINED__
#define ____x_ABI_CWindows_CDevices_CI2c_CII2cDeviceStatics_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CDevices_CI2c_CII2cDeviceStatics __x_ABI_CWindows_CDevices_CI2c_CII2cDeviceStatics;

#endif // ____x_ABI_CWindows_CDevices_CI2c_CII2cDeviceStatics_FWD_DEFINED__

// Parameterized interface forward declarations (C)

// Collection interface definitions

typedef interface __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CDevices__CI2c__CI2cController __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CDevices__CI2c__CI2cController;

#if !defined(____x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CDevices__CI2c__CI2cController_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CDevices__CI2c__CI2cController_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CDevices__CI2c__CI2cController __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CDevices__CI2c__CI2cController;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CDevices__CI2c__CI2cController;

    typedef struct __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CDevices__CI2c__CI2cControllerVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CDevices__CI2c__CI2cController* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CDevices__CI2c__CI2cController* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CDevices__CI2c__CI2cController* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CDevices__CI2c__CI2cController* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CDevices__CI2c__CI2cController* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CDevices__CI2c__CI2cController* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* put_Completed)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CDevices__CI2c__CI2cController* This,
        __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CDevices__CI2c__CI2cController* handler);
    HRESULT (STDMETHODCALLTYPE* get_Completed)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CDevices__CI2c__CI2cController* This,
        __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CDevices__CI2c__CI2cController** result);
    HRESULT (STDMETHODCALLTYPE* GetResults)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CDevices__CI2c__CI2cController* This,
        __x_ABI_CWindows_CDevices_CI2c_CII2cController** result);

        END_INTERFACE
    } __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CDevices__CI2c__CI2cControllerVtbl;

    interface __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CDevices__CI2c__CI2cController
    {
        CONST_VTBL struct __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CDevices__CI2c__CI2cControllerVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CDevices__CI2c__CI2cController_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CDevices__CI2c__CI2cController_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CDevices__CI2c__CI2cController_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CDevices__CI2c__CI2cController __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CDevices__CI2c__CI2cController;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CDevices__CI2c__CI2cController;

    typedef struct __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CDevices__CI2c__CI2cControllerVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CDevices__CI2c__CI2cController* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CDevices__CI2c__CI2cController* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CDevices__CI2c__CI2cController* This);
        HRESULT (STDMETHODCALLTYPE* Invoke)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CDevices__CI2c__CI2cController* This,
        __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CDevices__CI2c__CI2cController* asyncInfo,
        enum __x_ABI_CWindows_CFoundation_CAsyncStatus asyncStatus);

        END_INTERFACE
    } __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CDevices__CI2c__CI2cControllerVtbl;

    interface __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CDevices__CI2c__CI2cController
    {
        CONST_VTBL struct __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CDevices__CI2c__CI2cControllerVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CDevices__CI2c__CI2cController_INTERFACE_DEFINED__
    
typedef interface __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CDevices__CI2c__CI2cDevice __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CDevices__CI2c__CI2cDevice;

#if !defined(____x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CDevices__CI2c__CI2cDevice_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CDevices__CI2c__CI2cDevice_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CDevices__CI2c__CI2cDevice __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CDevices__CI2c__CI2cDevice;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CDevices__CI2c__CI2cDevice;

    typedef struct __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CDevices__CI2c__CI2cDeviceVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CDevices__CI2c__CI2cDevice* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CDevices__CI2c__CI2cDevice* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CDevices__CI2c__CI2cDevice* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CDevices__CI2c__CI2cDevice* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CDevices__CI2c__CI2cDevice* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CDevices__CI2c__CI2cDevice* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* put_Completed)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CDevices__CI2c__CI2cDevice* This,
        __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CDevices__CI2c__CI2cDevice* handler);
    HRESULT (STDMETHODCALLTYPE* get_Completed)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CDevices__CI2c__CI2cDevice* This,
        __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CDevices__CI2c__CI2cDevice** result);
    HRESULT (STDMETHODCALLTYPE* GetResults)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CDevices__CI2c__CI2cDevice* This,
        __x_ABI_CWindows_CDevices_CI2c_CII2cDevice** result);

        END_INTERFACE
    } __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CDevices__CI2c__CI2cDeviceVtbl;

    interface __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CDevices__CI2c__CI2cDevice
    {
        CONST_VTBL struct __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CDevices__CI2c__CI2cDeviceVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CDevices__CI2c__CI2cDevice_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CDevices__CI2c__CI2cDevice_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CDevices__CI2c__CI2cDevice_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CDevices__CI2c__CI2cDevice __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CDevices__CI2c__CI2cDevice;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CDevices__CI2c__CI2cDevice;

    typedef struct __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CDevices__CI2c__CI2cDeviceVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CDevices__CI2c__CI2cDevice* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CDevices__CI2c__CI2cDevice* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CDevices__CI2c__CI2cDevice* This);
        HRESULT (STDMETHODCALLTYPE* Invoke)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CDevices__CI2c__CI2cDevice* This,
        __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CDevices__CI2c__CI2cDevice* asyncInfo,
        enum __x_ABI_CWindows_CFoundation_CAsyncStatus asyncStatus);

        END_INTERFACE
    } __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CDevices__CI2c__CI2cDeviceVtbl;

    interface __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CDevices__CI2c__CI2cDevice
    {
        CONST_VTBL struct __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CDevices__CI2c__CI2cDeviceVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CDevices__CI2c__CI2cDevice_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIIterator_1___x_ABI_CWindows__CDevices__CI2c__CI2cController_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIIterator_1___x_ABI_CWindows__CDevices__CI2c__CI2cController_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIIterator_1___x_ABI_CWindows__CDevices__CI2c__CI2cController __x_ABI_C__FIIterator_1___x_ABI_CWindows__CDevices__CI2c__CI2cController;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIIterator_1___x_ABI_CWindows__CDevices__CI2c__CI2cController;

    typedef struct __x_ABI_C__FIIterator_1___x_ABI_CWindows__CDevices__CI2c__CI2cControllerVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CDevices__CI2c__CI2cController* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CDevices__CI2c__CI2cController* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CDevices__CI2c__CI2cController* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CDevices__CI2c__CI2cController* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CDevices__CI2c__CI2cController* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CDevices__CI2c__CI2cController* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Current)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CDevices__CI2c__CI2cController* This,
        __x_ABI_CWindows_CDevices_CI2c_CII2cController** result);
    HRESULT (STDMETHODCALLTYPE* get_HasCurrent)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CDevices__CI2c__CI2cController* This,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* MoveNext)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CDevices__CI2c__CI2cController* This,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CDevices__CI2c__CI2cController* This,
        UINT32 itemsLength,
        __x_ABI_CWindows_CDevices_CI2c_CII2cController** items,
        UINT32* result);

        END_INTERFACE
    } __x_ABI_C__FIIterator_1___x_ABI_CWindows__CDevices__CI2c__CI2cControllerVtbl;

    interface __x_ABI_C__FIIterator_1___x_ABI_CWindows__CDevices__CI2c__CI2cController
    {
        CONST_VTBL struct __x_ABI_C__FIIterator_1___x_ABI_CWindows__CDevices__CI2c__CI2cControllerVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIIterator_1___x_ABI_CWindows__CDevices__CI2c__CI2cController_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIIterable_1___x_ABI_CWindows__CDevices__CI2c__CI2cController_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIIterable_1___x_ABI_CWindows__CDevices__CI2c__CI2cController_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIIterable_1___x_ABI_CWindows__CDevices__CI2c__CI2cController __x_ABI_C__FIIterable_1___x_ABI_CWindows__CDevices__CI2c__CI2cController;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIIterable_1___x_ABI_CWindows__CDevices__CI2c__CI2cController;

    typedef struct __x_ABI_C__FIIterable_1___x_ABI_CWindows__CDevices__CI2c__CI2cControllerVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CDevices__CI2c__CI2cController* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CDevices__CI2c__CI2cController* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CDevices__CI2c__CI2cController* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CDevices__CI2c__CI2cController* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CDevices__CI2c__CI2cController* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CDevices__CI2c__CI2cController* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* First)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CDevices__CI2c__CI2cController* This,
        __x_ABI_C__FIIterator_1___x_ABI_CWindows__CDevices__CI2c__CI2cController** result);

        END_INTERFACE
    } __x_ABI_C__FIIterable_1___x_ABI_CWindows__CDevices__CI2c__CI2cControllerVtbl;

    interface __x_ABI_C__FIIterable_1___x_ABI_CWindows__CDevices__CI2c__CI2cController
    {
        CONST_VTBL struct __x_ABI_C__FIIterable_1___x_ABI_CWindows__CDevices__CI2c__CI2cControllerVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIIterable_1___x_ABI_CWindows__CDevices__CI2c__CI2cController_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIVectorView_1___x_ABI_CWindows__CDevices__CI2c__CI2cController_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIVectorView_1___x_ABI_CWindows__CDevices__CI2c__CI2cController_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CDevices__CI2c__CI2cController __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CDevices__CI2c__CI2cController;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CDevices__CI2c__CI2cController;

    typedef struct __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CDevices__CI2c__CI2cControllerVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CDevices__CI2c__CI2cController* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CDevices__CI2c__CI2cController* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CDevices__CI2c__CI2cController* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CDevices__CI2c__CI2cController* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CDevices__CI2c__CI2cController* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CDevices__CI2c__CI2cController* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* GetAt)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CDevices__CI2c__CI2cController* This,
        UINT32 index,
        __x_ABI_CWindows_CDevices_CI2c_CII2cController** result);
    HRESULT (STDMETHODCALLTYPE* get_Size)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CDevices__CI2c__CI2cController* This,
        UINT32* result);
    HRESULT (STDMETHODCALLTYPE* IndexOf)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CDevices__CI2c__CI2cController* This,
        __x_ABI_CWindows_CDevices_CI2c_CII2cController* value,
        UINT32* index,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CDevices__CI2c__CI2cController* This,
        UINT32 startIndex,
        UINT32 itemsLength,
        __x_ABI_CWindows_CDevices_CI2c_CII2cController** items,
        UINT32* result);

        END_INTERFACE
    } __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CDevices__CI2c__CI2cControllerVtbl;

    interface __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CDevices__CI2c__CI2cController
    {
        CONST_VTBL struct __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CDevices__CI2c__CI2cControllerVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIVectorView_1___x_ABI_CWindows__CDevices__CI2c__CI2cController_INTERFACE_DEFINED__
    
typedef interface __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CDevices__CI2c__CI2cController __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CDevices__CI2c__CI2cController;

#if !defined(____x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CDevices__CI2c__CI2cController_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CDevices__CI2c__CI2cController_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CDevices__CI2c__CI2cController __x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CDevices__CI2c__CI2cController;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CDevices__CI2c__CI2cController;

    typedef struct __x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CDevices__CI2c__CI2cControllerVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CDevices__CI2c__CI2cController* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CDevices__CI2c__CI2cController* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CDevices__CI2c__CI2cController* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CDevices__CI2c__CI2cController* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CDevices__CI2c__CI2cController* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CDevices__CI2c__CI2cController* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* put_Completed)(__x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CDevices__CI2c__CI2cController* This,
        __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CDevices__CI2c__CI2cController* handler);
    HRESULT (STDMETHODCALLTYPE* get_Completed)(__x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CDevices__CI2c__CI2cController* This,
        __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CDevices__CI2c__CI2cController** result);
    HRESULT (STDMETHODCALLTYPE* GetResults)(__x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CDevices__CI2c__CI2cController* This,
        __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CDevices__CI2c__CI2cController** result);

        END_INTERFACE
    } __x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CDevices__CI2c__CI2cControllerVtbl;

    interface __x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CDevices__CI2c__CI2cController
    {
        CONST_VTBL struct __x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CDevices__CI2c__CI2cControllerVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CDevices__CI2c__CI2cController_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CDevices__CI2c__CI2cController_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CDevices__CI2c__CI2cController_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CDevices__CI2c__CI2cController __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CDevices__CI2c__CI2cController;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CDevices__CI2c__CI2cController;

    typedef struct __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CDevices__CI2c__CI2cControllerVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CDevices__CI2c__CI2cController* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CDevices__CI2c__CI2cController* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CDevices__CI2c__CI2cController* This);
        HRESULT (STDMETHODCALLTYPE* Invoke)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CDevices__CI2c__CI2cController* This,
        __x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CDevices__CI2c__CI2cController* asyncInfo,
        enum __x_ABI_CWindows_CFoundation_CAsyncStatus asyncStatus);

        END_INTERFACE
    } __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CDevices__CI2c__CI2cControllerVtbl;

    interface __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CDevices__CI2c__CI2cController
    {
        CONST_VTBL struct __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CDevices__CI2c__CI2cControllerVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CDevices__CI2c__CI2cController_INTERFACE_DEFINED__
    
#ifndef ____x_ABI_CWindows_CDevices_CI2c_CProvider_CII2cProvider_FWD_DEFINED__
#define ____x_ABI_CWindows_CDevices_CI2c_CProvider_CII2cProvider_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CDevices_CI2c_CProvider_CII2cProvider __x_ABI_CWindows_CDevices_CI2c_CProvider_CII2cProvider;

#endif // ____x_ABI_CWindows_CDevices_CI2c_CProvider_CII2cProvider_FWD_DEFINED__

typedef enum __x_ABI_CWindows_CFoundation_CAsyncStatus __x_ABI_CWindows_CFoundation_CAsyncStatus;

#ifndef ____x_ABI_CWindows_CFoundation_CIAsyncInfo_FWD_DEFINED__
#define ____x_ABI_CWindows_CFoundation_CIAsyncInfo_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CFoundation_CIAsyncInfo __x_ABI_CWindows_CFoundation_CIAsyncInfo;

#endif // ____x_ABI_CWindows_CFoundation_CIAsyncInfo_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CFoundation_CIClosable_FWD_DEFINED__
#define ____x_ABI_CWindows_CFoundation_CIClosable_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CFoundation_CIClosable __x_ABI_CWindows_CFoundation_CIClosable;

#endif // ____x_ABI_CWindows_CFoundation_CIClosable_FWD_DEFINED__

typedef enum __x_ABI_CWindows_CDevices_CI2c_CI2cBusSpeed __x_ABI_CWindows_CDevices_CI2c_CI2cBusSpeed;

typedef enum __x_ABI_CWindows_CDevices_CI2c_CI2cSharingMode __x_ABI_CWindows_CDevices_CI2c_CI2cSharingMode;

typedef enum __x_ABI_CWindows_CDevices_CI2c_CI2cTransferStatus __x_ABI_CWindows_CDevices_CI2c_CI2cTransferStatus;

typedef struct __x_ABI_CWindows_CDevices_CI2c_CI2cTransferResult __x_ABI_CWindows_CDevices_CI2c_CI2cTransferResult;

enum __x_ABI_CWindows_CDevices_CI2c_CI2cBusSpeed
    {
        __x_ABI_CWindows_CDevices_CI2c_CI2cBusSpeed_StandardMode = 0,
    __x_ABI_CWindows_CDevices_CI2c_CI2cBusSpeed_FastMode = 1,
};

enum __x_ABI_CWindows_CDevices_CI2c_CI2cSharingMode
    {
        __x_ABI_CWindows_CDevices_CI2c_CI2cSharingMode_Exclusive = 0,
    __x_ABI_CWindows_CDevices_CI2c_CI2cSharingMode_Shared = 1,
};

enum __x_ABI_CWindows_CDevices_CI2c_CI2cTransferStatus
    {
        __x_ABI_CWindows_CDevices_CI2c_CI2cTransferStatus_FullTransfer = 0,
    __x_ABI_CWindows_CDevices_CI2c_CI2cTransferStatus_PartialTransfer = 1,
    __x_ABI_CWindows_CDevices_CI2c_CI2cTransferStatus_SlaveAddressNotAcknowledged = 2,
    __x_ABI_CWindows_CDevices_CI2c_CI2cTransferStatus_ClockStretchTimeout = 3,
    __x_ABI_CWindows_CDevices_CI2c_CI2cTransferStatus_UnknownError = 4,
};

struct __x_ABI_CWindows_CDevices_CI2c_CI2cTransferResult
    {
        enum __x_ABI_CWindows_CDevices_CI2c_CI2cTransferStatus Status;
    UINT32 BytesTransferred;
};

#if !defined(____x_ABI_CWindows_CDevices_CI2c_CII2cConnectionSettings_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CDevices_CI2c_CII2cConnectionSettings_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CDevices_CI2c_CII2cConnectionSettingsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CDevices_CI2c_CII2cConnectionSettings* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CDevices_CI2c_CII2cConnectionSettings* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CDevices_CI2c_CII2cConnectionSettings* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CDevices_CI2c_CII2cConnectionSettings* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CDevices_CI2c_CII2cConnectionSettings* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CDevices_CI2c_CII2cConnectionSettings* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_SlaveAddress)(__x_ABI_CWindows_CDevices_CI2c_CII2cConnectionSettings* This,
        INT32* value);
    HRESULT (STDMETHODCALLTYPE* put_SlaveAddress)(__x_ABI_CWindows_CDevices_CI2c_CII2cConnectionSettings* This,
        INT32 value);
    HRESULT (STDMETHODCALLTYPE* get_BusSpeed)(__x_ABI_CWindows_CDevices_CI2c_CII2cConnectionSettings* This,
        enum __x_ABI_CWindows_CDevices_CI2c_CI2cBusSpeed* value);
    HRESULT (STDMETHODCALLTYPE* put_BusSpeed)(__x_ABI_CWindows_CDevices_CI2c_CII2cConnectionSettings* This,
        enum __x_ABI_CWindows_CDevices_CI2c_CI2cBusSpeed value);
    HRESULT (STDMETHODCALLTYPE* get_SharingMode)(__x_ABI_CWindows_CDevices_CI2c_CII2cConnectionSettings* This,
        enum __x_ABI_CWindows_CDevices_CI2c_CI2cSharingMode* value);
    HRESULT (STDMETHODCALLTYPE* put_SharingMode)(__x_ABI_CWindows_CDevices_CI2c_CII2cConnectionSettings* This,
        enum __x_ABI_CWindows_CDevices_CI2c_CI2cSharingMode value);

        END_INTERFACE
    } __x_ABI_CWindows_CDevices_CI2c_CII2cConnectionSettingsVtbl;

    interface __x_ABI_CWindows_CDevices_CI2c_CII2cConnectionSettings
    {
        CONST_VTBL struct __x_ABI_CWindows_CDevices_CI2c_CII2cConnectionSettingsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CDevices_CI2c_CII2cConnectionSettings;
#endif /* !defined(____x_ABI_CWindows_CDevices_CI2c_CII2cConnectionSettings_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CDevices_CI2c_CII2cConnectionSettingsFactory_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CDevices_CI2c_CII2cConnectionSettingsFactory_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CDevices_CI2c_CII2cConnectionSettingsFactoryVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CDevices_CI2c_CII2cConnectionSettingsFactory* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CDevices_CI2c_CII2cConnectionSettingsFactory* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CDevices_CI2c_CII2cConnectionSettingsFactory* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CDevices_CI2c_CII2cConnectionSettingsFactory* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CDevices_CI2c_CII2cConnectionSettingsFactory* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CDevices_CI2c_CII2cConnectionSettingsFactory* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* Create)(__x_ABI_CWindows_CDevices_CI2c_CII2cConnectionSettingsFactory* This,
        INT32 slaveAddress,
        __x_ABI_CWindows_CDevices_CI2c_CII2cConnectionSettings** value);

        END_INTERFACE
    } __x_ABI_CWindows_CDevices_CI2c_CII2cConnectionSettingsFactoryVtbl;

    interface __x_ABI_CWindows_CDevices_CI2c_CII2cConnectionSettingsFactory
    {
        CONST_VTBL struct __x_ABI_CWindows_CDevices_CI2c_CII2cConnectionSettingsFactoryVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CDevices_CI2c_CII2cConnectionSettingsFactory;
#endif /* !defined(____x_ABI_CWindows_CDevices_CI2c_CII2cConnectionSettingsFactory_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CDevices_CI2c_CII2cController_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CDevices_CI2c_CII2cController_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CDevices_CI2c_CII2cControllerVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CDevices_CI2c_CII2cController* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CDevices_CI2c_CII2cController* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CDevices_CI2c_CII2cController* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CDevices_CI2c_CII2cController* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CDevices_CI2c_CII2cController* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CDevices_CI2c_CII2cController* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* GetDevice)(__x_ABI_CWindows_CDevices_CI2c_CII2cController* This,
        __x_ABI_CWindows_CDevices_CI2c_CII2cConnectionSettings* settings,
        __x_ABI_CWindows_CDevices_CI2c_CII2cDevice** device);

        END_INTERFACE
    } __x_ABI_CWindows_CDevices_CI2c_CII2cControllerVtbl;

    interface __x_ABI_CWindows_CDevices_CI2c_CII2cController
    {
        CONST_VTBL struct __x_ABI_CWindows_CDevices_CI2c_CII2cControllerVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CDevices_CI2c_CII2cController;
#endif /* !defined(____x_ABI_CWindows_CDevices_CI2c_CII2cController_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CDevices_CI2c_CII2cControllerStatics_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CDevices_CI2c_CII2cControllerStatics_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CDevices_CI2c_CII2cControllerStaticsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CDevices_CI2c_CII2cControllerStatics* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CDevices_CI2c_CII2cControllerStatics* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CDevices_CI2c_CII2cControllerStatics* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CDevices_CI2c_CII2cControllerStatics* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CDevices_CI2c_CII2cControllerStatics* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CDevices_CI2c_CII2cControllerStatics* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* GetControllersAsync)(__x_ABI_CWindows_CDevices_CI2c_CII2cControllerStatics* This,
        __x_ABI_CWindows_CDevices_CI2c_CProvider_CII2cProvider* provider,
        __x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CDevices__CI2c__CI2cController** operation);
    HRESULT (STDMETHODCALLTYPE* GetDefaultAsync)(__x_ABI_CWindows_CDevices_CI2c_CII2cControllerStatics* This,
        __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CDevices__CI2c__CI2cController** operation);

        END_INTERFACE
    } __x_ABI_CWindows_CDevices_CI2c_CII2cControllerStaticsVtbl;

    interface __x_ABI_CWindows_CDevices_CI2c_CII2cControllerStatics
    {
        CONST_VTBL struct __x_ABI_CWindows_CDevices_CI2c_CII2cControllerStaticsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CDevices_CI2c_CII2cControllerStatics;
#endif /* !defined(____x_ABI_CWindows_CDevices_CI2c_CII2cControllerStatics_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CDevices_CI2c_CII2cDevice_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CDevices_CI2c_CII2cDevice_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CDevices_CI2c_CII2cDeviceVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CDevices_CI2c_CII2cDevice* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CDevices_CI2c_CII2cDevice* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CDevices_CI2c_CII2cDevice* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CDevices_CI2c_CII2cDevice* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CDevices_CI2c_CII2cDevice* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CDevices_CI2c_CII2cDevice* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_DeviceId)(__x_ABI_CWindows_CDevices_CI2c_CII2cDevice* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* get_ConnectionSettings)(__x_ABI_CWindows_CDevices_CI2c_CII2cDevice* This,
        __x_ABI_CWindows_CDevices_CI2c_CII2cConnectionSettings** value);
    HRESULT (STDMETHODCALLTYPE* Write)(__x_ABI_CWindows_CDevices_CI2c_CII2cDevice* This,
        UINT32 bufferLength,
        BYTE* buffer);
    HRESULT (STDMETHODCALLTYPE* WritePartial)(__x_ABI_CWindows_CDevices_CI2c_CII2cDevice* This,
        UINT32 bufferLength,
        BYTE* buffer,
        struct __x_ABI_CWindows_CDevices_CI2c_CI2cTransferResult* result);
    HRESULT (STDMETHODCALLTYPE* Read)(__x_ABI_CWindows_CDevices_CI2c_CII2cDevice* This,
        UINT32 bufferLength,
        BYTE* buffer);
    HRESULT (STDMETHODCALLTYPE* ReadPartial)(__x_ABI_CWindows_CDevices_CI2c_CII2cDevice* This,
        UINT32 bufferLength,
        BYTE* buffer,
        struct __x_ABI_CWindows_CDevices_CI2c_CI2cTransferResult* result);
    HRESULT (STDMETHODCALLTYPE* WriteRead)(__x_ABI_CWindows_CDevices_CI2c_CII2cDevice* This,
        UINT32 writeBufferLength,
        BYTE* writeBuffer,
        UINT32 readBufferLength,
        BYTE* readBuffer);
    HRESULT (STDMETHODCALLTYPE* WriteReadPartial)(__x_ABI_CWindows_CDevices_CI2c_CII2cDevice* This,
        UINT32 writeBufferLength,
        BYTE* writeBuffer,
        UINT32 readBufferLength,
        BYTE* readBuffer,
        struct __x_ABI_CWindows_CDevices_CI2c_CI2cTransferResult* result);

        END_INTERFACE
    } __x_ABI_CWindows_CDevices_CI2c_CII2cDeviceVtbl;

    interface __x_ABI_CWindows_CDevices_CI2c_CII2cDevice
    {
        CONST_VTBL struct __x_ABI_CWindows_CDevices_CI2c_CII2cDeviceVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CDevices_CI2c_CII2cDevice;
#endif /* !defined(____x_ABI_CWindows_CDevices_CI2c_CII2cDevice_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CDevices_CI2c_CII2cDeviceStatics_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CDevices_CI2c_CII2cDeviceStatics_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CDevices_CI2c_CII2cDeviceStaticsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CDevices_CI2c_CII2cDeviceStatics* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CDevices_CI2c_CII2cDeviceStatics* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CDevices_CI2c_CII2cDeviceStatics* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CDevices_CI2c_CII2cDeviceStatics* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CDevices_CI2c_CII2cDeviceStatics* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CDevices_CI2c_CII2cDeviceStatics* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* GetDeviceSelector)(__x_ABI_CWindows_CDevices_CI2c_CII2cDeviceStatics* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* GetDeviceSelectorFromFriendlyName)(__x_ABI_CWindows_CDevices_CI2c_CII2cDeviceStatics* This,
        HSTRING friendlyName,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* FromIdAsync)(__x_ABI_CWindows_CDevices_CI2c_CII2cDeviceStatics* This,
        HSTRING deviceId,
        __x_ABI_CWindows_CDevices_CI2c_CII2cConnectionSettings* settings,
        __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CDevices__CI2c__CI2cDevice** operation);

        END_INTERFACE
    } __x_ABI_CWindows_CDevices_CI2c_CII2cDeviceStaticsVtbl;

    interface __x_ABI_CWindows_CDevices_CI2c_CII2cDeviceStatics
    {
        CONST_VTBL struct __x_ABI_CWindows_CDevices_CI2c_CII2cDeviceStaticsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CDevices_CI2c_CII2cDeviceStatics;
#endif /* !defined(____x_ABI_CWindows_CDevices_CI2c_CII2cDeviceStatics_INTERFACE_DEFINED__) */
    
