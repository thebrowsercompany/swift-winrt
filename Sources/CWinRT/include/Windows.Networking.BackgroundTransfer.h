// WARNING: Please don't edit this file. It was generated by Swift/WinRT v0.0.1

#pragma once
// Header files for imported files
#include <inspectable.h>
#include <EventToken.h>
#include <windowscontracts.h>
#include "Windows.Foundation.h"
#include "Windows.ApplicationModel.Background.h"
#include "Windows.Security.Credentials.h"
#include "Windows.Storage.h"
#include "Windows.Storage.Streams.h"
#include "Windows.UI.Notifications.h"
#include "Windows.Web.h"
// Importing Collections header
#include "Windows.Foundation.Collections.h"

/* Forward Declarations */
#ifndef ____x_ABI_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundDownloader_FWD_DEFINED__
#define ____x_ABI_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundDownloader_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundDownloader __x_ABI_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundDownloader;

#endif // ____x_ABI_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundDownloader_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundDownloader2_FWD_DEFINED__
#define ____x_ABI_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundDownloader2_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundDownloader2 __x_ABI_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundDownloader2;

#endif // ____x_ABI_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundDownloader2_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundDownloader3_FWD_DEFINED__
#define ____x_ABI_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundDownloader3_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundDownloader3 __x_ABI_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundDownloader3;

#endif // ____x_ABI_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundDownloader3_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundDownloaderFactory_FWD_DEFINED__
#define ____x_ABI_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundDownloaderFactory_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundDownloaderFactory __x_ABI_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundDownloaderFactory;

#endif // ____x_ABI_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundDownloaderFactory_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundDownloaderStaticMethods_FWD_DEFINED__
#define ____x_ABI_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundDownloaderStaticMethods_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundDownloaderStaticMethods __x_ABI_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundDownloaderStaticMethods;

#endif // ____x_ABI_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundDownloaderStaticMethods_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundDownloaderStaticMethods2_FWD_DEFINED__
#define ____x_ABI_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundDownloaderStaticMethods2_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundDownloaderStaticMethods2 __x_ABI_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundDownloaderStaticMethods2;

#endif // ____x_ABI_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundDownloaderStaticMethods2_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundDownloaderUserConsent_FWD_DEFINED__
#define ____x_ABI_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundDownloaderUserConsent_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundDownloaderUserConsent __x_ABI_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundDownloaderUserConsent;

#endif // ____x_ABI_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundDownloaderUserConsent_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundTransferBase_FWD_DEFINED__
#define ____x_ABI_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundTransferBase_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundTransferBase __x_ABI_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundTransferBase;

#endif // ____x_ABI_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundTransferBase_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundTransferCompletionGroup_FWD_DEFINED__
#define ____x_ABI_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundTransferCompletionGroup_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundTransferCompletionGroup __x_ABI_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundTransferCompletionGroup;

#endif // ____x_ABI_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundTransferCompletionGroup_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundTransferCompletionGroupTriggerDetails_FWD_DEFINED__
#define ____x_ABI_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundTransferCompletionGroupTriggerDetails_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundTransferCompletionGroupTriggerDetails __x_ABI_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundTransferCompletionGroupTriggerDetails;

#endif // ____x_ABI_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundTransferCompletionGroupTriggerDetails_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundTransferContentPart_FWD_DEFINED__
#define ____x_ABI_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundTransferContentPart_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundTransferContentPart __x_ABI_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundTransferContentPart;

#endif // ____x_ABI_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundTransferContentPart_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundTransferContentPartFactory_FWD_DEFINED__
#define ____x_ABI_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundTransferContentPartFactory_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundTransferContentPartFactory __x_ABI_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundTransferContentPartFactory;

#endif // ____x_ABI_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundTransferContentPartFactory_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundTransferErrorStaticMethods_FWD_DEFINED__
#define ____x_ABI_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundTransferErrorStaticMethods_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundTransferErrorStaticMethods __x_ABI_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundTransferErrorStaticMethods;

#endif // ____x_ABI_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundTransferErrorStaticMethods_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundTransferGroup_FWD_DEFINED__
#define ____x_ABI_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundTransferGroup_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundTransferGroup __x_ABI_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundTransferGroup;

#endif // ____x_ABI_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundTransferGroup_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundTransferGroupStatics_FWD_DEFINED__
#define ____x_ABI_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundTransferGroupStatics_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundTransferGroupStatics __x_ABI_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundTransferGroupStatics;

#endif // ____x_ABI_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundTransferGroupStatics_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundTransferOperation_FWD_DEFINED__
#define ____x_ABI_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundTransferOperation_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundTransferOperation __x_ABI_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundTransferOperation;

#endif // ____x_ABI_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundTransferOperation_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundTransferOperationPriority_FWD_DEFINED__
#define ____x_ABI_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundTransferOperationPriority_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundTransferOperationPriority __x_ABI_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundTransferOperationPriority;

#endif // ____x_ABI_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundTransferOperationPriority_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundTransferRangesDownloadedEventArgs_FWD_DEFINED__
#define ____x_ABI_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundTransferRangesDownloadedEventArgs_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundTransferRangesDownloadedEventArgs __x_ABI_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundTransferRangesDownloadedEventArgs;

#endif // ____x_ABI_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundTransferRangesDownloadedEventArgs_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundUploader_FWD_DEFINED__
#define ____x_ABI_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundUploader_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundUploader __x_ABI_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundUploader;

#endif // ____x_ABI_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundUploader_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundUploader2_FWD_DEFINED__
#define ____x_ABI_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundUploader2_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundUploader2 __x_ABI_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundUploader2;

#endif // ____x_ABI_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundUploader2_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundUploader3_FWD_DEFINED__
#define ____x_ABI_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundUploader3_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundUploader3 __x_ABI_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundUploader3;

#endif // ____x_ABI_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundUploader3_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundUploaderFactory_FWD_DEFINED__
#define ____x_ABI_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundUploaderFactory_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundUploaderFactory __x_ABI_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundUploaderFactory;

#endif // ____x_ABI_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundUploaderFactory_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundUploaderStaticMethods_FWD_DEFINED__
#define ____x_ABI_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundUploaderStaticMethods_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundUploaderStaticMethods __x_ABI_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundUploaderStaticMethods;

#endif // ____x_ABI_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundUploaderStaticMethods_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundUploaderStaticMethods2_FWD_DEFINED__
#define ____x_ABI_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundUploaderStaticMethods2_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundUploaderStaticMethods2 __x_ABI_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundUploaderStaticMethods2;

#endif // ____x_ABI_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundUploaderStaticMethods2_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundUploaderUserConsent_FWD_DEFINED__
#define ____x_ABI_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundUploaderUserConsent_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundUploaderUserConsent __x_ABI_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundUploaderUserConsent;

#endif // ____x_ABI_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundUploaderUserConsent_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CNetworking_CBackgroundTransfer_CIContentPrefetcher_FWD_DEFINED__
#define ____x_ABI_CWindows_CNetworking_CBackgroundTransfer_CIContentPrefetcher_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CNetworking_CBackgroundTransfer_CIContentPrefetcher __x_ABI_CWindows_CNetworking_CBackgroundTransfer_CIContentPrefetcher;

#endif // ____x_ABI_CWindows_CNetworking_CBackgroundTransfer_CIContentPrefetcher_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CNetworking_CBackgroundTransfer_CIContentPrefetcherTime_FWD_DEFINED__
#define ____x_ABI_CWindows_CNetworking_CBackgroundTransfer_CIContentPrefetcherTime_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CNetworking_CBackgroundTransfer_CIContentPrefetcherTime __x_ABI_CWindows_CNetworking_CBackgroundTransfer_CIContentPrefetcherTime;

#endif // ____x_ABI_CWindows_CNetworking_CBackgroundTransfer_CIContentPrefetcherTime_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CNetworking_CBackgroundTransfer_CIDownloadOperation_FWD_DEFINED__
#define ____x_ABI_CWindows_CNetworking_CBackgroundTransfer_CIDownloadOperation_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CNetworking_CBackgroundTransfer_CIDownloadOperation __x_ABI_CWindows_CNetworking_CBackgroundTransfer_CIDownloadOperation;

#endif // ____x_ABI_CWindows_CNetworking_CBackgroundTransfer_CIDownloadOperation_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CNetworking_CBackgroundTransfer_CIDownloadOperation2_FWD_DEFINED__
#define ____x_ABI_CWindows_CNetworking_CBackgroundTransfer_CIDownloadOperation2_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CNetworking_CBackgroundTransfer_CIDownloadOperation2 __x_ABI_CWindows_CNetworking_CBackgroundTransfer_CIDownloadOperation2;

#endif // ____x_ABI_CWindows_CNetworking_CBackgroundTransfer_CIDownloadOperation2_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CNetworking_CBackgroundTransfer_CIDownloadOperation3_FWD_DEFINED__
#define ____x_ABI_CWindows_CNetworking_CBackgroundTransfer_CIDownloadOperation3_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CNetworking_CBackgroundTransfer_CIDownloadOperation3 __x_ABI_CWindows_CNetworking_CBackgroundTransfer_CIDownloadOperation3;

#endif // ____x_ABI_CWindows_CNetworking_CBackgroundTransfer_CIDownloadOperation3_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CNetworking_CBackgroundTransfer_CIDownloadOperation4_FWD_DEFINED__
#define ____x_ABI_CWindows_CNetworking_CBackgroundTransfer_CIDownloadOperation4_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CNetworking_CBackgroundTransfer_CIDownloadOperation4 __x_ABI_CWindows_CNetworking_CBackgroundTransfer_CIDownloadOperation4;

#endif // ____x_ABI_CWindows_CNetworking_CBackgroundTransfer_CIDownloadOperation4_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CNetworking_CBackgroundTransfer_CIResponseInformation_FWD_DEFINED__
#define ____x_ABI_CWindows_CNetworking_CBackgroundTransfer_CIResponseInformation_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CNetworking_CBackgroundTransfer_CIResponseInformation __x_ABI_CWindows_CNetworking_CBackgroundTransfer_CIResponseInformation;

#endif // ____x_ABI_CWindows_CNetworking_CBackgroundTransfer_CIResponseInformation_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CNetworking_CBackgroundTransfer_CIUnconstrainedTransferRequestResult_FWD_DEFINED__
#define ____x_ABI_CWindows_CNetworking_CBackgroundTransfer_CIUnconstrainedTransferRequestResult_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CNetworking_CBackgroundTransfer_CIUnconstrainedTransferRequestResult __x_ABI_CWindows_CNetworking_CBackgroundTransfer_CIUnconstrainedTransferRequestResult;

#endif // ____x_ABI_CWindows_CNetworking_CBackgroundTransfer_CIUnconstrainedTransferRequestResult_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CNetworking_CBackgroundTransfer_CIUploadOperation_FWD_DEFINED__
#define ____x_ABI_CWindows_CNetworking_CBackgroundTransfer_CIUploadOperation_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CNetworking_CBackgroundTransfer_CIUploadOperation __x_ABI_CWindows_CNetworking_CBackgroundTransfer_CIUploadOperation;

#endif // ____x_ABI_CWindows_CNetworking_CBackgroundTransfer_CIUploadOperation_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CNetworking_CBackgroundTransfer_CIUploadOperation2_FWD_DEFINED__
#define ____x_ABI_CWindows_CNetworking_CBackgroundTransfer_CIUploadOperation2_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CNetworking_CBackgroundTransfer_CIUploadOperation2 __x_ABI_CWindows_CNetworking_CBackgroundTransfer_CIUploadOperation2;

#endif // ____x_ABI_CWindows_CNetworking_CBackgroundTransfer_CIUploadOperation2_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CNetworking_CBackgroundTransfer_CIUploadOperation3_FWD_DEFINED__
#define ____x_ABI_CWindows_CNetworking_CBackgroundTransfer_CIUploadOperation3_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CNetworking_CBackgroundTransfer_CIUploadOperation3 __x_ABI_CWindows_CNetworking_CBackgroundTransfer_CIUploadOperation3;

#endif // ____x_ABI_CWindows_CNetworking_CBackgroundTransfer_CIUploadOperation3_FWD_DEFINED__

// Parameterized interface forward declarations (C)

// Collection interface definitions

#if !defined(____x_ABI_C__FIIterator_1___x_ABI_CWindows__CNetworking__CBackgroundTransfer__CDownloadOperation_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIIterator_1___x_ABI_CWindows__CNetworking__CBackgroundTransfer__CDownloadOperation_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIIterator_1___x_ABI_CWindows__CNetworking__CBackgroundTransfer__CDownloadOperation __x_ABI_C__FIIterator_1___x_ABI_CWindows__CNetworking__CBackgroundTransfer__CDownloadOperation;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIIterator_1___x_ABI_CWindows__CNetworking__CBackgroundTransfer__CDownloadOperation;

    typedef struct __x_ABI_C__FIIterator_1___x_ABI_CWindows__CNetworking__CBackgroundTransfer__CDownloadOperationVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CNetworking__CBackgroundTransfer__CDownloadOperation* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CNetworking__CBackgroundTransfer__CDownloadOperation* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CNetworking__CBackgroundTransfer__CDownloadOperation* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CNetworking__CBackgroundTransfer__CDownloadOperation* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CNetworking__CBackgroundTransfer__CDownloadOperation* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CNetworking__CBackgroundTransfer__CDownloadOperation* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Current)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CNetworking__CBackgroundTransfer__CDownloadOperation* This,
        __x_ABI_CWindows_CNetworking_CBackgroundTransfer_CIDownloadOperation** result);
    HRESULT (STDMETHODCALLTYPE* get_HasCurrent)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CNetworking__CBackgroundTransfer__CDownloadOperation* This,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* MoveNext)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CNetworking__CBackgroundTransfer__CDownloadOperation* This,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CNetworking__CBackgroundTransfer__CDownloadOperation* This,
        UINT32 itemsLength,
        __x_ABI_CWindows_CNetworking_CBackgroundTransfer_CIDownloadOperation** items,
        UINT32* result);

        END_INTERFACE
    } __x_ABI_C__FIIterator_1___x_ABI_CWindows__CNetworking__CBackgroundTransfer__CDownloadOperationVtbl;

    interface __x_ABI_C__FIIterator_1___x_ABI_CWindows__CNetworking__CBackgroundTransfer__CDownloadOperation
    {
        CONST_VTBL struct __x_ABI_C__FIIterator_1___x_ABI_CWindows__CNetworking__CBackgroundTransfer__CDownloadOperationVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIIterator_1___x_ABI_CWindows__CNetworking__CBackgroundTransfer__CDownloadOperation_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIIterable_1___x_ABI_CWindows__CNetworking__CBackgroundTransfer__CDownloadOperation_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIIterable_1___x_ABI_CWindows__CNetworking__CBackgroundTransfer__CDownloadOperation_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIIterable_1___x_ABI_CWindows__CNetworking__CBackgroundTransfer__CDownloadOperation __x_ABI_C__FIIterable_1___x_ABI_CWindows__CNetworking__CBackgroundTransfer__CDownloadOperation;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIIterable_1___x_ABI_CWindows__CNetworking__CBackgroundTransfer__CDownloadOperation;

    typedef struct __x_ABI_C__FIIterable_1___x_ABI_CWindows__CNetworking__CBackgroundTransfer__CDownloadOperationVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CNetworking__CBackgroundTransfer__CDownloadOperation* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CNetworking__CBackgroundTransfer__CDownloadOperation* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CNetworking__CBackgroundTransfer__CDownloadOperation* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CNetworking__CBackgroundTransfer__CDownloadOperation* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CNetworking__CBackgroundTransfer__CDownloadOperation* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CNetworking__CBackgroundTransfer__CDownloadOperation* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* First)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CNetworking__CBackgroundTransfer__CDownloadOperation* This,
        __x_ABI_C__FIIterator_1___x_ABI_CWindows__CNetworking__CBackgroundTransfer__CDownloadOperation** result);

        END_INTERFACE
    } __x_ABI_C__FIIterable_1___x_ABI_CWindows__CNetworking__CBackgroundTransfer__CDownloadOperationVtbl;

    interface __x_ABI_C__FIIterable_1___x_ABI_CWindows__CNetworking__CBackgroundTransfer__CDownloadOperation
    {
        CONST_VTBL struct __x_ABI_C__FIIterable_1___x_ABI_CWindows__CNetworking__CBackgroundTransfer__CDownloadOperationVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIIterable_1___x_ABI_CWindows__CNetworking__CBackgroundTransfer__CDownloadOperation_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIVectorView_1___x_ABI_CWindows__CNetworking__CBackgroundTransfer__CDownloadOperation_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIVectorView_1___x_ABI_CWindows__CNetworking__CBackgroundTransfer__CDownloadOperation_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CNetworking__CBackgroundTransfer__CDownloadOperation __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CNetworking__CBackgroundTransfer__CDownloadOperation;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CNetworking__CBackgroundTransfer__CDownloadOperation;

    typedef struct __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CNetworking__CBackgroundTransfer__CDownloadOperationVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CNetworking__CBackgroundTransfer__CDownloadOperation* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CNetworking__CBackgroundTransfer__CDownloadOperation* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CNetworking__CBackgroundTransfer__CDownloadOperation* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CNetworking__CBackgroundTransfer__CDownloadOperation* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CNetworking__CBackgroundTransfer__CDownloadOperation* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CNetworking__CBackgroundTransfer__CDownloadOperation* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* GetAt)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CNetworking__CBackgroundTransfer__CDownloadOperation* This,
        UINT32 index,
        __x_ABI_CWindows_CNetworking_CBackgroundTransfer_CIDownloadOperation** result);
    HRESULT (STDMETHODCALLTYPE* get_Size)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CNetworking__CBackgroundTransfer__CDownloadOperation* This,
        UINT32* result);
    HRESULT (STDMETHODCALLTYPE* IndexOf)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CNetworking__CBackgroundTransfer__CDownloadOperation* This,
        __x_ABI_CWindows_CNetworking_CBackgroundTransfer_CIDownloadOperation* value,
        UINT32* index,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CNetworking__CBackgroundTransfer__CDownloadOperation* This,
        UINT32 startIndex,
        UINT32 itemsLength,
        __x_ABI_CWindows_CNetworking_CBackgroundTransfer_CIDownloadOperation** items,
        UINT32* result);

        END_INTERFACE
    } __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CNetworking__CBackgroundTransfer__CDownloadOperationVtbl;

    interface __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CNetworking__CBackgroundTransfer__CDownloadOperation
    {
        CONST_VTBL struct __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CNetworking__CBackgroundTransfer__CDownloadOperationVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIVectorView_1___x_ABI_CWindows__CNetworking__CBackgroundTransfer__CDownloadOperation_INTERFACE_DEFINED__
    
typedef interface __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CNetworking__CBackgroundTransfer__CDownloadOperation __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CNetworking__CBackgroundTransfer__CDownloadOperation;

#if !defined(____x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CNetworking__CBackgroundTransfer__CDownloadOperation_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CNetworking__CBackgroundTransfer__CDownloadOperation_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CNetworking__CBackgroundTransfer__CDownloadOperation __x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CNetworking__CBackgroundTransfer__CDownloadOperation;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CNetworking__CBackgroundTransfer__CDownloadOperation;

    typedef struct __x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CNetworking__CBackgroundTransfer__CDownloadOperationVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CNetworking__CBackgroundTransfer__CDownloadOperation* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CNetworking__CBackgroundTransfer__CDownloadOperation* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CNetworking__CBackgroundTransfer__CDownloadOperation* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CNetworking__CBackgroundTransfer__CDownloadOperation* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CNetworking__CBackgroundTransfer__CDownloadOperation* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CNetworking__CBackgroundTransfer__CDownloadOperation* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* put_Completed)(__x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CNetworking__CBackgroundTransfer__CDownloadOperation* This,
        __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CNetworking__CBackgroundTransfer__CDownloadOperation* handler);
    HRESULT (STDMETHODCALLTYPE* get_Completed)(__x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CNetworking__CBackgroundTransfer__CDownloadOperation* This,
        __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CNetworking__CBackgroundTransfer__CDownloadOperation** result);
    HRESULT (STDMETHODCALLTYPE* GetResults)(__x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CNetworking__CBackgroundTransfer__CDownloadOperation* This,
        __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CNetworking__CBackgroundTransfer__CDownloadOperation** result);

        END_INTERFACE
    } __x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CNetworking__CBackgroundTransfer__CDownloadOperationVtbl;

    interface __x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CNetworking__CBackgroundTransfer__CDownloadOperation
    {
        CONST_VTBL struct __x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CNetworking__CBackgroundTransfer__CDownloadOperationVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CNetworking__CBackgroundTransfer__CDownloadOperation_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CNetworking__CBackgroundTransfer__CDownloadOperation_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CNetworking__CBackgroundTransfer__CDownloadOperation_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CNetworking__CBackgroundTransfer__CDownloadOperation __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CNetworking__CBackgroundTransfer__CDownloadOperation;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CNetworking__CBackgroundTransfer__CDownloadOperation;

    typedef struct __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CNetworking__CBackgroundTransfer__CDownloadOperationVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CNetworking__CBackgroundTransfer__CDownloadOperation* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CNetworking__CBackgroundTransfer__CDownloadOperation* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CNetworking__CBackgroundTransfer__CDownloadOperation* This);
        HRESULT (STDMETHODCALLTYPE* Invoke)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CNetworking__CBackgroundTransfer__CDownloadOperation* This,
        __x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CNetworking__CBackgroundTransfer__CDownloadOperation* asyncInfo,
        enum __x_ABI_CWindows_CFoundation_CAsyncStatus asyncStatus);

        END_INTERFACE
    } __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CNetworking__CBackgroundTransfer__CDownloadOperationVtbl;

    interface __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CNetworking__CBackgroundTransfer__CDownloadOperation
    {
        CONST_VTBL struct __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CNetworking__CBackgroundTransfer__CDownloadOperationVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CNetworking__CBackgroundTransfer__CDownloadOperation_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIIterator_1___x_ABI_CWindows__CNetworking__CBackgroundTransfer__CUploadOperation_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIIterator_1___x_ABI_CWindows__CNetworking__CBackgroundTransfer__CUploadOperation_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIIterator_1___x_ABI_CWindows__CNetworking__CBackgroundTransfer__CUploadOperation __x_ABI_C__FIIterator_1___x_ABI_CWindows__CNetworking__CBackgroundTransfer__CUploadOperation;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIIterator_1___x_ABI_CWindows__CNetworking__CBackgroundTransfer__CUploadOperation;

    typedef struct __x_ABI_C__FIIterator_1___x_ABI_CWindows__CNetworking__CBackgroundTransfer__CUploadOperationVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CNetworking__CBackgroundTransfer__CUploadOperation* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CNetworking__CBackgroundTransfer__CUploadOperation* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CNetworking__CBackgroundTransfer__CUploadOperation* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CNetworking__CBackgroundTransfer__CUploadOperation* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CNetworking__CBackgroundTransfer__CUploadOperation* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CNetworking__CBackgroundTransfer__CUploadOperation* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Current)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CNetworking__CBackgroundTransfer__CUploadOperation* This,
        __x_ABI_CWindows_CNetworking_CBackgroundTransfer_CIUploadOperation** result);
    HRESULT (STDMETHODCALLTYPE* get_HasCurrent)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CNetworking__CBackgroundTransfer__CUploadOperation* This,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* MoveNext)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CNetworking__CBackgroundTransfer__CUploadOperation* This,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CNetworking__CBackgroundTransfer__CUploadOperation* This,
        UINT32 itemsLength,
        __x_ABI_CWindows_CNetworking_CBackgroundTransfer_CIUploadOperation** items,
        UINT32* result);

        END_INTERFACE
    } __x_ABI_C__FIIterator_1___x_ABI_CWindows__CNetworking__CBackgroundTransfer__CUploadOperationVtbl;

    interface __x_ABI_C__FIIterator_1___x_ABI_CWindows__CNetworking__CBackgroundTransfer__CUploadOperation
    {
        CONST_VTBL struct __x_ABI_C__FIIterator_1___x_ABI_CWindows__CNetworking__CBackgroundTransfer__CUploadOperationVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIIterator_1___x_ABI_CWindows__CNetworking__CBackgroundTransfer__CUploadOperation_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIIterable_1___x_ABI_CWindows__CNetworking__CBackgroundTransfer__CUploadOperation_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIIterable_1___x_ABI_CWindows__CNetworking__CBackgroundTransfer__CUploadOperation_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIIterable_1___x_ABI_CWindows__CNetworking__CBackgroundTransfer__CUploadOperation __x_ABI_C__FIIterable_1___x_ABI_CWindows__CNetworking__CBackgroundTransfer__CUploadOperation;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIIterable_1___x_ABI_CWindows__CNetworking__CBackgroundTransfer__CUploadOperation;

    typedef struct __x_ABI_C__FIIterable_1___x_ABI_CWindows__CNetworking__CBackgroundTransfer__CUploadOperationVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CNetworking__CBackgroundTransfer__CUploadOperation* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CNetworking__CBackgroundTransfer__CUploadOperation* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CNetworking__CBackgroundTransfer__CUploadOperation* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CNetworking__CBackgroundTransfer__CUploadOperation* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CNetworking__CBackgroundTransfer__CUploadOperation* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CNetworking__CBackgroundTransfer__CUploadOperation* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* First)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CNetworking__CBackgroundTransfer__CUploadOperation* This,
        __x_ABI_C__FIIterator_1___x_ABI_CWindows__CNetworking__CBackgroundTransfer__CUploadOperation** result);

        END_INTERFACE
    } __x_ABI_C__FIIterable_1___x_ABI_CWindows__CNetworking__CBackgroundTransfer__CUploadOperationVtbl;

    interface __x_ABI_C__FIIterable_1___x_ABI_CWindows__CNetworking__CBackgroundTransfer__CUploadOperation
    {
        CONST_VTBL struct __x_ABI_C__FIIterable_1___x_ABI_CWindows__CNetworking__CBackgroundTransfer__CUploadOperationVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIIterable_1___x_ABI_CWindows__CNetworking__CBackgroundTransfer__CUploadOperation_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIVectorView_1___x_ABI_CWindows__CNetworking__CBackgroundTransfer__CUploadOperation_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIVectorView_1___x_ABI_CWindows__CNetworking__CBackgroundTransfer__CUploadOperation_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CNetworking__CBackgroundTransfer__CUploadOperation __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CNetworking__CBackgroundTransfer__CUploadOperation;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CNetworking__CBackgroundTransfer__CUploadOperation;

    typedef struct __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CNetworking__CBackgroundTransfer__CUploadOperationVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CNetworking__CBackgroundTransfer__CUploadOperation* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CNetworking__CBackgroundTransfer__CUploadOperation* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CNetworking__CBackgroundTransfer__CUploadOperation* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CNetworking__CBackgroundTransfer__CUploadOperation* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CNetworking__CBackgroundTransfer__CUploadOperation* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CNetworking__CBackgroundTransfer__CUploadOperation* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* GetAt)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CNetworking__CBackgroundTransfer__CUploadOperation* This,
        UINT32 index,
        __x_ABI_CWindows_CNetworking_CBackgroundTransfer_CIUploadOperation** result);
    HRESULT (STDMETHODCALLTYPE* get_Size)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CNetworking__CBackgroundTransfer__CUploadOperation* This,
        UINT32* result);
    HRESULT (STDMETHODCALLTYPE* IndexOf)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CNetworking__CBackgroundTransfer__CUploadOperation* This,
        __x_ABI_CWindows_CNetworking_CBackgroundTransfer_CIUploadOperation* value,
        UINT32* index,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CNetworking__CBackgroundTransfer__CUploadOperation* This,
        UINT32 startIndex,
        UINT32 itemsLength,
        __x_ABI_CWindows_CNetworking_CBackgroundTransfer_CIUploadOperation** items,
        UINT32* result);

        END_INTERFACE
    } __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CNetworking__CBackgroundTransfer__CUploadOperationVtbl;

    interface __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CNetworking__CBackgroundTransfer__CUploadOperation
    {
        CONST_VTBL struct __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CNetworking__CBackgroundTransfer__CUploadOperationVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIVectorView_1___x_ABI_CWindows__CNetworking__CBackgroundTransfer__CUploadOperation_INTERFACE_DEFINED__
    
typedef interface __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CNetworking__CBackgroundTransfer__CUploadOperation __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CNetworking__CBackgroundTransfer__CUploadOperation;

#if !defined(____x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CNetworking__CBackgroundTransfer__CUploadOperation_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CNetworking__CBackgroundTransfer__CUploadOperation_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CNetworking__CBackgroundTransfer__CUploadOperation __x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CNetworking__CBackgroundTransfer__CUploadOperation;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CNetworking__CBackgroundTransfer__CUploadOperation;

    typedef struct __x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CNetworking__CBackgroundTransfer__CUploadOperationVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CNetworking__CBackgroundTransfer__CUploadOperation* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CNetworking__CBackgroundTransfer__CUploadOperation* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CNetworking__CBackgroundTransfer__CUploadOperation* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CNetworking__CBackgroundTransfer__CUploadOperation* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CNetworking__CBackgroundTransfer__CUploadOperation* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CNetworking__CBackgroundTransfer__CUploadOperation* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* put_Completed)(__x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CNetworking__CBackgroundTransfer__CUploadOperation* This,
        __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CNetworking__CBackgroundTransfer__CUploadOperation* handler);
    HRESULT (STDMETHODCALLTYPE* get_Completed)(__x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CNetworking__CBackgroundTransfer__CUploadOperation* This,
        __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CNetworking__CBackgroundTransfer__CUploadOperation** result);
    HRESULT (STDMETHODCALLTYPE* GetResults)(__x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CNetworking__CBackgroundTransfer__CUploadOperation* This,
        __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CNetworking__CBackgroundTransfer__CUploadOperation** result);

        END_INTERFACE
    } __x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CNetworking__CBackgroundTransfer__CUploadOperationVtbl;

    interface __x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CNetworking__CBackgroundTransfer__CUploadOperation
    {
        CONST_VTBL struct __x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CNetworking__CBackgroundTransfer__CUploadOperationVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CNetworking__CBackgroundTransfer__CUploadOperation_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CNetworking__CBackgroundTransfer__CUploadOperation_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CNetworking__CBackgroundTransfer__CUploadOperation_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CNetworking__CBackgroundTransfer__CUploadOperation __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CNetworking__CBackgroundTransfer__CUploadOperation;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CNetworking__CBackgroundTransfer__CUploadOperation;

    typedef struct __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CNetworking__CBackgroundTransfer__CUploadOperationVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CNetworking__CBackgroundTransfer__CUploadOperation* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CNetworking__CBackgroundTransfer__CUploadOperation* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CNetworking__CBackgroundTransfer__CUploadOperation* This);
        HRESULT (STDMETHODCALLTYPE* Invoke)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CNetworking__CBackgroundTransfer__CUploadOperation* This,
        __x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CNetworking__CBackgroundTransfer__CUploadOperation* asyncInfo,
        enum __x_ABI_CWindows_CFoundation_CAsyncStatus asyncStatus);

        END_INTERFACE
    } __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CNetworking__CBackgroundTransfer__CUploadOperationVtbl;

    interface __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CNetworking__CBackgroundTransfer__CUploadOperation
    {
        CONST_VTBL struct __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CNetworking__CBackgroundTransfer__CUploadOperationVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CNetworking__CBackgroundTransfer__CUploadOperation_INTERFACE_DEFINED__
    
typedef interface __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CNetworking__CBackgroundTransfer__CDownloadOperation __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CNetworking__CBackgroundTransfer__CDownloadOperation;

#if !defined(____x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CNetworking__CBackgroundTransfer__CDownloadOperation_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CNetworking__CBackgroundTransfer__CDownloadOperation_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CNetworking__CBackgroundTransfer__CDownloadOperation __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CNetworking__CBackgroundTransfer__CDownloadOperation;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CNetworking__CBackgroundTransfer__CDownloadOperation;

    typedef struct __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CNetworking__CBackgroundTransfer__CDownloadOperationVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CNetworking__CBackgroundTransfer__CDownloadOperation* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CNetworking__CBackgroundTransfer__CDownloadOperation* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CNetworking__CBackgroundTransfer__CDownloadOperation* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CNetworking__CBackgroundTransfer__CDownloadOperation* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CNetworking__CBackgroundTransfer__CDownloadOperation* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CNetworking__CBackgroundTransfer__CDownloadOperation* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* put_Completed)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CNetworking__CBackgroundTransfer__CDownloadOperation* This,
        __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CNetworking__CBackgroundTransfer__CDownloadOperation* handler);
    HRESULT (STDMETHODCALLTYPE* get_Completed)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CNetworking__CBackgroundTransfer__CDownloadOperation* This,
        __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CNetworking__CBackgroundTransfer__CDownloadOperation** result);
    HRESULT (STDMETHODCALLTYPE* GetResults)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CNetworking__CBackgroundTransfer__CDownloadOperation* This,
        __x_ABI_CWindows_CNetworking_CBackgroundTransfer_CIDownloadOperation** result);

        END_INTERFACE
    } __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CNetworking__CBackgroundTransfer__CDownloadOperationVtbl;

    interface __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CNetworking__CBackgroundTransfer__CDownloadOperation
    {
        CONST_VTBL struct __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CNetworking__CBackgroundTransfer__CDownloadOperationVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CNetworking__CBackgroundTransfer__CDownloadOperation_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CNetworking__CBackgroundTransfer__CDownloadOperation_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CNetworking__CBackgroundTransfer__CDownloadOperation_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CNetworking__CBackgroundTransfer__CDownloadOperation __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CNetworking__CBackgroundTransfer__CDownloadOperation;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CNetworking__CBackgroundTransfer__CDownloadOperation;

    typedef struct __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CNetworking__CBackgroundTransfer__CDownloadOperationVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CNetworking__CBackgroundTransfer__CDownloadOperation* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CNetworking__CBackgroundTransfer__CDownloadOperation* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CNetworking__CBackgroundTransfer__CDownloadOperation* This);
        HRESULT (STDMETHODCALLTYPE* Invoke)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CNetworking__CBackgroundTransfer__CDownloadOperation* This,
        __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CNetworking__CBackgroundTransfer__CDownloadOperation* asyncInfo,
        enum __x_ABI_CWindows_CFoundation_CAsyncStatus asyncStatus);

        END_INTERFACE
    } __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CNetworking__CBackgroundTransfer__CDownloadOperationVtbl;

    interface __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CNetworking__CBackgroundTransfer__CDownloadOperation
    {
        CONST_VTBL struct __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CNetworking__CBackgroundTransfer__CDownloadOperationVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CNetworking__CBackgroundTransfer__CDownloadOperation_INTERFACE_DEFINED__
    
typedef interface __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CNetworking__CBackgroundTransfer__CUnconstrainedTransferRequestResult __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CNetworking__CBackgroundTransfer__CUnconstrainedTransferRequestResult;

#if !defined(____x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CNetworking__CBackgroundTransfer__CUnconstrainedTransferRequestResult_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CNetworking__CBackgroundTransfer__CUnconstrainedTransferRequestResult_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CNetworking__CBackgroundTransfer__CUnconstrainedTransferRequestResult __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CNetworking__CBackgroundTransfer__CUnconstrainedTransferRequestResult;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CNetworking__CBackgroundTransfer__CUnconstrainedTransferRequestResult;

    typedef struct __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CNetworking__CBackgroundTransfer__CUnconstrainedTransferRequestResultVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CNetworking__CBackgroundTransfer__CUnconstrainedTransferRequestResult* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CNetworking__CBackgroundTransfer__CUnconstrainedTransferRequestResult* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CNetworking__CBackgroundTransfer__CUnconstrainedTransferRequestResult* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CNetworking__CBackgroundTransfer__CUnconstrainedTransferRequestResult* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CNetworking__CBackgroundTransfer__CUnconstrainedTransferRequestResult* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CNetworking__CBackgroundTransfer__CUnconstrainedTransferRequestResult* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* put_Completed)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CNetworking__CBackgroundTransfer__CUnconstrainedTransferRequestResult* This,
        __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CNetworking__CBackgroundTransfer__CUnconstrainedTransferRequestResult* handler);
    HRESULT (STDMETHODCALLTYPE* get_Completed)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CNetworking__CBackgroundTransfer__CUnconstrainedTransferRequestResult* This,
        __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CNetworking__CBackgroundTransfer__CUnconstrainedTransferRequestResult** result);
    HRESULT (STDMETHODCALLTYPE* GetResults)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CNetworking__CBackgroundTransfer__CUnconstrainedTransferRequestResult* This,
        __x_ABI_CWindows_CNetworking_CBackgroundTransfer_CIUnconstrainedTransferRequestResult** result);

        END_INTERFACE
    } __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CNetworking__CBackgroundTransfer__CUnconstrainedTransferRequestResultVtbl;

    interface __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CNetworking__CBackgroundTransfer__CUnconstrainedTransferRequestResult
    {
        CONST_VTBL struct __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CNetworking__CBackgroundTransfer__CUnconstrainedTransferRequestResultVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CNetworking__CBackgroundTransfer__CUnconstrainedTransferRequestResult_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CNetworking__CBackgroundTransfer__CUnconstrainedTransferRequestResult_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CNetworking__CBackgroundTransfer__CUnconstrainedTransferRequestResult_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CNetworking__CBackgroundTransfer__CUnconstrainedTransferRequestResult __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CNetworking__CBackgroundTransfer__CUnconstrainedTransferRequestResult;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CNetworking__CBackgroundTransfer__CUnconstrainedTransferRequestResult;

    typedef struct __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CNetworking__CBackgroundTransfer__CUnconstrainedTransferRequestResultVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CNetworking__CBackgroundTransfer__CUnconstrainedTransferRequestResult* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CNetworking__CBackgroundTransfer__CUnconstrainedTransferRequestResult* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CNetworking__CBackgroundTransfer__CUnconstrainedTransferRequestResult* This);
        HRESULT (STDMETHODCALLTYPE* Invoke)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CNetworking__CBackgroundTransfer__CUnconstrainedTransferRequestResult* This,
        __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CNetworking__CBackgroundTransfer__CUnconstrainedTransferRequestResult* asyncInfo,
        enum __x_ABI_CWindows_CFoundation_CAsyncStatus asyncStatus);

        END_INTERFACE
    } __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CNetworking__CBackgroundTransfer__CUnconstrainedTransferRequestResultVtbl;

    interface __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CNetworking__CBackgroundTransfer__CUnconstrainedTransferRequestResult
    {
        CONST_VTBL struct __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CNetworking__CBackgroundTransfer__CUnconstrainedTransferRequestResultVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CNetworking__CBackgroundTransfer__CUnconstrainedTransferRequestResult_INTERFACE_DEFINED__
    
typedef interface __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CNetworking__CBackgroundTransfer__CUploadOperation __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CNetworking__CBackgroundTransfer__CUploadOperation;

#if !defined(____x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CNetworking__CBackgroundTransfer__CUploadOperation_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CNetworking__CBackgroundTransfer__CUploadOperation_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CNetworking__CBackgroundTransfer__CUploadOperation __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CNetworking__CBackgroundTransfer__CUploadOperation;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CNetworking__CBackgroundTransfer__CUploadOperation;

    typedef struct __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CNetworking__CBackgroundTransfer__CUploadOperationVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CNetworking__CBackgroundTransfer__CUploadOperation* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CNetworking__CBackgroundTransfer__CUploadOperation* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CNetworking__CBackgroundTransfer__CUploadOperation* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CNetworking__CBackgroundTransfer__CUploadOperation* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CNetworking__CBackgroundTransfer__CUploadOperation* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CNetworking__CBackgroundTransfer__CUploadOperation* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* put_Completed)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CNetworking__CBackgroundTransfer__CUploadOperation* This,
        __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CNetworking__CBackgroundTransfer__CUploadOperation* handler);
    HRESULT (STDMETHODCALLTYPE* get_Completed)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CNetworking__CBackgroundTransfer__CUploadOperation* This,
        __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CNetworking__CBackgroundTransfer__CUploadOperation** result);
    HRESULT (STDMETHODCALLTYPE* GetResults)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CNetworking__CBackgroundTransfer__CUploadOperation* This,
        __x_ABI_CWindows_CNetworking_CBackgroundTransfer_CIUploadOperation** result);

        END_INTERFACE
    } __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CNetworking__CBackgroundTransfer__CUploadOperationVtbl;

    interface __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CNetworking__CBackgroundTransfer__CUploadOperation
    {
        CONST_VTBL struct __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CNetworking__CBackgroundTransfer__CUploadOperationVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CNetworking__CBackgroundTransfer__CUploadOperation_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CNetworking__CBackgroundTransfer__CUploadOperation_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CNetworking__CBackgroundTransfer__CUploadOperation_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CNetworking__CBackgroundTransfer__CUploadOperation __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CNetworking__CBackgroundTransfer__CUploadOperation;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CNetworking__CBackgroundTransfer__CUploadOperation;

    typedef struct __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CNetworking__CBackgroundTransfer__CUploadOperationVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CNetworking__CBackgroundTransfer__CUploadOperation* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CNetworking__CBackgroundTransfer__CUploadOperation* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CNetworking__CBackgroundTransfer__CUploadOperation* This);
        HRESULT (STDMETHODCALLTYPE* Invoke)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CNetworking__CBackgroundTransfer__CUploadOperation* This,
        __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CNetworking__CBackgroundTransfer__CUploadOperation* asyncInfo,
        enum __x_ABI_CWindows_CFoundation_CAsyncStatus asyncStatus);

        END_INTERFACE
    } __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CNetworking__CBackgroundTransfer__CUploadOperationVtbl;

    interface __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CNetworking__CBackgroundTransfer__CUploadOperation
    {
        CONST_VTBL struct __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CNetworking__CBackgroundTransfer__CUploadOperationVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CNetworking__CBackgroundTransfer__CUploadOperation_INTERFACE_DEFINED__
    
typedef interface __x_ABI_C__FIAsyncOperationProgressHandler_2___x_ABI_CWindows__CNetworking__CBackgroundTransfer__CDownloadOperation___x_ABI_CWindows__CNetworking__CBackgroundTransfer__CDownloadOperation __x_ABI_C__FIAsyncOperationProgressHandler_2___x_ABI_CWindows__CNetworking__CBackgroundTransfer__CDownloadOperation___x_ABI_CWindows__CNetworking__CBackgroundTransfer__CDownloadOperation;

typedef interface __x_ABI_C__FIAsyncOperationWithProgress_2___x_ABI_CWindows__CNetworking__CBackgroundTransfer__CDownloadOperation___x_ABI_CWindows__CNetworking__CBackgroundTransfer__CDownloadOperation __x_ABI_C__FIAsyncOperationWithProgress_2___x_ABI_CWindows__CNetworking__CBackgroundTransfer__CDownloadOperation___x_ABI_CWindows__CNetworking__CBackgroundTransfer__CDownloadOperation;

#if !defined(____x_ABI_C__FIAsyncOperationWithProgressCompletedHandler_2___x_ABI_CWindows__CNetworking__CBackgroundTransfer__CDownloadOperation___x_ABI_CWindows__CNetworking__CBackgroundTransfer__CDownloadOperation_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIAsyncOperationWithProgressCompletedHandler_2___x_ABI_CWindows__CNetworking__CBackgroundTransfer__CDownloadOperation___x_ABI_CWindows__CNetworking__CBackgroundTransfer__CDownloadOperation_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIAsyncOperationWithProgressCompletedHandler_2___x_ABI_CWindows__CNetworking__CBackgroundTransfer__CDownloadOperation___x_ABI_CWindows__CNetworking__CBackgroundTransfer__CDownloadOperation __x_ABI_C__FIAsyncOperationWithProgressCompletedHandler_2___x_ABI_CWindows__CNetworking__CBackgroundTransfer__CDownloadOperation___x_ABI_CWindows__CNetworking__CBackgroundTransfer__CDownloadOperation;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIAsyncOperationWithProgressCompletedHandler_2___x_ABI_CWindows__CNetworking__CBackgroundTransfer__CDownloadOperation___x_ABI_CWindows__CNetworking__CBackgroundTransfer__CDownloadOperation;

    typedef struct __x_ABI_C__FIAsyncOperationWithProgressCompletedHandler_2___x_ABI_CWindows__CNetworking__CBackgroundTransfer__CDownloadOperation___x_ABI_CWindows__CNetworking__CBackgroundTransfer__CDownloadOperationVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIAsyncOperationWithProgressCompletedHandler_2___x_ABI_CWindows__CNetworking__CBackgroundTransfer__CDownloadOperation___x_ABI_CWindows__CNetworking__CBackgroundTransfer__CDownloadOperation* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIAsyncOperationWithProgressCompletedHandler_2___x_ABI_CWindows__CNetworking__CBackgroundTransfer__CDownloadOperation___x_ABI_CWindows__CNetworking__CBackgroundTransfer__CDownloadOperation* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIAsyncOperationWithProgressCompletedHandler_2___x_ABI_CWindows__CNetworking__CBackgroundTransfer__CDownloadOperation___x_ABI_CWindows__CNetworking__CBackgroundTransfer__CDownloadOperation* This);
        HRESULT (STDMETHODCALLTYPE* Invoke)(__x_ABI_C__FIAsyncOperationWithProgressCompletedHandler_2___x_ABI_CWindows__CNetworking__CBackgroundTransfer__CDownloadOperation___x_ABI_CWindows__CNetworking__CBackgroundTransfer__CDownloadOperation* This,
        __x_ABI_C__FIAsyncOperationWithProgress_2___x_ABI_CWindows__CNetworking__CBackgroundTransfer__CDownloadOperation___x_ABI_CWindows__CNetworking__CBackgroundTransfer__CDownloadOperation* asyncInfo,
        enum __x_ABI_CWindows_CFoundation_CAsyncStatus asyncStatus);

        END_INTERFACE
    } __x_ABI_C__FIAsyncOperationWithProgressCompletedHandler_2___x_ABI_CWindows__CNetworking__CBackgroundTransfer__CDownloadOperation___x_ABI_CWindows__CNetworking__CBackgroundTransfer__CDownloadOperationVtbl;

    interface __x_ABI_C__FIAsyncOperationWithProgressCompletedHandler_2___x_ABI_CWindows__CNetworking__CBackgroundTransfer__CDownloadOperation___x_ABI_CWindows__CNetworking__CBackgroundTransfer__CDownloadOperation
    {
        CONST_VTBL struct __x_ABI_C__FIAsyncOperationWithProgressCompletedHandler_2___x_ABI_CWindows__CNetworking__CBackgroundTransfer__CDownloadOperation___x_ABI_CWindows__CNetworking__CBackgroundTransfer__CDownloadOperationVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIAsyncOperationWithProgressCompletedHandler_2___x_ABI_CWindows__CNetworking__CBackgroundTransfer__CDownloadOperation___x_ABI_CWindows__CNetworking__CBackgroundTransfer__CDownloadOperation_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIAsyncOperationWithProgress_2___x_ABI_CWindows__CNetworking__CBackgroundTransfer__CDownloadOperation___x_ABI_CWindows__CNetworking__CBackgroundTransfer__CDownloadOperation_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIAsyncOperationWithProgress_2___x_ABI_CWindows__CNetworking__CBackgroundTransfer__CDownloadOperation___x_ABI_CWindows__CNetworking__CBackgroundTransfer__CDownloadOperation_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIAsyncOperationWithProgress_2___x_ABI_CWindows__CNetworking__CBackgroundTransfer__CDownloadOperation___x_ABI_CWindows__CNetworking__CBackgroundTransfer__CDownloadOperation __x_ABI_C__FIAsyncOperationWithProgress_2___x_ABI_CWindows__CNetworking__CBackgroundTransfer__CDownloadOperation___x_ABI_CWindows__CNetworking__CBackgroundTransfer__CDownloadOperation;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIAsyncOperationWithProgress_2___x_ABI_CWindows__CNetworking__CBackgroundTransfer__CDownloadOperation___x_ABI_CWindows__CNetworking__CBackgroundTransfer__CDownloadOperation;

    typedef struct __x_ABI_C__FIAsyncOperationWithProgress_2___x_ABI_CWindows__CNetworking__CBackgroundTransfer__CDownloadOperation___x_ABI_CWindows__CNetworking__CBackgroundTransfer__CDownloadOperationVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIAsyncOperationWithProgress_2___x_ABI_CWindows__CNetworking__CBackgroundTransfer__CDownloadOperation___x_ABI_CWindows__CNetworking__CBackgroundTransfer__CDownloadOperation* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIAsyncOperationWithProgress_2___x_ABI_CWindows__CNetworking__CBackgroundTransfer__CDownloadOperation___x_ABI_CWindows__CNetworking__CBackgroundTransfer__CDownloadOperation* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIAsyncOperationWithProgress_2___x_ABI_CWindows__CNetworking__CBackgroundTransfer__CDownloadOperation___x_ABI_CWindows__CNetworking__CBackgroundTransfer__CDownloadOperation* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIAsyncOperationWithProgress_2___x_ABI_CWindows__CNetworking__CBackgroundTransfer__CDownloadOperation___x_ABI_CWindows__CNetworking__CBackgroundTransfer__CDownloadOperation* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIAsyncOperationWithProgress_2___x_ABI_CWindows__CNetworking__CBackgroundTransfer__CDownloadOperation___x_ABI_CWindows__CNetworking__CBackgroundTransfer__CDownloadOperation* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIAsyncOperationWithProgress_2___x_ABI_CWindows__CNetworking__CBackgroundTransfer__CDownloadOperation___x_ABI_CWindows__CNetworking__CBackgroundTransfer__CDownloadOperation* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* put_Progress)(__x_ABI_C__FIAsyncOperationWithProgress_2___x_ABI_CWindows__CNetworking__CBackgroundTransfer__CDownloadOperation___x_ABI_CWindows__CNetworking__CBackgroundTransfer__CDownloadOperation* This,
        __x_ABI_C__FIAsyncOperationProgressHandler_2___x_ABI_CWindows__CNetworking__CBackgroundTransfer__CDownloadOperation___x_ABI_CWindows__CNetworking__CBackgroundTransfer__CDownloadOperation* handler);
    HRESULT (STDMETHODCALLTYPE* get_Progress)(__x_ABI_C__FIAsyncOperationWithProgress_2___x_ABI_CWindows__CNetworking__CBackgroundTransfer__CDownloadOperation___x_ABI_CWindows__CNetworking__CBackgroundTransfer__CDownloadOperation* This,
        __x_ABI_C__FIAsyncOperationProgressHandler_2___x_ABI_CWindows__CNetworking__CBackgroundTransfer__CDownloadOperation___x_ABI_CWindows__CNetworking__CBackgroundTransfer__CDownloadOperation** result);
    HRESULT (STDMETHODCALLTYPE* put_Completed)(__x_ABI_C__FIAsyncOperationWithProgress_2___x_ABI_CWindows__CNetworking__CBackgroundTransfer__CDownloadOperation___x_ABI_CWindows__CNetworking__CBackgroundTransfer__CDownloadOperation* This,
        __x_ABI_C__FIAsyncOperationWithProgressCompletedHandler_2___x_ABI_CWindows__CNetworking__CBackgroundTransfer__CDownloadOperation___x_ABI_CWindows__CNetworking__CBackgroundTransfer__CDownloadOperation* handler);
    HRESULT (STDMETHODCALLTYPE* get_Completed)(__x_ABI_C__FIAsyncOperationWithProgress_2___x_ABI_CWindows__CNetworking__CBackgroundTransfer__CDownloadOperation___x_ABI_CWindows__CNetworking__CBackgroundTransfer__CDownloadOperation* This,
        __x_ABI_C__FIAsyncOperationWithProgressCompletedHandler_2___x_ABI_CWindows__CNetworking__CBackgroundTransfer__CDownloadOperation___x_ABI_CWindows__CNetworking__CBackgroundTransfer__CDownloadOperation** result);
    HRESULT (STDMETHODCALLTYPE* GetResults)(__x_ABI_C__FIAsyncOperationWithProgress_2___x_ABI_CWindows__CNetworking__CBackgroundTransfer__CDownloadOperation___x_ABI_CWindows__CNetworking__CBackgroundTransfer__CDownloadOperation* This,
        __x_ABI_CWindows_CNetworking_CBackgroundTransfer_CIDownloadOperation** result);

        END_INTERFACE
    } __x_ABI_C__FIAsyncOperationWithProgress_2___x_ABI_CWindows__CNetworking__CBackgroundTransfer__CDownloadOperation___x_ABI_CWindows__CNetworking__CBackgroundTransfer__CDownloadOperationVtbl;

    interface __x_ABI_C__FIAsyncOperationWithProgress_2___x_ABI_CWindows__CNetworking__CBackgroundTransfer__CDownloadOperation___x_ABI_CWindows__CNetworking__CBackgroundTransfer__CDownloadOperation
    {
        CONST_VTBL struct __x_ABI_C__FIAsyncOperationWithProgress_2___x_ABI_CWindows__CNetworking__CBackgroundTransfer__CDownloadOperation___x_ABI_CWindows__CNetworking__CBackgroundTransfer__CDownloadOperationVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIAsyncOperationWithProgress_2___x_ABI_CWindows__CNetworking__CBackgroundTransfer__CDownloadOperation___x_ABI_CWindows__CNetworking__CBackgroundTransfer__CDownloadOperation_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIAsyncOperationProgressHandler_2___x_ABI_CWindows__CNetworking__CBackgroundTransfer__CDownloadOperation___x_ABI_CWindows__CNetworking__CBackgroundTransfer__CDownloadOperation_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIAsyncOperationProgressHandler_2___x_ABI_CWindows__CNetworking__CBackgroundTransfer__CDownloadOperation___x_ABI_CWindows__CNetworking__CBackgroundTransfer__CDownloadOperation_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIAsyncOperationProgressHandler_2___x_ABI_CWindows__CNetworking__CBackgroundTransfer__CDownloadOperation___x_ABI_CWindows__CNetworking__CBackgroundTransfer__CDownloadOperation __x_ABI_C__FIAsyncOperationProgressHandler_2___x_ABI_CWindows__CNetworking__CBackgroundTransfer__CDownloadOperation___x_ABI_CWindows__CNetworking__CBackgroundTransfer__CDownloadOperation;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIAsyncOperationProgressHandler_2___x_ABI_CWindows__CNetworking__CBackgroundTransfer__CDownloadOperation___x_ABI_CWindows__CNetworking__CBackgroundTransfer__CDownloadOperation;

    typedef struct __x_ABI_C__FIAsyncOperationProgressHandler_2___x_ABI_CWindows__CNetworking__CBackgroundTransfer__CDownloadOperation___x_ABI_CWindows__CNetworking__CBackgroundTransfer__CDownloadOperationVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIAsyncOperationProgressHandler_2___x_ABI_CWindows__CNetworking__CBackgroundTransfer__CDownloadOperation___x_ABI_CWindows__CNetworking__CBackgroundTransfer__CDownloadOperation* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIAsyncOperationProgressHandler_2___x_ABI_CWindows__CNetworking__CBackgroundTransfer__CDownloadOperation___x_ABI_CWindows__CNetworking__CBackgroundTransfer__CDownloadOperation* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIAsyncOperationProgressHandler_2___x_ABI_CWindows__CNetworking__CBackgroundTransfer__CDownloadOperation___x_ABI_CWindows__CNetworking__CBackgroundTransfer__CDownloadOperation* This);
        HRESULT (STDMETHODCALLTYPE* Invoke)(__x_ABI_C__FIAsyncOperationProgressHandler_2___x_ABI_CWindows__CNetworking__CBackgroundTransfer__CDownloadOperation___x_ABI_CWindows__CNetworking__CBackgroundTransfer__CDownloadOperation* This,
        __x_ABI_C__FIAsyncOperationWithProgress_2___x_ABI_CWindows__CNetworking__CBackgroundTransfer__CDownloadOperation___x_ABI_CWindows__CNetworking__CBackgroundTransfer__CDownloadOperation* asyncInfo,
        __x_ABI_CWindows_CNetworking_CBackgroundTransfer_CIDownloadOperation* progressInfo);

        END_INTERFACE
    } __x_ABI_C__FIAsyncOperationProgressHandler_2___x_ABI_CWindows__CNetworking__CBackgroundTransfer__CDownloadOperation___x_ABI_CWindows__CNetworking__CBackgroundTransfer__CDownloadOperationVtbl;

    interface __x_ABI_C__FIAsyncOperationProgressHandler_2___x_ABI_CWindows__CNetworking__CBackgroundTransfer__CDownloadOperation___x_ABI_CWindows__CNetworking__CBackgroundTransfer__CDownloadOperation
    {
        CONST_VTBL struct __x_ABI_C__FIAsyncOperationProgressHandler_2___x_ABI_CWindows__CNetworking__CBackgroundTransfer__CDownloadOperation___x_ABI_CWindows__CNetworking__CBackgroundTransfer__CDownloadOperationVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIAsyncOperationProgressHandler_2___x_ABI_CWindows__CNetworking__CBackgroundTransfer__CDownloadOperation___x_ABI_CWindows__CNetworking__CBackgroundTransfer__CDownloadOperation_INTERFACE_DEFINED__
    
typedef interface __x_ABI_C__FIAsyncOperationProgressHandler_2___x_ABI_CWindows__CNetworking__CBackgroundTransfer__CUploadOperation___x_ABI_CWindows__CNetworking__CBackgroundTransfer__CUploadOperation __x_ABI_C__FIAsyncOperationProgressHandler_2___x_ABI_CWindows__CNetworking__CBackgroundTransfer__CUploadOperation___x_ABI_CWindows__CNetworking__CBackgroundTransfer__CUploadOperation;

typedef interface __x_ABI_C__FIAsyncOperationWithProgress_2___x_ABI_CWindows__CNetworking__CBackgroundTransfer__CUploadOperation___x_ABI_CWindows__CNetworking__CBackgroundTransfer__CUploadOperation __x_ABI_C__FIAsyncOperationWithProgress_2___x_ABI_CWindows__CNetworking__CBackgroundTransfer__CUploadOperation___x_ABI_CWindows__CNetworking__CBackgroundTransfer__CUploadOperation;

#if !defined(____x_ABI_C__FIAsyncOperationWithProgressCompletedHandler_2___x_ABI_CWindows__CNetworking__CBackgroundTransfer__CUploadOperation___x_ABI_CWindows__CNetworking__CBackgroundTransfer__CUploadOperation_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIAsyncOperationWithProgressCompletedHandler_2___x_ABI_CWindows__CNetworking__CBackgroundTransfer__CUploadOperation___x_ABI_CWindows__CNetworking__CBackgroundTransfer__CUploadOperation_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIAsyncOperationWithProgressCompletedHandler_2___x_ABI_CWindows__CNetworking__CBackgroundTransfer__CUploadOperation___x_ABI_CWindows__CNetworking__CBackgroundTransfer__CUploadOperation __x_ABI_C__FIAsyncOperationWithProgressCompletedHandler_2___x_ABI_CWindows__CNetworking__CBackgroundTransfer__CUploadOperation___x_ABI_CWindows__CNetworking__CBackgroundTransfer__CUploadOperation;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIAsyncOperationWithProgressCompletedHandler_2___x_ABI_CWindows__CNetworking__CBackgroundTransfer__CUploadOperation___x_ABI_CWindows__CNetworking__CBackgroundTransfer__CUploadOperation;

    typedef struct __x_ABI_C__FIAsyncOperationWithProgressCompletedHandler_2___x_ABI_CWindows__CNetworking__CBackgroundTransfer__CUploadOperation___x_ABI_CWindows__CNetworking__CBackgroundTransfer__CUploadOperationVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIAsyncOperationWithProgressCompletedHandler_2___x_ABI_CWindows__CNetworking__CBackgroundTransfer__CUploadOperation___x_ABI_CWindows__CNetworking__CBackgroundTransfer__CUploadOperation* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIAsyncOperationWithProgressCompletedHandler_2___x_ABI_CWindows__CNetworking__CBackgroundTransfer__CUploadOperation___x_ABI_CWindows__CNetworking__CBackgroundTransfer__CUploadOperation* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIAsyncOperationWithProgressCompletedHandler_2___x_ABI_CWindows__CNetworking__CBackgroundTransfer__CUploadOperation___x_ABI_CWindows__CNetworking__CBackgroundTransfer__CUploadOperation* This);
        HRESULT (STDMETHODCALLTYPE* Invoke)(__x_ABI_C__FIAsyncOperationWithProgressCompletedHandler_2___x_ABI_CWindows__CNetworking__CBackgroundTransfer__CUploadOperation___x_ABI_CWindows__CNetworking__CBackgroundTransfer__CUploadOperation* This,
        __x_ABI_C__FIAsyncOperationWithProgress_2___x_ABI_CWindows__CNetworking__CBackgroundTransfer__CUploadOperation___x_ABI_CWindows__CNetworking__CBackgroundTransfer__CUploadOperation* asyncInfo,
        enum __x_ABI_CWindows_CFoundation_CAsyncStatus asyncStatus);

        END_INTERFACE
    } __x_ABI_C__FIAsyncOperationWithProgressCompletedHandler_2___x_ABI_CWindows__CNetworking__CBackgroundTransfer__CUploadOperation___x_ABI_CWindows__CNetworking__CBackgroundTransfer__CUploadOperationVtbl;

    interface __x_ABI_C__FIAsyncOperationWithProgressCompletedHandler_2___x_ABI_CWindows__CNetworking__CBackgroundTransfer__CUploadOperation___x_ABI_CWindows__CNetworking__CBackgroundTransfer__CUploadOperation
    {
        CONST_VTBL struct __x_ABI_C__FIAsyncOperationWithProgressCompletedHandler_2___x_ABI_CWindows__CNetworking__CBackgroundTransfer__CUploadOperation___x_ABI_CWindows__CNetworking__CBackgroundTransfer__CUploadOperationVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIAsyncOperationWithProgressCompletedHandler_2___x_ABI_CWindows__CNetworking__CBackgroundTransfer__CUploadOperation___x_ABI_CWindows__CNetworking__CBackgroundTransfer__CUploadOperation_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIAsyncOperationWithProgress_2___x_ABI_CWindows__CNetworking__CBackgroundTransfer__CUploadOperation___x_ABI_CWindows__CNetworking__CBackgroundTransfer__CUploadOperation_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIAsyncOperationWithProgress_2___x_ABI_CWindows__CNetworking__CBackgroundTransfer__CUploadOperation___x_ABI_CWindows__CNetworking__CBackgroundTransfer__CUploadOperation_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIAsyncOperationWithProgress_2___x_ABI_CWindows__CNetworking__CBackgroundTransfer__CUploadOperation___x_ABI_CWindows__CNetworking__CBackgroundTransfer__CUploadOperation __x_ABI_C__FIAsyncOperationWithProgress_2___x_ABI_CWindows__CNetworking__CBackgroundTransfer__CUploadOperation___x_ABI_CWindows__CNetworking__CBackgroundTransfer__CUploadOperation;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIAsyncOperationWithProgress_2___x_ABI_CWindows__CNetworking__CBackgroundTransfer__CUploadOperation___x_ABI_CWindows__CNetworking__CBackgroundTransfer__CUploadOperation;

    typedef struct __x_ABI_C__FIAsyncOperationWithProgress_2___x_ABI_CWindows__CNetworking__CBackgroundTransfer__CUploadOperation___x_ABI_CWindows__CNetworking__CBackgroundTransfer__CUploadOperationVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIAsyncOperationWithProgress_2___x_ABI_CWindows__CNetworking__CBackgroundTransfer__CUploadOperation___x_ABI_CWindows__CNetworking__CBackgroundTransfer__CUploadOperation* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIAsyncOperationWithProgress_2___x_ABI_CWindows__CNetworking__CBackgroundTransfer__CUploadOperation___x_ABI_CWindows__CNetworking__CBackgroundTransfer__CUploadOperation* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIAsyncOperationWithProgress_2___x_ABI_CWindows__CNetworking__CBackgroundTransfer__CUploadOperation___x_ABI_CWindows__CNetworking__CBackgroundTransfer__CUploadOperation* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIAsyncOperationWithProgress_2___x_ABI_CWindows__CNetworking__CBackgroundTransfer__CUploadOperation___x_ABI_CWindows__CNetworking__CBackgroundTransfer__CUploadOperation* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIAsyncOperationWithProgress_2___x_ABI_CWindows__CNetworking__CBackgroundTransfer__CUploadOperation___x_ABI_CWindows__CNetworking__CBackgroundTransfer__CUploadOperation* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIAsyncOperationWithProgress_2___x_ABI_CWindows__CNetworking__CBackgroundTransfer__CUploadOperation___x_ABI_CWindows__CNetworking__CBackgroundTransfer__CUploadOperation* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* put_Progress)(__x_ABI_C__FIAsyncOperationWithProgress_2___x_ABI_CWindows__CNetworking__CBackgroundTransfer__CUploadOperation___x_ABI_CWindows__CNetworking__CBackgroundTransfer__CUploadOperation* This,
        __x_ABI_C__FIAsyncOperationProgressHandler_2___x_ABI_CWindows__CNetworking__CBackgroundTransfer__CUploadOperation___x_ABI_CWindows__CNetworking__CBackgroundTransfer__CUploadOperation* handler);
    HRESULT (STDMETHODCALLTYPE* get_Progress)(__x_ABI_C__FIAsyncOperationWithProgress_2___x_ABI_CWindows__CNetworking__CBackgroundTransfer__CUploadOperation___x_ABI_CWindows__CNetworking__CBackgroundTransfer__CUploadOperation* This,
        __x_ABI_C__FIAsyncOperationProgressHandler_2___x_ABI_CWindows__CNetworking__CBackgroundTransfer__CUploadOperation___x_ABI_CWindows__CNetworking__CBackgroundTransfer__CUploadOperation** result);
    HRESULT (STDMETHODCALLTYPE* put_Completed)(__x_ABI_C__FIAsyncOperationWithProgress_2___x_ABI_CWindows__CNetworking__CBackgroundTransfer__CUploadOperation___x_ABI_CWindows__CNetworking__CBackgroundTransfer__CUploadOperation* This,
        __x_ABI_C__FIAsyncOperationWithProgressCompletedHandler_2___x_ABI_CWindows__CNetworking__CBackgroundTransfer__CUploadOperation___x_ABI_CWindows__CNetworking__CBackgroundTransfer__CUploadOperation* handler);
    HRESULT (STDMETHODCALLTYPE* get_Completed)(__x_ABI_C__FIAsyncOperationWithProgress_2___x_ABI_CWindows__CNetworking__CBackgroundTransfer__CUploadOperation___x_ABI_CWindows__CNetworking__CBackgroundTransfer__CUploadOperation* This,
        __x_ABI_C__FIAsyncOperationWithProgressCompletedHandler_2___x_ABI_CWindows__CNetworking__CBackgroundTransfer__CUploadOperation___x_ABI_CWindows__CNetworking__CBackgroundTransfer__CUploadOperation** result);
    HRESULT (STDMETHODCALLTYPE* GetResults)(__x_ABI_C__FIAsyncOperationWithProgress_2___x_ABI_CWindows__CNetworking__CBackgroundTransfer__CUploadOperation___x_ABI_CWindows__CNetworking__CBackgroundTransfer__CUploadOperation* This,
        __x_ABI_CWindows_CNetworking_CBackgroundTransfer_CIUploadOperation** result);

        END_INTERFACE
    } __x_ABI_C__FIAsyncOperationWithProgress_2___x_ABI_CWindows__CNetworking__CBackgroundTransfer__CUploadOperation___x_ABI_CWindows__CNetworking__CBackgroundTransfer__CUploadOperationVtbl;

    interface __x_ABI_C__FIAsyncOperationWithProgress_2___x_ABI_CWindows__CNetworking__CBackgroundTransfer__CUploadOperation___x_ABI_CWindows__CNetworking__CBackgroundTransfer__CUploadOperation
    {
        CONST_VTBL struct __x_ABI_C__FIAsyncOperationWithProgress_2___x_ABI_CWindows__CNetworking__CBackgroundTransfer__CUploadOperation___x_ABI_CWindows__CNetworking__CBackgroundTransfer__CUploadOperationVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIAsyncOperationWithProgress_2___x_ABI_CWindows__CNetworking__CBackgroundTransfer__CUploadOperation___x_ABI_CWindows__CNetworking__CBackgroundTransfer__CUploadOperation_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIAsyncOperationProgressHandler_2___x_ABI_CWindows__CNetworking__CBackgroundTransfer__CUploadOperation___x_ABI_CWindows__CNetworking__CBackgroundTransfer__CUploadOperation_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIAsyncOperationProgressHandler_2___x_ABI_CWindows__CNetworking__CBackgroundTransfer__CUploadOperation___x_ABI_CWindows__CNetworking__CBackgroundTransfer__CUploadOperation_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIAsyncOperationProgressHandler_2___x_ABI_CWindows__CNetworking__CBackgroundTransfer__CUploadOperation___x_ABI_CWindows__CNetworking__CBackgroundTransfer__CUploadOperation __x_ABI_C__FIAsyncOperationProgressHandler_2___x_ABI_CWindows__CNetworking__CBackgroundTransfer__CUploadOperation___x_ABI_CWindows__CNetworking__CBackgroundTransfer__CUploadOperation;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIAsyncOperationProgressHandler_2___x_ABI_CWindows__CNetworking__CBackgroundTransfer__CUploadOperation___x_ABI_CWindows__CNetworking__CBackgroundTransfer__CUploadOperation;

    typedef struct __x_ABI_C__FIAsyncOperationProgressHandler_2___x_ABI_CWindows__CNetworking__CBackgroundTransfer__CUploadOperation___x_ABI_CWindows__CNetworking__CBackgroundTransfer__CUploadOperationVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIAsyncOperationProgressHandler_2___x_ABI_CWindows__CNetworking__CBackgroundTransfer__CUploadOperation___x_ABI_CWindows__CNetworking__CBackgroundTransfer__CUploadOperation* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIAsyncOperationProgressHandler_2___x_ABI_CWindows__CNetworking__CBackgroundTransfer__CUploadOperation___x_ABI_CWindows__CNetworking__CBackgroundTransfer__CUploadOperation* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIAsyncOperationProgressHandler_2___x_ABI_CWindows__CNetworking__CBackgroundTransfer__CUploadOperation___x_ABI_CWindows__CNetworking__CBackgroundTransfer__CUploadOperation* This);
        HRESULT (STDMETHODCALLTYPE* Invoke)(__x_ABI_C__FIAsyncOperationProgressHandler_2___x_ABI_CWindows__CNetworking__CBackgroundTransfer__CUploadOperation___x_ABI_CWindows__CNetworking__CBackgroundTransfer__CUploadOperation* This,
        __x_ABI_C__FIAsyncOperationWithProgress_2___x_ABI_CWindows__CNetworking__CBackgroundTransfer__CUploadOperation___x_ABI_CWindows__CNetworking__CBackgroundTransfer__CUploadOperation* asyncInfo,
        __x_ABI_CWindows_CNetworking_CBackgroundTransfer_CIUploadOperation* progressInfo);

        END_INTERFACE
    } __x_ABI_C__FIAsyncOperationProgressHandler_2___x_ABI_CWindows__CNetworking__CBackgroundTransfer__CUploadOperation___x_ABI_CWindows__CNetworking__CBackgroundTransfer__CUploadOperationVtbl;

    interface __x_ABI_C__FIAsyncOperationProgressHandler_2___x_ABI_CWindows__CNetworking__CBackgroundTransfer__CUploadOperation___x_ABI_CWindows__CNetworking__CBackgroundTransfer__CUploadOperation
    {
        CONST_VTBL struct __x_ABI_C__FIAsyncOperationProgressHandler_2___x_ABI_CWindows__CNetworking__CBackgroundTransfer__CUploadOperation___x_ABI_CWindows__CNetworking__CBackgroundTransfer__CUploadOperationVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIAsyncOperationProgressHandler_2___x_ABI_CWindows__CNetworking__CBackgroundTransfer__CUploadOperation___x_ABI_CWindows__CNetworking__CBackgroundTransfer__CUploadOperation_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIKeyValuePair_2_HSTRING_HSTRING_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIKeyValuePair_2_HSTRING_HSTRING_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIKeyValuePair_2_HSTRING_HSTRING __x_ABI_C__FIKeyValuePair_2_HSTRING_HSTRING;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIKeyValuePair_2_HSTRING_HSTRING;

    typedef struct __x_ABI_C__FIKeyValuePair_2_HSTRING_HSTRINGVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIKeyValuePair_2_HSTRING_HSTRING* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIKeyValuePair_2_HSTRING_HSTRING* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIKeyValuePair_2_HSTRING_HSTRING* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIKeyValuePair_2_HSTRING_HSTRING* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIKeyValuePair_2_HSTRING_HSTRING* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIKeyValuePair_2_HSTRING_HSTRING* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Key)(__x_ABI_C__FIKeyValuePair_2_HSTRING_HSTRING* This,
        HSTRING* result);
    HRESULT (STDMETHODCALLTYPE* get_Value)(__x_ABI_C__FIKeyValuePair_2_HSTRING_HSTRING* This,
        HSTRING* result);

        END_INTERFACE
    } __x_ABI_C__FIKeyValuePair_2_HSTRING_HSTRINGVtbl;

    interface __x_ABI_C__FIKeyValuePair_2_HSTRING_HSTRING
    {
        CONST_VTBL struct __x_ABI_C__FIKeyValuePair_2_HSTRING_HSTRINGVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIKeyValuePair_2_HSTRING_HSTRING_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2_HSTRING_HSTRING_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2_HSTRING_HSTRING_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2_HSTRING_HSTRING __x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2_HSTRING_HSTRING;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2_HSTRING_HSTRING;

    typedef struct __x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2_HSTRING_HSTRINGVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2_HSTRING_HSTRING* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2_HSTRING_HSTRING* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2_HSTRING_HSTRING* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2_HSTRING_HSTRING* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2_HSTRING_HSTRING* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2_HSTRING_HSTRING* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Current)(__x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2_HSTRING_HSTRING* This,
        __x_ABI_C__FIKeyValuePair_2_HSTRING_HSTRING** result);
    HRESULT (STDMETHODCALLTYPE* get_HasCurrent)(__x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2_HSTRING_HSTRING* This,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* MoveNext)(__x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2_HSTRING_HSTRING* This,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2_HSTRING_HSTRING* This,
        UINT32 itemsLength,
        __x_ABI_C__FIKeyValuePair_2_HSTRING_HSTRING** items,
        UINT32* result);

        END_INTERFACE
    } __x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2_HSTRING_HSTRINGVtbl;

    interface __x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2_HSTRING_HSTRING
    {
        CONST_VTBL struct __x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2_HSTRING_HSTRINGVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2_HSTRING_HSTRING_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIIterable_1___x_ABI_C__FIKeyValuePair_2_HSTRING_HSTRING_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIIterable_1___x_ABI_C__FIKeyValuePair_2_HSTRING_HSTRING_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIIterable_1___x_ABI_C__FIKeyValuePair_2_HSTRING_HSTRING __x_ABI_C__FIIterable_1___x_ABI_C__FIKeyValuePair_2_HSTRING_HSTRING;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIIterable_1___x_ABI_C__FIKeyValuePair_2_HSTRING_HSTRING;

    typedef struct __x_ABI_C__FIIterable_1___x_ABI_C__FIKeyValuePair_2_HSTRING_HSTRINGVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIIterable_1___x_ABI_C__FIKeyValuePair_2_HSTRING_HSTRING* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIIterable_1___x_ABI_C__FIKeyValuePair_2_HSTRING_HSTRING* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIIterable_1___x_ABI_C__FIKeyValuePair_2_HSTRING_HSTRING* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIIterable_1___x_ABI_C__FIKeyValuePair_2_HSTRING_HSTRING* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIIterable_1___x_ABI_C__FIKeyValuePair_2_HSTRING_HSTRING* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIIterable_1___x_ABI_C__FIKeyValuePair_2_HSTRING_HSTRING* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* First)(__x_ABI_C__FIIterable_1___x_ABI_C__FIKeyValuePair_2_HSTRING_HSTRING* This,
        __x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2_HSTRING_HSTRING** result);

        END_INTERFACE
    } __x_ABI_C__FIIterable_1___x_ABI_C__FIKeyValuePair_2_HSTRING_HSTRINGVtbl;

    interface __x_ABI_C__FIIterable_1___x_ABI_C__FIKeyValuePair_2_HSTRING_HSTRING
    {
        CONST_VTBL struct __x_ABI_C__FIIterable_1___x_ABI_C__FIKeyValuePair_2_HSTRING_HSTRINGVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIIterable_1___x_ABI_C__FIKeyValuePair_2_HSTRING_HSTRING_INTERFACE_DEFINED__
    
#ifndef ____x_ABI_CWindows_CFoundation_CIUriRuntimeClass_FWD_DEFINED__
#define ____x_ABI_CWindows_CFoundation_CIUriRuntimeClass_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CFoundation_CIUriRuntimeClass __x_ABI_CWindows_CFoundation_CIUriRuntimeClass;

#endif // ____x_ABI_CWindows_CFoundation_CIUriRuntimeClass_FWD_DEFINED__

#if !defined(____x_ABI_C__FIIterator_1___x_ABI_CWindows__CFoundation__CUri_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIIterator_1___x_ABI_CWindows__CFoundation__CUri_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIIterator_1___x_ABI_CWindows__CFoundation__CUri __x_ABI_C__FIIterator_1___x_ABI_CWindows__CFoundation__CUri;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIIterator_1___x_ABI_CWindows__CFoundation__CUri;

    typedef struct __x_ABI_C__FIIterator_1___x_ABI_CWindows__CFoundation__CUriVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CFoundation__CUri* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CFoundation__CUri* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CFoundation__CUri* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CFoundation__CUri* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CFoundation__CUri* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CFoundation__CUri* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Current)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CFoundation__CUri* This,
        __x_ABI_CWindows_CFoundation_CIUriRuntimeClass** result);
    HRESULT (STDMETHODCALLTYPE* get_HasCurrent)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CFoundation__CUri* This,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* MoveNext)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CFoundation__CUri* This,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CFoundation__CUri* This,
        UINT32 itemsLength,
        __x_ABI_CWindows_CFoundation_CIUriRuntimeClass** items,
        UINT32* result);

        END_INTERFACE
    } __x_ABI_C__FIIterator_1___x_ABI_CWindows__CFoundation__CUriVtbl;

    interface __x_ABI_C__FIIterator_1___x_ABI_CWindows__CFoundation__CUri
    {
        CONST_VTBL struct __x_ABI_C__FIIterator_1___x_ABI_CWindows__CFoundation__CUriVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIIterator_1___x_ABI_CWindows__CFoundation__CUri_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIIterable_1___x_ABI_CWindows__CFoundation__CUri_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIIterable_1___x_ABI_CWindows__CFoundation__CUri_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIIterable_1___x_ABI_CWindows__CFoundation__CUri __x_ABI_C__FIIterable_1___x_ABI_CWindows__CFoundation__CUri;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIIterable_1___x_ABI_CWindows__CFoundation__CUri;

    typedef struct __x_ABI_C__FIIterable_1___x_ABI_CWindows__CFoundation__CUriVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CFoundation__CUri* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CFoundation__CUri* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CFoundation__CUri* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CFoundation__CUri* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CFoundation__CUri* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CFoundation__CUri* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* First)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CFoundation__CUri* This,
        __x_ABI_C__FIIterator_1___x_ABI_CWindows__CFoundation__CUri** result);

        END_INTERFACE
    } __x_ABI_C__FIIterable_1___x_ABI_CWindows__CFoundation__CUriVtbl;

    interface __x_ABI_C__FIIterable_1___x_ABI_CWindows__CFoundation__CUri
    {
        CONST_VTBL struct __x_ABI_C__FIIterable_1___x_ABI_CWindows__CFoundation__CUriVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIIterable_1___x_ABI_CWindows__CFoundation__CUri_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIIterator_1___x_ABI_CWindows__CNetworking__CBackgroundTransfer__CBackgroundTransferContentPart_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIIterator_1___x_ABI_CWindows__CNetworking__CBackgroundTransfer__CBackgroundTransferContentPart_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIIterator_1___x_ABI_CWindows__CNetworking__CBackgroundTransfer__CBackgroundTransferContentPart __x_ABI_C__FIIterator_1___x_ABI_CWindows__CNetworking__CBackgroundTransfer__CBackgroundTransferContentPart;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIIterator_1___x_ABI_CWindows__CNetworking__CBackgroundTransfer__CBackgroundTransferContentPart;

    typedef struct __x_ABI_C__FIIterator_1___x_ABI_CWindows__CNetworking__CBackgroundTransfer__CBackgroundTransferContentPartVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CNetworking__CBackgroundTransfer__CBackgroundTransferContentPart* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CNetworking__CBackgroundTransfer__CBackgroundTransferContentPart* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CNetworking__CBackgroundTransfer__CBackgroundTransferContentPart* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CNetworking__CBackgroundTransfer__CBackgroundTransferContentPart* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CNetworking__CBackgroundTransfer__CBackgroundTransferContentPart* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CNetworking__CBackgroundTransfer__CBackgroundTransferContentPart* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Current)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CNetworking__CBackgroundTransfer__CBackgroundTransferContentPart* This,
        __x_ABI_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundTransferContentPart** result);
    HRESULT (STDMETHODCALLTYPE* get_HasCurrent)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CNetworking__CBackgroundTransfer__CBackgroundTransferContentPart* This,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* MoveNext)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CNetworking__CBackgroundTransfer__CBackgroundTransferContentPart* This,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CNetworking__CBackgroundTransfer__CBackgroundTransferContentPart* This,
        UINT32 itemsLength,
        __x_ABI_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundTransferContentPart** items,
        UINT32* result);

        END_INTERFACE
    } __x_ABI_C__FIIterator_1___x_ABI_CWindows__CNetworking__CBackgroundTransfer__CBackgroundTransferContentPartVtbl;

    interface __x_ABI_C__FIIterator_1___x_ABI_CWindows__CNetworking__CBackgroundTransfer__CBackgroundTransferContentPart
    {
        CONST_VTBL struct __x_ABI_C__FIIterator_1___x_ABI_CWindows__CNetworking__CBackgroundTransfer__CBackgroundTransferContentPartVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIIterator_1___x_ABI_CWindows__CNetworking__CBackgroundTransfer__CBackgroundTransferContentPart_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIIterable_1___x_ABI_CWindows__CNetworking__CBackgroundTransfer__CBackgroundTransferContentPart_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIIterable_1___x_ABI_CWindows__CNetworking__CBackgroundTransfer__CBackgroundTransferContentPart_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIIterable_1___x_ABI_CWindows__CNetworking__CBackgroundTransfer__CBackgroundTransferContentPart __x_ABI_C__FIIterable_1___x_ABI_CWindows__CNetworking__CBackgroundTransfer__CBackgroundTransferContentPart;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIIterable_1___x_ABI_CWindows__CNetworking__CBackgroundTransfer__CBackgroundTransferContentPart;

    typedef struct __x_ABI_C__FIIterable_1___x_ABI_CWindows__CNetworking__CBackgroundTransfer__CBackgroundTransferContentPartVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CNetworking__CBackgroundTransfer__CBackgroundTransferContentPart* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CNetworking__CBackgroundTransfer__CBackgroundTransferContentPart* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CNetworking__CBackgroundTransfer__CBackgroundTransferContentPart* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CNetworking__CBackgroundTransfer__CBackgroundTransferContentPart* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CNetworking__CBackgroundTransfer__CBackgroundTransferContentPart* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CNetworking__CBackgroundTransfer__CBackgroundTransferContentPart* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* First)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CNetworking__CBackgroundTransfer__CBackgroundTransferContentPart* This,
        __x_ABI_C__FIIterator_1___x_ABI_CWindows__CNetworking__CBackgroundTransfer__CBackgroundTransferContentPart** result);

        END_INTERFACE
    } __x_ABI_C__FIIterable_1___x_ABI_CWindows__CNetworking__CBackgroundTransfer__CBackgroundTransferContentPartVtbl;

    interface __x_ABI_C__FIIterable_1___x_ABI_CWindows__CNetworking__CBackgroundTransfer__CBackgroundTransferContentPart
    {
        CONST_VTBL struct __x_ABI_C__FIIterable_1___x_ABI_CWindows__CNetworking__CBackgroundTransfer__CBackgroundTransferContentPartVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIIterable_1___x_ABI_CWindows__CNetworking__CBackgroundTransfer__CBackgroundTransferContentPart_INTERFACE_DEFINED__
    
typedef struct __x_ABI_CWindows_CNetworking_CBackgroundTransfer_CBackgroundTransferFileRange __x_ABI_CWindows_CNetworking_CBackgroundTransfer_CBackgroundTransferFileRange;

#if !defined(____x_ABI_C__FIIterator_1___x_ABI_CWindows__CNetworking__CBackgroundTransfer__CBackgroundTransferFileRange_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIIterator_1___x_ABI_CWindows__CNetworking__CBackgroundTransfer__CBackgroundTransferFileRange_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIIterator_1___x_ABI_CWindows__CNetworking__CBackgroundTransfer__CBackgroundTransferFileRange __x_ABI_C__FIIterator_1___x_ABI_CWindows__CNetworking__CBackgroundTransfer__CBackgroundTransferFileRange;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIIterator_1___x_ABI_CWindows__CNetworking__CBackgroundTransfer__CBackgroundTransferFileRange;

    typedef struct __x_ABI_C__FIIterator_1___x_ABI_CWindows__CNetworking__CBackgroundTransfer__CBackgroundTransferFileRangeVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CNetworking__CBackgroundTransfer__CBackgroundTransferFileRange* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CNetworking__CBackgroundTransfer__CBackgroundTransferFileRange* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CNetworking__CBackgroundTransfer__CBackgroundTransferFileRange* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CNetworking__CBackgroundTransfer__CBackgroundTransferFileRange* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CNetworking__CBackgroundTransfer__CBackgroundTransferFileRange* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CNetworking__CBackgroundTransfer__CBackgroundTransferFileRange* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Current)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CNetworking__CBackgroundTransfer__CBackgroundTransferFileRange* This,
        struct __x_ABI_CWindows_CNetworking_CBackgroundTransfer_CBackgroundTransferFileRange* result);
    HRESULT (STDMETHODCALLTYPE* get_HasCurrent)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CNetworking__CBackgroundTransfer__CBackgroundTransferFileRange* This,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* MoveNext)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CNetworking__CBackgroundTransfer__CBackgroundTransferFileRange* This,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CNetworking__CBackgroundTransfer__CBackgroundTransferFileRange* This,
        UINT32 itemsLength,
        struct __x_ABI_CWindows_CNetworking_CBackgroundTransfer_CBackgroundTransferFileRange* items,
        UINT32* result);

        END_INTERFACE
    } __x_ABI_C__FIIterator_1___x_ABI_CWindows__CNetworking__CBackgroundTransfer__CBackgroundTransferFileRangeVtbl;

    interface __x_ABI_C__FIIterator_1___x_ABI_CWindows__CNetworking__CBackgroundTransfer__CBackgroundTransferFileRange
    {
        CONST_VTBL struct __x_ABI_C__FIIterator_1___x_ABI_CWindows__CNetworking__CBackgroundTransfer__CBackgroundTransferFileRangeVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIIterator_1___x_ABI_CWindows__CNetworking__CBackgroundTransfer__CBackgroundTransferFileRange_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIIterable_1___x_ABI_CWindows__CNetworking__CBackgroundTransfer__CBackgroundTransferFileRange_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIIterable_1___x_ABI_CWindows__CNetworking__CBackgroundTransfer__CBackgroundTransferFileRange_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIIterable_1___x_ABI_CWindows__CNetworking__CBackgroundTransfer__CBackgroundTransferFileRange __x_ABI_C__FIIterable_1___x_ABI_CWindows__CNetworking__CBackgroundTransfer__CBackgroundTransferFileRange;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIIterable_1___x_ABI_CWindows__CNetworking__CBackgroundTransfer__CBackgroundTransferFileRange;

    typedef struct __x_ABI_C__FIIterable_1___x_ABI_CWindows__CNetworking__CBackgroundTransfer__CBackgroundTransferFileRangeVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CNetworking__CBackgroundTransfer__CBackgroundTransferFileRange* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CNetworking__CBackgroundTransfer__CBackgroundTransferFileRange* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CNetworking__CBackgroundTransfer__CBackgroundTransferFileRange* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CNetworking__CBackgroundTransfer__CBackgroundTransferFileRange* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CNetworking__CBackgroundTransfer__CBackgroundTransferFileRange* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CNetworking__CBackgroundTransfer__CBackgroundTransferFileRange* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* First)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CNetworking__CBackgroundTransfer__CBackgroundTransferFileRange* This,
        __x_ABI_C__FIIterator_1___x_ABI_CWindows__CNetworking__CBackgroundTransfer__CBackgroundTransferFileRange** result);

        END_INTERFACE
    } __x_ABI_C__FIIterable_1___x_ABI_CWindows__CNetworking__CBackgroundTransfer__CBackgroundTransferFileRangeVtbl;

    interface __x_ABI_C__FIIterable_1___x_ABI_CWindows__CNetworking__CBackgroundTransfer__CBackgroundTransferFileRange
    {
        CONST_VTBL struct __x_ABI_C__FIIterable_1___x_ABI_CWindows__CNetworking__CBackgroundTransfer__CBackgroundTransferFileRangeVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIIterable_1___x_ABI_CWindows__CNetworking__CBackgroundTransfer__CBackgroundTransferFileRange_INTERFACE_DEFINED__
    
typedef enum __x_ABI_CWindows_CWeb_CWebErrorStatus __x_ABI_CWindows_CWeb_CWebErrorStatus;

#if !defined(____x_ABI_C__FIIterator_1___x_ABI_CWindows__CWeb__CWebErrorStatus_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIIterator_1___x_ABI_CWindows__CWeb__CWebErrorStatus_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIIterator_1___x_ABI_CWindows__CWeb__CWebErrorStatus __x_ABI_C__FIIterator_1___x_ABI_CWindows__CWeb__CWebErrorStatus;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIIterator_1___x_ABI_CWindows__CWeb__CWebErrorStatus;

    typedef struct __x_ABI_C__FIIterator_1___x_ABI_CWindows__CWeb__CWebErrorStatusVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CWeb__CWebErrorStatus* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CWeb__CWebErrorStatus* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CWeb__CWebErrorStatus* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CWeb__CWebErrorStatus* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CWeb__CWebErrorStatus* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CWeb__CWebErrorStatus* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Current)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CWeb__CWebErrorStatus* This,
        enum __x_ABI_CWindows_CWeb_CWebErrorStatus* result);
    HRESULT (STDMETHODCALLTYPE* get_HasCurrent)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CWeb__CWebErrorStatus* This,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* MoveNext)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CWeb__CWebErrorStatus* This,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CWeb__CWebErrorStatus* This,
        UINT32 itemsLength,
        enum __x_ABI_CWindows_CWeb_CWebErrorStatus* items,
        UINT32* result);

        END_INTERFACE
    } __x_ABI_C__FIIterator_1___x_ABI_CWindows__CWeb__CWebErrorStatusVtbl;

    interface __x_ABI_C__FIIterator_1___x_ABI_CWindows__CWeb__CWebErrorStatus
    {
        CONST_VTBL struct __x_ABI_C__FIIterator_1___x_ABI_CWindows__CWeb__CWebErrorStatusVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIIterator_1___x_ABI_CWindows__CWeb__CWebErrorStatus_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIIterable_1___x_ABI_CWindows__CWeb__CWebErrorStatus_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIIterable_1___x_ABI_CWindows__CWeb__CWebErrorStatus_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIIterable_1___x_ABI_CWindows__CWeb__CWebErrorStatus __x_ABI_C__FIIterable_1___x_ABI_CWindows__CWeb__CWebErrorStatus;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIIterable_1___x_ABI_CWindows__CWeb__CWebErrorStatus;

    typedef struct __x_ABI_C__FIIterable_1___x_ABI_CWindows__CWeb__CWebErrorStatusVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CWeb__CWebErrorStatus* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CWeb__CWebErrorStatus* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CWeb__CWebErrorStatus* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CWeb__CWebErrorStatus* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CWeb__CWebErrorStatus* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CWeb__CWebErrorStatus* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* First)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CWeb__CWebErrorStatus* This,
        __x_ABI_C__FIIterator_1___x_ABI_CWindows__CWeb__CWebErrorStatus** result);

        END_INTERFACE
    } __x_ABI_C__FIIterable_1___x_ABI_CWindows__CWeb__CWebErrorStatusVtbl;

    interface __x_ABI_C__FIIterable_1___x_ABI_CWindows__CWeb__CWebErrorStatus
    {
        CONST_VTBL struct __x_ABI_C__FIIterable_1___x_ABI_CWindows__CWeb__CWebErrorStatusVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIIterable_1___x_ABI_CWindows__CWeb__CWebErrorStatus_INTERFACE_DEFINED__
    
typedef interface __x_ABI_C__FIMapView_2_HSTRING_HSTRING __x_ABI_C__FIMapView_2_HSTRING_HSTRING;

#if !defined(____x_ABI_C__FIMapView_2_HSTRING_HSTRING_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIMapView_2_HSTRING_HSTRING_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIMapView_2_HSTRING_HSTRING __x_ABI_C__FIMapView_2_HSTRING_HSTRING;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIMapView_2_HSTRING_HSTRING;

    typedef struct __x_ABI_C__FIMapView_2_HSTRING_HSTRINGVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIMapView_2_HSTRING_HSTRING* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIMapView_2_HSTRING_HSTRING* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIMapView_2_HSTRING_HSTRING* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIMapView_2_HSTRING_HSTRING* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIMapView_2_HSTRING_HSTRING* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIMapView_2_HSTRING_HSTRING* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* Lookup)(__x_ABI_C__FIMapView_2_HSTRING_HSTRING* This,
        HSTRING key,
        HSTRING* result);
    HRESULT (STDMETHODCALLTYPE* get_Size)(__x_ABI_C__FIMapView_2_HSTRING_HSTRING* This,
        UINT32* result);
    HRESULT (STDMETHODCALLTYPE* HasKey)(__x_ABI_C__FIMapView_2_HSTRING_HSTRING* This,
        HSTRING key,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* Split)(__x_ABI_C__FIMapView_2_HSTRING_HSTRING* This,
        __x_ABI_C__FIMapView_2_HSTRING_HSTRING** first,
        __x_ABI_C__FIMapView_2_HSTRING_HSTRING** second);

        END_INTERFACE
    } __x_ABI_C__FIMapView_2_HSTRING_HSTRINGVtbl;

    interface __x_ABI_C__FIMapView_2_HSTRING_HSTRING
    {
        CONST_VTBL struct __x_ABI_C__FIMapView_2_HSTRING_HSTRINGVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIMapView_2_HSTRING_HSTRING_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIVectorView_1___x_ABI_CWindows__CFoundation__CUri_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIVectorView_1___x_ABI_CWindows__CFoundation__CUri_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CFoundation__CUri __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CFoundation__CUri;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CFoundation__CUri;

    typedef struct __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CFoundation__CUriVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CFoundation__CUri* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CFoundation__CUri* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CFoundation__CUri* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CFoundation__CUri* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CFoundation__CUri* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CFoundation__CUri* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* GetAt)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CFoundation__CUri* This,
        UINT32 index,
        __x_ABI_CWindows_CFoundation_CIUriRuntimeClass** result);
    HRESULT (STDMETHODCALLTYPE* get_Size)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CFoundation__CUri* This,
        UINT32* result);
    HRESULT (STDMETHODCALLTYPE* IndexOf)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CFoundation__CUri* This,
        __x_ABI_CWindows_CFoundation_CIUriRuntimeClass* value,
        UINT32* index,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CFoundation__CUri* This,
        UINT32 startIndex,
        UINT32 itemsLength,
        __x_ABI_CWindows_CFoundation_CIUriRuntimeClass** items,
        UINT32* result);

        END_INTERFACE
    } __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CFoundation__CUriVtbl;

    interface __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CFoundation__CUri
    {
        CONST_VTBL struct __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CFoundation__CUriVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIVectorView_1___x_ABI_CWindows__CFoundation__CUri_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIVectorView_1___x_ABI_CWindows__CNetworking__CBackgroundTransfer__CBackgroundTransferFileRange_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIVectorView_1___x_ABI_CWindows__CNetworking__CBackgroundTransfer__CBackgroundTransferFileRange_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CNetworking__CBackgroundTransfer__CBackgroundTransferFileRange __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CNetworking__CBackgroundTransfer__CBackgroundTransferFileRange;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CNetworking__CBackgroundTransfer__CBackgroundTransferFileRange;

    typedef struct __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CNetworking__CBackgroundTransfer__CBackgroundTransferFileRangeVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CNetworking__CBackgroundTransfer__CBackgroundTransferFileRange* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CNetworking__CBackgroundTransfer__CBackgroundTransferFileRange* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CNetworking__CBackgroundTransfer__CBackgroundTransferFileRange* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CNetworking__CBackgroundTransfer__CBackgroundTransferFileRange* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CNetworking__CBackgroundTransfer__CBackgroundTransferFileRange* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CNetworking__CBackgroundTransfer__CBackgroundTransferFileRange* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* GetAt)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CNetworking__CBackgroundTransfer__CBackgroundTransferFileRange* This,
        UINT32 index,
        struct __x_ABI_CWindows_CNetworking_CBackgroundTransfer_CBackgroundTransferFileRange* result);
    HRESULT (STDMETHODCALLTYPE* get_Size)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CNetworking__CBackgroundTransfer__CBackgroundTransferFileRange* This,
        UINT32* result);
    HRESULT (STDMETHODCALLTYPE* IndexOf)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CNetworking__CBackgroundTransfer__CBackgroundTransferFileRange* This,
        struct __x_ABI_CWindows_CNetworking_CBackgroundTransfer_CBackgroundTransferFileRange value,
        UINT32* index,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CNetworking__CBackgroundTransfer__CBackgroundTransferFileRange* This,
        UINT32 startIndex,
        UINT32 itemsLength,
        struct __x_ABI_CWindows_CNetworking_CBackgroundTransfer_CBackgroundTransferFileRange* items,
        UINT32* result);

        END_INTERFACE
    } __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CNetworking__CBackgroundTransfer__CBackgroundTransferFileRangeVtbl;

    interface __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CNetworking__CBackgroundTransfer__CBackgroundTransferFileRange
    {
        CONST_VTBL struct __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CNetworking__CBackgroundTransfer__CBackgroundTransferFileRangeVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIVectorView_1___x_ABI_CWindows__CNetworking__CBackgroundTransfer__CBackgroundTransferFileRange_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIVectorView_1___x_ABI_CWindows__CWeb__CWebErrorStatus_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIVectorView_1___x_ABI_CWindows__CWeb__CWebErrorStatus_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CWeb__CWebErrorStatus __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CWeb__CWebErrorStatus;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CWeb__CWebErrorStatus;

    typedef struct __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CWeb__CWebErrorStatusVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CWeb__CWebErrorStatus* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CWeb__CWebErrorStatus* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CWeb__CWebErrorStatus* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CWeb__CWebErrorStatus* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CWeb__CWebErrorStatus* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CWeb__CWebErrorStatus* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* GetAt)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CWeb__CWebErrorStatus* This,
        UINT32 index,
        enum __x_ABI_CWindows_CWeb_CWebErrorStatus* result);
    HRESULT (STDMETHODCALLTYPE* get_Size)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CWeb__CWebErrorStatus* This,
        UINT32* result);
    HRESULT (STDMETHODCALLTYPE* IndexOf)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CWeb__CWebErrorStatus* This,
        enum __x_ABI_CWindows_CWeb_CWebErrorStatus value,
        UINT32* index,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CWeb__CWebErrorStatus* This,
        UINT32 startIndex,
        UINT32 itemsLength,
        enum __x_ABI_CWindows_CWeb_CWebErrorStatus* items,
        UINT32* result);

        END_INTERFACE
    } __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CWeb__CWebErrorStatusVtbl;

    interface __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CWeb__CWebErrorStatus
    {
        CONST_VTBL struct __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CWeb__CWebErrorStatusVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIVectorView_1___x_ABI_CWindows__CWeb__CWebErrorStatus_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIVector_1___x_ABI_CWindows__CFoundation__CUri_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIVector_1___x_ABI_CWindows__CFoundation__CUri_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIVector_1___x_ABI_CWindows__CFoundation__CUri __x_ABI_C__FIVector_1___x_ABI_CWindows__CFoundation__CUri;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIVector_1___x_ABI_CWindows__CFoundation__CUri;

    typedef struct __x_ABI_C__FIVector_1___x_ABI_CWindows__CFoundation__CUriVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CFoundation__CUri* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CFoundation__CUri* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CFoundation__CUri* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CFoundation__CUri* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CFoundation__CUri* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CFoundation__CUri* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* GetAt)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CFoundation__CUri* This,
        UINT32 index,
        __x_ABI_CWindows_CFoundation_CIUriRuntimeClass** result);
    HRESULT (STDMETHODCALLTYPE* get_Size)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CFoundation__CUri* This,
        UINT32* result);
    HRESULT (STDMETHODCALLTYPE* GetView)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CFoundation__CUri* This,
        __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CFoundation__CUri** result);
    HRESULT (STDMETHODCALLTYPE* IndexOf)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CFoundation__CUri* This,
        __x_ABI_CWindows_CFoundation_CIUriRuntimeClass* value,
        UINT32* index,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* SetAt)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CFoundation__CUri* This,
        UINT32 index,
        __x_ABI_CWindows_CFoundation_CIUriRuntimeClass* value);
    HRESULT (STDMETHODCALLTYPE* InsertAt)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CFoundation__CUri* This,
        UINT32 index,
        __x_ABI_CWindows_CFoundation_CIUriRuntimeClass* value);
    HRESULT (STDMETHODCALLTYPE* RemoveAt)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CFoundation__CUri* This,
        UINT32 index);
    HRESULT (STDMETHODCALLTYPE* Append)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CFoundation__CUri* This,
        __x_ABI_CWindows_CFoundation_CIUriRuntimeClass* value);
    HRESULT (STDMETHODCALLTYPE* RemoveAtEnd)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CFoundation__CUri* This);
    HRESULT (STDMETHODCALLTYPE* Clear)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CFoundation__CUri* This);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CFoundation__CUri* This,
        UINT32 startIndex,
        UINT32 itemsLength,
        __x_ABI_CWindows_CFoundation_CIUriRuntimeClass** items,
        UINT32* result);
    HRESULT (STDMETHODCALLTYPE* ReplaceAll)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CFoundation__CUri* This,
        UINT32 itemsLength,
        __x_ABI_CWindows_CFoundation_CIUriRuntimeClass** items);

        END_INTERFACE
    } __x_ABI_C__FIVector_1___x_ABI_CWindows__CFoundation__CUriVtbl;

    interface __x_ABI_C__FIVector_1___x_ABI_CWindows__CFoundation__CUri
    {
        CONST_VTBL struct __x_ABI_C__FIVector_1___x_ABI_CWindows__CFoundation__CUriVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIVector_1___x_ABI_CWindows__CFoundation__CUri_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIVector_1___x_ABI_CWindows__CNetworking__CBackgroundTransfer__CBackgroundTransferFileRange_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIVector_1___x_ABI_CWindows__CNetworking__CBackgroundTransfer__CBackgroundTransferFileRange_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIVector_1___x_ABI_CWindows__CNetworking__CBackgroundTransfer__CBackgroundTransferFileRange __x_ABI_C__FIVector_1___x_ABI_CWindows__CNetworking__CBackgroundTransfer__CBackgroundTransferFileRange;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIVector_1___x_ABI_CWindows__CNetworking__CBackgroundTransfer__CBackgroundTransferFileRange;

    typedef struct __x_ABI_C__FIVector_1___x_ABI_CWindows__CNetworking__CBackgroundTransfer__CBackgroundTransferFileRangeVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CNetworking__CBackgroundTransfer__CBackgroundTransferFileRange* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CNetworking__CBackgroundTransfer__CBackgroundTransferFileRange* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CNetworking__CBackgroundTransfer__CBackgroundTransferFileRange* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CNetworking__CBackgroundTransfer__CBackgroundTransferFileRange* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CNetworking__CBackgroundTransfer__CBackgroundTransferFileRange* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CNetworking__CBackgroundTransfer__CBackgroundTransferFileRange* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* GetAt)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CNetworking__CBackgroundTransfer__CBackgroundTransferFileRange* This,
        UINT32 index,
        struct __x_ABI_CWindows_CNetworking_CBackgroundTransfer_CBackgroundTransferFileRange* result);
    HRESULT (STDMETHODCALLTYPE* get_Size)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CNetworking__CBackgroundTransfer__CBackgroundTransferFileRange* This,
        UINT32* result);
    HRESULT (STDMETHODCALLTYPE* GetView)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CNetworking__CBackgroundTransfer__CBackgroundTransferFileRange* This,
        __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CNetworking__CBackgroundTransfer__CBackgroundTransferFileRange** result);
    HRESULT (STDMETHODCALLTYPE* IndexOf)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CNetworking__CBackgroundTransfer__CBackgroundTransferFileRange* This,
        struct __x_ABI_CWindows_CNetworking_CBackgroundTransfer_CBackgroundTransferFileRange value,
        UINT32* index,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* SetAt)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CNetworking__CBackgroundTransfer__CBackgroundTransferFileRange* This,
        UINT32 index,
        struct __x_ABI_CWindows_CNetworking_CBackgroundTransfer_CBackgroundTransferFileRange value);
    HRESULT (STDMETHODCALLTYPE* InsertAt)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CNetworking__CBackgroundTransfer__CBackgroundTransferFileRange* This,
        UINT32 index,
        struct __x_ABI_CWindows_CNetworking_CBackgroundTransfer_CBackgroundTransferFileRange value);
    HRESULT (STDMETHODCALLTYPE* RemoveAt)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CNetworking__CBackgroundTransfer__CBackgroundTransferFileRange* This,
        UINT32 index);
    HRESULT (STDMETHODCALLTYPE* Append)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CNetworking__CBackgroundTransfer__CBackgroundTransferFileRange* This,
        struct __x_ABI_CWindows_CNetworking_CBackgroundTransfer_CBackgroundTransferFileRange value);
    HRESULT (STDMETHODCALLTYPE* RemoveAtEnd)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CNetworking__CBackgroundTransfer__CBackgroundTransferFileRange* This);
    HRESULT (STDMETHODCALLTYPE* Clear)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CNetworking__CBackgroundTransfer__CBackgroundTransferFileRange* This);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CNetworking__CBackgroundTransfer__CBackgroundTransferFileRange* This,
        UINT32 startIndex,
        UINT32 itemsLength,
        struct __x_ABI_CWindows_CNetworking_CBackgroundTransfer_CBackgroundTransferFileRange* items,
        UINT32* result);
    HRESULT (STDMETHODCALLTYPE* ReplaceAll)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CNetworking__CBackgroundTransfer__CBackgroundTransferFileRange* This,
        UINT32 itemsLength,
        struct __x_ABI_CWindows_CNetworking_CBackgroundTransfer_CBackgroundTransferFileRange* items);

        END_INTERFACE
    } __x_ABI_C__FIVector_1___x_ABI_CWindows__CNetworking__CBackgroundTransfer__CBackgroundTransferFileRangeVtbl;

    interface __x_ABI_C__FIVector_1___x_ABI_CWindows__CNetworking__CBackgroundTransfer__CBackgroundTransferFileRange
    {
        CONST_VTBL struct __x_ABI_C__FIVector_1___x_ABI_CWindows__CNetworking__CBackgroundTransfer__CBackgroundTransferFileRangeVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIVector_1___x_ABI_CWindows__CNetworking__CBackgroundTransfer__CBackgroundTransferFileRange_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIVector_1___x_ABI_CWindows__CWeb__CWebErrorStatus_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIVector_1___x_ABI_CWindows__CWeb__CWebErrorStatus_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIVector_1___x_ABI_CWindows__CWeb__CWebErrorStatus __x_ABI_C__FIVector_1___x_ABI_CWindows__CWeb__CWebErrorStatus;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIVector_1___x_ABI_CWindows__CWeb__CWebErrorStatus;

    typedef struct __x_ABI_C__FIVector_1___x_ABI_CWindows__CWeb__CWebErrorStatusVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CWeb__CWebErrorStatus* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CWeb__CWebErrorStatus* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CWeb__CWebErrorStatus* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CWeb__CWebErrorStatus* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CWeb__CWebErrorStatus* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CWeb__CWebErrorStatus* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* GetAt)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CWeb__CWebErrorStatus* This,
        UINT32 index,
        enum __x_ABI_CWindows_CWeb_CWebErrorStatus* result);
    HRESULT (STDMETHODCALLTYPE* get_Size)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CWeb__CWebErrorStatus* This,
        UINT32* result);
    HRESULT (STDMETHODCALLTYPE* GetView)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CWeb__CWebErrorStatus* This,
        __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CWeb__CWebErrorStatus** result);
    HRESULT (STDMETHODCALLTYPE* IndexOf)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CWeb__CWebErrorStatus* This,
        enum __x_ABI_CWindows_CWeb_CWebErrorStatus value,
        UINT32* index,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* SetAt)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CWeb__CWebErrorStatus* This,
        UINT32 index,
        enum __x_ABI_CWindows_CWeb_CWebErrorStatus value);
    HRESULT (STDMETHODCALLTYPE* InsertAt)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CWeb__CWebErrorStatus* This,
        UINT32 index,
        enum __x_ABI_CWindows_CWeb_CWebErrorStatus value);
    HRESULT (STDMETHODCALLTYPE* RemoveAt)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CWeb__CWebErrorStatus* This,
        UINT32 index);
    HRESULT (STDMETHODCALLTYPE* Append)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CWeb__CWebErrorStatus* This,
        enum __x_ABI_CWindows_CWeb_CWebErrorStatus value);
    HRESULT (STDMETHODCALLTYPE* RemoveAtEnd)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CWeb__CWebErrorStatus* This);
    HRESULT (STDMETHODCALLTYPE* Clear)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CWeb__CWebErrorStatus* This);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CWeb__CWebErrorStatus* This,
        UINT32 startIndex,
        UINT32 itemsLength,
        enum __x_ABI_CWindows_CWeb_CWebErrorStatus* items,
        UINT32* result);
    HRESULT (STDMETHODCALLTYPE* ReplaceAll)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CWeb__CWebErrorStatus* This,
        UINT32 itemsLength,
        enum __x_ABI_CWindows_CWeb_CWebErrorStatus* items);

        END_INTERFACE
    } __x_ABI_C__FIVector_1___x_ABI_CWindows__CWeb__CWebErrorStatusVtbl;

    interface __x_ABI_C__FIVector_1___x_ABI_CWindows__CWeb__CWebErrorStatus
    {
        CONST_VTBL struct __x_ABI_C__FIVector_1___x_ABI_CWindows__CWeb__CWebErrorStatusVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIVector_1___x_ABI_CWindows__CWeb__CWebErrorStatus_INTERFACE_DEFINED__
    
typedef struct __x_ABI_CWindows_CFoundation_CDateTime __x_ABI_CWindows_CFoundation_CDateTime;

#if !defined(____x_ABI_C__FIReference_1___x_ABI_CWindows__CFoundation__CDateTime_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIReference_1___x_ABI_CWindows__CFoundation__CDateTime_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIReference_1___x_ABI_CWindows__CFoundation__CDateTime __x_ABI_C__FIReference_1___x_ABI_CWindows__CFoundation__CDateTime;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIReference_1___x_ABI_CWindows__CFoundation__CDateTime;

    typedef struct __x_ABI_C__FIReference_1___x_ABI_CWindows__CFoundation__CDateTimeVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIReference_1___x_ABI_CWindows__CFoundation__CDateTime* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIReference_1___x_ABI_CWindows__CFoundation__CDateTime* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIReference_1___x_ABI_CWindows__CFoundation__CDateTime* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIReference_1___x_ABI_CWindows__CFoundation__CDateTime* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIReference_1___x_ABI_CWindows__CFoundation__CDateTime* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIReference_1___x_ABI_CWindows__CFoundation__CDateTime* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Value)(__x_ABI_C__FIReference_1___x_ABI_CWindows__CFoundation__CDateTime* This,
        struct __x_ABI_CWindows_CFoundation_CDateTime* result);

        END_INTERFACE
    } __x_ABI_C__FIReference_1___x_ABI_CWindows__CFoundation__CDateTimeVtbl;

    interface __x_ABI_C__FIReference_1___x_ABI_CWindows__CFoundation__CDateTime
    {
        CONST_VTBL struct __x_ABI_C__FIReference_1___x_ABI_CWindows__CFoundation__CDateTimeVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIReference_1___x_ABI_CWindows__CFoundation__CDateTime_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIReference_1___x_ABI_CWindows__CWeb__CWebErrorStatus_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIReference_1___x_ABI_CWindows__CWeb__CWebErrorStatus_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIReference_1___x_ABI_CWindows__CWeb__CWebErrorStatus __x_ABI_C__FIReference_1___x_ABI_CWindows__CWeb__CWebErrorStatus;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIReference_1___x_ABI_CWindows__CWeb__CWebErrorStatus;

    typedef struct __x_ABI_C__FIReference_1___x_ABI_CWindows__CWeb__CWebErrorStatusVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIReference_1___x_ABI_CWindows__CWeb__CWebErrorStatus* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIReference_1___x_ABI_CWindows__CWeb__CWebErrorStatus* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIReference_1___x_ABI_CWindows__CWeb__CWebErrorStatus* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIReference_1___x_ABI_CWindows__CWeb__CWebErrorStatus* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIReference_1___x_ABI_CWindows__CWeb__CWebErrorStatus* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIReference_1___x_ABI_CWindows__CWeb__CWebErrorStatus* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Value)(__x_ABI_C__FIReference_1___x_ABI_CWindows__CWeb__CWebErrorStatus* This,
        enum __x_ABI_CWindows_CWeb_CWebErrorStatus* result);

        END_INTERFACE
    } __x_ABI_C__FIReference_1___x_ABI_CWindows__CWeb__CWebErrorStatusVtbl;

    interface __x_ABI_C__FIReference_1___x_ABI_CWindows__CWeb__CWebErrorStatus
    {
        CONST_VTBL struct __x_ABI_C__FIReference_1___x_ABI_CWindows__CWeb__CWebErrorStatusVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIReference_1___x_ABI_CWindows__CWeb__CWebErrorStatus_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CNetworking__CBackgroundTransfer__CDownloadOperation___x_ABI_CWindows__CNetworking__CBackgroundTransfer__CBackgroundTransferRangesDownloadedEventArgs_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CNetworking__CBackgroundTransfer__CDownloadOperation___x_ABI_CWindows__CNetworking__CBackgroundTransfer__CBackgroundTransferRangesDownloadedEventArgs_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CNetworking__CBackgroundTransfer__CDownloadOperation___x_ABI_CWindows__CNetworking__CBackgroundTransfer__CBackgroundTransferRangesDownloadedEventArgs __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CNetworking__CBackgroundTransfer__CDownloadOperation___x_ABI_CWindows__CNetworking__CBackgroundTransfer__CBackgroundTransferRangesDownloadedEventArgs;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CNetworking__CBackgroundTransfer__CDownloadOperation___x_ABI_CWindows__CNetworking__CBackgroundTransfer__CBackgroundTransferRangesDownloadedEventArgs;

    typedef struct __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CNetworking__CBackgroundTransfer__CDownloadOperation___x_ABI_CWindows__CNetworking__CBackgroundTransfer__CBackgroundTransferRangesDownloadedEventArgsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CNetworking__CBackgroundTransfer__CDownloadOperation___x_ABI_CWindows__CNetworking__CBackgroundTransfer__CBackgroundTransferRangesDownloadedEventArgs* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CNetworking__CBackgroundTransfer__CDownloadOperation___x_ABI_CWindows__CNetworking__CBackgroundTransfer__CBackgroundTransferRangesDownloadedEventArgs* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CNetworking__CBackgroundTransfer__CDownloadOperation___x_ABI_CWindows__CNetworking__CBackgroundTransfer__CBackgroundTransferRangesDownloadedEventArgs* This);
        HRESULT (STDMETHODCALLTYPE* Invoke)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CNetworking__CBackgroundTransfer__CDownloadOperation___x_ABI_CWindows__CNetworking__CBackgroundTransfer__CBackgroundTransferRangesDownloadedEventArgs* This,
        __x_ABI_CWindows_CNetworking_CBackgroundTransfer_CIDownloadOperation* sender,
        __x_ABI_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundTransferRangesDownloadedEventArgs* args);

        END_INTERFACE
    } __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CNetworking__CBackgroundTransfer__CDownloadOperation___x_ABI_CWindows__CNetworking__CBackgroundTransfer__CBackgroundTransferRangesDownloadedEventArgsVtbl;

    interface __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CNetworking__CBackgroundTransfer__CDownloadOperation___x_ABI_CWindows__CNetworking__CBackgroundTransfer__CBackgroundTransferRangesDownloadedEventArgs
    {
        CONST_VTBL struct __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CNetworking__CBackgroundTransfer__CDownloadOperation___x_ABI_CWindows__CNetworking__CBackgroundTransfer__CBackgroundTransferRangesDownloadedEventArgsVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CNetworking__CBackgroundTransfer__CDownloadOperation___x_ABI_CWindows__CNetworking__CBackgroundTransfer__CBackgroundTransferRangesDownloadedEventArgs_INTERFACE_DEFINED__
    
#ifndef ____x_ABI_CWindows_CApplicationModel_CBackground_CIBackgroundTrigger_FWD_DEFINED__
#define ____x_ABI_CWindows_CApplicationModel_CBackground_CIBackgroundTrigger_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CApplicationModel_CBackground_CIBackgroundTrigger __x_ABI_CWindows_CApplicationModel_CBackground_CIBackgroundTrigger;

#endif // ____x_ABI_CWindows_CApplicationModel_CBackground_CIBackgroundTrigger_FWD_DEFINED__

typedef enum __x_ABI_CWindows_CFoundation_CAsyncStatus __x_ABI_CWindows_CFoundation_CAsyncStatus;

#ifndef ____x_ABI_CWindows_CFoundation_CIDeferral_FWD_DEFINED__
#define ____x_ABI_CWindows_CFoundation_CIDeferral_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CFoundation_CIDeferral __x_ABI_CWindows_CFoundation_CIDeferral;

#endif // ____x_ABI_CWindows_CFoundation_CIDeferral_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CFoundation_CIAsyncInfo_FWD_DEFINED__
#define ____x_ABI_CWindows_CFoundation_CIAsyncInfo_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CFoundation_CIAsyncInfo __x_ABI_CWindows_CFoundation_CIAsyncInfo;

#endif // ____x_ABI_CWindows_CFoundation_CIAsyncInfo_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CFoundation_CIPropertyValue_FWD_DEFINED__
#define ____x_ABI_CWindows_CFoundation_CIPropertyValue_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CFoundation_CIPropertyValue __x_ABI_CWindows_CFoundation_CIPropertyValue;

#endif // ____x_ABI_CWindows_CFoundation_CIPropertyValue_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CSecurity_CCredentials_CIPasswordCredential_FWD_DEFINED__
#define ____x_ABI_CWindows_CSecurity_CCredentials_CIPasswordCredential_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CSecurity_CCredentials_CIPasswordCredential __x_ABI_CWindows_CSecurity_CCredentials_CIPasswordCredential;

#endif // ____x_ABI_CWindows_CSecurity_CCredentials_CIPasswordCredential_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CStorage_CIStorageFile_FWD_DEFINED__
#define ____x_ABI_CWindows_CStorage_CIStorageFile_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CStorage_CIStorageFile __x_ABI_CWindows_CStorage_CIStorageFile;

#endif // ____x_ABI_CWindows_CStorage_CIStorageFile_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CStorage_CStreams_CIInputStream_FWD_DEFINED__
#define ____x_ABI_CWindows_CStorage_CStreams_CIInputStream_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CStorage_CStreams_CIInputStream __x_ABI_CWindows_CStorage_CStreams_CIInputStream;

#endif // ____x_ABI_CWindows_CStorage_CStreams_CIInputStream_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CStorage_CStreams_CIRandomAccessStreamReference_FWD_DEFINED__
#define ____x_ABI_CWindows_CStorage_CStreams_CIRandomAccessStreamReference_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CStorage_CStreams_CIRandomAccessStreamReference __x_ABI_CWindows_CStorage_CStreams_CIRandomAccessStreamReference;

#endif // ____x_ABI_CWindows_CStorage_CStreams_CIRandomAccessStreamReference_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CNotifications_CITileNotification_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CNotifications_CITileNotification_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CNotifications_CITileNotification __x_ABI_CWindows_CUI_CNotifications_CITileNotification;

#endif // ____x_ABI_CWindows_CUI_CNotifications_CITileNotification_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CNotifications_CIToastNotification_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CNotifications_CIToastNotification_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CNotifications_CIToastNotification __x_ABI_CWindows_CUI_CNotifications_CIToastNotification;

#endif // ____x_ABI_CWindows_CUI_CNotifications_CIToastNotification_FWD_DEFINED__

typedef enum __x_ABI_CWindows_CNetworking_CBackgroundTransfer_CBackgroundTransferBehavior __x_ABI_CWindows_CNetworking_CBackgroundTransfer_CBackgroundTransferBehavior;

typedef enum __x_ABI_CWindows_CNetworking_CBackgroundTransfer_CBackgroundTransferCostPolicy __x_ABI_CWindows_CNetworking_CBackgroundTransfer_CBackgroundTransferCostPolicy;

typedef enum __x_ABI_CWindows_CNetworking_CBackgroundTransfer_CBackgroundTransferPriority __x_ABI_CWindows_CNetworking_CBackgroundTransfer_CBackgroundTransferPriority;

typedef enum __x_ABI_CWindows_CNetworking_CBackgroundTransfer_CBackgroundTransferStatus __x_ABI_CWindows_CNetworking_CBackgroundTransfer_CBackgroundTransferStatus;

typedef struct __x_ABI_CWindows_CNetworking_CBackgroundTransfer_CBackgroundDownloadProgress __x_ABI_CWindows_CNetworking_CBackgroundTransfer_CBackgroundDownloadProgress;

typedef struct __x_ABI_CWindows_CNetworking_CBackgroundTransfer_CBackgroundUploadProgress __x_ABI_CWindows_CNetworking_CBackgroundTransfer_CBackgroundUploadProgress;

enum __x_ABI_CWindows_CNetworking_CBackgroundTransfer_CBackgroundTransferBehavior
    {
        __x_ABI_CWindows_CNetworking_CBackgroundTransfer_CBackgroundTransferBehavior_Parallel = 0,
    __x_ABI_CWindows_CNetworking_CBackgroundTransfer_CBackgroundTransferBehavior_Serialized = 1,
};

enum __x_ABI_CWindows_CNetworking_CBackgroundTransfer_CBackgroundTransferCostPolicy
    {
        __x_ABI_CWindows_CNetworking_CBackgroundTransfer_CBackgroundTransferCostPolicy_Default = 0,
    __x_ABI_CWindows_CNetworking_CBackgroundTransfer_CBackgroundTransferCostPolicy_UnrestrictedOnly = 1,
    __x_ABI_CWindows_CNetworking_CBackgroundTransfer_CBackgroundTransferCostPolicy_Always = 2,
};

enum __x_ABI_CWindows_CNetworking_CBackgroundTransfer_CBackgroundTransferPriority
    {
        __x_ABI_CWindows_CNetworking_CBackgroundTransfer_CBackgroundTransferPriority_Default = 0,
    __x_ABI_CWindows_CNetworking_CBackgroundTransfer_CBackgroundTransferPriority_High = 1,
    __x_ABI_CWindows_CNetworking_CBackgroundTransfer_CBackgroundTransferPriority_Low = 2,
};

enum __x_ABI_CWindows_CNetworking_CBackgroundTransfer_CBackgroundTransferStatus
    {
        __x_ABI_CWindows_CNetworking_CBackgroundTransfer_CBackgroundTransferStatus_Idle = 0,
    __x_ABI_CWindows_CNetworking_CBackgroundTransfer_CBackgroundTransferStatus_Running = 1,
    __x_ABI_CWindows_CNetworking_CBackgroundTransfer_CBackgroundTransferStatus_PausedByApplication = 2,
    __x_ABI_CWindows_CNetworking_CBackgroundTransfer_CBackgroundTransferStatus_PausedCostedNetwork = 3,
    __x_ABI_CWindows_CNetworking_CBackgroundTransfer_CBackgroundTransferStatus_PausedNoNetwork = 4,
    __x_ABI_CWindows_CNetworking_CBackgroundTransfer_CBackgroundTransferStatus_Completed = 5,
    __x_ABI_CWindows_CNetworking_CBackgroundTransfer_CBackgroundTransferStatus_Canceled = 6,
    __x_ABI_CWindows_CNetworking_CBackgroundTransfer_CBackgroundTransferStatus_Error = 7,
    __x_ABI_CWindows_CNetworking_CBackgroundTransfer_CBackgroundTransferStatus_PausedRecoverableWebErrorStatus = 8,
    __x_ABI_CWindows_CNetworking_CBackgroundTransfer_CBackgroundTransferStatus_PausedSystemPolicy = 32,
};

struct __x_ABI_CWindows_CNetworking_CBackgroundTransfer_CBackgroundDownloadProgress
    {
        UINT64 BytesReceived;
    UINT64 TotalBytesToReceive;
    enum __x_ABI_CWindows_CNetworking_CBackgroundTransfer_CBackgroundTransferStatus Status;
    boolean HasResponseChanged;
    boolean HasRestarted;
};

struct __x_ABI_CWindows_CNetworking_CBackgroundTransfer_CBackgroundTransferFileRange
    {
        UINT64 Offset;
    UINT64 Length;
};

struct __x_ABI_CWindows_CNetworking_CBackgroundTransfer_CBackgroundUploadProgress
    {
        UINT64 BytesReceived;
    UINT64 BytesSent;
    UINT64 TotalBytesToReceive;
    UINT64 TotalBytesToSend;
    enum __x_ABI_CWindows_CNetworking_CBackgroundTransfer_CBackgroundTransferStatus Status;
    boolean HasResponseChanged;
    boolean HasRestarted;
};

#if !defined(____x_ABI_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundDownloader_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundDownloader_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundDownloaderVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundDownloader* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundDownloader* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundDownloader* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundDownloader* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundDownloader* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundDownloader* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* CreateDownload)(__x_ABI_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundDownloader* This,
        __x_ABI_CWindows_CFoundation_CIUriRuntimeClass* uri,
        __x_ABI_CWindows_CStorage_CIStorageFile* resultFile,
        __x_ABI_CWindows_CNetworking_CBackgroundTransfer_CIDownloadOperation** operation);
    HRESULT (STDMETHODCALLTYPE* CreateDownloadFromFile)(__x_ABI_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundDownloader* This,
        __x_ABI_CWindows_CFoundation_CIUriRuntimeClass* uri,
        __x_ABI_CWindows_CStorage_CIStorageFile* resultFile,
        __x_ABI_CWindows_CStorage_CIStorageFile* requestBodyFile,
        __x_ABI_CWindows_CNetworking_CBackgroundTransfer_CIDownloadOperation** operation);
    HRESULT (STDMETHODCALLTYPE* CreateDownloadAsync)(__x_ABI_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundDownloader* This,
        __x_ABI_CWindows_CFoundation_CIUriRuntimeClass* uri,
        __x_ABI_CWindows_CStorage_CIStorageFile* resultFile,
        __x_ABI_CWindows_CStorage_CStreams_CIInputStream* requestBodyStream,
        __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CNetworking__CBackgroundTransfer__CDownloadOperation** operation);

        END_INTERFACE
    } __x_ABI_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundDownloaderVtbl;

    interface __x_ABI_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundDownloader
    {
        CONST_VTBL struct __x_ABI_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundDownloaderVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundDownloader;
#endif /* !defined(____x_ABI_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundDownloader_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundDownloader2_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundDownloader2_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundDownloader2Vtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundDownloader2* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundDownloader2* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundDownloader2* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundDownloader2* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundDownloader2* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundDownloader2* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_TransferGroup)(__x_ABI_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundDownloader2* This,
        __x_ABI_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundTransferGroup** value);
    HRESULT (STDMETHODCALLTYPE* put_TransferGroup)(__x_ABI_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundDownloader2* This,
        __x_ABI_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundTransferGroup* value);
    HRESULT (STDMETHODCALLTYPE* get_SuccessToastNotification)(__x_ABI_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundDownloader2* This,
        __x_ABI_CWindows_CUI_CNotifications_CIToastNotification** value);
    HRESULT (STDMETHODCALLTYPE* put_SuccessToastNotification)(__x_ABI_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundDownloader2* This,
        __x_ABI_CWindows_CUI_CNotifications_CIToastNotification* value);
    HRESULT (STDMETHODCALLTYPE* get_FailureToastNotification)(__x_ABI_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundDownloader2* This,
        __x_ABI_CWindows_CUI_CNotifications_CIToastNotification** value);
    HRESULT (STDMETHODCALLTYPE* put_FailureToastNotification)(__x_ABI_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundDownloader2* This,
        __x_ABI_CWindows_CUI_CNotifications_CIToastNotification* value);
    HRESULT (STDMETHODCALLTYPE* get_SuccessTileNotification)(__x_ABI_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundDownloader2* This,
        __x_ABI_CWindows_CUI_CNotifications_CITileNotification** value);
    HRESULT (STDMETHODCALLTYPE* put_SuccessTileNotification)(__x_ABI_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundDownloader2* This,
        __x_ABI_CWindows_CUI_CNotifications_CITileNotification* value);
    HRESULT (STDMETHODCALLTYPE* get_FailureTileNotification)(__x_ABI_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundDownloader2* This,
        __x_ABI_CWindows_CUI_CNotifications_CITileNotification** value);
    HRESULT (STDMETHODCALLTYPE* put_FailureTileNotification)(__x_ABI_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundDownloader2* This,
        __x_ABI_CWindows_CUI_CNotifications_CITileNotification* value);

        END_INTERFACE
    } __x_ABI_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundDownloader2Vtbl;

    interface __x_ABI_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundDownloader2
    {
        CONST_VTBL struct __x_ABI_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundDownloader2Vtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundDownloader2;
#endif /* !defined(____x_ABI_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundDownloader2_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundDownloader3_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundDownloader3_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundDownloader3Vtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundDownloader3* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundDownloader3* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundDownloader3* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundDownloader3* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundDownloader3* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundDownloader3* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_CompletionGroup)(__x_ABI_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundDownloader3* This,
        __x_ABI_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundTransferCompletionGroup** value);

        END_INTERFACE
    } __x_ABI_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundDownloader3Vtbl;

    interface __x_ABI_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundDownloader3
    {
        CONST_VTBL struct __x_ABI_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundDownloader3Vtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundDownloader3;
#endif /* !defined(____x_ABI_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundDownloader3_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundDownloaderFactory_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundDownloaderFactory_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundDownloaderFactoryVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundDownloaderFactory* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundDownloaderFactory* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundDownloaderFactory* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundDownloaderFactory* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundDownloaderFactory* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundDownloaderFactory* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* CreateWithCompletionGroup)(__x_ABI_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundDownloaderFactory* This,
        __x_ABI_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundTransferCompletionGroup* completionGroup,
        __x_ABI_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundDownloader** backgroundDownloader);

        END_INTERFACE
    } __x_ABI_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundDownloaderFactoryVtbl;

    interface __x_ABI_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundDownloaderFactory
    {
        CONST_VTBL struct __x_ABI_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundDownloaderFactoryVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundDownloaderFactory;
#endif /* !defined(____x_ABI_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundDownloaderFactory_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundDownloaderStaticMethods_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundDownloaderStaticMethods_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundDownloaderStaticMethodsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundDownloaderStaticMethods* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundDownloaderStaticMethods* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundDownloaderStaticMethods* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundDownloaderStaticMethods* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundDownloaderStaticMethods* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundDownloaderStaticMethods* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* GetCurrentDownloadsAsync)(__x_ABI_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundDownloaderStaticMethods* This,
        __x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CNetworking__CBackgroundTransfer__CDownloadOperation** operation);
    HRESULT (STDMETHODCALLTYPE* GetCurrentDownloadsForGroupAsync)(__x_ABI_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundDownloaderStaticMethods* This,
        HSTRING group,
        __x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CNetworking__CBackgroundTransfer__CDownloadOperation** operation);

        END_INTERFACE
    } __x_ABI_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundDownloaderStaticMethodsVtbl;

    interface __x_ABI_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundDownloaderStaticMethods
    {
        CONST_VTBL struct __x_ABI_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundDownloaderStaticMethodsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundDownloaderStaticMethods;
#endif /* !defined(____x_ABI_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundDownloaderStaticMethods_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundDownloaderStaticMethods2_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundDownloaderStaticMethods2_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundDownloaderStaticMethods2Vtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundDownloaderStaticMethods2* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundDownloaderStaticMethods2* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundDownloaderStaticMethods2* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundDownloaderStaticMethods2* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundDownloaderStaticMethods2* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundDownloaderStaticMethods2* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* GetCurrentDownloadsForTransferGroupAsync)(__x_ABI_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundDownloaderStaticMethods2* This,
        __x_ABI_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundTransferGroup* group,
        __x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CNetworking__CBackgroundTransfer__CDownloadOperation** operation);

        END_INTERFACE
    } __x_ABI_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundDownloaderStaticMethods2Vtbl;

    interface __x_ABI_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundDownloaderStaticMethods2
    {
        CONST_VTBL struct __x_ABI_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundDownloaderStaticMethods2Vtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundDownloaderStaticMethods2;
#endif /* !defined(____x_ABI_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundDownloaderStaticMethods2_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundDownloaderUserConsent_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundDownloaderUserConsent_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundDownloaderUserConsentVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundDownloaderUserConsent* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundDownloaderUserConsent* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundDownloaderUserConsent* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundDownloaderUserConsent* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundDownloaderUserConsent* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundDownloaderUserConsent* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* RequestUnconstrainedDownloadsAsync)(__x_ABI_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundDownloaderUserConsent* This,
        __x_ABI_C__FIIterable_1___x_ABI_CWindows__CNetworking__CBackgroundTransfer__CDownloadOperation* operations,
        __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CNetworking__CBackgroundTransfer__CUnconstrainedTransferRequestResult** operation);

        END_INTERFACE
    } __x_ABI_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundDownloaderUserConsentVtbl;

    interface __x_ABI_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundDownloaderUserConsent
    {
        CONST_VTBL struct __x_ABI_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundDownloaderUserConsentVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundDownloaderUserConsent;
#endif /* !defined(____x_ABI_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundDownloaderUserConsent_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundTransferBase_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundTransferBase_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundTransferBaseVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundTransferBase* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundTransferBase* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundTransferBase* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundTransferBase* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundTransferBase* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundTransferBase* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* SetRequestHeader)(__x_ABI_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundTransferBase* This,
        HSTRING headerName,
        HSTRING headerValue);
    HRESULT (STDMETHODCALLTYPE* get_ServerCredential)(__x_ABI_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundTransferBase* This,
        __x_ABI_CWindows_CSecurity_CCredentials_CIPasswordCredential** credential);
    HRESULT (STDMETHODCALLTYPE* put_ServerCredential)(__x_ABI_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundTransferBase* This,
        __x_ABI_CWindows_CSecurity_CCredentials_CIPasswordCredential* credential);
    HRESULT (STDMETHODCALLTYPE* get_ProxyCredential)(__x_ABI_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundTransferBase* This,
        __x_ABI_CWindows_CSecurity_CCredentials_CIPasswordCredential** credential);
    HRESULT (STDMETHODCALLTYPE* put_ProxyCredential)(__x_ABI_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundTransferBase* This,
        __x_ABI_CWindows_CSecurity_CCredentials_CIPasswordCredential* credential);
    HRESULT (STDMETHODCALLTYPE* get_Method)(__x_ABI_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundTransferBase* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* put_Method)(__x_ABI_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundTransferBase* This,
        HSTRING value);
    HRESULT (STDMETHODCALLTYPE* get_Group)(__x_ABI_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundTransferBase* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* put_Group)(__x_ABI_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundTransferBase* This,
        HSTRING value);
    HRESULT (STDMETHODCALLTYPE* get_CostPolicy)(__x_ABI_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundTransferBase* This,
        enum __x_ABI_CWindows_CNetworking_CBackgroundTransfer_CBackgroundTransferCostPolicy* value);
    HRESULT (STDMETHODCALLTYPE* put_CostPolicy)(__x_ABI_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundTransferBase* This,
        enum __x_ABI_CWindows_CNetworking_CBackgroundTransfer_CBackgroundTransferCostPolicy value);

        END_INTERFACE
    } __x_ABI_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundTransferBaseVtbl;

    interface __x_ABI_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundTransferBase
    {
        CONST_VTBL struct __x_ABI_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundTransferBaseVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundTransferBase;
#endif /* !defined(____x_ABI_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundTransferBase_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundTransferCompletionGroup_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundTransferCompletionGroup_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundTransferCompletionGroupVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundTransferCompletionGroup* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundTransferCompletionGroup* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundTransferCompletionGroup* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundTransferCompletionGroup* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundTransferCompletionGroup* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundTransferCompletionGroup* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Trigger)(__x_ABI_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundTransferCompletionGroup* This,
        __x_ABI_CWindows_CApplicationModel_CBackground_CIBackgroundTrigger** value);
    HRESULT (STDMETHODCALLTYPE* get_IsEnabled)(__x_ABI_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundTransferCompletionGroup* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* Enable)(__x_ABI_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundTransferCompletionGroup* This);

        END_INTERFACE
    } __x_ABI_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundTransferCompletionGroupVtbl;

    interface __x_ABI_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundTransferCompletionGroup
    {
        CONST_VTBL struct __x_ABI_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundTransferCompletionGroupVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundTransferCompletionGroup;
#endif /* !defined(____x_ABI_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundTransferCompletionGroup_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundTransferCompletionGroupTriggerDetails_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundTransferCompletionGroupTriggerDetails_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundTransferCompletionGroupTriggerDetailsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundTransferCompletionGroupTriggerDetails* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundTransferCompletionGroupTriggerDetails* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundTransferCompletionGroupTriggerDetails* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundTransferCompletionGroupTriggerDetails* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundTransferCompletionGroupTriggerDetails* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundTransferCompletionGroupTriggerDetails* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Downloads)(__x_ABI_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundTransferCompletionGroupTriggerDetails* This,
        __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CNetworking__CBackgroundTransfer__CDownloadOperation** value);
    HRESULT (STDMETHODCALLTYPE* get_Uploads)(__x_ABI_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundTransferCompletionGroupTriggerDetails* This,
        __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CNetworking__CBackgroundTransfer__CUploadOperation** value);

        END_INTERFACE
    } __x_ABI_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundTransferCompletionGroupTriggerDetailsVtbl;

    interface __x_ABI_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundTransferCompletionGroupTriggerDetails
    {
        CONST_VTBL struct __x_ABI_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundTransferCompletionGroupTriggerDetailsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundTransferCompletionGroupTriggerDetails;
#endif /* !defined(____x_ABI_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundTransferCompletionGroupTriggerDetails_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundTransferContentPart_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundTransferContentPart_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundTransferContentPartVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundTransferContentPart* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundTransferContentPart* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundTransferContentPart* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundTransferContentPart* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundTransferContentPart* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundTransferContentPart* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* SetHeader)(__x_ABI_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundTransferContentPart* This,
        HSTRING headerName,
        HSTRING headerValue);
    HRESULT (STDMETHODCALLTYPE* SetText)(__x_ABI_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundTransferContentPart* This,
        HSTRING value);
    HRESULT (STDMETHODCALLTYPE* SetFile)(__x_ABI_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundTransferContentPart* This,
        __x_ABI_CWindows_CStorage_CIStorageFile* value);

        END_INTERFACE
    } __x_ABI_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundTransferContentPartVtbl;

    interface __x_ABI_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundTransferContentPart
    {
        CONST_VTBL struct __x_ABI_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundTransferContentPartVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundTransferContentPart;
#endif /* !defined(____x_ABI_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundTransferContentPart_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundTransferContentPartFactory_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundTransferContentPartFactory_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundTransferContentPartFactoryVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundTransferContentPartFactory* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundTransferContentPartFactory* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundTransferContentPartFactory* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundTransferContentPartFactory* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundTransferContentPartFactory* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundTransferContentPartFactory* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* CreateWithName)(__x_ABI_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundTransferContentPartFactory* This,
        HSTRING name,
        __x_ABI_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundTransferContentPart** value);
    HRESULT (STDMETHODCALLTYPE* CreateWithNameAndFileName)(__x_ABI_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundTransferContentPartFactory* This,
        HSTRING name,
        HSTRING fileName,
        __x_ABI_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundTransferContentPart** value);

        END_INTERFACE
    } __x_ABI_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundTransferContentPartFactoryVtbl;

    interface __x_ABI_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundTransferContentPartFactory
    {
        CONST_VTBL struct __x_ABI_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundTransferContentPartFactoryVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundTransferContentPartFactory;
#endif /* !defined(____x_ABI_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundTransferContentPartFactory_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundTransferErrorStaticMethods_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundTransferErrorStaticMethods_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundTransferErrorStaticMethodsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundTransferErrorStaticMethods* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundTransferErrorStaticMethods* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundTransferErrorStaticMethods* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundTransferErrorStaticMethods* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundTransferErrorStaticMethods* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundTransferErrorStaticMethods* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* GetStatus)(__x_ABI_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundTransferErrorStaticMethods* This,
        INT32 hresult,
        enum __x_ABI_CWindows_CWeb_CWebErrorStatus* status);

        END_INTERFACE
    } __x_ABI_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundTransferErrorStaticMethodsVtbl;

    interface __x_ABI_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundTransferErrorStaticMethods
    {
        CONST_VTBL struct __x_ABI_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundTransferErrorStaticMethodsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundTransferErrorStaticMethods;
#endif /* !defined(____x_ABI_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundTransferErrorStaticMethods_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundTransferGroup_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundTransferGroup_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundTransferGroupVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundTransferGroup* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundTransferGroup* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundTransferGroup* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundTransferGroup* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundTransferGroup* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundTransferGroup* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Name)(__x_ABI_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundTransferGroup* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* get_TransferBehavior)(__x_ABI_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundTransferGroup* This,
        enum __x_ABI_CWindows_CNetworking_CBackgroundTransfer_CBackgroundTransferBehavior* value);
    HRESULT (STDMETHODCALLTYPE* put_TransferBehavior)(__x_ABI_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundTransferGroup* This,
        enum __x_ABI_CWindows_CNetworking_CBackgroundTransfer_CBackgroundTransferBehavior value);

        END_INTERFACE
    } __x_ABI_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundTransferGroupVtbl;

    interface __x_ABI_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundTransferGroup
    {
        CONST_VTBL struct __x_ABI_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundTransferGroupVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundTransferGroup;
#endif /* !defined(____x_ABI_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundTransferGroup_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundTransferGroupStatics_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundTransferGroupStatics_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundTransferGroupStaticsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundTransferGroupStatics* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundTransferGroupStatics* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundTransferGroupStatics* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundTransferGroupStatics* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundTransferGroupStatics* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundTransferGroupStatics* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* CreateGroup)(__x_ABI_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundTransferGroupStatics* This,
        HSTRING name,
        __x_ABI_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundTransferGroup** value);

        END_INTERFACE
    } __x_ABI_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundTransferGroupStaticsVtbl;

    interface __x_ABI_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundTransferGroupStatics
    {
        CONST_VTBL struct __x_ABI_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundTransferGroupStaticsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundTransferGroupStatics;
#endif /* !defined(____x_ABI_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundTransferGroupStatics_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundTransferOperation_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundTransferOperation_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundTransferOperationVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundTransferOperation* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundTransferOperation* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundTransferOperation* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundTransferOperation* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundTransferOperation* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundTransferOperation* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Guid)(__x_ABI_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundTransferOperation* This,
        GUID* value);
    HRESULT (STDMETHODCALLTYPE* get_RequestedUri)(__x_ABI_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundTransferOperation* This,
        __x_ABI_CWindows_CFoundation_CIUriRuntimeClass** value);
    HRESULT (STDMETHODCALLTYPE* get_Method)(__x_ABI_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundTransferOperation* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* get_Group)(__x_ABI_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundTransferOperation* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* get_CostPolicy)(__x_ABI_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundTransferOperation* This,
        enum __x_ABI_CWindows_CNetworking_CBackgroundTransfer_CBackgroundTransferCostPolicy* value);
    HRESULT (STDMETHODCALLTYPE* put_CostPolicy)(__x_ABI_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundTransferOperation* This,
        enum __x_ABI_CWindows_CNetworking_CBackgroundTransfer_CBackgroundTransferCostPolicy value);
    HRESULT (STDMETHODCALLTYPE* GetResultStreamAt)(__x_ABI_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundTransferOperation* This,
        UINT64 position,
        __x_ABI_CWindows_CStorage_CStreams_CIInputStream** value);
    HRESULT (STDMETHODCALLTYPE* GetResponseInformation)(__x_ABI_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundTransferOperation* This,
        __x_ABI_CWindows_CNetworking_CBackgroundTransfer_CIResponseInformation** value);

        END_INTERFACE
    } __x_ABI_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundTransferOperationVtbl;

    interface __x_ABI_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundTransferOperation
    {
        CONST_VTBL struct __x_ABI_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundTransferOperationVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundTransferOperation;
#endif /* !defined(____x_ABI_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundTransferOperation_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundTransferOperationPriority_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundTransferOperationPriority_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundTransferOperationPriorityVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundTransferOperationPriority* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundTransferOperationPriority* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundTransferOperationPriority* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundTransferOperationPriority* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundTransferOperationPriority* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundTransferOperationPriority* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Priority)(__x_ABI_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundTransferOperationPriority* This,
        enum __x_ABI_CWindows_CNetworking_CBackgroundTransfer_CBackgroundTransferPriority* value);
    HRESULT (STDMETHODCALLTYPE* put_Priority)(__x_ABI_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundTransferOperationPriority* This,
        enum __x_ABI_CWindows_CNetworking_CBackgroundTransfer_CBackgroundTransferPriority value);

        END_INTERFACE
    } __x_ABI_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundTransferOperationPriorityVtbl;

    interface __x_ABI_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundTransferOperationPriority
    {
        CONST_VTBL struct __x_ABI_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundTransferOperationPriorityVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundTransferOperationPriority;
#endif /* !defined(____x_ABI_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundTransferOperationPriority_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundTransferRangesDownloadedEventArgs_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundTransferRangesDownloadedEventArgs_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundTransferRangesDownloadedEventArgsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundTransferRangesDownloadedEventArgs* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundTransferRangesDownloadedEventArgs* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundTransferRangesDownloadedEventArgs* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundTransferRangesDownloadedEventArgs* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundTransferRangesDownloadedEventArgs* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundTransferRangesDownloadedEventArgs* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_WasDownloadRestarted)(__x_ABI_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundTransferRangesDownloadedEventArgs* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* get_AddedRanges)(__x_ABI_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundTransferRangesDownloadedEventArgs* This,
        __x_ABI_C__FIVector_1___x_ABI_CWindows__CNetworking__CBackgroundTransfer__CBackgroundTransferFileRange** value);
    HRESULT (STDMETHODCALLTYPE* GetDeferral)(__x_ABI_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundTransferRangesDownloadedEventArgs* This,
        __x_ABI_CWindows_CFoundation_CIDeferral** result);

        END_INTERFACE
    } __x_ABI_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundTransferRangesDownloadedEventArgsVtbl;

    interface __x_ABI_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundTransferRangesDownloadedEventArgs
    {
        CONST_VTBL struct __x_ABI_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundTransferRangesDownloadedEventArgsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundTransferRangesDownloadedEventArgs;
#endif /* !defined(____x_ABI_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundTransferRangesDownloadedEventArgs_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundUploader_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundUploader_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundUploaderVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundUploader* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundUploader* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundUploader* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundUploader* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundUploader* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundUploader* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* CreateUpload)(__x_ABI_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundUploader* This,
        __x_ABI_CWindows_CFoundation_CIUriRuntimeClass* uri,
        __x_ABI_CWindows_CStorage_CIStorageFile* sourceFile,
        __x_ABI_CWindows_CNetworking_CBackgroundTransfer_CIUploadOperation** operation);
    HRESULT (STDMETHODCALLTYPE* CreateUploadFromStreamAsync)(__x_ABI_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundUploader* This,
        __x_ABI_CWindows_CFoundation_CIUriRuntimeClass* uri,
        __x_ABI_CWindows_CStorage_CStreams_CIInputStream* sourceStream,
        __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CNetworking__CBackgroundTransfer__CUploadOperation** operation);
    HRESULT (STDMETHODCALLTYPE* CreateUploadWithFormDataAndAutoBoundaryAsync)(__x_ABI_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundUploader* This,
        __x_ABI_CWindows_CFoundation_CIUriRuntimeClass* uri,
        __x_ABI_C__FIIterable_1___x_ABI_CWindows__CNetworking__CBackgroundTransfer__CBackgroundTransferContentPart* parts,
        __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CNetworking__CBackgroundTransfer__CUploadOperation** operation);
    HRESULT (STDMETHODCALLTYPE* CreateUploadWithSubTypeAsync)(__x_ABI_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundUploader* This,
        __x_ABI_CWindows_CFoundation_CIUriRuntimeClass* uri,
        __x_ABI_C__FIIterable_1___x_ABI_CWindows__CNetworking__CBackgroundTransfer__CBackgroundTransferContentPart* parts,
        HSTRING subType,
        __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CNetworking__CBackgroundTransfer__CUploadOperation** operation);
    HRESULT (STDMETHODCALLTYPE* CreateUploadWithSubTypeAndBoundaryAsync)(__x_ABI_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundUploader* This,
        __x_ABI_CWindows_CFoundation_CIUriRuntimeClass* uri,
        __x_ABI_C__FIIterable_1___x_ABI_CWindows__CNetworking__CBackgroundTransfer__CBackgroundTransferContentPart* parts,
        HSTRING subType,
        HSTRING boundary,
        __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CNetworking__CBackgroundTransfer__CUploadOperation** operation);

        END_INTERFACE
    } __x_ABI_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundUploaderVtbl;

    interface __x_ABI_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundUploader
    {
        CONST_VTBL struct __x_ABI_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundUploaderVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundUploader;
#endif /* !defined(____x_ABI_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundUploader_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundUploader2_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundUploader2_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundUploader2Vtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundUploader2* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundUploader2* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundUploader2* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundUploader2* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundUploader2* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundUploader2* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_TransferGroup)(__x_ABI_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundUploader2* This,
        __x_ABI_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundTransferGroup** value);
    HRESULT (STDMETHODCALLTYPE* put_TransferGroup)(__x_ABI_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundUploader2* This,
        __x_ABI_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundTransferGroup* value);
    HRESULT (STDMETHODCALLTYPE* get_SuccessToastNotification)(__x_ABI_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundUploader2* This,
        __x_ABI_CWindows_CUI_CNotifications_CIToastNotification** value);
    HRESULT (STDMETHODCALLTYPE* put_SuccessToastNotification)(__x_ABI_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundUploader2* This,
        __x_ABI_CWindows_CUI_CNotifications_CIToastNotification* value);
    HRESULT (STDMETHODCALLTYPE* get_FailureToastNotification)(__x_ABI_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundUploader2* This,
        __x_ABI_CWindows_CUI_CNotifications_CIToastNotification** value);
    HRESULT (STDMETHODCALLTYPE* put_FailureToastNotification)(__x_ABI_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundUploader2* This,
        __x_ABI_CWindows_CUI_CNotifications_CIToastNotification* value);
    HRESULT (STDMETHODCALLTYPE* get_SuccessTileNotification)(__x_ABI_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundUploader2* This,
        __x_ABI_CWindows_CUI_CNotifications_CITileNotification** value);
    HRESULT (STDMETHODCALLTYPE* put_SuccessTileNotification)(__x_ABI_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundUploader2* This,
        __x_ABI_CWindows_CUI_CNotifications_CITileNotification* value);
    HRESULT (STDMETHODCALLTYPE* get_FailureTileNotification)(__x_ABI_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundUploader2* This,
        __x_ABI_CWindows_CUI_CNotifications_CITileNotification** value);
    HRESULT (STDMETHODCALLTYPE* put_FailureTileNotification)(__x_ABI_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundUploader2* This,
        __x_ABI_CWindows_CUI_CNotifications_CITileNotification* value);

        END_INTERFACE
    } __x_ABI_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundUploader2Vtbl;

    interface __x_ABI_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundUploader2
    {
        CONST_VTBL struct __x_ABI_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundUploader2Vtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundUploader2;
#endif /* !defined(____x_ABI_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundUploader2_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundUploader3_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundUploader3_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundUploader3Vtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundUploader3* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundUploader3* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundUploader3* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundUploader3* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundUploader3* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundUploader3* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_CompletionGroup)(__x_ABI_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundUploader3* This,
        __x_ABI_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundTransferCompletionGroup** value);

        END_INTERFACE
    } __x_ABI_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundUploader3Vtbl;

    interface __x_ABI_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundUploader3
    {
        CONST_VTBL struct __x_ABI_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundUploader3Vtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundUploader3;
#endif /* !defined(____x_ABI_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundUploader3_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundUploaderFactory_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundUploaderFactory_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundUploaderFactoryVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundUploaderFactory* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundUploaderFactory* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundUploaderFactory* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundUploaderFactory* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundUploaderFactory* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundUploaderFactory* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* CreateWithCompletionGroup)(__x_ABI_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundUploaderFactory* This,
        __x_ABI_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundTransferCompletionGroup* completionGroup,
        __x_ABI_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundUploader** backgroundUploader);

        END_INTERFACE
    } __x_ABI_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundUploaderFactoryVtbl;

    interface __x_ABI_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundUploaderFactory
    {
        CONST_VTBL struct __x_ABI_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundUploaderFactoryVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundUploaderFactory;
#endif /* !defined(____x_ABI_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundUploaderFactory_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundUploaderStaticMethods_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundUploaderStaticMethods_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundUploaderStaticMethodsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundUploaderStaticMethods* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundUploaderStaticMethods* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundUploaderStaticMethods* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundUploaderStaticMethods* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundUploaderStaticMethods* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundUploaderStaticMethods* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* GetCurrentUploadsAsync)(__x_ABI_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundUploaderStaticMethods* This,
        __x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CNetworking__CBackgroundTransfer__CUploadOperation** operation);
    HRESULT (STDMETHODCALLTYPE* GetCurrentUploadsForGroupAsync)(__x_ABI_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundUploaderStaticMethods* This,
        HSTRING group,
        __x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CNetworking__CBackgroundTransfer__CUploadOperation** operation);

        END_INTERFACE
    } __x_ABI_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundUploaderStaticMethodsVtbl;

    interface __x_ABI_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundUploaderStaticMethods
    {
        CONST_VTBL struct __x_ABI_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundUploaderStaticMethodsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundUploaderStaticMethods;
#endif /* !defined(____x_ABI_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundUploaderStaticMethods_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundUploaderStaticMethods2_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundUploaderStaticMethods2_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundUploaderStaticMethods2Vtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundUploaderStaticMethods2* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundUploaderStaticMethods2* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundUploaderStaticMethods2* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundUploaderStaticMethods2* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundUploaderStaticMethods2* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundUploaderStaticMethods2* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* GetCurrentUploadsForTransferGroupAsync)(__x_ABI_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundUploaderStaticMethods2* This,
        __x_ABI_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundTransferGroup* group,
        __x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CNetworking__CBackgroundTransfer__CUploadOperation** operation);

        END_INTERFACE
    } __x_ABI_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundUploaderStaticMethods2Vtbl;

    interface __x_ABI_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundUploaderStaticMethods2
    {
        CONST_VTBL struct __x_ABI_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundUploaderStaticMethods2Vtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundUploaderStaticMethods2;
#endif /* !defined(____x_ABI_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundUploaderStaticMethods2_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundUploaderUserConsent_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundUploaderUserConsent_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundUploaderUserConsentVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundUploaderUserConsent* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundUploaderUserConsent* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundUploaderUserConsent* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundUploaderUserConsent* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundUploaderUserConsent* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundUploaderUserConsent* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* RequestUnconstrainedUploadsAsync)(__x_ABI_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundUploaderUserConsent* This,
        __x_ABI_C__FIIterable_1___x_ABI_CWindows__CNetworking__CBackgroundTransfer__CUploadOperation* operations,
        __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CNetworking__CBackgroundTransfer__CUnconstrainedTransferRequestResult** operation);

        END_INTERFACE
    } __x_ABI_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundUploaderUserConsentVtbl;

    interface __x_ABI_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundUploaderUserConsent
    {
        CONST_VTBL struct __x_ABI_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundUploaderUserConsentVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundUploaderUserConsent;
#endif /* !defined(____x_ABI_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundUploaderUserConsent_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CNetworking_CBackgroundTransfer_CIContentPrefetcher_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CNetworking_CBackgroundTransfer_CIContentPrefetcher_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CNetworking_CBackgroundTransfer_CIContentPrefetcherVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CNetworking_CBackgroundTransfer_CIContentPrefetcher* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CNetworking_CBackgroundTransfer_CIContentPrefetcher* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CNetworking_CBackgroundTransfer_CIContentPrefetcher* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CNetworking_CBackgroundTransfer_CIContentPrefetcher* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CNetworking_CBackgroundTransfer_CIContentPrefetcher* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CNetworking_CBackgroundTransfer_CIContentPrefetcher* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_ContentUris)(__x_ABI_CWindows_CNetworking_CBackgroundTransfer_CIContentPrefetcher* This,
        __x_ABI_C__FIVector_1___x_ABI_CWindows__CFoundation__CUri** value);
    HRESULT (STDMETHODCALLTYPE* put_IndirectContentUri)(__x_ABI_CWindows_CNetworking_CBackgroundTransfer_CIContentPrefetcher* This,
        __x_ABI_CWindows_CFoundation_CIUriRuntimeClass* value);
    HRESULT (STDMETHODCALLTYPE* get_IndirectContentUri)(__x_ABI_CWindows_CNetworking_CBackgroundTransfer_CIContentPrefetcher* This,
        __x_ABI_CWindows_CFoundation_CIUriRuntimeClass** value);

        END_INTERFACE
    } __x_ABI_CWindows_CNetworking_CBackgroundTransfer_CIContentPrefetcherVtbl;

    interface __x_ABI_CWindows_CNetworking_CBackgroundTransfer_CIContentPrefetcher
    {
        CONST_VTBL struct __x_ABI_CWindows_CNetworking_CBackgroundTransfer_CIContentPrefetcherVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CNetworking_CBackgroundTransfer_CIContentPrefetcher;
#endif /* !defined(____x_ABI_CWindows_CNetworking_CBackgroundTransfer_CIContentPrefetcher_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CNetworking_CBackgroundTransfer_CIContentPrefetcherTime_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CNetworking_CBackgroundTransfer_CIContentPrefetcherTime_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CNetworking_CBackgroundTransfer_CIContentPrefetcherTimeVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CNetworking_CBackgroundTransfer_CIContentPrefetcherTime* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CNetworking_CBackgroundTransfer_CIContentPrefetcherTime* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CNetworking_CBackgroundTransfer_CIContentPrefetcherTime* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CNetworking_CBackgroundTransfer_CIContentPrefetcherTime* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CNetworking_CBackgroundTransfer_CIContentPrefetcherTime* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CNetworking_CBackgroundTransfer_CIContentPrefetcherTime* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_LastSuccessfulPrefetchTime)(__x_ABI_CWindows_CNetworking_CBackgroundTransfer_CIContentPrefetcherTime* This,
        __x_ABI_C__FIReference_1___x_ABI_CWindows__CFoundation__CDateTime** value);

        END_INTERFACE
    } __x_ABI_CWindows_CNetworking_CBackgroundTransfer_CIContentPrefetcherTimeVtbl;

    interface __x_ABI_CWindows_CNetworking_CBackgroundTransfer_CIContentPrefetcherTime
    {
        CONST_VTBL struct __x_ABI_CWindows_CNetworking_CBackgroundTransfer_CIContentPrefetcherTimeVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CNetworking_CBackgroundTransfer_CIContentPrefetcherTime;
#endif /* !defined(____x_ABI_CWindows_CNetworking_CBackgroundTransfer_CIContentPrefetcherTime_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CNetworking_CBackgroundTransfer_CIDownloadOperation_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CNetworking_CBackgroundTransfer_CIDownloadOperation_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CNetworking_CBackgroundTransfer_CIDownloadOperationVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CNetworking_CBackgroundTransfer_CIDownloadOperation* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CNetworking_CBackgroundTransfer_CIDownloadOperation* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CNetworking_CBackgroundTransfer_CIDownloadOperation* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CNetworking_CBackgroundTransfer_CIDownloadOperation* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CNetworking_CBackgroundTransfer_CIDownloadOperation* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CNetworking_CBackgroundTransfer_CIDownloadOperation* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_ResultFile)(__x_ABI_CWindows_CNetworking_CBackgroundTransfer_CIDownloadOperation* This,
        __x_ABI_CWindows_CStorage_CIStorageFile** value);
    HRESULT (STDMETHODCALLTYPE* get_Progress)(__x_ABI_CWindows_CNetworking_CBackgroundTransfer_CIDownloadOperation* This,
        struct __x_ABI_CWindows_CNetworking_CBackgroundTransfer_CBackgroundDownloadProgress* value);
    HRESULT (STDMETHODCALLTYPE* StartAsync)(__x_ABI_CWindows_CNetworking_CBackgroundTransfer_CIDownloadOperation* This,
        __x_ABI_C__FIAsyncOperationWithProgress_2___x_ABI_CWindows__CNetworking__CBackgroundTransfer__CDownloadOperation___x_ABI_CWindows__CNetworking__CBackgroundTransfer__CDownloadOperation** operation);
    HRESULT (STDMETHODCALLTYPE* AttachAsync)(__x_ABI_CWindows_CNetworking_CBackgroundTransfer_CIDownloadOperation* This,
        __x_ABI_C__FIAsyncOperationWithProgress_2___x_ABI_CWindows__CNetworking__CBackgroundTransfer__CDownloadOperation___x_ABI_CWindows__CNetworking__CBackgroundTransfer__CDownloadOperation** operation);
    HRESULT (STDMETHODCALLTYPE* Pause)(__x_ABI_CWindows_CNetworking_CBackgroundTransfer_CIDownloadOperation* This);
    HRESULT (STDMETHODCALLTYPE* Resume)(__x_ABI_CWindows_CNetworking_CBackgroundTransfer_CIDownloadOperation* This);

        END_INTERFACE
    } __x_ABI_CWindows_CNetworking_CBackgroundTransfer_CIDownloadOperationVtbl;

    interface __x_ABI_CWindows_CNetworking_CBackgroundTransfer_CIDownloadOperation
    {
        CONST_VTBL struct __x_ABI_CWindows_CNetworking_CBackgroundTransfer_CIDownloadOperationVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CNetworking_CBackgroundTransfer_CIDownloadOperation;
#endif /* !defined(____x_ABI_CWindows_CNetworking_CBackgroundTransfer_CIDownloadOperation_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CNetworking_CBackgroundTransfer_CIDownloadOperation2_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CNetworking_CBackgroundTransfer_CIDownloadOperation2_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CNetworking_CBackgroundTransfer_CIDownloadOperation2Vtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CNetworking_CBackgroundTransfer_CIDownloadOperation2* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CNetworking_CBackgroundTransfer_CIDownloadOperation2* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CNetworking_CBackgroundTransfer_CIDownloadOperation2* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CNetworking_CBackgroundTransfer_CIDownloadOperation2* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CNetworking_CBackgroundTransfer_CIDownloadOperation2* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CNetworking_CBackgroundTransfer_CIDownloadOperation2* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_TransferGroup)(__x_ABI_CWindows_CNetworking_CBackgroundTransfer_CIDownloadOperation2* This,
        __x_ABI_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundTransferGroup** value);

        END_INTERFACE
    } __x_ABI_CWindows_CNetworking_CBackgroundTransfer_CIDownloadOperation2Vtbl;

    interface __x_ABI_CWindows_CNetworking_CBackgroundTransfer_CIDownloadOperation2
    {
        CONST_VTBL struct __x_ABI_CWindows_CNetworking_CBackgroundTransfer_CIDownloadOperation2Vtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CNetworking_CBackgroundTransfer_CIDownloadOperation2;
#endif /* !defined(____x_ABI_CWindows_CNetworking_CBackgroundTransfer_CIDownloadOperation2_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CNetworking_CBackgroundTransfer_CIDownloadOperation3_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CNetworking_CBackgroundTransfer_CIDownloadOperation3_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CNetworking_CBackgroundTransfer_CIDownloadOperation3Vtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CNetworking_CBackgroundTransfer_CIDownloadOperation3* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CNetworking_CBackgroundTransfer_CIDownloadOperation3* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CNetworking_CBackgroundTransfer_CIDownloadOperation3* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CNetworking_CBackgroundTransfer_CIDownloadOperation3* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CNetworking_CBackgroundTransfer_CIDownloadOperation3* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CNetworking_CBackgroundTransfer_CIDownloadOperation3* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_IsRandomAccessRequired)(__x_ABI_CWindows_CNetworking_CBackgroundTransfer_CIDownloadOperation3* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* put_IsRandomAccessRequired)(__x_ABI_CWindows_CNetworking_CBackgroundTransfer_CIDownloadOperation3* This,
        boolean value);
    HRESULT (STDMETHODCALLTYPE* GetResultRandomAccessStreamReference)(__x_ABI_CWindows_CNetworking_CBackgroundTransfer_CIDownloadOperation3* This,
        __x_ABI_CWindows_CStorage_CStreams_CIRandomAccessStreamReference** stream);
    HRESULT (STDMETHODCALLTYPE* GetDownloadedRanges)(__x_ABI_CWindows_CNetworking_CBackgroundTransfer_CIDownloadOperation3* This,
        __x_ABI_C__FIVector_1___x_ABI_CWindows__CNetworking__CBackgroundTransfer__CBackgroundTransferFileRange** value);
    HRESULT (STDMETHODCALLTYPE* add_RangesDownloaded)(__x_ABI_CWindows_CNetworking_CBackgroundTransfer_CIDownloadOperation3* This,
        __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CNetworking__CBackgroundTransfer__CDownloadOperation___x_ABI_CWindows__CNetworking__CBackgroundTransfer__CBackgroundTransferRangesDownloadedEventArgs* eventHandler,
        EventRegistrationToken* eventCookie);
    HRESULT (STDMETHODCALLTYPE* remove_RangesDownloaded)(__x_ABI_CWindows_CNetworking_CBackgroundTransfer_CIDownloadOperation3* This,
        EventRegistrationToken eventCookie);
    HRESULT (STDMETHODCALLTYPE* put_RequestedUri)(__x_ABI_CWindows_CNetworking_CBackgroundTransfer_CIDownloadOperation3* This,
        __x_ABI_CWindows_CFoundation_CIUriRuntimeClass* value);
    HRESULT (STDMETHODCALLTYPE* get_RecoverableWebErrorStatuses)(__x_ABI_CWindows_CNetworking_CBackgroundTransfer_CIDownloadOperation3* This,
        __x_ABI_C__FIVector_1___x_ABI_CWindows__CWeb__CWebErrorStatus** value);
    HRESULT (STDMETHODCALLTYPE* get_CurrentWebErrorStatus)(__x_ABI_CWindows_CNetworking_CBackgroundTransfer_CIDownloadOperation3* This,
        __x_ABI_C__FIReference_1___x_ABI_CWindows__CWeb__CWebErrorStatus** value);

        END_INTERFACE
    } __x_ABI_CWindows_CNetworking_CBackgroundTransfer_CIDownloadOperation3Vtbl;

    interface __x_ABI_CWindows_CNetworking_CBackgroundTransfer_CIDownloadOperation3
    {
        CONST_VTBL struct __x_ABI_CWindows_CNetworking_CBackgroundTransfer_CIDownloadOperation3Vtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CNetworking_CBackgroundTransfer_CIDownloadOperation3;
#endif /* !defined(____x_ABI_CWindows_CNetworking_CBackgroundTransfer_CIDownloadOperation3_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CNetworking_CBackgroundTransfer_CIDownloadOperation4_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CNetworking_CBackgroundTransfer_CIDownloadOperation4_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CNetworking_CBackgroundTransfer_CIDownloadOperation4Vtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CNetworking_CBackgroundTransfer_CIDownloadOperation4* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CNetworking_CBackgroundTransfer_CIDownloadOperation4* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CNetworking_CBackgroundTransfer_CIDownloadOperation4* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CNetworking_CBackgroundTransfer_CIDownloadOperation4* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CNetworking_CBackgroundTransfer_CIDownloadOperation4* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CNetworking_CBackgroundTransfer_CIDownloadOperation4* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* MakeCurrentInTransferGroup)(__x_ABI_CWindows_CNetworking_CBackgroundTransfer_CIDownloadOperation4* This);

        END_INTERFACE
    } __x_ABI_CWindows_CNetworking_CBackgroundTransfer_CIDownloadOperation4Vtbl;

    interface __x_ABI_CWindows_CNetworking_CBackgroundTransfer_CIDownloadOperation4
    {
        CONST_VTBL struct __x_ABI_CWindows_CNetworking_CBackgroundTransfer_CIDownloadOperation4Vtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CNetworking_CBackgroundTransfer_CIDownloadOperation4;
#endif /* !defined(____x_ABI_CWindows_CNetworking_CBackgroundTransfer_CIDownloadOperation4_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CNetworking_CBackgroundTransfer_CIResponseInformation_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CNetworking_CBackgroundTransfer_CIResponseInformation_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CNetworking_CBackgroundTransfer_CIResponseInformationVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CNetworking_CBackgroundTransfer_CIResponseInformation* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CNetworking_CBackgroundTransfer_CIResponseInformation* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CNetworking_CBackgroundTransfer_CIResponseInformation* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CNetworking_CBackgroundTransfer_CIResponseInformation* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CNetworking_CBackgroundTransfer_CIResponseInformation* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CNetworking_CBackgroundTransfer_CIResponseInformation* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_IsResumable)(__x_ABI_CWindows_CNetworking_CBackgroundTransfer_CIResponseInformation* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* get_ActualUri)(__x_ABI_CWindows_CNetworking_CBackgroundTransfer_CIResponseInformation* This,
        __x_ABI_CWindows_CFoundation_CIUriRuntimeClass** value);
    HRESULT (STDMETHODCALLTYPE* get_StatusCode)(__x_ABI_CWindows_CNetworking_CBackgroundTransfer_CIResponseInformation* This,
        UINT32* value);
    HRESULT (STDMETHODCALLTYPE* get_Headers)(__x_ABI_CWindows_CNetworking_CBackgroundTransfer_CIResponseInformation* This,
        __x_ABI_C__FIMapView_2_HSTRING_HSTRING** value);

        END_INTERFACE
    } __x_ABI_CWindows_CNetworking_CBackgroundTransfer_CIResponseInformationVtbl;

    interface __x_ABI_CWindows_CNetworking_CBackgroundTransfer_CIResponseInformation
    {
        CONST_VTBL struct __x_ABI_CWindows_CNetworking_CBackgroundTransfer_CIResponseInformationVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CNetworking_CBackgroundTransfer_CIResponseInformation;
#endif /* !defined(____x_ABI_CWindows_CNetworking_CBackgroundTransfer_CIResponseInformation_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CNetworking_CBackgroundTransfer_CIUnconstrainedTransferRequestResult_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CNetworking_CBackgroundTransfer_CIUnconstrainedTransferRequestResult_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CNetworking_CBackgroundTransfer_CIUnconstrainedTransferRequestResultVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CNetworking_CBackgroundTransfer_CIUnconstrainedTransferRequestResult* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CNetworking_CBackgroundTransfer_CIUnconstrainedTransferRequestResult* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CNetworking_CBackgroundTransfer_CIUnconstrainedTransferRequestResult* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CNetworking_CBackgroundTransfer_CIUnconstrainedTransferRequestResult* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CNetworking_CBackgroundTransfer_CIUnconstrainedTransferRequestResult* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CNetworking_CBackgroundTransfer_CIUnconstrainedTransferRequestResult* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_IsUnconstrained)(__x_ABI_CWindows_CNetworking_CBackgroundTransfer_CIUnconstrainedTransferRequestResult* This,
        boolean* value);

        END_INTERFACE
    } __x_ABI_CWindows_CNetworking_CBackgroundTransfer_CIUnconstrainedTransferRequestResultVtbl;

    interface __x_ABI_CWindows_CNetworking_CBackgroundTransfer_CIUnconstrainedTransferRequestResult
    {
        CONST_VTBL struct __x_ABI_CWindows_CNetworking_CBackgroundTransfer_CIUnconstrainedTransferRequestResultVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CNetworking_CBackgroundTransfer_CIUnconstrainedTransferRequestResult;
#endif /* !defined(____x_ABI_CWindows_CNetworking_CBackgroundTransfer_CIUnconstrainedTransferRequestResult_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CNetworking_CBackgroundTransfer_CIUploadOperation_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CNetworking_CBackgroundTransfer_CIUploadOperation_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CNetworking_CBackgroundTransfer_CIUploadOperationVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CNetworking_CBackgroundTransfer_CIUploadOperation* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CNetworking_CBackgroundTransfer_CIUploadOperation* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CNetworking_CBackgroundTransfer_CIUploadOperation* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CNetworking_CBackgroundTransfer_CIUploadOperation* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CNetworking_CBackgroundTransfer_CIUploadOperation* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CNetworking_CBackgroundTransfer_CIUploadOperation* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_SourceFile)(__x_ABI_CWindows_CNetworking_CBackgroundTransfer_CIUploadOperation* This,
        __x_ABI_CWindows_CStorage_CIStorageFile** value);
    HRESULT (STDMETHODCALLTYPE* get_Progress)(__x_ABI_CWindows_CNetworking_CBackgroundTransfer_CIUploadOperation* This,
        struct __x_ABI_CWindows_CNetworking_CBackgroundTransfer_CBackgroundUploadProgress* value);
    HRESULT (STDMETHODCALLTYPE* StartAsync)(__x_ABI_CWindows_CNetworking_CBackgroundTransfer_CIUploadOperation* This,
        __x_ABI_C__FIAsyncOperationWithProgress_2___x_ABI_CWindows__CNetworking__CBackgroundTransfer__CUploadOperation___x_ABI_CWindows__CNetworking__CBackgroundTransfer__CUploadOperation** operation);
    HRESULT (STDMETHODCALLTYPE* AttachAsync)(__x_ABI_CWindows_CNetworking_CBackgroundTransfer_CIUploadOperation* This,
        __x_ABI_C__FIAsyncOperationWithProgress_2___x_ABI_CWindows__CNetworking__CBackgroundTransfer__CUploadOperation___x_ABI_CWindows__CNetworking__CBackgroundTransfer__CUploadOperation** operation);

        END_INTERFACE
    } __x_ABI_CWindows_CNetworking_CBackgroundTransfer_CIUploadOperationVtbl;

    interface __x_ABI_CWindows_CNetworking_CBackgroundTransfer_CIUploadOperation
    {
        CONST_VTBL struct __x_ABI_CWindows_CNetworking_CBackgroundTransfer_CIUploadOperationVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CNetworking_CBackgroundTransfer_CIUploadOperation;
#endif /* !defined(____x_ABI_CWindows_CNetworking_CBackgroundTransfer_CIUploadOperation_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CNetworking_CBackgroundTransfer_CIUploadOperation2_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CNetworking_CBackgroundTransfer_CIUploadOperation2_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CNetworking_CBackgroundTransfer_CIUploadOperation2Vtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CNetworking_CBackgroundTransfer_CIUploadOperation2* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CNetworking_CBackgroundTransfer_CIUploadOperation2* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CNetworking_CBackgroundTransfer_CIUploadOperation2* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CNetworking_CBackgroundTransfer_CIUploadOperation2* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CNetworking_CBackgroundTransfer_CIUploadOperation2* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CNetworking_CBackgroundTransfer_CIUploadOperation2* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_TransferGroup)(__x_ABI_CWindows_CNetworking_CBackgroundTransfer_CIUploadOperation2* This,
        __x_ABI_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundTransferGroup** value);

        END_INTERFACE
    } __x_ABI_CWindows_CNetworking_CBackgroundTransfer_CIUploadOperation2Vtbl;

    interface __x_ABI_CWindows_CNetworking_CBackgroundTransfer_CIUploadOperation2
    {
        CONST_VTBL struct __x_ABI_CWindows_CNetworking_CBackgroundTransfer_CIUploadOperation2Vtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CNetworking_CBackgroundTransfer_CIUploadOperation2;
#endif /* !defined(____x_ABI_CWindows_CNetworking_CBackgroundTransfer_CIUploadOperation2_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CNetworking_CBackgroundTransfer_CIUploadOperation3_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CNetworking_CBackgroundTransfer_CIUploadOperation3_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CNetworking_CBackgroundTransfer_CIUploadOperation3Vtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CNetworking_CBackgroundTransfer_CIUploadOperation3* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CNetworking_CBackgroundTransfer_CIUploadOperation3* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CNetworking_CBackgroundTransfer_CIUploadOperation3* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CNetworking_CBackgroundTransfer_CIUploadOperation3* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CNetworking_CBackgroundTransfer_CIUploadOperation3* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CNetworking_CBackgroundTransfer_CIUploadOperation3* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* MakeCurrentInTransferGroup)(__x_ABI_CWindows_CNetworking_CBackgroundTransfer_CIUploadOperation3* This);

        END_INTERFACE
    } __x_ABI_CWindows_CNetworking_CBackgroundTransfer_CIUploadOperation3Vtbl;

    interface __x_ABI_CWindows_CNetworking_CBackgroundTransfer_CIUploadOperation3
    {
        CONST_VTBL struct __x_ABI_CWindows_CNetworking_CBackgroundTransfer_CIUploadOperation3Vtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CNetworking_CBackgroundTransfer_CIUploadOperation3;
#endif /* !defined(____x_ABI_CWindows_CNetworking_CBackgroundTransfer_CIUploadOperation3_INTERFACE_DEFINED__) */
    
