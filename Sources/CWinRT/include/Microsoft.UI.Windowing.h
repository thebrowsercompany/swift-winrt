// WARNING: Please don't edit this file. It was generated by Swift/WinRT v0.0.1

#pragma once
// Header files for imported files
#include <inspectable.h>
#include <EventToken.h>
#include <windowscontracts.h>
#include "Windows.Foundation.h"
#include "Microsoft.UI.h"
#include "Microsoft.UI.Dispatching.h"
#include "Windows.Graphics.h"
#include "Windows.UI.h"
// Importing Collections header
#include "Windows.Foundation.Collections.h"

/* Forward Declarations */
#ifndef ____x_ABI_CMicrosoft_CUI_CWindowing_CIAppWindow_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CWindowing_CIAppWindow_FWD_DEFINED__
    typedef interface __x_ABI_CMicrosoft_CUI_CWindowing_CIAppWindow __x_ABI_CMicrosoft_CUI_CWindowing_CIAppWindow;

#endif // ____x_ABI_CMicrosoft_CUI_CWindowing_CIAppWindow_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CWindowing_CIAppWindow2_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CWindowing_CIAppWindow2_FWD_DEFINED__
    typedef interface __x_ABI_CMicrosoft_CUI_CWindowing_CIAppWindow2 __x_ABI_CMicrosoft_CUI_CWindowing_CIAppWindow2;

#endif // ____x_ABI_CMicrosoft_CUI_CWindowing_CIAppWindow2_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CWindowing_CIAppWindow3_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CWindowing_CIAppWindow3_FWD_DEFINED__
    typedef interface __x_ABI_CMicrosoft_CUI_CWindowing_CIAppWindow3 __x_ABI_CMicrosoft_CUI_CWindowing_CIAppWindow3;

#endif // ____x_ABI_CMicrosoft_CUI_CWindowing_CIAppWindow3_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CWindowing_CIAppWindowChangedEventArgs_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CWindowing_CIAppWindowChangedEventArgs_FWD_DEFINED__
    typedef interface __x_ABI_CMicrosoft_CUI_CWindowing_CIAppWindowChangedEventArgs __x_ABI_CMicrosoft_CUI_CWindowing_CIAppWindowChangedEventArgs;

#endif // ____x_ABI_CMicrosoft_CUI_CWindowing_CIAppWindowChangedEventArgs_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CWindowing_CIAppWindowChangedEventArgs2_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CWindowing_CIAppWindowChangedEventArgs2_FWD_DEFINED__
    typedef interface __x_ABI_CMicrosoft_CUI_CWindowing_CIAppWindowChangedEventArgs2 __x_ABI_CMicrosoft_CUI_CWindowing_CIAppWindowChangedEventArgs2;

#endif // ____x_ABI_CMicrosoft_CUI_CWindowing_CIAppWindowChangedEventArgs2_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CWindowing_CIAppWindowClosingEventArgs_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CWindowing_CIAppWindowClosingEventArgs_FWD_DEFINED__
    typedef interface __x_ABI_CMicrosoft_CUI_CWindowing_CIAppWindowClosingEventArgs __x_ABI_CMicrosoft_CUI_CWindowing_CIAppWindowClosingEventArgs;

#endif // ____x_ABI_CMicrosoft_CUI_CWindowing_CIAppWindowClosingEventArgs_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CWindowing_CIAppWindowPresenter_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CWindowing_CIAppWindowPresenter_FWD_DEFINED__
    typedef interface __x_ABI_CMicrosoft_CUI_CWindowing_CIAppWindowPresenter __x_ABI_CMicrosoft_CUI_CWindowing_CIAppWindowPresenter;

#endif // ____x_ABI_CMicrosoft_CUI_CWindowing_CIAppWindowPresenter_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CWindowing_CIAppWindowPresenterFactory_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CWindowing_CIAppWindowPresenterFactory_FWD_DEFINED__
    typedef interface __x_ABI_CMicrosoft_CUI_CWindowing_CIAppWindowPresenterFactory __x_ABI_CMicrosoft_CUI_CWindowing_CIAppWindowPresenterFactory;

#endif // ____x_ABI_CMicrosoft_CUI_CWindowing_CIAppWindowPresenterFactory_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CWindowing_CIAppWindowStatics_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CWindowing_CIAppWindowStatics_FWD_DEFINED__
    typedef interface __x_ABI_CMicrosoft_CUI_CWindowing_CIAppWindowStatics __x_ABI_CMicrosoft_CUI_CWindowing_CIAppWindowStatics;

#endif // ____x_ABI_CMicrosoft_CUI_CWindowing_CIAppWindowStatics_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CWindowing_CIAppWindowStatics2_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CWindowing_CIAppWindowStatics2_FWD_DEFINED__
    typedef interface __x_ABI_CMicrosoft_CUI_CWindowing_CIAppWindowStatics2 __x_ABI_CMicrosoft_CUI_CWindowing_CIAppWindowStatics2;

#endif // ____x_ABI_CMicrosoft_CUI_CWindowing_CIAppWindowStatics2_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CWindowing_CIAppWindowTitleBar_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CWindowing_CIAppWindowTitleBar_FWD_DEFINED__
    typedef interface __x_ABI_CMicrosoft_CUI_CWindowing_CIAppWindowTitleBar __x_ABI_CMicrosoft_CUI_CWindowing_CIAppWindowTitleBar;

#endif // ____x_ABI_CMicrosoft_CUI_CWindowing_CIAppWindowTitleBar_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CWindowing_CIAppWindowTitleBar2_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CWindowing_CIAppWindowTitleBar2_FWD_DEFINED__
    typedef interface __x_ABI_CMicrosoft_CUI_CWindowing_CIAppWindowTitleBar2 __x_ABI_CMicrosoft_CUI_CWindowing_CIAppWindowTitleBar2;

#endif // ____x_ABI_CMicrosoft_CUI_CWindowing_CIAppWindowTitleBar2_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CWindowing_CIAppWindowTitleBarStatics_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CWindowing_CIAppWindowTitleBarStatics_FWD_DEFINED__
    typedef interface __x_ABI_CMicrosoft_CUI_CWindowing_CIAppWindowTitleBarStatics __x_ABI_CMicrosoft_CUI_CWindowing_CIAppWindowTitleBarStatics;

#endif // ____x_ABI_CMicrosoft_CUI_CWindowing_CIAppWindowTitleBarStatics_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CWindowing_CICompactOverlayPresenter_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CWindowing_CICompactOverlayPresenter_FWD_DEFINED__
    typedef interface __x_ABI_CMicrosoft_CUI_CWindowing_CICompactOverlayPresenter __x_ABI_CMicrosoft_CUI_CWindowing_CICompactOverlayPresenter;

#endif // ____x_ABI_CMicrosoft_CUI_CWindowing_CICompactOverlayPresenter_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CWindowing_CICompactOverlayPresenterStatics_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CWindowing_CICompactOverlayPresenterStatics_FWD_DEFINED__
    typedef interface __x_ABI_CMicrosoft_CUI_CWindowing_CICompactOverlayPresenterStatics __x_ABI_CMicrosoft_CUI_CWindowing_CICompactOverlayPresenterStatics;

#endif // ____x_ABI_CMicrosoft_CUI_CWindowing_CICompactOverlayPresenterStatics_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CWindowing_CIDisplayArea_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CWindowing_CIDisplayArea_FWD_DEFINED__
    typedef interface __x_ABI_CMicrosoft_CUI_CWindowing_CIDisplayArea __x_ABI_CMicrosoft_CUI_CWindowing_CIDisplayArea;

#endif // ____x_ABI_CMicrosoft_CUI_CWindowing_CIDisplayArea_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CWindowing_CIDisplayAreaStatics_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CWindowing_CIDisplayAreaStatics_FWD_DEFINED__
    typedef interface __x_ABI_CMicrosoft_CUI_CWindowing_CIDisplayAreaStatics __x_ABI_CMicrosoft_CUI_CWindowing_CIDisplayAreaStatics;

#endif // ____x_ABI_CMicrosoft_CUI_CWindowing_CIDisplayAreaStatics_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CWindowing_CIDisplayAreaStatics2_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CWindowing_CIDisplayAreaStatics2_FWD_DEFINED__
    typedef interface __x_ABI_CMicrosoft_CUI_CWindowing_CIDisplayAreaStatics2 __x_ABI_CMicrosoft_CUI_CWindowing_CIDisplayAreaStatics2;

#endif // ____x_ABI_CMicrosoft_CUI_CWindowing_CIDisplayAreaStatics2_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CWindowing_CIDisplayAreaWatcher_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CWindowing_CIDisplayAreaWatcher_FWD_DEFINED__
    typedef interface __x_ABI_CMicrosoft_CUI_CWindowing_CIDisplayAreaWatcher __x_ABI_CMicrosoft_CUI_CWindowing_CIDisplayAreaWatcher;

#endif // ____x_ABI_CMicrosoft_CUI_CWindowing_CIDisplayAreaWatcher_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CWindowing_CIFullScreenPresenter_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CWindowing_CIFullScreenPresenter_FWD_DEFINED__
    typedef interface __x_ABI_CMicrosoft_CUI_CWindowing_CIFullScreenPresenter __x_ABI_CMicrosoft_CUI_CWindowing_CIFullScreenPresenter;

#endif // ____x_ABI_CMicrosoft_CUI_CWindowing_CIFullScreenPresenter_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CWindowing_CIFullScreenPresenterStatics_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CWindowing_CIFullScreenPresenterStatics_FWD_DEFINED__
    typedef interface __x_ABI_CMicrosoft_CUI_CWindowing_CIFullScreenPresenterStatics __x_ABI_CMicrosoft_CUI_CWindowing_CIFullScreenPresenterStatics;

#endif // ____x_ABI_CMicrosoft_CUI_CWindowing_CIFullScreenPresenterStatics_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CWindowing_CIOverlappedPresenter_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CWindowing_CIOverlappedPresenter_FWD_DEFINED__
    typedef interface __x_ABI_CMicrosoft_CUI_CWindowing_CIOverlappedPresenter __x_ABI_CMicrosoft_CUI_CWindowing_CIOverlappedPresenter;

#endif // ____x_ABI_CMicrosoft_CUI_CWindowing_CIOverlappedPresenter_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CWindowing_CIOverlappedPresenter2_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CWindowing_CIOverlappedPresenter2_FWD_DEFINED__
    typedef interface __x_ABI_CMicrosoft_CUI_CWindowing_CIOverlappedPresenter2 __x_ABI_CMicrosoft_CUI_CWindowing_CIOverlappedPresenter2;

#endif // ____x_ABI_CMicrosoft_CUI_CWindowing_CIOverlappedPresenter2_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CWindowing_CIOverlappedPresenterStatics_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CWindowing_CIOverlappedPresenterStatics_FWD_DEFINED__
    typedef interface __x_ABI_CMicrosoft_CUI_CWindowing_CIOverlappedPresenterStatics __x_ABI_CMicrosoft_CUI_CWindowing_CIOverlappedPresenterStatics;

#endif // ____x_ABI_CMicrosoft_CUI_CWindowing_CIOverlappedPresenterStatics_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CWindowing_CIOverlappedPresenterStatics2_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CWindowing_CIOverlappedPresenterStatics2_FWD_DEFINED__
    typedef interface __x_ABI_CMicrosoft_CUI_CWindowing_CIOverlappedPresenterStatics2 __x_ABI_CMicrosoft_CUI_CWindowing_CIOverlappedPresenterStatics2;

#endif // ____x_ABI_CMicrosoft_CUI_CWindowing_CIOverlappedPresenterStatics2_FWD_DEFINED__

// Parameterized interface forward declarations (C)

// Collection interface definitions

#if !defined(____x_ABI_C__FIIterator_1___x_ABI_CMicrosoft__CUI__CWindowing__CDisplayArea_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIIterator_1___x_ABI_CMicrosoft__CUI__CWindowing__CDisplayArea_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIIterator_1___x_ABI_CMicrosoft__CUI__CWindowing__CDisplayArea __x_ABI_C__FIIterator_1___x_ABI_CMicrosoft__CUI__CWindowing__CDisplayArea;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIIterator_1___x_ABI_CMicrosoft__CUI__CWindowing__CDisplayArea;

    typedef struct __x_ABI_C__FIIterator_1___x_ABI_CMicrosoft__CUI__CWindowing__CDisplayAreaVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIIterator_1___x_ABI_CMicrosoft__CUI__CWindowing__CDisplayArea* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIIterator_1___x_ABI_CMicrosoft__CUI__CWindowing__CDisplayArea* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIIterator_1___x_ABI_CMicrosoft__CUI__CWindowing__CDisplayArea* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIIterator_1___x_ABI_CMicrosoft__CUI__CWindowing__CDisplayArea* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIIterator_1___x_ABI_CMicrosoft__CUI__CWindowing__CDisplayArea* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIIterator_1___x_ABI_CMicrosoft__CUI__CWindowing__CDisplayArea* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Current)(__x_ABI_C__FIIterator_1___x_ABI_CMicrosoft__CUI__CWindowing__CDisplayArea* This,
        __x_ABI_CMicrosoft_CUI_CWindowing_CIDisplayArea** result);
    HRESULT (STDMETHODCALLTYPE* get_HasCurrent)(__x_ABI_C__FIIterator_1___x_ABI_CMicrosoft__CUI__CWindowing__CDisplayArea* This,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* MoveNext)(__x_ABI_C__FIIterator_1___x_ABI_CMicrosoft__CUI__CWindowing__CDisplayArea* This,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__x_ABI_C__FIIterator_1___x_ABI_CMicrosoft__CUI__CWindowing__CDisplayArea* This,
        UINT32 itemsLength,
        __x_ABI_CMicrosoft_CUI_CWindowing_CIDisplayArea** items,
        UINT32* result);

        END_INTERFACE
    } __x_ABI_C__FIIterator_1___x_ABI_CMicrosoft__CUI__CWindowing__CDisplayAreaVtbl;

    interface __x_ABI_C__FIIterator_1___x_ABI_CMicrosoft__CUI__CWindowing__CDisplayArea
    {
        CONST_VTBL struct __x_ABI_C__FIIterator_1___x_ABI_CMicrosoft__CUI__CWindowing__CDisplayAreaVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIIterator_1___x_ABI_CMicrosoft__CUI__CWindowing__CDisplayArea_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIIterable_1___x_ABI_CMicrosoft__CUI__CWindowing__CDisplayArea_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIIterable_1___x_ABI_CMicrosoft__CUI__CWindowing__CDisplayArea_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIIterable_1___x_ABI_CMicrosoft__CUI__CWindowing__CDisplayArea __x_ABI_C__FIIterable_1___x_ABI_CMicrosoft__CUI__CWindowing__CDisplayArea;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIIterable_1___x_ABI_CMicrosoft__CUI__CWindowing__CDisplayArea;

    typedef struct __x_ABI_C__FIIterable_1___x_ABI_CMicrosoft__CUI__CWindowing__CDisplayAreaVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIIterable_1___x_ABI_CMicrosoft__CUI__CWindowing__CDisplayArea* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIIterable_1___x_ABI_CMicrosoft__CUI__CWindowing__CDisplayArea* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIIterable_1___x_ABI_CMicrosoft__CUI__CWindowing__CDisplayArea* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIIterable_1___x_ABI_CMicrosoft__CUI__CWindowing__CDisplayArea* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIIterable_1___x_ABI_CMicrosoft__CUI__CWindowing__CDisplayArea* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIIterable_1___x_ABI_CMicrosoft__CUI__CWindowing__CDisplayArea* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* First)(__x_ABI_C__FIIterable_1___x_ABI_CMicrosoft__CUI__CWindowing__CDisplayArea* This,
        __x_ABI_C__FIIterator_1___x_ABI_CMicrosoft__CUI__CWindowing__CDisplayArea** result);

        END_INTERFACE
    } __x_ABI_C__FIIterable_1___x_ABI_CMicrosoft__CUI__CWindowing__CDisplayAreaVtbl;

    interface __x_ABI_C__FIIterable_1___x_ABI_CMicrosoft__CUI__CWindowing__CDisplayArea
    {
        CONST_VTBL struct __x_ABI_C__FIIterable_1___x_ABI_CMicrosoft__CUI__CWindowing__CDisplayAreaVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIIterable_1___x_ABI_CMicrosoft__CUI__CWindowing__CDisplayArea_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIVectorView_1___x_ABI_CMicrosoft__CUI__CWindowing__CDisplayArea_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIVectorView_1___x_ABI_CMicrosoft__CUI__CWindowing__CDisplayArea_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIVectorView_1___x_ABI_CMicrosoft__CUI__CWindowing__CDisplayArea __x_ABI_C__FIVectorView_1___x_ABI_CMicrosoft__CUI__CWindowing__CDisplayArea;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIVectorView_1___x_ABI_CMicrosoft__CUI__CWindowing__CDisplayArea;

    typedef struct __x_ABI_C__FIVectorView_1___x_ABI_CMicrosoft__CUI__CWindowing__CDisplayAreaVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIVectorView_1___x_ABI_CMicrosoft__CUI__CWindowing__CDisplayArea* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIVectorView_1___x_ABI_CMicrosoft__CUI__CWindowing__CDisplayArea* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIVectorView_1___x_ABI_CMicrosoft__CUI__CWindowing__CDisplayArea* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIVectorView_1___x_ABI_CMicrosoft__CUI__CWindowing__CDisplayArea* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIVectorView_1___x_ABI_CMicrosoft__CUI__CWindowing__CDisplayArea* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIVectorView_1___x_ABI_CMicrosoft__CUI__CWindowing__CDisplayArea* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* GetAt)(__x_ABI_C__FIVectorView_1___x_ABI_CMicrosoft__CUI__CWindowing__CDisplayArea* This,
        UINT32 index,
        __x_ABI_CMicrosoft_CUI_CWindowing_CIDisplayArea** result);
    HRESULT (STDMETHODCALLTYPE* get_Size)(__x_ABI_C__FIVectorView_1___x_ABI_CMicrosoft__CUI__CWindowing__CDisplayArea* This,
        UINT32* result);
    HRESULT (STDMETHODCALLTYPE* IndexOf)(__x_ABI_C__FIVectorView_1___x_ABI_CMicrosoft__CUI__CWindowing__CDisplayArea* This,
        __x_ABI_CMicrosoft_CUI_CWindowing_CIDisplayArea* value,
        UINT32* index,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__x_ABI_C__FIVectorView_1___x_ABI_CMicrosoft__CUI__CWindowing__CDisplayArea* This,
        UINT32 startIndex,
        UINT32 itemsLength,
        __x_ABI_CMicrosoft_CUI_CWindowing_CIDisplayArea** items,
        UINT32* result);

        END_INTERFACE
    } __x_ABI_C__FIVectorView_1___x_ABI_CMicrosoft__CUI__CWindowing__CDisplayAreaVtbl;

    interface __x_ABI_C__FIVectorView_1___x_ABI_CMicrosoft__CUI__CWindowing__CDisplayArea
    {
        CONST_VTBL struct __x_ABI_C__FIVectorView_1___x_ABI_CMicrosoft__CUI__CWindowing__CDisplayAreaVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIVectorView_1___x_ABI_CMicrosoft__CUI__CWindowing__CDisplayArea_INTERFACE_DEFINED__
    
typedef struct __x_ABI_CWindows_CUI_CColor __x_ABI_CWindows_CUI_CColor;

#if !defined(____x_ABI_C__FIReference_1___x_ABI_CWindows__CUI__CColor_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIReference_1___x_ABI_CWindows__CUI__CColor_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIReference_1___x_ABI_CWindows__CUI__CColor __x_ABI_C__FIReference_1___x_ABI_CWindows__CUI__CColor;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIReference_1___x_ABI_CWindows__CUI__CColor;

    typedef struct __x_ABI_C__FIReference_1___x_ABI_CWindows__CUI__CColorVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIReference_1___x_ABI_CWindows__CUI__CColor* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIReference_1___x_ABI_CWindows__CUI__CColor* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIReference_1___x_ABI_CWindows__CUI__CColor* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIReference_1___x_ABI_CWindows__CUI__CColor* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIReference_1___x_ABI_CWindows__CUI__CColor* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIReference_1___x_ABI_CWindows__CUI__CColor* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Value)(__x_ABI_C__FIReference_1___x_ABI_CWindows__CUI__CColor* This,
        struct __x_ABI_CWindows_CUI_CColor* result);

        END_INTERFACE
    } __x_ABI_C__FIReference_1___x_ABI_CWindows__CUI__CColorVtbl;

    interface __x_ABI_C__FIReference_1___x_ABI_CWindows__CUI__CColor
    {
        CONST_VTBL struct __x_ABI_C__FIReference_1___x_ABI_CWindows__CUI__CColorVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIReference_1___x_ABI_CWindows__CUI__CColor_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CUI__CWindowing__CAppWindow_IInspectable_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CUI__CWindowing__CAppWindow_IInspectable_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CUI__CWindowing__CAppWindow_IInspectable __x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CUI__CWindowing__CAppWindow_IInspectable;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CUI__CWindowing__CAppWindow_IInspectable;

    typedef struct __x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CUI__CWindowing__CAppWindow_IInspectableVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CUI__CWindowing__CAppWindow_IInspectable* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CUI__CWindowing__CAppWindow_IInspectable* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CUI__CWindowing__CAppWindow_IInspectable* This);
        HRESULT (STDMETHODCALLTYPE* Invoke)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CUI__CWindowing__CAppWindow_IInspectable* This,
        __x_ABI_CMicrosoft_CUI_CWindowing_CIAppWindow* sender,
        IInspectable* args);

        END_INTERFACE
    } __x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CUI__CWindowing__CAppWindow_IInspectableVtbl;

    interface __x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CUI__CWindowing__CAppWindow_IInspectable
    {
        CONST_VTBL struct __x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CUI__CWindowing__CAppWindow_IInspectableVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CUI__CWindowing__CAppWindow_IInspectable_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CUI__CWindowing__CAppWindow___x_ABI_CMicrosoft__CUI__CWindowing__CAppWindowChangedEventArgs_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CUI__CWindowing__CAppWindow___x_ABI_CMicrosoft__CUI__CWindowing__CAppWindowChangedEventArgs_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CUI__CWindowing__CAppWindow___x_ABI_CMicrosoft__CUI__CWindowing__CAppWindowChangedEventArgs __x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CUI__CWindowing__CAppWindow___x_ABI_CMicrosoft__CUI__CWindowing__CAppWindowChangedEventArgs;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CUI__CWindowing__CAppWindow___x_ABI_CMicrosoft__CUI__CWindowing__CAppWindowChangedEventArgs;

    typedef struct __x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CUI__CWindowing__CAppWindow___x_ABI_CMicrosoft__CUI__CWindowing__CAppWindowChangedEventArgsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CUI__CWindowing__CAppWindow___x_ABI_CMicrosoft__CUI__CWindowing__CAppWindowChangedEventArgs* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CUI__CWindowing__CAppWindow___x_ABI_CMicrosoft__CUI__CWindowing__CAppWindowChangedEventArgs* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CUI__CWindowing__CAppWindow___x_ABI_CMicrosoft__CUI__CWindowing__CAppWindowChangedEventArgs* This);
        HRESULT (STDMETHODCALLTYPE* Invoke)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CUI__CWindowing__CAppWindow___x_ABI_CMicrosoft__CUI__CWindowing__CAppWindowChangedEventArgs* This,
        __x_ABI_CMicrosoft_CUI_CWindowing_CIAppWindow* sender,
        __x_ABI_CMicrosoft_CUI_CWindowing_CIAppWindowChangedEventArgs* args);

        END_INTERFACE
    } __x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CUI__CWindowing__CAppWindow___x_ABI_CMicrosoft__CUI__CWindowing__CAppWindowChangedEventArgsVtbl;

    interface __x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CUI__CWindowing__CAppWindow___x_ABI_CMicrosoft__CUI__CWindowing__CAppWindowChangedEventArgs
    {
        CONST_VTBL struct __x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CUI__CWindowing__CAppWindow___x_ABI_CMicrosoft__CUI__CWindowing__CAppWindowChangedEventArgsVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CUI__CWindowing__CAppWindow___x_ABI_CMicrosoft__CUI__CWindowing__CAppWindowChangedEventArgs_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CUI__CWindowing__CAppWindow___x_ABI_CMicrosoft__CUI__CWindowing__CAppWindowClosingEventArgs_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CUI__CWindowing__CAppWindow___x_ABI_CMicrosoft__CUI__CWindowing__CAppWindowClosingEventArgs_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CUI__CWindowing__CAppWindow___x_ABI_CMicrosoft__CUI__CWindowing__CAppWindowClosingEventArgs __x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CUI__CWindowing__CAppWindow___x_ABI_CMicrosoft__CUI__CWindowing__CAppWindowClosingEventArgs;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CUI__CWindowing__CAppWindow___x_ABI_CMicrosoft__CUI__CWindowing__CAppWindowClosingEventArgs;

    typedef struct __x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CUI__CWindowing__CAppWindow___x_ABI_CMicrosoft__CUI__CWindowing__CAppWindowClosingEventArgsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CUI__CWindowing__CAppWindow___x_ABI_CMicrosoft__CUI__CWindowing__CAppWindowClosingEventArgs* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CUI__CWindowing__CAppWindow___x_ABI_CMicrosoft__CUI__CWindowing__CAppWindowClosingEventArgs* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CUI__CWindowing__CAppWindow___x_ABI_CMicrosoft__CUI__CWindowing__CAppWindowClosingEventArgs* This);
        HRESULT (STDMETHODCALLTYPE* Invoke)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CUI__CWindowing__CAppWindow___x_ABI_CMicrosoft__CUI__CWindowing__CAppWindowClosingEventArgs* This,
        __x_ABI_CMicrosoft_CUI_CWindowing_CIAppWindow* sender,
        __x_ABI_CMicrosoft_CUI_CWindowing_CIAppWindowClosingEventArgs* args);

        END_INTERFACE
    } __x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CUI__CWindowing__CAppWindow___x_ABI_CMicrosoft__CUI__CWindowing__CAppWindowClosingEventArgsVtbl;

    interface __x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CUI__CWindowing__CAppWindow___x_ABI_CMicrosoft__CUI__CWindowing__CAppWindowClosingEventArgs
    {
        CONST_VTBL struct __x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CUI__CWindowing__CAppWindow___x_ABI_CMicrosoft__CUI__CWindowing__CAppWindowClosingEventArgsVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CUI__CWindowing__CAppWindow___x_ABI_CMicrosoft__CUI__CWindowing__CAppWindowClosingEventArgs_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CUI__CWindowing__CDisplayAreaWatcher_IInspectable_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CUI__CWindowing__CDisplayAreaWatcher_IInspectable_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CUI__CWindowing__CDisplayAreaWatcher_IInspectable __x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CUI__CWindowing__CDisplayAreaWatcher_IInspectable;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CUI__CWindowing__CDisplayAreaWatcher_IInspectable;

    typedef struct __x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CUI__CWindowing__CDisplayAreaWatcher_IInspectableVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CUI__CWindowing__CDisplayAreaWatcher_IInspectable* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CUI__CWindowing__CDisplayAreaWatcher_IInspectable* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CUI__CWindowing__CDisplayAreaWatcher_IInspectable* This);
        HRESULT (STDMETHODCALLTYPE* Invoke)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CUI__CWindowing__CDisplayAreaWatcher_IInspectable* This,
        __x_ABI_CMicrosoft_CUI_CWindowing_CIDisplayAreaWatcher* sender,
        IInspectable* args);

        END_INTERFACE
    } __x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CUI__CWindowing__CDisplayAreaWatcher_IInspectableVtbl;

    interface __x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CUI__CWindowing__CDisplayAreaWatcher_IInspectable
    {
        CONST_VTBL struct __x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CUI__CWindowing__CDisplayAreaWatcher_IInspectableVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CUI__CWindowing__CDisplayAreaWatcher_IInspectable_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CUI__CWindowing__CDisplayAreaWatcher___x_ABI_CMicrosoft__CUI__CWindowing__CDisplayArea_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CUI__CWindowing__CDisplayAreaWatcher___x_ABI_CMicrosoft__CUI__CWindowing__CDisplayArea_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CUI__CWindowing__CDisplayAreaWatcher___x_ABI_CMicrosoft__CUI__CWindowing__CDisplayArea __x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CUI__CWindowing__CDisplayAreaWatcher___x_ABI_CMicrosoft__CUI__CWindowing__CDisplayArea;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CUI__CWindowing__CDisplayAreaWatcher___x_ABI_CMicrosoft__CUI__CWindowing__CDisplayArea;

    typedef struct __x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CUI__CWindowing__CDisplayAreaWatcher___x_ABI_CMicrosoft__CUI__CWindowing__CDisplayAreaVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CUI__CWindowing__CDisplayAreaWatcher___x_ABI_CMicrosoft__CUI__CWindowing__CDisplayArea* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CUI__CWindowing__CDisplayAreaWatcher___x_ABI_CMicrosoft__CUI__CWindowing__CDisplayArea* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CUI__CWindowing__CDisplayAreaWatcher___x_ABI_CMicrosoft__CUI__CWindowing__CDisplayArea* This);
        HRESULT (STDMETHODCALLTYPE* Invoke)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CUI__CWindowing__CDisplayAreaWatcher___x_ABI_CMicrosoft__CUI__CWindowing__CDisplayArea* This,
        __x_ABI_CMicrosoft_CUI_CWindowing_CIDisplayAreaWatcher* sender,
        __x_ABI_CMicrosoft_CUI_CWindowing_CIDisplayArea* args);

        END_INTERFACE
    } __x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CUI__CWindowing__CDisplayAreaWatcher___x_ABI_CMicrosoft__CUI__CWindowing__CDisplayAreaVtbl;

    interface __x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CUI__CWindowing__CDisplayAreaWatcher___x_ABI_CMicrosoft__CUI__CWindowing__CDisplayArea
    {
        CONST_VTBL struct __x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CUI__CWindowing__CDisplayAreaWatcher___x_ABI_CMicrosoft__CUI__CWindowing__CDisplayAreaVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CUI__CWindowing__CDisplayAreaWatcher___x_ABI_CMicrosoft__CUI__CWindowing__CDisplayArea_INTERFACE_DEFINED__
    
#ifndef ____x_ABI_CMicrosoft_CUI_CDispatching_CIDispatcherQueue_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CDispatching_CIDispatcherQueue_FWD_DEFINED__
    typedef interface __x_ABI_CMicrosoft_CUI_CDispatching_CIDispatcherQueue __x_ABI_CMicrosoft_CUI_CDispatching_CIDispatcherQueue;

#endif // ____x_ABI_CMicrosoft_CUI_CDispatching_CIDispatcherQueue_FWD_DEFINED__

typedef struct __x_ABI_CMicrosoft_CUI_CDisplayId __x_ABI_CMicrosoft_CUI_CDisplayId;

typedef struct __x_ABI_CMicrosoft_CUI_CIconId __x_ABI_CMicrosoft_CUI_CIconId;

typedef struct __x_ABI_CMicrosoft_CUI_CWindowId __x_ABI_CMicrosoft_CUI_CWindowId;

#ifndef ____x_ABI_CWindows_CFoundation_CIPropertyValue_FWD_DEFINED__
#define ____x_ABI_CWindows_CFoundation_CIPropertyValue_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CFoundation_CIPropertyValue __x_ABI_CWindows_CFoundation_CIPropertyValue;

#endif // ____x_ABI_CWindows_CFoundation_CIPropertyValue_FWD_DEFINED__

typedef struct __x_ABI_CWindows_CGraphics_CPointInt32 __x_ABI_CWindows_CGraphics_CPointInt32;

typedef struct __x_ABI_CWindows_CGraphics_CRectInt32 __x_ABI_CWindows_CGraphics_CRectInt32;

typedef struct __x_ABI_CWindows_CGraphics_CSizeInt32 __x_ABI_CWindows_CGraphics_CSizeInt32;

typedef enum __x_ABI_CMicrosoft_CUI_CWindowing_CAppWindowPresenterKind __x_ABI_CMicrosoft_CUI_CWindowing_CAppWindowPresenterKind;

typedef enum __x_ABI_CMicrosoft_CUI_CWindowing_CCompactOverlaySize __x_ABI_CMicrosoft_CUI_CWindowing_CCompactOverlaySize;

typedef enum __x_ABI_CMicrosoft_CUI_CWindowing_CDisplayAreaFallback __x_ABI_CMicrosoft_CUI_CWindowing_CDisplayAreaFallback;

typedef enum __x_ABI_CMicrosoft_CUI_CWindowing_CDisplayAreaWatcherStatus __x_ABI_CMicrosoft_CUI_CWindowing_CDisplayAreaWatcherStatus;

typedef enum __x_ABI_CMicrosoft_CUI_CWindowing_CIconShowOptions __x_ABI_CMicrosoft_CUI_CWindowing_CIconShowOptions;

typedef enum __x_ABI_CMicrosoft_CUI_CWindowing_COverlappedPresenterState __x_ABI_CMicrosoft_CUI_CWindowing_COverlappedPresenterState;

typedef enum __x_ABI_CMicrosoft_CUI_CWindowing_CTitleBarHeightOption __x_ABI_CMicrosoft_CUI_CWindowing_CTitleBarHeightOption;

enum __x_ABI_CMicrosoft_CUI_CWindowing_CAppWindowPresenterKind
    {
        __x_ABI_CMicrosoft_CUI_CWindowing_CAppWindowPresenterKind_Default = 0,
    __x_ABI_CMicrosoft_CUI_CWindowing_CAppWindowPresenterKind_CompactOverlay = 1,
    __x_ABI_CMicrosoft_CUI_CWindowing_CAppWindowPresenterKind_FullScreen = 2,
    __x_ABI_CMicrosoft_CUI_CWindowing_CAppWindowPresenterKind_Overlapped = 3,
};

enum __x_ABI_CMicrosoft_CUI_CWindowing_CCompactOverlaySize
    {
        __x_ABI_CMicrosoft_CUI_CWindowing_CCompactOverlaySize_Small = 0,
    __x_ABI_CMicrosoft_CUI_CWindowing_CCompactOverlaySize_Medium = 1,
    __x_ABI_CMicrosoft_CUI_CWindowing_CCompactOverlaySize_Large = 2,
};

enum __x_ABI_CMicrosoft_CUI_CWindowing_CDisplayAreaFallback
    {
        __x_ABI_CMicrosoft_CUI_CWindowing_CDisplayAreaFallback_None = 0,
    __x_ABI_CMicrosoft_CUI_CWindowing_CDisplayAreaFallback_Primary = 1,
    __x_ABI_CMicrosoft_CUI_CWindowing_CDisplayAreaFallback_Nearest = 2,
};

enum __x_ABI_CMicrosoft_CUI_CWindowing_CDisplayAreaWatcherStatus
    {
        __x_ABI_CMicrosoft_CUI_CWindowing_CDisplayAreaWatcherStatus_Created = 0,
    __x_ABI_CMicrosoft_CUI_CWindowing_CDisplayAreaWatcherStatus_Started = 1,
    __x_ABI_CMicrosoft_CUI_CWindowing_CDisplayAreaWatcherStatus_EnumerationCompleted = 2,
    __x_ABI_CMicrosoft_CUI_CWindowing_CDisplayAreaWatcherStatus_Stopping = 3,
    __x_ABI_CMicrosoft_CUI_CWindowing_CDisplayAreaWatcherStatus_Stopped = 4,
    __x_ABI_CMicrosoft_CUI_CWindowing_CDisplayAreaWatcherStatus_Aborted = 5,
};

enum __x_ABI_CMicrosoft_CUI_CWindowing_CIconShowOptions
    {
        __x_ABI_CMicrosoft_CUI_CWindowing_CIconShowOptions_ShowIconAndSystemMenu = 0,
    __x_ABI_CMicrosoft_CUI_CWindowing_CIconShowOptions_HideIconAndSystemMenu = 1,
};

enum __x_ABI_CMicrosoft_CUI_CWindowing_COverlappedPresenterState
    {
        __x_ABI_CMicrosoft_CUI_CWindowing_COverlappedPresenterState_Maximized = 0,
    __x_ABI_CMicrosoft_CUI_CWindowing_COverlappedPresenterState_Minimized = 1,
    __x_ABI_CMicrosoft_CUI_CWindowing_COverlappedPresenterState_Restored = 2,
};

enum __x_ABI_CMicrosoft_CUI_CWindowing_CTitleBarHeightOption
    {
        __x_ABI_CMicrosoft_CUI_CWindowing_CTitleBarHeightOption_Standard = 0,
    __x_ABI_CMicrosoft_CUI_CWindowing_CTitleBarHeightOption_Tall = 1,
    __x_ABI_CMicrosoft_CUI_CWindowing_CTitleBarHeightOption_Collapsed = 2,
};

#if !defined(____x_ABI_CMicrosoft_CUI_CWindowing_CIAppWindow_INTERFACE_DEFINED__)
    #define ____x_ABI_CMicrosoft_CUI_CWindowing_CIAppWindow_INTERFACE_DEFINED__
    typedef struct __x_ABI_CMicrosoft_CUI_CWindowing_CIAppWindowVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CUI_CWindowing_CIAppWindow* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CUI_CWindowing_CIAppWindow* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CUI_CWindowing_CIAppWindow* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CUI_CWindowing_CIAppWindow* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CUI_CWindowing_CIAppWindow* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CUI_CWindowing_CIAppWindow* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Id)(__x_ABI_CMicrosoft_CUI_CWindowing_CIAppWindow* This,
        struct __x_ABI_CMicrosoft_CUI_CWindowId* value);
    HRESULT (STDMETHODCALLTYPE* get_IsShownInSwitchers)(__x_ABI_CMicrosoft_CUI_CWindowing_CIAppWindow* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* put_IsShownInSwitchers)(__x_ABI_CMicrosoft_CUI_CWindowing_CIAppWindow* This,
        boolean value);
    HRESULT (STDMETHODCALLTYPE* get_IsVisible)(__x_ABI_CMicrosoft_CUI_CWindowing_CIAppWindow* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* get_OwnerWindowId)(__x_ABI_CMicrosoft_CUI_CWindowing_CIAppWindow* This,
        struct __x_ABI_CMicrosoft_CUI_CWindowId* value);
    HRESULT (STDMETHODCALLTYPE* get_Position)(__x_ABI_CMicrosoft_CUI_CWindowing_CIAppWindow* This,
        struct __x_ABI_CWindows_CGraphics_CPointInt32* value);
    HRESULT (STDMETHODCALLTYPE* get_Presenter)(__x_ABI_CMicrosoft_CUI_CWindowing_CIAppWindow* This,
        __x_ABI_CMicrosoft_CUI_CWindowing_CIAppWindowPresenter** value);
    HRESULT (STDMETHODCALLTYPE* get_Size)(__x_ABI_CMicrosoft_CUI_CWindowing_CIAppWindow* This,
        struct __x_ABI_CWindows_CGraphics_CSizeInt32* value);
    HRESULT (STDMETHODCALLTYPE* get_Title)(__x_ABI_CMicrosoft_CUI_CWindowing_CIAppWindow* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* put_Title)(__x_ABI_CMicrosoft_CUI_CWindowing_CIAppWindow* This,
        HSTRING value);
    HRESULT (STDMETHODCALLTYPE* get_TitleBar)(__x_ABI_CMicrosoft_CUI_CWindowing_CIAppWindow* This,
        __x_ABI_CMicrosoft_CUI_CWindowing_CIAppWindowTitleBar** value);
    HRESULT (STDMETHODCALLTYPE* Destroy)(__x_ABI_CMicrosoft_CUI_CWindowing_CIAppWindow* This);
    HRESULT (STDMETHODCALLTYPE* Hide)(__x_ABI_CMicrosoft_CUI_CWindowing_CIAppWindow* This);
    HRESULT (STDMETHODCALLTYPE* Move)(__x_ABI_CMicrosoft_CUI_CWindowing_CIAppWindow* This,
        struct __x_ABI_CWindows_CGraphics_CPointInt32 position);
    HRESULT (STDMETHODCALLTYPE* MoveAndResize)(__x_ABI_CMicrosoft_CUI_CWindowing_CIAppWindow* This,
        struct __x_ABI_CWindows_CGraphics_CRectInt32 rect);
    HRESULT (STDMETHODCALLTYPE* MoveAndResizeRelativeToDisplayArea)(__x_ABI_CMicrosoft_CUI_CWindowing_CIAppWindow* This,
        struct __x_ABI_CWindows_CGraphics_CRectInt32 rect,
        __x_ABI_CMicrosoft_CUI_CWindowing_CIDisplayArea* displayarea);
    HRESULT (STDMETHODCALLTYPE* Resize)(__x_ABI_CMicrosoft_CUI_CWindowing_CIAppWindow* This,
        struct __x_ABI_CWindows_CGraphics_CSizeInt32 size);
    HRESULT (STDMETHODCALLTYPE* SetIcon)(__x_ABI_CMicrosoft_CUI_CWindowing_CIAppWindow* This,
        HSTRING iconPath);
    HRESULT (STDMETHODCALLTYPE* SetIconWithIconId)(__x_ABI_CMicrosoft_CUI_CWindowing_CIAppWindow* This,
        struct __x_ABI_CMicrosoft_CUI_CIconId iconId);
    HRESULT (STDMETHODCALLTYPE* SetPresenter)(__x_ABI_CMicrosoft_CUI_CWindowing_CIAppWindow* This,
        __x_ABI_CMicrosoft_CUI_CWindowing_CIAppWindowPresenter* appWindowPresenter);
    HRESULT (STDMETHODCALLTYPE* SetPresenterByKind)(__x_ABI_CMicrosoft_CUI_CWindowing_CIAppWindow* This,
        enum __x_ABI_CMicrosoft_CUI_CWindowing_CAppWindowPresenterKind appWindowPresenterKind);
    HRESULT (STDMETHODCALLTYPE* Show)(__x_ABI_CMicrosoft_CUI_CWindowing_CIAppWindow* This);
    HRESULT (STDMETHODCALLTYPE* ShowWithActivation)(__x_ABI_CMicrosoft_CUI_CWindowing_CIAppWindow* This,
        boolean activateWindow);
    HRESULT (STDMETHODCALLTYPE* add_Changed)(__x_ABI_CMicrosoft_CUI_CWindowing_CIAppWindow* This,
        __x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CUI__CWindowing__CAppWindow___x_ABI_CMicrosoft__CUI__CWindowing__CAppWindowChangedEventArgs* handler,
        EventRegistrationToken* token);
    HRESULT (STDMETHODCALLTYPE* remove_Changed)(__x_ABI_CMicrosoft_CUI_CWindowing_CIAppWindow* This,
        EventRegistrationToken token);
    HRESULT (STDMETHODCALLTYPE* add_Closing)(__x_ABI_CMicrosoft_CUI_CWindowing_CIAppWindow* This,
        __x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CUI__CWindowing__CAppWindow___x_ABI_CMicrosoft__CUI__CWindowing__CAppWindowClosingEventArgs* handler,
        EventRegistrationToken* token);
    HRESULT (STDMETHODCALLTYPE* remove_Closing)(__x_ABI_CMicrosoft_CUI_CWindowing_CIAppWindow* This,
        EventRegistrationToken token);
    HRESULT (STDMETHODCALLTYPE* add_Destroying)(__x_ABI_CMicrosoft_CUI_CWindowing_CIAppWindow* This,
        __x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CUI__CWindowing__CAppWindow_IInspectable* handler,
        EventRegistrationToken* token);
    HRESULT (STDMETHODCALLTYPE* remove_Destroying)(__x_ABI_CMicrosoft_CUI_CWindowing_CIAppWindow* This,
        EventRegistrationToken token);

        END_INTERFACE
    } __x_ABI_CMicrosoft_CUI_CWindowing_CIAppWindowVtbl;

    interface __x_ABI_CMicrosoft_CUI_CWindowing_CIAppWindow
    {
        CONST_VTBL struct __x_ABI_CMicrosoft_CUI_CWindowing_CIAppWindowVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CWindowing_CIAppWindow;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CWindowing_CIAppWindow_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CMicrosoft_CUI_CWindowing_CIAppWindow2_INTERFACE_DEFINED__)
    #define ____x_ABI_CMicrosoft_CUI_CWindowing_CIAppWindow2_INTERFACE_DEFINED__
    typedef struct __x_ABI_CMicrosoft_CUI_CWindowing_CIAppWindow2Vtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CUI_CWindowing_CIAppWindow2* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CUI_CWindowing_CIAppWindow2* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CUI_CWindowing_CIAppWindow2* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CUI_CWindowing_CIAppWindow2* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CUI_CWindowing_CIAppWindow2* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CUI_CWindowing_CIAppWindow2* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_ClientSize)(__x_ABI_CMicrosoft_CUI_CWindowing_CIAppWindow2* This,
        struct __x_ABI_CWindows_CGraphics_CSizeInt32* value);
    HRESULT (STDMETHODCALLTYPE* MoveInZOrderAtBottom)(__x_ABI_CMicrosoft_CUI_CWindowing_CIAppWindow2* This);
    HRESULT (STDMETHODCALLTYPE* MoveInZOrderAtTop)(__x_ABI_CMicrosoft_CUI_CWindowing_CIAppWindow2* This);
    HRESULT (STDMETHODCALLTYPE* MoveInZOrderBelow)(__x_ABI_CMicrosoft_CUI_CWindowing_CIAppWindow2* This,
        struct __x_ABI_CMicrosoft_CUI_CWindowId windowId);
    HRESULT (STDMETHODCALLTYPE* ResizeClient)(__x_ABI_CMicrosoft_CUI_CWindowing_CIAppWindow2* This,
        struct __x_ABI_CWindows_CGraphics_CSizeInt32 size);
    HRESULT (STDMETHODCALLTYPE* ShowOnceWithRequestedStartupState)(__x_ABI_CMicrosoft_CUI_CWindowing_CIAppWindow2* This);

        END_INTERFACE
    } __x_ABI_CMicrosoft_CUI_CWindowing_CIAppWindow2Vtbl;

    interface __x_ABI_CMicrosoft_CUI_CWindowing_CIAppWindow2
    {
        CONST_VTBL struct __x_ABI_CMicrosoft_CUI_CWindowing_CIAppWindow2Vtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CWindowing_CIAppWindow2;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CWindowing_CIAppWindow2_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CMicrosoft_CUI_CWindowing_CIAppWindow3_INTERFACE_DEFINED__)
    #define ____x_ABI_CMicrosoft_CUI_CWindowing_CIAppWindow3_INTERFACE_DEFINED__
    typedef struct __x_ABI_CMicrosoft_CUI_CWindowing_CIAppWindow3Vtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CUI_CWindowing_CIAppWindow3* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CUI_CWindowing_CIAppWindow3* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CUI_CWindowing_CIAppWindow3* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CUI_CWindowing_CIAppWindow3* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CUI_CWindowing_CIAppWindow3* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CUI_CWindowing_CIAppWindow3* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* AssociateWithDispatcherQueue)(__x_ABI_CMicrosoft_CUI_CWindowing_CIAppWindow3* This,
        __x_ABI_CMicrosoft_CUI_CDispatching_CIDispatcherQueue* dispatcherQueue);
    HRESULT (STDMETHODCALLTYPE* get_DispatcherQueue)(__x_ABI_CMicrosoft_CUI_CWindowing_CIAppWindow3* This,
        __x_ABI_CMicrosoft_CUI_CDispatching_CIDispatcherQueue** value);

        END_INTERFACE
    } __x_ABI_CMicrosoft_CUI_CWindowing_CIAppWindow3Vtbl;

    interface __x_ABI_CMicrosoft_CUI_CWindowing_CIAppWindow3
    {
        CONST_VTBL struct __x_ABI_CMicrosoft_CUI_CWindowing_CIAppWindow3Vtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CWindowing_CIAppWindow3;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CWindowing_CIAppWindow3_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CMicrosoft_CUI_CWindowing_CIAppWindowChangedEventArgs_INTERFACE_DEFINED__)
    #define ____x_ABI_CMicrosoft_CUI_CWindowing_CIAppWindowChangedEventArgs_INTERFACE_DEFINED__
    typedef struct __x_ABI_CMicrosoft_CUI_CWindowing_CIAppWindowChangedEventArgsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CUI_CWindowing_CIAppWindowChangedEventArgs* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CUI_CWindowing_CIAppWindowChangedEventArgs* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CUI_CWindowing_CIAppWindowChangedEventArgs* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CUI_CWindowing_CIAppWindowChangedEventArgs* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CUI_CWindowing_CIAppWindowChangedEventArgs* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CUI_CWindowing_CIAppWindowChangedEventArgs* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_DidPositionChange)(__x_ABI_CMicrosoft_CUI_CWindowing_CIAppWindowChangedEventArgs* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* get_DidPresenterChange)(__x_ABI_CMicrosoft_CUI_CWindowing_CIAppWindowChangedEventArgs* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* get_DidSizeChange)(__x_ABI_CMicrosoft_CUI_CWindowing_CIAppWindowChangedEventArgs* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* get_DidVisibilityChange)(__x_ABI_CMicrosoft_CUI_CWindowing_CIAppWindowChangedEventArgs* This,
        boolean* value);

        END_INTERFACE
    } __x_ABI_CMicrosoft_CUI_CWindowing_CIAppWindowChangedEventArgsVtbl;

    interface __x_ABI_CMicrosoft_CUI_CWindowing_CIAppWindowChangedEventArgs
    {
        CONST_VTBL struct __x_ABI_CMicrosoft_CUI_CWindowing_CIAppWindowChangedEventArgsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CWindowing_CIAppWindowChangedEventArgs;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CWindowing_CIAppWindowChangedEventArgs_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CMicrosoft_CUI_CWindowing_CIAppWindowChangedEventArgs2_INTERFACE_DEFINED__)
    #define ____x_ABI_CMicrosoft_CUI_CWindowing_CIAppWindowChangedEventArgs2_INTERFACE_DEFINED__
    typedef struct __x_ABI_CMicrosoft_CUI_CWindowing_CIAppWindowChangedEventArgs2Vtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CUI_CWindowing_CIAppWindowChangedEventArgs2* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CUI_CWindowing_CIAppWindowChangedEventArgs2* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CUI_CWindowing_CIAppWindowChangedEventArgs2* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CUI_CWindowing_CIAppWindowChangedEventArgs2* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CUI_CWindowing_CIAppWindowChangedEventArgs2* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CUI_CWindowing_CIAppWindowChangedEventArgs2* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_DidZOrderChange)(__x_ABI_CMicrosoft_CUI_CWindowing_CIAppWindowChangedEventArgs2* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* get_IsZOrderAtBottom)(__x_ABI_CMicrosoft_CUI_CWindowing_CIAppWindowChangedEventArgs2* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* get_IsZOrderAtTop)(__x_ABI_CMicrosoft_CUI_CWindowing_CIAppWindowChangedEventArgs2* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* get_ZOrderBelowWindowId)(__x_ABI_CMicrosoft_CUI_CWindowing_CIAppWindowChangedEventArgs2* This,
        struct __x_ABI_CMicrosoft_CUI_CWindowId* value);

        END_INTERFACE
    } __x_ABI_CMicrosoft_CUI_CWindowing_CIAppWindowChangedEventArgs2Vtbl;

    interface __x_ABI_CMicrosoft_CUI_CWindowing_CIAppWindowChangedEventArgs2
    {
        CONST_VTBL struct __x_ABI_CMicrosoft_CUI_CWindowing_CIAppWindowChangedEventArgs2Vtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CWindowing_CIAppWindowChangedEventArgs2;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CWindowing_CIAppWindowChangedEventArgs2_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CMicrosoft_CUI_CWindowing_CIAppWindowClosingEventArgs_INTERFACE_DEFINED__)
    #define ____x_ABI_CMicrosoft_CUI_CWindowing_CIAppWindowClosingEventArgs_INTERFACE_DEFINED__
    typedef struct __x_ABI_CMicrosoft_CUI_CWindowing_CIAppWindowClosingEventArgsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CUI_CWindowing_CIAppWindowClosingEventArgs* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CUI_CWindowing_CIAppWindowClosingEventArgs* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CUI_CWindowing_CIAppWindowClosingEventArgs* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CUI_CWindowing_CIAppWindowClosingEventArgs* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CUI_CWindowing_CIAppWindowClosingEventArgs* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CUI_CWindowing_CIAppWindowClosingEventArgs* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Cancel)(__x_ABI_CMicrosoft_CUI_CWindowing_CIAppWindowClosingEventArgs* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* put_Cancel)(__x_ABI_CMicrosoft_CUI_CWindowing_CIAppWindowClosingEventArgs* This,
        boolean value);

        END_INTERFACE
    } __x_ABI_CMicrosoft_CUI_CWindowing_CIAppWindowClosingEventArgsVtbl;

    interface __x_ABI_CMicrosoft_CUI_CWindowing_CIAppWindowClosingEventArgs
    {
        CONST_VTBL struct __x_ABI_CMicrosoft_CUI_CWindowing_CIAppWindowClosingEventArgsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CWindowing_CIAppWindowClosingEventArgs;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CWindowing_CIAppWindowClosingEventArgs_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CMicrosoft_CUI_CWindowing_CIAppWindowPresenter_INTERFACE_DEFINED__)
    #define ____x_ABI_CMicrosoft_CUI_CWindowing_CIAppWindowPresenter_INTERFACE_DEFINED__
    typedef struct __x_ABI_CMicrosoft_CUI_CWindowing_CIAppWindowPresenterVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CUI_CWindowing_CIAppWindowPresenter* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CUI_CWindowing_CIAppWindowPresenter* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CUI_CWindowing_CIAppWindowPresenter* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CUI_CWindowing_CIAppWindowPresenter* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CUI_CWindowing_CIAppWindowPresenter* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CUI_CWindowing_CIAppWindowPresenter* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Kind)(__x_ABI_CMicrosoft_CUI_CWindowing_CIAppWindowPresenter* This,
        enum __x_ABI_CMicrosoft_CUI_CWindowing_CAppWindowPresenterKind* value);

        END_INTERFACE
    } __x_ABI_CMicrosoft_CUI_CWindowing_CIAppWindowPresenterVtbl;

    interface __x_ABI_CMicrosoft_CUI_CWindowing_CIAppWindowPresenter
    {
        CONST_VTBL struct __x_ABI_CMicrosoft_CUI_CWindowing_CIAppWindowPresenterVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CWindowing_CIAppWindowPresenter;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CWindowing_CIAppWindowPresenter_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CMicrosoft_CUI_CWindowing_CIAppWindowPresenterFactory_INTERFACE_DEFINED__)
    #define ____x_ABI_CMicrosoft_CUI_CWindowing_CIAppWindowPresenterFactory_INTERFACE_DEFINED__
    typedef struct __x_ABI_CMicrosoft_CUI_CWindowing_CIAppWindowPresenterFactoryVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CUI_CWindowing_CIAppWindowPresenterFactory* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CUI_CWindowing_CIAppWindowPresenterFactory* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CUI_CWindowing_CIAppWindowPresenterFactory* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CUI_CWindowing_CIAppWindowPresenterFactory* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CUI_CWindowing_CIAppWindowPresenterFactory* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CUI_CWindowing_CIAppWindowPresenterFactory* This,
            TrustLevel* trustLevel);
    
        END_INTERFACE
    } __x_ABI_CMicrosoft_CUI_CWindowing_CIAppWindowPresenterFactoryVtbl;

    interface __x_ABI_CMicrosoft_CUI_CWindowing_CIAppWindowPresenterFactory
    {
        CONST_VTBL struct __x_ABI_CMicrosoft_CUI_CWindowing_CIAppWindowPresenterFactoryVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CWindowing_CIAppWindowPresenterFactory;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CWindowing_CIAppWindowPresenterFactory_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CMicrosoft_CUI_CWindowing_CIAppWindowStatics_INTERFACE_DEFINED__)
    #define ____x_ABI_CMicrosoft_CUI_CWindowing_CIAppWindowStatics_INTERFACE_DEFINED__
    typedef struct __x_ABI_CMicrosoft_CUI_CWindowing_CIAppWindowStaticsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CUI_CWindowing_CIAppWindowStatics* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CUI_CWindowing_CIAppWindowStatics* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CUI_CWindowing_CIAppWindowStatics* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CUI_CWindowing_CIAppWindowStatics* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CUI_CWindowing_CIAppWindowStatics* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CUI_CWindowing_CIAppWindowStatics* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* Create)(__x_ABI_CMicrosoft_CUI_CWindowing_CIAppWindowStatics* This,
        __x_ABI_CMicrosoft_CUI_CWindowing_CIAppWindow** result);
    HRESULT (STDMETHODCALLTYPE* CreateWithPresenter)(__x_ABI_CMicrosoft_CUI_CWindowing_CIAppWindowStatics* This,
        __x_ABI_CMicrosoft_CUI_CWindowing_CIAppWindowPresenter* appWindowPresenter,
        __x_ABI_CMicrosoft_CUI_CWindowing_CIAppWindow** result);
    HRESULT (STDMETHODCALLTYPE* CreateWithPresenterAndOwner)(__x_ABI_CMicrosoft_CUI_CWindowing_CIAppWindowStatics* This,
        __x_ABI_CMicrosoft_CUI_CWindowing_CIAppWindowPresenter* appWindowPresenter,
        struct __x_ABI_CMicrosoft_CUI_CWindowId ownerWindowId,
        __x_ABI_CMicrosoft_CUI_CWindowing_CIAppWindow** result);
    HRESULT (STDMETHODCALLTYPE* GetFromWindowId)(__x_ABI_CMicrosoft_CUI_CWindowing_CIAppWindowStatics* This,
        struct __x_ABI_CMicrosoft_CUI_CWindowId windowId,
        __x_ABI_CMicrosoft_CUI_CWindowing_CIAppWindow** result);

        END_INTERFACE
    } __x_ABI_CMicrosoft_CUI_CWindowing_CIAppWindowStaticsVtbl;

    interface __x_ABI_CMicrosoft_CUI_CWindowing_CIAppWindowStatics
    {
        CONST_VTBL struct __x_ABI_CMicrosoft_CUI_CWindowing_CIAppWindowStaticsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CWindowing_CIAppWindowStatics;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CWindowing_CIAppWindowStatics_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CMicrosoft_CUI_CWindowing_CIAppWindowStatics2_INTERFACE_DEFINED__)
    #define ____x_ABI_CMicrosoft_CUI_CWindowing_CIAppWindowStatics2_INTERFACE_DEFINED__
    typedef struct __x_ABI_CMicrosoft_CUI_CWindowing_CIAppWindowStatics2Vtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CUI_CWindowing_CIAppWindowStatics2* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CUI_CWindowing_CIAppWindowStatics2* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CUI_CWindowing_CIAppWindowStatics2* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CUI_CWindowing_CIAppWindowStatics2* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CUI_CWindowing_CIAppWindowStatics2* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CUI_CWindowing_CIAppWindowStatics2* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* CreateWithDispatcherQueue)(__x_ABI_CMicrosoft_CUI_CWindowing_CIAppWindowStatics2* This,
        __x_ABI_CMicrosoft_CUI_CWindowing_CIAppWindowPresenter* appWindowPresenter,
        struct __x_ABI_CMicrosoft_CUI_CWindowId ownerWindowId,
        __x_ABI_CMicrosoft_CUI_CDispatching_CIDispatcherQueue* DispatcherQueue,
        __x_ABI_CMicrosoft_CUI_CWindowing_CIAppWindow** result);

        END_INTERFACE
    } __x_ABI_CMicrosoft_CUI_CWindowing_CIAppWindowStatics2Vtbl;

    interface __x_ABI_CMicrosoft_CUI_CWindowing_CIAppWindowStatics2
    {
        CONST_VTBL struct __x_ABI_CMicrosoft_CUI_CWindowing_CIAppWindowStatics2Vtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CWindowing_CIAppWindowStatics2;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CWindowing_CIAppWindowStatics2_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CMicrosoft_CUI_CWindowing_CIAppWindowTitleBar_INTERFACE_DEFINED__)
    #define ____x_ABI_CMicrosoft_CUI_CWindowing_CIAppWindowTitleBar_INTERFACE_DEFINED__
    typedef struct __x_ABI_CMicrosoft_CUI_CWindowing_CIAppWindowTitleBarVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CUI_CWindowing_CIAppWindowTitleBar* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CUI_CWindowing_CIAppWindowTitleBar* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CUI_CWindowing_CIAppWindowTitleBar* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CUI_CWindowing_CIAppWindowTitleBar* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CUI_CWindowing_CIAppWindowTitleBar* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CUI_CWindowing_CIAppWindowTitleBar* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_BackgroundColor)(__x_ABI_CMicrosoft_CUI_CWindowing_CIAppWindowTitleBar* This,
        __x_ABI_C__FIReference_1___x_ABI_CWindows__CUI__CColor** value);
    HRESULT (STDMETHODCALLTYPE* put_BackgroundColor)(__x_ABI_CMicrosoft_CUI_CWindowing_CIAppWindowTitleBar* This,
        __x_ABI_C__FIReference_1___x_ABI_CWindows__CUI__CColor* value);
    HRESULT (STDMETHODCALLTYPE* get_ButtonBackgroundColor)(__x_ABI_CMicrosoft_CUI_CWindowing_CIAppWindowTitleBar* This,
        __x_ABI_C__FIReference_1___x_ABI_CWindows__CUI__CColor** value);
    HRESULT (STDMETHODCALLTYPE* put_ButtonBackgroundColor)(__x_ABI_CMicrosoft_CUI_CWindowing_CIAppWindowTitleBar* This,
        __x_ABI_C__FIReference_1___x_ABI_CWindows__CUI__CColor* value);
    HRESULT (STDMETHODCALLTYPE* get_ButtonForegroundColor)(__x_ABI_CMicrosoft_CUI_CWindowing_CIAppWindowTitleBar* This,
        __x_ABI_C__FIReference_1___x_ABI_CWindows__CUI__CColor** value);
    HRESULT (STDMETHODCALLTYPE* put_ButtonForegroundColor)(__x_ABI_CMicrosoft_CUI_CWindowing_CIAppWindowTitleBar* This,
        __x_ABI_C__FIReference_1___x_ABI_CWindows__CUI__CColor* value);
    HRESULT (STDMETHODCALLTYPE* get_ButtonHoverBackgroundColor)(__x_ABI_CMicrosoft_CUI_CWindowing_CIAppWindowTitleBar* This,
        __x_ABI_C__FIReference_1___x_ABI_CWindows__CUI__CColor** value);
    HRESULT (STDMETHODCALLTYPE* put_ButtonHoverBackgroundColor)(__x_ABI_CMicrosoft_CUI_CWindowing_CIAppWindowTitleBar* This,
        __x_ABI_C__FIReference_1___x_ABI_CWindows__CUI__CColor* value);
    HRESULT (STDMETHODCALLTYPE* get_ButtonHoverForegroundColor)(__x_ABI_CMicrosoft_CUI_CWindowing_CIAppWindowTitleBar* This,
        __x_ABI_C__FIReference_1___x_ABI_CWindows__CUI__CColor** value);
    HRESULT (STDMETHODCALLTYPE* put_ButtonHoverForegroundColor)(__x_ABI_CMicrosoft_CUI_CWindowing_CIAppWindowTitleBar* This,
        __x_ABI_C__FIReference_1___x_ABI_CWindows__CUI__CColor* value);
    HRESULT (STDMETHODCALLTYPE* get_ButtonInactiveBackgroundColor)(__x_ABI_CMicrosoft_CUI_CWindowing_CIAppWindowTitleBar* This,
        __x_ABI_C__FIReference_1___x_ABI_CWindows__CUI__CColor** value);
    HRESULT (STDMETHODCALLTYPE* put_ButtonInactiveBackgroundColor)(__x_ABI_CMicrosoft_CUI_CWindowing_CIAppWindowTitleBar* This,
        __x_ABI_C__FIReference_1___x_ABI_CWindows__CUI__CColor* value);
    HRESULT (STDMETHODCALLTYPE* get_ButtonInactiveForegroundColor)(__x_ABI_CMicrosoft_CUI_CWindowing_CIAppWindowTitleBar* This,
        __x_ABI_C__FIReference_1___x_ABI_CWindows__CUI__CColor** value);
    HRESULT (STDMETHODCALLTYPE* put_ButtonInactiveForegroundColor)(__x_ABI_CMicrosoft_CUI_CWindowing_CIAppWindowTitleBar* This,
        __x_ABI_C__FIReference_1___x_ABI_CWindows__CUI__CColor* value);
    HRESULT (STDMETHODCALLTYPE* get_ButtonPressedBackgroundColor)(__x_ABI_CMicrosoft_CUI_CWindowing_CIAppWindowTitleBar* This,
        __x_ABI_C__FIReference_1___x_ABI_CWindows__CUI__CColor** value);
    HRESULT (STDMETHODCALLTYPE* put_ButtonPressedBackgroundColor)(__x_ABI_CMicrosoft_CUI_CWindowing_CIAppWindowTitleBar* This,
        __x_ABI_C__FIReference_1___x_ABI_CWindows__CUI__CColor* value);
    HRESULT (STDMETHODCALLTYPE* get_ButtonPressedForegroundColor)(__x_ABI_CMicrosoft_CUI_CWindowing_CIAppWindowTitleBar* This,
        __x_ABI_C__FIReference_1___x_ABI_CWindows__CUI__CColor** value);
    HRESULT (STDMETHODCALLTYPE* put_ButtonPressedForegroundColor)(__x_ABI_CMicrosoft_CUI_CWindowing_CIAppWindowTitleBar* This,
        __x_ABI_C__FIReference_1___x_ABI_CWindows__CUI__CColor* value);
    HRESULT (STDMETHODCALLTYPE* get_ExtendsContentIntoTitleBar)(__x_ABI_CMicrosoft_CUI_CWindowing_CIAppWindowTitleBar* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* put_ExtendsContentIntoTitleBar)(__x_ABI_CMicrosoft_CUI_CWindowing_CIAppWindowTitleBar* This,
        boolean value);
    HRESULT (STDMETHODCALLTYPE* get_ForegroundColor)(__x_ABI_CMicrosoft_CUI_CWindowing_CIAppWindowTitleBar* This,
        __x_ABI_C__FIReference_1___x_ABI_CWindows__CUI__CColor** value);
    HRESULT (STDMETHODCALLTYPE* put_ForegroundColor)(__x_ABI_CMicrosoft_CUI_CWindowing_CIAppWindowTitleBar* This,
        __x_ABI_C__FIReference_1___x_ABI_CWindows__CUI__CColor* value);
    HRESULT (STDMETHODCALLTYPE* get_Height)(__x_ABI_CMicrosoft_CUI_CWindowing_CIAppWindowTitleBar* This,
        INT32* value);
    HRESULT (STDMETHODCALLTYPE* get_IconShowOptions)(__x_ABI_CMicrosoft_CUI_CWindowing_CIAppWindowTitleBar* This,
        enum __x_ABI_CMicrosoft_CUI_CWindowing_CIconShowOptions* value);
    HRESULT (STDMETHODCALLTYPE* put_IconShowOptions)(__x_ABI_CMicrosoft_CUI_CWindowing_CIAppWindowTitleBar* This,
        enum __x_ABI_CMicrosoft_CUI_CWindowing_CIconShowOptions value);
    HRESULT (STDMETHODCALLTYPE* get_InactiveBackgroundColor)(__x_ABI_CMicrosoft_CUI_CWindowing_CIAppWindowTitleBar* This,
        __x_ABI_C__FIReference_1___x_ABI_CWindows__CUI__CColor** value);
    HRESULT (STDMETHODCALLTYPE* put_InactiveBackgroundColor)(__x_ABI_CMicrosoft_CUI_CWindowing_CIAppWindowTitleBar* This,
        __x_ABI_C__FIReference_1___x_ABI_CWindows__CUI__CColor* value);
    HRESULT (STDMETHODCALLTYPE* get_InactiveForegroundColor)(__x_ABI_CMicrosoft_CUI_CWindowing_CIAppWindowTitleBar* This,
        __x_ABI_C__FIReference_1___x_ABI_CWindows__CUI__CColor** value);
    HRESULT (STDMETHODCALLTYPE* put_InactiveForegroundColor)(__x_ABI_CMicrosoft_CUI_CWindowing_CIAppWindowTitleBar* This,
        __x_ABI_C__FIReference_1___x_ABI_CWindows__CUI__CColor* value);
    HRESULT (STDMETHODCALLTYPE* get_LeftInset)(__x_ABI_CMicrosoft_CUI_CWindowing_CIAppWindowTitleBar* This,
        INT32* value);
    HRESULT (STDMETHODCALLTYPE* get_RightInset)(__x_ABI_CMicrosoft_CUI_CWindowing_CIAppWindowTitleBar* This,
        INT32* value);
    HRESULT (STDMETHODCALLTYPE* ResetToDefault)(__x_ABI_CMicrosoft_CUI_CWindowing_CIAppWindowTitleBar* This);
    HRESULT (STDMETHODCALLTYPE* SetDragRectangles)(__x_ABI_CMicrosoft_CUI_CWindowing_CIAppWindowTitleBar* This,
        UINT32 valueLength,
        struct __x_ABI_CWindows_CGraphics_CRectInt32* value);

        END_INTERFACE
    } __x_ABI_CMicrosoft_CUI_CWindowing_CIAppWindowTitleBarVtbl;

    interface __x_ABI_CMicrosoft_CUI_CWindowing_CIAppWindowTitleBar
    {
        CONST_VTBL struct __x_ABI_CMicrosoft_CUI_CWindowing_CIAppWindowTitleBarVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CWindowing_CIAppWindowTitleBar;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CWindowing_CIAppWindowTitleBar_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CMicrosoft_CUI_CWindowing_CIAppWindowTitleBar2_INTERFACE_DEFINED__)
    #define ____x_ABI_CMicrosoft_CUI_CWindowing_CIAppWindowTitleBar2_INTERFACE_DEFINED__
    typedef struct __x_ABI_CMicrosoft_CUI_CWindowing_CIAppWindowTitleBar2Vtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CUI_CWindowing_CIAppWindowTitleBar2* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CUI_CWindowing_CIAppWindowTitleBar2* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CUI_CWindowing_CIAppWindowTitleBar2* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CUI_CWindowing_CIAppWindowTitleBar2* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CUI_CWindowing_CIAppWindowTitleBar2* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CUI_CWindowing_CIAppWindowTitleBar2* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_PreferredHeightOption)(__x_ABI_CMicrosoft_CUI_CWindowing_CIAppWindowTitleBar2* This,
        enum __x_ABI_CMicrosoft_CUI_CWindowing_CTitleBarHeightOption* value);
    HRESULT (STDMETHODCALLTYPE* put_PreferredHeightOption)(__x_ABI_CMicrosoft_CUI_CWindowing_CIAppWindowTitleBar2* This,
        enum __x_ABI_CMicrosoft_CUI_CWindowing_CTitleBarHeightOption value);

        END_INTERFACE
    } __x_ABI_CMicrosoft_CUI_CWindowing_CIAppWindowTitleBar2Vtbl;

    interface __x_ABI_CMicrosoft_CUI_CWindowing_CIAppWindowTitleBar2
    {
        CONST_VTBL struct __x_ABI_CMicrosoft_CUI_CWindowing_CIAppWindowTitleBar2Vtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CWindowing_CIAppWindowTitleBar2;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CWindowing_CIAppWindowTitleBar2_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CMicrosoft_CUI_CWindowing_CIAppWindowTitleBarStatics_INTERFACE_DEFINED__)
    #define ____x_ABI_CMicrosoft_CUI_CWindowing_CIAppWindowTitleBarStatics_INTERFACE_DEFINED__
    typedef struct __x_ABI_CMicrosoft_CUI_CWindowing_CIAppWindowTitleBarStaticsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CUI_CWindowing_CIAppWindowTitleBarStatics* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CUI_CWindowing_CIAppWindowTitleBarStatics* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CUI_CWindowing_CIAppWindowTitleBarStatics* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CUI_CWindowing_CIAppWindowTitleBarStatics* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CUI_CWindowing_CIAppWindowTitleBarStatics* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CUI_CWindowing_CIAppWindowTitleBarStatics* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* IsCustomizationSupported)(__x_ABI_CMicrosoft_CUI_CWindowing_CIAppWindowTitleBarStatics* This,
        boolean* result);

        END_INTERFACE
    } __x_ABI_CMicrosoft_CUI_CWindowing_CIAppWindowTitleBarStaticsVtbl;

    interface __x_ABI_CMicrosoft_CUI_CWindowing_CIAppWindowTitleBarStatics
    {
        CONST_VTBL struct __x_ABI_CMicrosoft_CUI_CWindowing_CIAppWindowTitleBarStaticsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CWindowing_CIAppWindowTitleBarStatics;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CWindowing_CIAppWindowTitleBarStatics_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CMicrosoft_CUI_CWindowing_CICompactOverlayPresenter_INTERFACE_DEFINED__)
    #define ____x_ABI_CMicrosoft_CUI_CWindowing_CICompactOverlayPresenter_INTERFACE_DEFINED__
    typedef struct __x_ABI_CMicrosoft_CUI_CWindowing_CICompactOverlayPresenterVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CUI_CWindowing_CICompactOverlayPresenter* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CUI_CWindowing_CICompactOverlayPresenter* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CUI_CWindowing_CICompactOverlayPresenter* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CUI_CWindowing_CICompactOverlayPresenter* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CUI_CWindowing_CICompactOverlayPresenter* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CUI_CWindowing_CICompactOverlayPresenter* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_InitialSize)(__x_ABI_CMicrosoft_CUI_CWindowing_CICompactOverlayPresenter* This,
        enum __x_ABI_CMicrosoft_CUI_CWindowing_CCompactOverlaySize* value);
    HRESULT (STDMETHODCALLTYPE* put_InitialSize)(__x_ABI_CMicrosoft_CUI_CWindowing_CICompactOverlayPresenter* This,
        enum __x_ABI_CMicrosoft_CUI_CWindowing_CCompactOverlaySize value);

        END_INTERFACE
    } __x_ABI_CMicrosoft_CUI_CWindowing_CICompactOverlayPresenterVtbl;

    interface __x_ABI_CMicrosoft_CUI_CWindowing_CICompactOverlayPresenter
    {
        CONST_VTBL struct __x_ABI_CMicrosoft_CUI_CWindowing_CICompactOverlayPresenterVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CWindowing_CICompactOverlayPresenter;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CWindowing_CICompactOverlayPresenter_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CMicrosoft_CUI_CWindowing_CICompactOverlayPresenterStatics_INTERFACE_DEFINED__)
    #define ____x_ABI_CMicrosoft_CUI_CWindowing_CICompactOverlayPresenterStatics_INTERFACE_DEFINED__
    typedef struct __x_ABI_CMicrosoft_CUI_CWindowing_CICompactOverlayPresenterStaticsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CUI_CWindowing_CICompactOverlayPresenterStatics* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CUI_CWindowing_CICompactOverlayPresenterStatics* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CUI_CWindowing_CICompactOverlayPresenterStatics* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CUI_CWindowing_CICompactOverlayPresenterStatics* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CUI_CWindowing_CICompactOverlayPresenterStatics* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CUI_CWindowing_CICompactOverlayPresenterStatics* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* Create)(__x_ABI_CMicrosoft_CUI_CWindowing_CICompactOverlayPresenterStatics* This,
        __x_ABI_CMicrosoft_CUI_CWindowing_CICompactOverlayPresenter** result);

        END_INTERFACE
    } __x_ABI_CMicrosoft_CUI_CWindowing_CICompactOverlayPresenterStaticsVtbl;

    interface __x_ABI_CMicrosoft_CUI_CWindowing_CICompactOverlayPresenterStatics
    {
        CONST_VTBL struct __x_ABI_CMicrosoft_CUI_CWindowing_CICompactOverlayPresenterStaticsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CWindowing_CICompactOverlayPresenterStatics;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CWindowing_CICompactOverlayPresenterStatics_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CMicrosoft_CUI_CWindowing_CIDisplayArea_INTERFACE_DEFINED__)
    #define ____x_ABI_CMicrosoft_CUI_CWindowing_CIDisplayArea_INTERFACE_DEFINED__
    typedef struct __x_ABI_CMicrosoft_CUI_CWindowing_CIDisplayAreaVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CUI_CWindowing_CIDisplayArea* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CUI_CWindowing_CIDisplayArea* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CUI_CWindowing_CIDisplayArea* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CUI_CWindowing_CIDisplayArea* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CUI_CWindowing_CIDisplayArea* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CUI_CWindowing_CIDisplayArea* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_DisplayId)(__x_ABI_CMicrosoft_CUI_CWindowing_CIDisplayArea* This,
        struct __x_ABI_CMicrosoft_CUI_CDisplayId* value);
    HRESULT (STDMETHODCALLTYPE* get_IsPrimary)(__x_ABI_CMicrosoft_CUI_CWindowing_CIDisplayArea* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* get_OuterBounds)(__x_ABI_CMicrosoft_CUI_CWindowing_CIDisplayArea* This,
        struct __x_ABI_CWindows_CGraphics_CRectInt32* value);
    HRESULT (STDMETHODCALLTYPE* get_WorkArea)(__x_ABI_CMicrosoft_CUI_CWindowing_CIDisplayArea* This,
        struct __x_ABI_CWindows_CGraphics_CRectInt32* value);

        END_INTERFACE
    } __x_ABI_CMicrosoft_CUI_CWindowing_CIDisplayAreaVtbl;

    interface __x_ABI_CMicrosoft_CUI_CWindowing_CIDisplayArea
    {
        CONST_VTBL struct __x_ABI_CMicrosoft_CUI_CWindowing_CIDisplayAreaVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CWindowing_CIDisplayArea;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CWindowing_CIDisplayArea_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CMicrosoft_CUI_CWindowing_CIDisplayAreaStatics_INTERFACE_DEFINED__)
    #define ____x_ABI_CMicrosoft_CUI_CWindowing_CIDisplayAreaStatics_INTERFACE_DEFINED__
    typedef struct __x_ABI_CMicrosoft_CUI_CWindowing_CIDisplayAreaStaticsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CUI_CWindowing_CIDisplayAreaStatics* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CUI_CWindowing_CIDisplayAreaStatics* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CUI_CWindowing_CIDisplayAreaStatics* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CUI_CWindowing_CIDisplayAreaStatics* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CUI_CWindowing_CIDisplayAreaStatics* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CUI_CWindowing_CIDisplayAreaStatics* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Primary)(__x_ABI_CMicrosoft_CUI_CWindowing_CIDisplayAreaStatics* This,
        __x_ABI_CMicrosoft_CUI_CWindowing_CIDisplayArea** value);
    HRESULT (STDMETHODCALLTYPE* CreateWatcher)(__x_ABI_CMicrosoft_CUI_CWindowing_CIDisplayAreaStatics* This,
        __x_ABI_CMicrosoft_CUI_CWindowing_CIDisplayAreaWatcher** result);
    HRESULT (STDMETHODCALLTYPE* FindAll)(__x_ABI_CMicrosoft_CUI_CWindowing_CIDisplayAreaStatics* This,
        __x_ABI_C__FIVectorView_1___x_ABI_CMicrosoft__CUI__CWindowing__CDisplayArea** result);
    HRESULT (STDMETHODCALLTYPE* GetFromWindowId)(__x_ABI_CMicrosoft_CUI_CWindowing_CIDisplayAreaStatics* This,
        struct __x_ABI_CMicrosoft_CUI_CWindowId windowId,
        enum __x_ABI_CMicrosoft_CUI_CWindowing_CDisplayAreaFallback displayAreaFallback,
        __x_ABI_CMicrosoft_CUI_CWindowing_CIDisplayArea** result);
    HRESULT (STDMETHODCALLTYPE* GetFromPoint)(__x_ABI_CMicrosoft_CUI_CWindowing_CIDisplayAreaStatics* This,
        struct __x_ABI_CWindows_CGraphics_CPointInt32 point,
        enum __x_ABI_CMicrosoft_CUI_CWindowing_CDisplayAreaFallback displayAreaFallback,
        __x_ABI_CMicrosoft_CUI_CWindowing_CIDisplayArea** result);
    HRESULT (STDMETHODCALLTYPE* GetFromRect)(__x_ABI_CMicrosoft_CUI_CWindowing_CIDisplayAreaStatics* This,
        struct __x_ABI_CWindows_CGraphics_CRectInt32 rect,
        enum __x_ABI_CMicrosoft_CUI_CWindowing_CDisplayAreaFallback displayAreaFallback,
        __x_ABI_CMicrosoft_CUI_CWindowing_CIDisplayArea** result);

        END_INTERFACE
    } __x_ABI_CMicrosoft_CUI_CWindowing_CIDisplayAreaStaticsVtbl;

    interface __x_ABI_CMicrosoft_CUI_CWindowing_CIDisplayAreaStatics
    {
        CONST_VTBL struct __x_ABI_CMicrosoft_CUI_CWindowing_CIDisplayAreaStaticsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CWindowing_CIDisplayAreaStatics;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CWindowing_CIDisplayAreaStatics_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CMicrosoft_CUI_CWindowing_CIDisplayAreaStatics2_INTERFACE_DEFINED__)
    #define ____x_ABI_CMicrosoft_CUI_CWindowing_CIDisplayAreaStatics2_INTERFACE_DEFINED__
    typedef struct __x_ABI_CMicrosoft_CUI_CWindowing_CIDisplayAreaStatics2Vtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CUI_CWindowing_CIDisplayAreaStatics2* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CUI_CWindowing_CIDisplayAreaStatics2* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CUI_CWindowing_CIDisplayAreaStatics2* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CUI_CWindowing_CIDisplayAreaStatics2* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CUI_CWindowing_CIDisplayAreaStatics2* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CUI_CWindowing_CIDisplayAreaStatics2* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* GetFromDisplayId)(__x_ABI_CMicrosoft_CUI_CWindowing_CIDisplayAreaStatics2* This,
        struct __x_ABI_CMicrosoft_CUI_CDisplayId displayId,
        __x_ABI_CMicrosoft_CUI_CWindowing_CIDisplayArea** result);

        END_INTERFACE
    } __x_ABI_CMicrosoft_CUI_CWindowing_CIDisplayAreaStatics2Vtbl;

    interface __x_ABI_CMicrosoft_CUI_CWindowing_CIDisplayAreaStatics2
    {
        CONST_VTBL struct __x_ABI_CMicrosoft_CUI_CWindowing_CIDisplayAreaStatics2Vtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CWindowing_CIDisplayAreaStatics2;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CWindowing_CIDisplayAreaStatics2_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CMicrosoft_CUI_CWindowing_CIDisplayAreaWatcher_INTERFACE_DEFINED__)
    #define ____x_ABI_CMicrosoft_CUI_CWindowing_CIDisplayAreaWatcher_INTERFACE_DEFINED__
    typedef struct __x_ABI_CMicrosoft_CUI_CWindowing_CIDisplayAreaWatcherVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CUI_CWindowing_CIDisplayAreaWatcher* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CUI_CWindowing_CIDisplayAreaWatcher* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CUI_CWindowing_CIDisplayAreaWatcher* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CUI_CWindowing_CIDisplayAreaWatcher* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CUI_CWindowing_CIDisplayAreaWatcher* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CUI_CWindowing_CIDisplayAreaWatcher* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Status)(__x_ABI_CMicrosoft_CUI_CWindowing_CIDisplayAreaWatcher* This,
        enum __x_ABI_CMicrosoft_CUI_CWindowing_CDisplayAreaWatcherStatus* value);
    HRESULT (STDMETHODCALLTYPE* Start)(__x_ABI_CMicrosoft_CUI_CWindowing_CIDisplayAreaWatcher* This);
    HRESULT (STDMETHODCALLTYPE* Stop)(__x_ABI_CMicrosoft_CUI_CWindowing_CIDisplayAreaWatcher* This);
    HRESULT (STDMETHODCALLTYPE* add_Added)(__x_ABI_CMicrosoft_CUI_CWindowing_CIDisplayAreaWatcher* This,
        __x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CUI__CWindowing__CDisplayAreaWatcher___x_ABI_CMicrosoft__CUI__CWindowing__CDisplayArea* handler,
        EventRegistrationToken* token);
    HRESULT (STDMETHODCALLTYPE* remove_Added)(__x_ABI_CMicrosoft_CUI_CWindowing_CIDisplayAreaWatcher* This,
        EventRegistrationToken token);
    HRESULT (STDMETHODCALLTYPE* add_EnumerationCompleted)(__x_ABI_CMicrosoft_CUI_CWindowing_CIDisplayAreaWatcher* This,
        __x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CUI__CWindowing__CDisplayAreaWatcher_IInspectable* handler,
        EventRegistrationToken* token);
    HRESULT (STDMETHODCALLTYPE* remove_EnumerationCompleted)(__x_ABI_CMicrosoft_CUI_CWindowing_CIDisplayAreaWatcher* This,
        EventRegistrationToken token);
    HRESULT (STDMETHODCALLTYPE* add_Removed)(__x_ABI_CMicrosoft_CUI_CWindowing_CIDisplayAreaWatcher* This,
        __x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CUI__CWindowing__CDisplayAreaWatcher___x_ABI_CMicrosoft__CUI__CWindowing__CDisplayArea* handler,
        EventRegistrationToken* token);
    HRESULT (STDMETHODCALLTYPE* remove_Removed)(__x_ABI_CMicrosoft_CUI_CWindowing_CIDisplayAreaWatcher* This,
        EventRegistrationToken token);
    HRESULT (STDMETHODCALLTYPE* add_Stopped)(__x_ABI_CMicrosoft_CUI_CWindowing_CIDisplayAreaWatcher* This,
        __x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CUI__CWindowing__CDisplayAreaWatcher_IInspectable* handler,
        EventRegistrationToken* token);
    HRESULT (STDMETHODCALLTYPE* remove_Stopped)(__x_ABI_CMicrosoft_CUI_CWindowing_CIDisplayAreaWatcher* This,
        EventRegistrationToken token);
    HRESULT (STDMETHODCALLTYPE* add_Updated)(__x_ABI_CMicrosoft_CUI_CWindowing_CIDisplayAreaWatcher* This,
        __x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CUI__CWindowing__CDisplayAreaWatcher___x_ABI_CMicrosoft__CUI__CWindowing__CDisplayArea* handler,
        EventRegistrationToken* token);
    HRESULT (STDMETHODCALLTYPE* remove_Updated)(__x_ABI_CMicrosoft_CUI_CWindowing_CIDisplayAreaWatcher* This,
        EventRegistrationToken token);

        END_INTERFACE
    } __x_ABI_CMicrosoft_CUI_CWindowing_CIDisplayAreaWatcherVtbl;

    interface __x_ABI_CMicrosoft_CUI_CWindowing_CIDisplayAreaWatcher
    {
        CONST_VTBL struct __x_ABI_CMicrosoft_CUI_CWindowing_CIDisplayAreaWatcherVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CWindowing_CIDisplayAreaWatcher;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CWindowing_CIDisplayAreaWatcher_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CMicrosoft_CUI_CWindowing_CIFullScreenPresenter_INTERFACE_DEFINED__)
    #define ____x_ABI_CMicrosoft_CUI_CWindowing_CIFullScreenPresenter_INTERFACE_DEFINED__
    typedef struct __x_ABI_CMicrosoft_CUI_CWindowing_CIFullScreenPresenterVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CUI_CWindowing_CIFullScreenPresenter* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CUI_CWindowing_CIFullScreenPresenter* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CUI_CWindowing_CIFullScreenPresenter* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CUI_CWindowing_CIFullScreenPresenter* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CUI_CWindowing_CIFullScreenPresenter* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CUI_CWindowing_CIFullScreenPresenter* This,
            TrustLevel* trustLevel);
    
        END_INTERFACE
    } __x_ABI_CMicrosoft_CUI_CWindowing_CIFullScreenPresenterVtbl;

    interface __x_ABI_CMicrosoft_CUI_CWindowing_CIFullScreenPresenter
    {
        CONST_VTBL struct __x_ABI_CMicrosoft_CUI_CWindowing_CIFullScreenPresenterVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CWindowing_CIFullScreenPresenter;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CWindowing_CIFullScreenPresenter_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CMicrosoft_CUI_CWindowing_CIFullScreenPresenterStatics_INTERFACE_DEFINED__)
    #define ____x_ABI_CMicrosoft_CUI_CWindowing_CIFullScreenPresenterStatics_INTERFACE_DEFINED__
    typedef struct __x_ABI_CMicrosoft_CUI_CWindowing_CIFullScreenPresenterStaticsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CUI_CWindowing_CIFullScreenPresenterStatics* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CUI_CWindowing_CIFullScreenPresenterStatics* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CUI_CWindowing_CIFullScreenPresenterStatics* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CUI_CWindowing_CIFullScreenPresenterStatics* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CUI_CWindowing_CIFullScreenPresenterStatics* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CUI_CWindowing_CIFullScreenPresenterStatics* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* Create)(__x_ABI_CMicrosoft_CUI_CWindowing_CIFullScreenPresenterStatics* This,
        __x_ABI_CMicrosoft_CUI_CWindowing_CIFullScreenPresenter** result);

        END_INTERFACE
    } __x_ABI_CMicrosoft_CUI_CWindowing_CIFullScreenPresenterStaticsVtbl;

    interface __x_ABI_CMicrosoft_CUI_CWindowing_CIFullScreenPresenterStatics
    {
        CONST_VTBL struct __x_ABI_CMicrosoft_CUI_CWindowing_CIFullScreenPresenterStaticsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CWindowing_CIFullScreenPresenterStatics;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CWindowing_CIFullScreenPresenterStatics_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CMicrosoft_CUI_CWindowing_CIOverlappedPresenter_INTERFACE_DEFINED__)
    #define ____x_ABI_CMicrosoft_CUI_CWindowing_CIOverlappedPresenter_INTERFACE_DEFINED__
    typedef struct __x_ABI_CMicrosoft_CUI_CWindowing_CIOverlappedPresenterVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CUI_CWindowing_CIOverlappedPresenter* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CUI_CWindowing_CIOverlappedPresenter* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CUI_CWindowing_CIOverlappedPresenter* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CUI_CWindowing_CIOverlappedPresenter* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CUI_CWindowing_CIOverlappedPresenter* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CUI_CWindowing_CIOverlappedPresenter* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_HasBorder)(__x_ABI_CMicrosoft_CUI_CWindowing_CIOverlappedPresenter* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* get_HasTitleBar)(__x_ABI_CMicrosoft_CUI_CWindowing_CIOverlappedPresenter* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* get_IsAlwaysOnTop)(__x_ABI_CMicrosoft_CUI_CWindowing_CIOverlappedPresenter* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* put_IsAlwaysOnTop)(__x_ABI_CMicrosoft_CUI_CWindowing_CIOverlappedPresenter* This,
        boolean value);
    HRESULT (STDMETHODCALLTYPE* get_IsMaximizable)(__x_ABI_CMicrosoft_CUI_CWindowing_CIOverlappedPresenter* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* put_IsMaximizable)(__x_ABI_CMicrosoft_CUI_CWindowing_CIOverlappedPresenter* This,
        boolean value);
    HRESULT (STDMETHODCALLTYPE* get_IsMinimizable)(__x_ABI_CMicrosoft_CUI_CWindowing_CIOverlappedPresenter* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* put_IsMinimizable)(__x_ABI_CMicrosoft_CUI_CWindowing_CIOverlappedPresenter* This,
        boolean value);
    HRESULT (STDMETHODCALLTYPE* get_IsModal)(__x_ABI_CMicrosoft_CUI_CWindowing_CIOverlappedPresenter* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* put_IsModal)(__x_ABI_CMicrosoft_CUI_CWindowing_CIOverlappedPresenter* This,
        boolean value);
    HRESULT (STDMETHODCALLTYPE* get_IsResizable)(__x_ABI_CMicrosoft_CUI_CWindowing_CIOverlappedPresenter* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* put_IsResizable)(__x_ABI_CMicrosoft_CUI_CWindowing_CIOverlappedPresenter* This,
        boolean value);
    HRESULT (STDMETHODCALLTYPE* get_State)(__x_ABI_CMicrosoft_CUI_CWindowing_CIOverlappedPresenter* This,
        enum __x_ABI_CMicrosoft_CUI_CWindowing_COverlappedPresenterState* value);
    HRESULT (STDMETHODCALLTYPE* Maximize)(__x_ABI_CMicrosoft_CUI_CWindowing_CIOverlappedPresenter* This);
    HRESULT (STDMETHODCALLTYPE* Minimize)(__x_ABI_CMicrosoft_CUI_CWindowing_CIOverlappedPresenter* This);
    HRESULT (STDMETHODCALLTYPE* Restore)(__x_ABI_CMicrosoft_CUI_CWindowing_CIOverlappedPresenter* This);
    HRESULT (STDMETHODCALLTYPE* SetBorderAndTitleBar)(__x_ABI_CMicrosoft_CUI_CWindowing_CIOverlappedPresenter* This,
        boolean hasBorder,
        boolean hasTitleBar);

        END_INTERFACE
    } __x_ABI_CMicrosoft_CUI_CWindowing_CIOverlappedPresenterVtbl;

    interface __x_ABI_CMicrosoft_CUI_CWindowing_CIOverlappedPresenter
    {
        CONST_VTBL struct __x_ABI_CMicrosoft_CUI_CWindowing_CIOverlappedPresenterVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CWindowing_CIOverlappedPresenter;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CWindowing_CIOverlappedPresenter_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CMicrosoft_CUI_CWindowing_CIOverlappedPresenter2_INTERFACE_DEFINED__)
    #define ____x_ABI_CMicrosoft_CUI_CWindowing_CIOverlappedPresenter2_INTERFACE_DEFINED__
    typedef struct __x_ABI_CMicrosoft_CUI_CWindowing_CIOverlappedPresenter2Vtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CUI_CWindowing_CIOverlappedPresenter2* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CUI_CWindowing_CIOverlappedPresenter2* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CUI_CWindowing_CIOverlappedPresenter2* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CUI_CWindowing_CIOverlappedPresenter2* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CUI_CWindowing_CIOverlappedPresenter2* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CUI_CWindowing_CIOverlappedPresenter2* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* MinimizeWithActivation)(__x_ABI_CMicrosoft_CUI_CWindowing_CIOverlappedPresenter2* This,
        boolean activateWindow);
    HRESULT (STDMETHODCALLTYPE* RestoreWithActivation)(__x_ABI_CMicrosoft_CUI_CWindowing_CIOverlappedPresenter2* This,
        boolean activateWindow);

        END_INTERFACE
    } __x_ABI_CMicrosoft_CUI_CWindowing_CIOverlappedPresenter2Vtbl;

    interface __x_ABI_CMicrosoft_CUI_CWindowing_CIOverlappedPresenter2
    {
        CONST_VTBL struct __x_ABI_CMicrosoft_CUI_CWindowing_CIOverlappedPresenter2Vtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CWindowing_CIOverlappedPresenter2;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CWindowing_CIOverlappedPresenter2_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CMicrosoft_CUI_CWindowing_CIOverlappedPresenterStatics_INTERFACE_DEFINED__)
    #define ____x_ABI_CMicrosoft_CUI_CWindowing_CIOverlappedPresenterStatics_INTERFACE_DEFINED__
    typedef struct __x_ABI_CMicrosoft_CUI_CWindowing_CIOverlappedPresenterStaticsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CUI_CWindowing_CIOverlappedPresenterStatics* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CUI_CWindowing_CIOverlappedPresenterStatics* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CUI_CWindowing_CIOverlappedPresenterStatics* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CUI_CWindowing_CIOverlappedPresenterStatics* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CUI_CWindowing_CIOverlappedPresenterStatics* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CUI_CWindowing_CIOverlappedPresenterStatics* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* Create)(__x_ABI_CMicrosoft_CUI_CWindowing_CIOverlappedPresenterStatics* This,
        __x_ABI_CMicrosoft_CUI_CWindowing_CIOverlappedPresenter** result);
    HRESULT (STDMETHODCALLTYPE* CreateForContextMenu)(__x_ABI_CMicrosoft_CUI_CWindowing_CIOverlappedPresenterStatics* This,
        __x_ABI_CMicrosoft_CUI_CWindowing_CIOverlappedPresenter** result);
    HRESULT (STDMETHODCALLTYPE* CreateForDialog)(__x_ABI_CMicrosoft_CUI_CWindowing_CIOverlappedPresenterStatics* This,
        __x_ABI_CMicrosoft_CUI_CWindowing_CIOverlappedPresenter** result);
    HRESULT (STDMETHODCALLTYPE* CreateForToolWindow)(__x_ABI_CMicrosoft_CUI_CWindowing_CIOverlappedPresenterStatics* This,
        __x_ABI_CMicrosoft_CUI_CWindowing_CIOverlappedPresenter** result);

        END_INTERFACE
    } __x_ABI_CMicrosoft_CUI_CWindowing_CIOverlappedPresenterStaticsVtbl;

    interface __x_ABI_CMicrosoft_CUI_CWindowing_CIOverlappedPresenterStatics
    {
        CONST_VTBL struct __x_ABI_CMicrosoft_CUI_CWindowing_CIOverlappedPresenterStaticsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CWindowing_CIOverlappedPresenterStatics;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CWindowing_CIOverlappedPresenterStatics_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CMicrosoft_CUI_CWindowing_CIOverlappedPresenterStatics2_INTERFACE_DEFINED__)
    #define ____x_ABI_CMicrosoft_CUI_CWindowing_CIOverlappedPresenterStatics2_INTERFACE_DEFINED__
    typedef struct __x_ABI_CMicrosoft_CUI_CWindowing_CIOverlappedPresenterStatics2Vtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CUI_CWindowing_CIOverlappedPresenterStatics2* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CUI_CWindowing_CIOverlappedPresenterStatics2* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CUI_CWindowing_CIOverlappedPresenterStatics2* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CUI_CWindowing_CIOverlappedPresenterStatics2* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CUI_CWindowing_CIOverlappedPresenterStatics2* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CUI_CWindowing_CIOverlappedPresenterStatics2* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_RequestedStartupState)(__x_ABI_CMicrosoft_CUI_CWindowing_CIOverlappedPresenterStatics2* This,
        enum __x_ABI_CMicrosoft_CUI_CWindowing_COverlappedPresenterState* value);

        END_INTERFACE
    } __x_ABI_CMicrosoft_CUI_CWindowing_CIOverlappedPresenterStatics2Vtbl;

    interface __x_ABI_CMicrosoft_CUI_CWindowing_CIOverlappedPresenterStatics2
    {
        CONST_VTBL struct __x_ABI_CMicrosoft_CUI_CWindowing_CIOverlappedPresenterStatics2Vtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CWindowing_CIOverlappedPresenterStatics2;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CWindowing_CIOverlappedPresenterStatics2_INTERFACE_DEFINED__) */
    
