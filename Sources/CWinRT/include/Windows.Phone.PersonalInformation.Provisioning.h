// WARNING: Please don't edit this file. It was generated by Swift/WinRT v0.0.1

#pragma once
// Header files for imported files
#include <inspectable.h>
#include <EventToken.h>
#include <windowscontracts.h>
#include "Windows.Foundation.h"
#include "Windows.Phone.PersonalInformation.h"
#include "Windows.Storage.Streams.h"
// Importing Collections header
#include "Windows.Foundation.Collections.h"

/* Forward Declarations */
#ifndef ____x_ABI_CWindows_CPhone_CPersonalInformation_CProvisioning_CIContactPartnerProvisioningManagerStatics_FWD_DEFINED__
#define ____x_ABI_CWindows_CPhone_CPersonalInformation_CProvisioning_CIContactPartnerProvisioningManagerStatics_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CPhone_CPersonalInformation_CProvisioning_CIContactPartnerProvisioningManagerStatics __x_ABI_CWindows_CPhone_CPersonalInformation_CProvisioning_CIContactPartnerProvisioningManagerStatics;

#endif // ____x_ABI_CWindows_CPhone_CPersonalInformation_CProvisioning_CIContactPartnerProvisioningManagerStatics_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CPhone_CPersonalInformation_CProvisioning_CIContactPartnerProvisioningManagerStatics2_FWD_DEFINED__
#define ____x_ABI_CWindows_CPhone_CPersonalInformation_CProvisioning_CIContactPartnerProvisioningManagerStatics2_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CPhone_CPersonalInformation_CProvisioning_CIContactPartnerProvisioningManagerStatics2 __x_ABI_CWindows_CPhone_CPersonalInformation_CProvisioning_CIContactPartnerProvisioningManagerStatics2;

#endif // ____x_ABI_CWindows_CPhone_CPersonalInformation_CProvisioning_CIContactPartnerProvisioningManagerStatics2_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CPhone_CPersonalInformation_CProvisioning_CIMessagePartnerProvisioningManagerStatics_FWD_DEFINED__
#define ____x_ABI_CWindows_CPhone_CPersonalInformation_CProvisioning_CIMessagePartnerProvisioningManagerStatics_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CPhone_CPersonalInformation_CProvisioning_CIMessagePartnerProvisioningManagerStatics __x_ABI_CWindows_CPhone_CPersonalInformation_CProvisioning_CIMessagePartnerProvisioningManagerStatics;

#endif // ____x_ABI_CWindows_CPhone_CPersonalInformation_CProvisioning_CIMessagePartnerProvisioningManagerStatics_FWD_DEFINED__

// Parameterized interface forward declarations (C)

// Collection interface definitions

#if !defined(____x_ABI_C__FIIterator_1_HSTRING_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIIterator_1_HSTRING_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIIterator_1_HSTRING __x_ABI_C__FIIterator_1_HSTRING;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIIterator_1_HSTRING;

    typedef struct __x_ABI_C__FIIterator_1_HSTRINGVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIIterator_1_HSTRING* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIIterator_1_HSTRING* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIIterator_1_HSTRING* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIIterator_1_HSTRING* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIIterator_1_HSTRING* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIIterator_1_HSTRING* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Current)(__x_ABI_C__FIIterator_1_HSTRING* This,
        HSTRING* result);
    HRESULT (STDMETHODCALLTYPE* get_HasCurrent)(__x_ABI_C__FIIterator_1_HSTRING* This,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* MoveNext)(__x_ABI_C__FIIterator_1_HSTRING* This,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__x_ABI_C__FIIterator_1_HSTRING* This,
        UINT32 itemsLength,
        HSTRING* items,
        UINT32* result);

        END_INTERFACE
    } __x_ABI_C__FIIterator_1_HSTRINGVtbl;

    interface __x_ABI_C__FIIterator_1_HSTRING
    {
        CONST_VTBL struct __x_ABI_C__FIIterator_1_HSTRINGVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIIterator_1_HSTRING_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIIterable_1_HSTRING_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIIterable_1_HSTRING_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIIterable_1_HSTRING __x_ABI_C__FIIterable_1_HSTRING;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIIterable_1_HSTRING;

    typedef struct __x_ABI_C__FIIterable_1_HSTRINGVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIIterable_1_HSTRING* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIIterable_1_HSTRING* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIIterable_1_HSTRING* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIIterable_1_HSTRING* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIIterable_1_HSTRING* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIIterable_1_HSTRING* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* First)(__x_ABI_C__FIIterable_1_HSTRING* This,
        __x_ABI_C__FIIterator_1_HSTRING** result);

        END_INTERFACE
    } __x_ABI_C__FIIterable_1_HSTRINGVtbl;

    interface __x_ABI_C__FIIterable_1_HSTRING
    {
        CONST_VTBL struct __x_ABI_C__FIIterable_1_HSTRINGVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIIterable_1_HSTRING_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIKeyValuePair_2_HSTRING_IInspectable_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIKeyValuePair_2_HSTRING_IInspectable_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIKeyValuePair_2_HSTRING_IInspectable __x_ABI_C__FIKeyValuePair_2_HSTRING_IInspectable;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIKeyValuePair_2_HSTRING_IInspectable;

    typedef struct __x_ABI_C__FIKeyValuePair_2_HSTRING_IInspectableVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIKeyValuePair_2_HSTRING_IInspectable* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIKeyValuePair_2_HSTRING_IInspectable* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIKeyValuePair_2_HSTRING_IInspectable* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIKeyValuePair_2_HSTRING_IInspectable* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIKeyValuePair_2_HSTRING_IInspectable* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIKeyValuePair_2_HSTRING_IInspectable* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Key)(__x_ABI_C__FIKeyValuePair_2_HSTRING_IInspectable* This,
        HSTRING* result);
    HRESULT (STDMETHODCALLTYPE* get_Value)(__x_ABI_C__FIKeyValuePair_2_HSTRING_IInspectable* This,
        IInspectable** result);

        END_INTERFACE
    } __x_ABI_C__FIKeyValuePair_2_HSTRING_IInspectableVtbl;

    interface __x_ABI_C__FIKeyValuePair_2_HSTRING_IInspectable
    {
        CONST_VTBL struct __x_ABI_C__FIKeyValuePair_2_HSTRING_IInspectableVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIKeyValuePair_2_HSTRING_IInspectable_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2_HSTRING_IInspectable_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2_HSTRING_IInspectable_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2_HSTRING_IInspectable __x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2_HSTRING_IInspectable;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2_HSTRING_IInspectable;

    typedef struct __x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2_HSTRING_IInspectableVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2_HSTRING_IInspectable* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2_HSTRING_IInspectable* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2_HSTRING_IInspectable* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2_HSTRING_IInspectable* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2_HSTRING_IInspectable* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2_HSTRING_IInspectable* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Current)(__x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2_HSTRING_IInspectable* This,
        __x_ABI_C__FIKeyValuePair_2_HSTRING_IInspectable** result);
    HRESULT (STDMETHODCALLTYPE* get_HasCurrent)(__x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2_HSTRING_IInspectable* This,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* MoveNext)(__x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2_HSTRING_IInspectable* This,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2_HSTRING_IInspectable* This,
        UINT32 itemsLength,
        __x_ABI_C__FIKeyValuePair_2_HSTRING_IInspectable** items,
        UINT32* result);

        END_INTERFACE
    } __x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2_HSTRING_IInspectableVtbl;

    interface __x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2_HSTRING_IInspectable
    {
        CONST_VTBL struct __x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2_HSTRING_IInspectableVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2_HSTRING_IInspectable_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIIterable_1___x_ABI_C__FIKeyValuePair_2_HSTRING_IInspectable_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIIterable_1___x_ABI_C__FIKeyValuePair_2_HSTRING_IInspectable_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIIterable_1___x_ABI_C__FIKeyValuePair_2_HSTRING_IInspectable __x_ABI_C__FIIterable_1___x_ABI_C__FIKeyValuePair_2_HSTRING_IInspectable;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIIterable_1___x_ABI_C__FIKeyValuePair_2_HSTRING_IInspectable;

    typedef struct __x_ABI_C__FIIterable_1___x_ABI_C__FIKeyValuePair_2_HSTRING_IInspectableVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIIterable_1___x_ABI_C__FIKeyValuePair_2_HSTRING_IInspectable* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIIterable_1___x_ABI_C__FIKeyValuePair_2_HSTRING_IInspectable* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIIterable_1___x_ABI_C__FIKeyValuePair_2_HSTRING_IInspectable* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIIterable_1___x_ABI_C__FIKeyValuePair_2_HSTRING_IInspectable* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIIterable_1___x_ABI_C__FIKeyValuePair_2_HSTRING_IInspectable* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIIterable_1___x_ABI_C__FIKeyValuePair_2_HSTRING_IInspectable* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* First)(__x_ABI_C__FIIterable_1___x_ABI_C__FIKeyValuePair_2_HSTRING_IInspectable* This,
        __x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2_HSTRING_IInspectable** result);

        END_INTERFACE
    } __x_ABI_C__FIIterable_1___x_ABI_C__FIKeyValuePair_2_HSTRING_IInspectableVtbl;

    interface __x_ABI_C__FIIterable_1___x_ABI_C__FIKeyValuePair_2_HSTRING_IInspectable
    {
        CONST_VTBL struct __x_ABI_C__FIIterable_1___x_ABI_C__FIKeyValuePair_2_HSTRING_IInspectableVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIIterable_1___x_ABI_C__FIKeyValuePair_2_HSTRING_IInspectable_INTERFACE_DEFINED__
    
typedef interface __x_ABI_C__FIMapView_2_HSTRING_IInspectable __x_ABI_C__FIMapView_2_HSTRING_IInspectable;

#if !defined(____x_ABI_C__FIMapView_2_HSTRING_IInspectable_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIMapView_2_HSTRING_IInspectable_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIMapView_2_HSTRING_IInspectable __x_ABI_C__FIMapView_2_HSTRING_IInspectable;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIMapView_2_HSTRING_IInspectable;

    typedef struct __x_ABI_C__FIMapView_2_HSTRING_IInspectableVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIMapView_2_HSTRING_IInspectable* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIMapView_2_HSTRING_IInspectable* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIMapView_2_HSTRING_IInspectable* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIMapView_2_HSTRING_IInspectable* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIMapView_2_HSTRING_IInspectable* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIMapView_2_HSTRING_IInspectable* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* Lookup)(__x_ABI_C__FIMapView_2_HSTRING_IInspectable* This,
        HSTRING key,
        IInspectable** result);
    HRESULT (STDMETHODCALLTYPE* get_Size)(__x_ABI_C__FIMapView_2_HSTRING_IInspectable* This,
        UINT32* result);
    HRESULT (STDMETHODCALLTYPE* HasKey)(__x_ABI_C__FIMapView_2_HSTRING_IInspectable* This,
        HSTRING key,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* Split)(__x_ABI_C__FIMapView_2_HSTRING_IInspectable* This,
        __x_ABI_C__FIMapView_2_HSTRING_IInspectable** first,
        __x_ABI_C__FIMapView_2_HSTRING_IInspectable** second);

        END_INTERFACE
    } __x_ABI_C__FIMapView_2_HSTRING_IInspectableVtbl;

    interface __x_ABI_C__FIMapView_2_HSTRING_IInspectable
    {
        CONST_VTBL struct __x_ABI_C__FIMapView_2_HSTRING_IInspectableVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIMapView_2_HSTRING_IInspectable_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIIterator_1___x_ABI_C__FIMapView_2_HSTRING_IInspectable_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIIterator_1___x_ABI_C__FIMapView_2_HSTRING_IInspectable_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIIterator_1___x_ABI_C__FIMapView_2_HSTRING_IInspectable __x_ABI_C__FIIterator_1___x_ABI_C__FIMapView_2_HSTRING_IInspectable;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIIterator_1___x_ABI_C__FIMapView_2_HSTRING_IInspectable;

    typedef struct __x_ABI_C__FIIterator_1___x_ABI_C__FIMapView_2_HSTRING_IInspectableVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIIterator_1___x_ABI_C__FIMapView_2_HSTRING_IInspectable* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIIterator_1___x_ABI_C__FIMapView_2_HSTRING_IInspectable* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIIterator_1___x_ABI_C__FIMapView_2_HSTRING_IInspectable* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIIterator_1___x_ABI_C__FIMapView_2_HSTRING_IInspectable* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIIterator_1___x_ABI_C__FIMapView_2_HSTRING_IInspectable* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIIterator_1___x_ABI_C__FIMapView_2_HSTRING_IInspectable* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Current)(__x_ABI_C__FIIterator_1___x_ABI_C__FIMapView_2_HSTRING_IInspectable* This,
        __x_ABI_C__FIMapView_2_HSTRING_IInspectable** result);
    HRESULT (STDMETHODCALLTYPE* get_HasCurrent)(__x_ABI_C__FIIterator_1___x_ABI_C__FIMapView_2_HSTRING_IInspectable* This,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* MoveNext)(__x_ABI_C__FIIterator_1___x_ABI_C__FIMapView_2_HSTRING_IInspectable* This,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__x_ABI_C__FIIterator_1___x_ABI_C__FIMapView_2_HSTRING_IInspectable* This,
        UINT32 itemsLength,
        __x_ABI_C__FIMapView_2_HSTRING_IInspectable** items,
        UINT32* result);

        END_INTERFACE
    } __x_ABI_C__FIIterator_1___x_ABI_C__FIMapView_2_HSTRING_IInspectableVtbl;

    interface __x_ABI_C__FIIterator_1___x_ABI_C__FIMapView_2_HSTRING_IInspectable
    {
        CONST_VTBL struct __x_ABI_C__FIIterator_1___x_ABI_C__FIMapView_2_HSTRING_IInspectableVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIIterator_1___x_ABI_C__FIMapView_2_HSTRING_IInspectable_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIIterable_1___x_ABI_C__FIMapView_2_HSTRING_IInspectable_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIIterable_1___x_ABI_C__FIMapView_2_HSTRING_IInspectable_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIIterable_1___x_ABI_C__FIMapView_2_HSTRING_IInspectable __x_ABI_C__FIIterable_1___x_ABI_C__FIMapView_2_HSTRING_IInspectable;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIIterable_1___x_ABI_C__FIMapView_2_HSTRING_IInspectable;

    typedef struct __x_ABI_C__FIIterable_1___x_ABI_C__FIMapView_2_HSTRING_IInspectableVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIIterable_1___x_ABI_C__FIMapView_2_HSTRING_IInspectable* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIIterable_1___x_ABI_C__FIMapView_2_HSTRING_IInspectable* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIIterable_1___x_ABI_C__FIMapView_2_HSTRING_IInspectable* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIIterable_1___x_ABI_C__FIMapView_2_HSTRING_IInspectable* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIIterable_1___x_ABI_C__FIMapView_2_HSTRING_IInspectable* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIIterable_1___x_ABI_C__FIMapView_2_HSTRING_IInspectable* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* First)(__x_ABI_C__FIIterable_1___x_ABI_C__FIMapView_2_HSTRING_IInspectable* This,
        __x_ABI_C__FIIterator_1___x_ABI_C__FIMapView_2_HSTRING_IInspectable** result);

        END_INTERFACE
    } __x_ABI_C__FIIterable_1___x_ABI_C__FIMapView_2_HSTRING_IInspectableVtbl;

    interface __x_ABI_C__FIIterable_1___x_ABI_C__FIMapView_2_HSTRING_IInspectable
    {
        CONST_VTBL struct __x_ABI_C__FIIterable_1___x_ABI_C__FIMapView_2_HSTRING_IInspectableVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIIterable_1___x_ABI_C__FIMapView_2_HSTRING_IInspectable_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIVectorView_1_HSTRING_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIVectorView_1_HSTRING_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIVectorView_1_HSTRING __x_ABI_C__FIVectorView_1_HSTRING;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIVectorView_1_HSTRING;

    typedef struct __x_ABI_C__FIVectorView_1_HSTRINGVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIVectorView_1_HSTRING* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIVectorView_1_HSTRING* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIVectorView_1_HSTRING* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIVectorView_1_HSTRING* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIVectorView_1_HSTRING* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIVectorView_1_HSTRING* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* GetAt)(__x_ABI_C__FIVectorView_1_HSTRING* This,
        UINT32 index,
        HSTRING* result);
    HRESULT (STDMETHODCALLTYPE* get_Size)(__x_ABI_C__FIVectorView_1_HSTRING* This,
        UINT32* result);
    HRESULT (STDMETHODCALLTYPE* IndexOf)(__x_ABI_C__FIVectorView_1_HSTRING* This,
        HSTRING value,
        UINT32* index,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__x_ABI_C__FIVectorView_1_HSTRING* This,
        UINT32 startIndex,
        UINT32 itemsLength,
        HSTRING* items,
        UINT32* result);

        END_INTERFACE
    } __x_ABI_C__FIVectorView_1_HSTRINGVtbl;

    interface __x_ABI_C__FIVectorView_1_HSTRING
    {
        CONST_VTBL struct __x_ABI_C__FIVectorView_1_HSTRINGVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIVectorView_1_HSTRING_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIVectorView_1___x_ABI_C__FIMapView_2_HSTRING_IInspectable_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIVectorView_1___x_ABI_C__FIMapView_2_HSTRING_IInspectable_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIVectorView_1___x_ABI_C__FIMapView_2_HSTRING_IInspectable __x_ABI_C__FIVectorView_1___x_ABI_C__FIMapView_2_HSTRING_IInspectable;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIVectorView_1___x_ABI_C__FIMapView_2_HSTRING_IInspectable;

    typedef struct __x_ABI_C__FIVectorView_1___x_ABI_C__FIMapView_2_HSTRING_IInspectableVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIVectorView_1___x_ABI_C__FIMapView_2_HSTRING_IInspectable* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIVectorView_1___x_ABI_C__FIMapView_2_HSTRING_IInspectable* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIVectorView_1___x_ABI_C__FIMapView_2_HSTRING_IInspectable* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIVectorView_1___x_ABI_C__FIMapView_2_HSTRING_IInspectable* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIVectorView_1___x_ABI_C__FIMapView_2_HSTRING_IInspectable* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIVectorView_1___x_ABI_C__FIMapView_2_HSTRING_IInspectable* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* GetAt)(__x_ABI_C__FIVectorView_1___x_ABI_C__FIMapView_2_HSTRING_IInspectable* This,
        UINT32 index,
        __x_ABI_C__FIMapView_2_HSTRING_IInspectable** result);
    HRESULT (STDMETHODCALLTYPE* get_Size)(__x_ABI_C__FIVectorView_1___x_ABI_C__FIMapView_2_HSTRING_IInspectable* This,
        UINT32* result);
    HRESULT (STDMETHODCALLTYPE* IndexOf)(__x_ABI_C__FIVectorView_1___x_ABI_C__FIMapView_2_HSTRING_IInspectable* This,
        __x_ABI_C__FIMapView_2_HSTRING_IInspectable* value,
        UINT32* index,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__x_ABI_C__FIVectorView_1___x_ABI_C__FIMapView_2_HSTRING_IInspectable* This,
        UINT32 startIndex,
        UINT32 itemsLength,
        __x_ABI_C__FIMapView_2_HSTRING_IInspectable** items,
        UINT32* result);

        END_INTERFACE
    } __x_ABI_C__FIVectorView_1___x_ABI_C__FIMapView_2_HSTRING_IInspectableVtbl;

    interface __x_ABI_C__FIVectorView_1___x_ABI_C__FIMapView_2_HSTRING_IInspectable
    {
        CONST_VTBL struct __x_ABI_C__FIVectorView_1___x_ABI_C__FIMapView_2_HSTRING_IInspectableVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIVectorView_1___x_ABI_C__FIMapView_2_HSTRING_IInspectable_INTERFACE_DEFINED__
    
typedef struct __x_ABI_CWindows_CFoundation_CDateTime __x_ABI_CWindows_CFoundation_CDateTime;

#ifndef ____x_ABI_CWindows_CFoundation_CIAsyncAction_FWD_DEFINED__
#define ____x_ABI_CWindows_CFoundation_CIAsyncAction_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CFoundation_CIAsyncAction __x_ABI_CWindows_CFoundation_CIAsyncAction;

#endif // ____x_ABI_CWindows_CFoundation_CIAsyncAction_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CPhone_CPersonalInformation_CIContactStore_FWD_DEFINED__
#define ____x_ABI_CWindows_CPhone_CPersonalInformation_CIContactStore_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CPhone_CPersonalInformation_CIContactStore __x_ABI_CWindows_CPhone_CPersonalInformation_CIContactStore;

#endif // ____x_ABI_CWindows_CPhone_CPersonalInformation_CIContactStore_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CStorage_CStreams_CIInputStream_FWD_DEFINED__
#define ____x_ABI_CWindows_CStorage_CStreams_CIInputStream_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CStorage_CStreams_CIInputStream __x_ABI_CWindows_CStorage_CStreams_CIInputStream;

#endif // ____x_ABI_CWindows_CStorage_CStreams_CIInputStream_FWD_DEFINED__

#if !defined(____x_ABI_CWindows_CPhone_CPersonalInformation_CProvisioning_CIContactPartnerProvisioningManagerStatics_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CPhone_CPersonalInformation_CProvisioning_CIContactPartnerProvisioningManagerStatics_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CPhone_CPersonalInformation_CProvisioning_CIContactPartnerProvisioningManagerStaticsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CPhone_CPersonalInformation_CProvisioning_CIContactPartnerProvisioningManagerStatics* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CPhone_CPersonalInformation_CProvisioning_CIContactPartnerProvisioningManagerStatics* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CPhone_CPersonalInformation_CProvisioning_CIContactPartnerProvisioningManagerStatics* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CPhone_CPersonalInformation_CProvisioning_CIContactPartnerProvisioningManagerStatics* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CPhone_CPersonalInformation_CProvisioning_CIContactPartnerProvisioningManagerStatics* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CPhone_CPersonalInformation_CProvisioning_CIContactPartnerProvisioningManagerStatics* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* AssociateNetworkAccountAsync)(__x_ABI_CWindows_CPhone_CPersonalInformation_CProvisioning_CIContactPartnerProvisioningManagerStatics* This,
        __x_ABI_CWindows_CPhone_CPersonalInformation_CIContactStore* store,
        HSTRING networkName,
        HSTRING networkAccountId,
        __x_ABI_CWindows_CFoundation_CIAsyncAction** result);
    HRESULT (STDMETHODCALLTYPE* ImportVcardToSystemAsync)(__x_ABI_CWindows_CPhone_CPersonalInformation_CProvisioning_CIContactPartnerProvisioningManagerStatics* This,
        __x_ABI_CWindows_CStorage_CStreams_CIInputStream* stream,
        __x_ABI_CWindows_CFoundation_CIAsyncAction** result);

        END_INTERFACE
    } __x_ABI_CWindows_CPhone_CPersonalInformation_CProvisioning_CIContactPartnerProvisioningManagerStaticsVtbl;

    interface __x_ABI_CWindows_CPhone_CPersonalInformation_CProvisioning_CIContactPartnerProvisioningManagerStatics
    {
        CONST_VTBL struct __x_ABI_CWindows_CPhone_CPersonalInformation_CProvisioning_CIContactPartnerProvisioningManagerStaticsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CPhone_CPersonalInformation_CProvisioning_CIContactPartnerProvisioningManagerStatics;
#endif /* !defined(____x_ABI_CWindows_CPhone_CPersonalInformation_CProvisioning_CIContactPartnerProvisioningManagerStatics_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CPhone_CPersonalInformation_CProvisioning_CIContactPartnerProvisioningManagerStatics2_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CPhone_CPersonalInformation_CProvisioning_CIContactPartnerProvisioningManagerStatics2_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CPhone_CPersonalInformation_CProvisioning_CIContactPartnerProvisioningManagerStatics2Vtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CPhone_CPersonalInformation_CProvisioning_CIContactPartnerProvisioningManagerStatics2* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CPhone_CPersonalInformation_CProvisioning_CIContactPartnerProvisioningManagerStatics2* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CPhone_CPersonalInformation_CProvisioning_CIContactPartnerProvisioningManagerStatics2* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CPhone_CPersonalInformation_CProvisioning_CIContactPartnerProvisioningManagerStatics2* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CPhone_CPersonalInformation_CProvisioning_CIContactPartnerProvisioningManagerStatics2* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CPhone_CPersonalInformation_CProvisioning_CIContactPartnerProvisioningManagerStatics2* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* AssociateSocialNetworkAccountAsync)(__x_ABI_CWindows_CPhone_CPersonalInformation_CProvisioning_CIContactPartnerProvisioningManagerStatics2* This,
        __x_ABI_CWindows_CPhone_CPersonalInformation_CIContactStore* store,
        HSTRING networkName,
        HSTRING networkAccountId,
        __x_ABI_CWindows_CFoundation_CIAsyncAction** result);

        END_INTERFACE
    } __x_ABI_CWindows_CPhone_CPersonalInformation_CProvisioning_CIContactPartnerProvisioningManagerStatics2Vtbl;

    interface __x_ABI_CWindows_CPhone_CPersonalInformation_CProvisioning_CIContactPartnerProvisioningManagerStatics2
    {
        CONST_VTBL struct __x_ABI_CWindows_CPhone_CPersonalInformation_CProvisioning_CIContactPartnerProvisioningManagerStatics2Vtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CPhone_CPersonalInformation_CProvisioning_CIContactPartnerProvisioningManagerStatics2;
#endif /* !defined(____x_ABI_CWindows_CPhone_CPersonalInformation_CProvisioning_CIContactPartnerProvisioningManagerStatics2_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CPhone_CPersonalInformation_CProvisioning_CIMessagePartnerProvisioningManagerStatics_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CPhone_CPersonalInformation_CProvisioning_CIMessagePartnerProvisioningManagerStatics_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CPhone_CPersonalInformation_CProvisioning_CIMessagePartnerProvisioningManagerStaticsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CPhone_CPersonalInformation_CProvisioning_CIMessagePartnerProvisioningManagerStatics* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CPhone_CPersonalInformation_CProvisioning_CIMessagePartnerProvisioningManagerStatics* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CPhone_CPersonalInformation_CProvisioning_CIMessagePartnerProvisioningManagerStatics* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CPhone_CPersonalInformation_CProvisioning_CIMessagePartnerProvisioningManagerStatics* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CPhone_CPersonalInformation_CProvisioning_CIMessagePartnerProvisioningManagerStatics* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CPhone_CPersonalInformation_CProvisioning_CIMessagePartnerProvisioningManagerStatics* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* ImportSmsToSystemAsync)(__x_ABI_CWindows_CPhone_CPersonalInformation_CProvisioning_CIMessagePartnerProvisioningManagerStatics* This,
        boolean incoming,
        boolean read,
        HSTRING body,
        HSTRING sender,
        __x_ABI_C__FIVectorView_1_HSTRING* recipients,
        struct __x_ABI_CWindows_CFoundation_CDateTime deliveryTime,
        __x_ABI_CWindows_CFoundation_CIAsyncAction** action);
    HRESULT (STDMETHODCALLTYPE* ImportMmsToSystemAsync)(__x_ABI_CWindows_CPhone_CPersonalInformation_CProvisioning_CIMessagePartnerProvisioningManagerStatics* This,
        boolean incoming,
        boolean read,
        HSTRING subject,
        HSTRING sender,
        __x_ABI_C__FIVectorView_1_HSTRING* recipients,
        struct __x_ABI_CWindows_CFoundation_CDateTime deliveryTime,
        __x_ABI_C__FIVectorView_1___x_ABI_C__FIMapView_2_HSTRING_IInspectable* attachments,
        __x_ABI_CWindows_CFoundation_CIAsyncAction** action);

        END_INTERFACE
    } __x_ABI_CWindows_CPhone_CPersonalInformation_CProvisioning_CIMessagePartnerProvisioningManagerStaticsVtbl;

    interface __x_ABI_CWindows_CPhone_CPersonalInformation_CProvisioning_CIMessagePartnerProvisioningManagerStatics
    {
        CONST_VTBL struct __x_ABI_CWindows_CPhone_CPersonalInformation_CProvisioning_CIMessagePartnerProvisioningManagerStaticsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CPhone_CPersonalInformation_CProvisioning_CIMessagePartnerProvisioningManagerStatics;
#endif /* !defined(____x_ABI_CWindows_CPhone_CPersonalInformation_CProvisioning_CIMessagePartnerProvisioningManagerStatics_INTERFACE_DEFINED__) */
    
