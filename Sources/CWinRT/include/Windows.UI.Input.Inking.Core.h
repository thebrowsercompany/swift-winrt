// WARNING: Please don't edit this file. It was generated by Swift/WinRT v0.0.1

#pragma once
// Header files for imported files
#include <inspectable.h>
#include <EventToken.h>
#include <windowscontracts.h>
#include "Windows.Foundation.h"
#include "Windows.Foundation.Numerics.h"
#include "Windows.UI.Composition.h"
#include "Windows.UI.Core.h"
#include "Windows.UI.Input.Inking.h"
// Importing Collections header
#include "Windows.Foundation.Collections.h"

/* Forward Declarations */
#ifndef ____x_ABI_CWindows_CUI_CInput_CInking_CCore_CICoreIncrementalInkStroke_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CInput_CInking_CCore_CICoreIncrementalInkStroke_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CInput_CInking_CCore_CICoreIncrementalInkStroke __x_ABI_CWindows_CUI_CInput_CInking_CCore_CICoreIncrementalInkStroke;

#endif // ____x_ABI_CWindows_CUI_CInput_CInking_CCore_CICoreIncrementalInkStroke_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CInput_CInking_CCore_CICoreIncrementalInkStrokeFactory_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CInput_CInking_CCore_CICoreIncrementalInkStrokeFactory_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CInput_CInking_CCore_CICoreIncrementalInkStrokeFactory __x_ABI_CWindows_CUI_CInput_CInking_CCore_CICoreIncrementalInkStrokeFactory;

#endif // ____x_ABI_CWindows_CUI_CInput_CInking_CCore_CICoreIncrementalInkStrokeFactory_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CInput_CInking_CCore_CICoreInkIndependentInputSource_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CInput_CInking_CCore_CICoreInkIndependentInputSource_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CInput_CInking_CCore_CICoreInkIndependentInputSource __x_ABI_CWindows_CUI_CInput_CInking_CCore_CICoreInkIndependentInputSource;

#endif // ____x_ABI_CWindows_CUI_CInput_CInking_CCore_CICoreInkIndependentInputSource_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CInput_CInking_CCore_CICoreInkIndependentInputSourceStatics_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CInput_CInking_CCore_CICoreInkIndependentInputSourceStatics_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CInput_CInking_CCore_CICoreInkIndependentInputSourceStatics __x_ABI_CWindows_CUI_CInput_CInking_CCore_CICoreInkIndependentInputSourceStatics;

#endif // ____x_ABI_CWindows_CUI_CInput_CInking_CCore_CICoreInkIndependentInputSourceStatics_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CInput_CInking_CCore_CICoreInkPresenterHost_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CInput_CInking_CCore_CICoreInkPresenterHost_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CInput_CInking_CCore_CICoreInkPresenterHost __x_ABI_CWindows_CUI_CInput_CInking_CCore_CICoreInkPresenterHost;

#endif // ____x_ABI_CWindows_CUI_CInput_CInking_CCore_CICoreInkPresenterHost_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CInput_CInking_CCore_CICoreWetStrokeUpdateEventArgs_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CInput_CInking_CCore_CICoreWetStrokeUpdateEventArgs_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CInput_CInking_CCore_CICoreWetStrokeUpdateEventArgs __x_ABI_CWindows_CUI_CInput_CInking_CCore_CICoreWetStrokeUpdateEventArgs;

#endif // ____x_ABI_CWindows_CUI_CInput_CInking_CCore_CICoreWetStrokeUpdateEventArgs_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CInput_CInking_CCore_CICoreWetStrokeUpdateSource_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CInput_CInking_CCore_CICoreWetStrokeUpdateSource_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CInput_CInking_CCore_CICoreWetStrokeUpdateSource __x_ABI_CWindows_CUI_CInput_CInking_CCore_CICoreWetStrokeUpdateSource;

#endif // ____x_ABI_CWindows_CUI_CInput_CInking_CCore_CICoreWetStrokeUpdateSource_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CInput_CInking_CCore_CICoreWetStrokeUpdateSourceStatics_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CInput_CInking_CCore_CICoreWetStrokeUpdateSourceStatics_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CInput_CInking_CCore_CICoreWetStrokeUpdateSourceStatics __x_ABI_CWindows_CUI_CInput_CInking_CCore_CICoreWetStrokeUpdateSourceStatics;

#endif // ____x_ABI_CWindows_CUI_CInput_CInking_CCore_CICoreWetStrokeUpdateSourceStatics_FWD_DEFINED__

// Parameterized interface forward declarations (C)

// Collection interface definitions

#ifndef ____x_ABI_CWindows_CUI_CInput_CInking_CIInkPoint_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CInput_CInking_CIInkPoint_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CInput_CInking_CIInkPoint __x_ABI_CWindows_CUI_CInput_CInking_CIInkPoint;

#endif // ____x_ABI_CWindows_CUI_CInput_CInking_CIInkPoint_FWD_DEFINED__

#if !defined(____x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CInput__CInking__CInkPoint_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CInput__CInking__CInkPoint_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CInput__CInking__CInkPoint __x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CInput__CInking__CInkPoint;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CInput__CInking__CInkPoint;

    typedef struct __x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CInput__CInking__CInkPointVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CInput__CInking__CInkPoint* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CInput__CInking__CInkPoint* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CInput__CInking__CInkPoint* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CInput__CInking__CInkPoint* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CInput__CInking__CInkPoint* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CInput__CInking__CInkPoint* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Current)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CInput__CInking__CInkPoint* This,
        __x_ABI_CWindows_CUI_CInput_CInking_CIInkPoint** result);
    HRESULT (STDMETHODCALLTYPE* get_HasCurrent)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CInput__CInking__CInkPoint* This,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* MoveNext)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CInput__CInking__CInkPoint* This,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CInput__CInking__CInkPoint* This,
        UINT32 itemsLength,
        __x_ABI_CWindows_CUI_CInput_CInking_CIInkPoint** items,
        UINT32* result);

        END_INTERFACE
    } __x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CInput__CInking__CInkPointVtbl;

    interface __x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CInput__CInking__CInkPoint
    {
        CONST_VTBL struct __x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CInput__CInking__CInkPointVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CInput__CInking__CInkPoint_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIIterable_1___x_ABI_CWindows__CUI__CInput__CInking__CInkPoint_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIIterable_1___x_ABI_CWindows__CUI__CInput__CInking__CInkPoint_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIIterable_1___x_ABI_CWindows__CUI__CInput__CInking__CInkPoint __x_ABI_C__FIIterable_1___x_ABI_CWindows__CUI__CInput__CInking__CInkPoint;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIIterable_1___x_ABI_CWindows__CUI__CInput__CInking__CInkPoint;

    typedef struct __x_ABI_C__FIIterable_1___x_ABI_CWindows__CUI__CInput__CInking__CInkPointVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CUI__CInput__CInking__CInkPoint* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CUI__CInput__CInking__CInkPoint* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CUI__CInput__CInking__CInkPoint* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CUI__CInput__CInking__CInkPoint* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CUI__CInput__CInking__CInkPoint* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CUI__CInput__CInking__CInkPoint* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* First)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CUI__CInput__CInking__CInkPoint* This,
        __x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CInput__CInking__CInkPoint** result);

        END_INTERFACE
    } __x_ABI_C__FIIterable_1___x_ABI_CWindows__CUI__CInput__CInking__CInkPointVtbl;

    interface __x_ABI_C__FIIterable_1___x_ABI_CWindows__CUI__CInput__CInking__CInkPoint
    {
        CONST_VTBL struct __x_ABI_C__FIIterable_1___x_ABI_CWindows__CUI__CInput__CInking__CInkPointVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIIterable_1___x_ABI_CWindows__CUI__CInput__CInking__CInkPoint_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CInput__CInking__CInkPoint_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CInput__CInking__CInkPoint_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CInput__CInking__CInkPoint __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CInput__CInking__CInkPoint;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CInput__CInking__CInkPoint;

    typedef struct __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CInput__CInking__CInkPointVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CInput__CInking__CInkPoint* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CInput__CInking__CInkPoint* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CInput__CInking__CInkPoint* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CInput__CInking__CInkPoint* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CInput__CInking__CInkPoint* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CInput__CInking__CInkPoint* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* GetAt)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CInput__CInking__CInkPoint* This,
        UINT32 index,
        __x_ABI_CWindows_CUI_CInput_CInking_CIInkPoint** result);
    HRESULT (STDMETHODCALLTYPE* get_Size)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CInput__CInking__CInkPoint* This,
        UINT32* result);
    HRESULT (STDMETHODCALLTYPE* IndexOf)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CInput__CInking__CInkPoint* This,
        __x_ABI_CWindows_CUI_CInput_CInking_CIInkPoint* value,
        UINT32* index,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CInput__CInking__CInkPoint* This,
        UINT32 startIndex,
        UINT32 itemsLength,
        __x_ABI_CWindows_CUI_CInput_CInking_CIInkPoint** items,
        UINT32* result);

        END_INTERFACE
    } __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CInput__CInking__CInkPointVtbl;

    interface __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CInput__CInking__CInkPoint
    {
        CONST_VTBL struct __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CInput__CInking__CInkPointVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CInput__CInking__CInkPoint_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CInput__CInking__CInkPoint_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CInput__CInking__CInkPoint_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CInput__CInking__CInkPoint __x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CInput__CInking__CInkPoint;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CInput__CInking__CInkPoint;

    typedef struct __x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CInput__CInking__CInkPointVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CInput__CInking__CInkPoint* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CInput__CInking__CInkPoint* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CInput__CInking__CInkPoint* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CInput__CInking__CInkPoint* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CInput__CInking__CInkPoint* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CInput__CInking__CInkPoint* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* GetAt)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CInput__CInking__CInkPoint* This,
        UINT32 index,
        __x_ABI_CWindows_CUI_CInput_CInking_CIInkPoint** result);
    HRESULT (STDMETHODCALLTYPE* get_Size)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CInput__CInking__CInkPoint* This,
        UINT32* result);
    HRESULT (STDMETHODCALLTYPE* GetView)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CInput__CInking__CInkPoint* This,
        __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CInput__CInking__CInkPoint** result);
    HRESULT (STDMETHODCALLTYPE* IndexOf)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CInput__CInking__CInkPoint* This,
        __x_ABI_CWindows_CUI_CInput_CInking_CIInkPoint* value,
        UINT32* index,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* SetAt)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CInput__CInking__CInkPoint* This,
        UINT32 index,
        __x_ABI_CWindows_CUI_CInput_CInking_CIInkPoint* value);
    HRESULT (STDMETHODCALLTYPE* InsertAt)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CInput__CInking__CInkPoint* This,
        UINT32 index,
        __x_ABI_CWindows_CUI_CInput_CInking_CIInkPoint* value);
    HRESULT (STDMETHODCALLTYPE* RemoveAt)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CInput__CInking__CInkPoint* This,
        UINT32 index);
    HRESULT (STDMETHODCALLTYPE* Append)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CInput__CInking__CInkPoint* This,
        __x_ABI_CWindows_CUI_CInput_CInking_CIInkPoint* value);
    HRESULT (STDMETHODCALLTYPE* RemoveAtEnd)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CInput__CInking__CInkPoint* This);
    HRESULT (STDMETHODCALLTYPE* Clear)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CInput__CInking__CInkPoint* This);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CInput__CInking__CInkPoint* This,
        UINT32 startIndex,
        UINT32 itemsLength,
        __x_ABI_CWindows_CUI_CInput_CInking_CIInkPoint** items,
        UINT32* result);
    HRESULT (STDMETHODCALLTYPE* ReplaceAll)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CInput__CInking__CInkPoint* This,
        UINT32 itemsLength,
        __x_ABI_CWindows_CUI_CInput_CInking_CIInkPoint** items);

        END_INTERFACE
    } __x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CInput__CInking__CInkPointVtbl;

    interface __x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CInput__CInking__CInkPoint
    {
        CONST_VTBL struct __x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CInput__CInking__CInkPointVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CInput__CInking__CInkPoint_INTERFACE_DEFINED__
    
#ifndef ____x_ABI_CWindows_CUI_CCore_CIPointerEventArgs_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CCore_CIPointerEventArgs_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CCore_CIPointerEventArgs __x_ABI_CWindows_CUI_CCore_CIPointerEventArgs;

#endif // ____x_ABI_CWindows_CUI_CCore_CIPointerEventArgs_FWD_DEFINED__

#if !defined(____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CInput__CInking__CCore__CCoreInkIndependentInputSource___x_ABI_CWindows__CUI__CCore__CPointerEventArgs_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CInput__CInking__CCore__CCoreInkIndependentInputSource___x_ABI_CWindows__CUI__CCore__CPointerEventArgs_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CInput__CInking__CCore__CCoreInkIndependentInputSource___x_ABI_CWindows__CUI__CCore__CPointerEventArgs __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CInput__CInking__CCore__CCoreInkIndependentInputSource___x_ABI_CWindows__CUI__CCore__CPointerEventArgs;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CInput__CInking__CCore__CCoreInkIndependentInputSource___x_ABI_CWindows__CUI__CCore__CPointerEventArgs;

    typedef struct __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CInput__CInking__CCore__CCoreInkIndependentInputSource___x_ABI_CWindows__CUI__CCore__CPointerEventArgsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CInput__CInking__CCore__CCoreInkIndependentInputSource___x_ABI_CWindows__CUI__CCore__CPointerEventArgs* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CInput__CInking__CCore__CCoreInkIndependentInputSource___x_ABI_CWindows__CUI__CCore__CPointerEventArgs* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CInput__CInking__CCore__CCoreInkIndependentInputSource___x_ABI_CWindows__CUI__CCore__CPointerEventArgs* This);
        HRESULT (STDMETHODCALLTYPE* Invoke)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CInput__CInking__CCore__CCoreInkIndependentInputSource___x_ABI_CWindows__CUI__CCore__CPointerEventArgs* This,
        __x_ABI_CWindows_CUI_CInput_CInking_CCore_CICoreInkIndependentInputSource* sender,
        __x_ABI_CWindows_CUI_CCore_CIPointerEventArgs* args);

        END_INTERFACE
    } __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CInput__CInking__CCore__CCoreInkIndependentInputSource___x_ABI_CWindows__CUI__CCore__CPointerEventArgsVtbl;

    interface __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CInput__CInking__CCore__CCoreInkIndependentInputSource___x_ABI_CWindows__CUI__CCore__CPointerEventArgs
    {
        CONST_VTBL struct __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CInput__CInking__CCore__CCoreInkIndependentInputSource___x_ABI_CWindows__CUI__CCore__CPointerEventArgsVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CInput__CInking__CCore__CCoreInkIndependentInputSource___x_ABI_CWindows__CUI__CCore__CPointerEventArgs_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CInput__CInking__CCore__CCoreWetStrokeUpdateSource___x_ABI_CWindows__CUI__CInput__CInking__CCore__CCoreWetStrokeUpdateEventArgs_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CInput__CInking__CCore__CCoreWetStrokeUpdateSource___x_ABI_CWindows__CUI__CInput__CInking__CCore__CCoreWetStrokeUpdateEventArgs_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CInput__CInking__CCore__CCoreWetStrokeUpdateSource___x_ABI_CWindows__CUI__CInput__CInking__CCore__CCoreWetStrokeUpdateEventArgs __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CInput__CInking__CCore__CCoreWetStrokeUpdateSource___x_ABI_CWindows__CUI__CInput__CInking__CCore__CCoreWetStrokeUpdateEventArgs;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CInput__CInking__CCore__CCoreWetStrokeUpdateSource___x_ABI_CWindows__CUI__CInput__CInking__CCore__CCoreWetStrokeUpdateEventArgs;

    typedef struct __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CInput__CInking__CCore__CCoreWetStrokeUpdateSource___x_ABI_CWindows__CUI__CInput__CInking__CCore__CCoreWetStrokeUpdateEventArgsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CInput__CInking__CCore__CCoreWetStrokeUpdateSource___x_ABI_CWindows__CUI__CInput__CInking__CCore__CCoreWetStrokeUpdateEventArgs* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CInput__CInking__CCore__CCoreWetStrokeUpdateSource___x_ABI_CWindows__CUI__CInput__CInking__CCore__CCoreWetStrokeUpdateEventArgs* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CInput__CInking__CCore__CCoreWetStrokeUpdateSource___x_ABI_CWindows__CUI__CInput__CInking__CCore__CCoreWetStrokeUpdateEventArgs* This);
        HRESULT (STDMETHODCALLTYPE* Invoke)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CInput__CInking__CCore__CCoreWetStrokeUpdateSource___x_ABI_CWindows__CUI__CInput__CInking__CCore__CCoreWetStrokeUpdateEventArgs* This,
        __x_ABI_CWindows_CUI_CInput_CInking_CCore_CICoreWetStrokeUpdateSource* sender,
        __x_ABI_CWindows_CUI_CInput_CInking_CCore_CICoreWetStrokeUpdateEventArgs* args);

        END_INTERFACE
    } __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CInput__CInking__CCore__CCoreWetStrokeUpdateSource___x_ABI_CWindows__CUI__CInput__CInking__CCore__CCoreWetStrokeUpdateEventArgsVtbl;

    interface __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CInput__CInking__CCore__CCoreWetStrokeUpdateSource___x_ABI_CWindows__CUI__CInput__CInking__CCore__CCoreWetStrokeUpdateEventArgs
    {
        CONST_VTBL struct __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CInput__CInking__CCore__CCoreWetStrokeUpdateSource___x_ABI_CWindows__CUI__CInput__CInking__CCore__CCoreWetStrokeUpdateEventArgsVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CInput__CInking__CCore__CCoreWetStrokeUpdateSource___x_ABI_CWindows__CUI__CInput__CInking__CCore__CCoreWetStrokeUpdateEventArgs_INTERFACE_DEFINED__
    
typedef struct __x_ABI_CWindows_CFoundation_CNumerics_CMatrix3x2 __x_ABI_CWindows_CFoundation_CNumerics_CMatrix3x2;

typedef struct __x_ABI_CWindows_CFoundation_CRect __x_ABI_CWindows_CFoundation_CRect;

#ifndef ____x_ABI_CWindows_CUI_CComposition_CIContainerVisual_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CComposition_CIContainerVisual_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CComposition_CIContainerVisual __x_ABI_CWindows_CUI_CComposition_CIContainerVisual;

#endif // ____x_ABI_CWindows_CUI_CComposition_CIContainerVisual_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CInput_CInking_CIInkDrawingAttributes_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CInput_CInking_CIInkDrawingAttributes_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CInput_CInking_CIInkDrawingAttributes __x_ABI_CWindows_CUI_CInput_CInking_CIInkDrawingAttributes;

#endif // ____x_ABI_CWindows_CUI_CInput_CInking_CIInkDrawingAttributes_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CInput_CInking_CIInkPresenter_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CInput_CInking_CIInkPresenter_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CInput_CInking_CIInkPresenter __x_ABI_CWindows_CUI_CInput_CInking_CIInkPresenter;

#endif // ____x_ABI_CWindows_CUI_CInput_CInking_CIInkPresenter_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CInput_CInking_CIInkStroke_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CInput_CInking_CIInkStroke_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CInput_CInking_CIInkStroke __x_ABI_CWindows_CUI_CInput_CInking_CIInkStroke;

#endif // ____x_ABI_CWindows_CUI_CInput_CInking_CIInkStroke_FWD_DEFINED__

typedef enum __x_ABI_CWindows_CUI_CInput_CInking_CCore_CCoreWetStrokeDisposition __x_ABI_CWindows_CUI_CInput_CInking_CCore_CCoreWetStrokeDisposition;

enum __x_ABI_CWindows_CUI_CInput_CInking_CCore_CCoreWetStrokeDisposition
    {
        __x_ABI_CWindows_CUI_CInput_CInking_CCore_CCoreWetStrokeDisposition_Inking = 0,
    __x_ABI_CWindows_CUI_CInput_CInking_CCore_CCoreWetStrokeDisposition_Completed = 1,
    __x_ABI_CWindows_CUI_CInput_CInking_CCore_CCoreWetStrokeDisposition_Canceled = 2,
};

#if !defined(____x_ABI_CWindows_CUI_CInput_CInking_CCore_CICoreIncrementalInkStroke_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CInput_CInking_CCore_CICoreIncrementalInkStroke_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CInput_CInking_CCore_CICoreIncrementalInkStrokeVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CInput_CInking_CCore_CICoreIncrementalInkStroke* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CInput_CInking_CCore_CICoreIncrementalInkStroke* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CInput_CInking_CCore_CICoreIncrementalInkStroke* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CInput_CInking_CCore_CICoreIncrementalInkStroke* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CInput_CInking_CCore_CICoreIncrementalInkStroke* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CInput_CInking_CCore_CICoreIncrementalInkStroke* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* AppendInkPoints)(__x_ABI_CWindows_CUI_CInput_CInking_CCore_CICoreIncrementalInkStroke* This,
        __x_ABI_C__FIIterable_1___x_ABI_CWindows__CUI__CInput__CInking__CInkPoint* inkPoints,
        struct __x_ABI_CWindows_CFoundation_CRect* result);
    HRESULT (STDMETHODCALLTYPE* CreateInkStroke)(__x_ABI_CWindows_CUI_CInput_CInking_CCore_CICoreIncrementalInkStroke* This,
        __x_ABI_CWindows_CUI_CInput_CInking_CIInkStroke** result);
    HRESULT (STDMETHODCALLTYPE* get_DrawingAttributes)(__x_ABI_CWindows_CUI_CInput_CInking_CCore_CICoreIncrementalInkStroke* This,
        __x_ABI_CWindows_CUI_CInput_CInking_CIInkDrawingAttributes** value);
    HRESULT (STDMETHODCALLTYPE* get_PointTransform)(__x_ABI_CWindows_CUI_CInput_CInking_CCore_CICoreIncrementalInkStroke* This,
        struct __x_ABI_CWindows_CFoundation_CNumerics_CMatrix3x2* value);
    HRESULT (STDMETHODCALLTYPE* get_BoundingRect)(__x_ABI_CWindows_CUI_CInput_CInking_CCore_CICoreIncrementalInkStroke* This,
        struct __x_ABI_CWindows_CFoundation_CRect* value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CInput_CInking_CCore_CICoreIncrementalInkStrokeVtbl;

    interface __x_ABI_CWindows_CUI_CInput_CInking_CCore_CICoreIncrementalInkStroke
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CInput_CInking_CCore_CICoreIncrementalInkStrokeVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CInput_CInking_CCore_CICoreIncrementalInkStroke;
#endif /* !defined(____x_ABI_CWindows_CUI_CInput_CInking_CCore_CICoreIncrementalInkStroke_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CInput_CInking_CCore_CICoreIncrementalInkStrokeFactory_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CInput_CInking_CCore_CICoreIncrementalInkStrokeFactory_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CInput_CInking_CCore_CICoreIncrementalInkStrokeFactoryVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CInput_CInking_CCore_CICoreIncrementalInkStrokeFactory* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CInput_CInking_CCore_CICoreIncrementalInkStrokeFactory* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CInput_CInking_CCore_CICoreIncrementalInkStrokeFactory* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CInput_CInking_CCore_CICoreIncrementalInkStrokeFactory* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CInput_CInking_CCore_CICoreIncrementalInkStrokeFactory* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CInput_CInking_CCore_CICoreIncrementalInkStrokeFactory* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* Create)(__x_ABI_CWindows_CUI_CInput_CInking_CCore_CICoreIncrementalInkStrokeFactory* This,
        __x_ABI_CWindows_CUI_CInput_CInking_CIInkDrawingAttributes* drawingAttributes,
        struct __x_ABI_CWindows_CFoundation_CNumerics_CMatrix3x2 pointTransform,
        __x_ABI_CWindows_CUI_CInput_CInking_CCore_CICoreIncrementalInkStroke** result);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CInput_CInking_CCore_CICoreIncrementalInkStrokeFactoryVtbl;

    interface __x_ABI_CWindows_CUI_CInput_CInking_CCore_CICoreIncrementalInkStrokeFactory
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CInput_CInking_CCore_CICoreIncrementalInkStrokeFactoryVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CInput_CInking_CCore_CICoreIncrementalInkStrokeFactory;
#endif /* !defined(____x_ABI_CWindows_CUI_CInput_CInking_CCore_CICoreIncrementalInkStrokeFactory_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CInput_CInking_CCore_CICoreInkIndependentInputSource_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CInput_CInking_CCore_CICoreInkIndependentInputSource_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CInput_CInking_CCore_CICoreInkIndependentInputSourceVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CInput_CInking_CCore_CICoreInkIndependentInputSource* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CInput_CInking_CCore_CICoreInkIndependentInputSource* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CInput_CInking_CCore_CICoreInkIndependentInputSource* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CInput_CInking_CCore_CICoreInkIndependentInputSource* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CInput_CInking_CCore_CICoreInkIndependentInputSource* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CInput_CInking_CCore_CICoreInkIndependentInputSource* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* add_PointerEntering)(__x_ABI_CWindows_CUI_CInput_CInking_CCore_CICoreInkIndependentInputSource* This,
        __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CInput__CInking__CCore__CCoreInkIndependentInputSource___x_ABI_CWindows__CUI__CCore__CPointerEventArgs* handler,
        EventRegistrationToken* cookie);
    HRESULT (STDMETHODCALLTYPE* remove_PointerEntering)(__x_ABI_CWindows_CUI_CInput_CInking_CCore_CICoreInkIndependentInputSource* This,
        EventRegistrationToken cookie);
    HRESULT (STDMETHODCALLTYPE* add_PointerHovering)(__x_ABI_CWindows_CUI_CInput_CInking_CCore_CICoreInkIndependentInputSource* This,
        __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CInput__CInking__CCore__CCoreInkIndependentInputSource___x_ABI_CWindows__CUI__CCore__CPointerEventArgs* handler,
        EventRegistrationToken* cookie);
    HRESULT (STDMETHODCALLTYPE* remove_PointerHovering)(__x_ABI_CWindows_CUI_CInput_CInking_CCore_CICoreInkIndependentInputSource* This,
        EventRegistrationToken cookie);
    HRESULT (STDMETHODCALLTYPE* add_PointerExiting)(__x_ABI_CWindows_CUI_CInput_CInking_CCore_CICoreInkIndependentInputSource* This,
        __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CInput__CInking__CCore__CCoreInkIndependentInputSource___x_ABI_CWindows__CUI__CCore__CPointerEventArgs* handler,
        EventRegistrationToken* cookie);
    HRESULT (STDMETHODCALLTYPE* remove_PointerExiting)(__x_ABI_CWindows_CUI_CInput_CInking_CCore_CICoreInkIndependentInputSource* This,
        EventRegistrationToken cookie);
    HRESULT (STDMETHODCALLTYPE* add_PointerPressing)(__x_ABI_CWindows_CUI_CInput_CInking_CCore_CICoreInkIndependentInputSource* This,
        __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CInput__CInking__CCore__CCoreInkIndependentInputSource___x_ABI_CWindows__CUI__CCore__CPointerEventArgs* handler,
        EventRegistrationToken* cookie);
    HRESULT (STDMETHODCALLTYPE* remove_PointerPressing)(__x_ABI_CWindows_CUI_CInput_CInking_CCore_CICoreInkIndependentInputSource* This,
        EventRegistrationToken cookie);
    HRESULT (STDMETHODCALLTYPE* add_PointerMoving)(__x_ABI_CWindows_CUI_CInput_CInking_CCore_CICoreInkIndependentInputSource* This,
        __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CInput__CInking__CCore__CCoreInkIndependentInputSource___x_ABI_CWindows__CUI__CCore__CPointerEventArgs* handler,
        EventRegistrationToken* cookie);
    HRESULT (STDMETHODCALLTYPE* remove_PointerMoving)(__x_ABI_CWindows_CUI_CInput_CInking_CCore_CICoreInkIndependentInputSource* This,
        EventRegistrationToken cookie);
    HRESULT (STDMETHODCALLTYPE* add_PointerReleasing)(__x_ABI_CWindows_CUI_CInput_CInking_CCore_CICoreInkIndependentInputSource* This,
        __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CInput__CInking__CCore__CCoreInkIndependentInputSource___x_ABI_CWindows__CUI__CCore__CPointerEventArgs* handler,
        EventRegistrationToken* cookie);
    HRESULT (STDMETHODCALLTYPE* remove_PointerReleasing)(__x_ABI_CWindows_CUI_CInput_CInking_CCore_CICoreInkIndependentInputSource* This,
        EventRegistrationToken cookie);
    HRESULT (STDMETHODCALLTYPE* add_PointerLost)(__x_ABI_CWindows_CUI_CInput_CInking_CCore_CICoreInkIndependentInputSource* This,
        __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CInput__CInking__CCore__CCoreInkIndependentInputSource___x_ABI_CWindows__CUI__CCore__CPointerEventArgs* handler,
        EventRegistrationToken* cookie);
    HRESULT (STDMETHODCALLTYPE* remove_PointerLost)(__x_ABI_CWindows_CUI_CInput_CInking_CCore_CICoreInkIndependentInputSource* This,
        EventRegistrationToken cookie);
    HRESULT (STDMETHODCALLTYPE* get_InkPresenter)(__x_ABI_CWindows_CUI_CInput_CInking_CCore_CICoreInkIndependentInputSource* This,
        __x_ABI_CWindows_CUI_CInput_CInking_CIInkPresenter** value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CInput_CInking_CCore_CICoreInkIndependentInputSourceVtbl;

    interface __x_ABI_CWindows_CUI_CInput_CInking_CCore_CICoreInkIndependentInputSource
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CInput_CInking_CCore_CICoreInkIndependentInputSourceVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CInput_CInking_CCore_CICoreInkIndependentInputSource;
#endif /* !defined(____x_ABI_CWindows_CUI_CInput_CInking_CCore_CICoreInkIndependentInputSource_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CInput_CInking_CCore_CICoreInkIndependentInputSourceStatics_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CInput_CInking_CCore_CICoreInkIndependentInputSourceStatics_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CInput_CInking_CCore_CICoreInkIndependentInputSourceStaticsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CInput_CInking_CCore_CICoreInkIndependentInputSourceStatics* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CInput_CInking_CCore_CICoreInkIndependentInputSourceStatics* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CInput_CInking_CCore_CICoreInkIndependentInputSourceStatics* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CInput_CInking_CCore_CICoreInkIndependentInputSourceStatics* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CInput_CInking_CCore_CICoreInkIndependentInputSourceStatics* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CInput_CInking_CCore_CICoreInkIndependentInputSourceStatics* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* Create)(__x_ABI_CWindows_CUI_CInput_CInking_CCore_CICoreInkIndependentInputSourceStatics* This,
        __x_ABI_CWindows_CUI_CInput_CInking_CIInkPresenter* inkPresenter,
        __x_ABI_CWindows_CUI_CInput_CInking_CCore_CICoreInkIndependentInputSource** inkIndependentInputSource);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CInput_CInking_CCore_CICoreInkIndependentInputSourceStaticsVtbl;

    interface __x_ABI_CWindows_CUI_CInput_CInking_CCore_CICoreInkIndependentInputSourceStatics
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CInput_CInking_CCore_CICoreInkIndependentInputSourceStaticsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CInput_CInking_CCore_CICoreInkIndependentInputSourceStatics;
#endif /* !defined(____x_ABI_CWindows_CUI_CInput_CInking_CCore_CICoreInkIndependentInputSourceStatics_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CInput_CInking_CCore_CICoreInkPresenterHost_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CInput_CInking_CCore_CICoreInkPresenterHost_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CInput_CInking_CCore_CICoreInkPresenterHostVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CInput_CInking_CCore_CICoreInkPresenterHost* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CInput_CInking_CCore_CICoreInkPresenterHost* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CInput_CInking_CCore_CICoreInkPresenterHost* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CInput_CInking_CCore_CICoreInkPresenterHost* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CInput_CInking_CCore_CICoreInkPresenterHost* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CInput_CInking_CCore_CICoreInkPresenterHost* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_InkPresenter)(__x_ABI_CWindows_CUI_CInput_CInking_CCore_CICoreInkPresenterHost* This,
        __x_ABI_CWindows_CUI_CInput_CInking_CIInkPresenter** value);
    HRESULT (STDMETHODCALLTYPE* get_RootVisual)(__x_ABI_CWindows_CUI_CInput_CInking_CCore_CICoreInkPresenterHost* This,
        __x_ABI_CWindows_CUI_CComposition_CIContainerVisual** value);
    HRESULT (STDMETHODCALLTYPE* put_RootVisual)(__x_ABI_CWindows_CUI_CInput_CInking_CCore_CICoreInkPresenterHost* This,
        __x_ABI_CWindows_CUI_CComposition_CIContainerVisual* value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CInput_CInking_CCore_CICoreInkPresenterHostVtbl;

    interface __x_ABI_CWindows_CUI_CInput_CInking_CCore_CICoreInkPresenterHost
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CInput_CInking_CCore_CICoreInkPresenterHostVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CInput_CInking_CCore_CICoreInkPresenterHost;
#endif /* !defined(____x_ABI_CWindows_CUI_CInput_CInking_CCore_CICoreInkPresenterHost_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CInput_CInking_CCore_CICoreWetStrokeUpdateEventArgs_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CInput_CInking_CCore_CICoreWetStrokeUpdateEventArgs_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CInput_CInking_CCore_CICoreWetStrokeUpdateEventArgsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CInput_CInking_CCore_CICoreWetStrokeUpdateEventArgs* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CInput_CInking_CCore_CICoreWetStrokeUpdateEventArgs* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CInput_CInking_CCore_CICoreWetStrokeUpdateEventArgs* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CInput_CInking_CCore_CICoreWetStrokeUpdateEventArgs* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CInput_CInking_CCore_CICoreWetStrokeUpdateEventArgs* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CInput_CInking_CCore_CICoreWetStrokeUpdateEventArgs* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_NewInkPoints)(__x_ABI_CWindows_CUI_CInput_CInking_CCore_CICoreWetStrokeUpdateEventArgs* This,
        __x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CInput__CInking__CInkPoint** value);
    HRESULT (STDMETHODCALLTYPE* get_PointerId)(__x_ABI_CWindows_CUI_CInput_CInking_CCore_CICoreWetStrokeUpdateEventArgs* This,
        UINT32* value);
    HRESULT (STDMETHODCALLTYPE* get_Disposition)(__x_ABI_CWindows_CUI_CInput_CInking_CCore_CICoreWetStrokeUpdateEventArgs* This,
        enum __x_ABI_CWindows_CUI_CInput_CInking_CCore_CCoreWetStrokeDisposition* value);
    HRESULT (STDMETHODCALLTYPE* put_Disposition)(__x_ABI_CWindows_CUI_CInput_CInking_CCore_CICoreWetStrokeUpdateEventArgs* This,
        enum __x_ABI_CWindows_CUI_CInput_CInking_CCore_CCoreWetStrokeDisposition value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CInput_CInking_CCore_CICoreWetStrokeUpdateEventArgsVtbl;

    interface __x_ABI_CWindows_CUI_CInput_CInking_CCore_CICoreWetStrokeUpdateEventArgs
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CInput_CInking_CCore_CICoreWetStrokeUpdateEventArgsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CInput_CInking_CCore_CICoreWetStrokeUpdateEventArgs;
#endif /* !defined(____x_ABI_CWindows_CUI_CInput_CInking_CCore_CICoreWetStrokeUpdateEventArgs_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CInput_CInking_CCore_CICoreWetStrokeUpdateSource_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CInput_CInking_CCore_CICoreWetStrokeUpdateSource_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CInput_CInking_CCore_CICoreWetStrokeUpdateSourceVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CInput_CInking_CCore_CICoreWetStrokeUpdateSource* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CInput_CInking_CCore_CICoreWetStrokeUpdateSource* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CInput_CInking_CCore_CICoreWetStrokeUpdateSource* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CInput_CInking_CCore_CICoreWetStrokeUpdateSource* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CInput_CInking_CCore_CICoreWetStrokeUpdateSource* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CInput_CInking_CCore_CICoreWetStrokeUpdateSource* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* add_WetStrokeStarting)(__x_ABI_CWindows_CUI_CInput_CInking_CCore_CICoreWetStrokeUpdateSource* This,
        __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CInput__CInking__CCore__CCoreWetStrokeUpdateSource___x_ABI_CWindows__CUI__CInput__CInking__CCore__CCoreWetStrokeUpdateEventArgs* handler,
        EventRegistrationToken* cookie);
    HRESULT (STDMETHODCALLTYPE* remove_WetStrokeStarting)(__x_ABI_CWindows_CUI_CInput_CInking_CCore_CICoreWetStrokeUpdateSource* This,
        EventRegistrationToken cookie);
    HRESULT (STDMETHODCALLTYPE* add_WetStrokeContinuing)(__x_ABI_CWindows_CUI_CInput_CInking_CCore_CICoreWetStrokeUpdateSource* This,
        __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CInput__CInking__CCore__CCoreWetStrokeUpdateSource___x_ABI_CWindows__CUI__CInput__CInking__CCore__CCoreWetStrokeUpdateEventArgs* handler,
        EventRegistrationToken* cookie);
    HRESULT (STDMETHODCALLTYPE* remove_WetStrokeContinuing)(__x_ABI_CWindows_CUI_CInput_CInking_CCore_CICoreWetStrokeUpdateSource* This,
        EventRegistrationToken cookie);
    HRESULT (STDMETHODCALLTYPE* add_WetStrokeStopping)(__x_ABI_CWindows_CUI_CInput_CInking_CCore_CICoreWetStrokeUpdateSource* This,
        __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CInput__CInking__CCore__CCoreWetStrokeUpdateSource___x_ABI_CWindows__CUI__CInput__CInking__CCore__CCoreWetStrokeUpdateEventArgs* handler,
        EventRegistrationToken* cookie);
    HRESULT (STDMETHODCALLTYPE* remove_WetStrokeStopping)(__x_ABI_CWindows_CUI_CInput_CInking_CCore_CICoreWetStrokeUpdateSource* This,
        EventRegistrationToken cookie);
    HRESULT (STDMETHODCALLTYPE* add_WetStrokeCompleted)(__x_ABI_CWindows_CUI_CInput_CInking_CCore_CICoreWetStrokeUpdateSource* This,
        __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CInput__CInking__CCore__CCoreWetStrokeUpdateSource___x_ABI_CWindows__CUI__CInput__CInking__CCore__CCoreWetStrokeUpdateEventArgs* handler,
        EventRegistrationToken* cookie);
    HRESULT (STDMETHODCALLTYPE* remove_WetStrokeCompleted)(__x_ABI_CWindows_CUI_CInput_CInking_CCore_CICoreWetStrokeUpdateSource* This,
        EventRegistrationToken cookie);
    HRESULT (STDMETHODCALLTYPE* add_WetStrokeCanceled)(__x_ABI_CWindows_CUI_CInput_CInking_CCore_CICoreWetStrokeUpdateSource* This,
        __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CInput__CInking__CCore__CCoreWetStrokeUpdateSource___x_ABI_CWindows__CUI__CInput__CInking__CCore__CCoreWetStrokeUpdateEventArgs* handler,
        EventRegistrationToken* cookie);
    HRESULT (STDMETHODCALLTYPE* remove_WetStrokeCanceled)(__x_ABI_CWindows_CUI_CInput_CInking_CCore_CICoreWetStrokeUpdateSource* This,
        EventRegistrationToken cookie);
    HRESULT (STDMETHODCALLTYPE* get_InkPresenter)(__x_ABI_CWindows_CUI_CInput_CInking_CCore_CICoreWetStrokeUpdateSource* This,
        __x_ABI_CWindows_CUI_CInput_CInking_CIInkPresenter** value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CInput_CInking_CCore_CICoreWetStrokeUpdateSourceVtbl;

    interface __x_ABI_CWindows_CUI_CInput_CInking_CCore_CICoreWetStrokeUpdateSource
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CInput_CInking_CCore_CICoreWetStrokeUpdateSourceVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CInput_CInking_CCore_CICoreWetStrokeUpdateSource;
#endif /* !defined(____x_ABI_CWindows_CUI_CInput_CInking_CCore_CICoreWetStrokeUpdateSource_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CInput_CInking_CCore_CICoreWetStrokeUpdateSourceStatics_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CInput_CInking_CCore_CICoreWetStrokeUpdateSourceStatics_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CInput_CInking_CCore_CICoreWetStrokeUpdateSourceStaticsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CInput_CInking_CCore_CICoreWetStrokeUpdateSourceStatics* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CInput_CInking_CCore_CICoreWetStrokeUpdateSourceStatics* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CInput_CInking_CCore_CICoreWetStrokeUpdateSourceStatics* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CInput_CInking_CCore_CICoreWetStrokeUpdateSourceStatics* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CInput_CInking_CCore_CICoreWetStrokeUpdateSourceStatics* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CInput_CInking_CCore_CICoreWetStrokeUpdateSourceStatics* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* Create)(__x_ABI_CWindows_CUI_CInput_CInking_CCore_CICoreWetStrokeUpdateSourceStatics* This,
        __x_ABI_CWindows_CUI_CInput_CInking_CIInkPresenter* inkPresenter,
        __x_ABI_CWindows_CUI_CInput_CInking_CCore_CICoreWetStrokeUpdateSource** WetStrokeUpdateSource);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CInput_CInking_CCore_CICoreWetStrokeUpdateSourceStaticsVtbl;

    interface __x_ABI_CWindows_CUI_CInput_CInking_CCore_CICoreWetStrokeUpdateSourceStatics
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CInput_CInking_CCore_CICoreWetStrokeUpdateSourceStaticsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CInput_CInking_CCore_CICoreWetStrokeUpdateSourceStatics;
#endif /* !defined(____x_ABI_CWindows_CUI_CInput_CInking_CCore_CICoreWetStrokeUpdateSourceStatics_INTERFACE_DEFINED__) */
    
