// WARNING: Please don't edit this file. It was generated by Swift/WinRT v0.0.1

#pragma once
// Header files for imported files
#include <inspectable.h>
#include <EventToken.h>
#include <windowscontracts.h>
#include "Windows.Foundation.h"
#include "Windows.Graphics.Imaging.h"
#include "Windows.Storage.h"
#include "Windows.Storage.Streams.h"
// Importing Collections header
#include "Windows.Foundation.Collections.h"

/* Forward Declarations */
#ifndef ____x_ABI_CWindows_CAI_CMachineLearning_CPreview_CIImageVariableDescriptorPreview_FWD_DEFINED__
#define ____x_ABI_CWindows_CAI_CMachineLearning_CPreview_CIImageVariableDescriptorPreview_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CAI_CMachineLearning_CPreview_CIImageVariableDescriptorPreview __x_ABI_CWindows_CAI_CMachineLearning_CPreview_CIImageVariableDescriptorPreview;

#endif // ____x_ABI_CWindows_CAI_CMachineLearning_CPreview_CIImageVariableDescriptorPreview_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CAI_CMachineLearning_CPreview_CIInferencingOptionsPreview_FWD_DEFINED__
#define ____x_ABI_CWindows_CAI_CMachineLearning_CPreview_CIInferencingOptionsPreview_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CAI_CMachineLearning_CPreview_CIInferencingOptionsPreview __x_ABI_CWindows_CAI_CMachineLearning_CPreview_CIInferencingOptionsPreview;

#endif // ____x_ABI_CWindows_CAI_CMachineLearning_CPreview_CIInferencingOptionsPreview_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CAI_CMachineLearning_CPreview_CILearningModelBindingPreview_FWD_DEFINED__
#define ____x_ABI_CWindows_CAI_CMachineLearning_CPreview_CILearningModelBindingPreview_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CAI_CMachineLearning_CPreview_CILearningModelBindingPreview __x_ABI_CWindows_CAI_CMachineLearning_CPreview_CILearningModelBindingPreview;

#endif // ____x_ABI_CWindows_CAI_CMachineLearning_CPreview_CILearningModelBindingPreview_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CAI_CMachineLearning_CPreview_CILearningModelBindingPreviewFactory_FWD_DEFINED__
#define ____x_ABI_CWindows_CAI_CMachineLearning_CPreview_CILearningModelBindingPreviewFactory_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CAI_CMachineLearning_CPreview_CILearningModelBindingPreviewFactory __x_ABI_CWindows_CAI_CMachineLearning_CPreview_CILearningModelBindingPreviewFactory;

#endif // ____x_ABI_CWindows_CAI_CMachineLearning_CPreview_CILearningModelBindingPreviewFactory_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CAI_CMachineLearning_CPreview_CILearningModelDescriptionPreview_FWD_DEFINED__
#define ____x_ABI_CWindows_CAI_CMachineLearning_CPreview_CILearningModelDescriptionPreview_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CAI_CMachineLearning_CPreview_CILearningModelDescriptionPreview __x_ABI_CWindows_CAI_CMachineLearning_CPreview_CILearningModelDescriptionPreview;

#endif // ____x_ABI_CWindows_CAI_CMachineLearning_CPreview_CILearningModelDescriptionPreview_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CAI_CMachineLearning_CPreview_CILearningModelEvaluationResultPreview_FWD_DEFINED__
#define ____x_ABI_CWindows_CAI_CMachineLearning_CPreview_CILearningModelEvaluationResultPreview_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CAI_CMachineLearning_CPreview_CILearningModelEvaluationResultPreview __x_ABI_CWindows_CAI_CMachineLearning_CPreview_CILearningModelEvaluationResultPreview;

#endif // ____x_ABI_CWindows_CAI_CMachineLearning_CPreview_CILearningModelEvaluationResultPreview_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CAI_CMachineLearning_CPreview_CILearningModelPreview_FWD_DEFINED__
#define ____x_ABI_CWindows_CAI_CMachineLearning_CPreview_CILearningModelPreview_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CAI_CMachineLearning_CPreview_CILearningModelPreview __x_ABI_CWindows_CAI_CMachineLearning_CPreview_CILearningModelPreview;

#endif // ____x_ABI_CWindows_CAI_CMachineLearning_CPreview_CILearningModelPreview_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CAI_CMachineLearning_CPreview_CILearningModelPreviewStatics_FWD_DEFINED__
#define ____x_ABI_CWindows_CAI_CMachineLearning_CPreview_CILearningModelPreviewStatics_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CAI_CMachineLearning_CPreview_CILearningModelPreviewStatics __x_ABI_CWindows_CAI_CMachineLearning_CPreview_CILearningModelPreviewStatics;

#endif // ____x_ABI_CWindows_CAI_CMachineLearning_CPreview_CILearningModelPreviewStatics_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CAI_CMachineLearning_CPreview_CILearningModelVariableDescriptorPreview_FWD_DEFINED__
#define ____x_ABI_CWindows_CAI_CMachineLearning_CPreview_CILearningModelVariableDescriptorPreview_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CAI_CMachineLearning_CPreview_CILearningModelVariableDescriptorPreview __x_ABI_CWindows_CAI_CMachineLearning_CPreview_CILearningModelVariableDescriptorPreview;

#endif // ____x_ABI_CWindows_CAI_CMachineLearning_CPreview_CILearningModelVariableDescriptorPreview_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CAI_CMachineLearning_CPreview_CIMapVariableDescriptorPreview_FWD_DEFINED__
#define ____x_ABI_CWindows_CAI_CMachineLearning_CPreview_CIMapVariableDescriptorPreview_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CAI_CMachineLearning_CPreview_CIMapVariableDescriptorPreview __x_ABI_CWindows_CAI_CMachineLearning_CPreview_CIMapVariableDescriptorPreview;

#endif // ____x_ABI_CWindows_CAI_CMachineLearning_CPreview_CIMapVariableDescriptorPreview_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CAI_CMachineLearning_CPreview_CISequenceVariableDescriptorPreview_FWD_DEFINED__
#define ____x_ABI_CWindows_CAI_CMachineLearning_CPreview_CISequenceVariableDescriptorPreview_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CAI_CMachineLearning_CPreview_CISequenceVariableDescriptorPreview __x_ABI_CWindows_CAI_CMachineLearning_CPreview_CISequenceVariableDescriptorPreview;

#endif // ____x_ABI_CWindows_CAI_CMachineLearning_CPreview_CISequenceVariableDescriptorPreview_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CAI_CMachineLearning_CPreview_CITensorVariableDescriptorPreview_FWD_DEFINED__
#define ____x_ABI_CWindows_CAI_CMachineLearning_CPreview_CITensorVariableDescriptorPreview_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CAI_CMachineLearning_CPreview_CITensorVariableDescriptorPreview __x_ABI_CWindows_CAI_CMachineLearning_CPreview_CITensorVariableDescriptorPreview;

#endif // ____x_ABI_CWindows_CAI_CMachineLearning_CPreview_CITensorVariableDescriptorPreview_FWD_DEFINED__

// Parameterized interface forward declarations (C)

// Collection interface definitions

typedef interface __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CAI__CMachineLearning__CPreview__CLearningModelEvaluationResultPreview __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CAI__CMachineLearning__CPreview__CLearningModelEvaluationResultPreview;

#if !defined(____x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CAI__CMachineLearning__CPreview__CLearningModelEvaluationResultPreview_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CAI__CMachineLearning__CPreview__CLearningModelEvaluationResultPreview_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CAI__CMachineLearning__CPreview__CLearningModelEvaluationResultPreview __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CAI__CMachineLearning__CPreview__CLearningModelEvaluationResultPreview;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CAI__CMachineLearning__CPreview__CLearningModelEvaluationResultPreview;

    typedef struct __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CAI__CMachineLearning__CPreview__CLearningModelEvaluationResultPreviewVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CAI__CMachineLearning__CPreview__CLearningModelEvaluationResultPreview* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CAI__CMachineLearning__CPreview__CLearningModelEvaluationResultPreview* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CAI__CMachineLearning__CPreview__CLearningModelEvaluationResultPreview* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CAI__CMachineLearning__CPreview__CLearningModelEvaluationResultPreview* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CAI__CMachineLearning__CPreview__CLearningModelEvaluationResultPreview* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CAI__CMachineLearning__CPreview__CLearningModelEvaluationResultPreview* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* put_Completed)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CAI__CMachineLearning__CPreview__CLearningModelEvaluationResultPreview* This,
        __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CAI__CMachineLearning__CPreview__CLearningModelEvaluationResultPreview* handler);
    HRESULT (STDMETHODCALLTYPE* get_Completed)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CAI__CMachineLearning__CPreview__CLearningModelEvaluationResultPreview* This,
        __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CAI__CMachineLearning__CPreview__CLearningModelEvaluationResultPreview** result);
    HRESULT (STDMETHODCALLTYPE* GetResults)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CAI__CMachineLearning__CPreview__CLearningModelEvaluationResultPreview* This,
        __x_ABI_CWindows_CAI_CMachineLearning_CPreview_CILearningModelEvaluationResultPreview** result);

        END_INTERFACE
    } __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CAI__CMachineLearning__CPreview__CLearningModelEvaluationResultPreviewVtbl;

    interface __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CAI__CMachineLearning__CPreview__CLearningModelEvaluationResultPreview
    {
        CONST_VTBL struct __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CAI__CMachineLearning__CPreview__CLearningModelEvaluationResultPreviewVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CAI__CMachineLearning__CPreview__CLearningModelEvaluationResultPreview_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CAI__CMachineLearning__CPreview__CLearningModelEvaluationResultPreview_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CAI__CMachineLearning__CPreview__CLearningModelEvaluationResultPreview_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CAI__CMachineLearning__CPreview__CLearningModelEvaluationResultPreview __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CAI__CMachineLearning__CPreview__CLearningModelEvaluationResultPreview;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CAI__CMachineLearning__CPreview__CLearningModelEvaluationResultPreview;

    typedef struct __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CAI__CMachineLearning__CPreview__CLearningModelEvaluationResultPreviewVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CAI__CMachineLearning__CPreview__CLearningModelEvaluationResultPreview* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CAI__CMachineLearning__CPreview__CLearningModelEvaluationResultPreview* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CAI__CMachineLearning__CPreview__CLearningModelEvaluationResultPreview* This);
        HRESULT (STDMETHODCALLTYPE* Invoke)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CAI__CMachineLearning__CPreview__CLearningModelEvaluationResultPreview* This,
        __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CAI__CMachineLearning__CPreview__CLearningModelEvaluationResultPreview* asyncInfo,
        enum __x_ABI_CWindows_CFoundation_CAsyncStatus asyncStatus);

        END_INTERFACE
    } __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CAI__CMachineLearning__CPreview__CLearningModelEvaluationResultPreviewVtbl;

    interface __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CAI__CMachineLearning__CPreview__CLearningModelEvaluationResultPreview
    {
        CONST_VTBL struct __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CAI__CMachineLearning__CPreview__CLearningModelEvaluationResultPreviewVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CAI__CMachineLearning__CPreview__CLearningModelEvaluationResultPreview_INTERFACE_DEFINED__
    
typedef interface __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CAI__CMachineLearning__CPreview__CLearningModelPreview __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CAI__CMachineLearning__CPreview__CLearningModelPreview;

#if !defined(____x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CAI__CMachineLearning__CPreview__CLearningModelPreview_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CAI__CMachineLearning__CPreview__CLearningModelPreview_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CAI__CMachineLearning__CPreview__CLearningModelPreview __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CAI__CMachineLearning__CPreview__CLearningModelPreview;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CAI__CMachineLearning__CPreview__CLearningModelPreview;

    typedef struct __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CAI__CMachineLearning__CPreview__CLearningModelPreviewVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CAI__CMachineLearning__CPreview__CLearningModelPreview* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CAI__CMachineLearning__CPreview__CLearningModelPreview* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CAI__CMachineLearning__CPreview__CLearningModelPreview* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CAI__CMachineLearning__CPreview__CLearningModelPreview* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CAI__CMachineLearning__CPreview__CLearningModelPreview* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CAI__CMachineLearning__CPreview__CLearningModelPreview* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* put_Completed)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CAI__CMachineLearning__CPreview__CLearningModelPreview* This,
        __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CAI__CMachineLearning__CPreview__CLearningModelPreview* handler);
    HRESULT (STDMETHODCALLTYPE* get_Completed)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CAI__CMachineLearning__CPreview__CLearningModelPreview* This,
        __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CAI__CMachineLearning__CPreview__CLearningModelPreview** result);
    HRESULT (STDMETHODCALLTYPE* GetResults)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CAI__CMachineLearning__CPreview__CLearningModelPreview* This,
        __x_ABI_CWindows_CAI_CMachineLearning_CPreview_CILearningModelPreview** result);

        END_INTERFACE
    } __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CAI__CMachineLearning__CPreview__CLearningModelPreviewVtbl;

    interface __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CAI__CMachineLearning__CPreview__CLearningModelPreview
    {
        CONST_VTBL struct __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CAI__CMachineLearning__CPreview__CLearningModelPreviewVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CAI__CMachineLearning__CPreview__CLearningModelPreview_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CAI__CMachineLearning__CPreview__CLearningModelPreview_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CAI__CMachineLearning__CPreview__CLearningModelPreview_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CAI__CMachineLearning__CPreview__CLearningModelPreview __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CAI__CMachineLearning__CPreview__CLearningModelPreview;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CAI__CMachineLearning__CPreview__CLearningModelPreview;

    typedef struct __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CAI__CMachineLearning__CPreview__CLearningModelPreviewVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CAI__CMachineLearning__CPreview__CLearningModelPreview* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CAI__CMachineLearning__CPreview__CLearningModelPreview* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CAI__CMachineLearning__CPreview__CLearningModelPreview* This);
        HRESULT (STDMETHODCALLTYPE* Invoke)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CAI__CMachineLearning__CPreview__CLearningModelPreview* This,
        __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CAI__CMachineLearning__CPreview__CLearningModelPreview* asyncInfo,
        enum __x_ABI_CWindows_CFoundation_CAsyncStatus asyncStatus);

        END_INTERFACE
    } __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CAI__CMachineLearning__CPreview__CLearningModelPreviewVtbl;

    interface __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CAI__CMachineLearning__CPreview__CLearningModelPreview
    {
        CONST_VTBL struct __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CAI__CMachineLearning__CPreview__CLearningModelPreviewVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CAI__CMachineLearning__CPreview__CLearningModelPreview_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIIterator_1___z__zint64_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIIterator_1___z__zint64_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIIterator_1___z__zint64 __x_ABI_C__FIIterator_1___z__zint64;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIIterator_1___z__zint64;

    typedef struct __x_ABI_C__FIIterator_1___z__zint64Vtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIIterator_1___z__zint64* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIIterator_1___z__zint64* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIIterator_1___z__zint64* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIIterator_1___z__zint64* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIIterator_1___z__zint64* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIIterator_1___z__zint64* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Current)(__x_ABI_C__FIIterator_1___z__zint64* This,
        INT64* result);
    HRESULT (STDMETHODCALLTYPE* get_HasCurrent)(__x_ABI_C__FIIterator_1___z__zint64* This,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* MoveNext)(__x_ABI_C__FIIterator_1___z__zint64* This,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__x_ABI_C__FIIterator_1___z__zint64* This,
        UINT32 itemsLength,
        INT64* items,
        UINT32* result);

        END_INTERFACE
    } __x_ABI_C__FIIterator_1___z__zint64Vtbl;

    interface __x_ABI_C__FIIterator_1___z__zint64
    {
        CONST_VTBL struct __x_ABI_C__FIIterator_1___z__zint64Vtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIIterator_1___z__zint64_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIIterable_1___z__zint64_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIIterable_1___z__zint64_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIIterable_1___z__zint64 __x_ABI_C__FIIterable_1___z__zint64;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIIterable_1___z__zint64;

    typedef struct __x_ABI_C__FIIterable_1___z__zint64Vtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIIterable_1___z__zint64* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIIterable_1___z__zint64* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIIterable_1___z__zint64* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIIterable_1___z__zint64* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIIterable_1___z__zint64* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIIterable_1___z__zint64* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* First)(__x_ABI_C__FIIterable_1___z__zint64* This,
        __x_ABI_C__FIIterator_1___z__zint64** result);

        END_INTERFACE
    } __x_ABI_C__FIIterable_1___z__zint64Vtbl;

    interface __x_ABI_C__FIIterable_1___z__zint64
    {
        CONST_VTBL struct __x_ABI_C__FIIterable_1___z__zint64Vtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIIterable_1___z__zint64_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIIterator_1_HSTRING_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIIterator_1_HSTRING_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIIterator_1_HSTRING __x_ABI_C__FIIterator_1_HSTRING;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIIterator_1_HSTRING;

    typedef struct __x_ABI_C__FIIterator_1_HSTRINGVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIIterator_1_HSTRING* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIIterator_1_HSTRING* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIIterator_1_HSTRING* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIIterator_1_HSTRING* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIIterator_1_HSTRING* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIIterator_1_HSTRING* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Current)(__x_ABI_C__FIIterator_1_HSTRING* This,
        HSTRING* result);
    HRESULT (STDMETHODCALLTYPE* get_HasCurrent)(__x_ABI_C__FIIterator_1_HSTRING* This,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* MoveNext)(__x_ABI_C__FIIterator_1_HSTRING* This,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__x_ABI_C__FIIterator_1_HSTRING* This,
        UINT32 itemsLength,
        HSTRING* items,
        UINT32* result);

        END_INTERFACE
    } __x_ABI_C__FIIterator_1_HSTRINGVtbl;

    interface __x_ABI_C__FIIterator_1_HSTRING
    {
        CONST_VTBL struct __x_ABI_C__FIIterator_1_HSTRINGVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIIterator_1_HSTRING_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIIterable_1_HSTRING_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIIterable_1_HSTRING_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIIterable_1_HSTRING __x_ABI_C__FIIterable_1_HSTRING;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIIterable_1_HSTRING;

    typedef struct __x_ABI_C__FIIterable_1_HSTRINGVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIIterable_1_HSTRING* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIIterable_1_HSTRING* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIIterable_1_HSTRING* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIIterable_1_HSTRING* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIIterable_1_HSTRING* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIIterable_1_HSTRING* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* First)(__x_ABI_C__FIIterable_1_HSTRING* This,
        __x_ABI_C__FIIterator_1_HSTRING** result);

        END_INTERFACE
    } __x_ABI_C__FIIterable_1_HSTRINGVtbl;

    interface __x_ABI_C__FIIterable_1_HSTRING
    {
        CONST_VTBL struct __x_ABI_C__FIIterable_1_HSTRINGVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIIterable_1_HSTRING_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIIterator_1___x_ABI_CWindows__CAI__CMachineLearning__CPreview__CILearningModelVariableDescriptorPreview_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIIterator_1___x_ABI_CWindows__CAI__CMachineLearning__CPreview__CILearningModelVariableDescriptorPreview_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIIterator_1___x_ABI_CWindows__CAI__CMachineLearning__CPreview__CILearningModelVariableDescriptorPreview __x_ABI_C__FIIterator_1___x_ABI_CWindows__CAI__CMachineLearning__CPreview__CILearningModelVariableDescriptorPreview;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIIterator_1___x_ABI_CWindows__CAI__CMachineLearning__CPreview__CILearningModelVariableDescriptorPreview;

    typedef struct __x_ABI_C__FIIterator_1___x_ABI_CWindows__CAI__CMachineLearning__CPreview__CILearningModelVariableDescriptorPreviewVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CAI__CMachineLearning__CPreview__CILearningModelVariableDescriptorPreview* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CAI__CMachineLearning__CPreview__CILearningModelVariableDescriptorPreview* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CAI__CMachineLearning__CPreview__CILearningModelVariableDescriptorPreview* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CAI__CMachineLearning__CPreview__CILearningModelVariableDescriptorPreview* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CAI__CMachineLearning__CPreview__CILearningModelVariableDescriptorPreview* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CAI__CMachineLearning__CPreview__CILearningModelVariableDescriptorPreview* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Current)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CAI__CMachineLearning__CPreview__CILearningModelVariableDescriptorPreview* This,
        __x_ABI_CWindows_CAI_CMachineLearning_CPreview_CILearningModelVariableDescriptorPreview** result);
    HRESULT (STDMETHODCALLTYPE* get_HasCurrent)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CAI__CMachineLearning__CPreview__CILearningModelVariableDescriptorPreview* This,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* MoveNext)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CAI__CMachineLearning__CPreview__CILearningModelVariableDescriptorPreview* This,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CAI__CMachineLearning__CPreview__CILearningModelVariableDescriptorPreview* This,
        UINT32 itemsLength,
        __x_ABI_CWindows_CAI_CMachineLearning_CPreview_CILearningModelVariableDescriptorPreview** items,
        UINT32* result);

        END_INTERFACE
    } __x_ABI_C__FIIterator_1___x_ABI_CWindows__CAI__CMachineLearning__CPreview__CILearningModelVariableDescriptorPreviewVtbl;

    interface __x_ABI_C__FIIterator_1___x_ABI_CWindows__CAI__CMachineLearning__CPreview__CILearningModelVariableDescriptorPreview
    {
        CONST_VTBL struct __x_ABI_C__FIIterator_1___x_ABI_CWindows__CAI__CMachineLearning__CPreview__CILearningModelVariableDescriptorPreviewVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIIterator_1___x_ABI_CWindows__CAI__CMachineLearning__CPreview__CILearningModelVariableDescriptorPreview_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIIterable_1___x_ABI_CWindows__CAI__CMachineLearning__CPreview__CILearningModelVariableDescriptorPreview_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIIterable_1___x_ABI_CWindows__CAI__CMachineLearning__CPreview__CILearningModelVariableDescriptorPreview_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIIterable_1___x_ABI_CWindows__CAI__CMachineLearning__CPreview__CILearningModelVariableDescriptorPreview __x_ABI_C__FIIterable_1___x_ABI_CWindows__CAI__CMachineLearning__CPreview__CILearningModelVariableDescriptorPreview;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIIterable_1___x_ABI_CWindows__CAI__CMachineLearning__CPreview__CILearningModelVariableDescriptorPreview;

    typedef struct __x_ABI_C__FIIterable_1___x_ABI_CWindows__CAI__CMachineLearning__CPreview__CILearningModelVariableDescriptorPreviewVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CAI__CMachineLearning__CPreview__CILearningModelVariableDescriptorPreview* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CAI__CMachineLearning__CPreview__CILearningModelVariableDescriptorPreview* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CAI__CMachineLearning__CPreview__CILearningModelVariableDescriptorPreview* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CAI__CMachineLearning__CPreview__CILearningModelVariableDescriptorPreview* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CAI__CMachineLearning__CPreview__CILearningModelVariableDescriptorPreview* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CAI__CMachineLearning__CPreview__CILearningModelVariableDescriptorPreview* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* First)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CAI__CMachineLearning__CPreview__CILearningModelVariableDescriptorPreview* This,
        __x_ABI_C__FIIterator_1___x_ABI_CWindows__CAI__CMachineLearning__CPreview__CILearningModelVariableDescriptorPreview** result);

        END_INTERFACE
    } __x_ABI_C__FIIterable_1___x_ABI_CWindows__CAI__CMachineLearning__CPreview__CILearningModelVariableDescriptorPreviewVtbl;

    interface __x_ABI_C__FIIterable_1___x_ABI_CWindows__CAI__CMachineLearning__CPreview__CILearningModelVariableDescriptorPreview
    {
        CONST_VTBL struct __x_ABI_C__FIIterable_1___x_ABI_CWindows__CAI__CMachineLearning__CPreview__CILearningModelVariableDescriptorPreviewVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIIterable_1___x_ABI_CWindows__CAI__CMachineLearning__CPreview__CILearningModelVariableDescriptorPreview_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIKeyValuePair_2_HSTRING_IInspectable_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIKeyValuePair_2_HSTRING_IInspectable_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIKeyValuePair_2_HSTRING_IInspectable __x_ABI_C__FIKeyValuePair_2_HSTRING_IInspectable;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIKeyValuePair_2_HSTRING_IInspectable;

    typedef struct __x_ABI_C__FIKeyValuePair_2_HSTRING_IInspectableVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIKeyValuePair_2_HSTRING_IInspectable* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIKeyValuePair_2_HSTRING_IInspectable* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIKeyValuePair_2_HSTRING_IInspectable* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIKeyValuePair_2_HSTRING_IInspectable* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIKeyValuePair_2_HSTRING_IInspectable* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIKeyValuePair_2_HSTRING_IInspectable* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Key)(__x_ABI_C__FIKeyValuePair_2_HSTRING_IInspectable* This,
        HSTRING* result);
    HRESULT (STDMETHODCALLTYPE* get_Value)(__x_ABI_C__FIKeyValuePair_2_HSTRING_IInspectable* This,
        IInspectable** result);

        END_INTERFACE
    } __x_ABI_C__FIKeyValuePair_2_HSTRING_IInspectableVtbl;

    interface __x_ABI_C__FIKeyValuePair_2_HSTRING_IInspectable
    {
        CONST_VTBL struct __x_ABI_C__FIKeyValuePair_2_HSTRING_IInspectableVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIKeyValuePair_2_HSTRING_IInspectable_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2_HSTRING_IInspectable_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2_HSTRING_IInspectable_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2_HSTRING_IInspectable __x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2_HSTRING_IInspectable;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2_HSTRING_IInspectable;

    typedef struct __x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2_HSTRING_IInspectableVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2_HSTRING_IInspectable* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2_HSTRING_IInspectable* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2_HSTRING_IInspectable* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2_HSTRING_IInspectable* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2_HSTRING_IInspectable* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2_HSTRING_IInspectable* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Current)(__x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2_HSTRING_IInspectable* This,
        __x_ABI_C__FIKeyValuePair_2_HSTRING_IInspectable** result);
    HRESULT (STDMETHODCALLTYPE* get_HasCurrent)(__x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2_HSTRING_IInspectable* This,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* MoveNext)(__x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2_HSTRING_IInspectable* This,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2_HSTRING_IInspectable* This,
        UINT32 itemsLength,
        __x_ABI_C__FIKeyValuePair_2_HSTRING_IInspectable** items,
        UINT32* result);

        END_INTERFACE
    } __x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2_HSTRING_IInspectableVtbl;

    interface __x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2_HSTRING_IInspectable
    {
        CONST_VTBL struct __x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2_HSTRING_IInspectableVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2_HSTRING_IInspectable_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIIterable_1___x_ABI_C__FIKeyValuePair_2_HSTRING_IInspectable_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIIterable_1___x_ABI_C__FIKeyValuePair_2_HSTRING_IInspectable_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIIterable_1___x_ABI_C__FIKeyValuePair_2_HSTRING_IInspectable __x_ABI_C__FIIterable_1___x_ABI_C__FIKeyValuePair_2_HSTRING_IInspectable;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIIterable_1___x_ABI_C__FIKeyValuePair_2_HSTRING_IInspectable;

    typedef struct __x_ABI_C__FIIterable_1___x_ABI_C__FIKeyValuePair_2_HSTRING_IInspectableVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIIterable_1___x_ABI_C__FIKeyValuePair_2_HSTRING_IInspectable* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIIterable_1___x_ABI_C__FIKeyValuePair_2_HSTRING_IInspectable* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIIterable_1___x_ABI_C__FIKeyValuePair_2_HSTRING_IInspectable* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIIterable_1___x_ABI_C__FIKeyValuePair_2_HSTRING_IInspectable* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIIterable_1___x_ABI_C__FIKeyValuePair_2_HSTRING_IInspectable* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIIterable_1___x_ABI_C__FIKeyValuePair_2_HSTRING_IInspectable* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* First)(__x_ABI_C__FIIterable_1___x_ABI_C__FIKeyValuePair_2_HSTRING_IInspectable* This,
        __x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2_HSTRING_IInspectable** result);

        END_INTERFACE
    } __x_ABI_C__FIIterable_1___x_ABI_C__FIKeyValuePair_2_HSTRING_IInspectableVtbl;

    interface __x_ABI_C__FIIterable_1___x_ABI_C__FIKeyValuePair_2_HSTRING_IInspectable
    {
        CONST_VTBL struct __x_ABI_C__FIIterable_1___x_ABI_C__FIKeyValuePair_2_HSTRING_IInspectableVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIIterable_1___x_ABI_C__FIKeyValuePair_2_HSTRING_IInspectable_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIKeyValuePair_2_HSTRING_HSTRING_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIKeyValuePair_2_HSTRING_HSTRING_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIKeyValuePair_2_HSTRING_HSTRING __x_ABI_C__FIKeyValuePair_2_HSTRING_HSTRING;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIKeyValuePair_2_HSTRING_HSTRING;

    typedef struct __x_ABI_C__FIKeyValuePair_2_HSTRING_HSTRINGVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIKeyValuePair_2_HSTRING_HSTRING* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIKeyValuePair_2_HSTRING_HSTRING* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIKeyValuePair_2_HSTRING_HSTRING* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIKeyValuePair_2_HSTRING_HSTRING* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIKeyValuePair_2_HSTRING_HSTRING* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIKeyValuePair_2_HSTRING_HSTRING* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Key)(__x_ABI_C__FIKeyValuePair_2_HSTRING_HSTRING* This,
        HSTRING* result);
    HRESULT (STDMETHODCALLTYPE* get_Value)(__x_ABI_C__FIKeyValuePair_2_HSTRING_HSTRING* This,
        HSTRING* result);

        END_INTERFACE
    } __x_ABI_C__FIKeyValuePair_2_HSTRING_HSTRINGVtbl;

    interface __x_ABI_C__FIKeyValuePair_2_HSTRING_HSTRING
    {
        CONST_VTBL struct __x_ABI_C__FIKeyValuePair_2_HSTRING_HSTRINGVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIKeyValuePair_2_HSTRING_HSTRING_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2_HSTRING_HSTRING_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2_HSTRING_HSTRING_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2_HSTRING_HSTRING __x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2_HSTRING_HSTRING;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2_HSTRING_HSTRING;

    typedef struct __x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2_HSTRING_HSTRINGVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2_HSTRING_HSTRING* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2_HSTRING_HSTRING* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2_HSTRING_HSTRING* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2_HSTRING_HSTRING* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2_HSTRING_HSTRING* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2_HSTRING_HSTRING* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Current)(__x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2_HSTRING_HSTRING* This,
        __x_ABI_C__FIKeyValuePair_2_HSTRING_HSTRING** result);
    HRESULT (STDMETHODCALLTYPE* get_HasCurrent)(__x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2_HSTRING_HSTRING* This,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* MoveNext)(__x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2_HSTRING_HSTRING* This,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2_HSTRING_HSTRING* This,
        UINT32 itemsLength,
        __x_ABI_C__FIKeyValuePair_2_HSTRING_HSTRING** items,
        UINT32* result);

        END_INTERFACE
    } __x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2_HSTRING_HSTRINGVtbl;

    interface __x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2_HSTRING_HSTRING
    {
        CONST_VTBL struct __x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2_HSTRING_HSTRINGVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2_HSTRING_HSTRING_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIIterable_1___x_ABI_C__FIKeyValuePair_2_HSTRING_HSTRING_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIIterable_1___x_ABI_C__FIKeyValuePair_2_HSTRING_HSTRING_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIIterable_1___x_ABI_C__FIKeyValuePair_2_HSTRING_HSTRING __x_ABI_C__FIIterable_1___x_ABI_C__FIKeyValuePair_2_HSTRING_HSTRING;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIIterable_1___x_ABI_C__FIKeyValuePair_2_HSTRING_HSTRING;

    typedef struct __x_ABI_C__FIIterable_1___x_ABI_C__FIKeyValuePair_2_HSTRING_HSTRINGVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIIterable_1___x_ABI_C__FIKeyValuePair_2_HSTRING_HSTRING* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIIterable_1___x_ABI_C__FIKeyValuePair_2_HSTRING_HSTRING* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIIterable_1___x_ABI_C__FIKeyValuePair_2_HSTRING_HSTRING* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIIterable_1___x_ABI_C__FIKeyValuePair_2_HSTRING_HSTRING* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIIterable_1___x_ABI_C__FIKeyValuePair_2_HSTRING_HSTRING* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIIterable_1___x_ABI_C__FIKeyValuePair_2_HSTRING_HSTRING* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* First)(__x_ABI_C__FIIterable_1___x_ABI_C__FIKeyValuePair_2_HSTRING_HSTRING* This,
        __x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2_HSTRING_HSTRING** result);

        END_INTERFACE
    } __x_ABI_C__FIIterable_1___x_ABI_C__FIKeyValuePair_2_HSTRING_HSTRINGVtbl;

    interface __x_ABI_C__FIIterable_1___x_ABI_C__FIKeyValuePair_2_HSTRING_HSTRING
    {
        CONST_VTBL struct __x_ABI_C__FIIterable_1___x_ABI_C__FIKeyValuePair_2_HSTRING_HSTRINGVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIIterable_1___x_ABI_C__FIKeyValuePair_2_HSTRING_HSTRING_INTERFACE_DEFINED__
    
typedef interface __x_ABI_C__FIMapView_2_HSTRING_IInspectable __x_ABI_C__FIMapView_2_HSTRING_IInspectable;

#if !defined(____x_ABI_C__FIMapView_2_HSTRING_IInspectable_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIMapView_2_HSTRING_IInspectable_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIMapView_2_HSTRING_IInspectable __x_ABI_C__FIMapView_2_HSTRING_IInspectable;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIMapView_2_HSTRING_IInspectable;

    typedef struct __x_ABI_C__FIMapView_2_HSTRING_IInspectableVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIMapView_2_HSTRING_IInspectable* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIMapView_2_HSTRING_IInspectable* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIMapView_2_HSTRING_IInspectable* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIMapView_2_HSTRING_IInspectable* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIMapView_2_HSTRING_IInspectable* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIMapView_2_HSTRING_IInspectable* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* Lookup)(__x_ABI_C__FIMapView_2_HSTRING_IInspectable* This,
        HSTRING key,
        IInspectable** result);
    HRESULT (STDMETHODCALLTYPE* get_Size)(__x_ABI_C__FIMapView_2_HSTRING_IInspectable* This,
        UINT32* result);
    HRESULT (STDMETHODCALLTYPE* HasKey)(__x_ABI_C__FIMapView_2_HSTRING_IInspectable* This,
        HSTRING key,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* Split)(__x_ABI_C__FIMapView_2_HSTRING_IInspectable* This,
        __x_ABI_C__FIMapView_2_HSTRING_IInspectable** first,
        __x_ABI_C__FIMapView_2_HSTRING_IInspectable** second);

        END_INTERFACE
    } __x_ABI_C__FIMapView_2_HSTRING_IInspectableVtbl;

    interface __x_ABI_C__FIMapView_2_HSTRING_IInspectable
    {
        CONST_VTBL struct __x_ABI_C__FIMapView_2_HSTRING_IInspectableVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIMapView_2_HSTRING_IInspectable_INTERFACE_DEFINED__
    
typedef interface __x_ABI_C__FIMapView_2_HSTRING_HSTRING __x_ABI_C__FIMapView_2_HSTRING_HSTRING;

#if !defined(____x_ABI_C__FIMapView_2_HSTRING_HSTRING_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIMapView_2_HSTRING_HSTRING_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIMapView_2_HSTRING_HSTRING __x_ABI_C__FIMapView_2_HSTRING_HSTRING;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIMapView_2_HSTRING_HSTRING;

    typedef struct __x_ABI_C__FIMapView_2_HSTRING_HSTRINGVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIMapView_2_HSTRING_HSTRING* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIMapView_2_HSTRING_HSTRING* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIMapView_2_HSTRING_HSTRING* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIMapView_2_HSTRING_HSTRING* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIMapView_2_HSTRING_HSTRING* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIMapView_2_HSTRING_HSTRING* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* Lookup)(__x_ABI_C__FIMapView_2_HSTRING_HSTRING* This,
        HSTRING key,
        HSTRING* result);
    HRESULT (STDMETHODCALLTYPE* get_Size)(__x_ABI_C__FIMapView_2_HSTRING_HSTRING* This,
        UINT32* result);
    HRESULT (STDMETHODCALLTYPE* HasKey)(__x_ABI_C__FIMapView_2_HSTRING_HSTRING* This,
        HSTRING key,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* Split)(__x_ABI_C__FIMapView_2_HSTRING_HSTRING* This,
        __x_ABI_C__FIMapView_2_HSTRING_HSTRING** first,
        __x_ABI_C__FIMapView_2_HSTRING_HSTRING** second);

        END_INTERFACE
    } __x_ABI_C__FIMapView_2_HSTRING_HSTRINGVtbl;

    interface __x_ABI_C__FIMapView_2_HSTRING_HSTRING
    {
        CONST_VTBL struct __x_ABI_C__FIMapView_2_HSTRING_HSTRINGVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIMapView_2_HSTRING_HSTRING_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIMap_2_HSTRING_IInspectable_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIMap_2_HSTRING_IInspectable_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIMap_2_HSTRING_IInspectable __x_ABI_C__FIMap_2_HSTRING_IInspectable;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIMap_2_HSTRING_IInspectable;

    typedef struct __x_ABI_C__FIMap_2_HSTRING_IInspectableVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIMap_2_HSTRING_IInspectable* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIMap_2_HSTRING_IInspectable* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIMap_2_HSTRING_IInspectable* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIMap_2_HSTRING_IInspectable* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIMap_2_HSTRING_IInspectable* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIMap_2_HSTRING_IInspectable* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* Lookup)(__x_ABI_C__FIMap_2_HSTRING_IInspectable* This,
        HSTRING key,
        IInspectable** result);
    HRESULT (STDMETHODCALLTYPE* get_Size)(__x_ABI_C__FIMap_2_HSTRING_IInspectable* This,
        UINT32* result);
    HRESULT (STDMETHODCALLTYPE* HasKey)(__x_ABI_C__FIMap_2_HSTRING_IInspectable* This,
        HSTRING key,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* GetView)(__x_ABI_C__FIMap_2_HSTRING_IInspectable* This,
        __x_ABI_C__FIMapView_2_HSTRING_IInspectable** result);
    HRESULT (STDMETHODCALLTYPE* Insert)(__x_ABI_C__FIMap_2_HSTRING_IInspectable* This,
        HSTRING key,
        IInspectable* value,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* Remove)(__x_ABI_C__FIMap_2_HSTRING_IInspectable* This,
        HSTRING key);
    HRESULT (STDMETHODCALLTYPE* Clear)(__x_ABI_C__FIMap_2_HSTRING_IInspectable* This);

        END_INTERFACE
    } __x_ABI_C__FIMap_2_HSTRING_IInspectableVtbl;

    interface __x_ABI_C__FIMap_2_HSTRING_IInspectable
    {
        CONST_VTBL struct __x_ABI_C__FIMap_2_HSTRING_IInspectableVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIMap_2_HSTRING_IInspectable_INTERFACE_DEFINED__
    
typedef enum __x_ABI_CWindows_CFoundation_CAsyncStatus __x_ABI_CWindows_CFoundation_CAsyncStatus;

#ifndef ____x_ABI_CWindows_CFoundation_CCollections_CIPropertySet_FWD_DEFINED__
#define ____x_ABI_CWindows_CFoundation_CCollections_CIPropertySet_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CFoundation_CCollections_CIPropertySet __x_ABI_CWindows_CFoundation_CCollections_CIPropertySet;

#endif // ____x_ABI_CWindows_CFoundation_CCollections_CIPropertySet_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CFoundation_CIAsyncInfo_FWD_DEFINED__
#define ____x_ABI_CWindows_CFoundation_CIAsyncInfo_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CFoundation_CIAsyncInfo __x_ABI_CWindows_CFoundation_CIAsyncInfo;

#endif // ____x_ABI_CWindows_CFoundation_CIAsyncInfo_FWD_DEFINED__

typedef enum __x_ABI_CWindows_CGraphics_CImaging_CBitmapPixelFormat __x_ABI_CWindows_CGraphics_CImaging_CBitmapPixelFormat;

#ifndef ____x_ABI_CWindows_CStorage_CIStorageFile_FWD_DEFINED__
#define ____x_ABI_CWindows_CStorage_CIStorageFile_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CStorage_CIStorageFile __x_ABI_CWindows_CStorage_CIStorageFile;

#endif // ____x_ABI_CWindows_CStorage_CIStorageFile_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CStorage_CStreams_CIRandomAccessStreamReference_FWD_DEFINED__
#define ____x_ABI_CWindows_CStorage_CStreams_CIRandomAccessStreamReference_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CStorage_CStreams_CIRandomAccessStreamReference __x_ABI_CWindows_CStorage_CStreams_CIRandomAccessStreamReference;

#endif // ____x_ABI_CWindows_CStorage_CStreams_CIRandomAccessStreamReference_FWD_DEFINED__

typedef enum __x_ABI_CWindows_CAI_CMachineLearning_CPreview_CFeatureElementKindPreview __x_ABI_CWindows_CAI_CMachineLearning_CPreview_CFeatureElementKindPreview;

typedef enum __x_ABI_CWindows_CAI_CMachineLearning_CPreview_CLearningModelDeviceKindPreview __x_ABI_CWindows_CAI_CMachineLearning_CPreview_CLearningModelDeviceKindPreview;

typedef enum __x_ABI_CWindows_CAI_CMachineLearning_CPreview_CLearningModelFeatureKindPreview __x_ABI_CWindows_CAI_CMachineLearning_CPreview_CLearningModelFeatureKindPreview;

enum __x_ABI_CWindows_CAI_CMachineLearning_CPreview_CFeatureElementKindPreview
    {
        __x_ABI_CWindows_CAI_CMachineLearning_CPreview_CFeatureElementKindPreview_Undefined = 0,
    __x_ABI_CWindows_CAI_CMachineLearning_CPreview_CFeatureElementKindPreview_Float = 1,
    __x_ABI_CWindows_CAI_CMachineLearning_CPreview_CFeatureElementKindPreview_UInt8 = 2,
    __x_ABI_CWindows_CAI_CMachineLearning_CPreview_CFeatureElementKindPreview_Int8 = 3,
    __x_ABI_CWindows_CAI_CMachineLearning_CPreview_CFeatureElementKindPreview_UInt16 = 4,
    __x_ABI_CWindows_CAI_CMachineLearning_CPreview_CFeatureElementKindPreview_Int16 = 5,
    __x_ABI_CWindows_CAI_CMachineLearning_CPreview_CFeatureElementKindPreview_Int32 = 6,
    __x_ABI_CWindows_CAI_CMachineLearning_CPreview_CFeatureElementKindPreview_Int64 = 7,
    __x_ABI_CWindows_CAI_CMachineLearning_CPreview_CFeatureElementKindPreview_String = 8,
    __x_ABI_CWindows_CAI_CMachineLearning_CPreview_CFeatureElementKindPreview_Boolean = 9,
    __x_ABI_CWindows_CAI_CMachineLearning_CPreview_CFeatureElementKindPreview_Float16 = 10,
    __x_ABI_CWindows_CAI_CMachineLearning_CPreview_CFeatureElementKindPreview_Double = 11,
    __x_ABI_CWindows_CAI_CMachineLearning_CPreview_CFeatureElementKindPreview_UInt32 = 12,
    __x_ABI_CWindows_CAI_CMachineLearning_CPreview_CFeatureElementKindPreview_UInt64 = 13,
    __x_ABI_CWindows_CAI_CMachineLearning_CPreview_CFeatureElementKindPreview_Complex64 = 14,
    __x_ABI_CWindows_CAI_CMachineLearning_CPreview_CFeatureElementKindPreview_Complex128 = 15,
};

enum __x_ABI_CWindows_CAI_CMachineLearning_CPreview_CLearningModelDeviceKindPreview
    {
        __x_ABI_CWindows_CAI_CMachineLearning_CPreview_CLearningModelDeviceKindPreview_LearningDeviceAny = 0,
    __x_ABI_CWindows_CAI_CMachineLearning_CPreview_CLearningModelDeviceKindPreview_LearningDeviceCpu = 1,
    __x_ABI_CWindows_CAI_CMachineLearning_CPreview_CLearningModelDeviceKindPreview_LearningDeviceGpu = 2,
    __x_ABI_CWindows_CAI_CMachineLearning_CPreview_CLearningModelDeviceKindPreview_LearningDeviceNpu = 3,
    __x_ABI_CWindows_CAI_CMachineLearning_CPreview_CLearningModelDeviceKindPreview_LearningDeviceDsp = 4,
    __x_ABI_CWindows_CAI_CMachineLearning_CPreview_CLearningModelDeviceKindPreview_LearningDeviceFpga = 5,
};

enum __x_ABI_CWindows_CAI_CMachineLearning_CPreview_CLearningModelFeatureKindPreview
    {
        __x_ABI_CWindows_CAI_CMachineLearning_CPreview_CLearningModelFeatureKindPreview_Undefined = 0,
    __x_ABI_CWindows_CAI_CMachineLearning_CPreview_CLearningModelFeatureKindPreview_Tensor = 1,
    __x_ABI_CWindows_CAI_CMachineLearning_CPreview_CLearningModelFeatureKindPreview_Sequence = 2,
    __x_ABI_CWindows_CAI_CMachineLearning_CPreview_CLearningModelFeatureKindPreview_Map = 3,
    __x_ABI_CWindows_CAI_CMachineLearning_CPreview_CLearningModelFeatureKindPreview_Image = 4,
};

#if !defined(____x_ABI_CWindows_CAI_CMachineLearning_CPreview_CIImageVariableDescriptorPreview_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CAI_CMachineLearning_CPreview_CIImageVariableDescriptorPreview_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CAI_CMachineLearning_CPreview_CIImageVariableDescriptorPreviewVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CAI_CMachineLearning_CPreview_CIImageVariableDescriptorPreview* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CAI_CMachineLearning_CPreview_CIImageVariableDescriptorPreview* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CAI_CMachineLearning_CPreview_CIImageVariableDescriptorPreview* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CAI_CMachineLearning_CPreview_CIImageVariableDescriptorPreview* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CAI_CMachineLearning_CPreview_CIImageVariableDescriptorPreview* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CAI_CMachineLearning_CPreview_CIImageVariableDescriptorPreview* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_BitmapPixelFormat)(__x_ABI_CWindows_CAI_CMachineLearning_CPreview_CIImageVariableDescriptorPreview* This,
        enum __x_ABI_CWindows_CGraphics_CImaging_CBitmapPixelFormat* value);
    HRESULT (STDMETHODCALLTYPE* get_Width)(__x_ABI_CWindows_CAI_CMachineLearning_CPreview_CIImageVariableDescriptorPreview* This,
        UINT32* value);
    HRESULT (STDMETHODCALLTYPE* get_Height)(__x_ABI_CWindows_CAI_CMachineLearning_CPreview_CIImageVariableDescriptorPreview* This,
        UINT32* value);

        END_INTERFACE
    } __x_ABI_CWindows_CAI_CMachineLearning_CPreview_CIImageVariableDescriptorPreviewVtbl;

    interface __x_ABI_CWindows_CAI_CMachineLearning_CPreview_CIImageVariableDescriptorPreview
    {
        CONST_VTBL struct __x_ABI_CWindows_CAI_CMachineLearning_CPreview_CIImageVariableDescriptorPreviewVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CAI_CMachineLearning_CPreview_CIImageVariableDescriptorPreview;
#endif /* !defined(____x_ABI_CWindows_CAI_CMachineLearning_CPreview_CIImageVariableDescriptorPreview_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CAI_CMachineLearning_CPreview_CIInferencingOptionsPreview_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CAI_CMachineLearning_CPreview_CIInferencingOptionsPreview_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CAI_CMachineLearning_CPreview_CIInferencingOptionsPreviewVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CAI_CMachineLearning_CPreview_CIInferencingOptionsPreview* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CAI_CMachineLearning_CPreview_CIInferencingOptionsPreview* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CAI_CMachineLearning_CPreview_CIInferencingOptionsPreview* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CAI_CMachineLearning_CPreview_CIInferencingOptionsPreview* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CAI_CMachineLearning_CPreview_CIInferencingOptionsPreview* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CAI_CMachineLearning_CPreview_CIInferencingOptionsPreview* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_PreferredDeviceKind)(__x_ABI_CWindows_CAI_CMachineLearning_CPreview_CIInferencingOptionsPreview* This,
        enum __x_ABI_CWindows_CAI_CMachineLearning_CPreview_CLearningModelDeviceKindPreview* value);
    HRESULT (STDMETHODCALLTYPE* put_PreferredDeviceKind)(__x_ABI_CWindows_CAI_CMachineLearning_CPreview_CIInferencingOptionsPreview* This,
        enum __x_ABI_CWindows_CAI_CMachineLearning_CPreview_CLearningModelDeviceKindPreview value);
    HRESULT (STDMETHODCALLTYPE* get_IsTracingEnabled)(__x_ABI_CWindows_CAI_CMachineLearning_CPreview_CIInferencingOptionsPreview* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* put_IsTracingEnabled)(__x_ABI_CWindows_CAI_CMachineLearning_CPreview_CIInferencingOptionsPreview* This,
        boolean value);
    HRESULT (STDMETHODCALLTYPE* get_MaxBatchSize)(__x_ABI_CWindows_CAI_CMachineLearning_CPreview_CIInferencingOptionsPreview* This,
        INT32* value);
    HRESULT (STDMETHODCALLTYPE* put_MaxBatchSize)(__x_ABI_CWindows_CAI_CMachineLearning_CPreview_CIInferencingOptionsPreview* This,
        INT32 value);
    HRESULT (STDMETHODCALLTYPE* get_MinimizeMemoryAllocation)(__x_ABI_CWindows_CAI_CMachineLearning_CPreview_CIInferencingOptionsPreview* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* put_MinimizeMemoryAllocation)(__x_ABI_CWindows_CAI_CMachineLearning_CPreview_CIInferencingOptionsPreview* This,
        boolean value);
    HRESULT (STDMETHODCALLTYPE* get_ReclaimMemoryAfterEvaluation)(__x_ABI_CWindows_CAI_CMachineLearning_CPreview_CIInferencingOptionsPreview* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* put_ReclaimMemoryAfterEvaluation)(__x_ABI_CWindows_CAI_CMachineLearning_CPreview_CIInferencingOptionsPreview* This,
        boolean value);

        END_INTERFACE
    } __x_ABI_CWindows_CAI_CMachineLearning_CPreview_CIInferencingOptionsPreviewVtbl;

    interface __x_ABI_CWindows_CAI_CMachineLearning_CPreview_CIInferencingOptionsPreview
    {
        CONST_VTBL struct __x_ABI_CWindows_CAI_CMachineLearning_CPreview_CIInferencingOptionsPreviewVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CAI_CMachineLearning_CPreview_CIInferencingOptionsPreview;
#endif /* !defined(____x_ABI_CWindows_CAI_CMachineLearning_CPreview_CIInferencingOptionsPreview_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CAI_CMachineLearning_CPreview_CILearningModelBindingPreview_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CAI_CMachineLearning_CPreview_CILearningModelBindingPreview_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CAI_CMachineLearning_CPreview_CILearningModelBindingPreviewVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CAI_CMachineLearning_CPreview_CILearningModelBindingPreview* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CAI_CMachineLearning_CPreview_CILearningModelBindingPreview* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CAI_CMachineLearning_CPreview_CILearningModelBindingPreview* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CAI_CMachineLearning_CPreview_CILearningModelBindingPreview* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CAI_CMachineLearning_CPreview_CILearningModelBindingPreview* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CAI_CMachineLearning_CPreview_CILearningModelBindingPreview* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* Bind)(__x_ABI_CWindows_CAI_CMachineLearning_CPreview_CILearningModelBindingPreview* This,
        HSTRING name,
        IInspectable* value);
    HRESULT (STDMETHODCALLTYPE* BindWithProperties)(__x_ABI_CWindows_CAI_CMachineLearning_CPreview_CILearningModelBindingPreview* This,
        HSTRING name,
        IInspectable* value,
        __x_ABI_CWindows_CFoundation_CCollections_CIPropertySet* metadata);
    HRESULT (STDMETHODCALLTYPE* Clear)(__x_ABI_CWindows_CAI_CMachineLearning_CPreview_CILearningModelBindingPreview* This);

        END_INTERFACE
    } __x_ABI_CWindows_CAI_CMachineLearning_CPreview_CILearningModelBindingPreviewVtbl;

    interface __x_ABI_CWindows_CAI_CMachineLearning_CPreview_CILearningModelBindingPreview
    {
        CONST_VTBL struct __x_ABI_CWindows_CAI_CMachineLearning_CPreview_CILearningModelBindingPreviewVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CAI_CMachineLearning_CPreview_CILearningModelBindingPreview;
#endif /* !defined(____x_ABI_CWindows_CAI_CMachineLearning_CPreview_CILearningModelBindingPreview_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CAI_CMachineLearning_CPreview_CILearningModelBindingPreviewFactory_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CAI_CMachineLearning_CPreview_CILearningModelBindingPreviewFactory_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CAI_CMachineLearning_CPreview_CILearningModelBindingPreviewFactoryVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CAI_CMachineLearning_CPreview_CILearningModelBindingPreviewFactory* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CAI_CMachineLearning_CPreview_CILearningModelBindingPreviewFactory* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CAI_CMachineLearning_CPreview_CILearningModelBindingPreviewFactory* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CAI_CMachineLearning_CPreview_CILearningModelBindingPreviewFactory* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CAI_CMachineLearning_CPreview_CILearningModelBindingPreviewFactory* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CAI_CMachineLearning_CPreview_CILearningModelBindingPreviewFactory* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* CreateFromModel)(__x_ABI_CWindows_CAI_CMachineLearning_CPreview_CILearningModelBindingPreviewFactory* This,
        __x_ABI_CWindows_CAI_CMachineLearning_CPreview_CILearningModelPreview* model,
        __x_ABI_CWindows_CAI_CMachineLearning_CPreview_CILearningModelBindingPreview** value);

        END_INTERFACE
    } __x_ABI_CWindows_CAI_CMachineLearning_CPreview_CILearningModelBindingPreviewFactoryVtbl;

    interface __x_ABI_CWindows_CAI_CMachineLearning_CPreview_CILearningModelBindingPreviewFactory
    {
        CONST_VTBL struct __x_ABI_CWindows_CAI_CMachineLearning_CPreview_CILearningModelBindingPreviewFactoryVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CAI_CMachineLearning_CPreview_CILearningModelBindingPreviewFactory;
#endif /* !defined(____x_ABI_CWindows_CAI_CMachineLearning_CPreview_CILearningModelBindingPreviewFactory_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CAI_CMachineLearning_CPreview_CILearningModelDescriptionPreview_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CAI_CMachineLearning_CPreview_CILearningModelDescriptionPreview_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CAI_CMachineLearning_CPreview_CILearningModelDescriptionPreviewVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CAI_CMachineLearning_CPreview_CILearningModelDescriptionPreview* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CAI_CMachineLearning_CPreview_CILearningModelDescriptionPreview* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CAI_CMachineLearning_CPreview_CILearningModelDescriptionPreview* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CAI_CMachineLearning_CPreview_CILearningModelDescriptionPreview* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CAI_CMachineLearning_CPreview_CILearningModelDescriptionPreview* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CAI_CMachineLearning_CPreview_CILearningModelDescriptionPreview* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Author)(__x_ABI_CWindows_CAI_CMachineLearning_CPreview_CILearningModelDescriptionPreview* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* get_Name)(__x_ABI_CWindows_CAI_CMachineLearning_CPreview_CILearningModelDescriptionPreview* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* get_Domain)(__x_ABI_CWindows_CAI_CMachineLearning_CPreview_CILearningModelDescriptionPreview* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* get_Description)(__x_ABI_CWindows_CAI_CMachineLearning_CPreview_CILearningModelDescriptionPreview* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* get_Version)(__x_ABI_CWindows_CAI_CMachineLearning_CPreview_CILearningModelDescriptionPreview* This,
        INT64* value);
    HRESULT (STDMETHODCALLTYPE* get_Metadata)(__x_ABI_CWindows_CAI_CMachineLearning_CPreview_CILearningModelDescriptionPreview* This,
        __x_ABI_C__FIMapView_2_HSTRING_HSTRING** value);
    HRESULT (STDMETHODCALLTYPE* get_InputFeatures)(__x_ABI_CWindows_CAI_CMachineLearning_CPreview_CILearningModelDescriptionPreview* This,
        __x_ABI_C__FIIterable_1___x_ABI_CWindows__CAI__CMachineLearning__CPreview__CILearningModelVariableDescriptorPreview** value);
    HRESULT (STDMETHODCALLTYPE* get_OutputFeatures)(__x_ABI_CWindows_CAI_CMachineLearning_CPreview_CILearningModelDescriptionPreview* This,
        __x_ABI_C__FIIterable_1___x_ABI_CWindows__CAI__CMachineLearning__CPreview__CILearningModelVariableDescriptorPreview** value);

        END_INTERFACE
    } __x_ABI_CWindows_CAI_CMachineLearning_CPreview_CILearningModelDescriptionPreviewVtbl;

    interface __x_ABI_CWindows_CAI_CMachineLearning_CPreview_CILearningModelDescriptionPreview
    {
        CONST_VTBL struct __x_ABI_CWindows_CAI_CMachineLearning_CPreview_CILearningModelDescriptionPreviewVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CAI_CMachineLearning_CPreview_CILearningModelDescriptionPreview;
#endif /* !defined(____x_ABI_CWindows_CAI_CMachineLearning_CPreview_CILearningModelDescriptionPreview_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CAI_CMachineLearning_CPreview_CILearningModelEvaluationResultPreview_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CAI_CMachineLearning_CPreview_CILearningModelEvaluationResultPreview_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CAI_CMachineLearning_CPreview_CILearningModelEvaluationResultPreviewVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CAI_CMachineLearning_CPreview_CILearningModelEvaluationResultPreview* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CAI_CMachineLearning_CPreview_CILearningModelEvaluationResultPreview* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CAI_CMachineLearning_CPreview_CILearningModelEvaluationResultPreview* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CAI_CMachineLearning_CPreview_CILearningModelEvaluationResultPreview* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CAI_CMachineLearning_CPreview_CILearningModelEvaluationResultPreview* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CAI_CMachineLearning_CPreview_CILearningModelEvaluationResultPreview* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_CorrelationId)(__x_ABI_CWindows_CAI_CMachineLearning_CPreview_CILearningModelEvaluationResultPreview* This,
        HSTRING* correlationId);
    HRESULT (STDMETHODCALLTYPE* get_Outputs)(__x_ABI_CWindows_CAI_CMachineLearning_CPreview_CILearningModelEvaluationResultPreview* This,
        __x_ABI_C__FIMapView_2_HSTRING_IInspectable** value);

        END_INTERFACE
    } __x_ABI_CWindows_CAI_CMachineLearning_CPreview_CILearningModelEvaluationResultPreviewVtbl;

    interface __x_ABI_CWindows_CAI_CMachineLearning_CPreview_CILearningModelEvaluationResultPreview
    {
        CONST_VTBL struct __x_ABI_CWindows_CAI_CMachineLearning_CPreview_CILearningModelEvaluationResultPreviewVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CAI_CMachineLearning_CPreview_CILearningModelEvaluationResultPreview;
#endif /* !defined(____x_ABI_CWindows_CAI_CMachineLearning_CPreview_CILearningModelEvaluationResultPreview_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CAI_CMachineLearning_CPreview_CILearningModelPreview_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CAI_CMachineLearning_CPreview_CILearningModelPreview_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CAI_CMachineLearning_CPreview_CILearningModelPreviewVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CAI_CMachineLearning_CPreview_CILearningModelPreview* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CAI_CMachineLearning_CPreview_CILearningModelPreview* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CAI_CMachineLearning_CPreview_CILearningModelPreview* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CAI_CMachineLearning_CPreview_CILearningModelPreview* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CAI_CMachineLearning_CPreview_CILearningModelPreview* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CAI_CMachineLearning_CPreview_CILearningModelPreview* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* EvaluateAsync)(__x_ABI_CWindows_CAI_CMachineLearning_CPreview_CILearningModelPreview* This,
        __x_ABI_CWindows_CAI_CMachineLearning_CPreview_CILearningModelBindingPreview* binding,
        HSTRING correlationId,
        __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CAI__CMachineLearning__CPreview__CLearningModelEvaluationResultPreview** evalOperation);
    HRESULT (STDMETHODCALLTYPE* EvaluateFeaturesAsync)(__x_ABI_CWindows_CAI_CMachineLearning_CPreview_CILearningModelPreview* This,
        __x_ABI_C__FIMap_2_HSTRING_IInspectable* features,
        HSTRING correlationId,
        __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CAI__CMachineLearning__CPreview__CLearningModelEvaluationResultPreview** evalOperation);
    HRESULT (STDMETHODCALLTYPE* get_Description)(__x_ABI_CWindows_CAI_CMachineLearning_CPreview_CILearningModelPreview* This,
        __x_ABI_CWindows_CAI_CMachineLearning_CPreview_CILearningModelDescriptionPreview** returnValue);
    HRESULT (STDMETHODCALLTYPE* get_InferencingOptions)(__x_ABI_CWindows_CAI_CMachineLearning_CPreview_CILearningModelPreview* This,
        __x_ABI_CWindows_CAI_CMachineLearning_CPreview_CIInferencingOptionsPreview** value);
    HRESULT (STDMETHODCALLTYPE* put_InferencingOptions)(__x_ABI_CWindows_CAI_CMachineLearning_CPreview_CILearningModelPreview* This,
        __x_ABI_CWindows_CAI_CMachineLearning_CPreview_CIInferencingOptionsPreview* value);

        END_INTERFACE
    } __x_ABI_CWindows_CAI_CMachineLearning_CPreview_CILearningModelPreviewVtbl;

    interface __x_ABI_CWindows_CAI_CMachineLearning_CPreview_CILearningModelPreview
    {
        CONST_VTBL struct __x_ABI_CWindows_CAI_CMachineLearning_CPreview_CILearningModelPreviewVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CAI_CMachineLearning_CPreview_CILearningModelPreview;
#endif /* !defined(____x_ABI_CWindows_CAI_CMachineLearning_CPreview_CILearningModelPreview_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CAI_CMachineLearning_CPreview_CILearningModelPreviewStatics_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CAI_CMachineLearning_CPreview_CILearningModelPreviewStatics_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CAI_CMachineLearning_CPreview_CILearningModelPreviewStaticsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CAI_CMachineLearning_CPreview_CILearningModelPreviewStatics* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CAI_CMachineLearning_CPreview_CILearningModelPreviewStatics* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CAI_CMachineLearning_CPreview_CILearningModelPreviewStatics* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CAI_CMachineLearning_CPreview_CILearningModelPreviewStatics* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CAI_CMachineLearning_CPreview_CILearningModelPreviewStatics* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CAI_CMachineLearning_CPreview_CILearningModelPreviewStatics* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* LoadModelFromStorageFileAsync)(__x_ABI_CWindows_CAI_CMachineLearning_CPreview_CILearningModelPreviewStatics* This,
        __x_ABI_CWindows_CStorage_CIStorageFile* modelFile,
        __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CAI__CMachineLearning__CPreview__CLearningModelPreview** modelCreationOperation);
    HRESULT (STDMETHODCALLTYPE* LoadModelFromStreamAsync)(__x_ABI_CWindows_CAI_CMachineLearning_CPreview_CILearningModelPreviewStatics* This,
        __x_ABI_CWindows_CStorage_CStreams_CIRandomAccessStreamReference* modelStream,
        __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CAI__CMachineLearning__CPreview__CLearningModelPreview** modelCreationOperation);

        END_INTERFACE
    } __x_ABI_CWindows_CAI_CMachineLearning_CPreview_CILearningModelPreviewStaticsVtbl;

    interface __x_ABI_CWindows_CAI_CMachineLearning_CPreview_CILearningModelPreviewStatics
    {
        CONST_VTBL struct __x_ABI_CWindows_CAI_CMachineLearning_CPreview_CILearningModelPreviewStaticsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CAI_CMachineLearning_CPreview_CILearningModelPreviewStatics;
#endif /* !defined(____x_ABI_CWindows_CAI_CMachineLearning_CPreview_CILearningModelPreviewStatics_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CAI_CMachineLearning_CPreview_CILearningModelVariableDescriptorPreview_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CAI_CMachineLearning_CPreview_CILearningModelVariableDescriptorPreview_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CAI_CMachineLearning_CPreview_CILearningModelVariableDescriptorPreviewVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CAI_CMachineLearning_CPreview_CILearningModelVariableDescriptorPreview* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CAI_CMachineLearning_CPreview_CILearningModelVariableDescriptorPreview* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CAI_CMachineLearning_CPreview_CILearningModelVariableDescriptorPreview* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CAI_CMachineLearning_CPreview_CILearningModelVariableDescriptorPreview* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CAI_CMachineLearning_CPreview_CILearningModelVariableDescriptorPreview* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CAI_CMachineLearning_CPreview_CILearningModelVariableDescriptorPreview* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Name)(__x_ABI_CWindows_CAI_CMachineLearning_CPreview_CILearningModelVariableDescriptorPreview* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* get_Description)(__x_ABI_CWindows_CAI_CMachineLearning_CPreview_CILearningModelVariableDescriptorPreview* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* get_ModelFeatureKind)(__x_ABI_CWindows_CAI_CMachineLearning_CPreview_CILearningModelVariableDescriptorPreview* This,
        enum __x_ABI_CWindows_CAI_CMachineLearning_CPreview_CLearningModelFeatureKindPreview* value);
    HRESULT (STDMETHODCALLTYPE* get_IsRequired)(__x_ABI_CWindows_CAI_CMachineLearning_CPreview_CILearningModelVariableDescriptorPreview* This,
        boolean* value);

        END_INTERFACE
    } __x_ABI_CWindows_CAI_CMachineLearning_CPreview_CILearningModelVariableDescriptorPreviewVtbl;

    interface __x_ABI_CWindows_CAI_CMachineLearning_CPreview_CILearningModelVariableDescriptorPreview
    {
        CONST_VTBL struct __x_ABI_CWindows_CAI_CMachineLearning_CPreview_CILearningModelVariableDescriptorPreviewVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CAI_CMachineLearning_CPreview_CILearningModelVariableDescriptorPreview;
#endif /* !defined(____x_ABI_CWindows_CAI_CMachineLearning_CPreview_CILearningModelVariableDescriptorPreview_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CAI_CMachineLearning_CPreview_CIMapVariableDescriptorPreview_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CAI_CMachineLearning_CPreview_CIMapVariableDescriptorPreview_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CAI_CMachineLearning_CPreview_CIMapVariableDescriptorPreviewVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CAI_CMachineLearning_CPreview_CIMapVariableDescriptorPreview* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CAI_CMachineLearning_CPreview_CIMapVariableDescriptorPreview* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CAI_CMachineLearning_CPreview_CIMapVariableDescriptorPreview* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CAI_CMachineLearning_CPreview_CIMapVariableDescriptorPreview* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CAI_CMachineLearning_CPreview_CIMapVariableDescriptorPreview* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CAI_CMachineLearning_CPreview_CIMapVariableDescriptorPreview* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_KeyKind)(__x_ABI_CWindows_CAI_CMachineLearning_CPreview_CIMapVariableDescriptorPreview* This,
        enum __x_ABI_CWindows_CAI_CMachineLearning_CPreview_CFeatureElementKindPreview* value);
    HRESULT (STDMETHODCALLTYPE* get_ValidStringKeys)(__x_ABI_CWindows_CAI_CMachineLearning_CPreview_CIMapVariableDescriptorPreview* This,
        __x_ABI_C__FIIterable_1_HSTRING** value);
    HRESULT (STDMETHODCALLTYPE* get_ValidIntegerKeys)(__x_ABI_CWindows_CAI_CMachineLearning_CPreview_CIMapVariableDescriptorPreview* This,
        __x_ABI_C__FIIterable_1___z__zint64** value);
    HRESULT (STDMETHODCALLTYPE* get_Fields)(__x_ABI_CWindows_CAI_CMachineLearning_CPreview_CIMapVariableDescriptorPreview* This,
        __x_ABI_CWindows_CAI_CMachineLearning_CPreview_CILearningModelVariableDescriptorPreview** value);

        END_INTERFACE
    } __x_ABI_CWindows_CAI_CMachineLearning_CPreview_CIMapVariableDescriptorPreviewVtbl;

    interface __x_ABI_CWindows_CAI_CMachineLearning_CPreview_CIMapVariableDescriptorPreview
    {
        CONST_VTBL struct __x_ABI_CWindows_CAI_CMachineLearning_CPreview_CIMapVariableDescriptorPreviewVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CAI_CMachineLearning_CPreview_CIMapVariableDescriptorPreview;
#endif /* !defined(____x_ABI_CWindows_CAI_CMachineLearning_CPreview_CIMapVariableDescriptorPreview_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CAI_CMachineLearning_CPreview_CISequenceVariableDescriptorPreview_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CAI_CMachineLearning_CPreview_CISequenceVariableDescriptorPreview_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CAI_CMachineLearning_CPreview_CISequenceVariableDescriptorPreviewVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CAI_CMachineLearning_CPreview_CISequenceVariableDescriptorPreview* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CAI_CMachineLearning_CPreview_CISequenceVariableDescriptorPreview* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CAI_CMachineLearning_CPreview_CISequenceVariableDescriptorPreview* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CAI_CMachineLearning_CPreview_CISequenceVariableDescriptorPreview* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CAI_CMachineLearning_CPreview_CISequenceVariableDescriptorPreview* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CAI_CMachineLearning_CPreview_CISequenceVariableDescriptorPreview* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_ElementType)(__x_ABI_CWindows_CAI_CMachineLearning_CPreview_CISequenceVariableDescriptorPreview* This,
        __x_ABI_CWindows_CAI_CMachineLearning_CPreview_CILearningModelVariableDescriptorPreview** value);

        END_INTERFACE
    } __x_ABI_CWindows_CAI_CMachineLearning_CPreview_CISequenceVariableDescriptorPreviewVtbl;

    interface __x_ABI_CWindows_CAI_CMachineLearning_CPreview_CISequenceVariableDescriptorPreview
    {
        CONST_VTBL struct __x_ABI_CWindows_CAI_CMachineLearning_CPreview_CISequenceVariableDescriptorPreviewVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CAI_CMachineLearning_CPreview_CISequenceVariableDescriptorPreview;
#endif /* !defined(____x_ABI_CWindows_CAI_CMachineLearning_CPreview_CISequenceVariableDescriptorPreview_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CAI_CMachineLearning_CPreview_CITensorVariableDescriptorPreview_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CAI_CMachineLearning_CPreview_CITensorVariableDescriptorPreview_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CAI_CMachineLearning_CPreview_CITensorVariableDescriptorPreviewVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CAI_CMachineLearning_CPreview_CITensorVariableDescriptorPreview* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CAI_CMachineLearning_CPreview_CITensorVariableDescriptorPreview* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CAI_CMachineLearning_CPreview_CITensorVariableDescriptorPreview* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CAI_CMachineLearning_CPreview_CITensorVariableDescriptorPreview* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CAI_CMachineLearning_CPreview_CITensorVariableDescriptorPreview* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CAI_CMachineLearning_CPreview_CITensorVariableDescriptorPreview* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_DataType)(__x_ABI_CWindows_CAI_CMachineLearning_CPreview_CITensorVariableDescriptorPreview* This,
        enum __x_ABI_CWindows_CAI_CMachineLearning_CPreview_CFeatureElementKindPreview* value);
    HRESULT (STDMETHODCALLTYPE* get_Shape)(__x_ABI_CWindows_CAI_CMachineLearning_CPreview_CITensorVariableDescriptorPreview* This,
        __x_ABI_C__FIIterable_1___z__zint64** value);

        END_INTERFACE
    } __x_ABI_CWindows_CAI_CMachineLearning_CPreview_CITensorVariableDescriptorPreviewVtbl;

    interface __x_ABI_CWindows_CAI_CMachineLearning_CPreview_CITensorVariableDescriptorPreview
    {
        CONST_VTBL struct __x_ABI_CWindows_CAI_CMachineLearning_CPreview_CITensorVariableDescriptorPreviewVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CAI_CMachineLearning_CPreview_CITensorVariableDescriptorPreview;
#endif /* !defined(____x_ABI_CWindows_CAI_CMachineLearning_CPreview_CITensorVariableDescriptorPreview_INTERFACE_DEFINED__) */
    
