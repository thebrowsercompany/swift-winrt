// WARNING: Please don't edit this file. It was generated by Swift/WinRT v0.0.1

#pragma once
// Header files for imported files
#include <inspectable.h>
#include <EventToken.h>
#include <windowscontracts.h>
#include "Windows.Foundation.h"
#include "Windows.Storage.Streams.h"
#include "Windows.System.h"

/* Forward Declarations */
#ifndef ____x_ABI_CWindows_CManagement_CPolicies_CINamedPolicyData_FWD_DEFINED__
#define ____x_ABI_CWindows_CManagement_CPolicies_CINamedPolicyData_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CManagement_CPolicies_CINamedPolicyData __x_ABI_CWindows_CManagement_CPolicies_CINamedPolicyData;

#endif // ____x_ABI_CWindows_CManagement_CPolicies_CINamedPolicyData_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CManagement_CPolicies_CINamedPolicyStatics_FWD_DEFINED__
#define ____x_ABI_CWindows_CManagement_CPolicies_CINamedPolicyStatics_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CManagement_CPolicies_CINamedPolicyStatics __x_ABI_CWindows_CManagement_CPolicies_CINamedPolicyStatics;

#endif // ____x_ABI_CWindows_CManagement_CPolicies_CINamedPolicyStatics_FWD_DEFINED__

// Parameterized interface forward declarations (C)

// Collection interface definitions

#if !defined(____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CManagement__CPolicies__CNamedPolicyData_IInspectable_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CManagement__CPolicies__CNamedPolicyData_IInspectable_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CManagement__CPolicies__CNamedPolicyData_IInspectable __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CManagement__CPolicies__CNamedPolicyData_IInspectable;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CManagement__CPolicies__CNamedPolicyData_IInspectable;

    typedef struct __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CManagement__CPolicies__CNamedPolicyData_IInspectableVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CManagement__CPolicies__CNamedPolicyData_IInspectable* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CManagement__CPolicies__CNamedPolicyData_IInspectable* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CManagement__CPolicies__CNamedPolicyData_IInspectable* This);
        HRESULT (STDMETHODCALLTYPE* Invoke)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CManagement__CPolicies__CNamedPolicyData_IInspectable* This,
        __x_ABI_CWindows_CManagement_CPolicies_CINamedPolicyData* sender,
        IInspectable* args);

        END_INTERFACE
    } __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CManagement__CPolicies__CNamedPolicyData_IInspectableVtbl;

    interface __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CManagement__CPolicies__CNamedPolicyData_IInspectable
    {
        CONST_VTBL struct __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CManagement__CPolicies__CNamedPolicyData_IInspectableVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CManagement__CPolicies__CNamedPolicyData_IInspectable_INTERFACE_DEFINED__
    
#ifndef ____x_ABI_CWindows_CStorage_CStreams_CIBuffer_FWD_DEFINED__
#define ____x_ABI_CWindows_CStorage_CStreams_CIBuffer_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CStorage_CStreams_CIBuffer __x_ABI_CWindows_CStorage_CStreams_CIBuffer;

#endif // ____x_ABI_CWindows_CStorage_CStreams_CIBuffer_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CSystem_CIUser_FWD_DEFINED__
#define ____x_ABI_CWindows_CSystem_CIUser_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CSystem_CIUser __x_ABI_CWindows_CSystem_CIUser;

#endif // ____x_ABI_CWindows_CSystem_CIUser_FWD_DEFINED__

typedef enum __x_ABI_CWindows_CManagement_CPolicies_CNamedPolicyKind __x_ABI_CWindows_CManagement_CPolicies_CNamedPolicyKind;

enum __x_ABI_CWindows_CManagement_CPolicies_CNamedPolicyKind
    {
        __x_ABI_CWindows_CManagement_CPolicies_CNamedPolicyKind_Invalid = 0,
    __x_ABI_CWindows_CManagement_CPolicies_CNamedPolicyKind_Binary = 1,
    __x_ABI_CWindows_CManagement_CPolicies_CNamedPolicyKind_Boolean = 2,
    __x_ABI_CWindows_CManagement_CPolicies_CNamedPolicyKind_Int32 = 3,
    __x_ABI_CWindows_CManagement_CPolicies_CNamedPolicyKind_Int64 = 4,
    __x_ABI_CWindows_CManagement_CPolicies_CNamedPolicyKind_String = 5,
};

#if !defined(____x_ABI_CWindows_CManagement_CPolicies_CINamedPolicyData_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CManagement_CPolicies_CINamedPolicyData_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CManagement_CPolicies_CINamedPolicyDataVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CManagement_CPolicies_CINamedPolicyData* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CManagement_CPolicies_CINamedPolicyData* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CManagement_CPolicies_CINamedPolicyData* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CManagement_CPolicies_CINamedPolicyData* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CManagement_CPolicies_CINamedPolicyData* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CManagement_CPolicies_CINamedPolicyData* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Area)(__x_ABI_CWindows_CManagement_CPolicies_CINamedPolicyData* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* get_Name)(__x_ABI_CWindows_CManagement_CPolicies_CINamedPolicyData* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* get_Kind)(__x_ABI_CWindows_CManagement_CPolicies_CINamedPolicyData* This,
        enum __x_ABI_CWindows_CManagement_CPolicies_CNamedPolicyKind* value);
    HRESULT (STDMETHODCALLTYPE* get_IsManaged)(__x_ABI_CWindows_CManagement_CPolicies_CINamedPolicyData* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* get_IsUserPolicy)(__x_ABI_CWindows_CManagement_CPolicies_CINamedPolicyData* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* get_User)(__x_ABI_CWindows_CManagement_CPolicies_CINamedPolicyData* This,
        __x_ABI_CWindows_CSystem_CIUser** value);
    HRESULT (STDMETHODCALLTYPE* GetBoolean)(__x_ABI_CWindows_CManagement_CPolicies_CINamedPolicyData* This,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* GetBinary)(__x_ABI_CWindows_CManagement_CPolicies_CINamedPolicyData* This,
        __x_ABI_CWindows_CStorage_CStreams_CIBuffer** result);
    HRESULT (STDMETHODCALLTYPE* GetInt32)(__x_ABI_CWindows_CManagement_CPolicies_CINamedPolicyData* This,
        INT32* result);
    HRESULT (STDMETHODCALLTYPE* GetInt64)(__x_ABI_CWindows_CManagement_CPolicies_CINamedPolicyData* This,
        INT64* result);
    HRESULT (STDMETHODCALLTYPE* GetString)(__x_ABI_CWindows_CManagement_CPolicies_CINamedPolicyData* This,
        HSTRING* result);
    HRESULT (STDMETHODCALLTYPE* add_Changed)(__x_ABI_CWindows_CManagement_CPolicies_CINamedPolicyData* This,
        __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CManagement__CPolicies__CNamedPolicyData_IInspectable* changedHandler,
        EventRegistrationToken* cookie);
    HRESULT (STDMETHODCALLTYPE* remove_Changed)(__x_ABI_CWindows_CManagement_CPolicies_CINamedPolicyData* This,
        EventRegistrationToken cookie);

        END_INTERFACE
    } __x_ABI_CWindows_CManagement_CPolicies_CINamedPolicyDataVtbl;

    interface __x_ABI_CWindows_CManagement_CPolicies_CINamedPolicyData
    {
        CONST_VTBL struct __x_ABI_CWindows_CManagement_CPolicies_CINamedPolicyDataVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CManagement_CPolicies_CINamedPolicyData;
#endif /* !defined(____x_ABI_CWindows_CManagement_CPolicies_CINamedPolicyData_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CManagement_CPolicies_CINamedPolicyStatics_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CManagement_CPolicies_CINamedPolicyStatics_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CManagement_CPolicies_CINamedPolicyStaticsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CManagement_CPolicies_CINamedPolicyStatics* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CManagement_CPolicies_CINamedPolicyStatics* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CManagement_CPolicies_CINamedPolicyStatics* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CManagement_CPolicies_CINamedPolicyStatics* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CManagement_CPolicies_CINamedPolicyStatics* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CManagement_CPolicies_CINamedPolicyStatics* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* GetPolicyFromPath)(__x_ABI_CWindows_CManagement_CPolicies_CINamedPolicyStatics* This,
        HSTRING area,
        HSTRING name,
        __x_ABI_CWindows_CManagement_CPolicies_CINamedPolicyData** result);
    HRESULT (STDMETHODCALLTYPE* GetPolicyFromPathForUser)(__x_ABI_CWindows_CManagement_CPolicies_CINamedPolicyStatics* This,
        __x_ABI_CWindows_CSystem_CIUser* user,
        HSTRING area,
        HSTRING name,
        __x_ABI_CWindows_CManagement_CPolicies_CINamedPolicyData** result);

        END_INTERFACE
    } __x_ABI_CWindows_CManagement_CPolicies_CINamedPolicyStaticsVtbl;

    interface __x_ABI_CWindows_CManagement_CPolicies_CINamedPolicyStatics
    {
        CONST_VTBL struct __x_ABI_CWindows_CManagement_CPolicies_CINamedPolicyStaticsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CManagement_CPolicies_CINamedPolicyStatics;
#endif /* !defined(____x_ABI_CWindows_CManagement_CPolicies_CINamedPolicyStatics_INTERFACE_DEFINED__) */
    
