// WARNING: Please don't edit this file. It was generated by Swift/WinRT v0.0.1

#pragma once
// Header files for imported files
#include <inspectable.h>
#include <EventToken.h>
#include <windowscontracts.h>
#include "Windows.Foundation.h"
#include "Windows.System.h"
#include "Windows.UI.h"
#include "Windows.UI.Popups.h"
// Importing Collections header
#include "Windows.Foundation.Collections.h"

/* Forward Declarations */
#ifndef ____x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointment_FWD_DEFINED__
#define ____x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointment_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointment __x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointment;

#endif // ____x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointment_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointment2_FWD_DEFINED__
#define ____x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointment2_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointment2 __x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointment2;

#endif // ____x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointment2_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointment3_FWD_DEFINED__
#define ____x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointment3_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointment3 __x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointment3;

#endif // ____x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointment3_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointmentCalendar_FWD_DEFINED__
#define ____x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointmentCalendar_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointmentCalendar __x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointmentCalendar;

#endif // ____x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointmentCalendar_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointmentCalendar2_FWD_DEFINED__
#define ____x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointmentCalendar2_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointmentCalendar2 __x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointmentCalendar2;

#endif // ____x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointmentCalendar2_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointmentCalendar3_FWD_DEFINED__
#define ____x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointmentCalendar3_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointmentCalendar3 __x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointmentCalendar3;

#endif // ____x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointmentCalendar3_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointmentCalendarSyncManager_FWD_DEFINED__
#define ____x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointmentCalendarSyncManager_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointmentCalendarSyncManager __x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointmentCalendarSyncManager;

#endif // ____x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointmentCalendarSyncManager_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointmentCalendarSyncManager2_FWD_DEFINED__
#define ____x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointmentCalendarSyncManager2_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointmentCalendarSyncManager2 __x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointmentCalendarSyncManager2;

#endif // ____x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointmentCalendarSyncManager2_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointmentConflictResult_FWD_DEFINED__
#define ____x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointmentConflictResult_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointmentConflictResult __x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointmentConflictResult;

#endif // ____x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointmentConflictResult_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointmentException_FWD_DEFINED__
#define ____x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointmentException_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointmentException __x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointmentException;

#endif // ____x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointmentException_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointmentInvitee_FWD_DEFINED__
#define ____x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointmentInvitee_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointmentInvitee __x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointmentInvitee;

#endif // ____x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointmentInvitee_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointmentManagerForUser_FWD_DEFINED__
#define ____x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointmentManagerForUser_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointmentManagerForUser __x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointmentManagerForUser;

#endif // ____x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointmentManagerForUser_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointmentManagerStatics_FWD_DEFINED__
#define ____x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointmentManagerStatics_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointmentManagerStatics __x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointmentManagerStatics;

#endif // ____x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointmentManagerStatics_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointmentManagerStatics2_FWD_DEFINED__
#define ____x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointmentManagerStatics2_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointmentManagerStatics2 __x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointmentManagerStatics2;

#endif // ____x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointmentManagerStatics2_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointmentManagerStatics3_FWD_DEFINED__
#define ____x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointmentManagerStatics3_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointmentManagerStatics3 __x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointmentManagerStatics3;

#endif // ____x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointmentManagerStatics3_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointmentParticipant_FWD_DEFINED__
#define ____x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointmentParticipant_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointmentParticipant __x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointmentParticipant;

#endif // ____x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointmentParticipant_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointmentPropertiesStatics_FWD_DEFINED__
#define ____x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointmentPropertiesStatics_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointmentPropertiesStatics __x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointmentPropertiesStatics;

#endif // ____x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointmentPropertiesStatics_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointmentPropertiesStatics2_FWD_DEFINED__
#define ____x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointmentPropertiesStatics2_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointmentPropertiesStatics2 __x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointmentPropertiesStatics2;

#endif // ____x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointmentPropertiesStatics2_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointmentRecurrence_FWD_DEFINED__
#define ____x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointmentRecurrence_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointmentRecurrence __x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointmentRecurrence;

#endif // ____x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointmentRecurrence_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointmentRecurrence2_FWD_DEFINED__
#define ____x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointmentRecurrence2_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointmentRecurrence2 __x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointmentRecurrence2;

#endif // ____x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointmentRecurrence2_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointmentRecurrence3_FWD_DEFINED__
#define ____x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointmentRecurrence3_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointmentRecurrence3 __x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointmentRecurrence3;

#endif // ____x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointmentRecurrence3_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointmentStore_FWD_DEFINED__
#define ____x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointmentStore_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointmentStore __x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointmentStore;

#endif // ____x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointmentStore_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointmentStore2_FWD_DEFINED__
#define ____x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointmentStore2_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointmentStore2 __x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointmentStore2;

#endif // ____x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointmentStore2_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointmentStore3_FWD_DEFINED__
#define ____x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointmentStore3_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointmentStore3 __x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointmentStore3;

#endif // ____x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointmentStore3_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointmentStoreChange_FWD_DEFINED__
#define ____x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointmentStoreChange_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointmentStoreChange __x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointmentStoreChange;

#endif // ____x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointmentStoreChange_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointmentStoreChange2_FWD_DEFINED__
#define ____x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointmentStoreChange2_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointmentStoreChange2 __x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointmentStoreChange2;

#endif // ____x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointmentStoreChange2_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointmentStoreChangeReader_FWD_DEFINED__
#define ____x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointmentStoreChangeReader_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointmentStoreChangeReader __x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointmentStoreChangeReader;

#endif // ____x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointmentStoreChangeReader_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointmentStoreChangeTracker_FWD_DEFINED__
#define ____x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointmentStoreChangeTracker_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointmentStoreChangeTracker __x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointmentStoreChangeTracker;

#endif // ____x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointmentStoreChangeTracker_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointmentStoreChangeTracker2_FWD_DEFINED__
#define ____x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointmentStoreChangeTracker2_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointmentStoreChangeTracker2 __x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointmentStoreChangeTracker2;

#endif // ____x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointmentStoreChangeTracker2_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointmentStoreChangedDeferral_FWD_DEFINED__
#define ____x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointmentStoreChangedDeferral_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointmentStoreChangedDeferral __x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointmentStoreChangedDeferral;

#endif // ____x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointmentStoreChangedDeferral_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointmentStoreChangedEventArgs_FWD_DEFINED__
#define ____x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointmentStoreChangedEventArgs_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointmentStoreChangedEventArgs __x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointmentStoreChangedEventArgs;

#endif // ____x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointmentStoreChangedEventArgs_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointmentStoreNotificationTriggerDetails_FWD_DEFINED__
#define ____x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointmentStoreNotificationTriggerDetails_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointmentStoreNotificationTriggerDetails __x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointmentStoreNotificationTriggerDetails;

#endif // ____x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointmentStoreNotificationTriggerDetails_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CApplicationModel_CAppointments_CIFindAppointmentsOptions_FWD_DEFINED__
#define ____x_ABI_CWindows_CApplicationModel_CAppointments_CIFindAppointmentsOptions_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CApplicationModel_CAppointments_CIFindAppointmentsOptions __x_ABI_CWindows_CApplicationModel_CAppointments_CIFindAppointmentsOptions;

#endif // ____x_ABI_CWindows_CApplicationModel_CAppointments_CIFindAppointmentsOptions_FWD_DEFINED__

// Parameterized interface forward declarations (C)

// Collection interface definitions

typedef interface __x_ABI_C__FIAsyncOperationCompletedHandler_1_boolean __x_ABI_C__FIAsyncOperationCompletedHandler_1_boolean;

#if !defined(____x_ABI_C__FIAsyncOperation_1_boolean_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIAsyncOperation_1_boolean_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIAsyncOperation_1_boolean __x_ABI_C__FIAsyncOperation_1_boolean;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIAsyncOperation_1_boolean;

    typedef struct __x_ABI_C__FIAsyncOperation_1_booleanVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIAsyncOperation_1_boolean* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIAsyncOperation_1_boolean* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIAsyncOperation_1_boolean* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIAsyncOperation_1_boolean* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIAsyncOperation_1_boolean* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIAsyncOperation_1_boolean* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* put_Completed)(__x_ABI_C__FIAsyncOperation_1_boolean* This,
        __x_ABI_C__FIAsyncOperationCompletedHandler_1_boolean* handler);
    HRESULT (STDMETHODCALLTYPE* get_Completed)(__x_ABI_C__FIAsyncOperation_1_boolean* This,
        __x_ABI_C__FIAsyncOperationCompletedHandler_1_boolean** result);
    HRESULT (STDMETHODCALLTYPE* GetResults)(__x_ABI_C__FIAsyncOperation_1_boolean* This,
        boolean* result);

        END_INTERFACE
    } __x_ABI_C__FIAsyncOperation_1_booleanVtbl;

    interface __x_ABI_C__FIAsyncOperation_1_boolean
    {
        CONST_VTBL struct __x_ABI_C__FIAsyncOperation_1_booleanVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIAsyncOperation_1_boolean_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIAsyncOperationCompletedHandler_1_boolean_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIAsyncOperationCompletedHandler_1_boolean_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIAsyncOperationCompletedHandler_1_boolean __x_ABI_C__FIAsyncOperationCompletedHandler_1_boolean;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIAsyncOperationCompletedHandler_1_boolean;

    typedef struct __x_ABI_C__FIAsyncOperationCompletedHandler_1_booleanVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIAsyncOperationCompletedHandler_1_boolean* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIAsyncOperationCompletedHandler_1_boolean* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIAsyncOperationCompletedHandler_1_boolean* This);
        HRESULT (STDMETHODCALLTYPE* Invoke)(__x_ABI_C__FIAsyncOperationCompletedHandler_1_boolean* This,
        __x_ABI_C__FIAsyncOperation_1_boolean* asyncInfo,
        enum __x_ABI_CWindows_CFoundation_CAsyncStatus asyncStatus);

        END_INTERFACE
    } __x_ABI_C__FIAsyncOperationCompletedHandler_1_booleanVtbl;

    interface __x_ABI_C__FIAsyncOperationCompletedHandler_1_boolean
    {
        CONST_VTBL struct __x_ABI_C__FIAsyncOperationCompletedHandler_1_booleanVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIAsyncOperationCompletedHandler_1_boolean_INTERFACE_DEFINED__
    
typedef interface __x_ABI_C__FIAsyncOperationCompletedHandler_1_HSTRING __x_ABI_C__FIAsyncOperationCompletedHandler_1_HSTRING;

#if !defined(____x_ABI_C__FIAsyncOperation_1_HSTRING_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIAsyncOperation_1_HSTRING_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIAsyncOperation_1_HSTRING __x_ABI_C__FIAsyncOperation_1_HSTRING;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIAsyncOperation_1_HSTRING;

    typedef struct __x_ABI_C__FIAsyncOperation_1_HSTRINGVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIAsyncOperation_1_HSTRING* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIAsyncOperation_1_HSTRING* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIAsyncOperation_1_HSTRING* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIAsyncOperation_1_HSTRING* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIAsyncOperation_1_HSTRING* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIAsyncOperation_1_HSTRING* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* put_Completed)(__x_ABI_C__FIAsyncOperation_1_HSTRING* This,
        __x_ABI_C__FIAsyncOperationCompletedHandler_1_HSTRING* handler);
    HRESULT (STDMETHODCALLTYPE* get_Completed)(__x_ABI_C__FIAsyncOperation_1_HSTRING* This,
        __x_ABI_C__FIAsyncOperationCompletedHandler_1_HSTRING** result);
    HRESULT (STDMETHODCALLTYPE* GetResults)(__x_ABI_C__FIAsyncOperation_1_HSTRING* This,
        HSTRING* result);

        END_INTERFACE
    } __x_ABI_C__FIAsyncOperation_1_HSTRINGVtbl;

    interface __x_ABI_C__FIAsyncOperation_1_HSTRING
    {
        CONST_VTBL struct __x_ABI_C__FIAsyncOperation_1_HSTRINGVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIAsyncOperation_1_HSTRING_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIAsyncOperationCompletedHandler_1_HSTRING_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIAsyncOperationCompletedHandler_1_HSTRING_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIAsyncOperationCompletedHandler_1_HSTRING __x_ABI_C__FIAsyncOperationCompletedHandler_1_HSTRING;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIAsyncOperationCompletedHandler_1_HSTRING;

    typedef struct __x_ABI_C__FIAsyncOperationCompletedHandler_1_HSTRINGVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIAsyncOperationCompletedHandler_1_HSTRING* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIAsyncOperationCompletedHandler_1_HSTRING* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIAsyncOperationCompletedHandler_1_HSTRING* This);
        HRESULT (STDMETHODCALLTYPE* Invoke)(__x_ABI_C__FIAsyncOperationCompletedHandler_1_HSTRING* This,
        __x_ABI_C__FIAsyncOperation_1_HSTRING* asyncInfo,
        enum __x_ABI_CWindows_CFoundation_CAsyncStatus asyncStatus);

        END_INTERFACE
    } __x_ABI_C__FIAsyncOperationCompletedHandler_1_HSTRINGVtbl;

    interface __x_ABI_C__FIAsyncOperationCompletedHandler_1_HSTRING
    {
        CONST_VTBL struct __x_ABI_C__FIAsyncOperationCompletedHandler_1_HSTRINGVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIAsyncOperationCompletedHandler_1_HSTRING_INTERFACE_DEFINED__
    
typedef interface __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CAppointments__CAppointment __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CAppointments__CAppointment;

#if !defined(____x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CAppointments__CAppointment_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CAppointments__CAppointment_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CAppointments__CAppointment __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CAppointments__CAppointment;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CAppointments__CAppointment;

    typedef struct __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CAppointments__CAppointmentVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CAppointments__CAppointment* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CAppointments__CAppointment* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CAppointments__CAppointment* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CAppointments__CAppointment* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CAppointments__CAppointment* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CAppointments__CAppointment* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* put_Completed)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CAppointments__CAppointment* This,
        __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CAppointments__CAppointment* handler);
    HRESULT (STDMETHODCALLTYPE* get_Completed)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CAppointments__CAppointment* This,
        __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CAppointments__CAppointment** result);
    HRESULT (STDMETHODCALLTYPE* GetResults)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CAppointments__CAppointment* This,
        __x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointment** result);

        END_INTERFACE
    } __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CAppointments__CAppointmentVtbl;

    interface __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CAppointments__CAppointment
    {
        CONST_VTBL struct __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CAppointments__CAppointmentVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CAppointments__CAppointment_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CAppointments__CAppointment_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CAppointments__CAppointment_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CAppointments__CAppointment __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CAppointments__CAppointment;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CAppointments__CAppointment;

    typedef struct __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CAppointments__CAppointmentVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CAppointments__CAppointment* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CAppointments__CAppointment* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CAppointments__CAppointment* This);
        HRESULT (STDMETHODCALLTYPE* Invoke)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CAppointments__CAppointment* This,
        __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CAppointments__CAppointment* asyncInfo,
        enum __x_ABI_CWindows_CFoundation_CAsyncStatus asyncStatus);

        END_INTERFACE
    } __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CAppointments__CAppointmentVtbl;

    interface __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CAppointments__CAppointment
    {
        CONST_VTBL struct __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CAppointments__CAppointmentVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CAppointments__CAppointment_INTERFACE_DEFINED__
    
typedef interface __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CAppointments__CAppointmentCalendar __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CAppointments__CAppointmentCalendar;

#if !defined(____x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CAppointments__CAppointmentCalendar_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CAppointments__CAppointmentCalendar_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CAppointments__CAppointmentCalendar __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CAppointments__CAppointmentCalendar;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CAppointments__CAppointmentCalendar;

    typedef struct __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CAppointments__CAppointmentCalendarVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CAppointments__CAppointmentCalendar* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CAppointments__CAppointmentCalendar* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CAppointments__CAppointmentCalendar* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CAppointments__CAppointmentCalendar* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CAppointments__CAppointmentCalendar* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CAppointments__CAppointmentCalendar* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* put_Completed)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CAppointments__CAppointmentCalendar* This,
        __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CAppointments__CAppointmentCalendar* handler);
    HRESULT (STDMETHODCALLTYPE* get_Completed)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CAppointments__CAppointmentCalendar* This,
        __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CAppointments__CAppointmentCalendar** result);
    HRESULT (STDMETHODCALLTYPE* GetResults)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CAppointments__CAppointmentCalendar* This,
        __x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointmentCalendar** result);

        END_INTERFACE
    } __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CAppointments__CAppointmentCalendarVtbl;

    interface __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CAppointments__CAppointmentCalendar
    {
        CONST_VTBL struct __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CAppointments__CAppointmentCalendarVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CAppointments__CAppointmentCalendar_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CAppointments__CAppointmentCalendar_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CAppointments__CAppointmentCalendar_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CAppointments__CAppointmentCalendar __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CAppointments__CAppointmentCalendar;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CAppointments__CAppointmentCalendar;

    typedef struct __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CAppointments__CAppointmentCalendarVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CAppointments__CAppointmentCalendar* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CAppointments__CAppointmentCalendar* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CAppointments__CAppointmentCalendar* This);
        HRESULT (STDMETHODCALLTYPE* Invoke)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CAppointments__CAppointmentCalendar* This,
        __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CAppointments__CAppointmentCalendar* asyncInfo,
        enum __x_ABI_CWindows_CFoundation_CAsyncStatus asyncStatus);

        END_INTERFACE
    } __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CAppointments__CAppointmentCalendarVtbl;

    interface __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CAppointments__CAppointmentCalendar
    {
        CONST_VTBL struct __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CAppointments__CAppointmentCalendarVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CAppointments__CAppointmentCalendar_INTERFACE_DEFINED__
    
typedef interface __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CAppointments__CAppointmentConflictResult __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CAppointments__CAppointmentConflictResult;

#if !defined(____x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CAppointments__CAppointmentConflictResult_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CAppointments__CAppointmentConflictResult_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CAppointments__CAppointmentConflictResult __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CAppointments__CAppointmentConflictResult;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CAppointments__CAppointmentConflictResult;

    typedef struct __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CAppointments__CAppointmentConflictResultVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CAppointments__CAppointmentConflictResult* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CAppointments__CAppointmentConflictResult* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CAppointments__CAppointmentConflictResult* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CAppointments__CAppointmentConflictResult* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CAppointments__CAppointmentConflictResult* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CAppointments__CAppointmentConflictResult* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* put_Completed)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CAppointments__CAppointmentConflictResult* This,
        __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CAppointments__CAppointmentConflictResult* handler);
    HRESULT (STDMETHODCALLTYPE* get_Completed)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CAppointments__CAppointmentConflictResult* This,
        __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CAppointments__CAppointmentConflictResult** result);
    HRESULT (STDMETHODCALLTYPE* GetResults)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CAppointments__CAppointmentConflictResult* This,
        __x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointmentConflictResult** result);

        END_INTERFACE
    } __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CAppointments__CAppointmentConflictResultVtbl;

    interface __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CAppointments__CAppointmentConflictResult
    {
        CONST_VTBL struct __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CAppointments__CAppointmentConflictResultVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CAppointments__CAppointmentConflictResult_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CAppointments__CAppointmentConflictResult_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CAppointments__CAppointmentConflictResult_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CAppointments__CAppointmentConflictResult __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CAppointments__CAppointmentConflictResult;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CAppointments__CAppointmentConflictResult;

    typedef struct __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CAppointments__CAppointmentConflictResultVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CAppointments__CAppointmentConflictResult* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CAppointments__CAppointmentConflictResult* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CAppointments__CAppointmentConflictResult* This);
        HRESULT (STDMETHODCALLTYPE* Invoke)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CAppointments__CAppointmentConflictResult* This,
        __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CAppointments__CAppointmentConflictResult* asyncInfo,
        enum __x_ABI_CWindows_CFoundation_CAsyncStatus asyncStatus);

        END_INTERFACE
    } __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CAppointments__CAppointmentConflictResultVtbl;

    interface __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CAppointments__CAppointmentConflictResult
    {
        CONST_VTBL struct __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CAppointments__CAppointmentConflictResultVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CAppointments__CAppointmentConflictResult_INTERFACE_DEFINED__
    
typedef interface __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CAppointments__CAppointmentStore __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CAppointments__CAppointmentStore;

#if !defined(____x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CAppointments__CAppointmentStore_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CAppointments__CAppointmentStore_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CAppointments__CAppointmentStore __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CAppointments__CAppointmentStore;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CAppointments__CAppointmentStore;

    typedef struct __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CAppointments__CAppointmentStoreVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CAppointments__CAppointmentStore* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CAppointments__CAppointmentStore* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CAppointments__CAppointmentStore* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CAppointments__CAppointmentStore* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CAppointments__CAppointmentStore* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CAppointments__CAppointmentStore* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* put_Completed)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CAppointments__CAppointmentStore* This,
        __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CAppointments__CAppointmentStore* handler);
    HRESULT (STDMETHODCALLTYPE* get_Completed)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CAppointments__CAppointmentStore* This,
        __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CAppointments__CAppointmentStore** result);
    HRESULT (STDMETHODCALLTYPE* GetResults)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CAppointments__CAppointmentStore* This,
        __x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointmentStore** result);

        END_INTERFACE
    } __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CAppointments__CAppointmentStoreVtbl;

    interface __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CAppointments__CAppointmentStore
    {
        CONST_VTBL struct __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CAppointments__CAppointmentStoreVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CAppointments__CAppointmentStore_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CAppointments__CAppointmentStore_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CAppointments__CAppointmentStore_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CAppointments__CAppointmentStore __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CAppointments__CAppointmentStore;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CAppointments__CAppointmentStore;

    typedef struct __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CAppointments__CAppointmentStoreVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CAppointments__CAppointmentStore* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CAppointments__CAppointmentStore* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CAppointments__CAppointmentStore* This);
        HRESULT (STDMETHODCALLTYPE* Invoke)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CAppointments__CAppointmentStore* This,
        __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CAppointments__CAppointmentStore* asyncInfo,
        enum __x_ABI_CWindows_CFoundation_CAsyncStatus asyncStatus);

        END_INTERFACE
    } __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CAppointments__CAppointmentStoreVtbl;

    interface __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CAppointments__CAppointmentStore
    {
        CONST_VTBL struct __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CAppointments__CAppointmentStoreVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CAppointments__CAppointmentStore_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIIterator_1_HSTRING_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIIterator_1_HSTRING_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIIterator_1_HSTRING __x_ABI_C__FIIterator_1_HSTRING;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIIterator_1_HSTRING;

    typedef struct __x_ABI_C__FIIterator_1_HSTRINGVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIIterator_1_HSTRING* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIIterator_1_HSTRING* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIIterator_1_HSTRING* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIIterator_1_HSTRING* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIIterator_1_HSTRING* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIIterator_1_HSTRING* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Current)(__x_ABI_C__FIIterator_1_HSTRING* This,
        HSTRING* result);
    HRESULT (STDMETHODCALLTYPE* get_HasCurrent)(__x_ABI_C__FIIterator_1_HSTRING* This,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* MoveNext)(__x_ABI_C__FIIterator_1_HSTRING* This,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__x_ABI_C__FIIterator_1_HSTRING* This,
        UINT32 itemsLength,
        HSTRING* items,
        UINT32* result);

        END_INTERFACE
    } __x_ABI_C__FIIterator_1_HSTRINGVtbl;

    interface __x_ABI_C__FIIterator_1_HSTRING
    {
        CONST_VTBL struct __x_ABI_C__FIIterator_1_HSTRINGVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIIterator_1_HSTRING_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIIterable_1_HSTRING_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIIterable_1_HSTRING_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIIterable_1_HSTRING __x_ABI_C__FIIterable_1_HSTRING;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIIterable_1_HSTRING;

    typedef struct __x_ABI_C__FIIterable_1_HSTRINGVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIIterable_1_HSTRING* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIIterable_1_HSTRING* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIIterable_1_HSTRING* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIIterable_1_HSTRING* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIIterable_1_HSTRING* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIIterable_1_HSTRING* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* First)(__x_ABI_C__FIIterable_1_HSTRING* This,
        __x_ABI_C__FIIterator_1_HSTRING** result);

        END_INTERFACE
    } __x_ABI_C__FIIterable_1_HSTRINGVtbl;

    interface __x_ABI_C__FIIterable_1_HSTRING
    {
        CONST_VTBL struct __x_ABI_C__FIIterable_1_HSTRINGVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIIterable_1_HSTRING_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIVectorView_1_HSTRING_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIVectorView_1_HSTRING_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIVectorView_1_HSTRING __x_ABI_C__FIVectorView_1_HSTRING;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIVectorView_1_HSTRING;

    typedef struct __x_ABI_C__FIVectorView_1_HSTRINGVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIVectorView_1_HSTRING* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIVectorView_1_HSTRING* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIVectorView_1_HSTRING* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIVectorView_1_HSTRING* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIVectorView_1_HSTRING* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIVectorView_1_HSTRING* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* GetAt)(__x_ABI_C__FIVectorView_1_HSTRING* This,
        UINT32 index,
        HSTRING* result);
    HRESULT (STDMETHODCALLTYPE* get_Size)(__x_ABI_C__FIVectorView_1_HSTRING* This,
        UINT32* result);
    HRESULT (STDMETHODCALLTYPE* IndexOf)(__x_ABI_C__FIVectorView_1_HSTRING* This,
        HSTRING value,
        UINT32* index,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__x_ABI_C__FIVectorView_1_HSTRING* This,
        UINT32 startIndex,
        UINT32 itemsLength,
        HSTRING* items,
        UINT32* result);

        END_INTERFACE
    } __x_ABI_C__FIVectorView_1_HSTRINGVtbl;

    interface __x_ABI_C__FIVectorView_1_HSTRING
    {
        CONST_VTBL struct __x_ABI_C__FIVectorView_1_HSTRINGVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIVectorView_1_HSTRING_INTERFACE_DEFINED__
    
typedef interface __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1_HSTRING __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1_HSTRING;

#if !defined(____x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1_HSTRING_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1_HSTRING_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1_HSTRING __x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1_HSTRING;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1_HSTRING;

    typedef struct __x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1_HSTRINGVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1_HSTRING* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1_HSTRING* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1_HSTRING* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1_HSTRING* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1_HSTRING* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1_HSTRING* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* put_Completed)(__x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1_HSTRING* This,
        __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1_HSTRING* handler);
    HRESULT (STDMETHODCALLTYPE* get_Completed)(__x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1_HSTRING* This,
        __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1_HSTRING** result);
    HRESULT (STDMETHODCALLTYPE* GetResults)(__x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1_HSTRING* This,
        __x_ABI_C__FIVectorView_1_HSTRING** result);

        END_INTERFACE
    } __x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1_HSTRINGVtbl;

    interface __x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1_HSTRING
    {
        CONST_VTBL struct __x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1_HSTRINGVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1_HSTRING_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1_HSTRING_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1_HSTRING_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1_HSTRING __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1_HSTRING;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1_HSTRING;

    typedef struct __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1_HSTRINGVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1_HSTRING* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1_HSTRING* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1_HSTRING* This);
        HRESULT (STDMETHODCALLTYPE* Invoke)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1_HSTRING* This,
        __x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1_HSTRING* asyncInfo,
        enum __x_ABI_CWindows_CFoundation_CAsyncStatus asyncStatus);

        END_INTERFACE
    } __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1_HSTRINGVtbl;

    interface __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1_HSTRING
    {
        CONST_VTBL struct __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1_HSTRINGVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1_HSTRING_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CAppointments__CAppointment_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CAppointments__CAppointment_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CAppointments__CAppointment __x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CAppointments__CAppointment;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CAppointments__CAppointment;

    typedef struct __x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CAppointments__CAppointmentVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CAppointments__CAppointment* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CAppointments__CAppointment* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CAppointments__CAppointment* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CAppointments__CAppointment* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CAppointments__CAppointment* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CAppointments__CAppointment* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Current)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CAppointments__CAppointment* This,
        __x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointment** result);
    HRESULT (STDMETHODCALLTYPE* get_HasCurrent)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CAppointments__CAppointment* This,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* MoveNext)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CAppointments__CAppointment* This,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CAppointments__CAppointment* This,
        UINT32 itemsLength,
        __x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointment** items,
        UINT32* result);

        END_INTERFACE
    } __x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CAppointments__CAppointmentVtbl;

    interface __x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CAppointments__CAppointment
    {
        CONST_VTBL struct __x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CAppointments__CAppointmentVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CAppointments__CAppointment_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CAppointments__CAppointment_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CAppointments__CAppointment_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CAppointments__CAppointment __x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CAppointments__CAppointment;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CAppointments__CAppointment;

    typedef struct __x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CAppointments__CAppointmentVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CAppointments__CAppointment* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CAppointments__CAppointment* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CAppointments__CAppointment* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CAppointments__CAppointment* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CAppointments__CAppointment* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CAppointments__CAppointment* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* First)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CAppointments__CAppointment* This,
        __x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CAppointments__CAppointment** result);

        END_INTERFACE
    } __x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CAppointments__CAppointmentVtbl;

    interface __x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CAppointments__CAppointment
    {
        CONST_VTBL struct __x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CAppointments__CAppointmentVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CAppointments__CAppointment_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CAppointments__CAppointment_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CAppointments__CAppointment_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CAppointments__CAppointment __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CAppointments__CAppointment;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CAppointments__CAppointment;

    typedef struct __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CAppointments__CAppointmentVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CAppointments__CAppointment* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CAppointments__CAppointment* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CAppointments__CAppointment* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CAppointments__CAppointment* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CAppointments__CAppointment* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CAppointments__CAppointment* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* GetAt)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CAppointments__CAppointment* This,
        UINT32 index,
        __x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointment** result);
    HRESULT (STDMETHODCALLTYPE* get_Size)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CAppointments__CAppointment* This,
        UINT32* result);
    HRESULT (STDMETHODCALLTYPE* IndexOf)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CAppointments__CAppointment* This,
        __x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointment* value,
        UINT32* index,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CAppointments__CAppointment* This,
        UINT32 startIndex,
        UINT32 itemsLength,
        __x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointment** items,
        UINT32* result);

        END_INTERFACE
    } __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CAppointments__CAppointmentVtbl;

    interface __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CAppointments__CAppointment
    {
        CONST_VTBL struct __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CAppointments__CAppointmentVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CAppointments__CAppointment_INTERFACE_DEFINED__
    
typedef interface __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CAppointments__CAppointment __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CAppointments__CAppointment;

#if !defined(____x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CAppointments__CAppointment_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CAppointments__CAppointment_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CAppointments__CAppointment __x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CAppointments__CAppointment;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CAppointments__CAppointment;

    typedef struct __x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CAppointments__CAppointmentVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CAppointments__CAppointment* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CAppointments__CAppointment* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CAppointments__CAppointment* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CAppointments__CAppointment* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CAppointments__CAppointment* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CAppointments__CAppointment* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* put_Completed)(__x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CAppointments__CAppointment* This,
        __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CAppointments__CAppointment* handler);
    HRESULT (STDMETHODCALLTYPE* get_Completed)(__x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CAppointments__CAppointment* This,
        __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CAppointments__CAppointment** result);
    HRESULT (STDMETHODCALLTYPE* GetResults)(__x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CAppointments__CAppointment* This,
        __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CAppointments__CAppointment** result);

        END_INTERFACE
    } __x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CAppointments__CAppointmentVtbl;

    interface __x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CAppointments__CAppointment
    {
        CONST_VTBL struct __x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CAppointments__CAppointmentVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CAppointments__CAppointment_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CAppointments__CAppointment_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CAppointments__CAppointment_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CAppointments__CAppointment __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CAppointments__CAppointment;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CAppointments__CAppointment;

    typedef struct __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CAppointments__CAppointmentVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CAppointments__CAppointment* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CAppointments__CAppointment* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CAppointments__CAppointment* This);
        HRESULT (STDMETHODCALLTYPE* Invoke)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CAppointments__CAppointment* This,
        __x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CAppointments__CAppointment* asyncInfo,
        enum __x_ABI_CWindows_CFoundation_CAsyncStatus asyncStatus);

        END_INTERFACE
    } __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CAppointments__CAppointmentVtbl;

    interface __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CAppointments__CAppointment
    {
        CONST_VTBL struct __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CAppointments__CAppointmentVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CAppointments__CAppointment_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CAppointments__CAppointmentCalendar_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CAppointments__CAppointmentCalendar_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CAppointments__CAppointmentCalendar __x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CAppointments__CAppointmentCalendar;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CAppointments__CAppointmentCalendar;

    typedef struct __x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CAppointments__CAppointmentCalendarVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CAppointments__CAppointmentCalendar* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CAppointments__CAppointmentCalendar* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CAppointments__CAppointmentCalendar* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CAppointments__CAppointmentCalendar* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CAppointments__CAppointmentCalendar* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CAppointments__CAppointmentCalendar* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Current)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CAppointments__CAppointmentCalendar* This,
        __x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointmentCalendar** result);
    HRESULT (STDMETHODCALLTYPE* get_HasCurrent)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CAppointments__CAppointmentCalendar* This,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* MoveNext)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CAppointments__CAppointmentCalendar* This,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CAppointments__CAppointmentCalendar* This,
        UINT32 itemsLength,
        __x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointmentCalendar** items,
        UINT32* result);

        END_INTERFACE
    } __x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CAppointments__CAppointmentCalendarVtbl;

    interface __x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CAppointments__CAppointmentCalendar
    {
        CONST_VTBL struct __x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CAppointments__CAppointmentCalendarVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CAppointments__CAppointmentCalendar_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CAppointments__CAppointmentCalendar_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CAppointments__CAppointmentCalendar_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CAppointments__CAppointmentCalendar __x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CAppointments__CAppointmentCalendar;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CAppointments__CAppointmentCalendar;

    typedef struct __x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CAppointments__CAppointmentCalendarVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CAppointments__CAppointmentCalendar* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CAppointments__CAppointmentCalendar* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CAppointments__CAppointmentCalendar* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CAppointments__CAppointmentCalendar* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CAppointments__CAppointmentCalendar* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CAppointments__CAppointmentCalendar* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* First)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CAppointments__CAppointmentCalendar* This,
        __x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CAppointments__CAppointmentCalendar** result);

        END_INTERFACE
    } __x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CAppointments__CAppointmentCalendarVtbl;

    interface __x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CAppointments__CAppointmentCalendar
    {
        CONST_VTBL struct __x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CAppointments__CAppointmentCalendarVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CAppointments__CAppointmentCalendar_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CAppointments__CAppointmentCalendar_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CAppointments__CAppointmentCalendar_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CAppointments__CAppointmentCalendar __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CAppointments__CAppointmentCalendar;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CAppointments__CAppointmentCalendar;

    typedef struct __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CAppointments__CAppointmentCalendarVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CAppointments__CAppointmentCalendar* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CAppointments__CAppointmentCalendar* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CAppointments__CAppointmentCalendar* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CAppointments__CAppointmentCalendar* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CAppointments__CAppointmentCalendar* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CAppointments__CAppointmentCalendar* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* GetAt)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CAppointments__CAppointmentCalendar* This,
        UINT32 index,
        __x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointmentCalendar** result);
    HRESULT (STDMETHODCALLTYPE* get_Size)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CAppointments__CAppointmentCalendar* This,
        UINT32* result);
    HRESULT (STDMETHODCALLTYPE* IndexOf)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CAppointments__CAppointmentCalendar* This,
        __x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointmentCalendar* value,
        UINT32* index,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CAppointments__CAppointmentCalendar* This,
        UINT32 startIndex,
        UINT32 itemsLength,
        __x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointmentCalendar** items,
        UINT32* result);

        END_INTERFACE
    } __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CAppointments__CAppointmentCalendarVtbl;

    interface __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CAppointments__CAppointmentCalendar
    {
        CONST_VTBL struct __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CAppointments__CAppointmentCalendarVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CAppointments__CAppointmentCalendar_INTERFACE_DEFINED__
    
typedef interface __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CAppointments__CAppointmentCalendar __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CAppointments__CAppointmentCalendar;

#if !defined(____x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CAppointments__CAppointmentCalendar_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CAppointments__CAppointmentCalendar_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CAppointments__CAppointmentCalendar __x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CAppointments__CAppointmentCalendar;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CAppointments__CAppointmentCalendar;

    typedef struct __x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CAppointments__CAppointmentCalendarVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CAppointments__CAppointmentCalendar* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CAppointments__CAppointmentCalendar* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CAppointments__CAppointmentCalendar* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CAppointments__CAppointmentCalendar* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CAppointments__CAppointmentCalendar* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CAppointments__CAppointmentCalendar* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* put_Completed)(__x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CAppointments__CAppointmentCalendar* This,
        __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CAppointments__CAppointmentCalendar* handler);
    HRESULT (STDMETHODCALLTYPE* get_Completed)(__x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CAppointments__CAppointmentCalendar* This,
        __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CAppointments__CAppointmentCalendar** result);
    HRESULT (STDMETHODCALLTYPE* GetResults)(__x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CAppointments__CAppointmentCalendar* This,
        __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CAppointments__CAppointmentCalendar** result);

        END_INTERFACE
    } __x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CAppointments__CAppointmentCalendarVtbl;

    interface __x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CAppointments__CAppointmentCalendar
    {
        CONST_VTBL struct __x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CAppointments__CAppointmentCalendarVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CAppointments__CAppointmentCalendar_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CAppointments__CAppointmentCalendar_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CAppointments__CAppointmentCalendar_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CAppointments__CAppointmentCalendar __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CAppointments__CAppointmentCalendar;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CAppointments__CAppointmentCalendar;

    typedef struct __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CAppointments__CAppointmentCalendarVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CAppointments__CAppointmentCalendar* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CAppointments__CAppointmentCalendar* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CAppointments__CAppointmentCalendar* This);
        HRESULT (STDMETHODCALLTYPE* Invoke)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CAppointments__CAppointmentCalendar* This,
        __x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CAppointments__CAppointmentCalendar* asyncInfo,
        enum __x_ABI_CWindows_CFoundation_CAsyncStatus asyncStatus);

        END_INTERFACE
    } __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CAppointments__CAppointmentCalendarVtbl;

    interface __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CAppointments__CAppointmentCalendar
    {
        CONST_VTBL struct __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CAppointments__CAppointmentCalendarVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CAppointments__CAppointmentCalendar_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CAppointments__CAppointmentException_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CAppointments__CAppointmentException_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CAppointments__CAppointmentException __x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CAppointments__CAppointmentException;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CAppointments__CAppointmentException;

    typedef struct __x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CAppointments__CAppointmentExceptionVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CAppointments__CAppointmentException* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CAppointments__CAppointmentException* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CAppointments__CAppointmentException* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CAppointments__CAppointmentException* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CAppointments__CAppointmentException* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CAppointments__CAppointmentException* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Current)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CAppointments__CAppointmentException* This,
        __x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointmentException** result);
    HRESULT (STDMETHODCALLTYPE* get_HasCurrent)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CAppointments__CAppointmentException* This,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* MoveNext)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CAppointments__CAppointmentException* This,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CAppointments__CAppointmentException* This,
        UINT32 itemsLength,
        __x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointmentException** items,
        UINT32* result);

        END_INTERFACE
    } __x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CAppointments__CAppointmentExceptionVtbl;

    interface __x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CAppointments__CAppointmentException
    {
        CONST_VTBL struct __x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CAppointments__CAppointmentExceptionVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CAppointments__CAppointmentException_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CAppointments__CAppointmentException_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CAppointments__CAppointmentException_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CAppointments__CAppointmentException __x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CAppointments__CAppointmentException;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CAppointments__CAppointmentException;

    typedef struct __x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CAppointments__CAppointmentExceptionVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CAppointments__CAppointmentException* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CAppointments__CAppointmentException* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CAppointments__CAppointmentException* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CAppointments__CAppointmentException* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CAppointments__CAppointmentException* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CAppointments__CAppointmentException* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* First)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CAppointments__CAppointmentException* This,
        __x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CAppointments__CAppointmentException** result);

        END_INTERFACE
    } __x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CAppointments__CAppointmentExceptionVtbl;

    interface __x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CAppointments__CAppointmentException
    {
        CONST_VTBL struct __x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CAppointments__CAppointmentExceptionVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CAppointments__CAppointmentException_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CAppointments__CAppointmentException_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CAppointments__CAppointmentException_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CAppointments__CAppointmentException __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CAppointments__CAppointmentException;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CAppointments__CAppointmentException;

    typedef struct __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CAppointments__CAppointmentExceptionVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CAppointments__CAppointmentException* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CAppointments__CAppointmentException* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CAppointments__CAppointmentException* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CAppointments__CAppointmentException* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CAppointments__CAppointmentException* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CAppointments__CAppointmentException* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* GetAt)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CAppointments__CAppointmentException* This,
        UINT32 index,
        __x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointmentException** result);
    HRESULT (STDMETHODCALLTYPE* get_Size)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CAppointments__CAppointmentException* This,
        UINT32* result);
    HRESULT (STDMETHODCALLTYPE* IndexOf)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CAppointments__CAppointmentException* This,
        __x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointmentException* value,
        UINT32* index,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CAppointments__CAppointmentException* This,
        UINT32 startIndex,
        UINT32 itemsLength,
        __x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointmentException** items,
        UINT32* result);

        END_INTERFACE
    } __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CAppointments__CAppointmentExceptionVtbl;

    interface __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CAppointments__CAppointmentException
    {
        CONST_VTBL struct __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CAppointments__CAppointmentExceptionVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CAppointments__CAppointmentException_INTERFACE_DEFINED__
    
typedef interface __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CAppointments__CAppointmentException __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CAppointments__CAppointmentException;

#if !defined(____x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CAppointments__CAppointmentException_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CAppointments__CAppointmentException_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CAppointments__CAppointmentException __x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CAppointments__CAppointmentException;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CAppointments__CAppointmentException;

    typedef struct __x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CAppointments__CAppointmentExceptionVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CAppointments__CAppointmentException* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CAppointments__CAppointmentException* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CAppointments__CAppointmentException* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CAppointments__CAppointmentException* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CAppointments__CAppointmentException* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CAppointments__CAppointmentException* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* put_Completed)(__x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CAppointments__CAppointmentException* This,
        __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CAppointments__CAppointmentException* handler);
    HRESULT (STDMETHODCALLTYPE* get_Completed)(__x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CAppointments__CAppointmentException* This,
        __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CAppointments__CAppointmentException** result);
    HRESULT (STDMETHODCALLTYPE* GetResults)(__x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CAppointments__CAppointmentException* This,
        __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CAppointments__CAppointmentException** result);

        END_INTERFACE
    } __x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CAppointments__CAppointmentExceptionVtbl;

    interface __x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CAppointments__CAppointmentException
    {
        CONST_VTBL struct __x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CAppointments__CAppointmentExceptionVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CAppointments__CAppointmentException_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CAppointments__CAppointmentException_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CAppointments__CAppointmentException_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CAppointments__CAppointmentException __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CAppointments__CAppointmentException;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CAppointments__CAppointmentException;

    typedef struct __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CAppointments__CAppointmentExceptionVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CAppointments__CAppointmentException* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CAppointments__CAppointmentException* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CAppointments__CAppointmentException* This);
        HRESULT (STDMETHODCALLTYPE* Invoke)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CAppointments__CAppointmentException* This,
        __x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CAppointments__CAppointmentException* asyncInfo,
        enum __x_ABI_CWindows_CFoundation_CAsyncStatus asyncStatus);

        END_INTERFACE
    } __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CAppointments__CAppointmentExceptionVtbl;

    interface __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CAppointments__CAppointmentException
    {
        CONST_VTBL struct __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CAppointments__CAppointmentExceptionVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CAppointments__CAppointmentException_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CAppointments__CAppointmentStoreChange_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CAppointments__CAppointmentStoreChange_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CAppointments__CAppointmentStoreChange __x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CAppointments__CAppointmentStoreChange;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CAppointments__CAppointmentStoreChange;

    typedef struct __x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CAppointments__CAppointmentStoreChangeVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CAppointments__CAppointmentStoreChange* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CAppointments__CAppointmentStoreChange* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CAppointments__CAppointmentStoreChange* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CAppointments__CAppointmentStoreChange* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CAppointments__CAppointmentStoreChange* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CAppointments__CAppointmentStoreChange* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Current)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CAppointments__CAppointmentStoreChange* This,
        __x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointmentStoreChange** result);
    HRESULT (STDMETHODCALLTYPE* get_HasCurrent)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CAppointments__CAppointmentStoreChange* This,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* MoveNext)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CAppointments__CAppointmentStoreChange* This,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CAppointments__CAppointmentStoreChange* This,
        UINT32 itemsLength,
        __x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointmentStoreChange** items,
        UINT32* result);

        END_INTERFACE
    } __x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CAppointments__CAppointmentStoreChangeVtbl;

    interface __x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CAppointments__CAppointmentStoreChange
    {
        CONST_VTBL struct __x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CAppointments__CAppointmentStoreChangeVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CAppointments__CAppointmentStoreChange_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CAppointments__CAppointmentStoreChange_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CAppointments__CAppointmentStoreChange_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CAppointments__CAppointmentStoreChange __x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CAppointments__CAppointmentStoreChange;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CAppointments__CAppointmentStoreChange;

    typedef struct __x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CAppointments__CAppointmentStoreChangeVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CAppointments__CAppointmentStoreChange* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CAppointments__CAppointmentStoreChange* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CAppointments__CAppointmentStoreChange* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CAppointments__CAppointmentStoreChange* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CAppointments__CAppointmentStoreChange* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CAppointments__CAppointmentStoreChange* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* First)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CAppointments__CAppointmentStoreChange* This,
        __x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CAppointments__CAppointmentStoreChange** result);

        END_INTERFACE
    } __x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CAppointments__CAppointmentStoreChangeVtbl;

    interface __x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CAppointments__CAppointmentStoreChange
    {
        CONST_VTBL struct __x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CAppointments__CAppointmentStoreChangeVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CAppointments__CAppointmentStoreChange_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CAppointments__CAppointmentStoreChange_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CAppointments__CAppointmentStoreChange_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CAppointments__CAppointmentStoreChange __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CAppointments__CAppointmentStoreChange;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CAppointments__CAppointmentStoreChange;

    typedef struct __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CAppointments__CAppointmentStoreChangeVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CAppointments__CAppointmentStoreChange* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CAppointments__CAppointmentStoreChange* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CAppointments__CAppointmentStoreChange* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CAppointments__CAppointmentStoreChange* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CAppointments__CAppointmentStoreChange* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CAppointments__CAppointmentStoreChange* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* GetAt)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CAppointments__CAppointmentStoreChange* This,
        UINT32 index,
        __x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointmentStoreChange** result);
    HRESULT (STDMETHODCALLTYPE* get_Size)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CAppointments__CAppointmentStoreChange* This,
        UINT32* result);
    HRESULT (STDMETHODCALLTYPE* IndexOf)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CAppointments__CAppointmentStoreChange* This,
        __x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointmentStoreChange* value,
        UINT32* index,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CAppointments__CAppointmentStoreChange* This,
        UINT32 startIndex,
        UINT32 itemsLength,
        __x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointmentStoreChange** items,
        UINT32* result);

        END_INTERFACE
    } __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CAppointments__CAppointmentStoreChangeVtbl;

    interface __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CAppointments__CAppointmentStoreChange
    {
        CONST_VTBL struct __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CAppointments__CAppointmentStoreChangeVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CAppointments__CAppointmentStoreChange_INTERFACE_DEFINED__
    
typedef interface __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CAppointments__CAppointmentStoreChange __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CAppointments__CAppointmentStoreChange;

#if !defined(____x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CAppointments__CAppointmentStoreChange_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CAppointments__CAppointmentStoreChange_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CAppointments__CAppointmentStoreChange __x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CAppointments__CAppointmentStoreChange;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CAppointments__CAppointmentStoreChange;

    typedef struct __x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CAppointments__CAppointmentStoreChangeVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CAppointments__CAppointmentStoreChange* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CAppointments__CAppointmentStoreChange* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CAppointments__CAppointmentStoreChange* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CAppointments__CAppointmentStoreChange* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CAppointments__CAppointmentStoreChange* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CAppointments__CAppointmentStoreChange* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* put_Completed)(__x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CAppointments__CAppointmentStoreChange* This,
        __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CAppointments__CAppointmentStoreChange* handler);
    HRESULT (STDMETHODCALLTYPE* get_Completed)(__x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CAppointments__CAppointmentStoreChange* This,
        __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CAppointments__CAppointmentStoreChange** result);
    HRESULT (STDMETHODCALLTYPE* GetResults)(__x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CAppointments__CAppointmentStoreChange* This,
        __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CAppointments__CAppointmentStoreChange** result);

        END_INTERFACE
    } __x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CAppointments__CAppointmentStoreChangeVtbl;

    interface __x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CAppointments__CAppointmentStoreChange
    {
        CONST_VTBL struct __x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CAppointments__CAppointmentStoreChangeVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CAppointments__CAppointmentStoreChange_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CAppointments__CAppointmentStoreChange_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CAppointments__CAppointmentStoreChange_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CAppointments__CAppointmentStoreChange __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CAppointments__CAppointmentStoreChange;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CAppointments__CAppointmentStoreChange;

    typedef struct __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CAppointments__CAppointmentStoreChangeVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CAppointments__CAppointmentStoreChange* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CAppointments__CAppointmentStoreChange* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CAppointments__CAppointmentStoreChange* This);
        HRESULT (STDMETHODCALLTYPE* Invoke)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CAppointments__CAppointmentStoreChange* This,
        __x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CAppointments__CAppointmentStoreChange* asyncInfo,
        enum __x_ABI_CWindows_CFoundation_CAsyncStatus asyncStatus);

        END_INTERFACE
    } __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CAppointments__CAppointmentStoreChangeVtbl;

    interface __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CAppointments__CAppointmentStoreChange
    {
        CONST_VTBL struct __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CAppointments__CAppointmentStoreChangeVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CAppointments__CAppointmentStoreChange_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CAppointments__CAppointmentInvitee_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CAppointments__CAppointmentInvitee_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CAppointments__CAppointmentInvitee __x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CAppointments__CAppointmentInvitee;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CAppointments__CAppointmentInvitee;

    typedef struct __x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CAppointments__CAppointmentInviteeVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CAppointments__CAppointmentInvitee* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CAppointments__CAppointmentInvitee* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CAppointments__CAppointmentInvitee* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CAppointments__CAppointmentInvitee* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CAppointments__CAppointmentInvitee* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CAppointments__CAppointmentInvitee* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Current)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CAppointments__CAppointmentInvitee* This,
        __x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointmentInvitee** result);
    HRESULT (STDMETHODCALLTYPE* get_HasCurrent)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CAppointments__CAppointmentInvitee* This,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* MoveNext)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CAppointments__CAppointmentInvitee* This,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CAppointments__CAppointmentInvitee* This,
        UINT32 itemsLength,
        __x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointmentInvitee** items,
        UINT32* result);

        END_INTERFACE
    } __x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CAppointments__CAppointmentInviteeVtbl;

    interface __x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CAppointments__CAppointmentInvitee
    {
        CONST_VTBL struct __x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CAppointments__CAppointmentInviteeVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CAppointments__CAppointmentInvitee_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CAppointments__CAppointmentInvitee_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CAppointments__CAppointmentInvitee_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CAppointments__CAppointmentInvitee __x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CAppointments__CAppointmentInvitee;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CAppointments__CAppointmentInvitee;

    typedef struct __x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CAppointments__CAppointmentInviteeVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CAppointments__CAppointmentInvitee* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CAppointments__CAppointmentInvitee* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CAppointments__CAppointmentInvitee* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CAppointments__CAppointmentInvitee* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CAppointments__CAppointmentInvitee* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CAppointments__CAppointmentInvitee* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* First)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CAppointments__CAppointmentInvitee* This,
        __x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CAppointments__CAppointmentInvitee** result);

        END_INTERFACE
    } __x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CAppointments__CAppointmentInviteeVtbl;

    interface __x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CAppointments__CAppointmentInvitee
    {
        CONST_VTBL struct __x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CAppointments__CAppointmentInviteeVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CAppointments__CAppointmentInvitee_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CAppointments__CAppointmentInvitee_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CAppointments__CAppointmentInvitee_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CAppointments__CAppointmentInvitee __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CAppointments__CAppointmentInvitee;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CAppointments__CAppointmentInvitee;

    typedef struct __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CAppointments__CAppointmentInviteeVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CAppointments__CAppointmentInvitee* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CAppointments__CAppointmentInvitee* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CAppointments__CAppointmentInvitee* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CAppointments__CAppointmentInvitee* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CAppointments__CAppointmentInvitee* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CAppointments__CAppointmentInvitee* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* GetAt)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CAppointments__CAppointmentInvitee* This,
        UINT32 index,
        __x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointmentInvitee** result);
    HRESULT (STDMETHODCALLTYPE* get_Size)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CAppointments__CAppointmentInvitee* This,
        UINT32* result);
    HRESULT (STDMETHODCALLTYPE* IndexOf)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CAppointments__CAppointmentInvitee* This,
        __x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointmentInvitee* value,
        UINT32* index,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CAppointments__CAppointmentInvitee* This,
        UINT32 startIndex,
        UINT32 itemsLength,
        __x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointmentInvitee** items,
        UINT32* result);

        END_INTERFACE
    } __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CAppointments__CAppointmentInviteeVtbl;

    interface __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CAppointments__CAppointmentInvitee
    {
        CONST_VTBL struct __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CAppointments__CAppointmentInviteeVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CAppointments__CAppointmentInvitee_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIVector_1_HSTRING_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIVector_1_HSTRING_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIVector_1_HSTRING __x_ABI_C__FIVector_1_HSTRING;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIVector_1_HSTRING;

    typedef struct __x_ABI_C__FIVector_1_HSTRINGVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIVector_1_HSTRING* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIVector_1_HSTRING* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIVector_1_HSTRING* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIVector_1_HSTRING* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIVector_1_HSTRING* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIVector_1_HSTRING* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* GetAt)(__x_ABI_C__FIVector_1_HSTRING* This,
        UINT32 index,
        HSTRING* result);
    HRESULT (STDMETHODCALLTYPE* get_Size)(__x_ABI_C__FIVector_1_HSTRING* This,
        UINT32* result);
    HRESULT (STDMETHODCALLTYPE* GetView)(__x_ABI_C__FIVector_1_HSTRING* This,
        __x_ABI_C__FIVectorView_1_HSTRING** result);
    HRESULT (STDMETHODCALLTYPE* IndexOf)(__x_ABI_C__FIVector_1_HSTRING* This,
        HSTRING value,
        UINT32* index,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* SetAt)(__x_ABI_C__FIVector_1_HSTRING* This,
        UINT32 index,
        HSTRING value);
    HRESULT (STDMETHODCALLTYPE* InsertAt)(__x_ABI_C__FIVector_1_HSTRING* This,
        UINT32 index,
        HSTRING value);
    HRESULT (STDMETHODCALLTYPE* RemoveAt)(__x_ABI_C__FIVector_1_HSTRING* This,
        UINT32 index);
    HRESULT (STDMETHODCALLTYPE* Append)(__x_ABI_C__FIVector_1_HSTRING* This,
        HSTRING value);
    HRESULT (STDMETHODCALLTYPE* RemoveAtEnd)(__x_ABI_C__FIVector_1_HSTRING* This);
    HRESULT (STDMETHODCALLTYPE* Clear)(__x_ABI_C__FIVector_1_HSTRING* This);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__x_ABI_C__FIVector_1_HSTRING* This,
        UINT32 startIndex,
        UINT32 itemsLength,
        HSTRING* items,
        UINT32* result);
    HRESULT (STDMETHODCALLTYPE* ReplaceAll)(__x_ABI_C__FIVector_1_HSTRING* This,
        UINT32 itemsLength,
        HSTRING* items);

        END_INTERFACE
    } __x_ABI_C__FIVector_1_HSTRINGVtbl;

    interface __x_ABI_C__FIVector_1_HSTRING
    {
        CONST_VTBL struct __x_ABI_C__FIVector_1_HSTRINGVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIVector_1_HSTRING_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIVector_1___x_ABI_CWindows__CApplicationModel__CAppointments__CAppointmentInvitee_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIVector_1___x_ABI_CWindows__CApplicationModel__CAppointments__CAppointmentInvitee_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIVector_1___x_ABI_CWindows__CApplicationModel__CAppointments__CAppointmentInvitee __x_ABI_C__FIVector_1___x_ABI_CWindows__CApplicationModel__CAppointments__CAppointmentInvitee;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIVector_1___x_ABI_CWindows__CApplicationModel__CAppointments__CAppointmentInvitee;

    typedef struct __x_ABI_C__FIVector_1___x_ABI_CWindows__CApplicationModel__CAppointments__CAppointmentInviteeVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CApplicationModel__CAppointments__CAppointmentInvitee* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CApplicationModel__CAppointments__CAppointmentInvitee* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CApplicationModel__CAppointments__CAppointmentInvitee* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CApplicationModel__CAppointments__CAppointmentInvitee* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CApplicationModel__CAppointments__CAppointmentInvitee* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CApplicationModel__CAppointments__CAppointmentInvitee* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* GetAt)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CApplicationModel__CAppointments__CAppointmentInvitee* This,
        UINT32 index,
        __x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointmentInvitee** result);
    HRESULT (STDMETHODCALLTYPE* get_Size)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CApplicationModel__CAppointments__CAppointmentInvitee* This,
        UINT32* result);
    HRESULT (STDMETHODCALLTYPE* GetView)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CApplicationModel__CAppointments__CAppointmentInvitee* This,
        __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CAppointments__CAppointmentInvitee** result);
    HRESULT (STDMETHODCALLTYPE* IndexOf)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CApplicationModel__CAppointments__CAppointmentInvitee* This,
        __x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointmentInvitee* value,
        UINT32* index,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* SetAt)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CApplicationModel__CAppointments__CAppointmentInvitee* This,
        UINT32 index,
        __x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointmentInvitee* value);
    HRESULT (STDMETHODCALLTYPE* InsertAt)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CApplicationModel__CAppointments__CAppointmentInvitee* This,
        UINT32 index,
        __x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointmentInvitee* value);
    HRESULT (STDMETHODCALLTYPE* RemoveAt)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CApplicationModel__CAppointments__CAppointmentInvitee* This,
        UINT32 index);
    HRESULT (STDMETHODCALLTYPE* Append)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CApplicationModel__CAppointments__CAppointmentInvitee* This,
        __x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointmentInvitee* value);
    HRESULT (STDMETHODCALLTYPE* RemoveAtEnd)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CApplicationModel__CAppointments__CAppointmentInvitee* This);
    HRESULT (STDMETHODCALLTYPE* Clear)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CApplicationModel__CAppointments__CAppointmentInvitee* This);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CApplicationModel__CAppointments__CAppointmentInvitee* This,
        UINT32 startIndex,
        UINT32 itemsLength,
        __x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointmentInvitee** items,
        UINT32* result);
    HRESULT (STDMETHODCALLTYPE* ReplaceAll)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CApplicationModel__CAppointments__CAppointmentInvitee* This,
        UINT32 itemsLength,
        __x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointmentInvitee** items);

        END_INTERFACE
    } __x_ABI_C__FIVector_1___x_ABI_CWindows__CApplicationModel__CAppointments__CAppointmentInviteeVtbl;

    interface __x_ABI_C__FIVector_1___x_ABI_CWindows__CApplicationModel__CAppointments__CAppointmentInvitee
    {
        CONST_VTBL struct __x_ABI_C__FIVector_1___x_ABI_CWindows__CApplicationModel__CAppointments__CAppointmentInviteeVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIVector_1___x_ABI_CWindows__CApplicationModel__CAppointments__CAppointmentInvitee_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIReference_1_UINT32_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIReference_1_UINT32_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIReference_1_UINT32 __x_ABI_C__FIReference_1_UINT32;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIReference_1_UINT32;

    typedef struct __x_ABI_C__FIReference_1_UINT32Vtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIReference_1_UINT32* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIReference_1_UINT32* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIReference_1_UINT32* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIReference_1_UINT32* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIReference_1_UINT32* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIReference_1_UINT32* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Value)(__x_ABI_C__FIReference_1_UINT32* This,
        UINT32* result);

        END_INTERFACE
    } __x_ABI_C__FIReference_1_UINT32Vtbl;

    interface __x_ABI_C__FIReference_1_UINT32
    {
        CONST_VTBL struct __x_ABI_C__FIReference_1_UINT32Vtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIReference_1_UINT32_INTERFACE_DEFINED__
    
typedef struct __x_ABI_CWindows_CFoundation_CDateTime __x_ABI_CWindows_CFoundation_CDateTime;

#if !defined(____x_ABI_C__FIReference_1___x_ABI_CWindows__CFoundation__CDateTime_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIReference_1___x_ABI_CWindows__CFoundation__CDateTime_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIReference_1___x_ABI_CWindows__CFoundation__CDateTime __x_ABI_C__FIReference_1___x_ABI_CWindows__CFoundation__CDateTime;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIReference_1___x_ABI_CWindows__CFoundation__CDateTime;

    typedef struct __x_ABI_C__FIReference_1___x_ABI_CWindows__CFoundation__CDateTimeVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIReference_1___x_ABI_CWindows__CFoundation__CDateTime* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIReference_1___x_ABI_CWindows__CFoundation__CDateTime* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIReference_1___x_ABI_CWindows__CFoundation__CDateTime* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIReference_1___x_ABI_CWindows__CFoundation__CDateTime* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIReference_1___x_ABI_CWindows__CFoundation__CDateTime* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIReference_1___x_ABI_CWindows__CFoundation__CDateTime* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Value)(__x_ABI_C__FIReference_1___x_ABI_CWindows__CFoundation__CDateTime* This,
        struct __x_ABI_CWindows_CFoundation_CDateTime* result);

        END_INTERFACE
    } __x_ABI_C__FIReference_1___x_ABI_CWindows__CFoundation__CDateTimeVtbl;

    interface __x_ABI_C__FIReference_1___x_ABI_CWindows__CFoundation__CDateTime
    {
        CONST_VTBL struct __x_ABI_C__FIReference_1___x_ABI_CWindows__CFoundation__CDateTimeVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIReference_1___x_ABI_CWindows__CFoundation__CDateTime_INTERFACE_DEFINED__
    
typedef struct __x_ABI_CWindows_CFoundation_CTimeSpan __x_ABI_CWindows_CFoundation_CTimeSpan;

#if !defined(____x_ABI_C__FIReference_1___x_ABI_CWindows__CFoundation__CTimeSpan_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIReference_1___x_ABI_CWindows__CFoundation__CTimeSpan_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIReference_1___x_ABI_CWindows__CFoundation__CTimeSpan __x_ABI_C__FIReference_1___x_ABI_CWindows__CFoundation__CTimeSpan;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIReference_1___x_ABI_CWindows__CFoundation__CTimeSpan;

    typedef struct __x_ABI_C__FIReference_1___x_ABI_CWindows__CFoundation__CTimeSpanVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIReference_1___x_ABI_CWindows__CFoundation__CTimeSpan* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIReference_1___x_ABI_CWindows__CFoundation__CTimeSpan* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIReference_1___x_ABI_CWindows__CFoundation__CTimeSpan* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIReference_1___x_ABI_CWindows__CFoundation__CTimeSpan* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIReference_1___x_ABI_CWindows__CFoundation__CTimeSpan* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIReference_1___x_ABI_CWindows__CFoundation__CTimeSpan* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Value)(__x_ABI_C__FIReference_1___x_ABI_CWindows__CFoundation__CTimeSpan* This,
        struct __x_ABI_CWindows_CFoundation_CTimeSpan* result);

        END_INTERFACE
    } __x_ABI_C__FIReference_1___x_ABI_CWindows__CFoundation__CTimeSpanVtbl;

    interface __x_ABI_C__FIReference_1___x_ABI_CWindows__CFoundation__CTimeSpan
    {
        CONST_VTBL struct __x_ABI_C__FIReference_1___x_ABI_CWindows__CFoundation__CTimeSpanVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIReference_1___x_ABI_CWindows__CFoundation__CTimeSpan_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CApplicationModel__CAppointments__CAppointmentCalendarSyncManager_IInspectable_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CApplicationModel__CAppointments__CAppointmentCalendarSyncManager_IInspectable_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CApplicationModel__CAppointments__CAppointmentCalendarSyncManager_IInspectable __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CApplicationModel__CAppointments__CAppointmentCalendarSyncManager_IInspectable;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CApplicationModel__CAppointments__CAppointmentCalendarSyncManager_IInspectable;

    typedef struct __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CApplicationModel__CAppointments__CAppointmentCalendarSyncManager_IInspectableVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CApplicationModel__CAppointments__CAppointmentCalendarSyncManager_IInspectable* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CApplicationModel__CAppointments__CAppointmentCalendarSyncManager_IInspectable* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CApplicationModel__CAppointments__CAppointmentCalendarSyncManager_IInspectable* This);
        HRESULT (STDMETHODCALLTYPE* Invoke)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CApplicationModel__CAppointments__CAppointmentCalendarSyncManager_IInspectable* This,
        __x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointmentCalendarSyncManager* sender,
        IInspectable* args);

        END_INTERFACE
    } __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CApplicationModel__CAppointments__CAppointmentCalendarSyncManager_IInspectableVtbl;

    interface __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CApplicationModel__CAppointments__CAppointmentCalendarSyncManager_IInspectable
    {
        CONST_VTBL struct __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CApplicationModel__CAppointments__CAppointmentCalendarSyncManager_IInspectableVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CApplicationModel__CAppointments__CAppointmentCalendarSyncManager_IInspectable_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CApplicationModel__CAppointments__CAppointmentStore___x_ABI_CWindows__CApplicationModel__CAppointments__CAppointmentStoreChangedEventArgs_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CApplicationModel__CAppointments__CAppointmentStore___x_ABI_CWindows__CApplicationModel__CAppointments__CAppointmentStoreChangedEventArgs_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CApplicationModel__CAppointments__CAppointmentStore___x_ABI_CWindows__CApplicationModel__CAppointments__CAppointmentStoreChangedEventArgs __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CApplicationModel__CAppointments__CAppointmentStore___x_ABI_CWindows__CApplicationModel__CAppointments__CAppointmentStoreChangedEventArgs;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CApplicationModel__CAppointments__CAppointmentStore___x_ABI_CWindows__CApplicationModel__CAppointments__CAppointmentStoreChangedEventArgs;

    typedef struct __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CApplicationModel__CAppointments__CAppointmentStore___x_ABI_CWindows__CApplicationModel__CAppointments__CAppointmentStoreChangedEventArgsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CApplicationModel__CAppointments__CAppointmentStore___x_ABI_CWindows__CApplicationModel__CAppointments__CAppointmentStoreChangedEventArgs* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CApplicationModel__CAppointments__CAppointmentStore___x_ABI_CWindows__CApplicationModel__CAppointments__CAppointmentStoreChangedEventArgs* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CApplicationModel__CAppointments__CAppointmentStore___x_ABI_CWindows__CApplicationModel__CAppointments__CAppointmentStoreChangedEventArgs* This);
        HRESULT (STDMETHODCALLTYPE* Invoke)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CApplicationModel__CAppointments__CAppointmentStore___x_ABI_CWindows__CApplicationModel__CAppointments__CAppointmentStoreChangedEventArgs* This,
        __x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointmentStore* sender,
        __x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointmentStoreChangedEventArgs* args);

        END_INTERFACE
    } __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CApplicationModel__CAppointments__CAppointmentStore___x_ABI_CWindows__CApplicationModel__CAppointments__CAppointmentStoreChangedEventArgsVtbl;

    interface __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CApplicationModel__CAppointments__CAppointmentStore___x_ABI_CWindows__CApplicationModel__CAppointments__CAppointmentStoreChangedEventArgs
    {
        CONST_VTBL struct __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CApplicationModel__CAppointments__CAppointmentStore___x_ABI_CWindows__CApplicationModel__CAppointments__CAppointmentStoreChangedEventArgsVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CApplicationModel__CAppointments__CAppointmentStore___x_ABI_CWindows__CApplicationModel__CAppointments__CAppointmentStoreChangedEventArgs_INTERFACE_DEFINED__
    
typedef enum __x_ABI_CWindows_CFoundation_CAsyncStatus __x_ABI_CWindows_CFoundation_CAsyncStatus;

#ifndef ____x_ABI_CWindows_CFoundation_CIAsyncAction_FWD_DEFINED__
#define ____x_ABI_CWindows_CFoundation_CIAsyncAction_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CFoundation_CIAsyncAction __x_ABI_CWindows_CFoundation_CIAsyncAction;

#endif // ____x_ABI_CWindows_CFoundation_CIAsyncAction_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CFoundation_CIAsyncInfo_FWD_DEFINED__
#define ____x_ABI_CWindows_CFoundation_CIAsyncInfo_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CFoundation_CIAsyncInfo __x_ABI_CWindows_CFoundation_CIAsyncInfo;

#endif // ____x_ABI_CWindows_CFoundation_CIAsyncInfo_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CFoundation_CIPropertyValue_FWD_DEFINED__
#define ____x_ABI_CWindows_CFoundation_CIPropertyValue_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CFoundation_CIPropertyValue __x_ABI_CWindows_CFoundation_CIPropertyValue;

#endif // ____x_ABI_CWindows_CFoundation_CIPropertyValue_FWD_DEFINED__

typedef struct __x_ABI_CWindows_CFoundation_CRect __x_ABI_CWindows_CFoundation_CRect;

#ifndef ____x_ABI_CWindows_CFoundation_CIUriRuntimeClass_FWD_DEFINED__
#define ____x_ABI_CWindows_CFoundation_CIUriRuntimeClass_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CFoundation_CIUriRuntimeClass __x_ABI_CWindows_CFoundation_CIUriRuntimeClass;

#endif // ____x_ABI_CWindows_CFoundation_CIUriRuntimeClass_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CSystem_CIUser_FWD_DEFINED__
#define ____x_ABI_CWindows_CSystem_CIUser_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CSystem_CIUser __x_ABI_CWindows_CSystem_CIUser;

#endif // ____x_ABI_CWindows_CSystem_CIUser_FWD_DEFINED__

typedef struct __x_ABI_CWindows_CUI_CColor __x_ABI_CWindows_CUI_CColor;

typedef enum __x_ABI_CWindows_CUI_CPopups_CPlacement __x_ABI_CWindows_CUI_CPopups_CPlacement;

typedef enum __x_ABI_CWindows_CApplicationModel_CAppointments_CAppointmentBusyStatus __x_ABI_CWindows_CApplicationModel_CAppointments_CAppointmentBusyStatus;

typedef enum __x_ABI_CWindows_CApplicationModel_CAppointments_CAppointmentCalendarOtherAppReadAccess __x_ABI_CWindows_CApplicationModel_CAppointments_CAppointmentCalendarOtherAppReadAccess;

typedef enum __x_ABI_CWindows_CApplicationModel_CAppointments_CAppointmentCalendarOtherAppWriteAccess __x_ABI_CWindows_CApplicationModel_CAppointments_CAppointmentCalendarOtherAppWriteAccess;

typedef enum __x_ABI_CWindows_CApplicationModel_CAppointments_CAppointmentCalendarSyncStatus __x_ABI_CWindows_CApplicationModel_CAppointments_CAppointmentCalendarSyncStatus;

typedef enum __x_ABI_CWindows_CApplicationModel_CAppointments_CAppointmentConflictType __x_ABI_CWindows_CApplicationModel_CAppointments_CAppointmentConflictType;

typedef enum __x_ABI_CWindows_CApplicationModel_CAppointments_CAppointmentDaysOfWeek __x_ABI_CWindows_CApplicationModel_CAppointments_CAppointmentDaysOfWeek;

typedef enum __x_ABI_CWindows_CApplicationModel_CAppointments_CAppointmentDetailsKind __x_ABI_CWindows_CApplicationModel_CAppointments_CAppointmentDetailsKind;

typedef enum __x_ABI_CWindows_CApplicationModel_CAppointments_CAppointmentParticipantResponse __x_ABI_CWindows_CApplicationModel_CAppointments_CAppointmentParticipantResponse;

typedef enum __x_ABI_CWindows_CApplicationModel_CAppointments_CAppointmentParticipantRole __x_ABI_CWindows_CApplicationModel_CAppointments_CAppointmentParticipantRole;

typedef enum __x_ABI_CWindows_CApplicationModel_CAppointments_CAppointmentRecurrenceUnit __x_ABI_CWindows_CApplicationModel_CAppointments_CAppointmentRecurrenceUnit;

typedef enum __x_ABI_CWindows_CApplicationModel_CAppointments_CAppointmentSensitivity __x_ABI_CWindows_CApplicationModel_CAppointments_CAppointmentSensitivity;

typedef enum __x_ABI_CWindows_CApplicationModel_CAppointments_CAppointmentStoreAccessType __x_ABI_CWindows_CApplicationModel_CAppointments_CAppointmentStoreAccessType;

typedef enum __x_ABI_CWindows_CApplicationModel_CAppointments_CAppointmentStoreChangeType __x_ABI_CWindows_CApplicationModel_CAppointments_CAppointmentStoreChangeType;

typedef enum __x_ABI_CWindows_CApplicationModel_CAppointments_CAppointmentSummaryCardView __x_ABI_CWindows_CApplicationModel_CAppointments_CAppointmentSummaryCardView;

typedef enum __x_ABI_CWindows_CApplicationModel_CAppointments_CAppointmentWeekOfMonth __x_ABI_CWindows_CApplicationModel_CAppointments_CAppointmentWeekOfMonth;

typedef enum __x_ABI_CWindows_CApplicationModel_CAppointments_CFindAppointmentCalendarsOptions __x_ABI_CWindows_CApplicationModel_CAppointments_CFindAppointmentCalendarsOptions;

typedef enum __x_ABI_CWindows_CApplicationModel_CAppointments_CRecurrenceType __x_ABI_CWindows_CApplicationModel_CAppointments_CRecurrenceType;

enum __x_ABI_CWindows_CApplicationModel_CAppointments_CAppointmentBusyStatus
    {
        __x_ABI_CWindows_CApplicationModel_CAppointments_CAppointmentBusyStatus_Busy = 0,
    __x_ABI_CWindows_CApplicationModel_CAppointments_CAppointmentBusyStatus_Tentative = 1,
    __x_ABI_CWindows_CApplicationModel_CAppointments_CAppointmentBusyStatus_Free = 2,
    __x_ABI_CWindows_CApplicationModel_CAppointments_CAppointmentBusyStatus_OutOfOffice = 3,
    __x_ABI_CWindows_CApplicationModel_CAppointments_CAppointmentBusyStatus_WorkingElsewhere = 4,
};

enum __x_ABI_CWindows_CApplicationModel_CAppointments_CAppointmentCalendarOtherAppReadAccess
    {
        __x_ABI_CWindows_CApplicationModel_CAppointments_CAppointmentCalendarOtherAppReadAccess_SystemOnly = 0,
    __x_ABI_CWindows_CApplicationModel_CAppointments_CAppointmentCalendarOtherAppReadAccess_Limited = 1,
    __x_ABI_CWindows_CApplicationModel_CAppointments_CAppointmentCalendarOtherAppReadAccess_Full = 2,
    __x_ABI_CWindows_CApplicationModel_CAppointments_CAppointmentCalendarOtherAppReadAccess_None = 3,
};

enum __x_ABI_CWindows_CApplicationModel_CAppointments_CAppointmentCalendarOtherAppWriteAccess
    {
        __x_ABI_CWindows_CApplicationModel_CAppointments_CAppointmentCalendarOtherAppWriteAccess_None = 0,
    __x_ABI_CWindows_CApplicationModel_CAppointments_CAppointmentCalendarOtherAppWriteAccess_SystemOnly = 1,
    __x_ABI_CWindows_CApplicationModel_CAppointments_CAppointmentCalendarOtherAppWriteAccess_Limited = 2,
};

enum __x_ABI_CWindows_CApplicationModel_CAppointments_CAppointmentCalendarSyncStatus
    {
        __x_ABI_CWindows_CApplicationModel_CAppointments_CAppointmentCalendarSyncStatus_Idle = 0,
    __x_ABI_CWindows_CApplicationModel_CAppointments_CAppointmentCalendarSyncStatus_Syncing = 1,
    __x_ABI_CWindows_CApplicationModel_CAppointments_CAppointmentCalendarSyncStatus_UpToDate = 2,
    __x_ABI_CWindows_CApplicationModel_CAppointments_CAppointmentCalendarSyncStatus_AuthenticationError = 3,
    __x_ABI_CWindows_CApplicationModel_CAppointments_CAppointmentCalendarSyncStatus_PolicyError = 4,
    __x_ABI_CWindows_CApplicationModel_CAppointments_CAppointmentCalendarSyncStatus_UnknownError = 5,
    __x_ABI_CWindows_CApplicationModel_CAppointments_CAppointmentCalendarSyncStatus_ManualAccountRemovalRequired = 6,
};

enum __x_ABI_CWindows_CApplicationModel_CAppointments_CAppointmentConflictType
    {
        __x_ABI_CWindows_CApplicationModel_CAppointments_CAppointmentConflictType_None = 0,
    __x_ABI_CWindows_CApplicationModel_CAppointments_CAppointmentConflictType_Adjacent = 1,
    __x_ABI_CWindows_CApplicationModel_CAppointments_CAppointmentConflictType_Overlap = 2,
};

enum __x_ABI_CWindows_CApplicationModel_CAppointments_CAppointmentDaysOfWeek
    {
        __x_ABI_CWindows_CApplicationModel_CAppointments_CAppointmentDaysOfWeek_None = 0,
    __x_ABI_CWindows_CApplicationModel_CAppointments_CAppointmentDaysOfWeek_Sunday = 0x1,
    __x_ABI_CWindows_CApplicationModel_CAppointments_CAppointmentDaysOfWeek_Monday = 0x2,
    __x_ABI_CWindows_CApplicationModel_CAppointments_CAppointmentDaysOfWeek_Tuesday = 0x4,
    __x_ABI_CWindows_CApplicationModel_CAppointments_CAppointmentDaysOfWeek_Wednesday = 0x8,
    __x_ABI_CWindows_CApplicationModel_CAppointments_CAppointmentDaysOfWeek_Thursday = 0x10,
    __x_ABI_CWindows_CApplicationModel_CAppointments_CAppointmentDaysOfWeek_Friday = 0x20,
    __x_ABI_CWindows_CApplicationModel_CAppointments_CAppointmentDaysOfWeek_Saturday = 0x40,
};

enum __x_ABI_CWindows_CApplicationModel_CAppointments_CAppointmentDetailsKind
    {
        __x_ABI_CWindows_CApplicationModel_CAppointments_CAppointmentDetailsKind_PlainText = 0,
    __x_ABI_CWindows_CApplicationModel_CAppointments_CAppointmentDetailsKind_Html = 1,
};

enum __x_ABI_CWindows_CApplicationModel_CAppointments_CAppointmentParticipantResponse
    {
        __x_ABI_CWindows_CApplicationModel_CAppointments_CAppointmentParticipantResponse_None = 0,
    __x_ABI_CWindows_CApplicationModel_CAppointments_CAppointmentParticipantResponse_Tentative = 1,
    __x_ABI_CWindows_CApplicationModel_CAppointments_CAppointmentParticipantResponse_Accepted = 2,
    __x_ABI_CWindows_CApplicationModel_CAppointments_CAppointmentParticipantResponse_Declined = 3,
    __x_ABI_CWindows_CApplicationModel_CAppointments_CAppointmentParticipantResponse_Unknown = 4,
};

enum __x_ABI_CWindows_CApplicationModel_CAppointments_CAppointmentParticipantRole
    {
        __x_ABI_CWindows_CApplicationModel_CAppointments_CAppointmentParticipantRole_RequiredAttendee = 0,
    __x_ABI_CWindows_CApplicationModel_CAppointments_CAppointmentParticipantRole_OptionalAttendee = 1,
    __x_ABI_CWindows_CApplicationModel_CAppointments_CAppointmentParticipantRole_Resource = 2,
};

enum __x_ABI_CWindows_CApplicationModel_CAppointments_CAppointmentRecurrenceUnit
    {
        __x_ABI_CWindows_CApplicationModel_CAppointments_CAppointmentRecurrenceUnit_Daily = 0,
    __x_ABI_CWindows_CApplicationModel_CAppointments_CAppointmentRecurrenceUnit_Weekly = 1,
    __x_ABI_CWindows_CApplicationModel_CAppointments_CAppointmentRecurrenceUnit_Monthly = 2,
    __x_ABI_CWindows_CApplicationModel_CAppointments_CAppointmentRecurrenceUnit_MonthlyOnDay = 3,
    __x_ABI_CWindows_CApplicationModel_CAppointments_CAppointmentRecurrenceUnit_Yearly = 4,
    __x_ABI_CWindows_CApplicationModel_CAppointments_CAppointmentRecurrenceUnit_YearlyOnDay = 5,
};

enum __x_ABI_CWindows_CApplicationModel_CAppointments_CAppointmentSensitivity
    {
        __x_ABI_CWindows_CApplicationModel_CAppointments_CAppointmentSensitivity_Public = 0,
    __x_ABI_CWindows_CApplicationModel_CAppointments_CAppointmentSensitivity_Private = 1,
};

enum __x_ABI_CWindows_CApplicationModel_CAppointments_CAppointmentStoreAccessType
    {
        __x_ABI_CWindows_CApplicationModel_CAppointments_CAppointmentStoreAccessType_AppCalendarsReadWrite = 0,
    __x_ABI_CWindows_CApplicationModel_CAppointments_CAppointmentStoreAccessType_AllCalendarsReadOnly = 1,
    __x_ABI_CWindows_CApplicationModel_CAppointments_CAppointmentStoreAccessType_AllCalendarsReadWrite = 2,
};

enum __x_ABI_CWindows_CApplicationModel_CAppointments_CAppointmentStoreChangeType
    {
        __x_ABI_CWindows_CApplicationModel_CAppointments_CAppointmentStoreChangeType_AppointmentCreated = 0,
    __x_ABI_CWindows_CApplicationModel_CAppointments_CAppointmentStoreChangeType_AppointmentModified = 1,
    __x_ABI_CWindows_CApplicationModel_CAppointments_CAppointmentStoreChangeType_AppointmentDeleted = 2,
    __x_ABI_CWindows_CApplicationModel_CAppointments_CAppointmentStoreChangeType_ChangeTrackingLost = 3,
    __x_ABI_CWindows_CApplicationModel_CAppointments_CAppointmentStoreChangeType_CalendarCreated = 4,
    __x_ABI_CWindows_CApplicationModel_CAppointments_CAppointmentStoreChangeType_CalendarModified = 5,
    __x_ABI_CWindows_CApplicationModel_CAppointments_CAppointmentStoreChangeType_CalendarDeleted = 6,
};

enum __x_ABI_CWindows_CApplicationModel_CAppointments_CAppointmentSummaryCardView
    {
        __x_ABI_CWindows_CApplicationModel_CAppointments_CAppointmentSummaryCardView_System = 0,
    __x_ABI_CWindows_CApplicationModel_CAppointments_CAppointmentSummaryCardView_App = 1,
};

enum __x_ABI_CWindows_CApplicationModel_CAppointments_CAppointmentWeekOfMonth
    {
        __x_ABI_CWindows_CApplicationModel_CAppointments_CAppointmentWeekOfMonth_First = 0,
    __x_ABI_CWindows_CApplicationModel_CAppointments_CAppointmentWeekOfMonth_Second = 1,
    __x_ABI_CWindows_CApplicationModel_CAppointments_CAppointmentWeekOfMonth_Third = 2,
    __x_ABI_CWindows_CApplicationModel_CAppointments_CAppointmentWeekOfMonth_Fourth = 3,
    __x_ABI_CWindows_CApplicationModel_CAppointments_CAppointmentWeekOfMonth_Last = 4,
};

enum __x_ABI_CWindows_CApplicationModel_CAppointments_CFindAppointmentCalendarsOptions
    {
        __x_ABI_CWindows_CApplicationModel_CAppointments_CFindAppointmentCalendarsOptions_None = 0,
    __x_ABI_CWindows_CApplicationModel_CAppointments_CFindAppointmentCalendarsOptions_IncludeHidden = 0x1,
};

enum __x_ABI_CWindows_CApplicationModel_CAppointments_CRecurrenceType
    {
        __x_ABI_CWindows_CApplicationModel_CAppointments_CRecurrenceType_Master = 0,
    __x_ABI_CWindows_CApplicationModel_CAppointments_CRecurrenceType_Instance = 1,
    __x_ABI_CWindows_CApplicationModel_CAppointments_CRecurrenceType_ExceptionInstance = 2,
};

#if !defined(____x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointment_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointment_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointmentVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointment* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointment* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointment* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointment* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointment* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointment* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_StartTime)(__x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointment* This,
        struct __x_ABI_CWindows_CFoundation_CDateTime* value);
    HRESULT (STDMETHODCALLTYPE* put_StartTime)(__x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointment* This,
        struct __x_ABI_CWindows_CFoundation_CDateTime value);
    HRESULT (STDMETHODCALLTYPE* get_Duration)(__x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointment* This,
        struct __x_ABI_CWindows_CFoundation_CTimeSpan* value);
    HRESULT (STDMETHODCALLTYPE* put_Duration)(__x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointment* This,
        struct __x_ABI_CWindows_CFoundation_CTimeSpan value);
    HRESULT (STDMETHODCALLTYPE* get_Location)(__x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointment* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* put_Location)(__x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointment* This,
        HSTRING value);
    HRESULT (STDMETHODCALLTYPE* get_Subject)(__x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointment* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* put_Subject)(__x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointment* This,
        HSTRING value);
    HRESULT (STDMETHODCALLTYPE* get_Details)(__x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointment* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* put_Details)(__x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointment* This,
        HSTRING value);
    HRESULT (STDMETHODCALLTYPE* get_Reminder)(__x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointment* This,
        __x_ABI_C__FIReference_1___x_ABI_CWindows__CFoundation__CTimeSpan** value);
    HRESULT (STDMETHODCALLTYPE* put_Reminder)(__x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointment* This,
        __x_ABI_C__FIReference_1___x_ABI_CWindows__CFoundation__CTimeSpan* value);
    HRESULT (STDMETHODCALLTYPE* get_Organizer)(__x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointment* This,
        __x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointmentParticipant** value);
    HRESULT (STDMETHODCALLTYPE* put_Organizer)(__x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointment* This,
        __x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointmentParticipant* value);
    HRESULT (STDMETHODCALLTYPE* get_Invitees)(__x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointment* This,
        __x_ABI_C__FIVector_1___x_ABI_CWindows__CApplicationModel__CAppointments__CAppointmentInvitee** value);
    HRESULT (STDMETHODCALLTYPE* get_Recurrence)(__x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointment* This,
        __x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointmentRecurrence** value);
    HRESULT (STDMETHODCALLTYPE* put_Recurrence)(__x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointment* This,
        __x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointmentRecurrence* value);
    HRESULT (STDMETHODCALLTYPE* get_BusyStatus)(__x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointment* This,
        enum __x_ABI_CWindows_CApplicationModel_CAppointments_CAppointmentBusyStatus* value);
    HRESULT (STDMETHODCALLTYPE* put_BusyStatus)(__x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointment* This,
        enum __x_ABI_CWindows_CApplicationModel_CAppointments_CAppointmentBusyStatus value);
    HRESULT (STDMETHODCALLTYPE* get_AllDay)(__x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointment* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* put_AllDay)(__x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointment* This,
        boolean value);
    HRESULT (STDMETHODCALLTYPE* get_Sensitivity)(__x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointment* This,
        enum __x_ABI_CWindows_CApplicationModel_CAppointments_CAppointmentSensitivity* value);
    HRESULT (STDMETHODCALLTYPE* put_Sensitivity)(__x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointment* This,
        enum __x_ABI_CWindows_CApplicationModel_CAppointments_CAppointmentSensitivity value);
    HRESULT (STDMETHODCALLTYPE* get_Uri)(__x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointment* This,
        __x_ABI_CWindows_CFoundation_CIUriRuntimeClass** value);
    HRESULT (STDMETHODCALLTYPE* put_Uri)(__x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointment* This,
        __x_ABI_CWindows_CFoundation_CIUriRuntimeClass* value);

        END_INTERFACE
    } __x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointmentVtbl;

    interface __x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointment
    {
        CONST_VTBL struct __x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointmentVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointment;
#endif /* !defined(____x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointment_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointment2_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointment2_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointment2Vtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointment2* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointment2* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointment2* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointment2* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointment2* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointment2* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_LocalId)(__x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointment2* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* get_CalendarId)(__x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointment2* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* get_RoamingId)(__x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointment2* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* put_RoamingId)(__x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointment2* This,
        HSTRING value);
    HRESULT (STDMETHODCALLTYPE* get_OriginalStartTime)(__x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointment2* This,
        __x_ABI_C__FIReference_1___x_ABI_CWindows__CFoundation__CDateTime** value);
    HRESULT (STDMETHODCALLTYPE* get_IsResponseRequested)(__x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointment2* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* put_IsResponseRequested)(__x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointment2* This,
        boolean value);
    HRESULT (STDMETHODCALLTYPE* get_AllowNewTimeProposal)(__x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointment2* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* put_AllowNewTimeProposal)(__x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointment2* This,
        boolean value);
    HRESULT (STDMETHODCALLTYPE* get_OnlineMeetingLink)(__x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointment2* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* put_OnlineMeetingLink)(__x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointment2* This,
        HSTRING value);
    HRESULT (STDMETHODCALLTYPE* get_ReplyTime)(__x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointment2* This,
        __x_ABI_C__FIReference_1___x_ABI_CWindows__CFoundation__CDateTime** value);
    HRESULT (STDMETHODCALLTYPE* put_ReplyTime)(__x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointment2* This,
        __x_ABI_C__FIReference_1___x_ABI_CWindows__CFoundation__CDateTime* value);
    HRESULT (STDMETHODCALLTYPE* get_UserResponse)(__x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointment2* This,
        enum __x_ABI_CWindows_CApplicationModel_CAppointments_CAppointmentParticipantResponse* value);
    HRESULT (STDMETHODCALLTYPE* put_UserResponse)(__x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointment2* This,
        enum __x_ABI_CWindows_CApplicationModel_CAppointments_CAppointmentParticipantResponse value);
    HRESULT (STDMETHODCALLTYPE* get_HasInvitees)(__x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointment2* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* get_IsCanceledMeeting)(__x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointment2* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* put_IsCanceledMeeting)(__x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointment2* This,
        boolean value);
    HRESULT (STDMETHODCALLTYPE* get_IsOrganizedByUser)(__x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointment2* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* put_IsOrganizedByUser)(__x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointment2* This,
        boolean value);

        END_INTERFACE
    } __x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointment2Vtbl;

    interface __x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointment2
    {
        CONST_VTBL struct __x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointment2Vtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointment2;
#endif /* !defined(____x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointment2_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointment3_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointment3_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointment3Vtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointment3* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointment3* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointment3* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointment3* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointment3* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointment3* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_ChangeNumber)(__x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointment3* This,
        UINT64* value);
    HRESULT (STDMETHODCALLTYPE* get_RemoteChangeNumber)(__x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointment3* This,
        UINT64* value);
    HRESULT (STDMETHODCALLTYPE* put_RemoteChangeNumber)(__x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointment3* This,
        UINT64 value);
    HRESULT (STDMETHODCALLTYPE* get_DetailsKind)(__x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointment3* This,
        enum __x_ABI_CWindows_CApplicationModel_CAppointments_CAppointmentDetailsKind* value);
    HRESULT (STDMETHODCALLTYPE* put_DetailsKind)(__x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointment3* This,
        enum __x_ABI_CWindows_CApplicationModel_CAppointments_CAppointmentDetailsKind value);

        END_INTERFACE
    } __x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointment3Vtbl;

    interface __x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointment3
    {
        CONST_VTBL struct __x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointment3Vtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointment3;
#endif /* !defined(____x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointment3_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointmentCalendar_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointmentCalendar_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointmentCalendarVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointmentCalendar* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointmentCalendar* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointmentCalendar* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointmentCalendar* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointmentCalendar* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointmentCalendar* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_DisplayColor)(__x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointmentCalendar* This,
        struct __x_ABI_CWindows_CUI_CColor* value);
    HRESULT (STDMETHODCALLTYPE* get_DisplayName)(__x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointmentCalendar* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* put_DisplayName)(__x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointmentCalendar* This,
        HSTRING value);
    HRESULT (STDMETHODCALLTYPE* get_LocalId)(__x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointmentCalendar* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* get_IsHidden)(__x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointmentCalendar* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* get_OtherAppReadAccess)(__x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointmentCalendar* This,
        enum __x_ABI_CWindows_CApplicationModel_CAppointments_CAppointmentCalendarOtherAppReadAccess* value);
    HRESULT (STDMETHODCALLTYPE* put_OtherAppReadAccess)(__x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointmentCalendar* This,
        enum __x_ABI_CWindows_CApplicationModel_CAppointments_CAppointmentCalendarOtherAppReadAccess value);
    HRESULT (STDMETHODCALLTYPE* get_OtherAppWriteAccess)(__x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointmentCalendar* This,
        enum __x_ABI_CWindows_CApplicationModel_CAppointments_CAppointmentCalendarOtherAppWriteAccess* value);
    HRESULT (STDMETHODCALLTYPE* put_OtherAppWriteAccess)(__x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointmentCalendar* This,
        enum __x_ABI_CWindows_CApplicationModel_CAppointments_CAppointmentCalendarOtherAppWriteAccess value);
    HRESULT (STDMETHODCALLTYPE* get_SourceDisplayName)(__x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointmentCalendar* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* get_SummaryCardView)(__x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointmentCalendar* This,
        enum __x_ABI_CWindows_CApplicationModel_CAppointments_CAppointmentSummaryCardView* value);
    HRESULT (STDMETHODCALLTYPE* put_SummaryCardView)(__x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointmentCalendar* This,
        enum __x_ABI_CWindows_CApplicationModel_CAppointments_CAppointmentSummaryCardView value);
    HRESULT (STDMETHODCALLTYPE* FindAppointmentsAsync)(__x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointmentCalendar* This,
        struct __x_ABI_CWindows_CFoundation_CDateTime rangeStart,
        struct __x_ABI_CWindows_CFoundation_CTimeSpan rangeLength,
        __x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CAppointments__CAppointment** result);
    HRESULT (STDMETHODCALLTYPE* FindAppointmentsAsyncWithOptions)(__x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointmentCalendar* This,
        struct __x_ABI_CWindows_CFoundation_CDateTime rangeStart,
        struct __x_ABI_CWindows_CFoundation_CTimeSpan rangeLength,
        __x_ABI_CWindows_CApplicationModel_CAppointments_CIFindAppointmentsOptions* options,
        __x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CAppointments__CAppointment** result);
    HRESULT (STDMETHODCALLTYPE* FindExceptionsFromMasterAsync)(__x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointmentCalendar* This,
        HSTRING masterLocalId,
        __x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CAppointments__CAppointmentException** value);
    HRESULT (STDMETHODCALLTYPE* FindAllInstancesAsync)(__x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointmentCalendar* This,
        HSTRING masterLocalId,
        struct __x_ABI_CWindows_CFoundation_CDateTime rangeStart,
        struct __x_ABI_CWindows_CFoundation_CTimeSpan rangeLength,
        __x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CAppointments__CAppointment** value);
    HRESULT (STDMETHODCALLTYPE* FindAllInstancesAsyncWithOptions)(__x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointmentCalendar* This,
        HSTRING masterLocalId,
        struct __x_ABI_CWindows_CFoundation_CDateTime rangeStart,
        struct __x_ABI_CWindows_CFoundation_CTimeSpan rangeLength,
        __x_ABI_CWindows_CApplicationModel_CAppointments_CIFindAppointmentsOptions* pOptions,
        __x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CAppointments__CAppointment** value);
    HRESULT (STDMETHODCALLTYPE* GetAppointmentAsync)(__x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointmentCalendar* This,
        HSTRING localId,
        __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CAppointments__CAppointment** result);
    HRESULT (STDMETHODCALLTYPE* GetAppointmentInstanceAsync)(__x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointmentCalendar* This,
        HSTRING localId,
        struct __x_ABI_CWindows_CFoundation_CDateTime instanceStartTime,
        __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CAppointments__CAppointment** result);
    HRESULT (STDMETHODCALLTYPE* FindUnexpandedAppointmentsAsync)(__x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointmentCalendar* This,
        __x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CAppointments__CAppointment** result);
    HRESULT (STDMETHODCALLTYPE* FindUnexpandedAppointmentsAsyncWithOptions)(__x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointmentCalendar* This,
        __x_ABI_CWindows_CApplicationModel_CAppointments_CIFindAppointmentsOptions* options,
        __x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CAppointments__CAppointment** result);
    HRESULT (STDMETHODCALLTYPE* DeleteAsync)(__x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointmentCalendar* This,
        __x_ABI_CWindows_CFoundation_CIAsyncAction** asyncAction);
    HRESULT (STDMETHODCALLTYPE* SaveAsync)(__x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointmentCalendar* This,
        __x_ABI_CWindows_CFoundation_CIAsyncAction** asyncAction);
    HRESULT (STDMETHODCALLTYPE* DeleteAppointmentAsync)(__x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointmentCalendar* This,
        HSTRING localId,
        __x_ABI_CWindows_CFoundation_CIAsyncAction** asyncAction);
    HRESULT (STDMETHODCALLTYPE* DeleteAppointmentInstanceAsync)(__x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointmentCalendar* This,
        HSTRING localId,
        struct __x_ABI_CWindows_CFoundation_CDateTime instanceStartTime,
        __x_ABI_CWindows_CFoundation_CIAsyncAction** asyncAction);
    HRESULT (STDMETHODCALLTYPE* SaveAppointmentAsync)(__x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointmentCalendar* This,
        __x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointment* pAppointment,
        __x_ABI_CWindows_CFoundation_CIAsyncAction** asyncAction);

        END_INTERFACE
    } __x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointmentCalendarVtbl;

    interface __x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointmentCalendar
    {
        CONST_VTBL struct __x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointmentCalendarVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointmentCalendar;
#endif /* !defined(____x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointmentCalendar_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointmentCalendar2_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointmentCalendar2_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointmentCalendar2Vtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointmentCalendar2* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointmentCalendar2* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointmentCalendar2* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointmentCalendar2* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointmentCalendar2* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointmentCalendar2* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_SyncManager)(__x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointmentCalendar2* This,
        __x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointmentCalendarSyncManager** value);
    HRESULT (STDMETHODCALLTYPE* get_RemoteId)(__x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointmentCalendar2* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* put_RemoteId)(__x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointmentCalendar2* This,
        HSTRING value);
    HRESULT (STDMETHODCALLTYPE* put_DisplayColor)(__x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointmentCalendar2* This,
        struct __x_ABI_CWindows_CUI_CColor value);
    HRESULT (STDMETHODCALLTYPE* put_IsHidden)(__x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointmentCalendar2* This,
        boolean value);
    HRESULT (STDMETHODCALLTYPE* get_UserDataAccountId)(__x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointmentCalendar2* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* get_CanCreateOrUpdateAppointments)(__x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointmentCalendar2* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* put_CanCreateOrUpdateAppointments)(__x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointmentCalendar2* This,
        boolean value);
    HRESULT (STDMETHODCALLTYPE* get_CanCancelMeetings)(__x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointmentCalendar2* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* put_CanCancelMeetings)(__x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointmentCalendar2* This,
        boolean value);
    HRESULT (STDMETHODCALLTYPE* get_CanForwardMeetings)(__x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointmentCalendar2* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* put_CanForwardMeetings)(__x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointmentCalendar2* This,
        boolean value);
    HRESULT (STDMETHODCALLTYPE* get_CanProposeNewTimeForMeetings)(__x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointmentCalendar2* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* put_CanProposeNewTimeForMeetings)(__x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointmentCalendar2* This,
        boolean value);
    HRESULT (STDMETHODCALLTYPE* get_CanUpdateMeetingResponses)(__x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointmentCalendar2* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* put_CanUpdateMeetingResponses)(__x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointmentCalendar2* This,
        boolean value);
    HRESULT (STDMETHODCALLTYPE* get_CanNotifyInvitees)(__x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointmentCalendar2* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* put_CanNotifyInvitees)(__x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointmentCalendar2* This,
        boolean value);
    HRESULT (STDMETHODCALLTYPE* get_MustNofityInvitees)(__x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointmentCalendar2* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* put_MustNofityInvitees)(__x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointmentCalendar2* This,
        boolean value);
    HRESULT (STDMETHODCALLTYPE* TryCreateOrUpdateAppointmentAsync)(__x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointmentCalendar2* This,
        __x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointment* appointment,
        boolean notifyInvitees,
        __x_ABI_C__FIAsyncOperation_1_boolean** result);
    HRESULT (STDMETHODCALLTYPE* TryCancelMeetingAsync)(__x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointmentCalendar2* This,
        __x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointment* meeting,
        HSTRING subject,
        HSTRING comment,
        boolean notifyInvitees,
        __x_ABI_C__FIAsyncOperation_1_boolean** result);
    HRESULT (STDMETHODCALLTYPE* TryForwardMeetingAsync)(__x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointmentCalendar2* This,
        __x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointment* meeting,
        __x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CAppointments__CAppointmentInvitee* invitees,
        HSTRING subject,
        HSTRING forwardHeader,
        HSTRING comment,
        __x_ABI_C__FIAsyncOperation_1_boolean** result);
    HRESULT (STDMETHODCALLTYPE* TryProposeNewTimeForMeetingAsync)(__x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointmentCalendar2* This,
        __x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointment* meeting,
        struct __x_ABI_CWindows_CFoundation_CDateTime newStartTime,
        struct __x_ABI_CWindows_CFoundation_CTimeSpan newDuration,
        HSTRING subject,
        HSTRING comment,
        __x_ABI_C__FIAsyncOperation_1_boolean** result);
    HRESULT (STDMETHODCALLTYPE* TryUpdateMeetingResponseAsync)(__x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointmentCalendar2* This,
        __x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointment* meeting,
        enum __x_ABI_CWindows_CApplicationModel_CAppointments_CAppointmentParticipantResponse response,
        HSTRING subject,
        HSTRING comment,
        boolean sendUpdate,
        __x_ABI_C__FIAsyncOperation_1_boolean** result);

        END_INTERFACE
    } __x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointmentCalendar2Vtbl;

    interface __x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointmentCalendar2
    {
        CONST_VTBL struct __x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointmentCalendar2Vtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointmentCalendar2;
#endif /* !defined(____x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointmentCalendar2_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointmentCalendar3_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointmentCalendar3_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointmentCalendar3Vtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointmentCalendar3* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointmentCalendar3* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointmentCalendar3* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointmentCalendar3* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointmentCalendar3* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointmentCalendar3* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* RegisterSyncManagerAsync)(__x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointmentCalendar3* This,
        __x_ABI_CWindows_CFoundation_CIAsyncAction** result);

        END_INTERFACE
    } __x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointmentCalendar3Vtbl;

    interface __x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointmentCalendar3
    {
        CONST_VTBL struct __x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointmentCalendar3Vtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointmentCalendar3;
#endif /* !defined(____x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointmentCalendar3_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointmentCalendarSyncManager_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointmentCalendarSyncManager_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointmentCalendarSyncManagerVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointmentCalendarSyncManager* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointmentCalendarSyncManager* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointmentCalendarSyncManager* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointmentCalendarSyncManager* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointmentCalendarSyncManager* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointmentCalendarSyncManager* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Status)(__x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointmentCalendarSyncManager* This,
        enum __x_ABI_CWindows_CApplicationModel_CAppointments_CAppointmentCalendarSyncStatus* value);
    HRESULT (STDMETHODCALLTYPE* get_LastSuccessfulSyncTime)(__x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointmentCalendarSyncManager* This,
        struct __x_ABI_CWindows_CFoundation_CDateTime* value);
    HRESULT (STDMETHODCALLTYPE* get_LastAttemptedSyncTime)(__x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointmentCalendarSyncManager* This,
        struct __x_ABI_CWindows_CFoundation_CDateTime* value);
    HRESULT (STDMETHODCALLTYPE* SyncAsync)(__x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointmentCalendarSyncManager* This,
        __x_ABI_C__FIAsyncOperation_1_boolean** result);
    HRESULT (STDMETHODCALLTYPE* add_SyncStatusChanged)(__x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointmentCalendarSyncManager* This,
        __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CApplicationModel__CAppointments__CAppointmentCalendarSyncManager_IInspectable* handler,
        EventRegistrationToken* token);
    HRESULT (STDMETHODCALLTYPE* remove_SyncStatusChanged)(__x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointmentCalendarSyncManager* This,
        EventRegistrationToken token);

        END_INTERFACE
    } __x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointmentCalendarSyncManagerVtbl;

    interface __x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointmentCalendarSyncManager
    {
        CONST_VTBL struct __x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointmentCalendarSyncManagerVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointmentCalendarSyncManager;
#endif /* !defined(____x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointmentCalendarSyncManager_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointmentCalendarSyncManager2_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointmentCalendarSyncManager2_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointmentCalendarSyncManager2Vtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointmentCalendarSyncManager2* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointmentCalendarSyncManager2* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointmentCalendarSyncManager2* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointmentCalendarSyncManager2* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointmentCalendarSyncManager2* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointmentCalendarSyncManager2* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* put_Status)(__x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointmentCalendarSyncManager2* This,
        enum __x_ABI_CWindows_CApplicationModel_CAppointments_CAppointmentCalendarSyncStatus value);
    HRESULT (STDMETHODCALLTYPE* put_LastSuccessfulSyncTime)(__x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointmentCalendarSyncManager2* This,
        struct __x_ABI_CWindows_CFoundation_CDateTime value);
    HRESULT (STDMETHODCALLTYPE* put_LastAttemptedSyncTime)(__x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointmentCalendarSyncManager2* This,
        struct __x_ABI_CWindows_CFoundation_CDateTime value);

        END_INTERFACE
    } __x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointmentCalendarSyncManager2Vtbl;

    interface __x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointmentCalendarSyncManager2
    {
        CONST_VTBL struct __x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointmentCalendarSyncManager2Vtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointmentCalendarSyncManager2;
#endif /* !defined(____x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointmentCalendarSyncManager2_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointmentConflictResult_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointmentConflictResult_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointmentConflictResultVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointmentConflictResult* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointmentConflictResult* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointmentConflictResult* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointmentConflictResult* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointmentConflictResult* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointmentConflictResult* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Type)(__x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointmentConflictResult* This,
        enum __x_ABI_CWindows_CApplicationModel_CAppointments_CAppointmentConflictType* value);
    HRESULT (STDMETHODCALLTYPE* get_Date)(__x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointmentConflictResult* This,
        struct __x_ABI_CWindows_CFoundation_CDateTime* value);

        END_INTERFACE
    } __x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointmentConflictResultVtbl;

    interface __x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointmentConflictResult
    {
        CONST_VTBL struct __x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointmentConflictResultVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointmentConflictResult;
#endif /* !defined(____x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointmentConflictResult_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointmentException_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointmentException_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointmentExceptionVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointmentException* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointmentException* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointmentException* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointmentException* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointmentException* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointmentException* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Appointment)(__x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointmentException* This,
        __x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointment** value);
    HRESULT (STDMETHODCALLTYPE* get_ExceptionProperties)(__x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointmentException* This,
        __x_ABI_C__FIVectorView_1_HSTRING** value);
    HRESULT (STDMETHODCALLTYPE* get_IsDeleted)(__x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointmentException* This,
        boolean* value);

        END_INTERFACE
    } __x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointmentExceptionVtbl;

    interface __x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointmentException
    {
        CONST_VTBL struct __x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointmentExceptionVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointmentException;
#endif /* !defined(____x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointmentException_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointmentInvitee_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointmentInvitee_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointmentInviteeVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointmentInvitee* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointmentInvitee* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointmentInvitee* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointmentInvitee* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointmentInvitee* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointmentInvitee* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Role)(__x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointmentInvitee* This,
        enum __x_ABI_CWindows_CApplicationModel_CAppointments_CAppointmentParticipantRole* value);
    HRESULT (STDMETHODCALLTYPE* put_Role)(__x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointmentInvitee* This,
        enum __x_ABI_CWindows_CApplicationModel_CAppointments_CAppointmentParticipantRole value);
    HRESULT (STDMETHODCALLTYPE* get_Response)(__x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointmentInvitee* This,
        enum __x_ABI_CWindows_CApplicationModel_CAppointments_CAppointmentParticipantResponse* value);
    HRESULT (STDMETHODCALLTYPE* put_Response)(__x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointmentInvitee* This,
        enum __x_ABI_CWindows_CApplicationModel_CAppointments_CAppointmentParticipantResponse value);

        END_INTERFACE
    } __x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointmentInviteeVtbl;

    interface __x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointmentInvitee
    {
        CONST_VTBL struct __x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointmentInviteeVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointmentInvitee;
#endif /* !defined(____x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointmentInvitee_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointmentManagerForUser_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointmentManagerForUser_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointmentManagerForUserVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointmentManagerForUser* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointmentManagerForUser* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointmentManagerForUser* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointmentManagerForUser* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointmentManagerForUser* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointmentManagerForUser* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* ShowAddAppointmentAsync)(__x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointmentManagerForUser* This,
        __x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointment* appointment,
        struct __x_ABI_CWindows_CFoundation_CRect selection,
        __x_ABI_C__FIAsyncOperation_1_HSTRING** result);
    HRESULT (STDMETHODCALLTYPE* ShowAddAppointmentWithPlacementAsync)(__x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointmentManagerForUser* This,
        __x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointment* appointment,
        struct __x_ABI_CWindows_CFoundation_CRect selection,
        enum __x_ABI_CWindows_CUI_CPopups_CPlacement preferredPlacement,
        __x_ABI_C__FIAsyncOperation_1_HSTRING** result);
    HRESULT (STDMETHODCALLTYPE* ShowReplaceAppointmentAsync)(__x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointmentManagerForUser* This,
        HSTRING appointmentId,
        __x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointment* appointment,
        struct __x_ABI_CWindows_CFoundation_CRect selection,
        __x_ABI_C__FIAsyncOperation_1_HSTRING** result);
    HRESULT (STDMETHODCALLTYPE* ShowReplaceAppointmentWithPlacementAsync)(__x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointmentManagerForUser* This,
        HSTRING appointmentId,
        __x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointment* appointment,
        struct __x_ABI_CWindows_CFoundation_CRect selection,
        enum __x_ABI_CWindows_CUI_CPopups_CPlacement preferredPlacement,
        __x_ABI_C__FIAsyncOperation_1_HSTRING** result);
    HRESULT (STDMETHODCALLTYPE* ShowReplaceAppointmentWithPlacementAndDateAsync)(__x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointmentManagerForUser* This,
        HSTRING appointmentId,
        __x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointment* appointment,
        struct __x_ABI_CWindows_CFoundation_CRect selection,
        enum __x_ABI_CWindows_CUI_CPopups_CPlacement preferredPlacement,
        struct __x_ABI_CWindows_CFoundation_CDateTime instanceStartDate,
        __x_ABI_C__FIAsyncOperation_1_HSTRING** result);
    HRESULT (STDMETHODCALLTYPE* ShowRemoveAppointmentAsync)(__x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointmentManagerForUser* This,
        HSTRING appointmentId,
        struct __x_ABI_CWindows_CFoundation_CRect selection,
        __x_ABI_C__FIAsyncOperation_1_boolean** result);
    HRESULT (STDMETHODCALLTYPE* ShowRemoveAppointmentWithPlacementAsync)(__x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointmentManagerForUser* This,
        HSTRING appointmentId,
        struct __x_ABI_CWindows_CFoundation_CRect selection,
        enum __x_ABI_CWindows_CUI_CPopups_CPlacement preferredPlacement,
        __x_ABI_C__FIAsyncOperation_1_boolean** result);
    HRESULT (STDMETHODCALLTYPE* ShowRemoveAppointmentWithPlacementAndDateAsync)(__x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointmentManagerForUser* This,
        HSTRING appointmentId,
        struct __x_ABI_CWindows_CFoundation_CRect selection,
        enum __x_ABI_CWindows_CUI_CPopups_CPlacement preferredPlacement,
        struct __x_ABI_CWindows_CFoundation_CDateTime instanceStartDate,
        __x_ABI_C__FIAsyncOperation_1_boolean** result);
    HRESULT (STDMETHODCALLTYPE* ShowTimeFrameAsync)(__x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointmentManagerForUser* This,
        struct __x_ABI_CWindows_CFoundation_CDateTime timeToShow,
        struct __x_ABI_CWindows_CFoundation_CTimeSpan duration,
        __x_ABI_CWindows_CFoundation_CIAsyncAction** result);
    HRESULT (STDMETHODCALLTYPE* ShowAppointmentDetailsAsync)(__x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointmentManagerForUser* This,
        HSTRING appointmentId,
        __x_ABI_CWindows_CFoundation_CIAsyncAction** result);
    HRESULT (STDMETHODCALLTYPE* ShowAppointmentDetailsWithDateAsync)(__x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointmentManagerForUser* This,
        HSTRING appointmentId,
        struct __x_ABI_CWindows_CFoundation_CDateTime instanceStartDate,
        __x_ABI_CWindows_CFoundation_CIAsyncAction** result);
    HRESULT (STDMETHODCALLTYPE* ShowEditNewAppointmentAsync)(__x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointmentManagerForUser* This,
        __x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointment* appointment,
        __x_ABI_C__FIAsyncOperation_1_HSTRING** result);
    HRESULT (STDMETHODCALLTYPE* RequestStoreAsync)(__x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointmentManagerForUser* This,
        enum __x_ABI_CWindows_CApplicationModel_CAppointments_CAppointmentStoreAccessType options,
        __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CAppointments__CAppointmentStore** result);
    HRESULT (STDMETHODCALLTYPE* get_User)(__x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointmentManagerForUser* This,
        __x_ABI_CWindows_CSystem_CIUser** value);

        END_INTERFACE
    } __x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointmentManagerForUserVtbl;

    interface __x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointmentManagerForUser
    {
        CONST_VTBL struct __x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointmentManagerForUserVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointmentManagerForUser;
#endif /* !defined(____x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointmentManagerForUser_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointmentManagerStatics_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointmentManagerStatics_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointmentManagerStaticsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointmentManagerStatics* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointmentManagerStatics* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointmentManagerStatics* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointmentManagerStatics* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointmentManagerStatics* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointmentManagerStatics* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* ShowAddAppointmentAsync)(__x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointmentManagerStatics* This,
        __x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointment* appointment,
        struct __x_ABI_CWindows_CFoundation_CRect selection,
        __x_ABI_C__FIAsyncOperation_1_HSTRING** operation);
    HRESULT (STDMETHODCALLTYPE* ShowAddAppointmentWithPlacementAsync)(__x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointmentManagerStatics* This,
        __x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointment* appointment,
        struct __x_ABI_CWindows_CFoundation_CRect selection,
        enum __x_ABI_CWindows_CUI_CPopups_CPlacement preferredPlacement,
        __x_ABI_C__FIAsyncOperation_1_HSTRING** operation);
    HRESULT (STDMETHODCALLTYPE* ShowReplaceAppointmentAsync)(__x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointmentManagerStatics* This,
        HSTRING appointmentId,
        __x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointment* appointment,
        struct __x_ABI_CWindows_CFoundation_CRect selection,
        __x_ABI_C__FIAsyncOperation_1_HSTRING** operation);
    HRESULT (STDMETHODCALLTYPE* ShowReplaceAppointmentWithPlacementAsync)(__x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointmentManagerStatics* This,
        HSTRING appointmentId,
        __x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointment* appointment,
        struct __x_ABI_CWindows_CFoundation_CRect selection,
        enum __x_ABI_CWindows_CUI_CPopups_CPlacement preferredPlacement,
        __x_ABI_C__FIAsyncOperation_1_HSTRING** operation);
    HRESULT (STDMETHODCALLTYPE* ShowReplaceAppointmentWithPlacementAndDateAsync)(__x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointmentManagerStatics* This,
        HSTRING appointmentId,
        __x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointment* appointment,
        struct __x_ABI_CWindows_CFoundation_CRect selection,
        enum __x_ABI_CWindows_CUI_CPopups_CPlacement preferredPlacement,
        struct __x_ABI_CWindows_CFoundation_CDateTime instanceStartDate,
        __x_ABI_C__FIAsyncOperation_1_HSTRING** operation);
    HRESULT (STDMETHODCALLTYPE* ShowRemoveAppointmentAsync)(__x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointmentManagerStatics* This,
        HSTRING appointmentId,
        struct __x_ABI_CWindows_CFoundation_CRect selection,
        __x_ABI_C__FIAsyncOperation_1_boolean** operation);
    HRESULT (STDMETHODCALLTYPE* ShowRemoveAppointmentWithPlacementAsync)(__x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointmentManagerStatics* This,
        HSTRING appointmentId,
        struct __x_ABI_CWindows_CFoundation_CRect selection,
        enum __x_ABI_CWindows_CUI_CPopups_CPlacement preferredPlacement,
        __x_ABI_C__FIAsyncOperation_1_boolean** operation);
    HRESULT (STDMETHODCALLTYPE* ShowRemoveAppointmentWithPlacementAndDateAsync)(__x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointmentManagerStatics* This,
        HSTRING appointmentId,
        struct __x_ABI_CWindows_CFoundation_CRect selection,
        enum __x_ABI_CWindows_CUI_CPopups_CPlacement preferredPlacement,
        struct __x_ABI_CWindows_CFoundation_CDateTime instanceStartDate,
        __x_ABI_C__FIAsyncOperation_1_boolean** operation);
    HRESULT (STDMETHODCALLTYPE* ShowTimeFrameAsync)(__x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointmentManagerStatics* This,
        struct __x_ABI_CWindows_CFoundation_CDateTime timeToShow,
        struct __x_ABI_CWindows_CFoundation_CTimeSpan duration,
        __x_ABI_CWindows_CFoundation_CIAsyncAction** asyncAction);

        END_INTERFACE
    } __x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointmentManagerStaticsVtbl;

    interface __x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointmentManagerStatics
    {
        CONST_VTBL struct __x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointmentManagerStaticsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointmentManagerStatics;
#endif /* !defined(____x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointmentManagerStatics_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointmentManagerStatics2_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointmentManagerStatics2_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointmentManagerStatics2Vtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointmentManagerStatics2* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointmentManagerStatics2* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointmentManagerStatics2* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointmentManagerStatics2* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointmentManagerStatics2* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointmentManagerStatics2* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* ShowAppointmentDetailsAsync)(__x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointmentManagerStatics2* This,
        HSTRING appointmentId,
        __x_ABI_CWindows_CFoundation_CIAsyncAction** asyncAction);
    HRESULT (STDMETHODCALLTYPE* ShowAppointmentDetailsWithDateAsync)(__x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointmentManagerStatics2* This,
        HSTRING appointmentId,
        struct __x_ABI_CWindows_CFoundation_CDateTime instanceStartDate,
        __x_ABI_CWindows_CFoundation_CIAsyncAction** asyncAction);
    HRESULT (STDMETHODCALLTYPE* ShowEditNewAppointmentAsync)(__x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointmentManagerStatics2* This,
        __x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointment* appointment,
        __x_ABI_C__FIAsyncOperation_1_HSTRING** operation);
    HRESULT (STDMETHODCALLTYPE* RequestStoreAsync)(__x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointmentManagerStatics2* This,
        enum __x_ABI_CWindows_CApplicationModel_CAppointments_CAppointmentStoreAccessType options,
        __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CAppointments__CAppointmentStore** operation);

        END_INTERFACE
    } __x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointmentManagerStatics2Vtbl;

    interface __x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointmentManagerStatics2
    {
        CONST_VTBL struct __x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointmentManagerStatics2Vtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointmentManagerStatics2;
#endif /* !defined(____x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointmentManagerStatics2_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointmentManagerStatics3_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointmentManagerStatics3_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointmentManagerStatics3Vtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointmentManagerStatics3* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointmentManagerStatics3* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointmentManagerStatics3* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointmentManagerStatics3* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointmentManagerStatics3* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointmentManagerStatics3* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* GetForUser)(__x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointmentManagerStatics3* This,
        __x_ABI_CWindows_CSystem_CIUser* user,
        __x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointmentManagerForUser** result);

        END_INTERFACE
    } __x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointmentManagerStatics3Vtbl;

    interface __x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointmentManagerStatics3
    {
        CONST_VTBL struct __x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointmentManagerStatics3Vtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointmentManagerStatics3;
#endif /* !defined(____x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointmentManagerStatics3_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointmentParticipant_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointmentParticipant_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointmentParticipantVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointmentParticipant* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointmentParticipant* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointmentParticipant* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointmentParticipant* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointmentParticipant* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointmentParticipant* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_DisplayName)(__x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointmentParticipant* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* put_DisplayName)(__x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointmentParticipant* This,
        HSTRING value);
    HRESULT (STDMETHODCALLTYPE* get_Address)(__x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointmentParticipant* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* put_Address)(__x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointmentParticipant* This,
        HSTRING value);

        END_INTERFACE
    } __x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointmentParticipantVtbl;

    interface __x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointmentParticipant
    {
        CONST_VTBL struct __x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointmentParticipantVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointmentParticipant;
#endif /* !defined(____x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointmentParticipant_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointmentPropertiesStatics_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointmentPropertiesStatics_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointmentPropertiesStaticsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointmentPropertiesStatics* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointmentPropertiesStatics* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointmentPropertiesStatics* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointmentPropertiesStatics* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointmentPropertiesStatics* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointmentPropertiesStatics* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Subject)(__x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointmentPropertiesStatics* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* get_Location)(__x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointmentPropertiesStatics* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* get_StartTime)(__x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointmentPropertiesStatics* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* get_Duration)(__x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointmentPropertiesStatics* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* get_Reminder)(__x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointmentPropertiesStatics* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* get_BusyStatus)(__x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointmentPropertiesStatics* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* get_Sensitivity)(__x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointmentPropertiesStatics* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* get_OriginalStartTime)(__x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointmentPropertiesStatics* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* get_IsResponseRequested)(__x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointmentPropertiesStatics* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* get_AllowNewTimeProposal)(__x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointmentPropertiesStatics* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* get_AllDay)(__x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointmentPropertiesStatics* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* get_Details)(__x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointmentPropertiesStatics* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* get_OnlineMeetingLink)(__x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointmentPropertiesStatics* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* get_ReplyTime)(__x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointmentPropertiesStatics* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* get_Organizer)(__x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointmentPropertiesStatics* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* get_UserResponse)(__x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointmentPropertiesStatics* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* get_HasInvitees)(__x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointmentPropertiesStatics* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* get_IsCanceledMeeting)(__x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointmentPropertiesStatics* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* get_IsOrganizedByUser)(__x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointmentPropertiesStatics* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* get_Recurrence)(__x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointmentPropertiesStatics* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* get_Uri)(__x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointmentPropertiesStatics* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* get_Invitees)(__x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointmentPropertiesStatics* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* get_DefaultProperties)(__x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointmentPropertiesStatics* This,
        __x_ABI_C__FIVector_1_HSTRING** value);

        END_INTERFACE
    } __x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointmentPropertiesStaticsVtbl;

    interface __x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointmentPropertiesStatics
    {
        CONST_VTBL struct __x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointmentPropertiesStaticsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointmentPropertiesStatics;
#endif /* !defined(____x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointmentPropertiesStatics_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointmentPropertiesStatics2_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointmentPropertiesStatics2_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointmentPropertiesStatics2Vtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointmentPropertiesStatics2* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointmentPropertiesStatics2* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointmentPropertiesStatics2* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointmentPropertiesStatics2* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointmentPropertiesStatics2* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointmentPropertiesStatics2* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_ChangeNumber)(__x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointmentPropertiesStatics2* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* get_RemoteChangeNumber)(__x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointmentPropertiesStatics2* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* get_DetailsKind)(__x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointmentPropertiesStatics2* This,
        HSTRING* value);

        END_INTERFACE
    } __x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointmentPropertiesStatics2Vtbl;

    interface __x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointmentPropertiesStatics2
    {
        CONST_VTBL struct __x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointmentPropertiesStatics2Vtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointmentPropertiesStatics2;
#endif /* !defined(____x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointmentPropertiesStatics2_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointmentRecurrence_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointmentRecurrence_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointmentRecurrenceVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointmentRecurrence* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointmentRecurrence* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointmentRecurrence* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointmentRecurrence* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointmentRecurrence* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointmentRecurrence* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Unit)(__x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointmentRecurrence* This,
        enum __x_ABI_CWindows_CApplicationModel_CAppointments_CAppointmentRecurrenceUnit* value);
    HRESULT (STDMETHODCALLTYPE* put_Unit)(__x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointmentRecurrence* This,
        enum __x_ABI_CWindows_CApplicationModel_CAppointments_CAppointmentRecurrenceUnit value);
    HRESULT (STDMETHODCALLTYPE* get_Occurrences)(__x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointmentRecurrence* This,
        __x_ABI_C__FIReference_1_UINT32** value);
    HRESULT (STDMETHODCALLTYPE* put_Occurrences)(__x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointmentRecurrence* This,
        __x_ABI_C__FIReference_1_UINT32* value);
    HRESULT (STDMETHODCALLTYPE* get_Until)(__x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointmentRecurrence* This,
        __x_ABI_C__FIReference_1___x_ABI_CWindows__CFoundation__CDateTime** value);
    HRESULT (STDMETHODCALLTYPE* put_Until)(__x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointmentRecurrence* This,
        __x_ABI_C__FIReference_1___x_ABI_CWindows__CFoundation__CDateTime* value);
    HRESULT (STDMETHODCALLTYPE* get_Interval)(__x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointmentRecurrence* This,
        UINT32* value);
    HRESULT (STDMETHODCALLTYPE* put_Interval)(__x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointmentRecurrence* This,
        UINT32 value);
    HRESULT (STDMETHODCALLTYPE* get_DaysOfWeek)(__x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointmentRecurrence* This,
        enum __x_ABI_CWindows_CApplicationModel_CAppointments_CAppointmentDaysOfWeek* value);
    HRESULT (STDMETHODCALLTYPE* put_DaysOfWeek)(__x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointmentRecurrence* This,
        enum __x_ABI_CWindows_CApplicationModel_CAppointments_CAppointmentDaysOfWeek value);
    HRESULT (STDMETHODCALLTYPE* get_WeekOfMonth)(__x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointmentRecurrence* This,
        enum __x_ABI_CWindows_CApplicationModel_CAppointments_CAppointmentWeekOfMonth* value);
    HRESULT (STDMETHODCALLTYPE* put_WeekOfMonth)(__x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointmentRecurrence* This,
        enum __x_ABI_CWindows_CApplicationModel_CAppointments_CAppointmentWeekOfMonth value);
    HRESULT (STDMETHODCALLTYPE* get_Month)(__x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointmentRecurrence* This,
        UINT32* value);
    HRESULT (STDMETHODCALLTYPE* put_Month)(__x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointmentRecurrence* This,
        UINT32 value);
    HRESULT (STDMETHODCALLTYPE* get_Day)(__x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointmentRecurrence* This,
        UINT32* value);
    HRESULT (STDMETHODCALLTYPE* put_Day)(__x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointmentRecurrence* This,
        UINT32 value);

        END_INTERFACE
    } __x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointmentRecurrenceVtbl;

    interface __x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointmentRecurrence
    {
        CONST_VTBL struct __x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointmentRecurrenceVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointmentRecurrence;
#endif /* !defined(____x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointmentRecurrence_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointmentRecurrence2_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointmentRecurrence2_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointmentRecurrence2Vtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointmentRecurrence2* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointmentRecurrence2* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointmentRecurrence2* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointmentRecurrence2* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointmentRecurrence2* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointmentRecurrence2* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_RecurrenceType)(__x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointmentRecurrence2* This,
        enum __x_ABI_CWindows_CApplicationModel_CAppointments_CRecurrenceType* value);
    HRESULT (STDMETHODCALLTYPE* get_TimeZone)(__x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointmentRecurrence2* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* put_TimeZone)(__x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointmentRecurrence2* This,
        HSTRING value);

        END_INTERFACE
    } __x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointmentRecurrence2Vtbl;

    interface __x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointmentRecurrence2
    {
        CONST_VTBL struct __x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointmentRecurrence2Vtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointmentRecurrence2;
#endif /* !defined(____x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointmentRecurrence2_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointmentRecurrence3_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointmentRecurrence3_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointmentRecurrence3Vtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointmentRecurrence3* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointmentRecurrence3* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointmentRecurrence3* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointmentRecurrence3* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointmentRecurrence3* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointmentRecurrence3* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_CalendarIdentifier)(__x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointmentRecurrence3* This,
        HSTRING* value);

        END_INTERFACE
    } __x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointmentRecurrence3Vtbl;

    interface __x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointmentRecurrence3
    {
        CONST_VTBL struct __x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointmentRecurrence3Vtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointmentRecurrence3;
#endif /* !defined(____x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointmentRecurrence3_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointmentStore_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointmentStore_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointmentStoreVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointmentStore* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointmentStore* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointmentStore* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointmentStore* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointmentStore* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointmentStore* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_ChangeTracker)(__x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointmentStore* This,
        __x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointmentStoreChangeTracker** value);
    HRESULT (STDMETHODCALLTYPE* CreateAppointmentCalendarAsync)(__x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointmentStore* This,
        HSTRING name,
        __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CAppointments__CAppointmentCalendar** operation);
    HRESULT (STDMETHODCALLTYPE* GetAppointmentCalendarAsync)(__x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointmentStore* This,
        HSTRING calendarId,
        __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CAppointments__CAppointmentCalendar** result);
    HRESULT (STDMETHODCALLTYPE* GetAppointmentAsync)(__x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointmentStore* This,
        HSTRING localId,
        __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CAppointments__CAppointment** result);
    HRESULT (STDMETHODCALLTYPE* GetAppointmentInstanceAsync)(__x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointmentStore* This,
        HSTRING localId,
        struct __x_ABI_CWindows_CFoundation_CDateTime instanceStartTime,
        __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CAppointments__CAppointment** result);
    HRESULT (STDMETHODCALLTYPE* FindAppointmentCalendarsAsync)(__x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointmentStore* This,
        __x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CAppointments__CAppointmentCalendar** result);
    HRESULT (STDMETHODCALLTYPE* FindAppointmentCalendarsAsyncWithOptions)(__x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointmentStore* This,
        enum __x_ABI_CWindows_CApplicationModel_CAppointments_CFindAppointmentCalendarsOptions options,
        __x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CAppointments__CAppointmentCalendar** result);
    HRESULT (STDMETHODCALLTYPE* FindAppointmentsAsync)(__x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointmentStore* This,
        struct __x_ABI_CWindows_CFoundation_CDateTime rangeStart,
        struct __x_ABI_CWindows_CFoundation_CTimeSpan rangeLength,
        __x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CAppointments__CAppointment** result);
    HRESULT (STDMETHODCALLTYPE* FindAppointmentsAsyncWithOptions)(__x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointmentStore* This,
        struct __x_ABI_CWindows_CFoundation_CDateTime rangeStart,
        struct __x_ABI_CWindows_CFoundation_CTimeSpan rangeLength,
        __x_ABI_CWindows_CApplicationModel_CAppointments_CIFindAppointmentsOptions* options,
        __x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CAppointments__CAppointment** result);
    HRESULT (STDMETHODCALLTYPE* FindConflictAsync)(__x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointmentStore* This,
        __x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointment* appointment,
        __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CAppointments__CAppointmentConflictResult** result);
    HRESULT (STDMETHODCALLTYPE* FindConflictAsyncWithInstanceStart)(__x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointmentStore* This,
        __x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointment* appointment,
        struct __x_ABI_CWindows_CFoundation_CDateTime instanceStartTime,
        __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CAppointments__CAppointmentConflictResult** result);
    HRESULT (STDMETHODCALLTYPE* MoveAppointmentAsync)(__x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointmentStore* This,
        __x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointment* appointment,
        __x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointmentCalendar* destinationCalendar,
        __x_ABI_CWindows_CFoundation_CIAsyncAction** asyncAction);
    HRESULT (STDMETHODCALLTYPE* ShowAddAppointmentAsync)(__x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointmentStore* This,
        __x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointment* appointment,
        struct __x_ABI_CWindows_CFoundation_CRect selection,
        __x_ABI_C__FIAsyncOperation_1_HSTRING** operation);
    HRESULT (STDMETHODCALLTYPE* ShowReplaceAppointmentAsync)(__x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointmentStore* This,
        HSTRING localId,
        __x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointment* appointment,
        struct __x_ABI_CWindows_CFoundation_CRect selection,
        __x_ABI_C__FIAsyncOperation_1_HSTRING** operation);
    HRESULT (STDMETHODCALLTYPE* ShowReplaceAppointmentWithPlacementAndDateAsync)(__x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointmentStore* This,
        HSTRING localId,
        __x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointment* appointment,
        struct __x_ABI_CWindows_CFoundation_CRect selection,
        enum __x_ABI_CWindows_CUI_CPopups_CPlacement preferredPlacement,
        struct __x_ABI_CWindows_CFoundation_CDateTime instanceStartDate,
        __x_ABI_C__FIAsyncOperation_1_HSTRING** operation);
    HRESULT (STDMETHODCALLTYPE* ShowRemoveAppointmentAsync)(__x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointmentStore* This,
        HSTRING localId,
        struct __x_ABI_CWindows_CFoundation_CRect selection,
        __x_ABI_C__FIAsyncOperation_1_boolean** operation);
    HRESULT (STDMETHODCALLTYPE* ShowRemoveAppointmentWithPlacementAndDateAsync)(__x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointmentStore* This,
        HSTRING localId,
        struct __x_ABI_CWindows_CFoundation_CRect selection,
        enum __x_ABI_CWindows_CUI_CPopups_CPlacement preferredPlacement,
        struct __x_ABI_CWindows_CFoundation_CDateTime instanceStartDate,
        __x_ABI_C__FIAsyncOperation_1_boolean** operation);
    HRESULT (STDMETHODCALLTYPE* ShowAppointmentDetailsAsync)(__x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointmentStore* This,
        HSTRING localId,
        __x_ABI_CWindows_CFoundation_CIAsyncAction** asyncAction);
    HRESULT (STDMETHODCALLTYPE* ShowAppointmentDetailsWithDateAsync)(__x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointmentStore* This,
        HSTRING localId,
        struct __x_ABI_CWindows_CFoundation_CDateTime instanceStartDate,
        __x_ABI_CWindows_CFoundation_CIAsyncAction** asyncAction);
    HRESULT (STDMETHODCALLTYPE* ShowEditNewAppointmentAsync)(__x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointmentStore* This,
        __x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointment* appointment,
        __x_ABI_C__FIAsyncOperation_1_HSTRING** operation);
    HRESULT (STDMETHODCALLTYPE* FindLocalIdsFromRoamingIdAsync)(__x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointmentStore* This,
        HSTRING roamingId,
        __x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1_HSTRING** operation);

        END_INTERFACE
    } __x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointmentStoreVtbl;

    interface __x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointmentStore
    {
        CONST_VTBL struct __x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointmentStoreVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointmentStore;
#endif /* !defined(____x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointmentStore_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointmentStore2_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointmentStore2_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointmentStore2Vtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointmentStore2* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointmentStore2* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointmentStore2* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointmentStore2* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointmentStore2* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointmentStore2* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* add_StoreChanged)(__x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointmentStore2* This,
        __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CApplicationModel__CAppointments__CAppointmentStore___x_ABI_CWindows__CApplicationModel__CAppointments__CAppointmentStoreChangedEventArgs* pHandler,
        EventRegistrationToken* pToken);
    HRESULT (STDMETHODCALLTYPE* remove_StoreChanged)(__x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointmentStore2* This,
        EventRegistrationToken token);
    HRESULT (STDMETHODCALLTYPE* CreateAppointmentCalendarInAccountAsync)(__x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointmentStore2* This,
        HSTRING name,
        HSTRING userDataAccountId,
        __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CAppointments__CAppointmentCalendar** operation);

        END_INTERFACE
    } __x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointmentStore2Vtbl;

    interface __x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointmentStore2
    {
        CONST_VTBL struct __x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointmentStore2Vtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointmentStore2;
#endif /* !defined(____x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointmentStore2_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointmentStore3_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointmentStore3_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointmentStore3Vtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointmentStore3* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointmentStore3* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointmentStore3* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointmentStore3* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointmentStore3* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointmentStore3* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* GetChangeTracker)(__x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointmentStore3* This,
        HSTRING identity,
        __x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointmentStoreChangeTracker** result);

        END_INTERFACE
    } __x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointmentStore3Vtbl;

    interface __x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointmentStore3
    {
        CONST_VTBL struct __x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointmentStore3Vtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointmentStore3;
#endif /* !defined(____x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointmentStore3_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointmentStoreChange_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointmentStoreChange_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointmentStoreChangeVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointmentStoreChange* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointmentStoreChange* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointmentStoreChange* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointmentStoreChange* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointmentStoreChange* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointmentStoreChange* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Appointment)(__x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointmentStoreChange* This,
        __x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointment** value);
    HRESULT (STDMETHODCALLTYPE* get_ChangeType)(__x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointmentStoreChange* This,
        enum __x_ABI_CWindows_CApplicationModel_CAppointments_CAppointmentStoreChangeType* value);

        END_INTERFACE
    } __x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointmentStoreChangeVtbl;

    interface __x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointmentStoreChange
    {
        CONST_VTBL struct __x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointmentStoreChangeVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointmentStoreChange;
#endif /* !defined(____x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointmentStoreChange_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointmentStoreChange2_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointmentStoreChange2_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointmentStoreChange2Vtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointmentStoreChange2* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointmentStoreChange2* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointmentStoreChange2* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointmentStoreChange2* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointmentStoreChange2* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointmentStoreChange2* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_AppointmentCalendar)(__x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointmentStoreChange2* This,
        __x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointmentCalendar** value);

        END_INTERFACE
    } __x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointmentStoreChange2Vtbl;

    interface __x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointmentStoreChange2
    {
        CONST_VTBL struct __x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointmentStoreChange2Vtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointmentStoreChange2;
#endif /* !defined(____x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointmentStoreChange2_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointmentStoreChangeReader_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointmentStoreChangeReader_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointmentStoreChangeReaderVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointmentStoreChangeReader* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointmentStoreChangeReader* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointmentStoreChangeReader* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointmentStoreChangeReader* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointmentStoreChangeReader* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointmentStoreChangeReader* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* ReadBatchAsync)(__x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointmentStoreChangeReader* This,
        __x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CAppointments__CAppointmentStoreChange** result);
    HRESULT (STDMETHODCALLTYPE* AcceptChanges)(__x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointmentStoreChangeReader* This);
    HRESULT (STDMETHODCALLTYPE* AcceptChangesThrough)(__x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointmentStoreChangeReader* This,
        __x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointmentStoreChange* lastChangeToAccept);

        END_INTERFACE
    } __x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointmentStoreChangeReaderVtbl;

    interface __x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointmentStoreChangeReader
    {
        CONST_VTBL struct __x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointmentStoreChangeReaderVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointmentStoreChangeReader;
#endif /* !defined(____x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointmentStoreChangeReader_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointmentStoreChangeTracker_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointmentStoreChangeTracker_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointmentStoreChangeTrackerVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointmentStoreChangeTracker* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointmentStoreChangeTracker* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointmentStoreChangeTracker* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointmentStoreChangeTracker* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointmentStoreChangeTracker* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointmentStoreChangeTracker* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* GetChangeReader)(__x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointmentStoreChangeTracker* This,
        __x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointmentStoreChangeReader** value);
    HRESULT (STDMETHODCALLTYPE* Enable)(__x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointmentStoreChangeTracker* This);
    HRESULT (STDMETHODCALLTYPE* Reset)(__x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointmentStoreChangeTracker* This);

        END_INTERFACE
    } __x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointmentStoreChangeTrackerVtbl;

    interface __x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointmentStoreChangeTracker
    {
        CONST_VTBL struct __x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointmentStoreChangeTrackerVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointmentStoreChangeTracker;
#endif /* !defined(____x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointmentStoreChangeTracker_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointmentStoreChangeTracker2_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointmentStoreChangeTracker2_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointmentStoreChangeTracker2Vtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointmentStoreChangeTracker2* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointmentStoreChangeTracker2* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointmentStoreChangeTracker2* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointmentStoreChangeTracker2* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointmentStoreChangeTracker2* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointmentStoreChangeTracker2* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_IsTracking)(__x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointmentStoreChangeTracker2* This,
        boolean* value);

        END_INTERFACE
    } __x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointmentStoreChangeTracker2Vtbl;

    interface __x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointmentStoreChangeTracker2
    {
        CONST_VTBL struct __x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointmentStoreChangeTracker2Vtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointmentStoreChangeTracker2;
#endif /* !defined(____x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointmentStoreChangeTracker2_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointmentStoreChangedDeferral_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointmentStoreChangedDeferral_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointmentStoreChangedDeferralVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointmentStoreChangedDeferral* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointmentStoreChangedDeferral* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointmentStoreChangedDeferral* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointmentStoreChangedDeferral* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointmentStoreChangedDeferral* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointmentStoreChangedDeferral* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* Complete)(__x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointmentStoreChangedDeferral* This);

        END_INTERFACE
    } __x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointmentStoreChangedDeferralVtbl;

    interface __x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointmentStoreChangedDeferral
    {
        CONST_VTBL struct __x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointmentStoreChangedDeferralVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointmentStoreChangedDeferral;
#endif /* !defined(____x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointmentStoreChangedDeferral_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointmentStoreChangedEventArgs_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointmentStoreChangedEventArgs_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointmentStoreChangedEventArgsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointmentStoreChangedEventArgs* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointmentStoreChangedEventArgs* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointmentStoreChangedEventArgs* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointmentStoreChangedEventArgs* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointmentStoreChangedEventArgs* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointmentStoreChangedEventArgs* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* GetDeferral)(__x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointmentStoreChangedEventArgs* This,
        __x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointmentStoreChangedDeferral** result);

        END_INTERFACE
    } __x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointmentStoreChangedEventArgsVtbl;

    interface __x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointmentStoreChangedEventArgs
    {
        CONST_VTBL struct __x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointmentStoreChangedEventArgsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointmentStoreChangedEventArgs;
#endif /* !defined(____x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointmentStoreChangedEventArgs_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointmentStoreNotificationTriggerDetails_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointmentStoreNotificationTriggerDetails_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointmentStoreNotificationTriggerDetailsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointmentStoreNotificationTriggerDetails* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointmentStoreNotificationTriggerDetails* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointmentStoreNotificationTriggerDetails* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointmentStoreNotificationTriggerDetails* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointmentStoreNotificationTriggerDetails* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointmentStoreNotificationTriggerDetails* This,
            TrustLevel* trustLevel);
    
        END_INTERFACE
    } __x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointmentStoreNotificationTriggerDetailsVtbl;

    interface __x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointmentStoreNotificationTriggerDetails
    {
        CONST_VTBL struct __x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointmentStoreNotificationTriggerDetailsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointmentStoreNotificationTriggerDetails;
#endif /* !defined(____x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointmentStoreNotificationTriggerDetails_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CApplicationModel_CAppointments_CIFindAppointmentsOptions_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CApplicationModel_CAppointments_CIFindAppointmentsOptions_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CApplicationModel_CAppointments_CIFindAppointmentsOptionsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CApplicationModel_CAppointments_CIFindAppointmentsOptions* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CApplicationModel_CAppointments_CIFindAppointmentsOptions* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CApplicationModel_CAppointments_CIFindAppointmentsOptions* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CApplicationModel_CAppointments_CIFindAppointmentsOptions* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CApplicationModel_CAppointments_CIFindAppointmentsOptions* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CApplicationModel_CAppointments_CIFindAppointmentsOptions* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_CalendarIds)(__x_ABI_CWindows_CApplicationModel_CAppointments_CIFindAppointmentsOptions* This,
        __x_ABI_C__FIVector_1_HSTRING** value);
    HRESULT (STDMETHODCALLTYPE* get_FetchProperties)(__x_ABI_CWindows_CApplicationModel_CAppointments_CIFindAppointmentsOptions* This,
        __x_ABI_C__FIVector_1_HSTRING** value);
    HRESULT (STDMETHODCALLTYPE* get_IncludeHidden)(__x_ABI_CWindows_CApplicationModel_CAppointments_CIFindAppointmentsOptions* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* put_IncludeHidden)(__x_ABI_CWindows_CApplicationModel_CAppointments_CIFindAppointmentsOptions* This,
        boolean value);
    HRESULT (STDMETHODCALLTYPE* get_MaxCount)(__x_ABI_CWindows_CApplicationModel_CAppointments_CIFindAppointmentsOptions* This,
        UINT32* value);
    HRESULT (STDMETHODCALLTYPE* put_MaxCount)(__x_ABI_CWindows_CApplicationModel_CAppointments_CIFindAppointmentsOptions* This,
        UINT32 value);

        END_INTERFACE
    } __x_ABI_CWindows_CApplicationModel_CAppointments_CIFindAppointmentsOptionsVtbl;

    interface __x_ABI_CWindows_CApplicationModel_CAppointments_CIFindAppointmentsOptions
    {
        CONST_VTBL struct __x_ABI_CWindows_CApplicationModel_CAppointments_CIFindAppointmentsOptionsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CApplicationModel_CAppointments_CIFindAppointmentsOptions;
#endif /* !defined(____x_ABI_CWindows_CApplicationModel_CAppointments_CIFindAppointmentsOptions_INTERFACE_DEFINED__) */
    
