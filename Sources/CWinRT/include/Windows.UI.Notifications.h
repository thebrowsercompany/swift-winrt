// WARNING: Please don't edit this file. It was generated by Swift/WinRT v0.0.1

#pragma once
// Header files for imported files
#include <inspectable.h>
#include <EventToken.h>
#include <windowscontracts.h>
#include "Windows.Foundation.h"
#include "Windows.ApplicationModel.h"
#include "Windows.Data.Xml.Dom.h"
#include "Windows.System.h"
// Importing Collections header
#include "Windows.Foundation.Collections.h"

/* Forward Declarations */
#ifndef ____x_ABI_CWindows_CUI_CNotifications_CIAdaptiveNotificationContent_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CNotifications_CIAdaptiveNotificationContent_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CNotifications_CIAdaptiveNotificationContent __x_ABI_CWindows_CUI_CNotifications_CIAdaptiveNotificationContent;

#endif // ____x_ABI_CWindows_CUI_CNotifications_CIAdaptiveNotificationContent_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CNotifications_CIAdaptiveNotificationText_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CNotifications_CIAdaptiveNotificationText_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CNotifications_CIAdaptiveNotificationText __x_ABI_CWindows_CUI_CNotifications_CIAdaptiveNotificationText;

#endif // ____x_ABI_CWindows_CUI_CNotifications_CIAdaptiveNotificationText_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CNotifications_CIBadgeNotification_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CNotifications_CIBadgeNotification_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CNotifications_CIBadgeNotification __x_ABI_CWindows_CUI_CNotifications_CIBadgeNotification;

#endif // ____x_ABI_CWindows_CUI_CNotifications_CIBadgeNotification_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CNotifications_CIBadgeNotificationFactory_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CNotifications_CIBadgeNotificationFactory_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CNotifications_CIBadgeNotificationFactory __x_ABI_CWindows_CUI_CNotifications_CIBadgeNotificationFactory;

#endif // ____x_ABI_CWindows_CUI_CNotifications_CIBadgeNotificationFactory_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CNotifications_CIBadgeUpdateManagerForUser_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CNotifications_CIBadgeUpdateManagerForUser_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CNotifications_CIBadgeUpdateManagerForUser __x_ABI_CWindows_CUI_CNotifications_CIBadgeUpdateManagerForUser;

#endif // ____x_ABI_CWindows_CUI_CNotifications_CIBadgeUpdateManagerForUser_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CNotifications_CIBadgeUpdateManagerStatics_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CNotifications_CIBadgeUpdateManagerStatics_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CNotifications_CIBadgeUpdateManagerStatics __x_ABI_CWindows_CUI_CNotifications_CIBadgeUpdateManagerStatics;

#endif // ____x_ABI_CWindows_CUI_CNotifications_CIBadgeUpdateManagerStatics_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CNotifications_CIBadgeUpdateManagerStatics2_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CNotifications_CIBadgeUpdateManagerStatics2_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CNotifications_CIBadgeUpdateManagerStatics2 __x_ABI_CWindows_CUI_CNotifications_CIBadgeUpdateManagerStatics2;

#endif // ____x_ABI_CWindows_CUI_CNotifications_CIBadgeUpdateManagerStatics2_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CNotifications_CIBadgeUpdater_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CNotifications_CIBadgeUpdater_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CNotifications_CIBadgeUpdater __x_ABI_CWindows_CUI_CNotifications_CIBadgeUpdater;

#endif // ____x_ABI_CWindows_CUI_CNotifications_CIBadgeUpdater_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CNotifications_CIKnownAdaptiveNotificationHintsStatics_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CNotifications_CIKnownAdaptiveNotificationHintsStatics_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CNotifications_CIKnownAdaptiveNotificationHintsStatics __x_ABI_CWindows_CUI_CNotifications_CIKnownAdaptiveNotificationHintsStatics;

#endif // ____x_ABI_CWindows_CUI_CNotifications_CIKnownAdaptiveNotificationHintsStatics_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CNotifications_CIKnownAdaptiveNotificationTextStylesStatics_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CNotifications_CIKnownAdaptiveNotificationTextStylesStatics_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CNotifications_CIKnownAdaptiveNotificationTextStylesStatics __x_ABI_CWindows_CUI_CNotifications_CIKnownAdaptiveNotificationTextStylesStatics;

#endif // ____x_ABI_CWindows_CUI_CNotifications_CIKnownAdaptiveNotificationTextStylesStatics_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CNotifications_CIKnownNotificationBindingsStatics_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CNotifications_CIKnownNotificationBindingsStatics_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CNotifications_CIKnownNotificationBindingsStatics __x_ABI_CWindows_CUI_CNotifications_CIKnownNotificationBindingsStatics;

#endif // ____x_ABI_CWindows_CUI_CNotifications_CIKnownNotificationBindingsStatics_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CNotifications_CINotification_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CNotifications_CINotification_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CNotifications_CINotification __x_ABI_CWindows_CUI_CNotifications_CINotification;

#endif // ____x_ABI_CWindows_CUI_CNotifications_CINotification_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CNotifications_CINotificationBinding_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CNotifications_CINotificationBinding_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CNotifications_CINotificationBinding __x_ABI_CWindows_CUI_CNotifications_CINotificationBinding;

#endif // ____x_ABI_CWindows_CUI_CNotifications_CINotificationBinding_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CNotifications_CINotificationData_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CNotifications_CINotificationData_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CNotifications_CINotificationData __x_ABI_CWindows_CUI_CNotifications_CINotificationData;

#endif // ____x_ABI_CWindows_CUI_CNotifications_CINotificationData_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CNotifications_CINotificationDataFactory_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CNotifications_CINotificationDataFactory_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CNotifications_CINotificationDataFactory __x_ABI_CWindows_CUI_CNotifications_CINotificationDataFactory;

#endif // ____x_ABI_CWindows_CUI_CNotifications_CINotificationDataFactory_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CNotifications_CINotificationVisual_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CNotifications_CINotificationVisual_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CNotifications_CINotificationVisual __x_ABI_CWindows_CUI_CNotifications_CINotificationVisual;

#endif // ____x_ABI_CWindows_CUI_CNotifications_CINotificationVisual_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CNotifications_CIScheduledTileNotification_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CNotifications_CIScheduledTileNotification_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CNotifications_CIScheduledTileNotification __x_ABI_CWindows_CUI_CNotifications_CIScheduledTileNotification;

#endif // ____x_ABI_CWindows_CUI_CNotifications_CIScheduledTileNotification_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CNotifications_CIScheduledTileNotificationFactory_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CNotifications_CIScheduledTileNotificationFactory_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CNotifications_CIScheduledTileNotificationFactory __x_ABI_CWindows_CUI_CNotifications_CIScheduledTileNotificationFactory;

#endif // ____x_ABI_CWindows_CUI_CNotifications_CIScheduledTileNotificationFactory_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CNotifications_CIScheduledToastNotification_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CNotifications_CIScheduledToastNotification_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CNotifications_CIScheduledToastNotification __x_ABI_CWindows_CUI_CNotifications_CIScheduledToastNotification;

#endif // ____x_ABI_CWindows_CUI_CNotifications_CIScheduledToastNotification_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CNotifications_CIScheduledToastNotification2_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CNotifications_CIScheduledToastNotification2_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CNotifications_CIScheduledToastNotification2 __x_ABI_CWindows_CUI_CNotifications_CIScheduledToastNotification2;

#endif // ____x_ABI_CWindows_CUI_CNotifications_CIScheduledToastNotification2_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CNotifications_CIScheduledToastNotification3_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CNotifications_CIScheduledToastNotification3_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CNotifications_CIScheduledToastNotification3 __x_ABI_CWindows_CUI_CNotifications_CIScheduledToastNotification3;

#endif // ____x_ABI_CWindows_CUI_CNotifications_CIScheduledToastNotification3_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CNotifications_CIScheduledToastNotification4_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CNotifications_CIScheduledToastNotification4_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CNotifications_CIScheduledToastNotification4 __x_ABI_CWindows_CUI_CNotifications_CIScheduledToastNotification4;

#endif // ____x_ABI_CWindows_CUI_CNotifications_CIScheduledToastNotification4_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CNotifications_CIScheduledToastNotificationFactory_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CNotifications_CIScheduledToastNotificationFactory_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CNotifications_CIScheduledToastNotificationFactory __x_ABI_CWindows_CUI_CNotifications_CIScheduledToastNotificationFactory;

#endif // ____x_ABI_CWindows_CUI_CNotifications_CIScheduledToastNotificationFactory_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CNotifications_CIScheduledToastNotificationShowingEventArgs_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CNotifications_CIScheduledToastNotificationShowingEventArgs_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CNotifications_CIScheduledToastNotificationShowingEventArgs __x_ABI_CWindows_CUI_CNotifications_CIScheduledToastNotificationShowingEventArgs;

#endif // ____x_ABI_CWindows_CUI_CNotifications_CIScheduledToastNotificationShowingEventArgs_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CNotifications_CIShownTileNotification_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CNotifications_CIShownTileNotification_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CNotifications_CIShownTileNotification __x_ABI_CWindows_CUI_CNotifications_CIShownTileNotification;

#endif // ____x_ABI_CWindows_CUI_CNotifications_CIShownTileNotification_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CNotifications_CITileFlyoutNotification_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CNotifications_CITileFlyoutNotification_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CNotifications_CITileFlyoutNotification __x_ABI_CWindows_CUI_CNotifications_CITileFlyoutNotification;

#endif // ____x_ABI_CWindows_CUI_CNotifications_CITileFlyoutNotification_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CNotifications_CITileFlyoutNotificationFactory_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CNotifications_CITileFlyoutNotificationFactory_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CNotifications_CITileFlyoutNotificationFactory __x_ABI_CWindows_CUI_CNotifications_CITileFlyoutNotificationFactory;

#endif // ____x_ABI_CWindows_CUI_CNotifications_CITileFlyoutNotificationFactory_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CNotifications_CITileFlyoutUpdateManagerStatics_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CNotifications_CITileFlyoutUpdateManagerStatics_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CNotifications_CITileFlyoutUpdateManagerStatics __x_ABI_CWindows_CUI_CNotifications_CITileFlyoutUpdateManagerStatics;

#endif // ____x_ABI_CWindows_CUI_CNotifications_CITileFlyoutUpdateManagerStatics_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CNotifications_CITileFlyoutUpdater_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CNotifications_CITileFlyoutUpdater_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CNotifications_CITileFlyoutUpdater __x_ABI_CWindows_CUI_CNotifications_CITileFlyoutUpdater;

#endif // ____x_ABI_CWindows_CUI_CNotifications_CITileFlyoutUpdater_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CNotifications_CITileNotification_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CNotifications_CITileNotification_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CNotifications_CITileNotification __x_ABI_CWindows_CUI_CNotifications_CITileNotification;

#endif // ____x_ABI_CWindows_CUI_CNotifications_CITileNotification_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CNotifications_CITileNotificationFactory_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CNotifications_CITileNotificationFactory_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CNotifications_CITileNotificationFactory __x_ABI_CWindows_CUI_CNotifications_CITileNotificationFactory;

#endif // ____x_ABI_CWindows_CUI_CNotifications_CITileNotificationFactory_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CNotifications_CITileUpdateManagerForUser_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CNotifications_CITileUpdateManagerForUser_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CNotifications_CITileUpdateManagerForUser __x_ABI_CWindows_CUI_CNotifications_CITileUpdateManagerForUser;

#endif // ____x_ABI_CWindows_CUI_CNotifications_CITileUpdateManagerForUser_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CNotifications_CITileUpdateManagerStatics_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CNotifications_CITileUpdateManagerStatics_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CNotifications_CITileUpdateManagerStatics __x_ABI_CWindows_CUI_CNotifications_CITileUpdateManagerStatics;

#endif // ____x_ABI_CWindows_CUI_CNotifications_CITileUpdateManagerStatics_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CNotifications_CITileUpdateManagerStatics2_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CNotifications_CITileUpdateManagerStatics2_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CNotifications_CITileUpdateManagerStatics2 __x_ABI_CWindows_CUI_CNotifications_CITileUpdateManagerStatics2;

#endif // ____x_ABI_CWindows_CUI_CNotifications_CITileUpdateManagerStatics2_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CNotifications_CITileUpdater_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CNotifications_CITileUpdater_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CNotifications_CITileUpdater __x_ABI_CWindows_CUI_CNotifications_CITileUpdater;

#endif // ____x_ABI_CWindows_CUI_CNotifications_CITileUpdater_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CNotifications_CITileUpdater2_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CNotifications_CITileUpdater2_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CNotifications_CITileUpdater2 __x_ABI_CWindows_CUI_CNotifications_CITileUpdater2;

#endif // ____x_ABI_CWindows_CUI_CNotifications_CITileUpdater2_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CNotifications_CIToastActivatedEventArgs_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CNotifications_CIToastActivatedEventArgs_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CNotifications_CIToastActivatedEventArgs __x_ABI_CWindows_CUI_CNotifications_CIToastActivatedEventArgs;

#endif // ____x_ABI_CWindows_CUI_CNotifications_CIToastActivatedEventArgs_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CNotifications_CIToastActivatedEventArgs2_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CNotifications_CIToastActivatedEventArgs2_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CNotifications_CIToastActivatedEventArgs2 __x_ABI_CWindows_CUI_CNotifications_CIToastActivatedEventArgs2;

#endif // ____x_ABI_CWindows_CUI_CNotifications_CIToastActivatedEventArgs2_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CNotifications_CIToastCollection_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CNotifications_CIToastCollection_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CNotifications_CIToastCollection __x_ABI_CWindows_CUI_CNotifications_CIToastCollection;

#endif // ____x_ABI_CWindows_CUI_CNotifications_CIToastCollection_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CNotifications_CIToastCollectionFactory_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CNotifications_CIToastCollectionFactory_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CNotifications_CIToastCollectionFactory __x_ABI_CWindows_CUI_CNotifications_CIToastCollectionFactory;

#endif // ____x_ABI_CWindows_CUI_CNotifications_CIToastCollectionFactory_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CNotifications_CIToastCollectionManager_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CNotifications_CIToastCollectionManager_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CNotifications_CIToastCollectionManager __x_ABI_CWindows_CUI_CNotifications_CIToastCollectionManager;

#endif // ____x_ABI_CWindows_CUI_CNotifications_CIToastCollectionManager_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CNotifications_CIToastDismissedEventArgs_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CNotifications_CIToastDismissedEventArgs_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CNotifications_CIToastDismissedEventArgs __x_ABI_CWindows_CUI_CNotifications_CIToastDismissedEventArgs;

#endif // ____x_ABI_CWindows_CUI_CNotifications_CIToastDismissedEventArgs_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CNotifications_CIToastFailedEventArgs_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CNotifications_CIToastFailedEventArgs_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CNotifications_CIToastFailedEventArgs __x_ABI_CWindows_CUI_CNotifications_CIToastFailedEventArgs;

#endif // ____x_ABI_CWindows_CUI_CNotifications_CIToastFailedEventArgs_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CNotifications_CIToastNotification_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CNotifications_CIToastNotification_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CNotifications_CIToastNotification __x_ABI_CWindows_CUI_CNotifications_CIToastNotification;

#endif // ____x_ABI_CWindows_CUI_CNotifications_CIToastNotification_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CNotifications_CIToastNotification2_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CNotifications_CIToastNotification2_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CNotifications_CIToastNotification2 __x_ABI_CWindows_CUI_CNotifications_CIToastNotification2;

#endif // ____x_ABI_CWindows_CUI_CNotifications_CIToastNotification2_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CNotifications_CIToastNotification3_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CNotifications_CIToastNotification3_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CNotifications_CIToastNotification3 __x_ABI_CWindows_CUI_CNotifications_CIToastNotification3;

#endif // ____x_ABI_CWindows_CUI_CNotifications_CIToastNotification3_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CNotifications_CIToastNotification4_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CNotifications_CIToastNotification4_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CNotifications_CIToastNotification4 __x_ABI_CWindows_CUI_CNotifications_CIToastNotification4;

#endif // ____x_ABI_CWindows_CUI_CNotifications_CIToastNotification4_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CNotifications_CIToastNotification6_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CNotifications_CIToastNotification6_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CNotifications_CIToastNotification6 __x_ABI_CWindows_CUI_CNotifications_CIToastNotification6;

#endif // ____x_ABI_CWindows_CUI_CNotifications_CIToastNotification6_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CNotifications_CIToastNotificationActionTriggerDetail_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CNotifications_CIToastNotificationActionTriggerDetail_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CNotifications_CIToastNotificationActionTriggerDetail __x_ABI_CWindows_CUI_CNotifications_CIToastNotificationActionTriggerDetail;

#endif // ____x_ABI_CWindows_CUI_CNotifications_CIToastNotificationActionTriggerDetail_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CNotifications_CIToastNotificationFactory_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CNotifications_CIToastNotificationFactory_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CNotifications_CIToastNotificationFactory __x_ABI_CWindows_CUI_CNotifications_CIToastNotificationFactory;

#endif // ____x_ABI_CWindows_CUI_CNotifications_CIToastNotificationFactory_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CNotifications_CIToastNotificationHistory_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CNotifications_CIToastNotificationHistory_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CNotifications_CIToastNotificationHistory __x_ABI_CWindows_CUI_CNotifications_CIToastNotificationHistory;

#endif // ____x_ABI_CWindows_CUI_CNotifications_CIToastNotificationHistory_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CNotifications_CIToastNotificationHistory2_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CNotifications_CIToastNotificationHistory2_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CNotifications_CIToastNotificationHistory2 __x_ABI_CWindows_CUI_CNotifications_CIToastNotificationHistory2;

#endif // ____x_ABI_CWindows_CUI_CNotifications_CIToastNotificationHistory2_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CNotifications_CIToastNotificationHistoryChangedTriggerDetail_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CNotifications_CIToastNotificationHistoryChangedTriggerDetail_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CNotifications_CIToastNotificationHistoryChangedTriggerDetail __x_ABI_CWindows_CUI_CNotifications_CIToastNotificationHistoryChangedTriggerDetail;

#endif // ____x_ABI_CWindows_CUI_CNotifications_CIToastNotificationHistoryChangedTriggerDetail_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CNotifications_CIToastNotificationHistoryChangedTriggerDetail2_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CNotifications_CIToastNotificationHistoryChangedTriggerDetail2_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CNotifications_CIToastNotificationHistoryChangedTriggerDetail2 __x_ABI_CWindows_CUI_CNotifications_CIToastNotificationHistoryChangedTriggerDetail2;

#endif // ____x_ABI_CWindows_CUI_CNotifications_CIToastNotificationHistoryChangedTriggerDetail2_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CNotifications_CIToastNotificationManagerForUser_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CNotifications_CIToastNotificationManagerForUser_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CNotifications_CIToastNotificationManagerForUser __x_ABI_CWindows_CUI_CNotifications_CIToastNotificationManagerForUser;

#endif // ____x_ABI_CWindows_CUI_CNotifications_CIToastNotificationManagerForUser_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CNotifications_CIToastNotificationManagerForUser2_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CNotifications_CIToastNotificationManagerForUser2_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CNotifications_CIToastNotificationManagerForUser2 __x_ABI_CWindows_CUI_CNotifications_CIToastNotificationManagerForUser2;

#endif // ____x_ABI_CWindows_CUI_CNotifications_CIToastNotificationManagerForUser2_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CNotifications_CIToastNotificationManagerStatics_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CNotifications_CIToastNotificationManagerStatics_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CNotifications_CIToastNotificationManagerStatics __x_ABI_CWindows_CUI_CNotifications_CIToastNotificationManagerStatics;

#endif // ____x_ABI_CWindows_CUI_CNotifications_CIToastNotificationManagerStatics_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CNotifications_CIToastNotificationManagerStatics2_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CNotifications_CIToastNotificationManagerStatics2_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CNotifications_CIToastNotificationManagerStatics2 __x_ABI_CWindows_CUI_CNotifications_CIToastNotificationManagerStatics2;

#endif // ____x_ABI_CWindows_CUI_CNotifications_CIToastNotificationManagerStatics2_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CNotifications_CIToastNotificationManagerStatics4_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CNotifications_CIToastNotificationManagerStatics4_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CNotifications_CIToastNotificationManagerStatics4 __x_ABI_CWindows_CUI_CNotifications_CIToastNotificationManagerStatics4;

#endif // ____x_ABI_CWindows_CUI_CNotifications_CIToastNotificationManagerStatics4_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CNotifications_CIToastNotificationManagerStatics5_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CNotifications_CIToastNotificationManagerStatics5_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CNotifications_CIToastNotificationManagerStatics5 __x_ABI_CWindows_CUI_CNotifications_CIToastNotificationManagerStatics5;

#endif // ____x_ABI_CWindows_CUI_CNotifications_CIToastNotificationManagerStatics5_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CNotifications_CIToastNotifier_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CNotifications_CIToastNotifier_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CNotifications_CIToastNotifier __x_ABI_CWindows_CUI_CNotifications_CIToastNotifier;

#endif // ____x_ABI_CWindows_CUI_CNotifications_CIToastNotifier_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CNotifications_CIToastNotifier2_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CNotifications_CIToastNotifier2_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CNotifications_CIToastNotifier2 __x_ABI_CWindows_CUI_CNotifications_CIToastNotifier2;

#endif // ____x_ABI_CWindows_CUI_CNotifications_CIToastNotifier2_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CNotifications_CIToastNotifier3_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CNotifications_CIToastNotifier3_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CNotifications_CIToastNotifier3 __x_ABI_CWindows_CUI_CNotifications_CIToastNotifier3;

#endif // ____x_ABI_CWindows_CUI_CNotifications_CIToastNotifier3_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CNotifications_CIUserNotification_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CNotifications_CIUserNotification_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CNotifications_CIUserNotification __x_ABI_CWindows_CUI_CNotifications_CIUserNotification;

#endif // ____x_ABI_CWindows_CUI_CNotifications_CIUserNotification_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CNotifications_CIUserNotificationChangedEventArgs_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CNotifications_CIUserNotificationChangedEventArgs_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CNotifications_CIUserNotificationChangedEventArgs __x_ABI_CWindows_CUI_CNotifications_CIUserNotificationChangedEventArgs;

#endif // ____x_ABI_CWindows_CUI_CNotifications_CIUserNotificationChangedEventArgs_FWD_DEFINED__

// Parameterized interface forward declarations (C)

// Collection interface definitions

#if !defined(____x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CNotifications__CToastCollection_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CNotifications__CToastCollection_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CNotifications__CToastCollection __x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CNotifications__CToastCollection;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CNotifications__CToastCollection;

    typedef struct __x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CNotifications__CToastCollectionVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CNotifications__CToastCollection* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CNotifications__CToastCollection* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CNotifications__CToastCollection* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CNotifications__CToastCollection* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CNotifications__CToastCollection* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CNotifications__CToastCollection* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Current)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CNotifications__CToastCollection* This,
        __x_ABI_CWindows_CUI_CNotifications_CIToastCollection** result);
    HRESULT (STDMETHODCALLTYPE* get_HasCurrent)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CNotifications__CToastCollection* This,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* MoveNext)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CNotifications__CToastCollection* This,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CNotifications__CToastCollection* This,
        UINT32 itemsLength,
        __x_ABI_CWindows_CUI_CNotifications_CIToastCollection** items,
        UINT32* result);

        END_INTERFACE
    } __x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CNotifications__CToastCollectionVtbl;

    interface __x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CNotifications__CToastCollection
    {
        CONST_VTBL struct __x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CNotifications__CToastCollectionVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CNotifications__CToastCollection_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIIterable_1___x_ABI_CWindows__CUI__CNotifications__CToastCollection_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIIterable_1___x_ABI_CWindows__CUI__CNotifications__CToastCollection_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIIterable_1___x_ABI_CWindows__CUI__CNotifications__CToastCollection __x_ABI_C__FIIterable_1___x_ABI_CWindows__CUI__CNotifications__CToastCollection;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIIterable_1___x_ABI_CWindows__CUI__CNotifications__CToastCollection;

    typedef struct __x_ABI_C__FIIterable_1___x_ABI_CWindows__CUI__CNotifications__CToastCollectionVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CUI__CNotifications__CToastCollection* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CUI__CNotifications__CToastCollection* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CUI__CNotifications__CToastCollection* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CUI__CNotifications__CToastCollection* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CUI__CNotifications__CToastCollection* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CUI__CNotifications__CToastCollection* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* First)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CUI__CNotifications__CToastCollection* This,
        __x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CNotifications__CToastCollection** result);

        END_INTERFACE
    } __x_ABI_C__FIIterable_1___x_ABI_CWindows__CUI__CNotifications__CToastCollectionVtbl;

    interface __x_ABI_C__FIIterable_1___x_ABI_CWindows__CUI__CNotifications__CToastCollection
    {
        CONST_VTBL struct __x_ABI_C__FIIterable_1___x_ABI_CWindows__CUI__CNotifications__CToastCollectionVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIIterable_1___x_ABI_CWindows__CUI__CNotifications__CToastCollection_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CNotifications__CToastCollection_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CNotifications__CToastCollection_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CNotifications__CToastCollection __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CNotifications__CToastCollection;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CNotifications__CToastCollection;

    typedef struct __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CNotifications__CToastCollectionVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CNotifications__CToastCollection* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CNotifications__CToastCollection* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CNotifications__CToastCollection* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CNotifications__CToastCollection* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CNotifications__CToastCollection* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CNotifications__CToastCollection* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* GetAt)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CNotifications__CToastCollection* This,
        UINT32 index,
        __x_ABI_CWindows_CUI_CNotifications_CIToastCollection** result);
    HRESULT (STDMETHODCALLTYPE* get_Size)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CNotifications__CToastCollection* This,
        UINT32* result);
    HRESULT (STDMETHODCALLTYPE* IndexOf)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CNotifications__CToastCollection* This,
        __x_ABI_CWindows_CUI_CNotifications_CIToastCollection* value,
        UINT32* index,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CNotifications__CToastCollection* This,
        UINT32 startIndex,
        UINT32 itemsLength,
        __x_ABI_CWindows_CUI_CNotifications_CIToastCollection** items,
        UINT32* result);

        END_INTERFACE
    } __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CNotifications__CToastCollectionVtbl;

    interface __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CNotifications__CToastCollection
    {
        CONST_VTBL struct __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CNotifications__CToastCollectionVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CNotifications__CToastCollection_INTERFACE_DEFINED__
    
typedef interface __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CNotifications__CToastCollection __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CNotifications__CToastCollection;

#if !defined(____x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CNotifications__CToastCollection_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CNotifications__CToastCollection_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CNotifications__CToastCollection __x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CNotifications__CToastCollection;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CNotifications__CToastCollection;

    typedef struct __x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CNotifications__CToastCollectionVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CNotifications__CToastCollection* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CNotifications__CToastCollection* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CNotifications__CToastCollection* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CNotifications__CToastCollection* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CNotifications__CToastCollection* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CNotifications__CToastCollection* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* put_Completed)(__x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CNotifications__CToastCollection* This,
        __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CNotifications__CToastCollection* handler);
    HRESULT (STDMETHODCALLTYPE* get_Completed)(__x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CNotifications__CToastCollection* This,
        __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CNotifications__CToastCollection** result);
    HRESULT (STDMETHODCALLTYPE* GetResults)(__x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CNotifications__CToastCollection* This,
        __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CNotifications__CToastCollection** result);

        END_INTERFACE
    } __x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CNotifications__CToastCollectionVtbl;

    interface __x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CNotifications__CToastCollection
    {
        CONST_VTBL struct __x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CNotifications__CToastCollectionVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CNotifications__CToastCollection_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CNotifications__CToastCollection_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CNotifications__CToastCollection_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CNotifications__CToastCollection __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CNotifications__CToastCollection;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CNotifications__CToastCollection;

    typedef struct __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CNotifications__CToastCollectionVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CNotifications__CToastCollection* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CNotifications__CToastCollection* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CNotifications__CToastCollection* This);
        HRESULT (STDMETHODCALLTYPE* Invoke)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CNotifications__CToastCollection* This,
        __x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CNotifications__CToastCollection* asyncInfo,
        enum __x_ABI_CWindows_CFoundation_CAsyncStatus asyncStatus);

        END_INTERFACE
    } __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CNotifications__CToastCollectionVtbl;

    interface __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CNotifications__CToastCollection
    {
        CONST_VTBL struct __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CNotifications__CToastCollectionVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CNotifications__CToastCollection_INTERFACE_DEFINED__
    
typedef interface __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CUI__CNotifications__CToastCollection __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CUI__CNotifications__CToastCollection;

#if !defined(____x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CUI__CNotifications__CToastCollection_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CUI__CNotifications__CToastCollection_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CUI__CNotifications__CToastCollection __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CUI__CNotifications__CToastCollection;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CUI__CNotifications__CToastCollection;

    typedef struct __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CUI__CNotifications__CToastCollectionVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CUI__CNotifications__CToastCollection* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CUI__CNotifications__CToastCollection* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CUI__CNotifications__CToastCollection* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CUI__CNotifications__CToastCollection* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CUI__CNotifications__CToastCollection* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CUI__CNotifications__CToastCollection* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* put_Completed)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CUI__CNotifications__CToastCollection* This,
        __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CUI__CNotifications__CToastCollection* handler);
    HRESULT (STDMETHODCALLTYPE* get_Completed)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CUI__CNotifications__CToastCollection* This,
        __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CUI__CNotifications__CToastCollection** result);
    HRESULT (STDMETHODCALLTYPE* GetResults)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CUI__CNotifications__CToastCollection* This,
        __x_ABI_CWindows_CUI_CNotifications_CIToastCollection** result);

        END_INTERFACE
    } __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CUI__CNotifications__CToastCollectionVtbl;

    interface __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CUI__CNotifications__CToastCollection
    {
        CONST_VTBL struct __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CUI__CNotifications__CToastCollectionVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CUI__CNotifications__CToastCollection_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CUI__CNotifications__CToastCollection_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CUI__CNotifications__CToastCollection_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CUI__CNotifications__CToastCollection __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CUI__CNotifications__CToastCollection;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CUI__CNotifications__CToastCollection;

    typedef struct __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CUI__CNotifications__CToastCollectionVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CUI__CNotifications__CToastCollection* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CUI__CNotifications__CToastCollection* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CUI__CNotifications__CToastCollection* This);
        HRESULT (STDMETHODCALLTYPE* Invoke)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CUI__CNotifications__CToastCollection* This,
        __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CUI__CNotifications__CToastCollection* asyncInfo,
        enum __x_ABI_CWindows_CFoundation_CAsyncStatus asyncStatus);

        END_INTERFACE
    } __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CUI__CNotifications__CToastCollectionVtbl;

    interface __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CUI__CNotifications__CToastCollection
    {
        CONST_VTBL struct __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CUI__CNotifications__CToastCollectionVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CUI__CNotifications__CToastCollection_INTERFACE_DEFINED__
    
typedef interface __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CUI__CNotifications__CToastNotificationHistory __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CUI__CNotifications__CToastNotificationHistory;

#if !defined(____x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CUI__CNotifications__CToastNotificationHistory_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CUI__CNotifications__CToastNotificationHistory_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CUI__CNotifications__CToastNotificationHistory __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CUI__CNotifications__CToastNotificationHistory;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CUI__CNotifications__CToastNotificationHistory;

    typedef struct __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CUI__CNotifications__CToastNotificationHistoryVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CUI__CNotifications__CToastNotificationHistory* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CUI__CNotifications__CToastNotificationHistory* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CUI__CNotifications__CToastNotificationHistory* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CUI__CNotifications__CToastNotificationHistory* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CUI__CNotifications__CToastNotificationHistory* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CUI__CNotifications__CToastNotificationHistory* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* put_Completed)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CUI__CNotifications__CToastNotificationHistory* This,
        __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CUI__CNotifications__CToastNotificationHistory* handler);
    HRESULT (STDMETHODCALLTYPE* get_Completed)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CUI__CNotifications__CToastNotificationHistory* This,
        __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CUI__CNotifications__CToastNotificationHistory** result);
    HRESULT (STDMETHODCALLTYPE* GetResults)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CUI__CNotifications__CToastNotificationHistory* This,
        __x_ABI_CWindows_CUI_CNotifications_CIToastNotificationHistory** result);

        END_INTERFACE
    } __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CUI__CNotifications__CToastNotificationHistoryVtbl;

    interface __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CUI__CNotifications__CToastNotificationHistory
    {
        CONST_VTBL struct __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CUI__CNotifications__CToastNotificationHistoryVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CUI__CNotifications__CToastNotificationHistory_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CUI__CNotifications__CToastNotificationHistory_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CUI__CNotifications__CToastNotificationHistory_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CUI__CNotifications__CToastNotificationHistory __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CUI__CNotifications__CToastNotificationHistory;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CUI__CNotifications__CToastNotificationHistory;

    typedef struct __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CUI__CNotifications__CToastNotificationHistoryVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CUI__CNotifications__CToastNotificationHistory* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CUI__CNotifications__CToastNotificationHistory* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CUI__CNotifications__CToastNotificationHistory* This);
        HRESULT (STDMETHODCALLTYPE* Invoke)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CUI__CNotifications__CToastNotificationHistory* This,
        __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CUI__CNotifications__CToastNotificationHistory* asyncInfo,
        enum __x_ABI_CWindows_CFoundation_CAsyncStatus asyncStatus);

        END_INTERFACE
    } __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CUI__CNotifications__CToastNotificationHistoryVtbl;

    interface __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CUI__CNotifications__CToastNotificationHistory
    {
        CONST_VTBL struct __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CUI__CNotifications__CToastNotificationHistoryVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CUI__CNotifications__CToastNotificationHistory_INTERFACE_DEFINED__
    
typedef interface __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CUI__CNotifications__CToastNotifier __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CUI__CNotifications__CToastNotifier;

#if !defined(____x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CUI__CNotifications__CToastNotifier_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CUI__CNotifications__CToastNotifier_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CUI__CNotifications__CToastNotifier __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CUI__CNotifications__CToastNotifier;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CUI__CNotifications__CToastNotifier;

    typedef struct __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CUI__CNotifications__CToastNotifierVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CUI__CNotifications__CToastNotifier* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CUI__CNotifications__CToastNotifier* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CUI__CNotifications__CToastNotifier* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CUI__CNotifications__CToastNotifier* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CUI__CNotifications__CToastNotifier* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CUI__CNotifications__CToastNotifier* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* put_Completed)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CUI__CNotifications__CToastNotifier* This,
        __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CUI__CNotifications__CToastNotifier* handler);
    HRESULT (STDMETHODCALLTYPE* get_Completed)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CUI__CNotifications__CToastNotifier* This,
        __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CUI__CNotifications__CToastNotifier** result);
    HRESULT (STDMETHODCALLTYPE* GetResults)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CUI__CNotifications__CToastNotifier* This,
        __x_ABI_CWindows_CUI_CNotifications_CIToastNotifier** result);

        END_INTERFACE
    } __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CUI__CNotifications__CToastNotifierVtbl;

    interface __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CUI__CNotifications__CToastNotifier
    {
        CONST_VTBL struct __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CUI__CNotifications__CToastNotifierVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CUI__CNotifications__CToastNotifier_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CUI__CNotifications__CToastNotifier_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CUI__CNotifications__CToastNotifier_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CUI__CNotifications__CToastNotifier __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CUI__CNotifications__CToastNotifier;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CUI__CNotifications__CToastNotifier;

    typedef struct __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CUI__CNotifications__CToastNotifierVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CUI__CNotifications__CToastNotifier* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CUI__CNotifications__CToastNotifier* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CUI__CNotifications__CToastNotifier* This);
        HRESULT (STDMETHODCALLTYPE* Invoke)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CUI__CNotifications__CToastNotifier* This,
        __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CUI__CNotifications__CToastNotifier* asyncInfo,
        enum __x_ABI_CWindows_CFoundation_CAsyncStatus asyncStatus);

        END_INTERFACE
    } __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CUI__CNotifications__CToastNotifierVtbl;

    interface __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CUI__CNotifications__CToastNotifier
    {
        CONST_VTBL struct __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CUI__CNotifications__CToastNotifierVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CUI__CNotifications__CToastNotifier_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIKeyValuePair_2_HSTRING_HSTRING_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIKeyValuePair_2_HSTRING_HSTRING_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIKeyValuePair_2_HSTRING_HSTRING __x_ABI_C__FIKeyValuePair_2_HSTRING_HSTRING;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIKeyValuePair_2_HSTRING_HSTRING;

    typedef struct __x_ABI_C__FIKeyValuePair_2_HSTRING_HSTRINGVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIKeyValuePair_2_HSTRING_HSTRING* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIKeyValuePair_2_HSTRING_HSTRING* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIKeyValuePair_2_HSTRING_HSTRING* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIKeyValuePair_2_HSTRING_HSTRING* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIKeyValuePair_2_HSTRING_HSTRING* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIKeyValuePair_2_HSTRING_HSTRING* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Key)(__x_ABI_C__FIKeyValuePair_2_HSTRING_HSTRING* This,
        HSTRING* result);
    HRESULT (STDMETHODCALLTYPE* get_Value)(__x_ABI_C__FIKeyValuePair_2_HSTRING_HSTRING* This,
        HSTRING* result);

        END_INTERFACE
    } __x_ABI_C__FIKeyValuePair_2_HSTRING_HSTRINGVtbl;

    interface __x_ABI_C__FIKeyValuePair_2_HSTRING_HSTRING
    {
        CONST_VTBL struct __x_ABI_C__FIKeyValuePair_2_HSTRING_HSTRINGVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIKeyValuePair_2_HSTRING_HSTRING_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2_HSTRING_HSTRING_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2_HSTRING_HSTRING_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2_HSTRING_HSTRING __x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2_HSTRING_HSTRING;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2_HSTRING_HSTRING;

    typedef struct __x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2_HSTRING_HSTRINGVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2_HSTRING_HSTRING* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2_HSTRING_HSTRING* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2_HSTRING_HSTRING* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2_HSTRING_HSTRING* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2_HSTRING_HSTRING* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2_HSTRING_HSTRING* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Current)(__x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2_HSTRING_HSTRING* This,
        __x_ABI_C__FIKeyValuePair_2_HSTRING_HSTRING** result);
    HRESULT (STDMETHODCALLTYPE* get_HasCurrent)(__x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2_HSTRING_HSTRING* This,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* MoveNext)(__x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2_HSTRING_HSTRING* This,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2_HSTRING_HSTRING* This,
        UINT32 itemsLength,
        __x_ABI_C__FIKeyValuePair_2_HSTRING_HSTRING** items,
        UINT32* result);

        END_INTERFACE
    } __x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2_HSTRING_HSTRINGVtbl;

    interface __x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2_HSTRING_HSTRING
    {
        CONST_VTBL struct __x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2_HSTRING_HSTRINGVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2_HSTRING_HSTRING_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIIterable_1___x_ABI_C__FIKeyValuePair_2_HSTRING_HSTRING_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIIterable_1___x_ABI_C__FIKeyValuePair_2_HSTRING_HSTRING_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIIterable_1___x_ABI_C__FIKeyValuePair_2_HSTRING_HSTRING __x_ABI_C__FIIterable_1___x_ABI_C__FIKeyValuePair_2_HSTRING_HSTRING;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIIterable_1___x_ABI_C__FIKeyValuePair_2_HSTRING_HSTRING;

    typedef struct __x_ABI_C__FIIterable_1___x_ABI_C__FIKeyValuePair_2_HSTRING_HSTRINGVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIIterable_1___x_ABI_C__FIKeyValuePair_2_HSTRING_HSTRING* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIIterable_1___x_ABI_C__FIKeyValuePair_2_HSTRING_HSTRING* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIIterable_1___x_ABI_C__FIKeyValuePair_2_HSTRING_HSTRING* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIIterable_1___x_ABI_C__FIKeyValuePair_2_HSTRING_HSTRING* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIIterable_1___x_ABI_C__FIKeyValuePair_2_HSTRING_HSTRING* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIIterable_1___x_ABI_C__FIKeyValuePair_2_HSTRING_HSTRING* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* First)(__x_ABI_C__FIIterable_1___x_ABI_C__FIKeyValuePair_2_HSTRING_HSTRING* This,
        __x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2_HSTRING_HSTRING** result);

        END_INTERFACE
    } __x_ABI_C__FIIterable_1___x_ABI_C__FIKeyValuePair_2_HSTRING_HSTRINGVtbl;

    interface __x_ABI_C__FIIterable_1___x_ABI_C__FIKeyValuePair_2_HSTRING_HSTRING
    {
        CONST_VTBL struct __x_ABI_C__FIIterable_1___x_ABI_C__FIKeyValuePair_2_HSTRING_HSTRINGVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIIterable_1___x_ABI_C__FIKeyValuePair_2_HSTRING_HSTRING_INTERFACE_DEFINED__
    
#ifndef ____x_ABI_CWindows_CFoundation_CIUriRuntimeClass_FWD_DEFINED__
#define ____x_ABI_CWindows_CFoundation_CIUriRuntimeClass_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CFoundation_CIUriRuntimeClass __x_ABI_CWindows_CFoundation_CIUriRuntimeClass;

#endif // ____x_ABI_CWindows_CFoundation_CIUriRuntimeClass_FWD_DEFINED__

#if !defined(____x_ABI_C__FIIterator_1___x_ABI_CWindows__CFoundation__CUri_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIIterator_1___x_ABI_CWindows__CFoundation__CUri_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIIterator_1___x_ABI_CWindows__CFoundation__CUri __x_ABI_C__FIIterator_1___x_ABI_CWindows__CFoundation__CUri;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIIterator_1___x_ABI_CWindows__CFoundation__CUri;

    typedef struct __x_ABI_C__FIIterator_1___x_ABI_CWindows__CFoundation__CUriVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CFoundation__CUri* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CFoundation__CUri* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CFoundation__CUri* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CFoundation__CUri* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CFoundation__CUri* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CFoundation__CUri* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Current)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CFoundation__CUri* This,
        __x_ABI_CWindows_CFoundation_CIUriRuntimeClass** result);
    HRESULT (STDMETHODCALLTYPE* get_HasCurrent)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CFoundation__CUri* This,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* MoveNext)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CFoundation__CUri* This,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CFoundation__CUri* This,
        UINT32 itemsLength,
        __x_ABI_CWindows_CFoundation_CIUriRuntimeClass** items,
        UINT32* result);

        END_INTERFACE
    } __x_ABI_C__FIIterator_1___x_ABI_CWindows__CFoundation__CUriVtbl;

    interface __x_ABI_C__FIIterator_1___x_ABI_CWindows__CFoundation__CUri
    {
        CONST_VTBL struct __x_ABI_C__FIIterator_1___x_ABI_CWindows__CFoundation__CUriVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIIterator_1___x_ABI_CWindows__CFoundation__CUri_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIIterable_1___x_ABI_CWindows__CFoundation__CUri_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIIterable_1___x_ABI_CWindows__CFoundation__CUri_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIIterable_1___x_ABI_CWindows__CFoundation__CUri __x_ABI_C__FIIterable_1___x_ABI_CWindows__CFoundation__CUri;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIIterable_1___x_ABI_CWindows__CFoundation__CUri;

    typedef struct __x_ABI_C__FIIterable_1___x_ABI_CWindows__CFoundation__CUriVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CFoundation__CUri* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CFoundation__CUri* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CFoundation__CUri* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CFoundation__CUri* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CFoundation__CUri* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CFoundation__CUri* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* First)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CFoundation__CUri* This,
        __x_ABI_C__FIIterator_1___x_ABI_CWindows__CFoundation__CUri** result);

        END_INTERFACE
    } __x_ABI_C__FIIterable_1___x_ABI_CWindows__CFoundation__CUriVtbl;

    interface __x_ABI_C__FIIterable_1___x_ABI_CWindows__CFoundation__CUri
    {
        CONST_VTBL struct __x_ABI_C__FIIterable_1___x_ABI_CWindows__CFoundation__CUriVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIIterable_1___x_ABI_CWindows__CFoundation__CUri_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CNotifications__CAdaptiveNotificationText_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CNotifications__CAdaptiveNotificationText_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CNotifications__CAdaptiveNotificationText __x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CNotifications__CAdaptiveNotificationText;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CNotifications__CAdaptiveNotificationText;

    typedef struct __x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CNotifications__CAdaptiveNotificationTextVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CNotifications__CAdaptiveNotificationText* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CNotifications__CAdaptiveNotificationText* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CNotifications__CAdaptiveNotificationText* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CNotifications__CAdaptiveNotificationText* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CNotifications__CAdaptiveNotificationText* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CNotifications__CAdaptiveNotificationText* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Current)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CNotifications__CAdaptiveNotificationText* This,
        __x_ABI_CWindows_CUI_CNotifications_CIAdaptiveNotificationText** result);
    HRESULT (STDMETHODCALLTYPE* get_HasCurrent)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CNotifications__CAdaptiveNotificationText* This,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* MoveNext)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CNotifications__CAdaptiveNotificationText* This,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CNotifications__CAdaptiveNotificationText* This,
        UINT32 itemsLength,
        __x_ABI_CWindows_CUI_CNotifications_CIAdaptiveNotificationText** items,
        UINT32* result);

        END_INTERFACE
    } __x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CNotifications__CAdaptiveNotificationTextVtbl;

    interface __x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CNotifications__CAdaptiveNotificationText
    {
        CONST_VTBL struct __x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CNotifications__CAdaptiveNotificationTextVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CNotifications__CAdaptiveNotificationText_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIIterable_1___x_ABI_CWindows__CUI__CNotifications__CAdaptiveNotificationText_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIIterable_1___x_ABI_CWindows__CUI__CNotifications__CAdaptiveNotificationText_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIIterable_1___x_ABI_CWindows__CUI__CNotifications__CAdaptiveNotificationText __x_ABI_C__FIIterable_1___x_ABI_CWindows__CUI__CNotifications__CAdaptiveNotificationText;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIIterable_1___x_ABI_CWindows__CUI__CNotifications__CAdaptiveNotificationText;

    typedef struct __x_ABI_C__FIIterable_1___x_ABI_CWindows__CUI__CNotifications__CAdaptiveNotificationTextVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CUI__CNotifications__CAdaptiveNotificationText* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CUI__CNotifications__CAdaptiveNotificationText* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CUI__CNotifications__CAdaptiveNotificationText* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CUI__CNotifications__CAdaptiveNotificationText* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CUI__CNotifications__CAdaptiveNotificationText* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CUI__CNotifications__CAdaptiveNotificationText* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* First)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CUI__CNotifications__CAdaptiveNotificationText* This,
        __x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CNotifications__CAdaptiveNotificationText** result);

        END_INTERFACE
    } __x_ABI_C__FIIterable_1___x_ABI_CWindows__CUI__CNotifications__CAdaptiveNotificationTextVtbl;

    interface __x_ABI_C__FIIterable_1___x_ABI_CWindows__CUI__CNotifications__CAdaptiveNotificationText
    {
        CONST_VTBL struct __x_ABI_C__FIIterable_1___x_ABI_CWindows__CUI__CNotifications__CAdaptiveNotificationTextVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIIterable_1___x_ABI_CWindows__CUI__CNotifications__CAdaptiveNotificationText_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CNotifications__CNotificationBinding_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CNotifications__CNotificationBinding_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CNotifications__CNotificationBinding __x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CNotifications__CNotificationBinding;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CNotifications__CNotificationBinding;

    typedef struct __x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CNotifications__CNotificationBindingVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CNotifications__CNotificationBinding* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CNotifications__CNotificationBinding* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CNotifications__CNotificationBinding* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CNotifications__CNotificationBinding* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CNotifications__CNotificationBinding* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CNotifications__CNotificationBinding* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Current)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CNotifications__CNotificationBinding* This,
        __x_ABI_CWindows_CUI_CNotifications_CINotificationBinding** result);
    HRESULT (STDMETHODCALLTYPE* get_HasCurrent)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CNotifications__CNotificationBinding* This,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* MoveNext)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CNotifications__CNotificationBinding* This,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CNotifications__CNotificationBinding* This,
        UINT32 itemsLength,
        __x_ABI_CWindows_CUI_CNotifications_CINotificationBinding** items,
        UINT32* result);

        END_INTERFACE
    } __x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CNotifications__CNotificationBindingVtbl;

    interface __x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CNotifications__CNotificationBinding
    {
        CONST_VTBL struct __x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CNotifications__CNotificationBindingVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CNotifications__CNotificationBinding_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIIterable_1___x_ABI_CWindows__CUI__CNotifications__CNotificationBinding_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIIterable_1___x_ABI_CWindows__CUI__CNotifications__CNotificationBinding_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIIterable_1___x_ABI_CWindows__CUI__CNotifications__CNotificationBinding __x_ABI_C__FIIterable_1___x_ABI_CWindows__CUI__CNotifications__CNotificationBinding;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIIterable_1___x_ABI_CWindows__CUI__CNotifications__CNotificationBinding;

    typedef struct __x_ABI_C__FIIterable_1___x_ABI_CWindows__CUI__CNotifications__CNotificationBindingVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CUI__CNotifications__CNotificationBinding* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CUI__CNotifications__CNotificationBinding* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CUI__CNotifications__CNotificationBinding* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CUI__CNotifications__CNotificationBinding* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CUI__CNotifications__CNotificationBinding* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CUI__CNotifications__CNotificationBinding* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* First)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CUI__CNotifications__CNotificationBinding* This,
        __x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CNotifications__CNotificationBinding** result);

        END_INTERFACE
    } __x_ABI_C__FIIterable_1___x_ABI_CWindows__CUI__CNotifications__CNotificationBindingVtbl;

    interface __x_ABI_C__FIIterable_1___x_ABI_CWindows__CUI__CNotifications__CNotificationBinding
    {
        CONST_VTBL struct __x_ABI_C__FIIterable_1___x_ABI_CWindows__CUI__CNotifications__CNotificationBindingVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIIterable_1___x_ABI_CWindows__CUI__CNotifications__CNotificationBinding_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CNotifications__CScheduledTileNotification_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CNotifications__CScheduledTileNotification_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CNotifications__CScheduledTileNotification __x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CNotifications__CScheduledTileNotification;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CNotifications__CScheduledTileNotification;

    typedef struct __x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CNotifications__CScheduledTileNotificationVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CNotifications__CScheduledTileNotification* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CNotifications__CScheduledTileNotification* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CNotifications__CScheduledTileNotification* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CNotifications__CScheduledTileNotification* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CNotifications__CScheduledTileNotification* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CNotifications__CScheduledTileNotification* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Current)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CNotifications__CScheduledTileNotification* This,
        __x_ABI_CWindows_CUI_CNotifications_CIScheduledTileNotification** result);
    HRESULT (STDMETHODCALLTYPE* get_HasCurrent)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CNotifications__CScheduledTileNotification* This,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* MoveNext)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CNotifications__CScheduledTileNotification* This,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CNotifications__CScheduledTileNotification* This,
        UINT32 itemsLength,
        __x_ABI_CWindows_CUI_CNotifications_CIScheduledTileNotification** items,
        UINT32* result);

        END_INTERFACE
    } __x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CNotifications__CScheduledTileNotificationVtbl;

    interface __x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CNotifications__CScheduledTileNotification
    {
        CONST_VTBL struct __x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CNotifications__CScheduledTileNotificationVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CNotifications__CScheduledTileNotification_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIIterable_1___x_ABI_CWindows__CUI__CNotifications__CScheduledTileNotification_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIIterable_1___x_ABI_CWindows__CUI__CNotifications__CScheduledTileNotification_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIIterable_1___x_ABI_CWindows__CUI__CNotifications__CScheduledTileNotification __x_ABI_C__FIIterable_1___x_ABI_CWindows__CUI__CNotifications__CScheduledTileNotification;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIIterable_1___x_ABI_CWindows__CUI__CNotifications__CScheduledTileNotification;

    typedef struct __x_ABI_C__FIIterable_1___x_ABI_CWindows__CUI__CNotifications__CScheduledTileNotificationVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CUI__CNotifications__CScheduledTileNotification* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CUI__CNotifications__CScheduledTileNotification* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CUI__CNotifications__CScheduledTileNotification* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CUI__CNotifications__CScheduledTileNotification* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CUI__CNotifications__CScheduledTileNotification* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CUI__CNotifications__CScheduledTileNotification* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* First)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CUI__CNotifications__CScheduledTileNotification* This,
        __x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CNotifications__CScheduledTileNotification** result);

        END_INTERFACE
    } __x_ABI_C__FIIterable_1___x_ABI_CWindows__CUI__CNotifications__CScheduledTileNotificationVtbl;

    interface __x_ABI_C__FIIterable_1___x_ABI_CWindows__CUI__CNotifications__CScheduledTileNotification
    {
        CONST_VTBL struct __x_ABI_C__FIIterable_1___x_ABI_CWindows__CUI__CNotifications__CScheduledTileNotificationVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIIterable_1___x_ABI_CWindows__CUI__CNotifications__CScheduledTileNotification_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CNotifications__CScheduledToastNotification_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CNotifications__CScheduledToastNotification_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CNotifications__CScheduledToastNotification __x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CNotifications__CScheduledToastNotification;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CNotifications__CScheduledToastNotification;

    typedef struct __x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CNotifications__CScheduledToastNotificationVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CNotifications__CScheduledToastNotification* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CNotifications__CScheduledToastNotification* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CNotifications__CScheduledToastNotification* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CNotifications__CScheduledToastNotification* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CNotifications__CScheduledToastNotification* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CNotifications__CScheduledToastNotification* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Current)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CNotifications__CScheduledToastNotification* This,
        __x_ABI_CWindows_CUI_CNotifications_CIScheduledToastNotification** result);
    HRESULT (STDMETHODCALLTYPE* get_HasCurrent)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CNotifications__CScheduledToastNotification* This,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* MoveNext)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CNotifications__CScheduledToastNotification* This,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CNotifications__CScheduledToastNotification* This,
        UINT32 itemsLength,
        __x_ABI_CWindows_CUI_CNotifications_CIScheduledToastNotification** items,
        UINT32* result);

        END_INTERFACE
    } __x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CNotifications__CScheduledToastNotificationVtbl;

    interface __x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CNotifications__CScheduledToastNotification
    {
        CONST_VTBL struct __x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CNotifications__CScheduledToastNotificationVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CNotifications__CScheduledToastNotification_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIIterable_1___x_ABI_CWindows__CUI__CNotifications__CScheduledToastNotification_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIIterable_1___x_ABI_CWindows__CUI__CNotifications__CScheduledToastNotification_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIIterable_1___x_ABI_CWindows__CUI__CNotifications__CScheduledToastNotification __x_ABI_C__FIIterable_1___x_ABI_CWindows__CUI__CNotifications__CScheduledToastNotification;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIIterable_1___x_ABI_CWindows__CUI__CNotifications__CScheduledToastNotification;

    typedef struct __x_ABI_C__FIIterable_1___x_ABI_CWindows__CUI__CNotifications__CScheduledToastNotificationVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CUI__CNotifications__CScheduledToastNotification* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CUI__CNotifications__CScheduledToastNotification* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CUI__CNotifications__CScheduledToastNotification* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CUI__CNotifications__CScheduledToastNotification* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CUI__CNotifications__CScheduledToastNotification* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CUI__CNotifications__CScheduledToastNotification* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* First)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CUI__CNotifications__CScheduledToastNotification* This,
        __x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CNotifications__CScheduledToastNotification** result);

        END_INTERFACE
    } __x_ABI_C__FIIterable_1___x_ABI_CWindows__CUI__CNotifications__CScheduledToastNotificationVtbl;

    interface __x_ABI_C__FIIterable_1___x_ABI_CWindows__CUI__CNotifications__CScheduledToastNotification
    {
        CONST_VTBL struct __x_ABI_C__FIIterable_1___x_ABI_CWindows__CUI__CNotifications__CScheduledToastNotificationVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIIterable_1___x_ABI_CWindows__CUI__CNotifications__CScheduledToastNotification_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CNotifications__CToastNotification_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CNotifications__CToastNotification_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CNotifications__CToastNotification __x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CNotifications__CToastNotification;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CNotifications__CToastNotification;

    typedef struct __x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CNotifications__CToastNotificationVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CNotifications__CToastNotification* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CNotifications__CToastNotification* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CNotifications__CToastNotification* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CNotifications__CToastNotification* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CNotifications__CToastNotification* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CNotifications__CToastNotification* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Current)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CNotifications__CToastNotification* This,
        __x_ABI_CWindows_CUI_CNotifications_CIToastNotification** result);
    HRESULT (STDMETHODCALLTYPE* get_HasCurrent)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CNotifications__CToastNotification* This,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* MoveNext)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CNotifications__CToastNotification* This,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CNotifications__CToastNotification* This,
        UINT32 itemsLength,
        __x_ABI_CWindows_CUI_CNotifications_CIToastNotification** items,
        UINT32* result);

        END_INTERFACE
    } __x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CNotifications__CToastNotificationVtbl;

    interface __x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CNotifications__CToastNotification
    {
        CONST_VTBL struct __x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CNotifications__CToastNotificationVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CNotifications__CToastNotification_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIIterable_1___x_ABI_CWindows__CUI__CNotifications__CToastNotification_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIIterable_1___x_ABI_CWindows__CUI__CNotifications__CToastNotification_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIIterable_1___x_ABI_CWindows__CUI__CNotifications__CToastNotification __x_ABI_C__FIIterable_1___x_ABI_CWindows__CUI__CNotifications__CToastNotification;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIIterable_1___x_ABI_CWindows__CUI__CNotifications__CToastNotification;

    typedef struct __x_ABI_C__FIIterable_1___x_ABI_CWindows__CUI__CNotifications__CToastNotificationVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CUI__CNotifications__CToastNotification* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CUI__CNotifications__CToastNotification* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CUI__CNotifications__CToastNotification* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CUI__CNotifications__CToastNotification* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CUI__CNotifications__CToastNotification* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CUI__CNotifications__CToastNotification* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* First)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CUI__CNotifications__CToastNotification* This,
        __x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CNotifications__CToastNotification** result);

        END_INTERFACE
    } __x_ABI_C__FIIterable_1___x_ABI_CWindows__CUI__CNotifications__CToastNotificationVtbl;

    interface __x_ABI_C__FIIterable_1___x_ABI_CWindows__CUI__CNotifications__CToastNotification
    {
        CONST_VTBL struct __x_ABI_C__FIIterable_1___x_ABI_CWindows__CUI__CNotifications__CToastNotificationVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIIterable_1___x_ABI_CWindows__CUI__CNotifications__CToastNotification_INTERFACE_DEFINED__
    
typedef interface __x_ABI_C__FIMapView_2_HSTRING_HSTRING __x_ABI_C__FIMapView_2_HSTRING_HSTRING;

#if !defined(____x_ABI_C__FIMapView_2_HSTRING_HSTRING_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIMapView_2_HSTRING_HSTRING_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIMapView_2_HSTRING_HSTRING __x_ABI_C__FIMapView_2_HSTRING_HSTRING;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIMapView_2_HSTRING_HSTRING;

    typedef struct __x_ABI_C__FIMapView_2_HSTRING_HSTRINGVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIMapView_2_HSTRING_HSTRING* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIMapView_2_HSTRING_HSTRING* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIMapView_2_HSTRING_HSTRING* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIMapView_2_HSTRING_HSTRING* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIMapView_2_HSTRING_HSTRING* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIMapView_2_HSTRING_HSTRING* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* Lookup)(__x_ABI_C__FIMapView_2_HSTRING_HSTRING* This,
        HSTRING key,
        HSTRING* result);
    HRESULT (STDMETHODCALLTYPE* get_Size)(__x_ABI_C__FIMapView_2_HSTRING_HSTRING* This,
        UINT32* result);
    HRESULT (STDMETHODCALLTYPE* HasKey)(__x_ABI_C__FIMapView_2_HSTRING_HSTRING* This,
        HSTRING key,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* Split)(__x_ABI_C__FIMapView_2_HSTRING_HSTRING* This,
        __x_ABI_C__FIMapView_2_HSTRING_HSTRING** first,
        __x_ABI_C__FIMapView_2_HSTRING_HSTRING** second);

        END_INTERFACE
    } __x_ABI_C__FIMapView_2_HSTRING_HSTRINGVtbl;

    interface __x_ABI_C__FIMapView_2_HSTRING_HSTRING
    {
        CONST_VTBL struct __x_ABI_C__FIMapView_2_HSTRING_HSTRINGVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIMapView_2_HSTRING_HSTRING_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIMap_2_HSTRING_HSTRING_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIMap_2_HSTRING_HSTRING_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIMap_2_HSTRING_HSTRING __x_ABI_C__FIMap_2_HSTRING_HSTRING;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIMap_2_HSTRING_HSTRING;

    typedef struct __x_ABI_C__FIMap_2_HSTRING_HSTRINGVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIMap_2_HSTRING_HSTRING* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIMap_2_HSTRING_HSTRING* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIMap_2_HSTRING_HSTRING* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIMap_2_HSTRING_HSTRING* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIMap_2_HSTRING_HSTRING* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIMap_2_HSTRING_HSTRING* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* Lookup)(__x_ABI_C__FIMap_2_HSTRING_HSTRING* This,
        HSTRING key,
        HSTRING* result);
    HRESULT (STDMETHODCALLTYPE* get_Size)(__x_ABI_C__FIMap_2_HSTRING_HSTRING* This,
        UINT32* result);
    HRESULT (STDMETHODCALLTYPE* HasKey)(__x_ABI_C__FIMap_2_HSTRING_HSTRING* This,
        HSTRING key,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* GetView)(__x_ABI_C__FIMap_2_HSTRING_HSTRING* This,
        __x_ABI_C__FIMapView_2_HSTRING_HSTRING** result);
    HRESULT (STDMETHODCALLTYPE* Insert)(__x_ABI_C__FIMap_2_HSTRING_HSTRING* This,
        HSTRING key,
        HSTRING value,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* Remove)(__x_ABI_C__FIMap_2_HSTRING_HSTRING* This,
        HSTRING key);
    HRESULT (STDMETHODCALLTYPE* Clear)(__x_ABI_C__FIMap_2_HSTRING_HSTRING* This);

        END_INTERFACE
    } __x_ABI_C__FIMap_2_HSTRING_HSTRINGVtbl;

    interface __x_ABI_C__FIMap_2_HSTRING_HSTRING
    {
        CONST_VTBL struct __x_ABI_C__FIMap_2_HSTRING_HSTRINGVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIMap_2_HSTRING_HSTRING_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CNotifications__CAdaptiveNotificationText_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CNotifications__CAdaptiveNotificationText_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CNotifications__CAdaptiveNotificationText __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CNotifications__CAdaptiveNotificationText;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CNotifications__CAdaptiveNotificationText;

    typedef struct __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CNotifications__CAdaptiveNotificationTextVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CNotifications__CAdaptiveNotificationText* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CNotifications__CAdaptiveNotificationText* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CNotifications__CAdaptiveNotificationText* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CNotifications__CAdaptiveNotificationText* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CNotifications__CAdaptiveNotificationText* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CNotifications__CAdaptiveNotificationText* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* GetAt)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CNotifications__CAdaptiveNotificationText* This,
        UINT32 index,
        __x_ABI_CWindows_CUI_CNotifications_CIAdaptiveNotificationText** result);
    HRESULT (STDMETHODCALLTYPE* get_Size)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CNotifications__CAdaptiveNotificationText* This,
        UINT32* result);
    HRESULT (STDMETHODCALLTYPE* IndexOf)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CNotifications__CAdaptiveNotificationText* This,
        __x_ABI_CWindows_CUI_CNotifications_CIAdaptiveNotificationText* value,
        UINT32* index,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CNotifications__CAdaptiveNotificationText* This,
        UINT32 startIndex,
        UINT32 itemsLength,
        __x_ABI_CWindows_CUI_CNotifications_CIAdaptiveNotificationText** items,
        UINT32* result);

        END_INTERFACE
    } __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CNotifications__CAdaptiveNotificationTextVtbl;

    interface __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CNotifications__CAdaptiveNotificationText
    {
        CONST_VTBL struct __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CNotifications__CAdaptiveNotificationTextVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CNotifications__CAdaptiveNotificationText_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CNotifications__CNotificationBinding_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CNotifications__CNotificationBinding_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CNotifications__CNotificationBinding __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CNotifications__CNotificationBinding;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CNotifications__CNotificationBinding;

    typedef struct __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CNotifications__CNotificationBindingVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CNotifications__CNotificationBinding* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CNotifications__CNotificationBinding* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CNotifications__CNotificationBinding* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CNotifications__CNotificationBinding* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CNotifications__CNotificationBinding* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CNotifications__CNotificationBinding* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* GetAt)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CNotifications__CNotificationBinding* This,
        UINT32 index,
        __x_ABI_CWindows_CUI_CNotifications_CINotificationBinding** result);
    HRESULT (STDMETHODCALLTYPE* get_Size)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CNotifications__CNotificationBinding* This,
        UINT32* result);
    HRESULT (STDMETHODCALLTYPE* IndexOf)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CNotifications__CNotificationBinding* This,
        __x_ABI_CWindows_CUI_CNotifications_CINotificationBinding* value,
        UINT32* index,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CNotifications__CNotificationBinding* This,
        UINT32 startIndex,
        UINT32 itemsLength,
        __x_ABI_CWindows_CUI_CNotifications_CINotificationBinding** items,
        UINT32* result);

        END_INTERFACE
    } __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CNotifications__CNotificationBindingVtbl;

    interface __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CNotifications__CNotificationBinding
    {
        CONST_VTBL struct __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CNotifications__CNotificationBindingVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CNotifications__CNotificationBinding_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CNotifications__CScheduledTileNotification_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CNotifications__CScheduledTileNotification_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CNotifications__CScheduledTileNotification __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CNotifications__CScheduledTileNotification;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CNotifications__CScheduledTileNotification;

    typedef struct __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CNotifications__CScheduledTileNotificationVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CNotifications__CScheduledTileNotification* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CNotifications__CScheduledTileNotification* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CNotifications__CScheduledTileNotification* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CNotifications__CScheduledTileNotification* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CNotifications__CScheduledTileNotification* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CNotifications__CScheduledTileNotification* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* GetAt)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CNotifications__CScheduledTileNotification* This,
        UINT32 index,
        __x_ABI_CWindows_CUI_CNotifications_CIScheduledTileNotification** result);
    HRESULT (STDMETHODCALLTYPE* get_Size)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CNotifications__CScheduledTileNotification* This,
        UINT32* result);
    HRESULT (STDMETHODCALLTYPE* IndexOf)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CNotifications__CScheduledTileNotification* This,
        __x_ABI_CWindows_CUI_CNotifications_CIScheduledTileNotification* value,
        UINT32* index,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CNotifications__CScheduledTileNotification* This,
        UINT32 startIndex,
        UINT32 itemsLength,
        __x_ABI_CWindows_CUI_CNotifications_CIScheduledTileNotification** items,
        UINT32* result);

        END_INTERFACE
    } __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CNotifications__CScheduledTileNotificationVtbl;

    interface __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CNotifications__CScheduledTileNotification
    {
        CONST_VTBL struct __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CNotifications__CScheduledTileNotificationVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CNotifications__CScheduledTileNotification_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CNotifications__CScheduledToastNotification_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CNotifications__CScheduledToastNotification_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CNotifications__CScheduledToastNotification __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CNotifications__CScheduledToastNotification;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CNotifications__CScheduledToastNotification;

    typedef struct __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CNotifications__CScheduledToastNotificationVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CNotifications__CScheduledToastNotification* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CNotifications__CScheduledToastNotification* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CNotifications__CScheduledToastNotification* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CNotifications__CScheduledToastNotification* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CNotifications__CScheduledToastNotification* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CNotifications__CScheduledToastNotification* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* GetAt)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CNotifications__CScheduledToastNotification* This,
        UINT32 index,
        __x_ABI_CWindows_CUI_CNotifications_CIScheduledToastNotification** result);
    HRESULT (STDMETHODCALLTYPE* get_Size)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CNotifications__CScheduledToastNotification* This,
        UINT32* result);
    HRESULT (STDMETHODCALLTYPE* IndexOf)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CNotifications__CScheduledToastNotification* This,
        __x_ABI_CWindows_CUI_CNotifications_CIScheduledToastNotification* value,
        UINT32* index,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CNotifications__CScheduledToastNotification* This,
        UINT32 startIndex,
        UINT32 itemsLength,
        __x_ABI_CWindows_CUI_CNotifications_CIScheduledToastNotification** items,
        UINT32* result);

        END_INTERFACE
    } __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CNotifications__CScheduledToastNotificationVtbl;

    interface __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CNotifications__CScheduledToastNotification
    {
        CONST_VTBL struct __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CNotifications__CScheduledToastNotificationVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CNotifications__CScheduledToastNotification_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CNotifications__CToastNotification_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CNotifications__CToastNotification_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CNotifications__CToastNotification __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CNotifications__CToastNotification;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CNotifications__CToastNotification;

    typedef struct __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CNotifications__CToastNotificationVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CNotifications__CToastNotification* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CNotifications__CToastNotification* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CNotifications__CToastNotification* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CNotifications__CToastNotification* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CNotifications__CToastNotification* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CNotifications__CToastNotification* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* GetAt)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CNotifications__CToastNotification* This,
        UINT32 index,
        __x_ABI_CWindows_CUI_CNotifications_CIToastNotification** result);
    HRESULT (STDMETHODCALLTYPE* get_Size)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CNotifications__CToastNotification* This,
        UINT32* result);
    HRESULT (STDMETHODCALLTYPE* IndexOf)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CNotifications__CToastNotification* This,
        __x_ABI_CWindows_CUI_CNotifications_CIToastNotification* value,
        UINT32* index,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CNotifications__CToastNotification* This,
        UINT32 startIndex,
        UINT32 itemsLength,
        __x_ABI_CWindows_CUI_CNotifications_CIToastNotification** items,
        UINT32* result);

        END_INTERFACE
    } __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CNotifications__CToastNotificationVtbl;

    interface __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CNotifications__CToastNotification
    {
        CONST_VTBL struct __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CNotifications__CToastNotificationVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CNotifications__CToastNotification_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CNotifications__CNotificationBinding_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CNotifications__CNotificationBinding_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CNotifications__CNotificationBinding __x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CNotifications__CNotificationBinding;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CNotifications__CNotificationBinding;

    typedef struct __x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CNotifications__CNotificationBindingVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CNotifications__CNotificationBinding* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CNotifications__CNotificationBinding* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CNotifications__CNotificationBinding* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CNotifications__CNotificationBinding* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CNotifications__CNotificationBinding* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CNotifications__CNotificationBinding* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* GetAt)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CNotifications__CNotificationBinding* This,
        UINT32 index,
        __x_ABI_CWindows_CUI_CNotifications_CINotificationBinding** result);
    HRESULT (STDMETHODCALLTYPE* get_Size)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CNotifications__CNotificationBinding* This,
        UINT32* result);
    HRESULT (STDMETHODCALLTYPE* GetView)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CNotifications__CNotificationBinding* This,
        __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CNotifications__CNotificationBinding** result);
    HRESULT (STDMETHODCALLTYPE* IndexOf)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CNotifications__CNotificationBinding* This,
        __x_ABI_CWindows_CUI_CNotifications_CINotificationBinding* value,
        UINT32* index,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* SetAt)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CNotifications__CNotificationBinding* This,
        UINT32 index,
        __x_ABI_CWindows_CUI_CNotifications_CINotificationBinding* value);
    HRESULT (STDMETHODCALLTYPE* InsertAt)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CNotifications__CNotificationBinding* This,
        UINT32 index,
        __x_ABI_CWindows_CUI_CNotifications_CINotificationBinding* value);
    HRESULT (STDMETHODCALLTYPE* RemoveAt)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CNotifications__CNotificationBinding* This,
        UINT32 index);
    HRESULT (STDMETHODCALLTYPE* Append)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CNotifications__CNotificationBinding* This,
        __x_ABI_CWindows_CUI_CNotifications_CINotificationBinding* value);
    HRESULT (STDMETHODCALLTYPE* RemoveAtEnd)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CNotifications__CNotificationBinding* This);
    HRESULT (STDMETHODCALLTYPE* Clear)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CNotifications__CNotificationBinding* This);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CNotifications__CNotificationBinding* This,
        UINT32 startIndex,
        UINT32 itemsLength,
        __x_ABI_CWindows_CUI_CNotifications_CINotificationBinding** items,
        UINT32* result);
    HRESULT (STDMETHODCALLTYPE* ReplaceAll)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CNotifications__CNotificationBinding* This,
        UINT32 itemsLength,
        __x_ABI_CWindows_CUI_CNotifications_CINotificationBinding** items);

        END_INTERFACE
    } __x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CNotifications__CNotificationBindingVtbl;

    interface __x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CNotifications__CNotificationBinding
    {
        CONST_VTBL struct __x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CNotifications__CNotificationBindingVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CNotifications__CNotificationBinding_INTERFACE_DEFINED__
    
typedef struct __x_ABI_CWindows_CFoundation_CDateTime __x_ABI_CWindows_CFoundation_CDateTime;

#if !defined(____x_ABI_C__FIReference_1___x_ABI_CWindows__CFoundation__CDateTime_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIReference_1___x_ABI_CWindows__CFoundation__CDateTime_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIReference_1___x_ABI_CWindows__CFoundation__CDateTime __x_ABI_C__FIReference_1___x_ABI_CWindows__CFoundation__CDateTime;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIReference_1___x_ABI_CWindows__CFoundation__CDateTime;

    typedef struct __x_ABI_C__FIReference_1___x_ABI_CWindows__CFoundation__CDateTimeVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIReference_1___x_ABI_CWindows__CFoundation__CDateTime* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIReference_1___x_ABI_CWindows__CFoundation__CDateTime* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIReference_1___x_ABI_CWindows__CFoundation__CDateTime* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIReference_1___x_ABI_CWindows__CFoundation__CDateTime* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIReference_1___x_ABI_CWindows__CFoundation__CDateTime* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIReference_1___x_ABI_CWindows__CFoundation__CDateTime* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Value)(__x_ABI_C__FIReference_1___x_ABI_CWindows__CFoundation__CDateTime* This,
        struct __x_ABI_CWindows_CFoundation_CDateTime* result);

        END_INTERFACE
    } __x_ABI_C__FIReference_1___x_ABI_CWindows__CFoundation__CDateTimeVtbl;

    interface __x_ABI_C__FIReference_1___x_ABI_CWindows__CFoundation__CDateTime
    {
        CONST_VTBL struct __x_ABI_C__FIReference_1___x_ABI_CWindows__CFoundation__CDateTimeVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIReference_1___x_ABI_CWindows__CFoundation__CDateTime_INTERFACE_DEFINED__
    
typedef struct __x_ABI_CWindows_CFoundation_CTimeSpan __x_ABI_CWindows_CFoundation_CTimeSpan;

#if !defined(____x_ABI_C__FIReference_1___x_ABI_CWindows__CFoundation__CTimeSpan_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIReference_1___x_ABI_CWindows__CFoundation__CTimeSpan_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIReference_1___x_ABI_CWindows__CFoundation__CTimeSpan __x_ABI_C__FIReference_1___x_ABI_CWindows__CFoundation__CTimeSpan;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIReference_1___x_ABI_CWindows__CFoundation__CTimeSpan;

    typedef struct __x_ABI_C__FIReference_1___x_ABI_CWindows__CFoundation__CTimeSpanVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIReference_1___x_ABI_CWindows__CFoundation__CTimeSpan* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIReference_1___x_ABI_CWindows__CFoundation__CTimeSpan* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIReference_1___x_ABI_CWindows__CFoundation__CTimeSpan* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIReference_1___x_ABI_CWindows__CFoundation__CTimeSpan* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIReference_1___x_ABI_CWindows__CFoundation__CTimeSpan* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIReference_1___x_ABI_CWindows__CFoundation__CTimeSpan* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Value)(__x_ABI_C__FIReference_1___x_ABI_CWindows__CFoundation__CTimeSpan* This,
        struct __x_ABI_CWindows_CFoundation_CTimeSpan* result);

        END_INTERFACE
    } __x_ABI_C__FIReference_1___x_ABI_CWindows__CFoundation__CTimeSpanVtbl;

    interface __x_ABI_C__FIReference_1___x_ABI_CWindows__CFoundation__CTimeSpan
    {
        CONST_VTBL struct __x_ABI_C__FIReference_1___x_ABI_CWindows__CFoundation__CTimeSpanVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIReference_1___x_ABI_CWindows__CFoundation__CTimeSpan_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CNotifications__CToastNotification_IInspectable_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CNotifications__CToastNotification_IInspectable_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CNotifications__CToastNotification_IInspectable __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CNotifications__CToastNotification_IInspectable;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CNotifications__CToastNotification_IInspectable;

    typedef struct __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CNotifications__CToastNotification_IInspectableVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CNotifications__CToastNotification_IInspectable* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CNotifications__CToastNotification_IInspectable* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CNotifications__CToastNotification_IInspectable* This);
        HRESULT (STDMETHODCALLTYPE* Invoke)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CNotifications__CToastNotification_IInspectable* This,
        __x_ABI_CWindows_CUI_CNotifications_CIToastNotification* sender,
        IInspectable* args);

        END_INTERFACE
    } __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CNotifications__CToastNotification_IInspectableVtbl;

    interface __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CNotifications__CToastNotification_IInspectable
    {
        CONST_VTBL struct __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CNotifications__CToastNotification_IInspectableVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CNotifications__CToastNotification_IInspectable_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CNotifications__CToastNotification___x_ABI_CWindows__CUI__CNotifications__CToastDismissedEventArgs_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CNotifications__CToastNotification___x_ABI_CWindows__CUI__CNotifications__CToastDismissedEventArgs_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CNotifications__CToastNotification___x_ABI_CWindows__CUI__CNotifications__CToastDismissedEventArgs __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CNotifications__CToastNotification___x_ABI_CWindows__CUI__CNotifications__CToastDismissedEventArgs;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CNotifications__CToastNotification___x_ABI_CWindows__CUI__CNotifications__CToastDismissedEventArgs;

    typedef struct __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CNotifications__CToastNotification___x_ABI_CWindows__CUI__CNotifications__CToastDismissedEventArgsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CNotifications__CToastNotification___x_ABI_CWindows__CUI__CNotifications__CToastDismissedEventArgs* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CNotifications__CToastNotification___x_ABI_CWindows__CUI__CNotifications__CToastDismissedEventArgs* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CNotifications__CToastNotification___x_ABI_CWindows__CUI__CNotifications__CToastDismissedEventArgs* This);
        HRESULT (STDMETHODCALLTYPE* Invoke)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CNotifications__CToastNotification___x_ABI_CWindows__CUI__CNotifications__CToastDismissedEventArgs* This,
        __x_ABI_CWindows_CUI_CNotifications_CIToastNotification* sender,
        __x_ABI_CWindows_CUI_CNotifications_CIToastDismissedEventArgs* args);

        END_INTERFACE
    } __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CNotifications__CToastNotification___x_ABI_CWindows__CUI__CNotifications__CToastDismissedEventArgsVtbl;

    interface __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CNotifications__CToastNotification___x_ABI_CWindows__CUI__CNotifications__CToastDismissedEventArgs
    {
        CONST_VTBL struct __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CNotifications__CToastNotification___x_ABI_CWindows__CUI__CNotifications__CToastDismissedEventArgsVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CNotifications__CToastNotification___x_ABI_CWindows__CUI__CNotifications__CToastDismissedEventArgs_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CNotifications__CToastNotification___x_ABI_CWindows__CUI__CNotifications__CToastFailedEventArgs_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CNotifications__CToastNotification___x_ABI_CWindows__CUI__CNotifications__CToastFailedEventArgs_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CNotifications__CToastNotification___x_ABI_CWindows__CUI__CNotifications__CToastFailedEventArgs __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CNotifications__CToastNotification___x_ABI_CWindows__CUI__CNotifications__CToastFailedEventArgs;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CNotifications__CToastNotification___x_ABI_CWindows__CUI__CNotifications__CToastFailedEventArgs;

    typedef struct __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CNotifications__CToastNotification___x_ABI_CWindows__CUI__CNotifications__CToastFailedEventArgsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CNotifications__CToastNotification___x_ABI_CWindows__CUI__CNotifications__CToastFailedEventArgs* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CNotifications__CToastNotification___x_ABI_CWindows__CUI__CNotifications__CToastFailedEventArgs* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CNotifications__CToastNotification___x_ABI_CWindows__CUI__CNotifications__CToastFailedEventArgs* This);
        HRESULT (STDMETHODCALLTYPE* Invoke)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CNotifications__CToastNotification___x_ABI_CWindows__CUI__CNotifications__CToastFailedEventArgs* This,
        __x_ABI_CWindows_CUI_CNotifications_CIToastNotification* sender,
        __x_ABI_CWindows_CUI_CNotifications_CIToastFailedEventArgs* args);

        END_INTERFACE
    } __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CNotifications__CToastNotification___x_ABI_CWindows__CUI__CNotifications__CToastFailedEventArgsVtbl;

    interface __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CNotifications__CToastNotification___x_ABI_CWindows__CUI__CNotifications__CToastFailedEventArgs
    {
        CONST_VTBL struct __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CNotifications__CToastNotification___x_ABI_CWindows__CUI__CNotifications__CToastFailedEventArgsVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CNotifications__CToastNotification___x_ABI_CWindows__CUI__CNotifications__CToastFailedEventArgs_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CNotifications__CToastNotifier___x_ABI_CWindows__CUI__CNotifications__CScheduledToastNotificationShowingEventArgs_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CNotifications__CToastNotifier___x_ABI_CWindows__CUI__CNotifications__CScheduledToastNotificationShowingEventArgs_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CNotifications__CToastNotifier___x_ABI_CWindows__CUI__CNotifications__CScheduledToastNotificationShowingEventArgs __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CNotifications__CToastNotifier___x_ABI_CWindows__CUI__CNotifications__CScheduledToastNotificationShowingEventArgs;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CNotifications__CToastNotifier___x_ABI_CWindows__CUI__CNotifications__CScheduledToastNotificationShowingEventArgs;

    typedef struct __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CNotifications__CToastNotifier___x_ABI_CWindows__CUI__CNotifications__CScheduledToastNotificationShowingEventArgsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CNotifications__CToastNotifier___x_ABI_CWindows__CUI__CNotifications__CScheduledToastNotificationShowingEventArgs* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CNotifications__CToastNotifier___x_ABI_CWindows__CUI__CNotifications__CScheduledToastNotificationShowingEventArgs* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CNotifications__CToastNotifier___x_ABI_CWindows__CUI__CNotifications__CScheduledToastNotificationShowingEventArgs* This);
        HRESULT (STDMETHODCALLTYPE* Invoke)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CNotifications__CToastNotifier___x_ABI_CWindows__CUI__CNotifications__CScheduledToastNotificationShowingEventArgs* This,
        __x_ABI_CWindows_CUI_CNotifications_CIToastNotifier* sender,
        __x_ABI_CWindows_CUI_CNotifications_CIScheduledToastNotificationShowingEventArgs* args);

        END_INTERFACE
    } __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CNotifications__CToastNotifier___x_ABI_CWindows__CUI__CNotifications__CScheduledToastNotificationShowingEventArgsVtbl;

    interface __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CNotifications__CToastNotifier___x_ABI_CWindows__CUI__CNotifications__CScheduledToastNotificationShowingEventArgs
    {
        CONST_VTBL struct __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CNotifications__CToastNotifier___x_ABI_CWindows__CUI__CNotifications__CScheduledToastNotificationShowingEventArgsVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CNotifications__CToastNotifier___x_ABI_CWindows__CUI__CNotifications__CScheduledToastNotificationShowingEventArgs_INTERFACE_DEFINED__
    
#ifndef ____x_ABI_CWindows_CApplicationModel_CIAppInfo_FWD_DEFINED__
#define ____x_ABI_CWindows_CApplicationModel_CIAppInfo_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CApplicationModel_CIAppInfo __x_ABI_CWindows_CApplicationModel_CIAppInfo;

#endif // ____x_ABI_CWindows_CApplicationModel_CIAppInfo_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CData_CXml_CDom_CIXmlDocument_FWD_DEFINED__
#define ____x_ABI_CWindows_CData_CXml_CDom_CIXmlDocument_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CData_CXml_CDom_CIXmlDocument __x_ABI_CWindows_CData_CXml_CDom_CIXmlDocument;

#endif // ____x_ABI_CWindows_CData_CXml_CDom_CIXmlDocument_FWD_DEFINED__

typedef enum __x_ABI_CWindows_CFoundation_CAsyncStatus __x_ABI_CWindows_CFoundation_CAsyncStatus;

#ifndef ____x_ABI_CWindows_CFoundation_CCollections_CIPropertySet_FWD_DEFINED__
#define ____x_ABI_CWindows_CFoundation_CCollections_CIPropertySet_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CFoundation_CCollections_CIPropertySet __x_ABI_CWindows_CFoundation_CCollections_CIPropertySet;

#endif // ____x_ABI_CWindows_CFoundation_CCollections_CIPropertySet_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CFoundation_CIDeferral_FWD_DEFINED__
#define ____x_ABI_CWindows_CFoundation_CIDeferral_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CFoundation_CIDeferral __x_ABI_CWindows_CFoundation_CIDeferral;

#endif // ____x_ABI_CWindows_CFoundation_CIDeferral_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CFoundation_CIAsyncAction_FWD_DEFINED__
#define ____x_ABI_CWindows_CFoundation_CIAsyncAction_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CFoundation_CIAsyncAction __x_ABI_CWindows_CFoundation_CIAsyncAction;

#endif // ____x_ABI_CWindows_CFoundation_CIAsyncAction_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CFoundation_CIAsyncInfo_FWD_DEFINED__
#define ____x_ABI_CWindows_CFoundation_CIAsyncInfo_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CFoundation_CIAsyncInfo __x_ABI_CWindows_CFoundation_CIAsyncInfo;

#endif // ____x_ABI_CWindows_CFoundation_CIAsyncInfo_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CFoundation_CIPropertyValue_FWD_DEFINED__
#define ____x_ABI_CWindows_CFoundation_CIPropertyValue_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CFoundation_CIPropertyValue __x_ABI_CWindows_CFoundation_CIPropertyValue;

#endif // ____x_ABI_CWindows_CFoundation_CIPropertyValue_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CSystem_CIUser_FWD_DEFINED__
#define ____x_ABI_CWindows_CSystem_CIUser_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CSystem_CIUser __x_ABI_CWindows_CSystem_CIUser;

#endif // ____x_ABI_CWindows_CSystem_CIUser_FWD_DEFINED__

typedef enum __x_ABI_CWindows_CUI_CNotifications_CAdaptiveNotificationContentKind __x_ABI_CWindows_CUI_CNotifications_CAdaptiveNotificationContentKind;

typedef enum __x_ABI_CWindows_CUI_CNotifications_CBadgeTemplateType __x_ABI_CWindows_CUI_CNotifications_CBadgeTemplateType;

typedef enum __x_ABI_CWindows_CUI_CNotifications_CNotificationMirroring __x_ABI_CWindows_CUI_CNotifications_CNotificationMirroring;

typedef enum __x_ABI_CWindows_CUI_CNotifications_CNotificationSetting __x_ABI_CWindows_CUI_CNotifications_CNotificationSetting;

typedef enum __x_ABI_CWindows_CUI_CNotifications_CNotificationUpdateResult __x_ABI_CWindows_CUI_CNotifications_CNotificationUpdateResult;

typedef enum __x_ABI_CWindows_CUI_CNotifications_CPeriodicUpdateRecurrence __x_ABI_CWindows_CUI_CNotifications_CPeriodicUpdateRecurrence;

typedef enum __x_ABI_CWindows_CUI_CNotifications_CTileFlyoutTemplateType __x_ABI_CWindows_CUI_CNotifications_CTileFlyoutTemplateType;

typedef enum __x_ABI_CWindows_CUI_CNotifications_CTileTemplateType __x_ABI_CWindows_CUI_CNotifications_CTileTemplateType;

typedef enum __x_ABI_CWindows_CUI_CNotifications_CToastDismissalReason __x_ABI_CWindows_CUI_CNotifications_CToastDismissalReason;

typedef enum __x_ABI_CWindows_CUI_CNotifications_CToastHistoryChangedType __x_ABI_CWindows_CUI_CNotifications_CToastHistoryChangedType;

typedef enum __x_ABI_CWindows_CUI_CNotifications_CToastNotificationPriority __x_ABI_CWindows_CUI_CNotifications_CToastNotificationPriority;

typedef enum __x_ABI_CWindows_CUI_CNotifications_CToastTemplateType __x_ABI_CWindows_CUI_CNotifications_CToastTemplateType;

typedef enum __x_ABI_CWindows_CUI_CNotifications_CUserNotificationChangedKind __x_ABI_CWindows_CUI_CNotifications_CUserNotificationChangedKind;

enum __x_ABI_CWindows_CUI_CNotifications_CAdaptiveNotificationContentKind
    {
        __x_ABI_CWindows_CUI_CNotifications_CAdaptiveNotificationContentKind_Text = 0,
};

enum __x_ABI_CWindows_CUI_CNotifications_CBadgeTemplateType
    {
        __x_ABI_CWindows_CUI_CNotifications_CBadgeTemplateType_BadgeGlyph = 0,
    __x_ABI_CWindows_CUI_CNotifications_CBadgeTemplateType_BadgeNumber = 1,
};

enum __x_ABI_CWindows_CUI_CNotifications_CNotificationKinds
    {
        __x_ABI_CWindows_CUI_CNotifications_CNotificationKinds_Unknown = 0,
    __x_ABI_CWindows_CUI_CNotifications_CNotificationKinds_Toast = 0x1,
};

enum __x_ABI_CWindows_CUI_CNotifications_CNotificationMirroring
    {
        __x_ABI_CWindows_CUI_CNotifications_CNotificationMirroring_Allowed = 0,
    __x_ABI_CWindows_CUI_CNotifications_CNotificationMirroring_Disabled = 1,
};

enum __x_ABI_CWindows_CUI_CNotifications_CNotificationSetting
    {
        __x_ABI_CWindows_CUI_CNotifications_CNotificationSetting_Enabled = 0,
    __x_ABI_CWindows_CUI_CNotifications_CNotificationSetting_DisabledForApplication = 1,
    __x_ABI_CWindows_CUI_CNotifications_CNotificationSetting_DisabledForUser = 2,
    __x_ABI_CWindows_CUI_CNotifications_CNotificationSetting_DisabledByGroupPolicy = 3,
    __x_ABI_CWindows_CUI_CNotifications_CNotificationSetting_DisabledByManifest = 4,
};

enum __x_ABI_CWindows_CUI_CNotifications_CNotificationUpdateResult
    {
        __x_ABI_CWindows_CUI_CNotifications_CNotificationUpdateResult_Succeeded = 0,
    __x_ABI_CWindows_CUI_CNotifications_CNotificationUpdateResult_Failed = 1,
    __x_ABI_CWindows_CUI_CNotifications_CNotificationUpdateResult_NotificationNotFound = 2,
};

enum __x_ABI_CWindows_CUI_CNotifications_CPeriodicUpdateRecurrence
    {
        __x_ABI_CWindows_CUI_CNotifications_CPeriodicUpdateRecurrence_HalfHour = 0,
    __x_ABI_CWindows_CUI_CNotifications_CPeriodicUpdateRecurrence_Hour = 1,
    __x_ABI_CWindows_CUI_CNotifications_CPeriodicUpdateRecurrence_SixHours = 2,
    __x_ABI_CWindows_CUI_CNotifications_CPeriodicUpdateRecurrence_TwelveHours = 3,
    __x_ABI_CWindows_CUI_CNotifications_CPeriodicUpdateRecurrence_Daily = 4,
};

enum __x_ABI_CWindows_CUI_CNotifications_CTileFlyoutTemplateType
    {
        __x_ABI_CWindows_CUI_CNotifications_CTileFlyoutTemplateType_TileFlyoutTemplate01 = 0,
};

enum __x_ABI_CWindows_CUI_CNotifications_CTileTemplateType
    {
        __x_ABI_CWindows_CUI_CNotifications_CTileTemplateType_TileSquareImage = 0,
    __x_ABI_CWindows_CUI_CNotifications_CTileTemplateType_TileSquareBlock = 1,
    __x_ABI_CWindows_CUI_CNotifications_CTileTemplateType_TileSquareText01 = 2,
    __x_ABI_CWindows_CUI_CNotifications_CTileTemplateType_TileSquareText02 = 3,
    __x_ABI_CWindows_CUI_CNotifications_CTileTemplateType_TileSquareText03 = 4,
    __x_ABI_CWindows_CUI_CNotifications_CTileTemplateType_TileSquareText04 = 5,
    __x_ABI_CWindows_CUI_CNotifications_CTileTemplateType_TileSquarePeekImageAndText01 = 6,
    __x_ABI_CWindows_CUI_CNotifications_CTileTemplateType_TileSquarePeekImageAndText02 = 7,
    __x_ABI_CWindows_CUI_CNotifications_CTileTemplateType_TileSquarePeekImageAndText03 = 8,
    __x_ABI_CWindows_CUI_CNotifications_CTileTemplateType_TileSquarePeekImageAndText04 = 9,
    __x_ABI_CWindows_CUI_CNotifications_CTileTemplateType_TileWideImage = 10,
    __x_ABI_CWindows_CUI_CNotifications_CTileTemplateType_TileWideImageCollection = 11,
    __x_ABI_CWindows_CUI_CNotifications_CTileTemplateType_TileWideImageAndText01 = 12,
    __x_ABI_CWindows_CUI_CNotifications_CTileTemplateType_TileWideImageAndText02 = 13,
    __x_ABI_CWindows_CUI_CNotifications_CTileTemplateType_TileWideBlockAndText01 = 14,
    __x_ABI_CWindows_CUI_CNotifications_CTileTemplateType_TileWideBlockAndText02 = 15,
    __x_ABI_CWindows_CUI_CNotifications_CTileTemplateType_TileWidePeekImageCollection01 = 16,
    __x_ABI_CWindows_CUI_CNotifications_CTileTemplateType_TileWidePeekImageCollection02 = 17,
    __x_ABI_CWindows_CUI_CNotifications_CTileTemplateType_TileWidePeekImageCollection03 = 18,
    __x_ABI_CWindows_CUI_CNotifications_CTileTemplateType_TileWidePeekImageCollection04 = 19,
    __x_ABI_CWindows_CUI_CNotifications_CTileTemplateType_TileWidePeekImageCollection05 = 20,
    __x_ABI_CWindows_CUI_CNotifications_CTileTemplateType_TileWidePeekImageCollection06 = 21,
    __x_ABI_CWindows_CUI_CNotifications_CTileTemplateType_TileWidePeekImageAndText01 = 22,
    __x_ABI_CWindows_CUI_CNotifications_CTileTemplateType_TileWidePeekImageAndText02 = 23,
    __x_ABI_CWindows_CUI_CNotifications_CTileTemplateType_TileWidePeekImage01 = 24,
    __x_ABI_CWindows_CUI_CNotifications_CTileTemplateType_TileWidePeekImage02 = 25,
    __x_ABI_CWindows_CUI_CNotifications_CTileTemplateType_TileWidePeekImage03 = 26,
    __x_ABI_CWindows_CUI_CNotifications_CTileTemplateType_TileWidePeekImage04 = 27,
    __x_ABI_CWindows_CUI_CNotifications_CTileTemplateType_TileWidePeekImage05 = 28,
    __x_ABI_CWindows_CUI_CNotifications_CTileTemplateType_TileWidePeekImage06 = 29,
    __x_ABI_CWindows_CUI_CNotifications_CTileTemplateType_TileWideSmallImageAndText01 = 30,
    __x_ABI_CWindows_CUI_CNotifications_CTileTemplateType_TileWideSmallImageAndText02 = 31,
    __x_ABI_CWindows_CUI_CNotifications_CTileTemplateType_TileWideSmallImageAndText03 = 32,
    __x_ABI_CWindows_CUI_CNotifications_CTileTemplateType_TileWideSmallImageAndText04 = 33,
    __x_ABI_CWindows_CUI_CNotifications_CTileTemplateType_TileWideSmallImageAndText05 = 34,
    __x_ABI_CWindows_CUI_CNotifications_CTileTemplateType_TileWideText01 = 35,
    __x_ABI_CWindows_CUI_CNotifications_CTileTemplateType_TileWideText02 = 36,
    __x_ABI_CWindows_CUI_CNotifications_CTileTemplateType_TileWideText03 = 37,
    __x_ABI_CWindows_CUI_CNotifications_CTileTemplateType_TileWideText04 = 38,
    __x_ABI_CWindows_CUI_CNotifications_CTileTemplateType_TileWideText05 = 39,
    __x_ABI_CWindows_CUI_CNotifications_CTileTemplateType_TileWideText06 = 40,
    __x_ABI_CWindows_CUI_CNotifications_CTileTemplateType_TileWideText07 = 41,
    __x_ABI_CWindows_CUI_CNotifications_CTileTemplateType_TileWideText08 = 42,
    __x_ABI_CWindows_CUI_CNotifications_CTileTemplateType_TileWideText09 = 43,
    __x_ABI_CWindows_CUI_CNotifications_CTileTemplateType_TileWideText10 = 44,
    __x_ABI_CWindows_CUI_CNotifications_CTileTemplateType_TileWideText11 = 45,
    __x_ABI_CWindows_CUI_CNotifications_CTileTemplateType_TileSquare150x150Image = 0,
    __x_ABI_CWindows_CUI_CNotifications_CTileTemplateType_TileSquare150x150Block = 1,
    __x_ABI_CWindows_CUI_CNotifications_CTileTemplateType_TileSquare150x150Text01 = 2,
    __x_ABI_CWindows_CUI_CNotifications_CTileTemplateType_TileSquare150x150Text02 = 3,
    __x_ABI_CWindows_CUI_CNotifications_CTileTemplateType_TileSquare150x150Text03 = 4,
    __x_ABI_CWindows_CUI_CNotifications_CTileTemplateType_TileSquare150x150Text04 = 5,
    __x_ABI_CWindows_CUI_CNotifications_CTileTemplateType_TileSquare150x150PeekImageAndText01 = 6,
    __x_ABI_CWindows_CUI_CNotifications_CTileTemplateType_TileSquare150x150PeekImageAndText02 = 7,
    __x_ABI_CWindows_CUI_CNotifications_CTileTemplateType_TileSquare150x150PeekImageAndText03 = 8,
    __x_ABI_CWindows_CUI_CNotifications_CTileTemplateType_TileSquare150x150PeekImageAndText04 = 9,
    __x_ABI_CWindows_CUI_CNotifications_CTileTemplateType_TileWide310x150Image = 10,
    __x_ABI_CWindows_CUI_CNotifications_CTileTemplateType_TileWide310x150ImageCollection = 11,
    __x_ABI_CWindows_CUI_CNotifications_CTileTemplateType_TileWide310x150ImageAndText01 = 12,
    __x_ABI_CWindows_CUI_CNotifications_CTileTemplateType_TileWide310x150ImageAndText02 = 13,
    __x_ABI_CWindows_CUI_CNotifications_CTileTemplateType_TileWide310x150BlockAndText01 = 14,
    __x_ABI_CWindows_CUI_CNotifications_CTileTemplateType_TileWide310x150BlockAndText02 = 15,
    __x_ABI_CWindows_CUI_CNotifications_CTileTemplateType_TileWide310x150PeekImageCollection01 = 16,
    __x_ABI_CWindows_CUI_CNotifications_CTileTemplateType_TileWide310x150PeekImageCollection02 = 17,
    __x_ABI_CWindows_CUI_CNotifications_CTileTemplateType_TileWide310x150PeekImageCollection03 = 18,
    __x_ABI_CWindows_CUI_CNotifications_CTileTemplateType_TileWide310x150PeekImageCollection04 = 19,
    __x_ABI_CWindows_CUI_CNotifications_CTileTemplateType_TileWide310x150PeekImageCollection05 = 20,
    __x_ABI_CWindows_CUI_CNotifications_CTileTemplateType_TileWide310x150PeekImageCollection06 = 21,
    __x_ABI_CWindows_CUI_CNotifications_CTileTemplateType_TileWide310x150PeekImageAndText01 = 22,
    __x_ABI_CWindows_CUI_CNotifications_CTileTemplateType_TileWide310x150PeekImageAndText02 = 23,
    __x_ABI_CWindows_CUI_CNotifications_CTileTemplateType_TileWide310x150PeekImage01 = 24,
    __x_ABI_CWindows_CUI_CNotifications_CTileTemplateType_TileWide310x150PeekImage02 = 25,
    __x_ABI_CWindows_CUI_CNotifications_CTileTemplateType_TileWide310x150PeekImage03 = 26,
    __x_ABI_CWindows_CUI_CNotifications_CTileTemplateType_TileWide310x150PeekImage04 = 27,
    __x_ABI_CWindows_CUI_CNotifications_CTileTemplateType_TileWide310x150PeekImage05 = 28,
    __x_ABI_CWindows_CUI_CNotifications_CTileTemplateType_TileWide310x150PeekImage06 = 29,
    __x_ABI_CWindows_CUI_CNotifications_CTileTemplateType_TileWide310x150SmallImageAndText01 = 30,
    __x_ABI_CWindows_CUI_CNotifications_CTileTemplateType_TileWide310x150SmallImageAndText02 = 31,
    __x_ABI_CWindows_CUI_CNotifications_CTileTemplateType_TileWide310x150SmallImageAndText03 = 32,
    __x_ABI_CWindows_CUI_CNotifications_CTileTemplateType_TileWide310x150SmallImageAndText04 = 33,
    __x_ABI_CWindows_CUI_CNotifications_CTileTemplateType_TileWide310x150SmallImageAndText05 = 34,
    __x_ABI_CWindows_CUI_CNotifications_CTileTemplateType_TileWide310x150Text01 = 35,
    __x_ABI_CWindows_CUI_CNotifications_CTileTemplateType_TileWide310x150Text02 = 36,
    __x_ABI_CWindows_CUI_CNotifications_CTileTemplateType_TileWide310x150Text03 = 37,
    __x_ABI_CWindows_CUI_CNotifications_CTileTemplateType_TileWide310x150Text04 = 38,
    __x_ABI_CWindows_CUI_CNotifications_CTileTemplateType_TileWide310x150Text05 = 39,
    __x_ABI_CWindows_CUI_CNotifications_CTileTemplateType_TileWide310x150Text06 = 40,
    __x_ABI_CWindows_CUI_CNotifications_CTileTemplateType_TileWide310x150Text07 = 41,
    __x_ABI_CWindows_CUI_CNotifications_CTileTemplateType_TileWide310x150Text08 = 42,
    __x_ABI_CWindows_CUI_CNotifications_CTileTemplateType_TileWide310x150Text09 = 43,
    __x_ABI_CWindows_CUI_CNotifications_CTileTemplateType_TileWide310x150Text10 = 44,
    __x_ABI_CWindows_CUI_CNotifications_CTileTemplateType_TileWide310x150Text11 = 45,
    __x_ABI_CWindows_CUI_CNotifications_CTileTemplateType_TileSquare310x310BlockAndText01 = 46,
    __x_ABI_CWindows_CUI_CNotifications_CTileTemplateType_TileSquare310x310BlockAndText02 = 47,
    __x_ABI_CWindows_CUI_CNotifications_CTileTemplateType_TileSquare310x310Image = 48,
    __x_ABI_CWindows_CUI_CNotifications_CTileTemplateType_TileSquare310x310ImageAndText01 = 49,
    __x_ABI_CWindows_CUI_CNotifications_CTileTemplateType_TileSquare310x310ImageAndText02 = 50,
    __x_ABI_CWindows_CUI_CNotifications_CTileTemplateType_TileSquare310x310ImageAndTextOverlay01 = 51,
    __x_ABI_CWindows_CUI_CNotifications_CTileTemplateType_TileSquare310x310ImageAndTextOverlay02 = 52,
    __x_ABI_CWindows_CUI_CNotifications_CTileTemplateType_TileSquare310x310ImageAndTextOverlay03 = 53,
    __x_ABI_CWindows_CUI_CNotifications_CTileTemplateType_TileSquare310x310ImageCollectionAndText01 = 54,
    __x_ABI_CWindows_CUI_CNotifications_CTileTemplateType_TileSquare310x310ImageCollectionAndText02 = 55,
    __x_ABI_CWindows_CUI_CNotifications_CTileTemplateType_TileSquare310x310ImageCollection = 56,
    __x_ABI_CWindows_CUI_CNotifications_CTileTemplateType_TileSquare310x310SmallImagesAndTextList01 = 57,
    __x_ABI_CWindows_CUI_CNotifications_CTileTemplateType_TileSquare310x310SmallImagesAndTextList02 = 58,
    __x_ABI_CWindows_CUI_CNotifications_CTileTemplateType_TileSquare310x310SmallImagesAndTextList03 = 59,
    __x_ABI_CWindows_CUI_CNotifications_CTileTemplateType_TileSquare310x310SmallImagesAndTextList04 = 60,
    __x_ABI_CWindows_CUI_CNotifications_CTileTemplateType_TileSquare310x310Text01 = 61,
    __x_ABI_CWindows_CUI_CNotifications_CTileTemplateType_TileSquare310x310Text02 = 62,
    __x_ABI_CWindows_CUI_CNotifications_CTileTemplateType_TileSquare310x310Text03 = 63,
    __x_ABI_CWindows_CUI_CNotifications_CTileTemplateType_TileSquare310x310Text04 = 64,
    __x_ABI_CWindows_CUI_CNotifications_CTileTemplateType_TileSquare310x310Text05 = 65,
    __x_ABI_CWindows_CUI_CNotifications_CTileTemplateType_TileSquare310x310Text06 = 66,
    __x_ABI_CWindows_CUI_CNotifications_CTileTemplateType_TileSquare310x310Text07 = 67,
    __x_ABI_CWindows_CUI_CNotifications_CTileTemplateType_TileSquare310x310Text08 = 68,
    __x_ABI_CWindows_CUI_CNotifications_CTileTemplateType_TileSquare310x310TextList01 = 69,
    __x_ABI_CWindows_CUI_CNotifications_CTileTemplateType_TileSquare310x310TextList02 = 70,
    __x_ABI_CWindows_CUI_CNotifications_CTileTemplateType_TileSquare310x310TextList03 = 71,
    __x_ABI_CWindows_CUI_CNotifications_CTileTemplateType_TileSquare310x310SmallImageAndText01 = 72,
    __x_ABI_CWindows_CUI_CNotifications_CTileTemplateType_TileSquare310x310SmallImagesAndTextList05 = 73,
    __x_ABI_CWindows_CUI_CNotifications_CTileTemplateType_TileSquare310x310Text09 = 74,
    __x_ABI_CWindows_CUI_CNotifications_CTileTemplateType_TileSquare71x71IconWithBadge = 75,
    __x_ABI_CWindows_CUI_CNotifications_CTileTemplateType_TileSquare150x150IconWithBadge = 76,
    __x_ABI_CWindows_CUI_CNotifications_CTileTemplateType_TileWide310x150IconWithBadgeAndText = 77,
    __x_ABI_CWindows_CUI_CNotifications_CTileTemplateType_TileSquare71x71Image = 78,
    __x_ABI_CWindows_CUI_CNotifications_CTileTemplateType_TileTall150x310Image = 79,
};

enum __x_ABI_CWindows_CUI_CNotifications_CToastDismissalReason
    {
        __x_ABI_CWindows_CUI_CNotifications_CToastDismissalReason_UserCanceled = 0,
    __x_ABI_CWindows_CUI_CNotifications_CToastDismissalReason_ApplicationHidden = 1,
    __x_ABI_CWindows_CUI_CNotifications_CToastDismissalReason_TimedOut = 2,
};

enum __x_ABI_CWindows_CUI_CNotifications_CToastHistoryChangedType
    {
        __x_ABI_CWindows_CUI_CNotifications_CToastHistoryChangedType_Cleared = 0,
    __x_ABI_CWindows_CUI_CNotifications_CToastHistoryChangedType_Removed = 1,
    __x_ABI_CWindows_CUI_CNotifications_CToastHistoryChangedType_Expired = 2,
    __x_ABI_CWindows_CUI_CNotifications_CToastHistoryChangedType_Added = 3,
};

enum __x_ABI_CWindows_CUI_CNotifications_CToastNotificationPriority
    {
        __x_ABI_CWindows_CUI_CNotifications_CToastNotificationPriority_Default = 0,
    __x_ABI_CWindows_CUI_CNotifications_CToastNotificationPriority_High = 1,
};

enum __x_ABI_CWindows_CUI_CNotifications_CToastTemplateType
    {
        __x_ABI_CWindows_CUI_CNotifications_CToastTemplateType_ToastImageAndText01 = 0,
    __x_ABI_CWindows_CUI_CNotifications_CToastTemplateType_ToastImageAndText02 = 1,
    __x_ABI_CWindows_CUI_CNotifications_CToastTemplateType_ToastImageAndText03 = 2,
    __x_ABI_CWindows_CUI_CNotifications_CToastTemplateType_ToastImageAndText04 = 3,
    __x_ABI_CWindows_CUI_CNotifications_CToastTemplateType_ToastText01 = 4,
    __x_ABI_CWindows_CUI_CNotifications_CToastTemplateType_ToastText02 = 5,
    __x_ABI_CWindows_CUI_CNotifications_CToastTemplateType_ToastText03 = 6,
    __x_ABI_CWindows_CUI_CNotifications_CToastTemplateType_ToastText04 = 7,
};

enum __x_ABI_CWindows_CUI_CNotifications_CUserNotificationChangedKind
    {
        __x_ABI_CWindows_CUI_CNotifications_CUserNotificationChangedKind_Added = 0,
    __x_ABI_CWindows_CUI_CNotifications_CUserNotificationChangedKind_Removed = 1,
};

#if !defined(____x_ABI_CWindows_CUI_CNotifications_CIAdaptiveNotificationContent_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CNotifications_CIAdaptiveNotificationContent_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CNotifications_CIAdaptiveNotificationContentVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CNotifications_CIAdaptiveNotificationContent* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CNotifications_CIAdaptiveNotificationContent* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CNotifications_CIAdaptiveNotificationContent* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CNotifications_CIAdaptiveNotificationContent* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CNotifications_CIAdaptiveNotificationContent* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CNotifications_CIAdaptiveNotificationContent* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Kind)(__x_ABI_CWindows_CUI_CNotifications_CIAdaptiveNotificationContent* This,
        enum __x_ABI_CWindows_CUI_CNotifications_CAdaptiveNotificationContentKind* value);
    HRESULT (STDMETHODCALLTYPE* get_Hints)(__x_ABI_CWindows_CUI_CNotifications_CIAdaptiveNotificationContent* This,
        __x_ABI_C__FIMap_2_HSTRING_HSTRING** value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CNotifications_CIAdaptiveNotificationContentVtbl;

    interface __x_ABI_CWindows_CUI_CNotifications_CIAdaptiveNotificationContent
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CNotifications_CIAdaptiveNotificationContentVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CNotifications_CIAdaptiveNotificationContent;
#endif /* !defined(____x_ABI_CWindows_CUI_CNotifications_CIAdaptiveNotificationContent_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CNotifications_CIAdaptiveNotificationText_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CNotifications_CIAdaptiveNotificationText_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CNotifications_CIAdaptiveNotificationTextVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CNotifications_CIAdaptiveNotificationText* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CNotifications_CIAdaptiveNotificationText* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CNotifications_CIAdaptiveNotificationText* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CNotifications_CIAdaptiveNotificationText* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CNotifications_CIAdaptiveNotificationText* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CNotifications_CIAdaptiveNotificationText* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Text)(__x_ABI_CWindows_CUI_CNotifications_CIAdaptiveNotificationText* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* put_Text)(__x_ABI_CWindows_CUI_CNotifications_CIAdaptiveNotificationText* This,
        HSTRING value);
    HRESULT (STDMETHODCALLTYPE* get_Language)(__x_ABI_CWindows_CUI_CNotifications_CIAdaptiveNotificationText* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* put_Language)(__x_ABI_CWindows_CUI_CNotifications_CIAdaptiveNotificationText* This,
        HSTRING value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CNotifications_CIAdaptiveNotificationTextVtbl;

    interface __x_ABI_CWindows_CUI_CNotifications_CIAdaptiveNotificationText
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CNotifications_CIAdaptiveNotificationTextVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CNotifications_CIAdaptiveNotificationText;
#endif /* !defined(____x_ABI_CWindows_CUI_CNotifications_CIAdaptiveNotificationText_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CNotifications_CIBadgeNotification_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CNotifications_CIBadgeNotification_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CNotifications_CIBadgeNotificationVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CNotifications_CIBadgeNotification* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CNotifications_CIBadgeNotification* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CNotifications_CIBadgeNotification* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CNotifications_CIBadgeNotification* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CNotifications_CIBadgeNotification* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CNotifications_CIBadgeNotification* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Content)(__x_ABI_CWindows_CUI_CNotifications_CIBadgeNotification* This,
        __x_ABI_CWindows_CData_CXml_CDom_CIXmlDocument** value);
    HRESULT (STDMETHODCALLTYPE* put_ExpirationTime)(__x_ABI_CWindows_CUI_CNotifications_CIBadgeNotification* This,
        __x_ABI_C__FIReference_1___x_ABI_CWindows__CFoundation__CDateTime* value);
    HRESULT (STDMETHODCALLTYPE* get_ExpirationTime)(__x_ABI_CWindows_CUI_CNotifications_CIBadgeNotification* This,
        __x_ABI_C__FIReference_1___x_ABI_CWindows__CFoundation__CDateTime** value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CNotifications_CIBadgeNotificationVtbl;

    interface __x_ABI_CWindows_CUI_CNotifications_CIBadgeNotification
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CNotifications_CIBadgeNotificationVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CNotifications_CIBadgeNotification;
#endif /* !defined(____x_ABI_CWindows_CUI_CNotifications_CIBadgeNotification_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CNotifications_CIBadgeNotificationFactory_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CNotifications_CIBadgeNotificationFactory_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CNotifications_CIBadgeNotificationFactoryVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CNotifications_CIBadgeNotificationFactory* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CNotifications_CIBadgeNotificationFactory* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CNotifications_CIBadgeNotificationFactory* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CNotifications_CIBadgeNotificationFactory* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CNotifications_CIBadgeNotificationFactory* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CNotifications_CIBadgeNotificationFactory* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* CreateBadgeNotification)(__x_ABI_CWindows_CUI_CNotifications_CIBadgeNotificationFactory* This,
        __x_ABI_CWindows_CData_CXml_CDom_CIXmlDocument* content,
        __x_ABI_CWindows_CUI_CNotifications_CIBadgeNotification** value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CNotifications_CIBadgeNotificationFactoryVtbl;

    interface __x_ABI_CWindows_CUI_CNotifications_CIBadgeNotificationFactory
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CNotifications_CIBadgeNotificationFactoryVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CNotifications_CIBadgeNotificationFactory;
#endif /* !defined(____x_ABI_CWindows_CUI_CNotifications_CIBadgeNotificationFactory_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CNotifications_CIBadgeUpdateManagerForUser_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CNotifications_CIBadgeUpdateManagerForUser_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CNotifications_CIBadgeUpdateManagerForUserVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CNotifications_CIBadgeUpdateManagerForUser* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CNotifications_CIBadgeUpdateManagerForUser* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CNotifications_CIBadgeUpdateManagerForUser* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CNotifications_CIBadgeUpdateManagerForUser* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CNotifications_CIBadgeUpdateManagerForUser* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CNotifications_CIBadgeUpdateManagerForUser* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* CreateBadgeUpdaterForApplication)(__x_ABI_CWindows_CUI_CNotifications_CIBadgeUpdateManagerForUser* This,
        __x_ABI_CWindows_CUI_CNotifications_CIBadgeUpdater** result);
    HRESULT (STDMETHODCALLTYPE* CreateBadgeUpdaterForApplicationWithId)(__x_ABI_CWindows_CUI_CNotifications_CIBadgeUpdateManagerForUser* This,
        HSTRING applicationId,
        __x_ABI_CWindows_CUI_CNotifications_CIBadgeUpdater** result);
    HRESULT (STDMETHODCALLTYPE* CreateBadgeUpdaterForSecondaryTile)(__x_ABI_CWindows_CUI_CNotifications_CIBadgeUpdateManagerForUser* This,
        HSTRING tileId,
        __x_ABI_CWindows_CUI_CNotifications_CIBadgeUpdater** result);
    HRESULT (STDMETHODCALLTYPE* get_User)(__x_ABI_CWindows_CUI_CNotifications_CIBadgeUpdateManagerForUser* This,
        __x_ABI_CWindows_CSystem_CIUser** value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CNotifications_CIBadgeUpdateManagerForUserVtbl;

    interface __x_ABI_CWindows_CUI_CNotifications_CIBadgeUpdateManagerForUser
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CNotifications_CIBadgeUpdateManagerForUserVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CNotifications_CIBadgeUpdateManagerForUser;
#endif /* !defined(____x_ABI_CWindows_CUI_CNotifications_CIBadgeUpdateManagerForUser_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CNotifications_CIBadgeUpdateManagerStatics_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CNotifications_CIBadgeUpdateManagerStatics_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CNotifications_CIBadgeUpdateManagerStaticsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CNotifications_CIBadgeUpdateManagerStatics* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CNotifications_CIBadgeUpdateManagerStatics* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CNotifications_CIBadgeUpdateManagerStatics* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CNotifications_CIBadgeUpdateManagerStatics* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CNotifications_CIBadgeUpdateManagerStatics* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CNotifications_CIBadgeUpdateManagerStatics* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* CreateBadgeUpdaterForApplication)(__x_ABI_CWindows_CUI_CNotifications_CIBadgeUpdateManagerStatics* This,
        __x_ABI_CWindows_CUI_CNotifications_CIBadgeUpdater** result);
    HRESULT (STDMETHODCALLTYPE* CreateBadgeUpdaterForApplicationWithId)(__x_ABI_CWindows_CUI_CNotifications_CIBadgeUpdateManagerStatics* This,
        HSTRING applicationId,
        __x_ABI_CWindows_CUI_CNotifications_CIBadgeUpdater** result);
    HRESULT (STDMETHODCALLTYPE* CreateBadgeUpdaterForSecondaryTile)(__x_ABI_CWindows_CUI_CNotifications_CIBadgeUpdateManagerStatics* This,
        HSTRING tileId,
        __x_ABI_CWindows_CUI_CNotifications_CIBadgeUpdater** result);
    HRESULT (STDMETHODCALLTYPE* GetTemplateContent)(__x_ABI_CWindows_CUI_CNotifications_CIBadgeUpdateManagerStatics* This,
        enum __x_ABI_CWindows_CUI_CNotifications_CBadgeTemplateType type,
        __x_ABI_CWindows_CData_CXml_CDom_CIXmlDocument** result);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CNotifications_CIBadgeUpdateManagerStaticsVtbl;

    interface __x_ABI_CWindows_CUI_CNotifications_CIBadgeUpdateManagerStatics
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CNotifications_CIBadgeUpdateManagerStaticsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CNotifications_CIBadgeUpdateManagerStatics;
#endif /* !defined(____x_ABI_CWindows_CUI_CNotifications_CIBadgeUpdateManagerStatics_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CNotifications_CIBadgeUpdateManagerStatics2_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CNotifications_CIBadgeUpdateManagerStatics2_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CNotifications_CIBadgeUpdateManagerStatics2Vtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CNotifications_CIBadgeUpdateManagerStatics2* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CNotifications_CIBadgeUpdateManagerStatics2* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CNotifications_CIBadgeUpdateManagerStatics2* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CNotifications_CIBadgeUpdateManagerStatics2* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CNotifications_CIBadgeUpdateManagerStatics2* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CNotifications_CIBadgeUpdateManagerStatics2* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* GetForUser)(__x_ABI_CWindows_CUI_CNotifications_CIBadgeUpdateManagerStatics2* This,
        __x_ABI_CWindows_CSystem_CIUser* user,
        __x_ABI_CWindows_CUI_CNotifications_CIBadgeUpdateManagerForUser** result);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CNotifications_CIBadgeUpdateManagerStatics2Vtbl;

    interface __x_ABI_CWindows_CUI_CNotifications_CIBadgeUpdateManagerStatics2
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CNotifications_CIBadgeUpdateManagerStatics2Vtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CNotifications_CIBadgeUpdateManagerStatics2;
#endif /* !defined(____x_ABI_CWindows_CUI_CNotifications_CIBadgeUpdateManagerStatics2_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CNotifications_CIBadgeUpdater_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CNotifications_CIBadgeUpdater_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CNotifications_CIBadgeUpdaterVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CNotifications_CIBadgeUpdater* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CNotifications_CIBadgeUpdater* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CNotifications_CIBadgeUpdater* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CNotifications_CIBadgeUpdater* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CNotifications_CIBadgeUpdater* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CNotifications_CIBadgeUpdater* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* Update)(__x_ABI_CWindows_CUI_CNotifications_CIBadgeUpdater* This,
        __x_ABI_CWindows_CUI_CNotifications_CIBadgeNotification* notification);
    HRESULT (STDMETHODCALLTYPE* Clear)(__x_ABI_CWindows_CUI_CNotifications_CIBadgeUpdater* This);
    HRESULT (STDMETHODCALLTYPE* StartPeriodicUpdate)(__x_ABI_CWindows_CUI_CNotifications_CIBadgeUpdater* This,
        __x_ABI_CWindows_CFoundation_CIUriRuntimeClass* badgeContent,
        enum __x_ABI_CWindows_CUI_CNotifications_CPeriodicUpdateRecurrence requestedInterval);
    HRESULT (STDMETHODCALLTYPE* StartPeriodicUpdateAtTime)(__x_ABI_CWindows_CUI_CNotifications_CIBadgeUpdater* This,
        __x_ABI_CWindows_CFoundation_CIUriRuntimeClass* badgeContent,
        struct __x_ABI_CWindows_CFoundation_CDateTime startTime,
        enum __x_ABI_CWindows_CUI_CNotifications_CPeriodicUpdateRecurrence requestedInterval);
    HRESULT (STDMETHODCALLTYPE* StopPeriodicUpdate)(__x_ABI_CWindows_CUI_CNotifications_CIBadgeUpdater* This);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CNotifications_CIBadgeUpdaterVtbl;

    interface __x_ABI_CWindows_CUI_CNotifications_CIBadgeUpdater
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CNotifications_CIBadgeUpdaterVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CNotifications_CIBadgeUpdater;
#endif /* !defined(____x_ABI_CWindows_CUI_CNotifications_CIBadgeUpdater_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CNotifications_CIKnownAdaptiveNotificationHintsStatics_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CNotifications_CIKnownAdaptiveNotificationHintsStatics_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CNotifications_CIKnownAdaptiveNotificationHintsStaticsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CNotifications_CIKnownAdaptiveNotificationHintsStatics* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CNotifications_CIKnownAdaptiveNotificationHintsStatics* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CNotifications_CIKnownAdaptiveNotificationHintsStatics* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CNotifications_CIKnownAdaptiveNotificationHintsStatics* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CNotifications_CIKnownAdaptiveNotificationHintsStatics* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CNotifications_CIKnownAdaptiveNotificationHintsStatics* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Style)(__x_ABI_CWindows_CUI_CNotifications_CIKnownAdaptiveNotificationHintsStatics* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* get_Wrap)(__x_ABI_CWindows_CUI_CNotifications_CIKnownAdaptiveNotificationHintsStatics* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* get_MaxLines)(__x_ABI_CWindows_CUI_CNotifications_CIKnownAdaptiveNotificationHintsStatics* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* get_MinLines)(__x_ABI_CWindows_CUI_CNotifications_CIKnownAdaptiveNotificationHintsStatics* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* get_TextStacking)(__x_ABI_CWindows_CUI_CNotifications_CIKnownAdaptiveNotificationHintsStatics* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* get_Align)(__x_ABI_CWindows_CUI_CNotifications_CIKnownAdaptiveNotificationHintsStatics* This,
        HSTRING* value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CNotifications_CIKnownAdaptiveNotificationHintsStaticsVtbl;

    interface __x_ABI_CWindows_CUI_CNotifications_CIKnownAdaptiveNotificationHintsStatics
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CNotifications_CIKnownAdaptiveNotificationHintsStaticsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CNotifications_CIKnownAdaptiveNotificationHintsStatics;
#endif /* !defined(____x_ABI_CWindows_CUI_CNotifications_CIKnownAdaptiveNotificationHintsStatics_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CNotifications_CIKnownAdaptiveNotificationTextStylesStatics_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CNotifications_CIKnownAdaptiveNotificationTextStylesStatics_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CNotifications_CIKnownAdaptiveNotificationTextStylesStaticsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CNotifications_CIKnownAdaptiveNotificationTextStylesStatics* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CNotifications_CIKnownAdaptiveNotificationTextStylesStatics* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CNotifications_CIKnownAdaptiveNotificationTextStylesStatics* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CNotifications_CIKnownAdaptiveNotificationTextStylesStatics* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CNotifications_CIKnownAdaptiveNotificationTextStylesStatics* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CNotifications_CIKnownAdaptiveNotificationTextStylesStatics* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Caption)(__x_ABI_CWindows_CUI_CNotifications_CIKnownAdaptiveNotificationTextStylesStatics* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* get_Body)(__x_ABI_CWindows_CUI_CNotifications_CIKnownAdaptiveNotificationTextStylesStatics* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* get_Base)(__x_ABI_CWindows_CUI_CNotifications_CIKnownAdaptiveNotificationTextStylesStatics* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* get_Subtitle)(__x_ABI_CWindows_CUI_CNotifications_CIKnownAdaptiveNotificationTextStylesStatics* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* get_Title)(__x_ABI_CWindows_CUI_CNotifications_CIKnownAdaptiveNotificationTextStylesStatics* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* get_Subheader)(__x_ABI_CWindows_CUI_CNotifications_CIKnownAdaptiveNotificationTextStylesStatics* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* get_Header)(__x_ABI_CWindows_CUI_CNotifications_CIKnownAdaptiveNotificationTextStylesStatics* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* get_TitleNumeral)(__x_ABI_CWindows_CUI_CNotifications_CIKnownAdaptiveNotificationTextStylesStatics* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* get_SubheaderNumeral)(__x_ABI_CWindows_CUI_CNotifications_CIKnownAdaptiveNotificationTextStylesStatics* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* get_HeaderNumeral)(__x_ABI_CWindows_CUI_CNotifications_CIKnownAdaptiveNotificationTextStylesStatics* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* get_CaptionSubtle)(__x_ABI_CWindows_CUI_CNotifications_CIKnownAdaptiveNotificationTextStylesStatics* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* get_BodySubtle)(__x_ABI_CWindows_CUI_CNotifications_CIKnownAdaptiveNotificationTextStylesStatics* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* get_BaseSubtle)(__x_ABI_CWindows_CUI_CNotifications_CIKnownAdaptiveNotificationTextStylesStatics* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* get_SubtitleSubtle)(__x_ABI_CWindows_CUI_CNotifications_CIKnownAdaptiveNotificationTextStylesStatics* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* get_TitleSubtle)(__x_ABI_CWindows_CUI_CNotifications_CIKnownAdaptiveNotificationTextStylesStatics* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* get_SubheaderSubtle)(__x_ABI_CWindows_CUI_CNotifications_CIKnownAdaptiveNotificationTextStylesStatics* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* get_SubheaderNumeralSubtle)(__x_ABI_CWindows_CUI_CNotifications_CIKnownAdaptiveNotificationTextStylesStatics* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* get_HeaderSubtle)(__x_ABI_CWindows_CUI_CNotifications_CIKnownAdaptiveNotificationTextStylesStatics* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* get_HeaderNumeralSubtle)(__x_ABI_CWindows_CUI_CNotifications_CIKnownAdaptiveNotificationTextStylesStatics* This,
        HSTRING* value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CNotifications_CIKnownAdaptiveNotificationTextStylesStaticsVtbl;

    interface __x_ABI_CWindows_CUI_CNotifications_CIKnownAdaptiveNotificationTextStylesStatics
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CNotifications_CIKnownAdaptiveNotificationTextStylesStaticsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CNotifications_CIKnownAdaptiveNotificationTextStylesStatics;
#endif /* !defined(____x_ABI_CWindows_CUI_CNotifications_CIKnownAdaptiveNotificationTextStylesStatics_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CNotifications_CIKnownNotificationBindingsStatics_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CNotifications_CIKnownNotificationBindingsStatics_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CNotifications_CIKnownNotificationBindingsStaticsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CNotifications_CIKnownNotificationBindingsStatics* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CNotifications_CIKnownNotificationBindingsStatics* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CNotifications_CIKnownNotificationBindingsStatics* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CNotifications_CIKnownNotificationBindingsStatics* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CNotifications_CIKnownNotificationBindingsStatics* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CNotifications_CIKnownNotificationBindingsStatics* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_ToastGeneric)(__x_ABI_CWindows_CUI_CNotifications_CIKnownNotificationBindingsStatics* This,
        HSTRING* value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CNotifications_CIKnownNotificationBindingsStaticsVtbl;

    interface __x_ABI_CWindows_CUI_CNotifications_CIKnownNotificationBindingsStatics
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CNotifications_CIKnownNotificationBindingsStaticsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CNotifications_CIKnownNotificationBindingsStatics;
#endif /* !defined(____x_ABI_CWindows_CUI_CNotifications_CIKnownNotificationBindingsStatics_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CNotifications_CINotification_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CNotifications_CINotification_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CNotifications_CINotificationVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CNotifications_CINotification* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CNotifications_CINotification* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CNotifications_CINotification* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CNotifications_CINotification* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CNotifications_CINotification* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CNotifications_CINotification* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_ExpirationTime)(__x_ABI_CWindows_CUI_CNotifications_CINotification* This,
        __x_ABI_C__FIReference_1___x_ABI_CWindows__CFoundation__CDateTime** value);
    HRESULT (STDMETHODCALLTYPE* put_ExpirationTime)(__x_ABI_CWindows_CUI_CNotifications_CINotification* This,
        __x_ABI_C__FIReference_1___x_ABI_CWindows__CFoundation__CDateTime* value);
    HRESULT (STDMETHODCALLTYPE* get_Visual)(__x_ABI_CWindows_CUI_CNotifications_CINotification* This,
        __x_ABI_CWindows_CUI_CNotifications_CINotificationVisual** value);
    HRESULT (STDMETHODCALLTYPE* put_Visual)(__x_ABI_CWindows_CUI_CNotifications_CINotification* This,
        __x_ABI_CWindows_CUI_CNotifications_CINotificationVisual* value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CNotifications_CINotificationVtbl;

    interface __x_ABI_CWindows_CUI_CNotifications_CINotification
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CNotifications_CINotificationVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CNotifications_CINotification;
#endif /* !defined(____x_ABI_CWindows_CUI_CNotifications_CINotification_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CNotifications_CINotificationBinding_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CNotifications_CINotificationBinding_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CNotifications_CINotificationBindingVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CNotifications_CINotificationBinding* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CNotifications_CINotificationBinding* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CNotifications_CINotificationBinding* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CNotifications_CINotificationBinding* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CNotifications_CINotificationBinding* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CNotifications_CINotificationBinding* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Template)(__x_ABI_CWindows_CUI_CNotifications_CINotificationBinding* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* put_Template)(__x_ABI_CWindows_CUI_CNotifications_CINotificationBinding* This,
        HSTRING value);
    HRESULT (STDMETHODCALLTYPE* get_Language)(__x_ABI_CWindows_CUI_CNotifications_CINotificationBinding* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* put_Language)(__x_ABI_CWindows_CUI_CNotifications_CINotificationBinding* This,
        HSTRING value);
    HRESULT (STDMETHODCALLTYPE* get_Hints)(__x_ABI_CWindows_CUI_CNotifications_CINotificationBinding* This,
        __x_ABI_C__FIMap_2_HSTRING_HSTRING** value);
    HRESULT (STDMETHODCALLTYPE* GetTextElements)(__x_ABI_CWindows_CUI_CNotifications_CINotificationBinding* This,
        __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CNotifications__CAdaptiveNotificationText** result);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CNotifications_CINotificationBindingVtbl;

    interface __x_ABI_CWindows_CUI_CNotifications_CINotificationBinding
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CNotifications_CINotificationBindingVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CNotifications_CINotificationBinding;
#endif /* !defined(____x_ABI_CWindows_CUI_CNotifications_CINotificationBinding_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CNotifications_CINotificationData_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CNotifications_CINotificationData_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CNotifications_CINotificationDataVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CNotifications_CINotificationData* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CNotifications_CINotificationData* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CNotifications_CINotificationData* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CNotifications_CINotificationData* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CNotifications_CINotificationData* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CNotifications_CINotificationData* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Values)(__x_ABI_CWindows_CUI_CNotifications_CINotificationData* This,
        __x_ABI_C__FIMap_2_HSTRING_HSTRING** value);
    HRESULT (STDMETHODCALLTYPE* get_SequenceNumber)(__x_ABI_CWindows_CUI_CNotifications_CINotificationData* This,
        UINT32* value);
    HRESULT (STDMETHODCALLTYPE* put_SequenceNumber)(__x_ABI_CWindows_CUI_CNotifications_CINotificationData* This,
        UINT32 value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CNotifications_CINotificationDataVtbl;

    interface __x_ABI_CWindows_CUI_CNotifications_CINotificationData
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CNotifications_CINotificationDataVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CNotifications_CINotificationData;
#endif /* !defined(____x_ABI_CWindows_CUI_CNotifications_CINotificationData_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CNotifications_CINotificationDataFactory_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CNotifications_CINotificationDataFactory_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CNotifications_CINotificationDataFactoryVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CNotifications_CINotificationDataFactory* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CNotifications_CINotificationDataFactory* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CNotifications_CINotificationDataFactory* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CNotifications_CINotificationDataFactory* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CNotifications_CINotificationDataFactory* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CNotifications_CINotificationDataFactory* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* CreateNotificationDataWithValuesAndSequenceNumber)(__x_ABI_CWindows_CUI_CNotifications_CINotificationDataFactory* This,
        __x_ABI_C__FIIterable_1___x_ABI_C__FIKeyValuePair_2_HSTRING_HSTRING* initialValues,
        UINT32 sequenceNumber,
        __x_ABI_CWindows_CUI_CNotifications_CINotificationData** value);
    HRESULT (STDMETHODCALLTYPE* CreateNotificationDataWithValues)(__x_ABI_CWindows_CUI_CNotifications_CINotificationDataFactory* This,
        __x_ABI_C__FIIterable_1___x_ABI_C__FIKeyValuePair_2_HSTRING_HSTRING* initialValues,
        __x_ABI_CWindows_CUI_CNotifications_CINotificationData** value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CNotifications_CINotificationDataFactoryVtbl;

    interface __x_ABI_CWindows_CUI_CNotifications_CINotificationDataFactory
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CNotifications_CINotificationDataFactoryVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CNotifications_CINotificationDataFactory;
#endif /* !defined(____x_ABI_CWindows_CUI_CNotifications_CINotificationDataFactory_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CNotifications_CINotificationVisual_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CNotifications_CINotificationVisual_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CNotifications_CINotificationVisualVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CNotifications_CINotificationVisual* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CNotifications_CINotificationVisual* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CNotifications_CINotificationVisual* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CNotifications_CINotificationVisual* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CNotifications_CINotificationVisual* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CNotifications_CINotificationVisual* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Language)(__x_ABI_CWindows_CUI_CNotifications_CINotificationVisual* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* put_Language)(__x_ABI_CWindows_CUI_CNotifications_CINotificationVisual* This,
        HSTRING value);
    HRESULT (STDMETHODCALLTYPE* get_Bindings)(__x_ABI_CWindows_CUI_CNotifications_CINotificationVisual* This,
        __x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CNotifications__CNotificationBinding** value);
    HRESULT (STDMETHODCALLTYPE* GetBinding)(__x_ABI_CWindows_CUI_CNotifications_CINotificationVisual* This,
        HSTRING templateName,
        __x_ABI_CWindows_CUI_CNotifications_CINotificationBinding** result);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CNotifications_CINotificationVisualVtbl;

    interface __x_ABI_CWindows_CUI_CNotifications_CINotificationVisual
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CNotifications_CINotificationVisualVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CNotifications_CINotificationVisual;
#endif /* !defined(____x_ABI_CWindows_CUI_CNotifications_CINotificationVisual_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CNotifications_CIScheduledTileNotification_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CNotifications_CIScheduledTileNotification_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CNotifications_CIScheduledTileNotificationVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CNotifications_CIScheduledTileNotification* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CNotifications_CIScheduledTileNotification* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CNotifications_CIScheduledTileNotification* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CNotifications_CIScheduledTileNotification* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CNotifications_CIScheduledTileNotification* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CNotifications_CIScheduledTileNotification* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Content)(__x_ABI_CWindows_CUI_CNotifications_CIScheduledTileNotification* This,
        __x_ABI_CWindows_CData_CXml_CDom_CIXmlDocument** value);
    HRESULT (STDMETHODCALLTYPE* get_DeliveryTime)(__x_ABI_CWindows_CUI_CNotifications_CIScheduledTileNotification* This,
        struct __x_ABI_CWindows_CFoundation_CDateTime* value);
    HRESULT (STDMETHODCALLTYPE* put_ExpirationTime)(__x_ABI_CWindows_CUI_CNotifications_CIScheduledTileNotification* This,
        __x_ABI_C__FIReference_1___x_ABI_CWindows__CFoundation__CDateTime* value);
    HRESULT (STDMETHODCALLTYPE* get_ExpirationTime)(__x_ABI_CWindows_CUI_CNotifications_CIScheduledTileNotification* This,
        __x_ABI_C__FIReference_1___x_ABI_CWindows__CFoundation__CDateTime** value);
    HRESULT (STDMETHODCALLTYPE* put_Tag)(__x_ABI_CWindows_CUI_CNotifications_CIScheduledTileNotification* This,
        HSTRING value);
    HRESULT (STDMETHODCALLTYPE* get_Tag)(__x_ABI_CWindows_CUI_CNotifications_CIScheduledTileNotification* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* put_Id)(__x_ABI_CWindows_CUI_CNotifications_CIScheduledTileNotification* This,
        HSTRING value);
    HRESULT (STDMETHODCALLTYPE* get_Id)(__x_ABI_CWindows_CUI_CNotifications_CIScheduledTileNotification* This,
        HSTRING* value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CNotifications_CIScheduledTileNotificationVtbl;

    interface __x_ABI_CWindows_CUI_CNotifications_CIScheduledTileNotification
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CNotifications_CIScheduledTileNotificationVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CNotifications_CIScheduledTileNotification;
#endif /* !defined(____x_ABI_CWindows_CUI_CNotifications_CIScheduledTileNotification_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CNotifications_CIScheduledTileNotificationFactory_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CNotifications_CIScheduledTileNotificationFactory_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CNotifications_CIScheduledTileNotificationFactoryVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CNotifications_CIScheduledTileNotificationFactory* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CNotifications_CIScheduledTileNotificationFactory* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CNotifications_CIScheduledTileNotificationFactory* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CNotifications_CIScheduledTileNotificationFactory* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CNotifications_CIScheduledTileNotificationFactory* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CNotifications_CIScheduledTileNotificationFactory* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* CreateScheduledTileNotification)(__x_ABI_CWindows_CUI_CNotifications_CIScheduledTileNotificationFactory* This,
        __x_ABI_CWindows_CData_CXml_CDom_CIXmlDocument* content,
        struct __x_ABI_CWindows_CFoundation_CDateTime deliveryTime,
        __x_ABI_CWindows_CUI_CNotifications_CIScheduledTileNotification** value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CNotifications_CIScheduledTileNotificationFactoryVtbl;

    interface __x_ABI_CWindows_CUI_CNotifications_CIScheduledTileNotificationFactory
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CNotifications_CIScheduledTileNotificationFactoryVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CNotifications_CIScheduledTileNotificationFactory;
#endif /* !defined(____x_ABI_CWindows_CUI_CNotifications_CIScheduledTileNotificationFactory_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CNotifications_CIScheduledToastNotification_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CNotifications_CIScheduledToastNotification_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CNotifications_CIScheduledToastNotificationVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CNotifications_CIScheduledToastNotification* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CNotifications_CIScheduledToastNotification* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CNotifications_CIScheduledToastNotification* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CNotifications_CIScheduledToastNotification* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CNotifications_CIScheduledToastNotification* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CNotifications_CIScheduledToastNotification* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Content)(__x_ABI_CWindows_CUI_CNotifications_CIScheduledToastNotification* This,
        __x_ABI_CWindows_CData_CXml_CDom_CIXmlDocument** value);
    HRESULT (STDMETHODCALLTYPE* get_DeliveryTime)(__x_ABI_CWindows_CUI_CNotifications_CIScheduledToastNotification* This,
        struct __x_ABI_CWindows_CFoundation_CDateTime* value);
    HRESULT (STDMETHODCALLTYPE* get_SnoozeInterval)(__x_ABI_CWindows_CUI_CNotifications_CIScheduledToastNotification* This,
        __x_ABI_C__FIReference_1___x_ABI_CWindows__CFoundation__CTimeSpan** value);
    HRESULT (STDMETHODCALLTYPE* get_MaximumSnoozeCount)(__x_ABI_CWindows_CUI_CNotifications_CIScheduledToastNotification* This,
        UINT32* value);
    HRESULT (STDMETHODCALLTYPE* put_Id)(__x_ABI_CWindows_CUI_CNotifications_CIScheduledToastNotification* This,
        HSTRING value);
    HRESULT (STDMETHODCALLTYPE* get_Id)(__x_ABI_CWindows_CUI_CNotifications_CIScheduledToastNotification* This,
        HSTRING* value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CNotifications_CIScheduledToastNotificationVtbl;

    interface __x_ABI_CWindows_CUI_CNotifications_CIScheduledToastNotification
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CNotifications_CIScheduledToastNotificationVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CNotifications_CIScheduledToastNotification;
#endif /* !defined(____x_ABI_CWindows_CUI_CNotifications_CIScheduledToastNotification_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CNotifications_CIScheduledToastNotification2_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CNotifications_CIScheduledToastNotification2_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CNotifications_CIScheduledToastNotification2Vtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CNotifications_CIScheduledToastNotification2* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CNotifications_CIScheduledToastNotification2* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CNotifications_CIScheduledToastNotification2* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CNotifications_CIScheduledToastNotification2* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CNotifications_CIScheduledToastNotification2* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CNotifications_CIScheduledToastNotification2* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* put_Tag)(__x_ABI_CWindows_CUI_CNotifications_CIScheduledToastNotification2* This,
        HSTRING value);
    HRESULT (STDMETHODCALLTYPE* get_Tag)(__x_ABI_CWindows_CUI_CNotifications_CIScheduledToastNotification2* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* put_Group)(__x_ABI_CWindows_CUI_CNotifications_CIScheduledToastNotification2* This,
        HSTRING value);
    HRESULT (STDMETHODCALLTYPE* get_Group)(__x_ABI_CWindows_CUI_CNotifications_CIScheduledToastNotification2* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* put_SuppressPopup)(__x_ABI_CWindows_CUI_CNotifications_CIScheduledToastNotification2* This,
        boolean value);
    HRESULT (STDMETHODCALLTYPE* get_SuppressPopup)(__x_ABI_CWindows_CUI_CNotifications_CIScheduledToastNotification2* This,
        boolean* value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CNotifications_CIScheduledToastNotification2Vtbl;

    interface __x_ABI_CWindows_CUI_CNotifications_CIScheduledToastNotification2
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CNotifications_CIScheduledToastNotification2Vtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CNotifications_CIScheduledToastNotification2;
#endif /* !defined(____x_ABI_CWindows_CUI_CNotifications_CIScheduledToastNotification2_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CNotifications_CIScheduledToastNotification3_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CNotifications_CIScheduledToastNotification3_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CNotifications_CIScheduledToastNotification3Vtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CNotifications_CIScheduledToastNotification3* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CNotifications_CIScheduledToastNotification3* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CNotifications_CIScheduledToastNotification3* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CNotifications_CIScheduledToastNotification3* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CNotifications_CIScheduledToastNotification3* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CNotifications_CIScheduledToastNotification3* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_NotificationMirroring)(__x_ABI_CWindows_CUI_CNotifications_CIScheduledToastNotification3* This,
        enum __x_ABI_CWindows_CUI_CNotifications_CNotificationMirroring* value);
    HRESULT (STDMETHODCALLTYPE* put_NotificationMirroring)(__x_ABI_CWindows_CUI_CNotifications_CIScheduledToastNotification3* This,
        enum __x_ABI_CWindows_CUI_CNotifications_CNotificationMirroring value);
    HRESULT (STDMETHODCALLTYPE* get_RemoteId)(__x_ABI_CWindows_CUI_CNotifications_CIScheduledToastNotification3* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* put_RemoteId)(__x_ABI_CWindows_CUI_CNotifications_CIScheduledToastNotification3* This,
        HSTRING value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CNotifications_CIScheduledToastNotification3Vtbl;

    interface __x_ABI_CWindows_CUI_CNotifications_CIScheduledToastNotification3
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CNotifications_CIScheduledToastNotification3Vtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CNotifications_CIScheduledToastNotification3;
#endif /* !defined(____x_ABI_CWindows_CUI_CNotifications_CIScheduledToastNotification3_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CNotifications_CIScheduledToastNotification4_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CNotifications_CIScheduledToastNotification4_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CNotifications_CIScheduledToastNotification4Vtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CNotifications_CIScheduledToastNotification4* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CNotifications_CIScheduledToastNotification4* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CNotifications_CIScheduledToastNotification4* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CNotifications_CIScheduledToastNotification4* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CNotifications_CIScheduledToastNotification4* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CNotifications_CIScheduledToastNotification4* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_ExpirationTime)(__x_ABI_CWindows_CUI_CNotifications_CIScheduledToastNotification4* This,
        __x_ABI_C__FIReference_1___x_ABI_CWindows__CFoundation__CDateTime** value);
    HRESULT (STDMETHODCALLTYPE* put_ExpirationTime)(__x_ABI_CWindows_CUI_CNotifications_CIScheduledToastNotification4* This,
        __x_ABI_C__FIReference_1___x_ABI_CWindows__CFoundation__CDateTime* value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CNotifications_CIScheduledToastNotification4Vtbl;

    interface __x_ABI_CWindows_CUI_CNotifications_CIScheduledToastNotification4
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CNotifications_CIScheduledToastNotification4Vtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CNotifications_CIScheduledToastNotification4;
#endif /* !defined(____x_ABI_CWindows_CUI_CNotifications_CIScheduledToastNotification4_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CNotifications_CIScheduledToastNotificationFactory_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CNotifications_CIScheduledToastNotificationFactory_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CNotifications_CIScheduledToastNotificationFactoryVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CNotifications_CIScheduledToastNotificationFactory* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CNotifications_CIScheduledToastNotificationFactory* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CNotifications_CIScheduledToastNotificationFactory* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CNotifications_CIScheduledToastNotificationFactory* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CNotifications_CIScheduledToastNotificationFactory* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CNotifications_CIScheduledToastNotificationFactory* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* CreateScheduledToastNotification)(__x_ABI_CWindows_CUI_CNotifications_CIScheduledToastNotificationFactory* This,
        __x_ABI_CWindows_CData_CXml_CDom_CIXmlDocument* content,
        struct __x_ABI_CWindows_CFoundation_CDateTime deliveryTime,
        __x_ABI_CWindows_CUI_CNotifications_CIScheduledToastNotification** value);
    HRESULT (STDMETHODCALLTYPE* CreateScheduledToastNotificationRecurring)(__x_ABI_CWindows_CUI_CNotifications_CIScheduledToastNotificationFactory* This,
        __x_ABI_CWindows_CData_CXml_CDom_CIXmlDocument* content,
        struct __x_ABI_CWindows_CFoundation_CDateTime deliveryTime,
        struct __x_ABI_CWindows_CFoundation_CTimeSpan snoozeInterval,
        UINT32 maximumSnoozeCount,
        __x_ABI_CWindows_CUI_CNotifications_CIScheduledToastNotification** value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CNotifications_CIScheduledToastNotificationFactoryVtbl;

    interface __x_ABI_CWindows_CUI_CNotifications_CIScheduledToastNotificationFactory
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CNotifications_CIScheduledToastNotificationFactoryVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CNotifications_CIScheduledToastNotificationFactory;
#endif /* !defined(____x_ABI_CWindows_CUI_CNotifications_CIScheduledToastNotificationFactory_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CNotifications_CIScheduledToastNotificationShowingEventArgs_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CNotifications_CIScheduledToastNotificationShowingEventArgs_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CNotifications_CIScheduledToastNotificationShowingEventArgsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CNotifications_CIScheduledToastNotificationShowingEventArgs* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CNotifications_CIScheduledToastNotificationShowingEventArgs* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CNotifications_CIScheduledToastNotificationShowingEventArgs* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CNotifications_CIScheduledToastNotificationShowingEventArgs* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CNotifications_CIScheduledToastNotificationShowingEventArgs* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CNotifications_CIScheduledToastNotificationShowingEventArgs* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Cancel)(__x_ABI_CWindows_CUI_CNotifications_CIScheduledToastNotificationShowingEventArgs* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* put_Cancel)(__x_ABI_CWindows_CUI_CNotifications_CIScheduledToastNotificationShowingEventArgs* This,
        boolean value);
    HRESULT (STDMETHODCALLTYPE* get_ScheduledToastNotification)(__x_ABI_CWindows_CUI_CNotifications_CIScheduledToastNotificationShowingEventArgs* This,
        __x_ABI_CWindows_CUI_CNotifications_CIScheduledToastNotification** value);
    HRESULT (STDMETHODCALLTYPE* GetDeferral)(__x_ABI_CWindows_CUI_CNotifications_CIScheduledToastNotificationShowingEventArgs* This,
        __x_ABI_CWindows_CFoundation_CIDeferral** result);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CNotifications_CIScheduledToastNotificationShowingEventArgsVtbl;

    interface __x_ABI_CWindows_CUI_CNotifications_CIScheduledToastNotificationShowingEventArgs
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CNotifications_CIScheduledToastNotificationShowingEventArgsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CNotifications_CIScheduledToastNotificationShowingEventArgs;
#endif /* !defined(____x_ABI_CWindows_CUI_CNotifications_CIScheduledToastNotificationShowingEventArgs_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CNotifications_CIShownTileNotification_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CNotifications_CIShownTileNotification_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CNotifications_CIShownTileNotificationVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CNotifications_CIShownTileNotification* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CNotifications_CIShownTileNotification* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CNotifications_CIShownTileNotification* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CNotifications_CIShownTileNotification* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CNotifications_CIShownTileNotification* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CNotifications_CIShownTileNotification* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Arguments)(__x_ABI_CWindows_CUI_CNotifications_CIShownTileNotification* This,
        HSTRING* value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CNotifications_CIShownTileNotificationVtbl;

    interface __x_ABI_CWindows_CUI_CNotifications_CIShownTileNotification
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CNotifications_CIShownTileNotificationVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CNotifications_CIShownTileNotification;
#endif /* !defined(____x_ABI_CWindows_CUI_CNotifications_CIShownTileNotification_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CNotifications_CITileFlyoutNotification_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CNotifications_CITileFlyoutNotification_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CNotifications_CITileFlyoutNotificationVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CNotifications_CITileFlyoutNotification* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CNotifications_CITileFlyoutNotification* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CNotifications_CITileFlyoutNotification* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CNotifications_CITileFlyoutNotification* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CNotifications_CITileFlyoutNotification* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CNotifications_CITileFlyoutNotification* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Content)(__x_ABI_CWindows_CUI_CNotifications_CITileFlyoutNotification* This,
        __x_ABI_CWindows_CData_CXml_CDom_CIXmlDocument** value);
    HRESULT (STDMETHODCALLTYPE* put_ExpirationTime)(__x_ABI_CWindows_CUI_CNotifications_CITileFlyoutNotification* This,
        __x_ABI_C__FIReference_1___x_ABI_CWindows__CFoundation__CDateTime* value);
    HRESULT (STDMETHODCALLTYPE* get_ExpirationTime)(__x_ABI_CWindows_CUI_CNotifications_CITileFlyoutNotification* This,
        __x_ABI_C__FIReference_1___x_ABI_CWindows__CFoundation__CDateTime** value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CNotifications_CITileFlyoutNotificationVtbl;

    interface __x_ABI_CWindows_CUI_CNotifications_CITileFlyoutNotification
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CNotifications_CITileFlyoutNotificationVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CNotifications_CITileFlyoutNotification;
#endif /* !defined(____x_ABI_CWindows_CUI_CNotifications_CITileFlyoutNotification_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CNotifications_CITileFlyoutNotificationFactory_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CNotifications_CITileFlyoutNotificationFactory_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CNotifications_CITileFlyoutNotificationFactoryVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CNotifications_CITileFlyoutNotificationFactory* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CNotifications_CITileFlyoutNotificationFactory* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CNotifications_CITileFlyoutNotificationFactory* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CNotifications_CITileFlyoutNotificationFactory* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CNotifications_CITileFlyoutNotificationFactory* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CNotifications_CITileFlyoutNotificationFactory* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* CreateTileFlyoutNotification)(__x_ABI_CWindows_CUI_CNotifications_CITileFlyoutNotificationFactory* This,
        __x_ABI_CWindows_CData_CXml_CDom_CIXmlDocument* content,
        __x_ABI_CWindows_CUI_CNotifications_CITileFlyoutNotification** value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CNotifications_CITileFlyoutNotificationFactoryVtbl;

    interface __x_ABI_CWindows_CUI_CNotifications_CITileFlyoutNotificationFactory
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CNotifications_CITileFlyoutNotificationFactoryVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CNotifications_CITileFlyoutNotificationFactory;
#endif /* !defined(____x_ABI_CWindows_CUI_CNotifications_CITileFlyoutNotificationFactory_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CNotifications_CITileFlyoutUpdateManagerStatics_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CNotifications_CITileFlyoutUpdateManagerStatics_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CNotifications_CITileFlyoutUpdateManagerStaticsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CNotifications_CITileFlyoutUpdateManagerStatics* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CNotifications_CITileFlyoutUpdateManagerStatics* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CNotifications_CITileFlyoutUpdateManagerStatics* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CNotifications_CITileFlyoutUpdateManagerStatics* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CNotifications_CITileFlyoutUpdateManagerStatics* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CNotifications_CITileFlyoutUpdateManagerStatics* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* CreateTileFlyoutUpdaterForApplication)(__x_ABI_CWindows_CUI_CNotifications_CITileFlyoutUpdateManagerStatics* This,
        __x_ABI_CWindows_CUI_CNotifications_CITileFlyoutUpdater** result);
    HRESULT (STDMETHODCALLTYPE* CreateTileFlyoutUpdaterForApplicationWithId)(__x_ABI_CWindows_CUI_CNotifications_CITileFlyoutUpdateManagerStatics* This,
        HSTRING applicationId,
        __x_ABI_CWindows_CUI_CNotifications_CITileFlyoutUpdater** result);
    HRESULT (STDMETHODCALLTYPE* CreateTileFlyoutUpdaterForSecondaryTile)(__x_ABI_CWindows_CUI_CNotifications_CITileFlyoutUpdateManagerStatics* This,
        HSTRING tileId,
        __x_ABI_CWindows_CUI_CNotifications_CITileFlyoutUpdater** result);
    HRESULT (STDMETHODCALLTYPE* GetTemplateContent)(__x_ABI_CWindows_CUI_CNotifications_CITileFlyoutUpdateManagerStatics* This,
        enum __x_ABI_CWindows_CUI_CNotifications_CTileFlyoutTemplateType type,
        __x_ABI_CWindows_CData_CXml_CDom_CIXmlDocument** result);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CNotifications_CITileFlyoutUpdateManagerStaticsVtbl;

    interface __x_ABI_CWindows_CUI_CNotifications_CITileFlyoutUpdateManagerStatics
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CNotifications_CITileFlyoutUpdateManagerStaticsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CNotifications_CITileFlyoutUpdateManagerStatics;
#endif /* !defined(____x_ABI_CWindows_CUI_CNotifications_CITileFlyoutUpdateManagerStatics_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CNotifications_CITileFlyoutUpdater_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CNotifications_CITileFlyoutUpdater_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CNotifications_CITileFlyoutUpdaterVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CNotifications_CITileFlyoutUpdater* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CNotifications_CITileFlyoutUpdater* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CNotifications_CITileFlyoutUpdater* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CNotifications_CITileFlyoutUpdater* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CNotifications_CITileFlyoutUpdater* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CNotifications_CITileFlyoutUpdater* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* Update)(__x_ABI_CWindows_CUI_CNotifications_CITileFlyoutUpdater* This,
        __x_ABI_CWindows_CUI_CNotifications_CITileFlyoutNotification* notification);
    HRESULT (STDMETHODCALLTYPE* Clear)(__x_ABI_CWindows_CUI_CNotifications_CITileFlyoutUpdater* This);
    HRESULT (STDMETHODCALLTYPE* StartPeriodicUpdate)(__x_ABI_CWindows_CUI_CNotifications_CITileFlyoutUpdater* This,
        __x_ABI_CWindows_CFoundation_CIUriRuntimeClass* tileFlyoutContent,
        enum __x_ABI_CWindows_CUI_CNotifications_CPeriodicUpdateRecurrence requestedInterval);
    HRESULT (STDMETHODCALLTYPE* StartPeriodicUpdateAtTime)(__x_ABI_CWindows_CUI_CNotifications_CITileFlyoutUpdater* This,
        __x_ABI_CWindows_CFoundation_CIUriRuntimeClass* tileFlyoutContent,
        struct __x_ABI_CWindows_CFoundation_CDateTime startTime,
        enum __x_ABI_CWindows_CUI_CNotifications_CPeriodicUpdateRecurrence requestedInterval);
    HRESULT (STDMETHODCALLTYPE* StopPeriodicUpdate)(__x_ABI_CWindows_CUI_CNotifications_CITileFlyoutUpdater* This);
    HRESULT (STDMETHODCALLTYPE* get_Setting)(__x_ABI_CWindows_CUI_CNotifications_CITileFlyoutUpdater* This,
        enum __x_ABI_CWindows_CUI_CNotifications_CNotificationSetting* value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CNotifications_CITileFlyoutUpdaterVtbl;

    interface __x_ABI_CWindows_CUI_CNotifications_CITileFlyoutUpdater
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CNotifications_CITileFlyoutUpdaterVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CNotifications_CITileFlyoutUpdater;
#endif /* !defined(____x_ABI_CWindows_CUI_CNotifications_CITileFlyoutUpdater_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CNotifications_CITileNotification_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CNotifications_CITileNotification_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CNotifications_CITileNotificationVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CNotifications_CITileNotification* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CNotifications_CITileNotification* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CNotifications_CITileNotification* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CNotifications_CITileNotification* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CNotifications_CITileNotification* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CNotifications_CITileNotification* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Content)(__x_ABI_CWindows_CUI_CNotifications_CITileNotification* This,
        __x_ABI_CWindows_CData_CXml_CDom_CIXmlDocument** value);
    HRESULT (STDMETHODCALLTYPE* put_ExpirationTime)(__x_ABI_CWindows_CUI_CNotifications_CITileNotification* This,
        __x_ABI_C__FIReference_1___x_ABI_CWindows__CFoundation__CDateTime* value);
    HRESULT (STDMETHODCALLTYPE* get_ExpirationTime)(__x_ABI_CWindows_CUI_CNotifications_CITileNotification* This,
        __x_ABI_C__FIReference_1___x_ABI_CWindows__CFoundation__CDateTime** value);
    HRESULT (STDMETHODCALLTYPE* put_Tag)(__x_ABI_CWindows_CUI_CNotifications_CITileNotification* This,
        HSTRING value);
    HRESULT (STDMETHODCALLTYPE* get_Tag)(__x_ABI_CWindows_CUI_CNotifications_CITileNotification* This,
        HSTRING* value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CNotifications_CITileNotificationVtbl;

    interface __x_ABI_CWindows_CUI_CNotifications_CITileNotification
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CNotifications_CITileNotificationVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CNotifications_CITileNotification;
#endif /* !defined(____x_ABI_CWindows_CUI_CNotifications_CITileNotification_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CNotifications_CITileNotificationFactory_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CNotifications_CITileNotificationFactory_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CNotifications_CITileNotificationFactoryVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CNotifications_CITileNotificationFactory* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CNotifications_CITileNotificationFactory* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CNotifications_CITileNotificationFactory* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CNotifications_CITileNotificationFactory* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CNotifications_CITileNotificationFactory* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CNotifications_CITileNotificationFactory* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* CreateTileNotification)(__x_ABI_CWindows_CUI_CNotifications_CITileNotificationFactory* This,
        __x_ABI_CWindows_CData_CXml_CDom_CIXmlDocument* content,
        __x_ABI_CWindows_CUI_CNotifications_CITileNotification** value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CNotifications_CITileNotificationFactoryVtbl;

    interface __x_ABI_CWindows_CUI_CNotifications_CITileNotificationFactory
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CNotifications_CITileNotificationFactoryVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CNotifications_CITileNotificationFactory;
#endif /* !defined(____x_ABI_CWindows_CUI_CNotifications_CITileNotificationFactory_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CNotifications_CITileUpdateManagerForUser_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CNotifications_CITileUpdateManagerForUser_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CNotifications_CITileUpdateManagerForUserVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CNotifications_CITileUpdateManagerForUser* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CNotifications_CITileUpdateManagerForUser* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CNotifications_CITileUpdateManagerForUser* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CNotifications_CITileUpdateManagerForUser* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CNotifications_CITileUpdateManagerForUser* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CNotifications_CITileUpdateManagerForUser* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* CreateTileUpdaterForApplication)(__x_ABI_CWindows_CUI_CNotifications_CITileUpdateManagerForUser* This,
        __x_ABI_CWindows_CUI_CNotifications_CITileUpdater** result);
    HRESULT (STDMETHODCALLTYPE* CreateTileUpdaterForApplicationWithId)(__x_ABI_CWindows_CUI_CNotifications_CITileUpdateManagerForUser* This,
        HSTRING applicationId,
        __x_ABI_CWindows_CUI_CNotifications_CITileUpdater** result);
    HRESULT (STDMETHODCALLTYPE* CreateTileUpdaterForSecondaryTile)(__x_ABI_CWindows_CUI_CNotifications_CITileUpdateManagerForUser* This,
        HSTRING tileId,
        __x_ABI_CWindows_CUI_CNotifications_CITileUpdater** result);
    HRESULT (STDMETHODCALLTYPE* get_User)(__x_ABI_CWindows_CUI_CNotifications_CITileUpdateManagerForUser* This,
        __x_ABI_CWindows_CSystem_CIUser** value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CNotifications_CITileUpdateManagerForUserVtbl;

    interface __x_ABI_CWindows_CUI_CNotifications_CITileUpdateManagerForUser
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CNotifications_CITileUpdateManagerForUserVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CNotifications_CITileUpdateManagerForUser;
#endif /* !defined(____x_ABI_CWindows_CUI_CNotifications_CITileUpdateManagerForUser_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CNotifications_CITileUpdateManagerStatics_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CNotifications_CITileUpdateManagerStatics_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CNotifications_CITileUpdateManagerStaticsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CNotifications_CITileUpdateManagerStatics* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CNotifications_CITileUpdateManagerStatics* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CNotifications_CITileUpdateManagerStatics* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CNotifications_CITileUpdateManagerStatics* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CNotifications_CITileUpdateManagerStatics* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CNotifications_CITileUpdateManagerStatics* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* CreateTileUpdaterForApplication)(__x_ABI_CWindows_CUI_CNotifications_CITileUpdateManagerStatics* This,
        __x_ABI_CWindows_CUI_CNotifications_CITileUpdater** result);
    HRESULT (STDMETHODCALLTYPE* CreateTileUpdaterForApplicationWithId)(__x_ABI_CWindows_CUI_CNotifications_CITileUpdateManagerStatics* This,
        HSTRING applicationId,
        __x_ABI_CWindows_CUI_CNotifications_CITileUpdater** result);
    HRESULT (STDMETHODCALLTYPE* CreateTileUpdaterForSecondaryTile)(__x_ABI_CWindows_CUI_CNotifications_CITileUpdateManagerStatics* This,
        HSTRING tileId,
        __x_ABI_CWindows_CUI_CNotifications_CITileUpdater** result);
    HRESULT (STDMETHODCALLTYPE* GetTemplateContent)(__x_ABI_CWindows_CUI_CNotifications_CITileUpdateManagerStatics* This,
        enum __x_ABI_CWindows_CUI_CNotifications_CTileTemplateType type,
        __x_ABI_CWindows_CData_CXml_CDom_CIXmlDocument** result);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CNotifications_CITileUpdateManagerStaticsVtbl;

    interface __x_ABI_CWindows_CUI_CNotifications_CITileUpdateManagerStatics
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CNotifications_CITileUpdateManagerStaticsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CNotifications_CITileUpdateManagerStatics;
#endif /* !defined(____x_ABI_CWindows_CUI_CNotifications_CITileUpdateManagerStatics_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CNotifications_CITileUpdateManagerStatics2_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CNotifications_CITileUpdateManagerStatics2_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CNotifications_CITileUpdateManagerStatics2Vtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CNotifications_CITileUpdateManagerStatics2* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CNotifications_CITileUpdateManagerStatics2* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CNotifications_CITileUpdateManagerStatics2* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CNotifications_CITileUpdateManagerStatics2* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CNotifications_CITileUpdateManagerStatics2* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CNotifications_CITileUpdateManagerStatics2* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* GetForUser)(__x_ABI_CWindows_CUI_CNotifications_CITileUpdateManagerStatics2* This,
        __x_ABI_CWindows_CSystem_CIUser* user,
        __x_ABI_CWindows_CUI_CNotifications_CITileUpdateManagerForUser** result);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CNotifications_CITileUpdateManagerStatics2Vtbl;

    interface __x_ABI_CWindows_CUI_CNotifications_CITileUpdateManagerStatics2
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CNotifications_CITileUpdateManagerStatics2Vtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CNotifications_CITileUpdateManagerStatics2;
#endif /* !defined(____x_ABI_CWindows_CUI_CNotifications_CITileUpdateManagerStatics2_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CNotifications_CITileUpdater_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CNotifications_CITileUpdater_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CNotifications_CITileUpdaterVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CNotifications_CITileUpdater* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CNotifications_CITileUpdater* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CNotifications_CITileUpdater* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CNotifications_CITileUpdater* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CNotifications_CITileUpdater* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CNotifications_CITileUpdater* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* Update)(__x_ABI_CWindows_CUI_CNotifications_CITileUpdater* This,
        __x_ABI_CWindows_CUI_CNotifications_CITileNotification* notification);
    HRESULT (STDMETHODCALLTYPE* Clear)(__x_ABI_CWindows_CUI_CNotifications_CITileUpdater* This);
    HRESULT (STDMETHODCALLTYPE* EnableNotificationQueue)(__x_ABI_CWindows_CUI_CNotifications_CITileUpdater* This,
        boolean enable);
    HRESULT (STDMETHODCALLTYPE* get_Setting)(__x_ABI_CWindows_CUI_CNotifications_CITileUpdater* This,
        enum __x_ABI_CWindows_CUI_CNotifications_CNotificationSetting* value);
    HRESULT (STDMETHODCALLTYPE* AddToSchedule)(__x_ABI_CWindows_CUI_CNotifications_CITileUpdater* This,
        __x_ABI_CWindows_CUI_CNotifications_CIScheduledTileNotification* scheduledTile);
    HRESULT (STDMETHODCALLTYPE* RemoveFromSchedule)(__x_ABI_CWindows_CUI_CNotifications_CITileUpdater* This,
        __x_ABI_CWindows_CUI_CNotifications_CIScheduledTileNotification* scheduledTile);
    HRESULT (STDMETHODCALLTYPE* GetScheduledTileNotifications)(__x_ABI_CWindows_CUI_CNotifications_CITileUpdater* This,
        __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CNotifications__CScheduledTileNotification** result);
    HRESULT (STDMETHODCALLTYPE* StartPeriodicUpdate)(__x_ABI_CWindows_CUI_CNotifications_CITileUpdater* This,
        __x_ABI_CWindows_CFoundation_CIUriRuntimeClass* tileContent,
        enum __x_ABI_CWindows_CUI_CNotifications_CPeriodicUpdateRecurrence requestedInterval);
    HRESULT (STDMETHODCALLTYPE* StartPeriodicUpdateAtTime)(__x_ABI_CWindows_CUI_CNotifications_CITileUpdater* This,
        __x_ABI_CWindows_CFoundation_CIUriRuntimeClass* tileContent,
        struct __x_ABI_CWindows_CFoundation_CDateTime startTime,
        enum __x_ABI_CWindows_CUI_CNotifications_CPeriodicUpdateRecurrence requestedInterval);
    HRESULT (STDMETHODCALLTYPE* StopPeriodicUpdate)(__x_ABI_CWindows_CUI_CNotifications_CITileUpdater* This);
    HRESULT (STDMETHODCALLTYPE* StartPeriodicUpdateBatch)(__x_ABI_CWindows_CUI_CNotifications_CITileUpdater* This,
        __x_ABI_C__FIIterable_1___x_ABI_CWindows__CFoundation__CUri* tileContents,
        enum __x_ABI_CWindows_CUI_CNotifications_CPeriodicUpdateRecurrence requestedInterval);
    HRESULT (STDMETHODCALLTYPE* StartPeriodicUpdateBatchAtTime)(__x_ABI_CWindows_CUI_CNotifications_CITileUpdater* This,
        __x_ABI_C__FIIterable_1___x_ABI_CWindows__CFoundation__CUri* tileContents,
        struct __x_ABI_CWindows_CFoundation_CDateTime startTime,
        enum __x_ABI_CWindows_CUI_CNotifications_CPeriodicUpdateRecurrence requestedInterval);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CNotifications_CITileUpdaterVtbl;

    interface __x_ABI_CWindows_CUI_CNotifications_CITileUpdater
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CNotifications_CITileUpdaterVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CNotifications_CITileUpdater;
#endif /* !defined(____x_ABI_CWindows_CUI_CNotifications_CITileUpdater_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CNotifications_CITileUpdater2_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CNotifications_CITileUpdater2_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CNotifications_CITileUpdater2Vtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CNotifications_CITileUpdater2* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CNotifications_CITileUpdater2* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CNotifications_CITileUpdater2* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CNotifications_CITileUpdater2* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CNotifications_CITileUpdater2* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CNotifications_CITileUpdater2* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* EnableNotificationQueueForSquare150x150)(__x_ABI_CWindows_CUI_CNotifications_CITileUpdater2* This,
        boolean enable);
    HRESULT (STDMETHODCALLTYPE* EnableNotificationQueueForWide310x150)(__x_ABI_CWindows_CUI_CNotifications_CITileUpdater2* This,
        boolean enable);
    HRESULT (STDMETHODCALLTYPE* EnableNotificationQueueForSquare310x310)(__x_ABI_CWindows_CUI_CNotifications_CITileUpdater2* This,
        boolean enable);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CNotifications_CITileUpdater2Vtbl;

    interface __x_ABI_CWindows_CUI_CNotifications_CITileUpdater2
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CNotifications_CITileUpdater2Vtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CNotifications_CITileUpdater2;
#endif /* !defined(____x_ABI_CWindows_CUI_CNotifications_CITileUpdater2_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CNotifications_CIToastActivatedEventArgs_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CNotifications_CIToastActivatedEventArgs_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CNotifications_CIToastActivatedEventArgsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CNotifications_CIToastActivatedEventArgs* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CNotifications_CIToastActivatedEventArgs* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CNotifications_CIToastActivatedEventArgs* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CNotifications_CIToastActivatedEventArgs* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CNotifications_CIToastActivatedEventArgs* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CNotifications_CIToastActivatedEventArgs* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Arguments)(__x_ABI_CWindows_CUI_CNotifications_CIToastActivatedEventArgs* This,
        HSTRING* value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CNotifications_CIToastActivatedEventArgsVtbl;

    interface __x_ABI_CWindows_CUI_CNotifications_CIToastActivatedEventArgs
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CNotifications_CIToastActivatedEventArgsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CNotifications_CIToastActivatedEventArgs;
#endif /* !defined(____x_ABI_CWindows_CUI_CNotifications_CIToastActivatedEventArgs_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CNotifications_CIToastActivatedEventArgs2_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CNotifications_CIToastActivatedEventArgs2_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CNotifications_CIToastActivatedEventArgs2Vtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CNotifications_CIToastActivatedEventArgs2* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CNotifications_CIToastActivatedEventArgs2* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CNotifications_CIToastActivatedEventArgs2* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CNotifications_CIToastActivatedEventArgs2* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CNotifications_CIToastActivatedEventArgs2* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CNotifications_CIToastActivatedEventArgs2* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_UserInput)(__x_ABI_CWindows_CUI_CNotifications_CIToastActivatedEventArgs2* This,
        __x_ABI_CWindows_CFoundation_CCollections_CIPropertySet** value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CNotifications_CIToastActivatedEventArgs2Vtbl;

    interface __x_ABI_CWindows_CUI_CNotifications_CIToastActivatedEventArgs2
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CNotifications_CIToastActivatedEventArgs2Vtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CNotifications_CIToastActivatedEventArgs2;
#endif /* !defined(____x_ABI_CWindows_CUI_CNotifications_CIToastActivatedEventArgs2_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CNotifications_CIToastCollection_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CNotifications_CIToastCollection_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CNotifications_CIToastCollectionVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CNotifications_CIToastCollection* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CNotifications_CIToastCollection* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CNotifications_CIToastCollection* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CNotifications_CIToastCollection* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CNotifications_CIToastCollection* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CNotifications_CIToastCollection* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Id)(__x_ABI_CWindows_CUI_CNotifications_CIToastCollection* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* get_DisplayName)(__x_ABI_CWindows_CUI_CNotifications_CIToastCollection* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* put_DisplayName)(__x_ABI_CWindows_CUI_CNotifications_CIToastCollection* This,
        HSTRING value);
    HRESULT (STDMETHODCALLTYPE* get_LaunchArgs)(__x_ABI_CWindows_CUI_CNotifications_CIToastCollection* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* put_LaunchArgs)(__x_ABI_CWindows_CUI_CNotifications_CIToastCollection* This,
        HSTRING value);
    HRESULT (STDMETHODCALLTYPE* get_Icon)(__x_ABI_CWindows_CUI_CNotifications_CIToastCollection* This,
        __x_ABI_CWindows_CFoundation_CIUriRuntimeClass** value);
    HRESULT (STDMETHODCALLTYPE* put_Icon)(__x_ABI_CWindows_CUI_CNotifications_CIToastCollection* This,
        __x_ABI_CWindows_CFoundation_CIUriRuntimeClass* value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CNotifications_CIToastCollectionVtbl;

    interface __x_ABI_CWindows_CUI_CNotifications_CIToastCollection
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CNotifications_CIToastCollectionVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CNotifications_CIToastCollection;
#endif /* !defined(____x_ABI_CWindows_CUI_CNotifications_CIToastCollection_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CNotifications_CIToastCollectionFactory_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CNotifications_CIToastCollectionFactory_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CNotifications_CIToastCollectionFactoryVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CNotifications_CIToastCollectionFactory* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CNotifications_CIToastCollectionFactory* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CNotifications_CIToastCollectionFactory* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CNotifications_CIToastCollectionFactory* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CNotifications_CIToastCollectionFactory* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CNotifications_CIToastCollectionFactory* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* CreateInstance)(__x_ABI_CWindows_CUI_CNotifications_CIToastCollectionFactory* This,
        HSTRING collectionId,
        HSTRING displayName,
        HSTRING launchArgs,
        __x_ABI_CWindows_CFoundation_CIUriRuntimeClass* iconUri,
        __x_ABI_CWindows_CUI_CNotifications_CIToastCollection** value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CNotifications_CIToastCollectionFactoryVtbl;

    interface __x_ABI_CWindows_CUI_CNotifications_CIToastCollectionFactory
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CNotifications_CIToastCollectionFactoryVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CNotifications_CIToastCollectionFactory;
#endif /* !defined(____x_ABI_CWindows_CUI_CNotifications_CIToastCollectionFactory_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CNotifications_CIToastCollectionManager_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CNotifications_CIToastCollectionManager_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CNotifications_CIToastCollectionManagerVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CNotifications_CIToastCollectionManager* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CNotifications_CIToastCollectionManager* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CNotifications_CIToastCollectionManager* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CNotifications_CIToastCollectionManager* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CNotifications_CIToastCollectionManager* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CNotifications_CIToastCollectionManager* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* SaveToastCollectionAsync)(__x_ABI_CWindows_CUI_CNotifications_CIToastCollectionManager* This,
        __x_ABI_CWindows_CUI_CNotifications_CIToastCollection* collection,
        __x_ABI_CWindows_CFoundation_CIAsyncAction** operation);
    HRESULT (STDMETHODCALLTYPE* FindAllToastCollectionsAsync)(__x_ABI_CWindows_CUI_CNotifications_CIToastCollectionManager* This,
        __x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CNotifications__CToastCollection** operation);
    HRESULT (STDMETHODCALLTYPE* GetToastCollectionAsync)(__x_ABI_CWindows_CUI_CNotifications_CIToastCollectionManager* This,
        HSTRING collectionId,
        __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CUI__CNotifications__CToastCollection** operation);
    HRESULT (STDMETHODCALLTYPE* RemoveToastCollectionAsync)(__x_ABI_CWindows_CUI_CNotifications_CIToastCollectionManager* This,
        HSTRING collectionId,
        __x_ABI_CWindows_CFoundation_CIAsyncAction** operation);
    HRESULT (STDMETHODCALLTYPE* RemoveAllToastCollectionsAsync)(__x_ABI_CWindows_CUI_CNotifications_CIToastCollectionManager* This,
        __x_ABI_CWindows_CFoundation_CIAsyncAction** operation);
    HRESULT (STDMETHODCALLTYPE* get_User)(__x_ABI_CWindows_CUI_CNotifications_CIToastCollectionManager* This,
        __x_ABI_CWindows_CSystem_CIUser** value);
    HRESULT (STDMETHODCALLTYPE* get_AppId)(__x_ABI_CWindows_CUI_CNotifications_CIToastCollectionManager* This,
        HSTRING* value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CNotifications_CIToastCollectionManagerVtbl;

    interface __x_ABI_CWindows_CUI_CNotifications_CIToastCollectionManager
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CNotifications_CIToastCollectionManagerVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CNotifications_CIToastCollectionManager;
#endif /* !defined(____x_ABI_CWindows_CUI_CNotifications_CIToastCollectionManager_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CNotifications_CIToastDismissedEventArgs_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CNotifications_CIToastDismissedEventArgs_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CNotifications_CIToastDismissedEventArgsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CNotifications_CIToastDismissedEventArgs* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CNotifications_CIToastDismissedEventArgs* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CNotifications_CIToastDismissedEventArgs* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CNotifications_CIToastDismissedEventArgs* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CNotifications_CIToastDismissedEventArgs* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CNotifications_CIToastDismissedEventArgs* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Reason)(__x_ABI_CWindows_CUI_CNotifications_CIToastDismissedEventArgs* This,
        enum __x_ABI_CWindows_CUI_CNotifications_CToastDismissalReason* value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CNotifications_CIToastDismissedEventArgsVtbl;

    interface __x_ABI_CWindows_CUI_CNotifications_CIToastDismissedEventArgs
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CNotifications_CIToastDismissedEventArgsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CNotifications_CIToastDismissedEventArgs;
#endif /* !defined(____x_ABI_CWindows_CUI_CNotifications_CIToastDismissedEventArgs_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CNotifications_CIToastFailedEventArgs_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CNotifications_CIToastFailedEventArgs_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CNotifications_CIToastFailedEventArgsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CNotifications_CIToastFailedEventArgs* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CNotifications_CIToastFailedEventArgs* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CNotifications_CIToastFailedEventArgs* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CNotifications_CIToastFailedEventArgs* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CNotifications_CIToastFailedEventArgs* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CNotifications_CIToastFailedEventArgs* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_ErrorCode)(__x_ABI_CWindows_CUI_CNotifications_CIToastFailedEventArgs* This,
        HRESULT* value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CNotifications_CIToastFailedEventArgsVtbl;

    interface __x_ABI_CWindows_CUI_CNotifications_CIToastFailedEventArgs
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CNotifications_CIToastFailedEventArgsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CNotifications_CIToastFailedEventArgs;
#endif /* !defined(____x_ABI_CWindows_CUI_CNotifications_CIToastFailedEventArgs_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CNotifications_CIToastNotification_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CNotifications_CIToastNotification_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CNotifications_CIToastNotificationVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CNotifications_CIToastNotification* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CNotifications_CIToastNotification* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CNotifications_CIToastNotification* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CNotifications_CIToastNotification* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CNotifications_CIToastNotification* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CNotifications_CIToastNotification* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Content)(__x_ABI_CWindows_CUI_CNotifications_CIToastNotification* This,
        __x_ABI_CWindows_CData_CXml_CDom_CIXmlDocument** value);
    HRESULT (STDMETHODCALLTYPE* put_ExpirationTime)(__x_ABI_CWindows_CUI_CNotifications_CIToastNotification* This,
        __x_ABI_C__FIReference_1___x_ABI_CWindows__CFoundation__CDateTime* value);
    HRESULT (STDMETHODCALLTYPE* get_ExpirationTime)(__x_ABI_CWindows_CUI_CNotifications_CIToastNotification* This,
        __x_ABI_C__FIReference_1___x_ABI_CWindows__CFoundation__CDateTime** value);
    HRESULT (STDMETHODCALLTYPE* add_Dismissed)(__x_ABI_CWindows_CUI_CNotifications_CIToastNotification* This,
        __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CNotifications__CToastNotification___x_ABI_CWindows__CUI__CNotifications__CToastDismissedEventArgs* handler,
        EventRegistrationToken* token);
    HRESULT (STDMETHODCALLTYPE* remove_Dismissed)(__x_ABI_CWindows_CUI_CNotifications_CIToastNotification* This,
        EventRegistrationToken token);
    HRESULT (STDMETHODCALLTYPE* add_Activated)(__x_ABI_CWindows_CUI_CNotifications_CIToastNotification* This,
        __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CNotifications__CToastNotification_IInspectable* handler,
        EventRegistrationToken* token);
    HRESULT (STDMETHODCALLTYPE* remove_Activated)(__x_ABI_CWindows_CUI_CNotifications_CIToastNotification* This,
        EventRegistrationToken token);
    HRESULT (STDMETHODCALLTYPE* add_Failed)(__x_ABI_CWindows_CUI_CNotifications_CIToastNotification* This,
        __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CNotifications__CToastNotification___x_ABI_CWindows__CUI__CNotifications__CToastFailedEventArgs* handler,
        EventRegistrationToken* token);
    HRESULT (STDMETHODCALLTYPE* remove_Failed)(__x_ABI_CWindows_CUI_CNotifications_CIToastNotification* This,
        EventRegistrationToken token);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CNotifications_CIToastNotificationVtbl;

    interface __x_ABI_CWindows_CUI_CNotifications_CIToastNotification
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CNotifications_CIToastNotificationVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CNotifications_CIToastNotification;
#endif /* !defined(____x_ABI_CWindows_CUI_CNotifications_CIToastNotification_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CNotifications_CIToastNotification2_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CNotifications_CIToastNotification2_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CNotifications_CIToastNotification2Vtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CNotifications_CIToastNotification2* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CNotifications_CIToastNotification2* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CNotifications_CIToastNotification2* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CNotifications_CIToastNotification2* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CNotifications_CIToastNotification2* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CNotifications_CIToastNotification2* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* put_Tag)(__x_ABI_CWindows_CUI_CNotifications_CIToastNotification2* This,
        HSTRING value);
    HRESULT (STDMETHODCALLTYPE* get_Tag)(__x_ABI_CWindows_CUI_CNotifications_CIToastNotification2* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* put_Group)(__x_ABI_CWindows_CUI_CNotifications_CIToastNotification2* This,
        HSTRING value);
    HRESULT (STDMETHODCALLTYPE* get_Group)(__x_ABI_CWindows_CUI_CNotifications_CIToastNotification2* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* put_SuppressPopup)(__x_ABI_CWindows_CUI_CNotifications_CIToastNotification2* This,
        boolean value);
    HRESULT (STDMETHODCALLTYPE* get_SuppressPopup)(__x_ABI_CWindows_CUI_CNotifications_CIToastNotification2* This,
        boolean* value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CNotifications_CIToastNotification2Vtbl;

    interface __x_ABI_CWindows_CUI_CNotifications_CIToastNotification2
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CNotifications_CIToastNotification2Vtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CNotifications_CIToastNotification2;
#endif /* !defined(____x_ABI_CWindows_CUI_CNotifications_CIToastNotification2_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CNotifications_CIToastNotification3_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CNotifications_CIToastNotification3_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CNotifications_CIToastNotification3Vtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CNotifications_CIToastNotification3* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CNotifications_CIToastNotification3* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CNotifications_CIToastNotification3* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CNotifications_CIToastNotification3* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CNotifications_CIToastNotification3* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CNotifications_CIToastNotification3* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_NotificationMirroring)(__x_ABI_CWindows_CUI_CNotifications_CIToastNotification3* This,
        enum __x_ABI_CWindows_CUI_CNotifications_CNotificationMirroring* value);
    HRESULT (STDMETHODCALLTYPE* put_NotificationMirroring)(__x_ABI_CWindows_CUI_CNotifications_CIToastNotification3* This,
        enum __x_ABI_CWindows_CUI_CNotifications_CNotificationMirroring value);
    HRESULT (STDMETHODCALLTYPE* get_RemoteId)(__x_ABI_CWindows_CUI_CNotifications_CIToastNotification3* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* put_RemoteId)(__x_ABI_CWindows_CUI_CNotifications_CIToastNotification3* This,
        HSTRING value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CNotifications_CIToastNotification3Vtbl;

    interface __x_ABI_CWindows_CUI_CNotifications_CIToastNotification3
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CNotifications_CIToastNotification3Vtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CNotifications_CIToastNotification3;
#endif /* !defined(____x_ABI_CWindows_CUI_CNotifications_CIToastNotification3_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CNotifications_CIToastNotification4_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CNotifications_CIToastNotification4_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CNotifications_CIToastNotification4Vtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CNotifications_CIToastNotification4* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CNotifications_CIToastNotification4* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CNotifications_CIToastNotification4* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CNotifications_CIToastNotification4* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CNotifications_CIToastNotification4* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CNotifications_CIToastNotification4* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Data)(__x_ABI_CWindows_CUI_CNotifications_CIToastNotification4* This,
        __x_ABI_CWindows_CUI_CNotifications_CINotificationData** value);
    HRESULT (STDMETHODCALLTYPE* put_Data)(__x_ABI_CWindows_CUI_CNotifications_CIToastNotification4* This,
        __x_ABI_CWindows_CUI_CNotifications_CINotificationData* value);
    HRESULT (STDMETHODCALLTYPE* get_Priority)(__x_ABI_CWindows_CUI_CNotifications_CIToastNotification4* This,
        enum __x_ABI_CWindows_CUI_CNotifications_CToastNotificationPriority* value);
    HRESULT (STDMETHODCALLTYPE* put_Priority)(__x_ABI_CWindows_CUI_CNotifications_CIToastNotification4* This,
        enum __x_ABI_CWindows_CUI_CNotifications_CToastNotificationPriority value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CNotifications_CIToastNotification4Vtbl;

    interface __x_ABI_CWindows_CUI_CNotifications_CIToastNotification4
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CNotifications_CIToastNotification4Vtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CNotifications_CIToastNotification4;
#endif /* !defined(____x_ABI_CWindows_CUI_CNotifications_CIToastNotification4_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CNotifications_CIToastNotification6_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CNotifications_CIToastNotification6_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CNotifications_CIToastNotification6Vtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CNotifications_CIToastNotification6* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CNotifications_CIToastNotification6* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CNotifications_CIToastNotification6* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CNotifications_CIToastNotification6* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CNotifications_CIToastNotification6* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CNotifications_CIToastNotification6* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_ExpiresOnReboot)(__x_ABI_CWindows_CUI_CNotifications_CIToastNotification6* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* put_ExpiresOnReboot)(__x_ABI_CWindows_CUI_CNotifications_CIToastNotification6* This,
        boolean value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CNotifications_CIToastNotification6Vtbl;

    interface __x_ABI_CWindows_CUI_CNotifications_CIToastNotification6
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CNotifications_CIToastNotification6Vtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CNotifications_CIToastNotification6;
#endif /* !defined(____x_ABI_CWindows_CUI_CNotifications_CIToastNotification6_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CNotifications_CIToastNotificationActionTriggerDetail_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CNotifications_CIToastNotificationActionTriggerDetail_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CNotifications_CIToastNotificationActionTriggerDetailVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CNotifications_CIToastNotificationActionTriggerDetail* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CNotifications_CIToastNotificationActionTriggerDetail* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CNotifications_CIToastNotificationActionTriggerDetail* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CNotifications_CIToastNotificationActionTriggerDetail* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CNotifications_CIToastNotificationActionTriggerDetail* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CNotifications_CIToastNotificationActionTriggerDetail* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Argument)(__x_ABI_CWindows_CUI_CNotifications_CIToastNotificationActionTriggerDetail* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* get_UserInput)(__x_ABI_CWindows_CUI_CNotifications_CIToastNotificationActionTriggerDetail* This,
        __x_ABI_CWindows_CFoundation_CCollections_CIPropertySet** value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CNotifications_CIToastNotificationActionTriggerDetailVtbl;

    interface __x_ABI_CWindows_CUI_CNotifications_CIToastNotificationActionTriggerDetail
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CNotifications_CIToastNotificationActionTriggerDetailVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CNotifications_CIToastNotificationActionTriggerDetail;
#endif /* !defined(____x_ABI_CWindows_CUI_CNotifications_CIToastNotificationActionTriggerDetail_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CNotifications_CIToastNotificationFactory_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CNotifications_CIToastNotificationFactory_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CNotifications_CIToastNotificationFactoryVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CNotifications_CIToastNotificationFactory* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CNotifications_CIToastNotificationFactory* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CNotifications_CIToastNotificationFactory* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CNotifications_CIToastNotificationFactory* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CNotifications_CIToastNotificationFactory* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CNotifications_CIToastNotificationFactory* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* CreateToastNotification)(__x_ABI_CWindows_CUI_CNotifications_CIToastNotificationFactory* This,
        __x_ABI_CWindows_CData_CXml_CDom_CIXmlDocument* content,
        __x_ABI_CWindows_CUI_CNotifications_CIToastNotification** value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CNotifications_CIToastNotificationFactoryVtbl;

    interface __x_ABI_CWindows_CUI_CNotifications_CIToastNotificationFactory
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CNotifications_CIToastNotificationFactoryVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CNotifications_CIToastNotificationFactory;
#endif /* !defined(____x_ABI_CWindows_CUI_CNotifications_CIToastNotificationFactory_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CNotifications_CIToastNotificationHistory_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CNotifications_CIToastNotificationHistory_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CNotifications_CIToastNotificationHistoryVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CNotifications_CIToastNotificationHistory* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CNotifications_CIToastNotificationHistory* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CNotifications_CIToastNotificationHistory* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CNotifications_CIToastNotificationHistory* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CNotifications_CIToastNotificationHistory* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CNotifications_CIToastNotificationHistory* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* RemoveGroup)(__x_ABI_CWindows_CUI_CNotifications_CIToastNotificationHistory* This,
        HSTRING group);
    HRESULT (STDMETHODCALLTYPE* RemoveGroupWithId)(__x_ABI_CWindows_CUI_CNotifications_CIToastNotificationHistory* This,
        HSTRING group,
        HSTRING applicationId);
    HRESULT (STDMETHODCALLTYPE* RemoveGroupedTagWithId)(__x_ABI_CWindows_CUI_CNotifications_CIToastNotificationHistory* This,
        HSTRING tag,
        HSTRING group,
        HSTRING applicationId);
    HRESULT (STDMETHODCALLTYPE* RemoveGroupedTag)(__x_ABI_CWindows_CUI_CNotifications_CIToastNotificationHistory* This,
        HSTRING tag,
        HSTRING group);
    HRESULT (STDMETHODCALLTYPE* Remove)(__x_ABI_CWindows_CUI_CNotifications_CIToastNotificationHistory* This,
        HSTRING tag);
    HRESULT (STDMETHODCALLTYPE* Clear)(__x_ABI_CWindows_CUI_CNotifications_CIToastNotificationHistory* This);
    HRESULT (STDMETHODCALLTYPE* ClearWithId)(__x_ABI_CWindows_CUI_CNotifications_CIToastNotificationHistory* This,
        HSTRING applicationId);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CNotifications_CIToastNotificationHistoryVtbl;

    interface __x_ABI_CWindows_CUI_CNotifications_CIToastNotificationHistory
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CNotifications_CIToastNotificationHistoryVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CNotifications_CIToastNotificationHistory;
#endif /* !defined(____x_ABI_CWindows_CUI_CNotifications_CIToastNotificationHistory_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CNotifications_CIToastNotificationHistory2_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CNotifications_CIToastNotificationHistory2_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CNotifications_CIToastNotificationHistory2Vtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CNotifications_CIToastNotificationHistory2* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CNotifications_CIToastNotificationHistory2* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CNotifications_CIToastNotificationHistory2* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CNotifications_CIToastNotificationHistory2* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CNotifications_CIToastNotificationHistory2* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CNotifications_CIToastNotificationHistory2* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* GetHistory)(__x_ABI_CWindows_CUI_CNotifications_CIToastNotificationHistory2* This,
        __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CNotifications__CToastNotification** result);
    HRESULT (STDMETHODCALLTYPE* GetHistoryWithId)(__x_ABI_CWindows_CUI_CNotifications_CIToastNotificationHistory2* This,
        HSTRING applicationId,
        __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CNotifications__CToastNotification** result);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CNotifications_CIToastNotificationHistory2Vtbl;

    interface __x_ABI_CWindows_CUI_CNotifications_CIToastNotificationHistory2
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CNotifications_CIToastNotificationHistory2Vtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CNotifications_CIToastNotificationHistory2;
#endif /* !defined(____x_ABI_CWindows_CUI_CNotifications_CIToastNotificationHistory2_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CNotifications_CIToastNotificationHistoryChangedTriggerDetail_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CNotifications_CIToastNotificationHistoryChangedTriggerDetail_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CNotifications_CIToastNotificationHistoryChangedTriggerDetailVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CNotifications_CIToastNotificationHistoryChangedTriggerDetail* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CNotifications_CIToastNotificationHistoryChangedTriggerDetail* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CNotifications_CIToastNotificationHistoryChangedTriggerDetail* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CNotifications_CIToastNotificationHistoryChangedTriggerDetail* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CNotifications_CIToastNotificationHistoryChangedTriggerDetail* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CNotifications_CIToastNotificationHistoryChangedTriggerDetail* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_ChangeType)(__x_ABI_CWindows_CUI_CNotifications_CIToastNotificationHistoryChangedTriggerDetail* This,
        enum __x_ABI_CWindows_CUI_CNotifications_CToastHistoryChangedType* value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CNotifications_CIToastNotificationHistoryChangedTriggerDetailVtbl;

    interface __x_ABI_CWindows_CUI_CNotifications_CIToastNotificationHistoryChangedTriggerDetail
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CNotifications_CIToastNotificationHistoryChangedTriggerDetailVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CNotifications_CIToastNotificationHistoryChangedTriggerDetail;
#endif /* !defined(____x_ABI_CWindows_CUI_CNotifications_CIToastNotificationHistoryChangedTriggerDetail_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CNotifications_CIToastNotificationHistoryChangedTriggerDetail2_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CNotifications_CIToastNotificationHistoryChangedTriggerDetail2_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CNotifications_CIToastNotificationHistoryChangedTriggerDetail2Vtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CNotifications_CIToastNotificationHistoryChangedTriggerDetail2* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CNotifications_CIToastNotificationHistoryChangedTriggerDetail2* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CNotifications_CIToastNotificationHistoryChangedTriggerDetail2* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CNotifications_CIToastNotificationHistoryChangedTriggerDetail2* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CNotifications_CIToastNotificationHistoryChangedTriggerDetail2* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CNotifications_CIToastNotificationHistoryChangedTriggerDetail2* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_CollectionId)(__x_ABI_CWindows_CUI_CNotifications_CIToastNotificationHistoryChangedTriggerDetail2* This,
        HSTRING* value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CNotifications_CIToastNotificationHistoryChangedTriggerDetail2Vtbl;

    interface __x_ABI_CWindows_CUI_CNotifications_CIToastNotificationHistoryChangedTriggerDetail2
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CNotifications_CIToastNotificationHistoryChangedTriggerDetail2Vtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CNotifications_CIToastNotificationHistoryChangedTriggerDetail2;
#endif /* !defined(____x_ABI_CWindows_CUI_CNotifications_CIToastNotificationHistoryChangedTriggerDetail2_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CNotifications_CIToastNotificationManagerForUser_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CNotifications_CIToastNotificationManagerForUser_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CNotifications_CIToastNotificationManagerForUserVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CNotifications_CIToastNotificationManagerForUser* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CNotifications_CIToastNotificationManagerForUser* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CNotifications_CIToastNotificationManagerForUser* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CNotifications_CIToastNotificationManagerForUser* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CNotifications_CIToastNotificationManagerForUser* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CNotifications_CIToastNotificationManagerForUser* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* CreateToastNotifier)(__x_ABI_CWindows_CUI_CNotifications_CIToastNotificationManagerForUser* This,
        __x_ABI_CWindows_CUI_CNotifications_CIToastNotifier** result);
    HRESULT (STDMETHODCALLTYPE* CreateToastNotifierWithId)(__x_ABI_CWindows_CUI_CNotifications_CIToastNotificationManagerForUser* This,
        HSTRING applicationId,
        __x_ABI_CWindows_CUI_CNotifications_CIToastNotifier** result);
    HRESULT (STDMETHODCALLTYPE* get_History)(__x_ABI_CWindows_CUI_CNotifications_CIToastNotificationManagerForUser* This,
        __x_ABI_CWindows_CUI_CNotifications_CIToastNotificationHistory** value);
    HRESULT (STDMETHODCALLTYPE* get_User)(__x_ABI_CWindows_CUI_CNotifications_CIToastNotificationManagerForUser* This,
        __x_ABI_CWindows_CSystem_CIUser** value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CNotifications_CIToastNotificationManagerForUserVtbl;

    interface __x_ABI_CWindows_CUI_CNotifications_CIToastNotificationManagerForUser
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CNotifications_CIToastNotificationManagerForUserVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CNotifications_CIToastNotificationManagerForUser;
#endif /* !defined(____x_ABI_CWindows_CUI_CNotifications_CIToastNotificationManagerForUser_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CNotifications_CIToastNotificationManagerForUser2_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CNotifications_CIToastNotificationManagerForUser2_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CNotifications_CIToastNotificationManagerForUser2Vtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CNotifications_CIToastNotificationManagerForUser2* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CNotifications_CIToastNotificationManagerForUser2* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CNotifications_CIToastNotificationManagerForUser2* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CNotifications_CIToastNotificationManagerForUser2* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CNotifications_CIToastNotificationManagerForUser2* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CNotifications_CIToastNotificationManagerForUser2* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* GetToastNotifierForToastCollectionIdAsync)(__x_ABI_CWindows_CUI_CNotifications_CIToastNotificationManagerForUser2* This,
        HSTRING collectionId,
        __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CUI__CNotifications__CToastNotifier** operation);
    HRESULT (STDMETHODCALLTYPE* GetHistoryForToastCollectionIdAsync)(__x_ABI_CWindows_CUI_CNotifications_CIToastNotificationManagerForUser2* This,
        HSTRING collectionId,
        __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CUI__CNotifications__CToastNotificationHistory** operation);
    HRESULT (STDMETHODCALLTYPE* GetToastCollectionManager)(__x_ABI_CWindows_CUI_CNotifications_CIToastNotificationManagerForUser2* This,
        __x_ABI_CWindows_CUI_CNotifications_CIToastCollectionManager** result);
    HRESULT (STDMETHODCALLTYPE* GetToastCollectionManagerWithAppId)(__x_ABI_CWindows_CUI_CNotifications_CIToastNotificationManagerForUser2* This,
        HSTRING appId,
        __x_ABI_CWindows_CUI_CNotifications_CIToastCollectionManager** result);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CNotifications_CIToastNotificationManagerForUser2Vtbl;

    interface __x_ABI_CWindows_CUI_CNotifications_CIToastNotificationManagerForUser2
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CNotifications_CIToastNotificationManagerForUser2Vtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CNotifications_CIToastNotificationManagerForUser2;
#endif /* !defined(____x_ABI_CWindows_CUI_CNotifications_CIToastNotificationManagerForUser2_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CNotifications_CIToastNotificationManagerStatics_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CNotifications_CIToastNotificationManagerStatics_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CNotifications_CIToastNotificationManagerStaticsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CNotifications_CIToastNotificationManagerStatics* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CNotifications_CIToastNotificationManagerStatics* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CNotifications_CIToastNotificationManagerStatics* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CNotifications_CIToastNotificationManagerStatics* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CNotifications_CIToastNotificationManagerStatics* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CNotifications_CIToastNotificationManagerStatics* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* CreateToastNotifier)(__x_ABI_CWindows_CUI_CNotifications_CIToastNotificationManagerStatics* This,
        __x_ABI_CWindows_CUI_CNotifications_CIToastNotifier** result);
    HRESULT (STDMETHODCALLTYPE* CreateToastNotifierWithId)(__x_ABI_CWindows_CUI_CNotifications_CIToastNotificationManagerStatics* This,
        HSTRING applicationId,
        __x_ABI_CWindows_CUI_CNotifications_CIToastNotifier** result);
    HRESULT (STDMETHODCALLTYPE* GetTemplateContent)(__x_ABI_CWindows_CUI_CNotifications_CIToastNotificationManagerStatics* This,
        enum __x_ABI_CWindows_CUI_CNotifications_CToastTemplateType type,
        __x_ABI_CWindows_CData_CXml_CDom_CIXmlDocument** result);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CNotifications_CIToastNotificationManagerStaticsVtbl;

    interface __x_ABI_CWindows_CUI_CNotifications_CIToastNotificationManagerStatics
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CNotifications_CIToastNotificationManagerStaticsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CNotifications_CIToastNotificationManagerStatics;
#endif /* !defined(____x_ABI_CWindows_CUI_CNotifications_CIToastNotificationManagerStatics_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CNotifications_CIToastNotificationManagerStatics2_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CNotifications_CIToastNotificationManagerStatics2_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CNotifications_CIToastNotificationManagerStatics2Vtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CNotifications_CIToastNotificationManagerStatics2* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CNotifications_CIToastNotificationManagerStatics2* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CNotifications_CIToastNotificationManagerStatics2* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CNotifications_CIToastNotificationManagerStatics2* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CNotifications_CIToastNotificationManagerStatics2* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CNotifications_CIToastNotificationManagerStatics2* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_History)(__x_ABI_CWindows_CUI_CNotifications_CIToastNotificationManagerStatics2* This,
        __x_ABI_CWindows_CUI_CNotifications_CIToastNotificationHistory** value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CNotifications_CIToastNotificationManagerStatics2Vtbl;

    interface __x_ABI_CWindows_CUI_CNotifications_CIToastNotificationManagerStatics2
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CNotifications_CIToastNotificationManagerStatics2Vtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CNotifications_CIToastNotificationManagerStatics2;
#endif /* !defined(____x_ABI_CWindows_CUI_CNotifications_CIToastNotificationManagerStatics2_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CNotifications_CIToastNotificationManagerStatics4_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CNotifications_CIToastNotificationManagerStatics4_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CNotifications_CIToastNotificationManagerStatics4Vtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CNotifications_CIToastNotificationManagerStatics4* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CNotifications_CIToastNotificationManagerStatics4* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CNotifications_CIToastNotificationManagerStatics4* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CNotifications_CIToastNotificationManagerStatics4* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CNotifications_CIToastNotificationManagerStatics4* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CNotifications_CIToastNotificationManagerStatics4* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* GetForUser)(__x_ABI_CWindows_CUI_CNotifications_CIToastNotificationManagerStatics4* This,
        __x_ABI_CWindows_CSystem_CIUser* user,
        __x_ABI_CWindows_CUI_CNotifications_CIToastNotificationManagerForUser** result);
    HRESULT (STDMETHODCALLTYPE* ConfigureNotificationMirroring)(__x_ABI_CWindows_CUI_CNotifications_CIToastNotificationManagerStatics4* This,
        enum __x_ABI_CWindows_CUI_CNotifications_CNotificationMirroring value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CNotifications_CIToastNotificationManagerStatics4Vtbl;

    interface __x_ABI_CWindows_CUI_CNotifications_CIToastNotificationManagerStatics4
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CNotifications_CIToastNotificationManagerStatics4Vtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CNotifications_CIToastNotificationManagerStatics4;
#endif /* !defined(____x_ABI_CWindows_CUI_CNotifications_CIToastNotificationManagerStatics4_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CNotifications_CIToastNotificationManagerStatics5_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CNotifications_CIToastNotificationManagerStatics5_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CNotifications_CIToastNotificationManagerStatics5Vtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CNotifications_CIToastNotificationManagerStatics5* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CNotifications_CIToastNotificationManagerStatics5* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CNotifications_CIToastNotificationManagerStatics5* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CNotifications_CIToastNotificationManagerStatics5* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CNotifications_CIToastNotificationManagerStatics5* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CNotifications_CIToastNotificationManagerStatics5* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* GetDefault)(__x_ABI_CWindows_CUI_CNotifications_CIToastNotificationManagerStatics5* This,
        __x_ABI_CWindows_CUI_CNotifications_CIToastNotificationManagerForUser** result);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CNotifications_CIToastNotificationManagerStatics5Vtbl;

    interface __x_ABI_CWindows_CUI_CNotifications_CIToastNotificationManagerStatics5
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CNotifications_CIToastNotificationManagerStatics5Vtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CNotifications_CIToastNotificationManagerStatics5;
#endif /* !defined(____x_ABI_CWindows_CUI_CNotifications_CIToastNotificationManagerStatics5_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CNotifications_CIToastNotifier_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CNotifications_CIToastNotifier_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CNotifications_CIToastNotifierVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CNotifications_CIToastNotifier* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CNotifications_CIToastNotifier* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CNotifications_CIToastNotifier* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CNotifications_CIToastNotifier* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CNotifications_CIToastNotifier* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CNotifications_CIToastNotifier* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* Show)(__x_ABI_CWindows_CUI_CNotifications_CIToastNotifier* This,
        __x_ABI_CWindows_CUI_CNotifications_CIToastNotification* notification);
    HRESULT (STDMETHODCALLTYPE* Hide)(__x_ABI_CWindows_CUI_CNotifications_CIToastNotifier* This,
        __x_ABI_CWindows_CUI_CNotifications_CIToastNotification* notification);
    HRESULT (STDMETHODCALLTYPE* get_Setting)(__x_ABI_CWindows_CUI_CNotifications_CIToastNotifier* This,
        enum __x_ABI_CWindows_CUI_CNotifications_CNotificationSetting* value);
    HRESULT (STDMETHODCALLTYPE* AddToSchedule)(__x_ABI_CWindows_CUI_CNotifications_CIToastNotifier* This,
        __x_ABI_CWindows_CUI_CNotifications_CIScheduledToastNotification* scheduledToast);
    HRESULT (STDMETHODCALLTYPE* RemoveFromSchedule)(__x_ABI_CWindows_CUI_CNotifications_CIToastNotifier* This,
        __x_ABI_CWindows_CUI_CNotifications_CIScheduledToastNotification* scheduledToast);
    HRESULT (STDMETHODCALLTYPE* GetScheduledToastNotifications)(__x_ABI_CWindows_CUI_CNotifications_CIToastNotifier* This,
        __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CNotifications__CScheduledToastNotification** result);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CNotifications_CIToastNotifierVtbl;

    interface __x_ABI_CWindows_CUI_CNotifications_CIToastNotifier
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CNotifications_CIToastNotifierVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CNotifications_CIToastNotifier;
#endif /* !defined(____x_ABI_CWindows_CUI_CNotifications_CIToastNotifier_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CNotifications_CIToastNotifier2_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CNotifications_CIToastNotifier2_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CNotifications_CIToastNotifier2Vtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CNotifications_CIToastNotifier2* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CNotifications_CIToastNotifier2* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CNotifications_CIToastNotifier2* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CNotifications_CIToastNotifier2* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CNotifications_CIToastNotifier2* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CNotifications_CIToastNotifier2* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* UpdateWithTagAndGroup)(__x_ABI_CWindows_CUI_CNotifications_CIToastNotifier2* This,
        __x_ABI_CWindows_CUI_CNotifications_CINotificationData* data,
        HSTRING tag,
        HSTRING group,
        enum __x_ABI_CWindows_CUI_CNotifications_CNotificationUpdateResult* result);
    HRESULT (STDMETHODCALLTYPE* UpdateWithTag)(__x_ABI_CWindows_CUI_CNotifications_CIToastNotifier2* This,
        __x_ABI_CWindows_CUI_CNotifications_CINotificationData* data,
        HSTRING tag,
        enum __x_ABI_CWindows_CUI_CNotifications_CNotificationUpdateResult* result);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CNotifications_CIToastNotifier2Vtbl;

    interface __x_ABI_CWindows_CUI_CNotifications_CIToastNotifier2
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CNotifications_CIToastNotifier2Vtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CNotifications_CIToastNotifier2;
#endif /* !defined(____x_ABI_CWindows_CUI_CNotifications_CIToastNotifier2_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CNotifications_CIToastNotifier3_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CNotifications_CIToastNotifier3_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CNotifications_CIToastNotifier3Vtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CNotifications_CIToastNotifier3* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CNotifications_CIToastNotifier3* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CNotifications_CIToastNotifier3* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CNotifications_CIToastNotifier3* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CNotifications_CIToastNotifier3* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CNotifications_CIToastNotifier3* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* add_ScheduledToastNotificationShowing)(__x_ABI_CWindows_CUI_CNotifications_CIToastNotifier3* This,
        __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CNotifications__CToastNotifier___x_ABI_CWindows__CUI__CNotifications__CScheduledToastNotificationShowingEventArgs* handler,
        EventRegistrationToken* token);
    HRESULT (STDMETHODCALLTYPE* remove_ScheduledToastNotificationShowing)(__x_ABI_CWindows_CUI_CNotifications_CIToastNotifier3* This,
        EventRegistrationToken token);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CNotifications_CIToastNotifier3Vtbl;

    interface __x_ABI_CWindows_CUI_CNotifications_CIToastNotifier3
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CNotifications_CIToastNotifier3Vtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CNotifications_CIToastNotifier3;
#endif /* !defined(____x_ABI_CWindows_CUI_CNotifications_CIToastNotifier3_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CNotifications_CIUserNotification_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CNotifications_CIUserNotification_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CNotifications_CIUserNotificationVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CNotifications_CIUserNotification* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CNotifications_CIUserNotification* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CNotifications_CIUserNotification* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CNotifications_CIUserNotification* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CNotifications_CIUserNotification* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CNotifications_CIUserNotification* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Notification)(__x_ABI_CWindows_CUI_CNotifications_CIUserNotification* This,
        __x_ABI_CWindows_CUI_CNotifications_CINotification** value);
    HRESULT (STDMETHODCALLTYPE* get_AppInfo)(__x_ABI_CWindows_CUI_CNotifications_CIUserNotification* This,
        __x_ABI_CWindows_CApplicationModel_CIAppInfo** value);
    HRESULT (STDMETHODCALLTYPE* get_Id)(__x_ABI_CWindows_CUI_CNotifications_CIUserNotification* This,
        UINT32* value);
    HRESULT (STDMETHODCALLTYPE* get_CreationTime)(__x_ABI_CWindows_CUI_CNotifications_CIUserNotification* This,
        struct __x_ABI_CWindows_CFoundation_CDateTime* value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CNotifications_CIUserNotificationVtbl;

    interface __x_ABI_CWindows_CUI_CNotifications_CIUserNotification
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CNotifications_CIUserNotificationVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CNotifications_CIUserNotification;
#endif /* !defined(____x_ABI_CWindows_CUI_CNotifications_CIUserNotification_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CNotifications_CIUserNotificationChangedEventArgs_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CNotifications_CIUserNotificationChangedEventArgs_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CNotifications_CIUserNotificationChangedEventArgsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CNotifications_CIUserNotificationChangedEventArgs* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CNotifications_CIUserNotificationChangedEventArgs* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CNotifications_CIUserNotificationChangedEventArgs* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CNotifications_CIUserNotificationChangedEventArgs* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CNotifications_CIUserNotificationChangedEventArgs* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CNotifications_CIUserNotificationChangedEventArgs* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_ChangeKind)(__x_ABI_CWindows_CUI_CNotifications_CIUserNotificationChangedEventArgs* This,
        enum __x_ABI_CWindows_CUI_CNotifications_CUserNotificationChangedKind* value);
    HRESULT (STDMETHODCALLTYPE* get_UserNotificationId)(__x_ABI_CWindows_CUI_CNotifications_CIUserNotificationChangedEventArgs* This,
        UINT32* value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CNotifications_CIUserNotificationChangedEventArgsVtbl;

    interface __x_ABI_CWindows_CUI_CNotifications_CIUserNotificationChangedEventArgs
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CNotifications_CIUserNotificationChangedEventArgsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CNotifications_CIUserNotificationChangedEventArgs;
#endif /* !defined(____x_ABI_CWindows_CUI_CNotifications_CIUserNotificationChangedEventArgs_INTERFACE_DEFINED__) */
    
