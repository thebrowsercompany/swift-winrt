// WARNING: Please don't edit this file. It was generated by Swift/WinRT v0.0.1

#pragma once
// Header files for imported files
#include <inspectable.h>
#include <EventToken.h>
#include <windowscontracts.h>
#include "Windows.Foundation.h"
#include "Windows.UI.h"
// Importing Collections header
#include "Windows.Foundation.Collections.h"

/* Forward Declarations */
#ifndef ____x_ABI_CWindows_CUI_CWebUI_CCore_CIMenuClosedEventHandler_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CWebUI_CCore_CIMenuClosedEventHandler_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CWebUI_CCore_CIMenuClosedEventHandler __x_ABI_CWindows_CUI_CWebUI_CCore_CIMenuClosedEventHandler;

#endif // ____x_ABI_CWindows_CUI_CWebUI_CCore_CIMenuClosedEventHandler_FWD_DEFINED__

    #ifndef ____x_ABI_CWindows_CUI_CWebUI_CCore_CIMenuOpenedEventHandler_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CWebUI_CCore_CIMenuOpenedEventHandler_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CWebUI_CCore_CIMenuOpenedEventHandler __x_ABI_CWindows_CUI_CWebUI_CCore_CIMenuOpenedEventHandler;

#endif // ____x_ABI_CWindows_CUI_CWebUI_CCore_CIMenuOpenedEventHandler_FWD_DEFINED__

    #ifndef ____x_ABI_CWindows_CUI_CWebUI_CCore_CISizeChangedEventHandler_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CWebUI_CCore_CISizeChangedEventHandler_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CWebUI_CCore_CISizeChangedEventHandler __x_ABI_CWindows_CUI_CWebUI_CCore_CISizeChangedEventHandler;

#endif // ____x_ABI_CWindows_CUI_CWebUI_CCore_CISizeChangedEventHandler_FWD_DEFINED__

    #ifndef ____x_ABI_CWindows_CUI_CWebUI_CCore_CIWebUICommandBar_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CWebUI_CCore_CIWebUICommandBar_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CWebUI_CCore_CIWebUICommandBar __x_ABI_CWindows_CUI_CWebUI_CCore_CIWebUICommandBar;

#endif // ____x_ABI_CWindows_CUI_CWebUI_CCore_CIWebUICommandBar_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CWebUI_CCore_CIWebUICommandBarBitmapIcon_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CWebUI_CCore_CIWebUICommandBarBitmapIcon_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CWebUI_CCore_CIWebUICommandBarBitmapIcon __x_ABI_CWindows_CUI_CWebUI_CCore_CIWebUICommandBarBitmapIcon;

#endif // ____x_ABI_CWindows_CUI_CWebUI_CCore_CIWebUICommandBarBitmapIcon_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CWebUI_CCore_CIWebUICommandBarBitmapIconFactory_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CWebUI_CCore_CIWebUICommandBarBitmapIconFactory_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CWebUI_CCore_CIWebUICommandBarBitmapIconFactory __x_ABI_CWindows_CUI_CWebUI_CCore_CIWebUICommandBarBitmapIconFactory;

#endif // ____x_ABI_CWindows_CUI_CWebUI_CCore_CIWebUICommandBarBitmapIconFactory_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CWebUI_CCore_CIWebUICommandBarConfirmationButton_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CWebUI_CCore_CIWebUICommandBarConfirmationButton_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CWebUI_CCore_CIWebUICommandBarConfirmationButton __x_ABI_CWindows_CUI_CWebUI_CCore_CIWebUICommandBarConfirmationButton;

#endif // ____x_ABI_CWindows_CUI_CWebUI_CCore_CIWebUICommandBarConfirmationButton_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CWebUI_CCore_CIWebUICommandBarElement_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CWebUI_CCore_CIWebUICommandBarElement_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CWebUI_CCore_CIWebUICommandBarElement __x_ABI_CWindows_CUI_CWebUI_CCore_CIWebUICommandBarElement;

#endif // ____x_ABI_CWindows_CUI_CWebUI_CCore_CIWebUICommandBarElement_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CWebUI_CCore_CIWebUICommandBarIcon_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CWebUI_CCore_CIWebUICommandBarIcon_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CWebUI_CCore_CIWebUICommandBarIcon __x_ABI_CWindows_CUI_CWebUI_CCore_CIWebUICommandBarIcon;

#endif // ____x_ABI_CWindows_CUI_CWebUI_CCore_CIWebUICommandBarIcon_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CWebUI_CCore_CIWebUICommandBarIconButton_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CWebUI_CCore_CIWebUICommandBarIconButton_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CWebUI_CCore_CIWebUICommandBarIconButton __x_ABI_CWindows_CUI_CWebUI_CCore_CIWebUICommandBarIconButton;

#endif // ____x_ABI_CWindows_CUI_CWebUI_CCore_CIWebUICommandBarIconButton_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CWebUI_CCore_CIWebUICommandBarItemInvokedEventArgs_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CWebUI_CCore_CIWebUICommandBarItemInvokedEventArgs_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CWebUI_CCore_CIWebUICommandBarItemInvokedEventArgs __x_ABI_CWindows_CUI_CWebUI_CCore_CIWebUICommandBarItemInvokedEventArgs;

#endif // ____x_ABI_CWindows_CUI_CWebUI_CCore_CIWebUICommandBarItemInvokedEventArgs_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CWebUI_CCore_CIWebUICommandBarSizeChangedEventArgs_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CWebUI_CCore_CIWebUICommandBarSizeChangedEventArgs_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CWebUI_CCore_CIWebUICommandBarSizeChangedEventArgs __x_ABI_CWindows_CUI_CWebUI_CCore_CIWebUICommandBarSizeChangedEventArgs;

#endif // ____x_ABI_CWindows_CUI_CWebUI_CCore_CIWebUICommandBarSizeChangedEventArgs_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CWebUI_CCore_CIWebUICommandBarStatics_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CWebUI_CCore_CIWebUICommandBarStatics_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CWebUI_CCore_CIWebUICommandBarStatics __x_ABI_CWindows_CUI_CWebUI_CCore_CIWebUICommandBarStatics;

#endif // ____x_ABI_CWindows_CUI_CWebUI_CCore_CIWebUICommandBarStatics_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CWebUI_CCore_CIWebUICommandBarSymbolIcon_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CWebUI_CCore_CIWebUICommandBarSymbolIcon_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CWebUI_CCore_CIWebUICommandBarSymbolIcon __x_ABI_CWindows_CUI_CWebUI_CCore_CIWebUICommandBarSymbolIcon;

#endif // ____x_ABI_CWindows_CUI_CWebUI_CCore_CIWebUICommandBarSymbolIcon_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CWebUI_CCore_CIWebUICommandBarSymbolIconFactory_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CWebUI_CCore_CIWebUICommandBarSymbolIconFactory_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CWebUI_CCore_CIWebUICommandBarSymbolIconFactory __x_ABI_CWindows_CUI_CWebUI_CCore_CIWebUICommandBarSymbolIconFactory;

#endif // ____x_ABI_CWindows_CUI_CWebUI_CCore_CIWebUICommandBarSymbolIconFactory_FWD_DEFINED__

// Parameterized interface forward declarations (C)

// Collection interface definitions

#if !defined(____x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CWebUI__CCore__CIWebUICommandBarElement_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CWebUI__CCore__CIWebUICommandBarElement_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CWebUI__CCore__CIWebUICommandBarElement __x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CWebUI__CCore__CIWebUICommandBarElement;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CWebUI__CCore__CIWebUICommandBarElement;

    typedef struct __x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CWebUI__CCore__CIWebUICommandBarElementVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CWebUI__CCore__CIWebUICommandBarElement* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CWebUI__CCore__CIWebUICommandBarElement* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CWebUI__CCore__CIWebUICommandBarElement* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CWebUI__CCore__CIWebUICommandBarElement* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CWebUI__CCore__CIWebUICommandBarElement* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CWebUI__CCore__CIWebUICommandBarElement* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Current)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CWebUI__CCore__CIWebUICommandBarElement* This,
        __x_ABI_CWindows_CUI_CWebUI_CCore_CIWebUICommandBarElement** result);
    HRESULT (STDMETHODCALLTYPE* get_HasCurrent)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CWebUI__CCore__CIWebUICommandBarElement* This,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* MoveNext)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CWebUI__CCore__CIWebUICommandBarElement* This,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CWebUI__CCore__CIWebUICommandBarElement* This,
        UINT32 itemsLength,
        __x_ABI_CWindows_CUI_CWebUI_CCore_CIWebUICommandBarElement** items,
        UINT32* result);

        END_INTERFACE
    } __x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CWebUI__CCore__CIWebUICommandBarElementVtbl;

    interface __x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CWebUI__CCore__CIWebUICommandBarElement
    {
        CONST_VTBL struct __x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CWebUI__CCore__CIWebUICommandBarElementVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CWebUI__CCore__CIWebUICommandBarElement_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIIterable_1___x_ABI_CWindows__CUI__CWebUI__CCore__CIWebUICommandBarElement_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIIterable_1___x_ABI_CWindows__CUI__CWebUI__CCore__CIWebUICommandBarElement_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIIterable_1___x_ABI_CWindows__CUI__CWebUI__CCore__CIWebUICommandBarElement __x_ABI_C__FIIterable_1___x_ABI_CWindows__CUI__CWebUI__CCore__CIWebUICommandBarElement;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIIterable_1___x_ABI_CWindows__CUI__CWebUI__CCore__CIWebUICommandBarElement;

    typedef struct __x_ABI_C__FIIterable_1___x_ABI_CWindows__CUI__CWebUI__CCore__CIWebUICommandBarElementVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CUI__CWebUI__CCore__CIWebUICommandBarElement* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CUI__CWebUI__CCore__CIWebUICommandBarElement* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CUI__CWebUI__CCore__CIWebUICommandBarElement* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CUI__CWebUI__CCore__CIWebUICommandBarElement* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CUI__CWebUI__CCore__CIWebUICommandBarElement* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CUI__CWebUI__CCore__CIWebUICommandBarElement* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* First)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CUI__CWebUI__CCore__CIWebUICommandBarElement* This,
        __x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CWebUI__CCore__CIWebUICommandBarElement** result);

        END_INTERFACE
    } __x_ABI_C__FIIterable_1___x_ABI_CWindows__CUI__CWebUI__CCore__CIWebUICommandBarElementVtbl;

    interface __x_ABI_C__FIIterable_1___x_ABI_CWindows__CUI__CWebUI__CCore__CIWebUICommandBarElement
    {
        CONST_VTBL struct __x_ABI_C__FIIterable_1___x_ABI_CWindows__CUI__CWebUI__CCore__CIWebUICommandBarElementVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIIterable_1___x_ABI_CWindows__CUI__CWebUI__CCore__CIWebUICommandBarElement_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CWebUI__CCore__CIWebUICommandBarElement_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CWebUI__CCore__CIWebUICommandBarElement_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CWebUI__CCore__CIWebUICommandBarElement __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CWebUI__CCore__CIWebUICommandBarElement;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CWebUI__CCore__CIWebUICommandBarElement;

    typedef struct __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CWebUI__CCore__CIWebUICommandBarElementVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CWebUI__CCore__CIWebUICommandBarElement* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CWebUI__CCore__CIWebUICommandBarElement* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CWebUI__CCore__CIWebUICommandBarElement* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CWebUI__CCore__CIWebUICommandBarElement* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CWebUI__CCore__CIWebUICommandBarElement* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CWebUI__CCore__CIWebUICommandBarElement* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* GetAt)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CWebUI__CCore__CIWebUICommandBarElement* This,
        UINT32 index,
        __x_ABI_CWindows_CUI_CWebUI_CCore_CIWebUICommandBarElement** result);
    HRESULT (STDMETHODCALLTYPE* get_Size)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CWebUI__CCore__CIWebUICommandBarElement* This,
        UINT32* result);
    HRESULT (STDMETHODCALLTYPE* IndexOf)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CWebUI__CCore__CIWebUICommandBarElement* This,
        __x_ABI_CWindows_CUI_CWebUI_CCore_CIWebUICommandBarElement* value,
        UINT32* index,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CWebUI__CCore__CIWebUICommandBarElement* This,
        UINT32 startIndex,
        UINT32 itemsLength,
        __x_ABI_CWindows_CUI_CWebUI_CCore_CIWebUICommandBarElement** items,
        UINT32* result);

        END_INTERFACE
    } __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CWebUI__CCore__CIWebUICommandBarElementVtbl;

    interface __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CWebUI__CCore__CIWebUICommandBarElement
    {
        CONST_VTBL struct __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CWebUI__CCore__CIWebUICommandBarElementVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CWebUI__CCore__CIWebUICommandBarElement_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CWebUI__CCore__CIWebUICommandBarElement_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CWebUI__CCore__CIWebUICommandBarElement_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CWebUI__CCore__CIWebUICommandBarElement __x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CWebUI__CCore__CIWebUICommandBarElement;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CWebUI__CCore__CIWebUICommandBarElement;

    typedef struct __x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CWebUI__CCore__CIWebUICommandBarElementVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CWebUI__CCore__CIWebUICommandBarElement* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CWebUI__CCore__CIWebUICommandBarElement* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CWebUI__CCore__CIWebUICommandBarElement* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CWebUI__CCore__CIWebUICommandBarElement* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CWebUI__CCore__CIWebUICommandBarElement* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CWebUI__CCore__CIWebUICommandBarElement* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* GetAt)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CWebUI__CCore__CIWebUICommandBarElement* This,
        UINT32 index,
        __x_ABI_CWindows_CUI_CWebUI_CCore_CIWebUICommandBarElement** result);
    HRESULT (STDMETHODCALLTYPE* get_Size)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CWebUI__CCore__CIWebUICommandBarElement* This,
        UINT32* result);
    HRESULT (STDMETHODCALLTYPE* GetView)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CWebUI__CCore__CIWebUICommandBarElement* This,
        __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CWebUI__CCore__CIWebUICommandBarElement** result);
    HRESULT (STDMETHODCALLTYPE* IndexOf)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CWebUI__CCore__CIWebUICommandBarElement* This,
        __x_ABI_CWindows_CUI_CWebUI_CCore_CIWebUICommandBarElement* value,
        UINT32* index,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* SetAt)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CWebUI__CCore__CIWebUICommandBarElement* This,
        UINT32 index,
        __x_ABI_CWindows_CUI_CWebUI_CCore_CIWebUICommandBarElement* value);
    HRESULT (STDMETHODCALLTYPE* InsertAt)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CWebUI__CCore__CIWebUICommandBarElement* This,
        UINT32 index,
        __x_ABI_CWindows_CUI_CWebUI_CCore_CIWebUICommandBarElement* value);
    HRESULT (STDMETHODCALLTYPE* RemoveAt)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CWebUI__CCore__CIWebUICommandBarElement* This,
        UINT32 index);
    HRESULT (STDMETHODCALLTYPE* Append)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CWebUI__CCore__CIWebUICommandBarElement* This,
        __x_ABI_CWindows_CUI_CWebUI_CCore_CIWebUICommandBarElement* value);
    HRESULT (STDMETHODCALLTYPE* RemoveAtEnd)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CWebUI__CCore__CIWebUICommandBarElement* This);
    HRESULT (STDMETHODCALLTYPE* Clear)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CWebUI__CCore__CIWebUICommandBarElement* This);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CWebUI__CCore__CIWebUICommandBarElement* This,
        UINT32 startIndex,
        UINT32 itemsLength,
        __x_ABI_CWindows_CUI_CWebUI_CCore_CIWebUICommandBarElement** items,
        UINT32* result);
    HRESULT (STDMETHODCALLTYPE* ReplaceAll)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CWebUI__CCore__CIWebUICommandBarElement* This,
        UINT32 itemsLength,
        __x_ABI_CWindows_CUI_CWebUI_CCore_CIWebUICommandBarElement** items);

        END_INTERFACE
    } __x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CWebUI__CCore__CIWebUICommandBarElementVtbl;

    interface __x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CWebUI__CCore__CIWebUICommandBarElement
    {
        CONST_VTBL struct __x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CWebUI__CCore__CIWebUICommandBarElementVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CWebUI__CCore__CIWebUICommandBarElement_INTERFACE_DEFINED__
    
typedef interface __x_ABI_C__FIObservableVector_1___x_ABI_CWindows__CUI__CWebUI__CCore__CIWebUICommandBarElement __x_ABI_C__FIObservableVector_1___x_ABI_CWindows__CUI__CWebUI__CCore__CIWebUICommandBarElement;

#if !defined(____x_ABI_C__FVectorChangedEventHandler_1___x_ABI_CWindows__CUI__CWebUI__CCore__CIWebUICommandBarElement_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FVectorChangedEventHandler_1___x_ABI_CWindows__CUI__CWebUI__CCore__CIWebUICommandBarElement_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FVectorChangedEventHandler_1___x_ABI_CWindows__CUI__CWebUI__CCore__CIWebUICommandBarElement __x_ABI_C__FVectorChangedEventHandler_1___x_ABI_CWindows__CUI__CWebUI__CCore__CIWebUICommandBarElement;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FVectorChangedEventHandler_1___x_ABI_CWindows__CUI__CWebUI__CCore__CIWebUICommandBarElement;

    typedef struct __x_ABI_C__FVectorChangedEventHandler_1___x_ABI_CWindows__CUI__CWebUI__CCore__CIWebUICommandBarElementVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FVectorChangedEventHandler_1___x_ABI_CWindows__CUI__CWebUI__CCore__CIWebUICommandBarElement* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FVectorChangedEventHandler_1___x_ABI_CWindows__CUI__CWebUI__CCore__CIWebUICommandBarElement* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FVectorChangedEventHandler_1___x_ABI_CWindows__CUI__CWebUI__CCore__CIWebUICommandBarElement* This);
        HRESULT (STDMETHODCALLTYPE* Invoke)(__x_ABI_C__FVectorChangedEventHandler_1___x_ABI_CWindows__CUI__CWebUI__CCore__CIWebUICommandBarElement* This,
        __x_ABI_C__FIObservableVector_1___x_ABI_CWindows__CUI__CWebUI__CCore__CIWebUICommandBarElement* sender,
        __x_ABI_CWindows_CFoundation_CCollections_CIVectorChangedEventArgs* event);

        END_INTERFACE
    } __x_ABI_C__FVectorChangedEventHandler_1___x_ABI_CWindows__CUI__CWebUI__CCore__CIWebUICommandBarElementVtbl;

    interface __x_ABI_C__FVectorChangedEventHandler_1___x_ABI_CWindows__CUI__CWebUI__CCore__CIWebUICommandBarElement
    {
        CONST_VTBL struct __x_ABI_C__FVectorChangedEventHandler_1___x_ABI_CWindows__CUI__CWebUI__CCore__CIWebUICommandBarElementVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FVectorChangedEventHandler_1___x_ABI_CWindows__CUI__CWebUI__CCore__CIWebUICommandBarElement_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIObservableVector_1___x_ABI_CWindows__CUI__CWebUI__CCore__CIWebUICommandBarElement_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIObservableVector_1___x_ABI_CWindows__CUI__CWebUI__CCore__CIWebUICommandBarElement_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIObservableVector_1___x_ABI_CWindows__CUI__CWebUI__CCore__CIWebUICommandBarElement __x_ABI_C__FIObservableVector_1___x_ABI_CWindows__CUI__CWebUI__CCore__CIWebUICommandBarElement;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIObservableVector_1___x_ABI_CWindows__CUI__CWebUI__CCore__CIWebUICommandBarElement;

    typedef struct __x_ABI_C__FIObservableVector_1___x_ABI_CWindows__CUI__CWebUI__CCore__CIWebUICommandBarElementVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIObservableVector_1___x_ABI_CWindows__CUI__CWebUI__CCore__CIWebUICommandBarElement* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIObservableVector_1___x_ABI_CWindows__CUI__CWebUI__CCore__CIWebUICommandBarElement* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIObservableVector_1___x_ABI_CWindows__CUI__CWebUI__CCore__CIWebUICommandBarElement* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIObservableVector_1___x_ABI_CWindows__CUI__CWebUI__CCore__CIWebUICommandBarElement* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIObservableVector_1___x_ABI_CWindows__CUI__CWebUI__CCore__CIWebUICommandBarElement* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIObservableVector_1___x_ABI_CWindows__CUI__CWebUI__CCore__CIWebUICommandBarElement* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* add_VectorChanged)(__x_ABI_C__FIObservableVector_1___x_ABI_CWindows__CUI__CWebUI__CCore__CIWebUICommandBarElement* This,
        __x_ABI_C__FVectorChangedEventHandler_1___x_ABI_CWindows__CUI__CWebUI__CCore__CIWebUICommandBarElement* vhnd,
        EventRegistrationToken* result);
    HRESULT (STDMETHODCALLTYPE* remove_VectorChanged)(__x_ABI_C__FIObservableVector_1___x_ABI_CWindows__CUI__CWebUI__CCore__CIWebUICommandBarElement* This,
        EventRegistrationToken token);

        END_INTERFACE
    } __x_ABI_C__FIObservableVector_1___x_ABI_CWindows__CUI__CWebUI__CCore__CIWebUICommandBarElementVtbl;

    interface __x_ABI_C__FIObservableVector_1___x_ABI_CWindows__CUI__CWebUI__CCore__CIWebUICommandBarElement
    {
        CONST_VTBL struct __x_ABI_C__FIObservableVector_1___x_ABI_CWindows__CUI__CWebUI__CCore__CIWebUICommandBarElementVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIObservableVector_1___x_ABI_CWindows__CUI__CWebUI__CCore__CIWebUICommandBarElement_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CWebUI__CCore__CWebUICommandBarConfirmationButton___x_ABI_CWindows__CUI__CWebUI__CCore__CWebUICommandBarItemInvokedEventArgs_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CWebUI__CCore__CWebUICommandBarConfirmationButton___x_ABI_CWindows__CUI__CWebUI__CCore__CWebUICommandBarItemInvokedEventArgs_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CWebUI__CCore__CWebUICommandBarConfirmationButton___x_ABI_CWindows__CUI__CWebUI__CCore__CWebUICommandBarItemInvokedEventArgs __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CWebUI__CCore__CWebUICommandBarConfirmationButton___x_ABI_CWindows__CUI__CWebUI__CCore__CWebUICommandBarItemInvokedEventArgs;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CWebUI__CCore__CWebUICommandBarConfirmationButton___x_ABI_CWindows__CUI__CWebUI__CCore__CWebUICommandBarItemInvokedEventArgs;

    typedef struct __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CWebUI__CCore__CWebUICommandBarConfirmationButton___x_ABI_CWindows__CUI__CWebUI__CCore__CWebUICommandBarItemInvokedEventArgsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CWebUI__CCore__CWebUICommandBarConfirmationButton___x_ABI_CWindows__CUI__CWebUI__CCore__CWebUICommandBarItemInvokedEventArgs* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CWebUI__CCore__CWebUICommandBarConfirmationButton___x_ABI_CWindows__CUI__CWebUI__CCore__CWebUICommandBarItemInvokedEventArgs* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CWebUI__CCore__CWebUICommandBarConfirmationButton___x_ABI_CWindows__CUI__CWebUI__CCore__CWebUICommandBarItemInvokedEventArgs* This);
        HRESULT (STDMETHODCALLTYPE* Invoke)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CWebUI__CCore__CWebUICommandBarConfirmationButton___x_ABI_CWindows__CUI__CWebUI__CCore__CWebUICommandBarItemInvokedEventArgs* This,
        __x_ABI_CWindows_CUI_CWebUI_CCore_CIWebUICommandBarConfirmationButton* sender,
        __x_ABI_CWindows_CUI_CWebUI_CCore_CIWebUICommandBarItemInvokedEventArgs* args);

        END_INTERFACE
    } __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CWebUI__CCore__CWebUICommandBarConfirmationButton___x_ABI_CWindows__CUI__CWebUI__CCore__CWebUICommandBarItemInvokedEventArgsVtbl;

    interface __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CWebUI__CCore__CWebUICommandBarConfirmationButton___x_ABI_CWindows__CUI__CWebUI__CCore__CWebUICommandBarItemInvokedEventArgs
    {
        CONST_VTBL struct __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CWebUI__CCore__CWebUICommandBarConfirmationButton___x_ABI_CWindows__CUI__CWebUI__CCore__CWebUICommandBarItemInvokedEventArgsVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CWebUI__CCore__CWebUICommandBarConfirmationButton___x_ABI_CWindows__CUI__CWebUI__CCore__CWebUICommandBarItemInvokedEventArgs_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CWebUI__CCore__CWebUICommandBarIconButton___x_ABI_CWindows__CUI__CWebUI__CCore__CWebUICommandBarItemInvokedEventArgs_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CWebUI__CCore__CWebUICommandBarIconButton___x_ABI_CWindows__CUI__CWebUI__CCore__CWebUICommandBarItemInvokedEventArgs_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CWebUI__CCore__CWebUICommandBarIconButton___x_ABI_CWindows__CUI__CWebUI__CCore__CWebUICommandBarItemInvokedEventArgs __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CWebUI__CCore__CWebUICommandBarIconButton___x_ABI_CWindows__CUI__CWebUI__CCore__CWebUICommandBarItemInvokedEventArgs;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CWebUI__CCore__CWebUICommandBarIconButton___x_ABI_CWindows__CUI__CWebUI__CCore__CWebUICommandBarItemInvokedEventArgs;

    typedef struct __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CWebUI__CCore__CWebUICommandBarIconButton___x_ABI_CWindows__CUI__CWebUI__CCore__CWebUICommandBarItemInvokedEventArgsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CWebUI__CCore__CWebUICommandBarIconButton___x_ABI_CWindows__CUI__CWebUI__CCore__CWebUICommandBarItemInvokedEventArgs* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CWebUI__CCore__CWebUICommandBarIconButton___x_ABI_CWindows__CUI__CWebUI__CCore__CWebUICommandBarItemInvokedEventArgs* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CWebUI__CCore__CWebUICommandBarIconButton___x_ABI_CWindows__CUI__CWebUI__CCore__CWebUICommandBarItemInvokedEventArgs* This);
        HRESULT (STDMETHODCALLTYPE* Invoke)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CWebUI__CCore__CWebUICommandBarIconButton___x_ABI_CWindows__CUI__CWebUI__CCore__CWebUICommandBarItemInvokedEventArgs* This,
        __x_ABI_CWindows_CUI_CWebUI_CCore_CIWebUICommandBarIconButton* sender,
        __x_ABI_CWindows_CUI_CWebUI_CCore_CIWebUICommandBarItemInvokedEventArgs* args);

        END_INTERFACE
    } __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CWebUI__CCore__CWebUICommandBarIconButton___x_ABI_CWindows__CUI__CWebUI__CCore__CWebUICommandBarItemInvokedEventArgsVtbl;

    interface __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CWebUI__CCore__CWebUICommandBarIconButton___x_ABI_CWindows__CUI__CWebUI__CCore__CWebUICommandBarItemInvokedEventArgs
    {
        CONST_VTBL struct __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CWebUI__CCore__CWebUICommandBarIconButton___x_ABI_CWindows__CUI__CWebUI__CCore__CWebUICommandBarItemInvokedEventArgsVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CWebUI__CCore__CWebUICommandBarIconButton___x_ABI_CWindows__CUI__CWebUI__CCore__CWebUICommandBarItemInvokedEventArgs_INTERFACE_DEFINED__
    
typedef struct __x_ABI_CWindows_CFoundation_CSize __x_ABI_CWindows_CFoundation_CSize;

#ifndef ____x_ABI_CWindows_CFoundation_CIUriRuntimeClass_FWD_DEFINED__
#define ____x_ABI_CWindows_CFoundation_CIUriRuntimeClass_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CFoundation_CIUriRuntimeClass __x_ABI_CWindows_CFoundation_CIUriRuntimeClass;

#endif // ____x_ABI_CWindows_CFoundation_CIUriRuntimeClass_FWD_DEFINED__

typedef struct __x_ABI_CWindows_CUI_CColor __x_ABI_CWindows_CUI_CColor;

typedef enum __x_ABI_CWindows_CUI_CWebUI_CCore_CWebUICommandBarClosedDisplayMode __x_ABI_CWindows_CUI_CWebUI_CCore_CWebUICommandBarClosedDisplayMode;

enum __x_ABI_CWindows_CUI_CWebUI_CCore_CWebUICommandBarClosedDisplayMode
    {
        __x_ABI_CWindows_CUI_CWebUI_CCore_CWebUICommandBarClosedDisplayMode_Default = 0,
    __x_ABI_CWindows_CUI_CWebUI_CCore_CWebUICommandBarClosedDisplayMode_Minimal = 1,
    __x_ABI_CWindows_CUI_CWebUI_CCore_CWebUICommandBarClosedDisplayMode_Compact = 2,
};

#if !defined(____x_ABI_CWindows_CUI_CWebUI_CCore_CIMenuClosedEventHandler_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CWebUI_CCore_CIMenuClosedEventHandler_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CWebUI_CCore_CIMenuClosedEventHandlerVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CWebUI_CCore_CIMenuClosedEventHandler* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CWebUI_CCore_CIMenuClosedEventHandler* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CWebUI_CCore_CIMenuClosedEventHandler* This);
        HRESULT (STDMETHODCALLTYPE* Invoke)(__x_ABI_CWindows_CUI_CWebUI_CCore_CIMenuClosedEventHandler* This);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CWebUI_CCore_CIMenuClosedEventHandlerVtbl;

    interface __x_ABI_CWindows_CUI_CWebUI_CCore_CIMenuClosedEventHandler
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CWebUI_CCore_CIMenuClosedEventHandlerVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CWebUI_CCore_CIMenuClosedEventHandler;
    #endif /* !defined(____x_ABI_CWindows_CUI_CWebUI_CCore_CIMenuClosedEventHandler_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CWebUI_CCore_CIMenuOpenedEventHandler_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CWebUI_CCore_CIMenuOpenedEventHandler_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CWebUI_CCore_CIMenuOpenedEventHandlerVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CWebUI_CCore_CIMenuOpenedEventHandler* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CWebUI_CCore_CIMenuOpenedEventHandler* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CWebUI_CCore_CIMenuOpenedEventHandler* This);
        HRESULT (STDMETHODCALLTYPE* Invoke)(__x_ABI_CWindows_CUI_CWebUI_CCore_CIMenuOpenedEventHandler* This);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CWebUI_CCore_CIMenuOpenedEventHandlerVtbl;

    interface __x_ABI_CWindows_CUI_CWebUI_CCore_CIMenuOpenedEventHandler
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CWebUI_CCore_CIMenuOpenedEventHandlerVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CWebUI_CCore_CIMenuOpenedEventHandler;
    #endif /* !defined(____x_ABI_CWindows_CUI_CWebUI_CCore_CIMenuOpenedEventHandler_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CWebUI_CCore_CISizeChangedEventHandler_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CWebUI_CCore_CISizeChangedEventHandler_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CWebUI_CCore_CISizeChangedEventHandlerVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CWebUI_CCore_CISizeChangedEventHandler* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CWebUI_CCore_CISizeChangedEventHandler* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CWebUI_CCore_CISizeChangedEventHandler* This);
        HRESULT (STDMETHODCALLTYPE* Invoke)(__x_ABI_CWindows_CUI_CWebUI_CCore_CISizeChangedEventHandler* This,
        __x_ABI_CWindows_CUI_CWebUI_CCore_CIWebUICommandBarSizeChangedEventArgs* eventArgs);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CWebUI_CCore_CISizeChangedEventHandlerVtbl;

    interface __x_ABI_CWindows_CUI_CWebUI_CCore_CISizeChangedEventHandler
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CWebUI_CCore_CISizeChangedEventHandlerVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CWebUI_CCore_CISizeChangedEventHandler;
    #endif /* !defined(____x_ABI_CWindows_CUI_CWebUI_CCore_CISizeChangedEventHandler_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CWebUI_CCore_CIWebUICommandBar_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CWebUI_CCore_CIWebUICommandBar_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CWebUI_CCore_CIWebUICommandBarVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CWebUI_CCore_CIWebUICommandBar* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CWebUI_CCore_CIWebUICommandBar* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CWebUI_CCore_CIWebUICommandBar* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CWebUI_CCore_CIWebUICommandBar* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CWebUI_CCore_CIWebUICommandBar* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CWebUI_CCore_CIWebUICommandBar* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Visible)(__x_ABI_CWindows_CUI_CWebUI_CCore_CIWebUICommandBar* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* put_Visible)(__x_ABI_CWindows_CUI_CWebUI_CCore_CIWebUICommandBar* This,
        boolean value);
    HRESULT (STDMETHODCALLTYPE* get_Opacity)(__x_ABI_CWindows_CUI_CWebUI_CCore_CIWebUICommandBar* This,
        DOUBLE* value);
    HRESULT (STDMETHODCALLTYPE* put_Opacity)(__x_ABI_CWindows_CUI_CWebUI_CCore_CIWebUICommandBar* This,
        DOUBLE value);
    HRESULT (STDMETHODCALLTYPE* get_ForegroundColor)(__x_ABI_CWindows_CUI_CWebUI_CCore_CIWebUICommandBar* This,
        struct __x_ABI_CWindows_CUI_CColor* value);
    HRESULT (STDMETHODCALLTYPE* put_ForegroundColor)(__x_ABI_CWindows_CUI_CWebUI_CCore_CIWebUICommandBar* This,
        struct __x_ABI_CWindows_CUI_CColor value);
    HRESULT (STDMETHODCALLTYPE* get_BackgroundColor)(__x_ABI_CWindows_CUI_CWebUI_CCore_CIWebUICommandBar* This,
        struct __x_ABI_CWindows_CUI_CColor* value);
    HRESULT (STDMETHODCALLTYPE* put_BackgroundColor)(__x_ABI_CWindows_CUI_CWebUI_CCore_CIWebUICommandBar* This,
        struct __x_ABI_CWindows_CUI_CColor value);
    HRESULT (STDMETHODCALLTYPE* get_ClosedDisplayMode)(__x_ABI_CWindows_CUI_CWebUI_CCore_CIWebUICommandBar* This,
        enum __x_ABI_CWindows_CUI_CWebUI_CCore_CWebUICommandBarClosedDisplayMode* value);
    HRESULT (STDMETHODCALLTYPE* put_ClosedDisplayMode)(__x_ABI_CWindows_CUI_CWebUI_CCore_CIWebUICommandBar* This,
        enum __x_ABI_CWindows_CUI_CWebUI_CCore_CWebUICommandBarClosedDisplayMode value);
    HRESULT (STDMETHODCALLTYPE* get_IsOpen)(__x_ABI_CWindows_CUI_CWebUI_CCore_CIWebUICommandBar* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* put_IsOpen)(__x_ABI_CWindows_CUI_CWebUI_CCore_CIWebUICommandBar* This,
        boolean value);
    HRESULT (STDMETHODCALLTYPE* get_Size)(__x_ABI_CWindows_CUI_CWebUI_CCore_CIWebUICommandBar* This,
        struct __x_ABI_CWindows_CFoundation_CSize* value);
    HRESULT (STDMETHODCALLTYPE* get_PrimaryCommands)(__x_ABI_CWindows_CUI_CWebUI_CCore_CIWebUICommandBar* This,
        __x_ABI_C__FIObservableVector_1___x_ABI_CWindows__CUI__CWebUI__CCore__CIWebUICommandBarElement** value);
    HRESULT (STDMETHODCALLTYPE* get_SecondaryCommands)(__x_ABI_CWindows_CUI_CWebUI_CCore_CIWebUICommandBar* This,
        __x_ABI_C__FIObservableVector_1___x_ABI_CWindows__CUI__CWebUI__CCore__CIWebUICommandBarElement** value);
    HRESULT (STDMETHODCALLTYPE* add_MenuOpened)(__x_ABI_CWindows_CUI_CWebUI_CCore_CIWebUICommandBar* This,
        __x_ABI_CWindows_CUI_CWebUI_CCore_CIMenuOpenedEventHandler* handler,
        EventRegistrationToken* value);
    HRESULT (STDMETHODCALLTYPE* remove_MenuOpened)(__x_ABI_CWindows_CUI_CWebUI_CCore_CIWebUICommandBar* This,
        EventRegistrationToken value);
    HRESULT (STDMETHODCALLTYPE* add_MenuClosed)(__x_ABI_CWindows_CUI_CWebUI_CCore_CIWebUICommandBar* This,
        __x_ABI_CWindows_CUI_CWebUI_CCore_CIMenuClosedEventHandler* handler,
        EventRegistrationToken* value);
    HRESULT (STDMETHODCALLTYPE* remove_MenuClosed)(__x_ABI_CWindows_CUI_CWebUI_CCore_CIWebUICommandBar* This,
        EventRegistrationToken value);
    HRESULT (STDMETHODCALLTYPE* add_SizeChanged)(__x_ABI_CWindows_CUI_CWebUI_CCore_CIWebUICommandBar* This,
        __x_ABI_CWindows_CUI_CWebUI_CCore_CISizeChangedEventHandler* handler,
        EventRegistrationToken* value);
    HRESULT (STDMETHODCALLTYPE* remove_SizeChanged)(__x_ABI_CWindows_CUI_CWebUI_CCore_CIWebUICommandBar* This,
        EventRegistrationToken value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CWebUI_CCore_CIWebUICommandBarVtbl;

    interface __x_ABI_CWindows_CUI_CWebUI_CCore_CIWebUICommandBar
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CWebUI_CCore_CIWebUICommandBarVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CWebUI_CCore_CIWebUICommandBar;
#endif /* !defined(____x_ABI_CWindows_CUI_CWebUI_CCore_CIWebUICommandBar_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CWebUI_CCore_CIWebUICommandBarBitmapIcon_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CWebUI_CCore_CIWebUICommandBarBitmapIcon_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CWebUI_CCore_CIWebUICommandBarBitmapIconVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CWebUI_CCore_CIWebUICommandBarBitmapIcon* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CWebUI_CCore_CIWebUICommandBarBitmapIcon* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CWebUI_CCore_CIWebUICommandBarBitmapIcon* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CWebUI_CCore_CIWebUICommandBarBitmapIcon* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CWebUI_CCore_CIWebUICommandBarBitmapIcon* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CWebUI_CCore_CIWebUICommandBarBitmapIcon* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Uri)(__x_ABI_CWindows_CUI_CWebUI_CCore_CIWebUICommandBarBitmapIcon* This,
        __x_ABI_CWindows_CFoundation_CIUriRuntimeClass** value);
    HRESULT (STDMETHODCALLTYPE* put_Uri)(__x_ABI_CWindows_CUI_CWebUI_CCore_CIWebUICommandBarBitmapIcon* This,
        __x_ABI_CWindows_CFoundation_CIUriRuntimeClass* value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CWebUI_CCore_CIWebUICommandBarBitmapIconVtbl;

    interface __x_ABI_CWindows_CUI_CWebUI_CCore_CIWebUICommandBarBitmapIcon
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CWebUI_CCore_CIWebUICommandBarBitmapIconVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CWebUI_CCore_CIWebUICommandBarBitmapIcon;
#endif /* !defined(____x_ABI_CWindows_CUI_CWebUI_CCore_CIWebUICommandBarBitmapIcon_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CWebUI_CCore_CIWebUICommandBarBitmapIconFactory_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CWebUI_CCore_CIWebUICommandBarBitmapIconFactory_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CWebUI_CCore_CIWebUICommandBarBitmapIconFactoryVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CWebUI_CCore_CIWebUICommandBarBitmapIconFactory* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CWebUI_CCore_CIWebUICommandBarBitmapIconFactory* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CWebUI_CCore_CIWebUICommandBarBitmapIconFactory* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CWebUI_CCore_CIWebUICommandBarBitmapIconFactory* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CWebUI_CCore_CIWebUICommandBarBitmapIconFactory* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CWebUI_CCore_CIWebUICommandBarBitmapIconFactory* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* Create)(__x_ABI_CWindows_CUI_CWebUI_CCore_CIWebUICommandBarBitmapIconFactory* This,
        __x_ABI_CWindows_CFoundation_CIUriRuntimeClass* uri,
        __x_ABI_CWindows_CUI_CWebUI_CCore_CIWebUICommandBarBitmapIcon** instance);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CWebUI_CCore_CIWebUICommandBarBitmapIconFactoryVtbl;

    interface __x_ABI_CWindows_CUI_CWebUI_CCore_CIWebUICommandBarBitmapIconFactory
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CWebUI_CCore_CIWebUICommandBarBitmapIconFactoryVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CWebUI_CCore_CIWebUICommandBarBitmapIconFactory;
#endif /* !defined(____x_ABI_CWindows_CUI_CWebUI_CCore_CIWebUICommandBarBitmapIconFactory_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CWebUI_CCore_CIWebUICommandBarConfirmationButton_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CWebUI_CCore_CIWebUICommandBarConfirmationButton_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CWebUI_CCore_CIWebUICommandBarConfirmationButtonVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CWebUI_CCore_CIWebUICommandBarConfirmationButton* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CWebUI_CCore_CIWebUICommandBarConfirmationButton* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CWebUI_CCore_CIWebUICommandBarConfirmationButton* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CWebUI_CCore_CIWebUICommandBarConfirmationButton* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CWebUI_CCore_CIWebUICommandBarConfirmationButton* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CWebUI_CCore_CIWebUICommandBarConfirmationButton* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Text)(__x_ABI_CWindows_CUI_CWebUI_CCore_CIWebUICommandBarConfirmationButton* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* put_Text)(__x_ABI_CWindows_CUI_CWebUI_CCore_CIWebUICommandBarConfirmationButton* This,
        HSTRING value);
    HRESULT (STDMETHODCALLTYPE* add_ItemInvoked)(__x_ABI_CWindows_CUI_CWebUI_CCore_CIWebUICommandBarConfirmationButton* This,
        __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CWebUI__CCore__CWebUICommandBarConfirmationButton___x_ABI_CWindows__CUI__CWebUI__CCore__CWebUICommandBarItemInvokedEventArgs* handler,
        EventRegistrationToken* token);
    HRESULT (STDMETHODCALLTYPE* remove_ItemInvoked)(__x_ABI_CWindows_CUI_CWebUI_CCore_CIWebUICommandBarConfirmationButton* This,
        EventRegistrationToken token);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CWebUI_CCore_CIWebUICommandBarConfirmationButtonVtbl;

    interface __x_ABI_CWindows_CUI_CWebUI_CCore_CIWebUICommandBarConfirmationButton
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CWebUI_CCore_CIWebUICommandBarConfirmationButtonVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CWebUI_CCore_CIWebUICommandBarConfirmationButton;
#endif /* !defined(____x_ABI_CWindows_CUI_CWebUI_CCore_CIWebUICommandBarConfirmationButton_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CWebUI_CCore_CIWebUICommandBarElement_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CWebUI_CCore_CIWebUICommandBarElement_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CWebUI_CCore_CIWebUICommandBarElementVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CWebUI_CCore_CIWebUICommandBarElement* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CWebUI_CCore_CIWebUICommandBarElement* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CWebUI_CCore_CIWebUICommandBarElement* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CWebUI_CCore_CIWebUICommandBarElement* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CWebUI_CCore_CIWebUICommandBarElement* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CWebUI_CCore_CIWebUICommandBarElement* This,
            TrustLevel* trustLevel);
    
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CWebUI_CCore_CIWebUICommandBarElementVtbl;

    interface __x_ABI_CWindows_CUI_CWebUI_CCore_CIWebUICommandBarElement
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CWebUI_CCore_CIWebUICommandBarElementVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CWebUI_CCore_CIWebUICommandBarElement;
#endif /* !defined(____x_ABI_CWindows_CUI_CWebUI_CCore_CIWebUICommandBarElement_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CWebUI_CCore_CIWebUICommandBarIcon_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CWebUI_CCore_CIWebUICommandBarIcon_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CWebUI_CCore_CIWebUICommandBarIconVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CWebUI_CCore_CIWebUICommandBarIcon* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CWebUI_CCore_CIWebUICommandBarIcon* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CWebUI_CCore_CIWebUICommandBarIcon* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CWebUI_CCore_CIWebUICommandBarIcon* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CWebUI_CCore_CIWebUICommandBarIcon* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CWebUI_CCore_CIWebUICommandBarIcon* This,
            TrustLevel* trustLevel);
    
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CWebUI_CCore_CIWebUICommandBarIconVtbl;

    interface __x_ABI_CWindows_CUI_CWebUI_CCore_CIWebUICommandBarIcon
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CWebUI_CCore_CIWebUICommandBarIconVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CWebUI_CCore_CIWebUICommandBarIcon;
#endif /* !defined(____x_ABI_CWindows_CUI_CWebUI_CCore_CIWebUICommandBarIcon_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CWebUI_CCore_CIWebUICommandBarIconButton_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CWebUI_CCore_CIWebUICommandBarIconButton_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CWebUI_CCore_CIWebUICommandBarIconButtonVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CWebUI_CCore_CIWebUICommandBarIconButton* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CWebUI_CCore_CIWebUICommandBarIconButton* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CWebUI_CCore_CIWebUICommandBarIconButton* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CWebUI_CCore_CIWebUICommandBarIconButton* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CWebUI_CCore_CIWebUICommandBarIconButton* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CWebUI_CCore_CIWebUICommandBarIconButton* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Enabled)(__x_ABI_CWindows_CUI_CWebUI_CCore_CIWebUICommandBarIconButton* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* put_Enabled)(__x_ABI_CWindows_CUI_CWebUI_CCore_CIWebUICommandBarIconButton* This,
        boolean value);
    HRESULT (STDMETHODCALLTYPE* get_Label)(__x_ABI_CWindows_CUI_CWebUI_CCore_CIWebUICommandBarIconButton* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* put_Label)(__x_ABI_CWindows_CUI_CWebUI_CCore_CIWebUICommandBarIconButton* This,
        HSTRING value);
    HRESULT (STDMETHODCALLTYPE* get_IsToggleButton)(__x_ABI_CWindows_CUI_CWebUI_CCore_CIWebUICommandBarIconButton* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* put_IsToggleButton)(__x_ABI_CWindows_CUI_CWebUI_CCore_CIWebUICommandBarIconButton* This,
        boolean value);
    HRESULT (STDMETHODCALLTYPE* get_IsChecked)(__x_ABI_CWindows_CUI_CWebUI_CCore_CIWebUICommandBarIconButton* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* put_IsChecked)(__x_ABI_CWindows_CUI_CWebUI_CCore_CIWebUICommandBarIconButton* This,
        boolean value);
    HRESULT (STDMETHODCALLTYPE* get_Icon)(__x_ABI_CWindows_CUI_CWebUI_CCore_CIWebUICommandBarIconButton* This,
        __x_ABI_CWindows_CUI_CWebUI_CCore_CIWebUICommandBarIcon** value);
    HRESULT (STDMETHODCALLTYPE* put_Icon)(__x_ABI_CWindows_CUI_CWebUI_CCore_CIWebUICommandBarIconButton* This,
        __x_ABI_CWindows_CUI_CWebUI_CCore_CIWebUICommandBarIcon* value);
    HRESULT (STDMETHODCALLTYPE* add_ItemInvoked)(__x_ABI_CWindows_CUI_CWebUI_CCore_CIWebUICommandBarIconButton* This,
        __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CWebUI__CCore__CWebUICommandBarIconButton___x_ABI_CWindows__CUI__CWebUI__CCore__CWebUICommandBarItemInvokedEventArgs* handler,
        EventRegistrationToken* token);
    HRESULT (STDMETHODCALLTYPE* remove_ItemInvoked)(__x_ABI_CWindows_CUI_CWebUI_CCore_CIWebUICommandBarIconButton* This,
        EventRegistrationToken token);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CWebUI_CCore_CIWebUICommandBarIconButtonVtbl;

    interface __x_ABI_CWindows_CUI_CWebUI_CCore_CIWebUICommandBarIconButton
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CWebUI_CCore_CIWebUICommandBarIconButtonVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CWebUI_CCore_CIWebUICommandBarIconButton;
#endif /* !defined(____x_ABI_CWindows_CUI_CWebUI_CCore_CIWebUICommandBarIconButton_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CWebUI_CCore_CIWebUICommandBarItemInvokedEventArgs_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CWebUI_CCore_CIWebUICommandBarItemInvokedEventArgs_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CWebUI_CCore_CIWebUICommandBarItemInvokedEventArgsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CWebUI_CCore_CIWebUICommandBarItemInvokedEventArgs* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CWebUI_CCore_CIWebUICommandBarItemInvokedEventArgs* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CWebUI_CCore_CIWebUICommandBarItemInvokedEventArgs* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CWebUI_CCore_CIWebUICommandBarItemInvokedEventArgs* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CWebUI_CCore_CIWebUICommandBarItemInvokedEventArgs* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CWebUI_CCore_CIWebUICommandBarItemInvokedEventArgs* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_IsPrimaryCommand)(__x_ABI_CWindows_CUI_CWebUI_CCore_CIWebUICommandBarItemInvokedEventArgs* This,
        boolean* value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CWebUI_CCore_CIWebUICommandBarItemInvokedEventArgsVtbl;

    interface __x_ABI_CWindows_CUI_CWebUI_CCore_CIWebUICommandBarItemInvokedEventArgs
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CWebUI_CCore_CIWebUICommandBarItemInvokedEventArgsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CWebUI_CCore_CIWebUICommandBarItemInvokedEventArgs;
#endif /* !defined(____x_ABI_CWindows_CUI_CWebUI_CCore_CIWebUICommandBarItemInvokedEventArgs_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CWebUI_CCore_CIWebUICommandBarSizeChangedEventArgs_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CWebUI_CCore_CIWebUICommandBarSizeChangedEventArgs_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CWebUI_CCore_CIWebUICommandBarSizeChangedEventArgsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CWebUI_CCore_CIWebUICommandBarSizeChangedEventArgs* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CWebUI_CCore_CIWebUICommandBarSizeChangedEventArgs* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CWebUI_CCore_CIWebUICommandBarSizeChangedEventArgs* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CWebUI_CCore_CIWebUICommandBarSizeChangedEventArgs* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CWebUI_CCore_CIWebUICommandBarSizeChangedEventArgs* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CWebUI_CCore_CIWebUICommandBarSizeChangedEventArgs* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Size)(__x_ABI_CWindows_CUI_CWebUI_CCore_CIWebUICommandBarSizeChangedEventArgs* This,
        struct __x_ABI_CWindows_CFoundation_CSize* value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CWebUI_CCore_CIWebUICommandBarSizeChangedEventArgsVtbl;

    interface __x_ABI_CWindows_CUI_CWebUI_CCore_CIWebUICommandBarSizeChangedEventArgs
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CWebUI_CCore_CIWebUICommandBarSizeChangedEventArgsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CWebUI_CCore_CIWebUICommandBarSizeChangedEventArgs;
#endif /* !defined(____x_ABI_CWindows_CUI_CWebUI_CCore_CIWebUICommandBarSizeChangedEventArgs_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CWebUI_CCore_CIWebUICommandBarStatics_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CWebUI_CCore_CIWebUICommandBarStatics_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CWebUI_CCore_CIWebUICommandBarStaticsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CWebUI_CCore_CIWebUICommandBarStatics* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CWebUI_CCore_CIWebUICommandBarStatics* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CWebUI_CCore_CIWebUICommandBarStatics* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CWebUI_CCore_CIWebUICommandBarStatics* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CWebUI_CCore_CIWebUICommandBarStatics* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CWebUI_CCore_CIWebUICommandBarStatics* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* GetForCurrentView)(__x_ABI_CWindows_CUI_CWebUI_CCore_CIWebUICommandBarStatics* This,
        __x_ABI_CWindows_CUI_CWebUI_CCore_CIWebUICommandBar** commandBar);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CWebUI_CCore_CIWebUICommandBarStaticsVtbl;

    interface __x_ABI_CWindows_CUI_CWebUI_CCore_CIWebUICommandBarStatics
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CWebUI_CCore_CIWebUICommandBarStaticsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CWebUI_CCore_CIWebUICommandBarStatics;
#endif /* !defined(____x_ABI_CWindows_CUI_CWebUI_CCore_CIWebUICommandBarStatics_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CWebUI_CCore_CIWebUICommandBarSymbolIcon_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CWebUI_CCore_CIWebUICommandBarSymbolIcon_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CWebUI_CCore_CIWebUICommandBarSymbolIconVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CWebUI_CCore_CIWebUICommandBarSymbolIcon* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CWebUI_CCore_CIWebUICommandBarSymbolIcon* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CWebUI_CCore_CIWebUICommandBarSymbolIcon* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CWebUI_CCore_CIWebUICommandBarSymbolIcon* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CWebUI_CCore_CIWebUICommandBarSymbolIcon* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CWebUI_CCore_CIWebUICommandBarSymbolIcon* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Symbol)(__x_ABI_CWindows_CUI_CWebUI_CCore_CIWebUICommandBarSymbolIcon* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* put_Symbol)(__x_ABI_CWindows_CUI_CWebUI_CCore_CIWebUICommandBarSymbolIcon* This,
        HSTRING value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CWebUI_CCore_CIWebUICommandBarSymbolIconVtbl;

    interface __x_ABI_CWindows_CUI_CWebUI_CCore_CIWebUICommandBarSymbolIcon
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CWebUI_CCore_CIWebUICommandBarSymbolIconVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CWebUI_CCore_CIWebUICommandBarSymbolIcon;
#endif /* !defined(____x_ABI_CWindows_CUI_CWebUI_CCore_CIWebUICommandBarSymbolIcon_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CWebUI_CCore_CIWebUICommandBarSymbolIconFactory_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CWebUI_CCore_CIWebUICommandBarSymbolIconFactory_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CWebUI_CCore_CIWebUICommandBarSymbolIconFactoryVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CWebUI_CCore_CIWebUICommandBarSymbolIconFactory* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CWebUI_CCore_CIWebUICommandBarSymbolIconFactory* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CWebUI_CCore_CIWebUICommandBarSymbolIconFactory* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CWebUI_CCore_CIWebUICommandBarSymbolIconFactory* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CWebUI_CCore_CIWebUICommandBarSymbolIconFactory* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CWebUI_CCore_CIWebUICommandBarSymbolIconFactory* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* Create)(__x_ABI_CWindows_CUI_CWebUI_CCore_CIWebUICommandBarSymbolIconFactory* This,
        HSTRING symbol,
        __x_ABI_CWindows_CUI_CWebUI_CCore_CIWebUICommandBarSymbolIcon** instance);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CWebUI_CCore_CIWebUICommandBarSymbolIconFactoryVtbl;

    interface __x_ABI_CWindows_CUI_CWebUI_CCore_CIWebUICommandBarSymbolIconFactory
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CWebUI_CCore_CIWebUICommandBarSymbolIconFactoryVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CWebUI_CCore_CIWebUICommandBarSymbolIconFactory;
#endif /* !defined(____x_ABI_CWindows_CUI_CWebUI_CCore_CIWebUICommandBarSymbolIconFactory_INTERFACE_DEFINED__) */
    
