// WARNING: Please don't edit this file. It was generated by Swift/WinRT v0.0.1

#pragma once
// Header files for imported files
#include <inspectable.h>
#include <EventToken.h>
#include <windowscontracts.h>
#include "Windows.Foundation.h"
// Importing Collections header
#include "Windows.Foundation.Collections.h"

/* Forward Declarations */
#ifndef ____x_ABI_CWindows_CApplicationModel_CResources_CManagement_CIIndexedResourceCandidate_FWD_DEFINED__
#define ____x_ABI_CWindows_CApplicationModel_CResources_CManagement_CIIndexedResourceCandidate_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CApplicationModel_CResources_CManagement_CIIndexedResourceCandidate __x_ABI_CWindows_CApplicationModel_CResources_CManagement_CIIndexedResourceCandidate;

#endif // ____x_ABI_CWindows_CApplicationModel_CResources_CManagement_CIIndexedResourceCandidate_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CApplicationModel_CResources_CManagement_CIIndexedResourceQualifier_FWD_DEFINED__
#define ____x_ABI_CWindows_CApplicationModel_CResources_CManagement_CIIndexedResourceQualifier_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CApplicationModel_CResources_CManagement_CIIndexedResourceQualifier __x_ABI_CWindows_CApplicationModel_CResources_CManagement_CIIndexedResourceQualifier;

#endif // ____x_ABI_CWindows_CApplicationModel_CResources_CManagement_CIIndexedResourceQualifier_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CApplicationModel_CResources_CManagement_CIResourceIndexer_FWD_DEFINED__
#define ____x_ABI_CWindows_CApplicationModel_CResources_CManagement_CIResourceIndexer_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CApplicationModel_CResources_CManagement_CIResourceIndexer __x_ABI_CWindows_CApplicationModel_CResources_CManagement_CIResourceIndexer;

#endif // ____x_ABI_CWindows_CApplicationModel_CResources_CManagement_CIResourceIndexer_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CApplicationModel_CResources_CManagement_CIResourceIndexerFactory_FWD_DEFINED__
#define ____x_ABI_CWindows_CApplicationModel_CResources_CManagement_CIResourceIndexerFactory_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CApplicationModel_CResources_CManagement_CIResourceIndexerFactory __x_ABI_CWindows_CApplicationModel_CResources_CManagement_CIResourceIndexerFactory;

#endif // ____x_ABI_CWindows_CApplicationModel_CResources_CManagement_CIResourceIndexerFactory_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CApplicationModel_CResources_CManagement_CIResourceIndexerFactory2_FWD_DEFINED__
#define ____x_ABI_CWindows_CApplicationModel_CResources_CManagement_CIResourceIndexerFactory2_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CApplicationModel_CResources_CManagement_CIResourceIndexerFactory2 __x_ABI_CWindows_CApplicationModel_CResources_CManagement_CIResourceIndexerFactory2;

#endif // ____x_ABI_CWindows_CApplicationModel_CResources_CManagement_CIResourceIndexerFactory2_FWD_DEFINED__

// Parameterized interface forward declarations (C)

// Collection interface definitions

#if !defined(____x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CResources__CManagement__CIndexedResourceCandidate_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CResources__CManagement__CIndexedResourceCandidate_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CResources__CManagement__CIndexedResourceCandidate __x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CResources__CManagement__CIndexedResourceCandidate;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CResources__CManagement__CIndexedResourceCandidate;

    typedef struct __x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CResources__CManagement__CIndexedResourceCandidateVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CResources__CManagement__CIndexedResourceCandidate* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CResources__CManagement__CIndexedResourceCandidate* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CResources__CManagement__CIndexedResourceCandidate* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CResources__CManagement__CIndexedResourceCandidate* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CResources__CManagement__CIndexedResourceCandidate* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CResources__CManagement__CIndexedResourceCandidate* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Current)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CResources__CManagement__CIndexedResourceCandidate* This,
        __x_ABI_CWindows_CApplicationModel_CResources_CManagement_CIIndexedResourceCandidate** result);
    HRESULT (STDMETHODCALLTYPE* get_HasCurrent)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CResources__CManagement__CIndexedResourceCandidate* This,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* MoveNext)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CResources__CManagement__CIndexedResourceCandidate* This,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CResources__CManagement__CIndexedResourceCandidate* This,
        UINT32 itemsLength,
        __x_ABI_CWindows_CApplicationModel_CResources_CManagement_CIIndexedResourceCandidate** items,
        UINT32* result);

        END_INTERFACE
    } __x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CResources__CManagement__CIndexedResourceCandidateVtbl;

    interface __x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CResources__CManagement__CIndexedResourceCandidate
    {
        CONST_VTBL struct __x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CResources__CManagement__CIndexedResourceCandidateVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CResources__CManagement__CIndexedResourceCandidate_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CResources__CManagement__CIndexedResourceCandidate_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CResources__CManagement__CIndexedResourceCandidate_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CResources__CManagement__CIndexedResourceCandidate __x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CResources__CManagement__CIndexedResourceCandidate;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CResources__CManagement__CIndexedResourceCandidate;

    typedef struct __x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CResources__CManagement__CIndexedResourceCandidateVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CResources__CManagement__CIndexedResourceCandidate* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CResources__CManagement__CIndexedResourceCandidate* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CResources__CManagement__CIndexedResourceCandidate* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CResources__CManagement__CIndexedResourceCandidate* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CResources__CManagement__CIndexedResourceCandidate* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CResources__CManagement__CIndexedResourceCandidate* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* First)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CResources__CManagement__CIndexedResourceCandidate* This,
        __x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CResources__CManagement__CIndexedResourceCandidate** result);

        END_INTERFACE
    } __x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CResources__CManagement__CIndexedResourceCandidateVtbl;

    interface __x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CResources__CManagement__CIndexedResourceCandidate
    {
        CONST_VTBL struct __x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CResources__CManagement__CIndexedResourceCandidateVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CResources__CManagement__CIndexedResourceCandidate_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CResources__CManagement__CIndexedResourceCandidate_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CResources__CManagement__CIndexedResourceCandidate_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CResources__CManagement__CIndexedResourceCandidate __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CResources__CManagement__CIndexedResourceCandidate;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CResources__CManagement__CIndexedResourceCandidate;

    typedef struct __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CResources__CManagement__CIndexedResourceCandidateVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CResources__CManagement__CIndexedResourceCandidate* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CResources__CManagement__CIndexedResourceCandidate* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CResources__CManagement__CIndexedResourceCandidate* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CResources__CManagement__CIndexedResourceCandidate* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CResources__CManagement__CIndexedResourceCandidate* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CResources__CManagement__CIndexedResourceCandidate* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* GetAt)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CResources__CManagement__CIndexedResourceCandidate* This,
        UINT32 index,
        __x_ABI_CWindows_CApplicationModel_CResources_CManagement_CIIndexedResourceCandidate** result);
    HRESULT (STDMETHODCALLTYPE* get_Size)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CResources__CManagement__CIndexedResourceCandidate* This,
        UINT32* result);
    HRESULT (STDMETHODCALLTYPE* IndexOf)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CResources__CManagement__CIndexedResourceCandidate* This,
        __x_ABI_CWindows_CApplicationModel_CResources_CManagement_CIIndexedResourceCandidate* value,
        UINT32* index,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CResources__CManagement__CIndexedResourceCandidate* This,
        UINT32 startIndex,
        UINT32 itemsLength,
        __x_ABI_CWindows_CApplicationModel_CResources_CManagement_CIIndexedResourceCandidate** items,
        UINT32* result);

        END_INTERFACE
    } __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CResources__CManagement__CIndexedResourceCandidateVtbl;

    interface __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CResources__CManagement__CIndexedResourceCandidate
    {
        CONST_VTBL struct __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CResources__CManagement__CIndexedResourceCandidateVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CResources__CManagement__CIndexedResourceCandidate_INTERFACE_DEFINED__
    
typedef interface __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CResources__CManagement__CIndexedResourceCandidate __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CResources__CManagement__CIndexedResourceCandidate;

#if !defined(____x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CResources__CManagement__CIndexedResourceCandidate_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CResources__CManagement__CIndexedResourceCandidate_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CResources__CManagement__CIndexedResourceCandidate __x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CResources__CManagement__CIndexedResourceCandidate;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CResources__CManagement__CIndexedResourceCandidate;

    typedef struct __x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CResources__CManagement__CIndexedResourceCandidateVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CResources__CManagement__CIndexedResourceCandidate* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CResources__CManagement__CIndexedResourceCandidate* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CResources__CManagement__CIndexedResourceCandidate* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CResources__CManagement__CIndexedResourceCandidate* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CResources__CManagement__CIndexedResourceCandidate* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CResources__CManagement__CIndexedResourceCandidate* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* put_Completed)(__x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CResources__CManagement__CIndexedResourceCandidate* This,
        __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CResources__CManagement__CIndexedResourceCandidate* handler);
    HRESULT (STDMETHODCALLTYPE* get_Completed)(__x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CResources__CManagement__CIndexedResourceCandidate* This,
        __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CResources__CManagement__CIndexedResourceCandidate** result);
    HRESULT (STDMETHODCALLTYPE* GetResults)(__x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CResources__CManagement__CIndexedResourceCandidate* This,
        __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CResources__CManagement__CIndexedResourceCandidate** result);

        END_INTERFACE
    } __x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CResources__CManagement__CIndexedResourceCandidateVtbl;

    interface __x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CResources__CManagement__CIndexedResourceCandidate
    {
        CONST_VTBL struct __x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CResources__CManagement__CIndexedResourceCandidateVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CResources__CManagement__CIndexedResourceCandidate_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CResources__CManagement__CIndexedResourceCandidate_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CResources__CManagement__CIndexedResourceCandidate_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CResources__CManagement__CIndexedResourceCandidate __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CResources__CManagement__CIndexedResourceCandidate;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CResources__CManagement__CIndexedResourceCandidate;

    typedef struct __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CResources__CManagement__CIndexedResourceCandidateVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CResources__CManagement__CIndexedResourceCandidate* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CResources__CManagement__CIndexedResourceCandidate* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CResources__CManagement__CIndexedResourceCandidate* This);
        HRESULT (STDMETHODCALLTYPE* Invoke)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CResources__CManagement__CIndexedResourceCandidate* This,
        __x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CResources__CManagement__CIndexedResourceCandidate* asyncInfo,
        enum __x_ABI_CWindows_CFoundation_CAsyncStatus asyncStatus);

        END_INTERFACE
    } __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CResources__CManagement__CIndexedResourceCandidateVtbl;

    interface __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CResources__CManagement__CIndexedResourceCandidate
    {
        CONST_VTBL struct __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CResources__CManagement__CIndexedResourceCandidateVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CResources__CManagement__CIndexedResourceCandidate_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CResources__CManagement__CIndexedResourceQualifier_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CResources__CManagement__CIndexedResourceQualifier_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CResources__CManagement__CIndexedResourceQualifier __x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CResources__CManagement__CIndexedResourceQualifier;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CResources__CManagement__CIndexedResourceQualifier;

    typedef struct __x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CResources__CManagement__CIndexedResourceQualifierVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CResources__CManagement__CIndexedResourceQualifier* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CResources__CManagement__CIndexedResourceQualifier* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CResources__CManagement__CIndexedResourceQualifier* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CResources__CManagement__CIndexedResourceQualifier* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CResources__CManagement__CIndexedResourceQualifier* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CResources__CManagement__CIndexedResourceQualifier* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Current)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CResources__CManagement__CIndexedResourceQualifier* This,
        __x_ABI_CWindows_CApplicationModel_CResources_CManagement_CIIndexedResourceQualifier** result);
    HRESULT (STDMETHODCALLTYPE* get_HasCurrent)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CResources__CManagement__CIndexedResourceQualifier* This,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* MoveNext)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CResources__CManagement__CIndexedResourceQualifier* This,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CResources__CManagement__CIndexedResourceQualifier* This,
        UINT32 itemsLength,
        __x_ABI_CWindows_CApplicationModel_CResources_CManagement_CIIndexedResourceQualifier** items,
        UINT32* result);

        END_INTERFACE
    } __x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CResources__CManagement__CIndexedResourceQualifierVtbl;

    interface __x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CResources__CManagement__CIndexedResourceQualifier
    {
        CONST_VTBL struct __x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CResources__CManagement__CIndexedResourceQualifierVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CResources__CManagement__CIndexedResourceQualifier_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CResources__CManagement__CIndexedResourceQualifier_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CResources__CManagement__CIndexedResourceQualifier_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CResources__CManagement__CIndexedResourceQualifier __x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CResources__CManagement__CIndexedResourceQualifier;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CResources__CManagement__CIndexedResourceQualifier;

    typedef struct __x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CResources__CManagement__CIndexedResourceQualifierVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CResources__CManagement__CIndexedResourceQualifier* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CResources__CManagement__CIndexedResourceQualifier* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CResources__CManagement__CIndexedResourceQualifier* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CResources__CManagement__CIndexedResourceQualifier* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CResources__CManagement__CIndexedResourceQualifier* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CResources__CManagement__CIndexedResourceQualifier* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* First)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CResources__CManagement__CIndexedResourceQualifier* This,
        __x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CResources__CManagement__CIndexedResourceQualifier** result);

        END_INTERFACE
    } __x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CResources__CManagement__CIndexedResourceQualifierVtbl;

    interface __x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CResources__CManagement__CIndexedResourceQualifier
    {
        CONST_VTBL struct __x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CResources__CManagement__CIndexedResourceQualifierVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CResources__CManagement__CIndexedResourceQualifier_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIKeyValuePair_2_HSTRING_HSTRING_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIKeyValuePair_2_HSTRING_HSTRING_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIKeyValuePair_2_HSTRING_HSTRING __x_ABI_C__FIKeyValuePair_2_HSTRING_HSTRING;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIKeyValuePair_2_HSTRING_HSTRING;

    typedef struct __x_ABI_C__FIKeyValuePair_2_HSTRING_HSTRINGVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIKeyValuePair_2_HSTRING_HSTRING* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIKeyValuePair_2_HSTRING_HSTRING* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIKeyValuePair_2_HSTRING_HSTRING* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIKeyValuePair_2_HSTRING_HSTRING* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIKeyValuePair_2_HSTRING_HSTRING* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIKeyValuePair_2_HSTRING_HSTRING* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Key)(__x_ABI_C__FIKeyValuePair_2_HSTRING_HSTRING* This,
        HSTRING* result);
    HRESULT (STDMETHODCALLTYPE* get_Value)(__x_ABI_C__FIKeyValuePair_2_HSTRING_HSTRING* This,
        HSTRING* result);

        END_INTERFACE
    } __x_ABI_C__FIKeyValuePair_2_HSTRING_HSTRINGVtbl;

    interface __x_ABI_C__FIKeyValuePair_2_HSTRING_HSTRING
    {
        CONST_VTBL struct __x_ABI_C__FIKeyValuePair_2_HSTRING_HSTRINGVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIKeyValuePair_2_HSTRING_HSTRING_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2_HSTRING_HSTRING_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2_HSTRING_HSTRING_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2_HSTRING_HSTRING __x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2_HSTRING_HSTRING;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2_HSTRING_HSTRING;

    typedef struct __x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2_HSTRING_HSTRINGVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2_HSTRING_HSTRING* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2_HSTRING_HSTRING* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2_HSTRING_HSTRING* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2_HSTRING_HSTRING* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2_HSTRING_HSTRING* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2_HSTRING_HSTRING* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Current)(__x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2_HSTRING_HSTRING* This,
        __x_ABI_C__FIKeyValuePair_2_HSTRING_HSTRING** result);
    HRESULT (STDMETHODCALLTYPE* get_HasCurrent)(__x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2_HSTRING_HSTRING* This,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* MoveNext)(__x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2_HSTRING_HSTRING* This,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2_HSTRING_HSTRING* This,
        UINT32 itemsLength,
        __x_ABI_C__FIKeyValuePair_2_HSTRING_HSTRING** items,
        UINT32* result);

        END_INTERFACE
    } __x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2_HSTRING_HSTRINGVtbl;

    interface __x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2_HSTRING_HSTRING
    {
        CONST_VTBL struct __x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2_HSTRING_HSTRINGVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2_HSTRING_HSTRING_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIIterable_1___x_ABI_C__FIKeyValuePair_2_HSTRING_HSTRING_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIIterable_1___x_ABI_C__FIKeyValuePair_2_HSTRING_HSTRING_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIIterable_1___x_ABI_C__FIKeyValuePair_2_HSTRING_HSTRING __x_ABI_C__FIIterable_1___x_ABI_C__FIKeyValuePair_2_HSTRING_HSTRING;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIIterable_1___x_ABI_C__FIKeyValuePair_2_HSTRING_HSTRING;

    typedef struct __x_ABI_C__FIIterable_1___x_ABI_C__FIKeyValuePair_2_HSTRING_HSTRINGVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIIterable_1___x_ABI_C__FIKeyValuePair_2_HSTRING_HSTRING* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIIterable_1___x_ABI_C__FIKeyValuePair_2_HSTRING_HSTRING* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIIterable_1___x_ABI_C__FIKeyValuePair_2_HSTRING_HSTRING* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIIterable_1___x_ABI_C__FIKeyValuePair_2_HSTRING_HSTRING* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIIterable_1___x_ABI_C__FIKeyValuePair_2_HSTRING_HSTRING* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIIterable_1___x_ABI_C__FIKeyValuePair_2_HSTRING_HSTRING* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* First)(__x_ABI_C__FIIterable_1___x_ABI_C__FIKeyValuePair_2_HSTRING_HSTRING* This,
        __x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2_HSTRING_HSTRING** result);

        END_INTERFACE
    } __x_ABI_C__FIIterable_1___x_ABI_C__FIKeyValuePair_2_HSTRING_HSTRINGVtbl;

    interface __x_ABI_C__FIIterable_1___x_ABI_C__FIKeyValuePair_2_HSTRING_HSTRING
    {
        CONST_VTBL struct __x_ABI_C__FIIterable_1___x_ABI_C__FIKeyValuePair_2_HSTRING_HSTRINGVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIIterable_1___x_ABI_C__FIKeyValuePair_2_HSTRING_HSTRING_INTERFACE_DEFINED__
    
typedef interface __x_ABI_C__FIMapView_2_HSTRING_HSTRING __x_ABI_C__FIMapView_2_HSTRING_HSTRING;

#if !defined(____x_ABI_C__FIMapView_2_HSTRING_HSTRING_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIMapView_2_HSTRING_HSTRING_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIMapView_2_HSTRING_HSTRING __x_ABI_C__FIMapView_2_HSTRING_HSTRING;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIMapView_2_HSTRING_HSTRING;

    typedef struct __x_ABI_C__FIMapView_2_HSTRING_HSTRINGVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIMapView_2_HSTRING_HSTRING* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIMapView_2_HSTRING_HSTRING* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIMapView_2_HSTRING_HSTRING* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIMapView_2_HSTRING_HSTRING* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIMapView_2_HSTRING_HSTRING* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIMapView_2_HSTRING_HSTRING* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* Lookup)(__x_ABI_C__FIMapView_2_HSTRING_HSTRING* This,
        HSTRING key,
        HSTRING* result);
    HRESULT (STDMETHODCALLTYPE* get_Size)(__x_ABI_C__FIMapView_2_HSTRING_HSTRING* This,
        UINT32* result);
    HRESULT (STDMETHODCALLTYPE* HasKey)(__x_ABI_C__FIMapView_2_HSTRING_HSTRING* This,
        HSTRING key,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* Split)(__x_ABI_C__FIMapView_2_HSTRING_HSTRING* This,
        __x_ABI_C__FIMapView_2_HSTRING_HSTRING** first,
        __x_ABI_C__FIMapView_2_HSTRING_HSTRING** second);

        END_INTERFACE
    } __x_ABI_C__FIMapView_2_HSTRING_HSTRINGVtbl;

    interface __x_ABI_C__FIMapView_2_HSTRING_HSTRING
    {
        CONST_VTBL struct __x_ABI_C__FIMapView_2_HSTRING_HSTRINGVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIMapView_2_HSTRING_HSTRING_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CResources__CManagement__CIndexedResourceQualifier_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CResources__CManagement__CIndexedResourceQualifier_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CResources__CManagement__CIndexedResourceQualifier __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CResources__CManagement__CIndexedResourceQualifier;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CResources__CManagement__CIndexedResourceQualifier;

    typedef struct __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CResources__CManagement__CIndexedResourceQualifierVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CResources__CManagement__CIndexedResourceQualifier* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CResources__CManagement__CIndexedResourceQualifier* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CResources__CManagement__CIndexedResourceQualifier* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CResources__CManagement__CIndexedResourceQualifier* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CResources__CManagement__CIndexedResourceQualifier* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CResources__CManagement__CIndexedResourceQualifier* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* GetAt)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CResources__CManagement__CIndexedResourceQualifier* This,
        UINT32 index,
        __x_ABI_CWindows_CApplicationModel_CResources_CManagement_CIIndexedResourceQualifier** result);
    HRESULT (STDMETHODCALLTYPE* get_Size)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CResources__CManagement__CIndexedResourceQualifier* This,
        UINT32* result);
    HRESULT (STDMETHODCALLTYPE* IndexOf)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CResources__CManagement__CIndexedResourceQualifier* This,
        __x_ABI_CWindows_CApplicationModel_CResources_CManagement_CIIndexedResourceQualifier* value,
        UINT32* index,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CResources__CManagement__CIndexedResourceQualifier* This,
        UINT32 startIndex,
        UINT32 itemsLength,
        __x_ABI_CWindows_CApplicationModel_CResources_CManagement_CIIndexedResourceQualifier** items,
        UINT32* result);

        END_INTERFACE
    } __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CResources__CManagement__CIndexedResourceQualifierVtbl;

    interface __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CResources__CManagement__CIndexedResourceQualifier
    {
        CONST_VTBL struct __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CResources__CManagement__CIndexedResourceQualifierVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CResources__CManagement__CIndexedResourceQualifier_INTERFACE_DEFINED__
    
typedef enum __x_ABI_CWindows_CFoundation_CAsyncStatus __x_ABI_CWindows_CFoundation_CAsyncStatus;

#ifndef ____x_ABI_CWindows_CFoundation_CIAsyncInfo_FWD_DEFINED__
#define ____x_ABI_CWindows_CFoundation_CIAsyncInfo_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CFoundation_CIAsyncInfo __x_ABI_CWindows_CFoundation_CIAsyncInfo;

#endif // ____x_ABI_CWindows_CFoundation_CIAsyncInfo_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CFoundation_CIUriRuntimeClass_FWD_DEFINED__
#define ____x_ABI_CWindows_CFoundation_CIUriRuntimeClass_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CFoundation_CIUriRuntimeClass __x_ABI_CWindows_CFoundation_CIUriRuntimeClass;

#endif // ____x_ABI_CWindows_CFoundation_CIUriRuntimeClass_FWD_DEFINED__

typedef enum __x_ABI_CWindows_CApplicationModel_CResources_CManagement_CIndexedResourceType __x_ABI_CWindows_CApplicationModel_CResources_CManagement_CIndexedResourceType;

enum __x_ABI_CWindows_CApplicationModel_CResources_CManagement_CIndexedResourceType
    {
        __x_ABI_CWindows_CApplicationModel_CResources_CManagement_CIndexedResourceType_String = 0,
    __x_ABI_CWindows_CApplicationModel_CResources_CManagement_CIndexedResourceType_Path = 1,
    __x_ABI_CWindows_CApplicationModel_CResources_CManagement_CIndexedResourceType_EmbeddedData = 2,
};

#if !defined(____x_ABI_CWindows_CApplicationModel_CResources_CManagement_CIIndexedResourceCandidate_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CApplicationModel_CResources_CManagement_CIIndexedResourceCandidate_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CApplicationModel_CResources_CManagement_CIIndexedResourceCandidateVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CApplicationModel_CResources_CManagement_CIIndexedResourceCandidate* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CApplicationModel_CResources_CManagement_CIIndexedResourceCandidate* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CApplicationModel_CResources_CManagement_CIIndexedResourceCandidate* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CApplicationModel_CResources_CManagement_CIIndexedResourceCandidate* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CApplicationModel_CResources_CManagement_CIIndexedResourceCandidate* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CApplicationModel_CResources_CManagement_CIIndexedResourceCandidate* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Type)(__x_ABI_CWindows_CApplicationModel_CResources_CManagement_CIIndexedResourceCandidate* This,
        enum __x_ABI_CWindows_CApplicationModel_CResources_CManagement_CIndexedResourceType* value);
    HRESULT (STDMETHODCALLTYPE* get_Uri)(__x_ABI_CWindows_CApplicationModel_CResources_CManagement_CIIndexedResourceCandidate* This,
        __x_ABI_CWindows_CFoundation_CIUriRuntimeClass** value);
    HRESULT (STDMETHODCALLTYPE* get_Metadata)(__x_ABI_CWindows_CApplicationModel_CResources_CManagement_CIIndexedResourceCandidate* This,
        __x_ABI_C__FIMapView_2_HSTRING_HSTRING** value);
    HRESULT (STDMETHODCALLTYPE* get_Qualifiers)(__x_ABI_CWindows_CApplicationModel_CResources_CManagement_CIIndexedResourceCandidate* This,
        __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CResources__CManagement__CIndexedResourceQualifier** value);
    HRESULT (STDMETHODCALLTYPE* get_ValueAsString)(__x_ABI_CWindows_CApplicationModel_CResources_CManagement_CIIndexedResourceCandidate* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* GetQualifierValue)(__x_ABI_CWindows_CApplicationModel_CResources_CManagement_CIIndexedResourceCandidate* This,
        HSTRING qualifierName,
        HSTRING* qualifierValue);

        END_INTERFACE
    } __x_ABI_CWindows_CApplicationModel_CResources_CManagement_CIIndexedResourceCandidateVtbl;

    interface __x_ABI_CWindows_CApplicationModel_CResources_CManagement_CIIndexedResourceCandidate
    {
        CONST_VTBL struct __x_ABI_CWindows_CApplicationModel_CResources_CManagement_CIIndexedResourceCandidateVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CApplicationModel_CResources_CManagement_CIIndexedResourceCandidate;
#endif /* !defined(____x_ABI_CWindows_CApplicationModel_CResources_CManagement_CIIndexedResourceCandidate_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CApplicationModel_CResources_CManagement_CIIndexedResourceQualifier_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CApplicationModel_CResources_CManagement_CIIndexedResourceQualifier_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CApplicationModel_CResources_CManagement_CIIndexedResourceQualifierVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CApplicationModel_CResources_CManagement_CIIndexedResourceQualifier* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CApplicationModel_CResources_CManagement_CIIndexedResourceQualifier* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CApplicationModel_CResources_CManagement_CIIndexedResourceQualifier* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CApplicationModel_CResources_CManagement_CIIndexedResourceQualifier* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CApplicationModel_CResources_CManagement_CIIndexedResourceQualifier* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CApplicationModel_CResources_CManagement_CIIndexedResourceQualifier* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_QualifierName)(__x_ABI_CWindows_CApplicationModel_CResources_CManagement_CIIndexedResourceQualifier* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* get_QualifierValue)(__x_ABI_CWindows_CApplicationModel_CResources_CManagement_CIIndexedResourceQualifier* This,
        HSTRING* value);

        END_INTERFACE
    } __x_ABI_CWindows_CApplicationModel_CResources_CManagement_CIIndexedResourceQualifierVtbl;

    interface __x_ABI_CWindows_CApplicationModel_CResources_CManagement_CIIndexedResourceQualifier
    {
        CONST_VTBL struct __x_ABI_CWindows_CApplicationModel_CResources_CManagement_CIIndexedResourceQualifierVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CApplicationModel_CResources_CManagement_CIIndexedResourceQualifier;
#endif /* !defined(____x_ABI_CWindows_CApplicationModel_CResources_CManagement_CIIndexedResourceQualifier_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CApplicationModel_CResources_CManagement_CIResourceIndexer_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CApplicationModel_CResources_CManagement_CIResourceIndexer_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CApplicationModel_CResources_CManagement_CIResourceIndexerVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CApplicationModel_CResources_CManagement_CIResourceIndexer* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CApplicationModel_CResources_CManagement_CIResourceIndexer* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CApplicationModel_CResources_CManagement_CIResourceIndexer* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CApplicationModel_CResources_CManagement_CIResourceIndexer* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CApplicationModel_CResources_CManagement_CIResourceIndexer* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CApplicationModel_CResources_CManagement_CIResourceIndexer* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* IndexFilePath)(__x_ABI_CWindows_CApplicationModel_CResources_CManagement_CIResourceIndexer* This,
        __x_ABI_CWindows_CFoundation_CIUriRuntimeClass* filePath,
        __x_ABI_CWindows_CApplicationModel_CResources_CManagement_CIIndexedResourceCandidate** candidate);
    HRESULT (STDMETHODCALLTYPE* IndexFileContentsAsync)(__x_ABI_CWindows_CApplicationModel_CResources_CManagement_CIResourceIndexer* This,
        __x_ABI_CWindows_CFoundation_CIUriRuntimeClass* file,
        __x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CResources__CManagement__CIndexedResourceCandidate** operation);

        END_INTERFACE
    } __x_ABI_CWindows_CApplicationModel_CResources_CManagement_CIResourceIndexerVtbl;

    interface __x_ABI_CWindows_CApplicationModel_CResources_CManagement_CIResourceIndexer
    {
        CONST_VTBL struct __x_ABI_CWindows_CApplicationModel_CResources_CManagement_CIResourceIndexerVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CApplicationModel_CResources_CManagement_CIResourceIndexer;
#endif /* !defined(____x_ABI_CWindows_CApplicationModel_CResources_CManagement_CIResourceIndexer_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CApplicationModel_CResources_CManagement_CIResourceIndexerFactory_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CApplicationModel_CResources_CManagement_CIResourceIndexerFactory_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CApplicationModel_CResources_CManagement_CIResourceIndexerFactoryVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CApplicationModel_CResources_CManagement_CIResourceIndexerFactory* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CApplicationModel_CResources_CManagement_CIResourceIndexerFactory* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CApplicationModel_CResources_CManagement_CIResourceIndexerFactory* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CApplicationModel_CResources_CManagement_CIResourceIndexerFactory* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CApplicationModel_CResources_CManagement_CIResourceIndexerFactory* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CApplicationModel_CResources_CManagement_CIResourceIndexerFactory* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* CreateResourceIndexer)(__x_ABI_CWindows_CApplicationModel_CResources_CManagement_CIResourceIndexerFactory* This,
        __x_ABI_CWindows_CFoundation_CIUriRuntimeClass* projectRoot,
        __x_ABI_CWindows_CApplicationModel_CResources_CManagement_CIResourceIndexer** indexer);

        END_INTERFACE
    } __x_ABI_CWindows_CApplicationModel_CResources_CManagement_CIResourceIndexerFactoryVtbl;

    interface __x_ABI_CWindows_CApplicationModel_CResources_CManagement_CIResourceIndexerFactory
    {
        CONST_VTBL struct __x_ABI_CWindows_CApplicationModel_CResources_CManagement_CIResourceIndexerFactoryVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CApplicationModel_CResources_CManagement_CIResourceIndexerFactory;
#endif /* !defined(____x_ABI_CWindows_CApplicationModel_CResources_CManagement_CIResourceIndexerFactory_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CApplicationModel_CResources_CManagement_CIResourceIndexerFactory2_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CApplicationModel_CResources_CManagement_CIResourceIndexerFactory2_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CApplicationModel_CResources_CManagement_CIResourceIndexerFactory2Vtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CApplicationModel_CResources_CManagement_CIResourceIndexerFactory2* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CApplicationModel_CResources_CManagement_CIResourceIndexerFactory2* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CApplicationModel_CResources_CManagement_CIResourceIndexerFactory2* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CApplicationModel_CResources_CManagement_CIResourceIndexerFactory2* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CApplicationModel_CResources_CManagement_CIResourceIndexerFactory2* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CApplicationModel_CResources_CManagement_CIResourceIndexerFactory2* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* CreateResourceIndexerWithExtension)(__x_ABI_CWindows_CApplicationModel_CResources_CManagement_CIResourceIndexerFactory2* This,
        __x_ABI_CWindows_CFoundation_CIUriRuntimeClass* projectRoot,
        __x_ABI_CWindows_CFoundation_CIUriRuntimeClass* extensionDllPath,
        __x_ABI_CWindows_CApplicationModel_CResources_CManagement_CIResourceIndexer** indexer);

        END_INTERFACE
    } __x_ABI_CWindows_CApplicationModel_CResources_CManagement_CIResourceIndexerFactory2Vtbl;

    interface __x_ABI_CWindows_CApplicationModel_CResources_CManagement_CIResourceIndexerFactory2
    {
        CONST_VTBL struct __x_ABI_CWindows_CApplicationModel_CResources_CManagement_CIResourceIndexerFactory2Vtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CApplicationModel_CResources_CManagement_CIResourceIndexerFactory2;
#endif /* !defined(____x_ABI_CWindows_CApplicationModel_CResources_CManagement_CIResourceIndexerFactory2_INTERFACE_DEFINED__) */
    
