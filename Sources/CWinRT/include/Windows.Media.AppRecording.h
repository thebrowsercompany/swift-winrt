// WARNING: Please don't edit this file. It was generated by Swift/WinRT v0.0.1

#pragma once
// Header files for imported files
#include <inspectable.h>
#include <EventToken.h>
#include <windowscontracts.h>
#include "Windows.Foundation.h"
#include "Windows.Storage.h"
// Importing Collections header
#include "Windows.Foundation.Collections.h"

/* Forward Declarations */
#ifndef ____x_ABI_CWindows_CMedia_CAppRecording_CIAppRecordingManager_FWD_DEFINED__
#define ____x_ABI_CWindows_CMedia_CAppRecording_CIAppRecordingManager_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CMedia_CAppRecording_CIAppRecordingManager __x_ABI_CWindows_CMedia_CAppRecording_CIAppRecordingManager;

#endif // ____x_ABI_CWindows_CMedia_CAppRecording_CIAppRecordingManager_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CMedia_CAppRecording_CIAppRecordingManagerStatics_FWD_DEFINED__
#define ____x_ABI_CWindows_CMedia_CAppRecording_CIAppRecordingManagerStatics_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CMedia_CAppRecording_CIAppRecordingManagerStatics __x_ABI_CWindows_CMedia_CAppRecording_CIAppRecordingManagerStatics;

#endif // ____x_ABI_CWindows_CMedia_CAppRecording_CIAppRecordingManagerStatics_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CMedia_CAppRecording_CIAppRecordingResult_FWD_DEFINED__
#define ____x_ABI_CWindows_CMedia_CAppRecording_CIAppRecordingResult_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CMedia_CAppRecording_CIAppRecordingResult __x_ABI_CWindows_CMedia_CAppRecording_CIAppRecordingResult;

#endif // ____x_ABI_CWindows_CMedia_CAppRecording_CIAppRecordingResult_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CMedia_CAppRecording_CIAppRecordingSaveScreenshotResult_FWD_DEFINED__
#define ____x_ABI_CWindows_CMedia_CAppRecording_CIAppRecordingSaveScreenshotResult_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CMedia_CAppRecording_CIAppRecordingSaveScreenshotResult __x_ABI_CWindows_CMedia_CAppRecording_CIAppRecordingSaveScreenshotResult;

#endif // ____x_ABI_CWindows_CMedia_CAppRecording_CIAppRecordingSaveScreenshotResult_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CMedia_CAppRecording_CIAppRecordingSavedScreenshotInfo_FWD_DEFINED__
#define ____x_ABI_CWindows_CMedia_CAppRecording_CIAppRecordingSavedScreenshotInfo_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CMedia_CAppRecording_CIAppRecordingSavedScreenshotInfo __x_ABI_CWindows_CMedia_CAppRecording_CIAppRecordingSavedScreenshotInfo;

#endif // ____x_ABI_CWindows_CMedia_CAppRecording_CIAppRecordingSavedScreenshotInfo_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CMedia_CAppRecording_CIAppRecordingStatus_FWD_DEFINED__
#define ____x_ABI_CWindows_CMedia_CAppRecording_CIAppRecordingStatus_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CMedia_CAppRecording_CIAppRecordingStatus __x_ABI_CWindows_CMedia_CAppRecording_CIAppRecordingStatus;

#endif // ____x_ABI_CWindows_CMedia_CAppRecording_CIAppRecordingStatus_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CMedia_CAppRecording_CIAppRecordingStatusDetails_FWD_DEFINED__
#define ____x_ABI_CWindows_CMedia_CAppRecording_CIAppRecordingStatusDetails_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CMedia_CAppRecording_CIAppRecordingStatusDetails __x_ABI_CWindows_CMedia_CAppRecording_CIAppRecordingStatusDetails;

#endif // ____x_ABI_CWindows_CMedia_CAppRecording_CIAppRecordingStatusDetails_FWD_DEFINED__

// Parameterized interface forward declarations (C)

// Collection interface definitions

typedef interface __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CMedia__CAppRecording__CAppRecordingResult __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CMedia__CAppRecording__CAppRecordingResult;

#if !defined(____x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CMedia__CAppRecording__CAppRecordingResult_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CMedia__CAppRecording__CAppRecordingResult_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CMedia__CAppRecording__CAppRecordingResult __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CMedia__CAppRecording__CAppRecordingResult;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CMedia__CAppRecording__CAppRecordingResult;

    typedef struct __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CMedia__CAppRecording__CAppRecordingResultVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CMedia__CAppRecording__CAppRecordingResult* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CMedia__CAppRecording__CAppRecordingResult* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CMedia__CAppRecording__CAppRecordingResult* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CMedia__CAppRecording__CAppRecordingResult* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CMedia__CAppRecording__CAppRecordingResult* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CMedia__CAppRecording__CAppRecordingResult* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* put_Completed)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CMedia__CAppRecording__CAppRecordingResult* This,
        __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CMedia__CAppRecording__CAppRecordingResult* handler);
    HRESULT (STDMETHODCALLTYPE* get_Completed)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CMedia__CAppRecording__CAppRecordingResult* This,
        __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CMedia__CAppRecording__CAppRecordingResult** result);
    HRESULT (STDMETHODCALLTYPE* GetResults)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CMedia__CAppRecording__CAppRecordingResult* This,
        __x_ABI_CWindows_CMedia_CAppRecording_CIAppRecordingResult** result);

        END_INTERFACE
    } __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CMedia__CAppRecording__CAppRecordingResultVtbl;

    interface __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CMedia__CAppRecording__CAppRecordingResult
    {
        CONST_VTBL struct __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CMedia__CAppRecording__CAppRecordingResultVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CMedia__CAppRecording__CAppRecordingResult_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CMedia__CAppRecording__CAppRecordingResult_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CMedia__CAppRecording__CAppRecordingResult_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CMedia__CAppRecording__CAppRecordingResult __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CMedia__CAppRecording__CAppRecordingResult;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CMedia__CAppRecording__CAppRecordingResult;

    typedef struct __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CMedia__CAppRecording__CAppRecordingResultVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CMedia__CAppRecording__CAppRecordingResult* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CMedia__CAppRecording__CAppRecordingResult* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CMedia__CAppRecording__CAppRecordingResult* This);
        HRESULT (STDMETHODCALLTYPE* Invoke)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CMedia__CAppRecording__CAppRecordingResult* This,
        __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CMedia__CAppRecording__CAppRecordingResult* asyncInfo,
        enum __x_ABI_CWindows_CFoundation_CAsyncStatus asyncStatus);

        END_INTERFACE
    } __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CMedia__CAppRecording__CAppRecordingResultVtbl;

    interface __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CMedia__CAppRecording__CAppRecordingResult
    {
        CONST_VTBL struct __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CMedia__CAppRecording__CAppRecordingResultVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CMedia__CAppRecording__CAppRecordingResult_INTERFACE_DEFINED__
    
typedef interface __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CMedia__CAppRecording__CAppRecordingSaveScreenshotResult __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CMedia__CAppRecording__CAppRecordingSaveScreenshotResult;

#if !defined(____x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CMedia__CAppRecording__CAppRecordingSaveScreenshotResult_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CMedia__CAppRecording__CAppRecordingSaveScreenshotResult_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CMedia__CAppRecording__CAppRecordingSaveScreenshotResult __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CMedia__CAppRecording__CAppRecordingSaveScreenshotResult;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CMedia__CAppRecording__CAppRecordingSaveScreenshotResult;

    typedef struct __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CMedia__CAppRecording__CAppRecordingSaveScreenshotResultVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CMedia__CAppRecording__CAppRecordingSaveScreenshotResult* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CMedia__CAppRecording__CAppRecordingSaveScreenshotResult* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CMedia__CAppRecording__CAppRecordingSaveScreenshotResult* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CMedia__CAppRecording__CAppRecordingSaveScreenshotResult* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CMedia__CAppRecording__CAppRecordingSaveScreenshotResult* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CMedia__CAppRecording__CAppRecordingSaveScreenshotResult* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* put_Completed)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CMedia__CAppRecording__CAppRecordingSaveScreenshotResult* This,
        __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CMedia__CAppRecording__CAppRecordingSaveScreenshotResult* handler);
    HRESULT (STDMETHODCALLTYPE* get_Completed)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CMedia__CAppRecording__CAppRecordingSaveScreenshotResult* This,
        __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CMedia__CAppRecording__CAppRecordingSaveScreenshotResult** result);
    HRESULT (STDMETHODCALLTYPE* GetResults)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CMedia__CAppRecording__CAppRecordingSaveScreenshotResult* This,
        __x_ABI_CWindows_CMedia_CAppRecording_CIAppRecordingSaveScreenshotResult** result);

        END_INTERFACE
    } __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CMedia__CAppRecording__CAppRecordingSaveScreenshotResultVtbl;

    interface __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CMedia__CAppRecording__CAppRecordingSaveScreenshotResult
    {
        CONST_VTBL struct __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CMedia__CAppRecording__CAppRecordingSaveScreenshotResultVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CMedia__CAppRecording__CAppRecordingSaveScreenshotResult_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CMedia__CAppRecording__CAppRecordingSaveScreenshotResult_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CMedia__CAppRecording__CAppRecordingSaveScreenshotResult_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CMedia__CAppRecording__CAppRecordingSaveScreenshotResult __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CMedia__CAppRecording__CAppRecordingSaveScreenshotResult;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CMedia__CAppRecording__CAppRecordingSaveScreenshotResult;

    typedef struct __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CMedia__CAppRecording__CAppRecordingSaveScreenshotResultVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CMedia__CAppRecording__CAppRecordingSaveScreenshotResult* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CMedia__CAppRecording__CAppRecordingSaveScreenshotResult* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CMedia__CAppRecording__CAppRecordingSaveScreenshotResult* This);
        HRESULT (STDMETHODCALLTYPE* Invoke)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CMedia__CAppRecording__CAppRecordingSaveScreenshotResult* This,
        __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CMedia__CAppRecording__CAppRecordingSaveScreenshotResult* asyncInfo,
        enum __x_ABI_CWindows_CFoundation_CAsyncStatus asyncStatus);

        END_INTERFACE
    } __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CMedia__CAppRecording__CAppRecordingSaveScreenshotResultVtbl;

    interface __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CMedia__CAppRecording__CAppRecordingSaveScreenshotResult
    {
        CONST_VTBL struct __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CMedia__CAppRecording__CAppRecordingSaveScreenshotResultVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CMedia__CAppRecording__CAppRecordingSaveScreenshotResult_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIIterator_1_HSTRING_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIIterator_1_HSTRING_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIIterator_1_HSTRING __x_ABI_C__FIIterator_1_HSTRING;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIIterator_1_HSTRING;

    typedef struct __x_ABI_C__FIIterator_1_HSTRINGVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIIterator_1_HSTRING* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIIterator_1_HSTRING* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIIterator_1_HSTRING* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIIterator_1_HSTRING* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIIterator_1_HSTRING* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIIterator_1_HSTRING* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Current)(__x_ABI_C__FIIterator_1_HSTRING* This,
        HSTRING* result);
    HRESULT (STDMETHODCALLTYPE* get_HasCurrent)(__x_ABI_C__FIIterator_1_HSTRING* This,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* MoveNext)(__x_ABI_C__FIIterator_1_HSTRING* This,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__x_ABI_C__FIIterator_1_HSTRING* This,
        UINT32 itemsLength,
        HSTRING* items,
        UINT32* result);

        END_INTERFACE
    } __x_ABI_C__FIIterator_1_HSTRINGVtbl;

    interface __x_ABI_C__FIIterator_1_HSTRING
    {
        CONST_VTBL struct __x_ABI_C__FIIterator_1_HSTRINGVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIIterator_1_HSTRING_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIIterable_1_HSTRING_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIIterable_1_HSTRING_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIIterable_1_HSTRING __x_ABI_C__FIIterable_1_HSTRING;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIIterable_1_HSTRING;

    typedef struct __x_ABI_C__FIIterable_1_HSTRINGVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIIterable_1_HSTRING* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIIterable_1_HSTRING* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIIterable_1_HSTRING* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIIterable_1_HSTRING* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIIterable_1_HSTRING* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIIterable_1_HSTRING* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* First)(__x_ABI_C__FIIterable_1_HSTRING* This,
        __x_ABI_C__FIIterator_1_HSTRING** result);

        END_INTERFACE
    } __x_ABI_C__FIIterable_1_HSTRINGVtbl;

    interface __x_ABI_C__FIIterable_1_HSTRING
    {
        CONST_VTBL struct __x_ABI_C__FIIterable_1_HSTRINGVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIIterable_1_HSTRING_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIIterator_1___x_ABI_CWindows__CMedia__CAppRecording__CAppRecordingSavedScreenshotInfo_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIIterator_1___x_ABI_CWindows__CMedia__CAppRecording__CAppRecordingSavedScreenshotInfo_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIIterator_1___x_ABI_CWindows__CMedia__CAppRecording__CAppRecordingSavedScreenshotInfo __x_ABI_C__FIIterator_1___x_ABI_CWindows__CMedia__CAppRecording__CAppRecordingSavedScreenshotInfo;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIIterator_1___x_ABI_CWindows__CMedia__CAppRecording__CAppRecordingSavedScreenshotInfo;

    typedef struct __x_ABI_C__FIIterator_1___x_ABI_CWindows__CMedia__CAppRecording__CAppRecordingSavedScreenshotInfoVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CMedia__CAppRecording__CAppRecordingSavedScreenshotInfo* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CMedia__CAppRecording__CAppRecordingSavedScreenshotInfo* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CMedia__CAppRecording__CAppRecordingSavedScreenshotInfo* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CMedia__CAppRecording__CAppRecordingSavedScreenshotInfo* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CMedia__CAppRecording__CAppRecordingSavedScreenshotInfo* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CMedia__CAppRecording__CAppRecordingSavedScreenshotInfo* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Current)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CMedia__CAppRecording__CAppRecordingSavedScreenshotInfo* This,
        __x_ABI_CWindows_CMedia_CAppRecording_CIAppRecordingSavedScreenshotInfo** result);
    HRESULT (STDMETHODCALLTYPE* get_HasCurrent)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CMedia__CAppRecording__CAppRecordingSavedScreenshotInfo* This,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* MoveNext)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CMedia__CAppRecording__CAppRecordingSavedScreenshotInfo* This,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CMedia__CAppRecording__CAppRecordingSavedScreenshotInfo* This,
        UINT32 itemsLength,
        __x_ABI_CWindows_CMedia_CAppRecording_CIAppRecordingSavedScreenshotInfo** items,
        UINT32* result);

        END_INTERFACE
    } __x_ABI_C__FIIterator_1___x_ABI_CWindows__CMedia__CAppRecording__CAppRecordingSavedScreenshotInfoVtbl;

    interface __x_ABI_C__FIIterator_1___x_ABI_CWindows__CMedia__CAppRecording__CAppRecordingSavedScreenshotInfo
    {
        CONST_VTBL struct __x_ABI_C__FIIterator_1___x_ABI_CWindows__CMedia__CAppRecording__CAppRecordingSavedScreenshotInfoVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIIterator_1___x_ABI_CWindows__CMedia__CAppRecording__CAppRecordingSavedScreenshotInfo_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIIterable_1___x_ABI_CWindows__CMedia__CAppRecording__CAppRecordingSavedScreenshotInfo_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIIterable_1___x_ABI_CWindows__CMedia__CAppRecording__CAppRecordingSavedScreenshotInfo_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIIterable_1___x_ABI_CWindows__CMedia__CAppRecording__CAppRecordingSavedScreenshotInfo __x_ABI_C__FIIterable_1___x_ABI_CWindows__CMedia__CAppRecording__CAppRecordingSavedScreenshotInfo;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIIterable_1___x_ABI_CWindows__CMedia__CAppRecording__CAppRecordingSavedScreenshotInfo;

    typedef struct __x_ABI_C__FIIterable_1___x_ABI_CWindows__CMedia__CAppRecording__CAppRecordingSavedScreenshotInfoVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CMedia__CAppRecording__CAppRecordingSavedScreenshotInfo* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CMedia__CAppRecording__CAppRecordingSavedScreenshotInfo* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CMedia__CAppRecording__CAppRecordingSavedScreenshotInfo* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CMedia__CAppRecording__CAppRecordingSavedScreenshotInfo* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CMedia__CAppRecording__CAppRecordingSavedScreenshotInfo* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CMedia__CAppRecording__CAppRecordingSavedScreenshotInfo* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* First)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CMedia__CAppRecording__CAppRecordingSavedScreenshotInfo* This,
        __x_ABI_C__FIIterator_1___x_ABI_CWindows__CMedia__CAppRecording__CAppRecordingSavedScreenshotInfo** result);

        END_INTERFACE
    } __x_ABI_C__FIIterable_1___x_ABI_CWindows__CMedia__CAppRecording__CAppRecordingSavedScreenshotInfoVtbl;

    interface __x_ABI_C__FIIterable_1___x_ABI_CWindows__CMedia__CAppRecording__CAppRecordingSavedScreenshotInfo
    {
        CONST_VTBL struct __x_ABI_C__FIIterable_1___x_ABI_CWindows__CMedia__CAppRecording__CAppRecordingSavedScreenshotInfoVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIIterable_1___x_ABI_CWindows__CMedia__CAppRecording__CAppRecordingSavedScreenshotInfo_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIVectorView_1_HSTRING_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIVectorView_1_HSTRING_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIVectorView_1_HSTRING __x_ABI_C__FIVectorView_1_HSTRING;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIVectorView_1_HSTRING;

    typedef struct __x_ABI_C__FIVectorView_1_HSTRINGVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIVectorView_1_HSTRING* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIVectorView_1_HSTRING* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIVectorView_1_HSTRING* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIVectorView_1_HSTRING* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIVectorView_1_HSTRING* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIVectorView_1_HSTRING* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* GetAt)(__x_ABI_C__FIVectorView_1_HSTRING* This,
        UINT32 index,
        HSTRING* result);
    HRESULT (STDMETHODCALLTYPE* get_Size)(__x_ABI_C__FIVectorView_1_HSTRING* This,
        UINT32* result);
    HRESULT (STDMETHODCALLTYPE* IndexOf)(__x_ABI_C__FIVectorView_1_HSTRING* This,
        HSTRING value,
        UINT32* index,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__x_ABI_C__FIVectorView_1_HSTRING* This,
        UINT32 startIndex,
        UINT32 itemsLength,
        HSTRING* items,
        UINT32* result);

        END_INTERFACE
    } __x_ABI_C__FIVectorView_1_HSTRINGVtbl;

    interface __x_ABI_C__FIVectorView_1_HSTRING
    {
        CONST_VTBL struct __x_ABI_C__FIVectorView_1_HSTRINGVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIVectorView_1_HSTRING_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIVectorView_1___x_ABI_CWindows__CMedia__CAppRecording__CAppRecordingSavedScreenshotInfo_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIVectorView_1___x_ABI_CWindows__CMedia__CAppRecording__CAppRecordingSavedScreenshotInfo_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CMedia__CAppRecording__CAppRecordingSavedScreenshotInfo __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CMedia__CAppRecording__CAppRecordingSavedScreenshotInfo;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CMedia__CAppRecording__CAppRecordingSavedScreenshotInfo;

    typedef struct __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CMedia__CAppRecording__CAppRecordingSavedScreenshotInfoVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CMedia__CAppRecording__CAppRecordingSavedScreenshotInfo* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CMedia__CAppRecording__CAppRecordingSavedScreenshotInfo* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CMedia__CAppRecording__CAppRecordingSavedScreenshotInfo* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CMedia__CAppRecording__CAppRecordingSavedScreenshotInfo* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CMedia__CAppRecording__CAppRecordingSavedScreenshotInfo* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CMedia__CAppRecording__CAppRecordingSavedScreenshotInfo* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* GetAt)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CMedia__CAppRecording__CAppRecordingSavedScreenshotInfo* This,
        UINT32 index,
        __x_ABI_CWindows_CMedia_CAppRecording_CIAppRecordingSavedScreenshotInfo** result);
    HRESULT (STDMETHODCALLTYPE* get_Size)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CMedia__CAppRecording__CAppRecordingSavedScreenshotInfo* This,
        UINT32* result);
    HRESULT (STDMETHODCALLTYPE* IndexOf)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CMedia__CAppRecording__CAppRecordingSavedScreenshotInfo* This,
        __x_ABI_CWindows_CMedia_CAppRecording_CIAppRecordingSavedScreenshotInfo* value,
        UINT32* index,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CMedia__CAppRecording__CAppRecordingSavedScreenshotInfo* This,
        UINT32 startIndex,
        UINT32 itemsLength,
        __x_ABI_CWindows_CMedia_CAppRecording_CIAppRecordingSavedScreenshotInfo** items,
        UINT32* result);

        END_INTERFACE
    } __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CMedia__CAppRecording__CAppRecordingSavedScreenshotInfoVtbl;

    interface __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CMedia__CAppRecording__CAppRecordingSavedScreenshotInfo
    {
        CONST_VTBL struct __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CMedia__CAppRecording__CAppRecordingSavedScreenshotInfoVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIVectorView_1___x_ABI_CWindows__CMedia__CAppRecording__CAppRecordingSavedScreenshotInfo_INTERFACE_DEFINED__
    
typedef enum __x_ABI_CWindows_CFoundation_CAsyncStatus __x_ABI_CWindows_CFoundation_CAsyncStatus;

typedef struct __x_ABI_CWindows_CFoundation_CDateTime __x_ABI_CWindows_CFoundation_CDateTime;

#ifndef ____x_ABI_CWindows_CFoundation_CIAsyncInfo_FWD_DEFINED__
#define ____x_ABI_CWindows_CFoundation_CIAsyncInfo_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CFoundation_CIAsyncInfo __x_ABI_CWindows_CFoundation_CIAsyncInfo;

#endif // ____x_ABI_CWindows_CFoundation_CIAsyncInfo_FWD_DEFINED__

typedef struct __x_ABI_CWindows_CFoundation_CTimeSpan __x_ABI_CWindows_CFoundation_CTimeSpan;

#ifndef ____x_ABI_CWindows_CStorage_CIStorageFile_FWD_DEFINED__
#define ____x_ABI_CWindows_CStorage_CIStorageFile_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CStorage_CIStorageFile __x_ABI_CWindows_CStorage_CIStorageFile;

#endif // ____x_ABI_CWindows_CStorage_CIStorageFile_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CStorage_CIStorageFolder_FWD_DEFINED__
#define ____x_ABI_CWindows_CStorage_CIStorageFolder_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CStorage_CIStorageFolder __x_ABI_CWindows_CStorage_CIStorageFolder;

#endif // ____x_ABI_CWindows_CStorage_CIStorageFolder_FWD_DEFINED__

typedef enum __x_ABI_CWindows_CMedia_CAppRecording_CAppRecordingSaveScreenshotOption __x_ABI_CWindows_CMedia_CAppRecording_CAppRecordingSaveScreenshotOption;

enum __x_ABI_CWindows_CMedia_CAppRecording_CAppRecordingSaveScreenshotOption
    {
        __x_ABI_CWindows_CMedia_CAppRecording_CAppRecordingSaveScreenshotOption_None = 0,
    __x_ABI_CWindows_CMedia_CAppRecording_CAppRecordingSaveScreenshotOption_HdrContentVisible = 1,
};

#if !defined(____x_ABI_CWindows_CMedia_CAppRecording_CIAppRecordingManager_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CMedia_CAppRecording_CIAppRecordingManager_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CMedia_CAppRecording_CIAppRecordingManagerVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CMedia_CAppRecording_CIAppRecordingManager* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CMedia_CAppRecording_CIAppRecordingManager* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CMedia_CAppRecording_CIAppRecordingManager* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CMedia_CAppRecording_CIAppRecordingManager* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CMedia_CAppRecording_CIAppRecordingManager* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CMedia_CAppRecording_CIAppRecordingManager* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* GetStatus)(__x_ABI_CWindows_CMedia_CAppRecording_CIAppRecordingManager* This,
        __x_ABI_CWindows_CMedia_CAppRecording_CIAppRecordingStatus** result);
    HRESULT (STDMETHODCALLTYPE* StartRecordingToFileAsync)(__x_ABI_CWindows_CMedia_CAppRecording_CIAppRecordingManager* This,
        __x_ABI_CWindows_CStorage_CIStorageFile* file,
        __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CMedia__CAppRecording__CAppRecordingResult** operation);
    HRESULT (STDMETHODCALLTYPE* RecordTimeSpanToFileAsync)(__x_ABI_CWindows_CMedia_CAppRecording_CIAppRecordingManager* This,
        struct __x_ABI_CWindows_CFoundation_CDateTime startTime,
        struct __x_ABI_CWindows_CFoundation_CTimeSpan duration,
        __x_ABI_CWindows_CStorage_CIStorageFile* file,
        __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CMedia__CAppRecording__CAppRecordingResult** operation);
    HRESULT (STDMETHODCALLTYPE* get_SupportedScreenshotMediaEncodingSubtypes)(__x_ABI_CWindows_CMedia_CAppRecording_CIAppRecordingManager* This,
        __x_ABI_C__FIVectorView_1_HSTRING** value);
    HRESULT (STDMETHODCALLTYPE* SaveScreenshotToFilesAsync)(__x_ABI_CWindows_CMedia_CAppRecording_CIAppRecordingManager* This,
        __x_ABI_CWindows_CStorage_CIStorageFolder* folder,
        HSTRING filenamePrefix,
        enum __x_ABI_CWindows_CMedia_CAppRecording_CAppRecordingSaveScreenshotOption option,
        __x_ABI_C__FIIterable_1_HSTRING* requestedFormats,
        __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CMedia__CAppRecording__CAppRecordingSaveScreenshotResult** operation);

        END_INTERFACE
    } __x_ABI_CWindows_CMedia_CAppRecording_CIAppRecordingManagerVtbl;

    interface __x_ABI_CWindows_CMedia_CAppRecording_CIAppRecordingManager
    {
        CONST_VTBL struct __x_ABI_CWindows_CMedia_CAppRecording_CIAppRecordingManagerVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CMedia_CAppRecording_CIAppRecordingManager;
#endif /* !defined(____x_ABI_CWindows_CMedia_CAppRecording_CIAppRecordingManager_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CMedia_CAppRecording_CIAppRecordingManagerStatics_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CMedia_CAppRecording_CIAppRecordingManagerStatics_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CMedia_CAppRecording_CIAppRecordingManagerStaticsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CMedia_CAppRecording_CIAppRecordingManagerStatics* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CMedia_CAppRecording_CIAppRecordingManagerStatics* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CMedia_CAppRecording_CIAppRecordingManagerStatics* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CMedia_CAppRecording_CIAppRecordingManagerStatics* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CMedia_CAppRecording_CIAppRecordingManagerStatics* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CMedia_CAppRecording_CIAppRecordingManagerStatics* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* GetDefault)(__x_ABI_CWindows_CMedia_CAppRecording_CIAppRecordingManagerStatics* This,
        __x_ABI_CWindows_CMedia_CAppRecording_CIAppRecordingManager** result);

        END_INTERFACE
    } __x_ABI_CWindows_CMedia_CAppRecording_CIAppRecordingManagerStaticsVtbl;

    interface __x_ABI_CWindows_CMedia_CAppRecording_CIAppRecordingManagerStatics
    {
        CONST_VTBL struct __x_ABI_CWindows_CMedia_CAppRecording_CIAppRecordingManagerStaticsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CMedia_CAppRecording_CIAppRecordingManagerStatics;
#endif /* !defined(____x_ABI_CWindows_CMedia_CAppRecording_CIAppRecordingManagerStatics_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CMedia_CAppRecording_CIAppRecordingResult_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CMedia_CAppRecording_CIAppRecordingResult_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CMedia_CAppRecording_CIAppRecordingResultVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CMedia_CAppRecording_CIAppRecordingResult* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CMedia_CAppRecording_CIAppRecordingResult* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CMedia_CAppRecording_CIAppRecordingResult* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CMedia_CAppRecording_CIAppRecordingResult* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CMedia_CAppRecording_CIAppRecordingResult* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CMedia_CAppRecording_CIAppRecordingResult* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Succeeded)(__x_ABI_CWindows_CMedia_CAppRecording_CIAppRecordingResult* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* get_ExtendedError)(__x_ABI_CWindows_CMedia_CAppRecording_CIAppRecordingResult* This,
        HRESULT* value);
    HRESULT (STDMETHODCALLTYPE* get_Duration)(__x_ABI_CWindows_CMedia_CAppRecording_CIAppRecordingResult* This,
        struct __x_ABI_CWindows_CFoundation_CTimeSpan* value);
    HRESULT (STDMETHODCALLTYPE* get_IsFileTruncated)(__x_ABI_CWindows_CMedia_CAppRecording_CIAppRecordingResult* This,
        boolean* value);

        END_INTERFACE
    } __x_ABI_CWindows_CMedia_CAppRecording_CIAppRecordingResultVtbl;

    interface __x_ABI_CWindows_CMedia_CAppRecording_CIAppRecordingResult
    {
        CONST_VTBL struct __x_ABI_CWindows_CMedia_CAppRecording_CIAppRecordingResultVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CMedia_CAppRecording_CIAppRecordingResult;
#endif /* !defined(____x_ABI_CWindows_CMedia_CAppRecording_CIAppRecordingResult_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CMedia_CAppRecording_CIAppRecordingSaveScreenshotResult_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CMedia_CAppRecording_CIAppRecordingSaveScreenshotResult_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CMedia_CAppRecording_CIAppRecordingSaveScreenshotResultVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CMedia_CAppRecording_CIAppRecordingSaveScreenshotResult* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CMedia_CAppRecording_CIAppRecordingSaveScreenshotResult* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CMedia_CAppRecording_CIAppRecordingSaveScreenshotResult* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CMedia_CAppRecording_CIAppRecordingSaveScreenshotResult* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CMedia_CAppRecording_CIAppRecordingSaveScreenshotResult* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CMedia_CAppRecording_CIAppRecordingSaveScreenshotResult* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Succeeded)(__x_ABI_CWindows_CMedia_CAppRecording_CIAppRecordingSaveScreenshotResult* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* get_ExtendedError)(__x_ABI_CWindows_CMedia_CAppRecording_CIAppRecordingSaveScreenshotResult* This,
        HRESULT* value);
    HRESULT (STDMETHODCALLTYPE* get_SavedScreenshotInfos)(__x_ABI_CWindows_CMedia_CAppRecording_CIAppRecordingSaveScreenshotResult* This,
        __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CMedia__CAppRecording__CAppRecordingSavedScreenshotInfo** value);

        END_INTERFACE
    } __x_ABI_CWindows_CMedia_CAppRecording_CIAppRecordingSaveScreenshotResultVtbl;

    interface __x_ABI_CWindows_CMedia_CAppRecording_CIAppRecordingSaveScreenshotResult
    {
        CONST_VTBL struct __x_ABI_CWindows_CMedia_CAppRecording_CIAppRecordingSaveScreenshotResultVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CMedia_CAppRecording_CIAppRecordingSaveScreenshotResult;
#endif /* !defined(____x_ABI_CWindows_CMedia_CAppRecording_CIAppRecordingSaveScreenshotResult_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CMedia_CAppRecording_CIAppRecordingSavedScreenshotInfo_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CMedia_CAppRecording_CIAppRecordingSavedScreenshotInfo_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CMedia_CAppRecording_CIAppRecordingSavedScreenshotInfoVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CMedia_CAppRecording_CIAppRecordingSavedScreenshotInfo* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CMedia_CAppRecording_CIAppRecordingSavedScreenshotInfo* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CMedia_CAppRecording_CIAppRecordingSavedScreenshotInfo* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CMedia_CAppRecording_CIAppRecordingSavedScreenshotInfo* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CMedia_CAppRecording_CIAppRecordingSavedScreenshotInfo* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CMedia_CAppRecording_CIAppRecordingSavedScreenshotInfo* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_File)(__x_ABI_CWindows_CMedia_CAppRecording_CIAppRecordingSavedScreenshotInfo* This,
        __x_ABI_CWindows_CStorage_CIStorageFile** value);
    HRESULT (STDMETHODCALLTYPE* get_MediaEncodingSubtype)(__x_ABI_CWindows_CMedia_CAppRecording_CIAppRecordingSavedScreenshotInfo* This,
        HSTRING* value);

        END_INTERFACE
    } __x_ABI_CWindows_CMedia_CAppRecording_CIAppRecordingSavedScreenshotInfoVtbl;

    interface __x_ABI_CWindows_CMedia_CAppRecording_CIAppRecordingSavedScreenshotInfo
    {
        CONST_VTBL struct __x_ABI_CWindows_CMedia_CAppRecording_CIAppRecordingSavedScreenshotInfoVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CMedia_CAppRecording_CIAppRecordingSavedScreenshotInfo;
#endif /* !defined(____x_ABI_CWindows_CMedia_CAppRecording_CIAppRecordingSavedScreenshotInfo_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CMedia_CAppRecording_CIAppRecordingStatus_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CMedia_CAppRecording_CIAppRecordingStatus_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CMedia_CAppRecording_CIAppRecordingStatusVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CMedia_CAppRecording_CIAppRecordingStatus* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CMedia_CAppRecording_CIAppRecordingStatus* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CMedia_CAppRecording_CIAppRecordingStatus* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CMedia_CAppRecording_CIAppRecordingStatus* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CMedia_CAppRecording_CIAppRecordingStatus* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CMedia_CAppRecording_CIAppRecordingStatus* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_CanRecord)(__x_ABI_CWindows_CMedia_CAppRecording_CIAppRecordingStatus* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* get_CanRecordTimeSpan)(__x_ABI_CWindows_CMedia_CAppRecording_CIAppRecordingStatus* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* get_HistoricalBufferDuration)(__x_ABI_CWindows_CMedia_CAppRecording_CIAppRecordingStatus* This,
        struct __x_ABI_CWindows_CFoundation_CTimeSpan* value);
    HRESULT (STDMETHODCALLTYPE* get_Details)(__x_ABI_CWindows_CMedia_CAppRecording_CIAppRecordingStatus* This,
        __x_ABI_CWindows_CMedia_CAppRecording_CIAppRecordingStatusDetails** value);

        END_INTERFACE
    } __x_ABI_CWindows_CMedia_CAppRecording_CIAppRecordingStatusVtbl;

    interface __x_ABI_CWindows_CMedia_CAppRecording_CIAppRecordingStatus
    {
        CONST_VTBL struct __x_ABI_CWindows_CMedia_CAppRecording_CIAppRecordingStatusVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CMedia_CAppRecording_CIAppRecordingStatus;
#endif /* !defined(____x_ABI_CWindows_CMedia_CAppRecording_CIAppRecordingStatus_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CMedia_CAppRecording_CIAppRecordingStatusDetails_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CMedia_CAppRecording_CIAppRecordingStatusDetails_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CMedia_CAppRecording_CIAppRecordingStatusDetailsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CMedia_CAppRecording_CIAppRecordingStatusDetails* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CMedia_CAppRecording_CIAppRecordingStatusDetails* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CMedia_CAppRecording_CIAppRecordingStatusDetails* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CMedia_CAppRecording_CIAppRecordingStatusDetails* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CMedia_CAppRecording_CIAppRecordingStatusDetails* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CMedia_CAppRecording_CIAppRecordingStatusDetails* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_IsAnyAppBroadcasting)(__x_ABI_CWindows_CMedia_CAppRecording_CIAppRecordingStatusDetails* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* get_IsCaptureResourceUnavailable)(__x_ABI_CWindows_CMedia_CAppRecording_CIAppRecordingStatusDetails* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* get_IsGameStreamInProgress)(__x_ABI_CWindows_CMedia_CAppRecording_CIAppRecordingStatusDetails* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* get_IsTimeSpanRecordingDisabled)(__x_ABI_CWindows_CMedia_CAppRecording_CIAppRecordingStatusDetails* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* get_IsGpuConstrained)(__x_ABI_CWindows_CMedia_CAppRecording_CIAppRecordingStatusDetails* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* get_IsAppInactive)(__x_ABI_CWindows_CMedia_CAppRecording_CIAppRecordingStatusDetails* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* get_IsBlockedForApp)(__x_ABI_CWindows_CMedia_CAppRecording_CIAppRecordingStatusDetails* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* get_IsDisabledByUser)(__x_ABI_CWindows_CMedia_CAppRecording_CIAppRecordingStatusDetails* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* get_IsDisabledBySystem)(__x_ABI_CWindows_CMedia_CAppRecording_CIAppRecordingStatusDetails* This,
        boolean* value);

        END_INTERFACE
    } __x_ABI_CWindows_CMedia_CAppRecording_CIAppRecordingStatusDetailsVtbl;

    interface __x_ABI_CWindows_CMedia_CAppRecording_CIAppRecordingStatusDetails
    {
        CONST_VTBL struct __x_ABI_CWindows_CMedia_CAppRecording_CIAppRecordingStatusDetailsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CMedia_CAppRecording_CIAppRecordingStatusDetails;
#endif /* !defined(____x_ABI_CWindows_CMedia_CAppRecording_CIAppRecordingStatusDetails_INTERFACE_DEFINED__) */
    
