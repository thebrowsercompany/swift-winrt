// WARNING: Please don't edit this file. It was generated by Swift/WinRT v0.0.1

#pragma once
// Header files for imported files
#include <inspectable.h>
#include <EventToken.h>
#include <windowscontracts.h>
#include "Windows.Foundation.h"
#include "Windows.UI.Composition.h"
#include "Windows.UI.Core.h"
#include "Windows.UI.Text.h"
#include "Windows.UI.Xaml.h"
#include "Windows.UI.Xaml.Input.h"
#include "Windows.UI.Xaml.Media.h"
// Importing Collections header
#include "Windows.Foundation.Collections.h"

/* Forward Declarations */
#ifndef ____x_ABI_CWindows_CUI_CXaml_CDocuments_CIBlock_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CDocuments_CIBlock_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CDocuments_CIBlock __x_ABI_CWindows_CUI_CXaml_CDocuments_CIBlock;

#endif // ____x_ABI_CWindows_CUI_CXaml_CDocuments_CIBlock_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CDocuments_CIBlock2_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CDocuments_CIBlock2_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CDocuments_CIBlock2 __x_ABI_CWindows_CUI_CXaml_CDocuments_CIBlock2;

#endif // ____x_ABI_CWindows_CUI_CXaml_CDocuments_CIBlock2_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CDocuments_CIBlockFactory_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CDocuments_CIBlockFactory_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CDocuments_CIBlockFactory __x_ABI_CWindows_CUI_CXaml_CDocuments_CIBlockFactory;

#endif // ____x_ABI_CWindows_CUI_CXaml_CDocuments_CIBlockFactory_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CDocuments_CIBlockStatics_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CDocuments_CIBlockStatics_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CDocuments_CIBlockStatics __x_ABI_CWindows_CUI_CXaml_CDocuments_CIBlockStatics;

#endif // ____x_ABI_CWindows_CUI_CXaml_CDocuments_CIBlockStatics_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CDocuments_CIBlockStatics2_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CDocuments_CIBlockStatics2_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CDocuments_CIBlockStatics2 __x_ABI_CWindows_CUI_CXaml_CDocuments_CIBlockStatics2;

#endif // ____x_ABI_CWindows_CUI_CXaml_CDocuments_CIBlockStatics2_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CDocuments_CIBold_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CDocuments_CIBold_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CDocuments_CIBold __x_ABI_CWindows_CUI_CXaml_CDocuments_CIBold;

#endif // ____x_ABI_CWindows_CUI_CXaml_CDocuments_CIBold_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CDocuments_CIContactContentLinkProvider_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CDocuments_CIContactContentLinkProvider_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CDocuments_CIContactContentLinkProvider __x_ABI_CWindows_CUI_CXaml_CDocuments_CIContactContentLinkProvider;

#endif // ____x_ABI_CWindows_CUI_CXaml_CDocuments_CIContactContentLinkProvider_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CDocuments_CIContentLink_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CDocuments_CIContentLink_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CDocuments_CIContentLink __x_ABI_CWindows_CUI_CXaml_CDocuments_CIContentLink;

#endif // ____x_ABI_CWindows_CUI_CXaml_CDocuments_CIContentLink_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CDocuments_CIContentLinkInvokedEventArgs_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CDocuments_CIContentLinkInvokedEventArgs_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CDocuments_CIContentLinkInvokedEventArgs __x_ABI_CWindows_CUI_CXaml_CDocuments_CIContentLinkInvokedEventArgs;

#endif // ____x_ABI_CWindows_CUI_CXaml_CDocuments_CIContentLinkInvokedEventArgs_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CDocuments_CIContentLinkProvider_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CDocuments_CIContentLinkProvider_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CDocuments_CIContentLinkProvider __x_ABI_CWindows_CUI_CXaml_CDocuments_CIContentLinkProvider;

#endif // ____x_ABI_CWindows_CUI_CXaml_CDocuments_CIContentLinkProvider_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CDocuments_CIContentLinkProviderCollection_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CDocuments_CIContentLinkProviderCollection_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CDocuments_CIContentLinkProviderCollection __x_ABI_CWindows_CUI_CXaml_CDocuments_CIContentLinkProviderCollection;

#endif // ____x_ABI_CWindows_CUI_CXaml_CDocuments_CIContentLinkProviderCollection_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CDocuments_CIContentLinkProviderFactory_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CDocuments_CIContentLinkProviderFactory_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CDocuments_CIContentLinkProviderFactory __x_ABI_CWindows_CUI_CXaml_CDocuments_CIContentLinkProviderFactory;

#endif // ____x_ABI_CWindows_CUI_CXaml_CDocuments_CIContentLinkProviderFactory_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CDocuments_CIContentLinkStatics_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CDocuments_CIContentLinkStatics_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CDocuments_CIContentLinkStatics __x_ABI_CWindows_CUI_CXaml_CDocuments_CIContentLinkStatics;

#endif // ____x_ABI_CWindows_CUI_CXaml_CDocuments_CIContentLinkStatics_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CDocuments_CIGlyphs_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CDocuments_CIGlyphs_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CDocuments_CIGlyphs __x_ABI_CWindows_CUI_CXaml_CDocuments_CIGlyphs;

#endif // ____x_ABI_CWindows_CUI_CXaml_CDocuments_CIGlyphs_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CDocuments_CIGlyphs2_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CDocuments_CIGlyphs2_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CDocuments_CIGlyphs2 __x_ABI_CWindows_CUI_CXaml_CDocuments_CIGlyphs2;

#endif // ____x_ABI_CWindows_CUI_CXaml_CDocuments_CIGlyphs2_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CDocuments_CIGlyphsStatics_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CDocuments_CIGlyphsStatics_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CDocuments_CIGlyphsStatics __x_ABI_CWindows_CUI_CXaml_CDocuments_CIGlyphsStatics;

#endif // ____x_ABI_CWindows_CUI_CXaml_CDocuments_CIGlyphsStatics_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CDocuments_CIGlyphsStatics2_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CDocuments_CIGlyphsStatics2_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CDocuments_CIGlyphsStatics2 __x_ABI_CWindows_CUI_CXaml_CDocuments_CIGlyphsStatics2;

#endif // ____x_ABI_CWindows_CUI_CXaml_CDocuments_CIGlyphsStatics2_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CDocuments_CIHyperlink_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CDocuments_CIHyperlink_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CDocuments_CIHyperlink __x_ABI_CWindows_CUI_CXaml_CDocuments_CIHyperlink;

#endif // ____x_ABI_CWindows_CUI_CXaml_CDocuments_CIHyperlink_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CDocuments_CIHyperlink2_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CDocuments_CIHyperlink2_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CDocuments_CIHyperlink2 __x_ABI_CWindows_CUI_CXaml_CDocuments_CIHyperlink2;

#endif // ____x_ABI_CWindows_CUI_CXaml_CDocuments_CIHyperlink2_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CDocuments_CIHyperlink3_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CDocuments_CIHyperlink3_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CDocuments_CIHyperlink3 __x_ABI_CWindows_CUI_CXaml_CDocuments_CIHyperlink3;

#endif // ____x_ABI_CWindows_CUI_CXaml_CDocuments_CIHyperlink3_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CDocuments_CIHyperlink4_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CDocuments_CIHyperlink4_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CDocuments_CIHyperlink4 __x_ABI_CWindows_CUI_CXaml_CDocuments_CIHyperlink4;

#endif // ____x_ABI_CWindows_CUI_CXaml_CDocuments_CIHyperlink4_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CDocuments_CIHyperlink5_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CDocuments_CIHyperlink5_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CDocuments_CIHyperlink5 __x_ABI_CWindows_CUI_CXaml_CDocuments_CIHyperlink5;

#endif // ____x_ABI_CWindows_CUI_CXaml_CDocuments_CIHyperlink5_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CDocuments_CIHyperlinkClickEventArgs_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CDocuments_CIHyperlinkClickEventArgs_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CDocuments_CIHyperlinkClickEventArgs __x_ABI_CWindows_CUI_CXaml_CDocuments_CIHyperlinkClickEventArgs;

#endif // ____x_ABI_CWindows_CUI_CXaml_CDocuments_CIHyperlinkClickEventArgs_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CDocuments_CIHyperlinkStatics_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CDocuments_CIHyperlinkStatics_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CDocuments_CIHyperlinkStatics __x_ABI_CWindows_CUI_CXaml_CDocuments_CIHyperlinkStatics;

#endif // ____x_ABI_CWindows_CUI_CXaml_CDocuments_CIHyperlinkStatics_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CDocuments_CIHyperlinkStatics2_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CDocuments_CIHyperlinkStatics2_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CDocuments_CIHyperlinkStatics2 __x_ABI_CWindows_CUI_CXaml_CDocuments_CIHyperlinkStatics2;

#endif // ____x_ABI_CWindows_CUI_CXaml_CDocuments_CIHyperlinkStatics2_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CDocuments_CIHyperlinkStatics3_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CDocuments_CIHyperlinkStatics3_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CDocuments_CIHyperlinkStatics3 __x_ABI_CWindows_CUI_CXaml_CDocuments_CIHyperlinkStatics3;

#endif // ____x_ABI_CWindows_CUI_CXaml_CDocuments_CIHyperlinkStatics3_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CDocuments_CIHyperlinkStatics4_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CDocuments_CIHyperlinkStatics4_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CDocuments_CIHyperlinkStatics4 __x_ABI_CWindows_CUI_CXaml_CDocuments_CIHyperlinkStatics4;

#endif // ____x_ABI_CWindows_CUI_CXaml_CDocuments_CIHyperlinkStatics4_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CDocuments_CIHyperlinkStatics5_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CDocuments_CIHyperlinkStatics5_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CDocuments_CIHyperlinkStatics5 __x_ABI_CWindows_CUI_CXaml_CDocuments_CIHyperlinkStatics5;

#endif // ____x_ABI_CWindows_CUI_CXaml_CDocuments_CIHyperlinkStatics5_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CDocuments_CIInline_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CDocuments_CIInline_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CDocuments_CIInline __x_ABI_CWindows_CUI_CXaml_CDocuments_CIInline;

#endif // ____x_ABI_CWindows_CUI_CXaml_CDocuments_CIInline_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CDocuments_CIInlineFactory_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CDocuments_CIInlineFactory_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CDocuments_CIInlineFactory __x_ABI_CWindows_CUI_CXaml_CDocuments_CIInlineFactory;

#endif // ____x_ABI_CWindows_CUI_CXaml_CDocuments_CIInlineFactory_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CDocuments_CIInlineUIContainer_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CDocuments_CIInlineUIContainer_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CDocuments_CIInlineUIContainer __x_ABI_CWindows_CUI_CXaml_CDocuments_CIInlineUIContainer;

#endif // ____x_ABI_CWindows_CUI_CXaml_CDocuments_CIInlineUIContainer_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CDocuments_CIItalic_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CDocuments_CIItalic_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CDocuments_CIItalic __x_ABI_CWindows_CUI_CXaml_CDocuments_CIItalic;

#endif // ____x_ABI_CWindows_CUI_CXaml_CDocuments_CIItalic_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CDocuments_CILineBreak_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CDocuments_CILineBreak_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CDocuments_CILineBreak __x_ABI_CWindows_CUI_CXaml_CDocuments_CILineBreak;

#endif // ____x_ABI_CWindows_CUI_CXaml_CDocuments_CILineBreak_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CDocuments_CIParagraph_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CDocuments_CIParagraph_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CDocuments_CIParagraph __x_ABI_CWindows_CUI_CXaml_CDocuments_CIParagraph;

#endif // ____x_ABI_CWindows_CUI_CXaml_CDocuments_CIParagraph_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CDocuments_CIParagraphStatics_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CDocuments_CIParagraphStatics_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CDocuments_CIParagraphStatics __x_ABI_CWindows_CUI_CXaml_CDocuments_CIParagraphStatics;

#endif // ____x_ABI_CWindows_CUI_CXaml_CDocuments_CIParagraphStatics_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CDocuments_CIPlaceContentLinkProvider_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CDocuments_CIPlaceContentLinkProvider_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CDocuments_CIPlaceContentLinkProvider __x_ABI_CWindows_CUI_CXaml_CDocuments_CIPlaceContentLinkProvider;

#endif // ____x_ABI_CWindows_CUI_CXaml_CDocuments_CIPlaceContentLinkProvider_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CDocuments_CIRun_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CDocuments_CIRun_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CDocuments_CIRun __x_ABI_CWindows_CUI_CXaml_CDocuments_CIRun;

#endif // ____x_ABI_CWindows_CUI_CXaml_CDocuments_CIRun_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CDocuments_CIRunStatics_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CDocuments_CIRunStatics_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CDocuments_CIRunStatics __x_ABI_CWindows_CUI_CXaml_CDocuments_CIRunStatics;

#endif // ____x_ABI_CWindows_CUI_CXaml_CDocuments_CIRunStatics_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CDocuments_CISpan_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CDocuments_CISpan_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CDocuments_CISpan __x_ABI_CWindows_CUI_CXaml_CDocuments_CISpan;

#endif // ____x_ABI_CWindows_CUI_CXaml_CDocuments_CISpan_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CDocuments_CISpanFactory_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CDocuments_CISpanFactory_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CDocuments_CISpanFactory __x_ABI_CWindows_CUI_CXaml_CDocuments_CISpanFactory;

#endif // ____x_ABI_CWindows_CUI_CXaml_CDocuments_CISpanFactory_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CDocuments_CITextElement_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CDocuments_CITextElement_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CDocuments_CITextElement __x_ABI_CWindows_CUI_CXaml_CDocuments_CITextElement;

#endif // ____x_ABI_CWindows_CUI_CXaml_CDocuments_CITextElement_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CDocuments_CITextElement2_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CDocuments_CITextElement2_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CDocuments_CITextElement2 __x_ABI_CWindows_CUI_CXaml_CDocuments_CITextElement2;

#endif // ____x_ABI_CWindows_CUI_CXaml_CDocuments_CITextElement2_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CDocuments_CITextElement3_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CDocuments_CITextElement3_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CDocuments_CITextElement3 __x_ABI_CWindows_CUI_CXaml_CDocuments_CITextElement3;

#endif // ____x_ABI_CWindows_CUI_CXaml_CDocuments_CITextElement3_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CDocuments_CITextElement4_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CDocuments_CITextElement4_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CDocuments_CITextElement4 __x_ABI_CWindows_CUI_CXaml_CDocuments_CITextElement4;

#endif // ____x_ABI_CWindows_CUI_CXaml_CDocuments_CITextElement4_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CDocuments_CITextElement5_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CDocuments_CITextElement5_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CDocuments_CITextElement5 __x_ABI_CWindows_CUI_CXaml_CDocuments_CITextElement5;

#endif // ____x_ABI_CWindows_CUI_CXaml_CDocuments_CITextElement5_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CDocuments_CITextElementFactory_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CDocuments_CITextElementFactory_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CDocuments_CITextElementFactory __x_ABI_CWindows_CUI_CXaml_CDocuments_CITextElementFactory;

#endif // ____x_ABI_CWindows_CUI_CXaml_CDocuments_CITextElementFactory_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CDocuments_CITextElementOverrides_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CDocuments_CITextElementOverrides_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CDocuments_CITextElementOverrides __x_ABI_CWindows_CUI_CXaml_CDocuments_CITextElementOverrides;

#endif // ____x_ABI_CWindows_CUI_CXaml_CDocuments_CITextElementOverrides_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CDocuments_CITextElementStatics_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CDocuments_CITextElementStatics_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CDocuments_CITextElementStatics __x_ABI_CWindows_CUI_CXaml_CDocuments_CITextElementStatics;

#endif // ____x_ABI_CWindows_CUI_CXaml_CDocuments_CITextElementStatics_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CDocuments_CITextElementStatics2_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CDocuments_CITextElementStatics2_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CDocuments_CITextElementStatics2 __x_ABI_CWindows_CUI_CXaml_CDocuments_CITextElementStatics2;

#endif // ____x_ABI_CWindows_CUI_CXaml_CDocuments_CITextElementStatics2_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CDocuments_CITextElementStatics3_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CDocuments_CITextElementStatics3_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CDocuments_CITextElementStatics3 __x_ABI_CWindows_CUI_CXaml_CDocuments_CITextElementStatics3;

#endif // ____x_ABI_CWindows_CUI_CXaml_CDocuments_CITextElementStatics3_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CDocuments_CITextElementStatics4_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CDocuments_CITextElementStatics4_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CDocuments_CITextElementStatics4 __x_ABI_CWindows_CUI_CXaml_CDocuments_CITextElementStatics4;

#endif // ____x_ABI_CWindows_CUI_CXaml_CDocuments_CITextElementStatics4_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CDocuments_CITextHighlighter_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CDocuments_CITextHighlighter_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CDocuments_CITextHighlighter __x_ABI_CWindows_CUI_CXaml_CDocuments_CITextHighlighter;

#endif // ____x_ABI_CWindows_CUI_CXaml_CDocuments_CITextHighlighter_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CDocuments_CITextHighlighterBase_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CDocuments_CITextHighlighterBase_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CDocuments_CITextHighlighterBase __x_ABI_CWindows_CUI_CXaml_CDocuments_CITextHighlighterBase;

#endif // ____x_ABI_CWindows_CUI_CXaml_CDocuments_CITextHighlighterBase_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CDocuments_CITextHighlighterBaseFactory_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CDocuments_CITextHighlighterBaseFactory_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CDocuments_CITextHighlighterBaseFactory __x_ABI_CWindows_CUI_CXaml_CDocuments_CITextHighlighterBaseFactory;

#endif // ____x_ABI_CWindows_CUI_CXaml_CDocuments_CITextHighlighterBaseFactory_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CDocuments_CITextHighlighterFactory_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CDocuments_CITextHighlighterFactory_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CDocuments_CITextHighlighterFactory __x_ABI_CWindows_CUI_CXaml_CDocuments_CITextHighlighterFactory;

#endif // ____x_ABI_CWindows_CUI_CXaml_CDocuments_CITextHighlighterFactory_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CDocuments_CITextHighlighterStatics_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CDocuments_CITextHighlighterStatics_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CDocuments_CITextHighlighterStatics __x_ABI_CWindows_CUI_CXaml_CDocuments_CITextHighlighterStatics;

#endif // ____x_ABI_CWindows_CUI_CXaml_CDocuments_CITextHighlighterStatics_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CDocuments_CITextPointer_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CDocuments_CITextPointer_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CDocuments_CITextPointer __x_ABI_CWindows_CUI_CXaml_CDocuments_CITextPointer;

#endif // ____x_ABI_CWindows_CUI_CXaml_CDocuments_CITextPointer_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CDocuments_CITypography_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CDocuments_CITypography_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CDocuments_CITypography __x_ABI_CWindows_CUI_CXaml_CDocuments_CITypography;

#endif // ____x_ABI_CWindows_CUI_CXaml_CDocuments_CITypography_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CDocuments_CITypographyStatics_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CDocuments_CITypographyStatics_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CDocuments_CITypographyStatics __x_ABI_CWindows_CUI_CXaml_CDocuments_CITypographyStatics;

#endif // ____x_ABI_CWindows_CUI_CXaml_CDocuments_CITypographyStatics_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CDocuments_CIUnderline_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CDocuments_CIUnderline_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CDocuments_CIUnderline __x_ABI_CWindows_CUI_CXaml_CDocuments_CIUnderline;

#endif // ____x_ABI_CWindows_CUI_CXaml_CDocuments_CIUnderline_FWD_DEFINED__

// Parameterized interface forward declarations (C)

// Collection interface definitions

#if !defined(____x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CXaml__CDocuments__CBlock_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CXaml__CDocuments__CBlock_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CXaml__CDocuments__CBlock __x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CXaml__CDocuments__CBlock;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CXaml__CDocuments__CBlock;

    typedef struct __x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CXaml__CDocuments__CBlockVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CXaml__CDocuments__CBlock* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CXaml__CDocuments__CBlock* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CXaml__CDocuments__CBlock* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CXaml__CDocuments__CBlock* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CXaml__CDocuments__CBlock* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CXaml__CDocuments__CBlock* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Current)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CXaml__CDocuments__CBlock* This,
        __x_ABI_CWindows_CUI_CXaml_CDocuments_CIBlock** result);
    HRESULT (STDMETHODCALLTYPE* get_HasCurrent)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CXaml__CDocuments__CBlock* This,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* MoveNext)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CXaml__CDocuments__CBlock* This,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CXaml__CDocuments__CBlock* This,
        UINT32 itemsLength,
        __x_ABI_CWindows_CUI_CXaml_CDocuments_CIBlock** items,
        UINT32* result);

        END_INTERFACE
    } __x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CXaml__CDocuments__CBlockVtbl;

    interface __x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CXaml__CDocuments__CBlock
    {
        CONST_VTBL struct __x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CXaml__CDocuments__CBlockVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CXaml__CDocuments__CBlock_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIIterable_1___x_ABI_CWindows__CUI__CXaml__CDocuments__CBlock_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIIterable_1___x_ABI_CWindows__CUI__CXaml__CDocuments__CBlock_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIIterable_1___x_ABI_CWindows__CUI__CXaml__CDocuments__CBlock __x_ABI_C__FIIterable_1___x_ABI_CWindows__CUI__CXaml__CDocuments__CBlock;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIIterable_1___x_ABI_CWindows__CUI__CXaml__CDocuments__CBlock;

    typedef struct __x_ABI_C__FIIterable_1___x_ABI_CWindows__CUI__CXaml__CDocuments__CBlockVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CUI__CXaml__CDocuments__CBlock* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CUI__CXaml__CDocuments__CBlock* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CUI__CXaml__CDocuments__CBlock* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CUI__CXaml__CDocuments__CBlock* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CUI__CXaml__CDocuments__CBlock* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CUI__CXaml__CDocuments__CBlock* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* First)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CUI__CXaml__CDocuments__CBlock* This,
        __x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CXaml__CDocuments__CBlock** result);

        END_INTERFACE
    } __x_ABI_C__FIIterable_1___x_ABI_CWindows__CUI__CXaml__CDocuments__CBlockVtbl;

    interface __x_ABI_C__FIIterable_1___x_ABI_CWindows__CUI__CXaml__CDocuments__CBlock
    {
        CONST_VTBL struct __x_ABI_C__FIIterable_1___x_ABI_CWindows__CUI__CXaml__CDocuments__CBlockVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIIterable_1___x_ABI_CWindows__CUI__CXaml__CDocuments__CBlock_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CXaml__CDocuments__CContentLinkProvider_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CXaml__CDocuments__CContentLinkProvider_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CXaml__CDocuments__CContentLinkProvider __x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CXaml__CDocuments__CContentLinkProvider;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CXaml__CDocuments__CContentLinkProvider;

    typedef struct __x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CXaml__CDocuments__CContentLinkProviderVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CXaml__CDocuments__CContentLinkProvider* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CXaml__CDocuments__CContentLinkProvider* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CXaml__CDocuments__CContentLinkProvider* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CXaml__CDocuments__CContentLinkProvider* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CXaml__CDocuments__CContentLinkProvider* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CXaml__CDocuments__CContentLinkProvider* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Current)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CXaml__CDocuments__CContentLinkProvider* This,
        __x_ABI_CWindows_CUI_CXaml_CDocuments_CIContentLinkProvider** result);
    HRESULT (STDMETHODCALLTYPE* get_HasCurrent)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CXaml__CDocuments__CContentLinkProvider* This,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* MoveNext)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CXaml__CDocuments__CContentLinkProvider* This,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CXaml__CDocuments__CContentLinkProvider* This,
        UINT32 itemsLength,
        __x_ABI_CWindows_CUI_CXaml_CDocuments_CIContentLinkProvider** items,
        UINT32* result);

        END_INTERFACE
    } __x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CXaml__CDocuments__CContentLinkProviderVtbl;

    interface __x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CXaml__CDocuments__CContentLinkProvider
    {
        CONST_VTBL struct __x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CXaml__CDocuments__CContentLinkProviderVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CXaml__CDocuments__CContentLinkProvider_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIIterable_1___x_ABI_CWindows__CUI__CXaml__CDocuments__CContentLinkProvider_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIIterable_1___x_ABI_CWindows__CUI__CXaml__CDocuments__CContentLinkProvider_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIIterable_1___x_ABI_CWindows__CUI__CXaml__CDocuments__CContentLinkProvider __x_ABI_C__FIIterable_1___x_ABI_CWindows__CUI__CXaml__CDocuments__CContentLinkProvider;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIIterable_1___x_ABI_CWindows__CUI__CXaml__CDocuments__CContentLinkProvider;

    typedef struct __x_ABI_C__FIIterable_1___x_ABI_CWindows__CUI__CXaml__CDocuments__CContentLinkProviderVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CUI__CXaml__CDocuments__CContentLinkProvider* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CUI__CXaml__CDocuments__CContentLinkProvider* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CUI__CXaml__CDocuments__CContentLinkProvider* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CUI__CXaml__CDocuments__CContentLinkProvider* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CUI__CXaml__CDocuments__CContentLinkProvider* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CUI__CXaml__CDocuments__CContentLinkProvider* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* First)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CUI__CXaml__CDocuments__CContentLinkProvider* This,
        __x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CXaml__CDocuments__CContentLinkProvider** result);

        END_INTERFACE
    } __x_ABI_C__FIIterable_1___x_ABI_CWindows__CUI__CXaml__CDocuments__CContentLinkProviderVtbl;

    interface __x_ABI_C__FIIterable_1___x_ABI_CWindows__CUI__CXaml__CDocuments__CContentLinkProvider
    {
        CONST_VTBL struct __x_ABI_C__FIIterable_1___x_ABI_CWindows__CUI__CXaml__CDocuments__CContentLinkProviderVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIIterable_1___x_ABI_CWindows__CUI__CXaml__CDocuments__CContentLinkProvider_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CXaml__CDocuments__CInline_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CXaml__CDocuments__CInline_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CXaml__CDocuments__CInline __x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CXaml__CDocuments__CInline;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CXaml__CDocuments__CInline;

    typedef struct __x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CXaml__CDocuments__CInlineVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CXaml__CDocuments__CInline* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CXaml__CDocuments__CInline* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CXaml__CDocuments__CInline* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CXaml__CDocuments__CInline* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CXaml__CDocuments__CInline* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CXaml__CDocuments__CInline* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Current)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CXaml__CDocuments__CInline* This,
        __x_ABI_CWindows_CUI_CXaml_CDocuments_CIInline** result);
    HRESULT (STDMETHODCALLTYPE* get_HasCurrent)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CXaml__CDocuments__CInline* This,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* MoveNext)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CXaml__CDocuments__CInline* This,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CXaml__CDocuments__CInline* This,
        UINT32 itemsLength,
        __x_ABI_CWindows_CUI_CXaml_CDocuments_CIInline** items,
        UINT32* result);

        END_INTERFACE
    } __x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CXaml__CDocuments__CInlineVtbl;

    interface __x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CXaml__CDocuments__CInline
    {
        CONST_VTBL struct __x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CXaml__CDocuments__CInlineVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CXaml__CDocuments__CInline_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIIterable_1___x_ABI_CWindows__CUI__CXaml__CDocuments__CInline_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIIterable_1___x_ABI_CWindows__CUI__CXaml__CDocuments__CInline_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIIterable_1___x_ABI_CWindows__CUI__CXaml__CDocuments__CInline __x_ABI_C__FIIterable_1___x_ABI_CWindows__CUI__CXaml__CDocuments__CInline;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIIterable_1___x_ABI_CWindows__CUI__CXaml__CDocuments__CInline;

    typedef struct __x_ABI_C__FIIterable_1___x_ABI_CWindows__CUI__CXaml__CDocuments__CInlineVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CUI__CXaml__CDocuments__CInline* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CUI__CXaml__CDocuments__CInline* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CUI__CXaml__CDocuments__CInline* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CUI__CXaml__CDocuments__CInline* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CUI__CXaml__CDocuments__CInline* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CUI__CXaml__CDocuments__CInline* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* First)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CUI__CXaml__CDocuments__CInline* This,
        __x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CXaml__CDocuments__CInline** result);

        END_INTERFACE
    } __x_ABI_C__FIIterable_1___x_ABI_CWindows__CUI__CXaml__CDocuments__CInlineVtbl;

    interface __x_ABI_C__FIIterable_1___x_ABI_CWindows__CUI__CXaml__CDocuments__CInline
    {
        CONST_VTBL struct __x_ABI_C__FIIterable_1___x_ABI_CWindows__CUI__CXaml__CDocuments__CInlineVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIIterable_1___x_ABI_CWindows__CUI__CXaml__CDocuments__CInline_INTERFACE_DEFINED__
    
typedef struct __x_ABI_CWindows_CUI_CXaml_CDocuments_CTextRange __x_ABI_CWindows_CUI_CXaml_CDocuments_CTextRange;

#if !defined(____x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CXaml__CDocuments__CTextRange_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CXaml__CDocuments__CTextRange_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CXaml__CDocuments__CTextRange __x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CXaml__CDocuments__CTextRange;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CXaml__CDocuments__CTextRange;

    typedef struct __x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CXaml__CDocuments__CTextRangeVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CXaml__CDocuments__CTextRange* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CXaml__CDocuments__CTextRange* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CXaml__CDocuments__CTextRange* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CXaml__CDocuments__CTextRange* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CXaml__CDocuments__CTextRange* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CXaml__CDocuments__CTextRange* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Current)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CXaml__CDocuments__CTextRange* This,
        struct __x_ABI_CWindows_CUI_CXaml_CDocuments_CTextRange* result);
    HRESULT (STDMETHODCALLTYPE* get_HasCurrent)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CXaml__CDocuments__CTextRange* This,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* MoveNext)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CXaml__CDocuments__CTextRange* This,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CXaml__CDocuments__CTextRange* This,
        UINT32 itemsLength,
        struct __x_ABI_CWindows_CUI_CXaml_CDocuments_CTextRange* items,
        UINT32* result);

        END_INTERFACE
    } __x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CXaml__CDocuments__CTextRangeVtbl;

    interface __x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CXaml__CDocuments__CTextRange
    {
        CONST_VTBL struct __x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CXaml__CDocuments__CTextRangeVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CXaml__CDocuments__CTextRange_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIIterable_1___x_ABI_CWindows__CUI__CXaml__CDocuments__CTextRange_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIIterable_1___x_ABI_CWindows__CUI__CXaml__CDocuments__CTextRange_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIIterable_1___x_ABI_CWindows__CUI__CXaml__CDocuments__CTextRange __x_ABI_C__FIIterable_1___x_ABI_CWindows__CUI__CXaml__CDocuments__CTextRange;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIIterable_1___x_ABI_CWindows__CUI__CXaml__CDocuments__CTextRange;

    typedef struct __x_ABI_C__FIIterable_1___x_ABI_CWindows__CUI__CXaml__CDocuments__CTextRangeVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CUI__CXaml__CDocuments__CTextRange* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CUI__CXaml__CDocuments__CTextRange* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CUI__CXaml__CDocuments__CTextRange* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CUI__CXaml__CDocuments__CTextRange* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CUI__CXaml__CDocuments__CTextRange* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CUI__CXaml__CDocuments__CTextRange* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* First)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CUI__CXaml__CDocuments__CTextRange* This,
        __x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CXaml__CDocuments__CTextRange** result);

        END_INTERFACE
    } __x_ABI_C__FIIterable_1___x_ABI_CWindows__CUI__CXaml__CDocuments__CTextRangeVtbl;

    interface __x_ABI_C__FIIterable_1___x_ABI_CWindows__CUI__CXaml__CDocuments__CTextRange
    {
        CONST_VTBL struct __x_ABI_C__FIIterable_1___x_ABI_CWindows__CUI__CXaml__CDocuments__CTextRangeVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIIterable_1___x_ABI_CWindows__CUI__CXaml__CDocuments__CTextRange_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CXaml__CDocuments__CBlock_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CXaml__CDocuments__CBlock_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CXaml__CDocuments__CBlock __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CXaml__CDocuments__CBlock;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CXaml__CDocuments__CBlock;

    typedef struct __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CXaml__CDocuments__CBlockVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CXaml__CDocuments__CBlock* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CXaml__CDocuments__CBlock* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CXaml__CDocuments__CBlock* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CXaml__CDocuments__CBlock* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CXaml__CDocuments__CBlock* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CXaml__CDocuments__CBlock* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* GetAt)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CXaml__CDocuments__CBlock* This,
        UINT32 index,
        __x_ABI_CWindows_CUI_CXaml_CDocuments_CIBlock** result);
    HRESULT (STDMETHODCALLTYPE* get_Size)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CXaml__CDocuments__CBlock* This,
        UINT32* result);
    HRESULT (STDMETHODCALLTYPE* IndexOf)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CXaml__CDocuments__CBlock* This,
        __x_ABI_CWindows_CUI_CXaml_CDocuments_CIBlock* value,
        UINT32* index,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CXaml__CDocuments__CBlock* This,
        UINT32 startIndex,
        UINT32 itemsLength,
        __x_ABI_CWindows_CUI_CXaml_CDocuments_CIBlock** items,
        UINT32* result);

        END_INTERFACE
    } __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CXaml__CDocuments__CBlockVtbl;

    interface __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CXaml__CDocuments__CBlock
    {
        CONST_VTBL struct __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CXaml__CDocuments__CBlockVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CXaml__CDocuments__CBlock_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CXaml__CDocuments__CContentLinkProvider_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CXaml__CDocuments__CContentLinkProvider_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CXaml__CDocuments__CContentLinkProvider __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CXaml__CDocuments__CContentLinkProvider;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CXaml__CDocuments__CContentLinkProvider;

    typedef struct __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CXaml__CDocuments__CContentLinkProviderVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CXaml__CDocuments__CContentLinkProvider* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CXaml__CDocuments__CContentLinkProvider* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CXaml__CDocuments__CContentLinkProvider* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CXaml__CDocuments__CContentLinkProvider* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CXaml__CDocuments__CContentLinkProvider* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CXaml__CDocuments__CContentLinkProvider* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* GetAt)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CXaml__CDocuments__CContentLinkProvider* This,
        UINT32 index,
        __x_ABI_CWindows_CUI_CXaml_CDocuments_CIContentLinkProvider** result);
    HRESULT (STDMETHODCALLTYPE* get_Size)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CXaml__CDocuments__CContentLinkProvider* This,
        UINT32* result);
    HRESULT (STDMETHODCALLTYPE* IndexOf)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CXaml__CDocuments__CContentLinkProvider* This,
        __x_ABI_CWindows_CUI_CXaml_CDocuments_CIContentLinkProvider* value,
        UINT32* index,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CXaml__CDocuments__CContentLinkProvider* This,
        UINT32 startIndex,
        UINT32 itemsLength,
        __x_ABI_CWindows_CUI_CXaml_CDocuments_CIContentLinkProvider** items,
        UINT32* result);

        END_INTERFACE
    } __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CXaml__CDocuments__CContentLinkProviderVtbl;

    interface __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CXaml__CDocuments__CContentLinkProvider
    {
        CONST_VTBL struct __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CXaml__CDocuments__CContentLinkProviderVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CXaml__CDocuments__CContentLinkProvider_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CXaml__CDocuments__CInline_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CXaml__CDocuments__CInline_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CXaml__CDocuments__CInline __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CXaml__CDocuments__CInline;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CXaml__CDocuments__CInline;

    typedef struct __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CXaml__CDocuments__CInlineVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CXaml__CDocuments__CInline* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CXaml__CDocuments__CInline* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CXaml__CDocuments__CInline* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CXaml__CDocuments__CInline* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CXaml__CDocuments__CInline* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CXaml__CDocuments__CInline* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* GetAt)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CXaml__CDocuments__CInline* This,
        UINT32 index,
        __x_ABI_CWindows_CUI_CXaml_CDocuments_CIInline** result);
    HRESULT (STDMETHODCALLTYPE* get_Size)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CXaml__CDocuments__CInline* This,
        UINT32* result);
    HRESULT (STDMETHODCALLTYPE* IndexOf)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CXaml__CDocuments__CInline* This,
        __x_ABI_CWindows_CUI_CXaml_CDocuments_CIInline* value,
        UINT32* index,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CXaml__CDocuments__CInline* This,
        UINT32 startIndex,
        UINT32 itemsLength,
        __x_ABI_CWindows_CUI_CXaml_CDocuments_CIInline** items,
        UINT32* result);

        END_INTERFACE
    } __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CXaml__CDocuments__CInlineVtbl;

    interface __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CXaml__CDocuments__CInline
    {
        CONST_VTBL struct __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CXaml__CDocuments__CInlineVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CXaml__CDocuments__CInline_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CXaml__CDocuments__CTextRange_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CXaml__CDocuments__CTextRange_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CXaml__CDocuments__CTextRange __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CXaml__CDocuments__CTextRange;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CXaml__CDocuments__CTextRange;

    typedef struct __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CXaml__CDocuments__CTextRangeVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CXaml__CDocuments__CTextRange* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CXaml__CDocuments__CTextRange* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CXaml__CDocuments__CTextRange* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CXaml__CDocuments__CTextRange* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CXaml__CDocuments__CTextRange* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CXaml__CDocuments__CTextRange* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* GetAt)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CXaml__CDocuments__CTextRange* This,
        UINT32 index,
        struct __x_ABI_CWindows_CUI_CXaml_CDocuments_CTextRange* result);
    HRESULT (STDMETHODCALLTYPE* get_Size)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CXaml__CDocuments__CTextRange* This,
        UINT32* result);
    HRESULT (STDMETHODCALLTYPE* IndexOf)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CXaml__CDocuments__CTextRange* This,
        struct __x_ABI_CWindows_CUI_CXaml_CDocuments_CTextRange value,
        UINT32* index,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CXaml__CDocuments__CTextRange* This,
        UINT32 startIndex,
        UINT32 itemsLength,
        struct __x_ABI_CWindows_CUI_CXaml_CDocuments_CTextRange* items,
        UINT32* result);

        END_INTERFACE
    } __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CXaml__CDocuments__CTextRangeVtbl;

    interface __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CXaml__CDocuments__CTextRange
    {
        CONST_VTBL struct __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CXaml__CDocuments__CTextRangeVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CXaml__CDocuments__CTextRange_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CXaml__CDocuments__CBlock_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CXaml__CDocuments__CBlock_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CXaml__CDocuments__CBlock __x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CXaml__CDocuments__CBlock;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CXaml__CDocuments__CBlock;

    typedef struct __x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CXaml__CDocuments__CBlockVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CXaml__CDocuments__CBlock* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CXaml__CDocuments__CBlock* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CXaml__CDocuments__CBlock* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CXaml__CDocuments__CBlock* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CXaml__CDocuments__CBlock* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CXaml__CDocuments__CBlock* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* GetAt)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CXaml__CDocuments__CBlock* This,
        UINT32 index,
        __x_ABI_CWindows_CUI_CXaml_CDocuments_CIBlock** result);
    HRESULT (STDMETHODCALLTYPE* get_Size)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CXaml__CDocuments__CBlock* This,
        UINT32* result);
    HRESULT (STDMETHODCALLTYPE* GetView)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CXaml__CDocuments__CBlock* This,
        __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CXaml__CDocuments__CBlock** result);
    HRESULT (STDMETHODCALLTYPE* IndexOf)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CXaml__CDocuments__CBlock* This,
        __x_ABI_CWindows_CUI_CXaml_CDocuments_CIBlock* value,
        UINT32* index,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* SetAt)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CXaml__CDocuments__CBlock* This,
        UINT32 index,
        __x_ABI_CWindows_CUI_CXaml_CDocuments_CIBlock* value);
    HRESULT (STDMETHODCALLTYPE* InsertAt)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CXaml__CDocuments__CBlock* This,
        UINT32 index,
        __x_ABI_CWindows_CUI_CXaml_CDocuments_CIBlock* value);
    HRESULT (STDMETHODCALLTYPE* RemoveAt)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CXaml__CDocuments__CBlock* This,
        UINT32 index);
    HRESULT (STDMETHODCALLTYPE* Append)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CXaml__CDocuments__CBlock* This,
        __x_ABI_CWindows_CUI_CXaml_CDocuments_CIBlock* value);
    HRESULT (STDMETHODCALLTYPE* RemoveAtEnd)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CXaml__CDocuments__CBlock* This);
    HRESULT (STDMETHODCALLTYPE* Clear)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CXaml__CDocuments__CBlock* This);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CXaml__CDocuments__CBlock* This,
        UINT32 startIndex,
        UINT32 itemsLength,
        __x_ABI_CWindows_CUI_CXaml_CDocuments_CIBlock** items,
        UINT32* result);
    HRESULT (STDMETHODCALLTYPE* ReplaceAll)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CXaml__CDocuments__CBlock* This,
        UINT32 itemsLength,
        __x_ABI_CWindows_CUI_CXaml_CDocuments_CIBlock** items);

        END_INTERFACE
    } __x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CXaml__CDocuments__CBlockVtbl;

    interface __x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CXaml__CDocuments__CBlock
    {
        CONST_VTBL struct __x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CXaml__CDocuments__CBlockVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CXaml__CDocuments__CBlock_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CXaml__CDocuments__CContentLinkProvider_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CXaml__CDocuments__CContentLinkProvider_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CXaml__CDocuments__CContentLinkProvider __x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CXaml__CDocuments__CContentLinkProvider;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CXaml__CDocuments__CContentLinkProvider;

    typedef struct __x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CXaml__CDocuments__CContentLinkProviderVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CXaml__CDocuments__CContentLinkProvider* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CXaml__CDocuments__CContentLinkProvider* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CXaml__CDocuments__CContentLinkProvider* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CXaml__CDocuments__CContentLinkProvider* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CXaml__CDocuments__CContentLinkProvider* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CXaml__CDocuments__CContentLinkProvider* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* GetAt)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CXaml__CDocuments__CContentLinkProvider* This,
        UINT32 index,
        __x_ABI_CWindows_CUI_CXaml_CDocuments_CIContentLinkProvider** result);
    HRESULT (STDMETHODCALLTYPE* get_Size)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CXaml__CDocuments__CContentLinkProvider* This,
        UINT32* result);
    HRESULT (STDMETHODCALLTYPE* GetView)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CXaml__CDocuments__CContentLinkProvider* This,
        __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CXaml__CDocuments__CContentLinkProvider** result);
    HRESULT (STDMETHODCALLTYPE* IndexOf)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CXaml__CDocuments__CContentLinkProvider* This,
        __x_ABI_CWindows_CUI_CXaml_CDocuments_CIContentLinkProvider* value,
        UINT32* index,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* SetAt)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CXaml__CDocuments__CContentLinkProvider* This,
        UINT32 index,
        __x_ABI_CWindows_CUI_CXaml_CDocuments_CIContentLinkProvider* value);
    HRESULT (STDMETHODCALLTYPE* InsertAt)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CXaml__CDocuments__CContentLinkProvider* This,
        UINT32 index,
        __x_ABI_CWindows_CUI_CXaml_CDocuments_CIContentLinkProvider* value);
    HRESULT (STDMETHODCALLTYPE* RemoveAt)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CXaml__CDocuments__CContentLinkProvider* This,
        UINT32 index);
    HRESULT (STDMETHODCALLTYPE* Append)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CXaml__CDocuments__CContentLinkProvider* This,
        __x_ABI_CWindows_CUI_CXaml_CDocuments_CIContentLinkProvider* value);
    HRESULT (STDMETHODCALLTYPE* RemoveAtEnd)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CXaml__CDocuments__CContentLinkProvider* This);
    HRESULT (STDMETHODCALLTYPE* Clear)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CXaml__CDocuments__CContentLinkProvider* This);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CXaml__CDocuments__CContentLinkProvider* This,
        UINT32 startIndex,
        UINT32 itemsLength,
        __x_ABI_CWindows_CUI_CXaml_CDocuments_CIContentLinkProvider** items,
        UINT32* result);
    HRESULT (STDMETHODCALLTYPE* ReplaceAll)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CXaml__CDocuments__CContentLinkProvider* This,
        UINT32 itemsLength,
        __x_ABI_CWindows_CUI_CXaml_CDocuments_CIContentLinkProvider** items);

        END_INTERFACE
    } __x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CXaml__CDocuments__CContentLinkProviderVtbl;

    interface __x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CXaml__CDocuments__CContentLinkProvider
    {
        CONST_VTBL struct __x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CXaml__CDocuments__CContentLinkProviderVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CXaml__CDocuments__CContentLinkProvider_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CXaml__CDocuments__CInline_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CXaml__CDocuments__CInline_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CXaml__CDocuments__CInline __x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CXaml__CDocuments__CInline;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CXaml__CDocuments__CInline;

    typedef struct __x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CXaml__CDocuments__CInlineVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CXaml__CDocuments__CInline* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CXaml__CDocuments__CInline* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CXaml__CDocuments__CInline* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CXaml__CDocuments__CInline* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CXaml__CDocuments__CInline* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CXaml__CDocuments__CInline* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* GetAt)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CXaml__CDocuments__CInline* This,
        UINT32 index,
        __x_ABI_CWindows_CUI_CXaml_CDocuments_CIInline** result);
    HRESULT (STDMETHODCALLTYPE* get_Size)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CXaml__CDocuments__CInline* This,
        UINT32* result);
    HRESULT (STDMETHODCALLTYPE* GetView)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CXaml__CDocuments__CInline* This,
        __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CXaml__CDocuments__CInline** result);
    HRESULT (STDMETHODCALLTYPE* IndexOf)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CXaml__CDocuments__CInline* This,
        __x_ABI_CWindows_CUI_CXaml_CDocuments_CIInline* value,
        UINT32* index,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* SetAt)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CXaml__CDocuments__CInline* This,
        UINT32 index,
        __x_ABI_CWindows_CUI_CXaml_CDocuments_CIInline* value);
    HRESULT (STDMETHODCALLTYPE* InsertAt)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CXaml__CDocuments__CInline* This,
        UINT32 index,
        __x_ABI_CWindows_CUI_CXaml_CDocuments_CIInline* value);
    HRESULT (STDMETHODCALLTYPE* RemoveAt)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CXaml__CDocuments__CInline* This,
        UINT32 index);
    HRESULT (STDMETHODCALLTYPE* Append)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CXaml__CDocuments__CInline* This,
        __x_ABI_CWindows_CUI_CXaml_CDocuments_CIInline* value);
    HRESULT (STDMETHODCALLTYPE* RemoveAtEnd)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CXaml__CDocuments__CInline* This);
    HRESULT (STDMETHODCALLTYPE* Clear)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CXaml__CDocuments__CInline* This);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CXaml__CDocuments__CInline* This,
        UINT32 startIndex,
        UINT32 itemsLength,
        __x_ABI_CWindows_CUI_CXaml_CDocuments_CIInline** items,
        UINT32* result);
    HRESULT (STDMETHODCALLTYPE* ReplaceAll)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CXaml__CDocuments__CInline* This,
        UINT32 itemsLength,
        __x_ABI_CWindows_CUI_CXaml_CDocuments_CIInline** items);

        END_INTERFACE
    } __x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CXaml__CDocuments__CInlineVtbl;

    interface __x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CXaml__CDocuments__CInline
    {
        CONST_VTBL struct __x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CXaml__CDocuments__CInlineVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CXaml__CDocuments__CInline_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CXaml__CDocuments__CTextRange_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CXaml__CDocuments__CTextRange_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CXaml__CDocuments__CTextRange __x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CXaml__CDocuments__CTextRange;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CXaml__CDocuments__CTextRange;

    typedef struct __x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CXaml__CDocuments__CTextRangeVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CXaml__CDocuments__CTextRange* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CXaml__CDocuments__CTextRange* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CXaml__CDocuments__CTextRange* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CXaml__CDocuments__CTextRange* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CXaml__CDocuments__CTextRange* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CXaml__CDocuments__CTextRange* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* GetAt)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CXaml__CDocuments__CTextRange* This,
        UINT32 index,
        struct __x_ABI_CWindows_CUI_CXaml_CDocuments_CTextRange* result);
    HRESULT (STDMETHODCALLTYPE* get_Size)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CXaml__CDocuments__CTextRange* This,
        UINT32* result);
    HRESULT (STDMETHODCALLTYPE* GetView)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CXaml__CDocuments__CTextRange* This,
        __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CXaml__CDocuments__CTextRange** result);
    HRESULT (STDMETHODCALLTYPE* IndexOf)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CXaml__CDocuments__CTextRange* This,
        struct __x_ABI_CWindows_CUI_CXaml_CDocuments_CTextRange value,
        UINT32* index,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* SetAt)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CXaml__CDocuments__CTextRange* This,
        UINT32 index,
        struct __x_ABI_CWindows_CUI_CXaml_CDocuments_CTextRange value);
    HRESULT (STDMETHODCALLTYPE* InsertAt)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CXaml__CDocuments__CTextRange* This,
        UINT32 index,
        struct __x_ABI_CWindows_CUI_CXaml_CDocuments_CTextRange value);
    HRESULT (STDMETHODCALLTYPE* RemoveAt)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CXaml__CDocuments__CTextRange* This,
        UINT32 index);
    HRESULT (STDMETHODCALLTYPE* Append)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CXaml__CDocuments__CTextRange* This,
        struct __x_ABI_CWindows_CUI_CXaml_CDocuments_CTextRange value);
    HRESULT (STDMETHODCALLTYPE* RemoveAtEnd)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CXaml__CDocuments__CTextRange* This);
    HRESULT (STDMETHODCALLTYPE* Clear)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CXaml__CDocuments__CTextRange* This);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CXaml__CDocuments__CTextRange* This,
        UINT32 startIndex,
        UINT32 itemsLength,
        struct __x_ABI_CWindows_CUI_CXaml_CDocuments_CTextRange* items,
        UINT32* result);
    HRESULT (STDMETHODCALLTYPE* ReplaceAll)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CXaml__CDocuments__CTextRange* This,
        UINT32 itemsLength,
        struct __x_ABI_CWindows_CUI_CXaml_CDocuments_CTextRange* items);

        END_INTERFACE
    } __x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CXaml__CDocuments__CTextRangeVtbl;

    interface __x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CXaml__CDocuments__CTextRange
    {
        CONST_VTBL struct __x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CXaml__CDocuments__CTextRangeVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CXaml__CDocuments__CTextRange_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CDocuments__CContentLink___x_ABI_CWindows__CUI__CXaml__CDocuments__CContentLinkInvokedEventArgs_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CDocuments__CContentLink___x_ABI_CWindows__CUI__CXaml__CDocuments__CContentLinkInvokedEventArgs_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CDocuments__CContentLink___x_ABI_CWindows__CUI__CXaml__CDocuments__CContentLinkInvokedEventArgs __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CDocuments__CContentLink___x_ABI_CWindows__CUI__CXaml__CDocuments__CContentLinkInvokedEventArgs;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CDocuments__CContentLink___x_ABI_CWindows__CUI__CXaml__CDocuments__CContentLinkInvokedEventArgs;

    typedef struct __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CDocuments__CContentLink___x_ABI_CWindows__CUI__CXaml__CDocuments__CContentLinkInvokedEventArgsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CDocuments__CContentLink___x_ABI_CWindows__CUI__CXaml__CDocuments__CContentLinkInvokedEventArgs* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CDocuments__CContentLink___x_ABI_CWindows__CUI__CXaml__CDocuments__CContentLinkInvokedEventArgs* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CDocuments__CContentLink___x_ABI_CWindows__CUI__CXaml__CDocuments__CContentLinkInvokedEventArgs* This);
        HRESULT (STDMETHODCALLTYPE* Invoke)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CDocuments__CContentLink___x_ABI_CWindows__CUI__CXaml__CDocuments__CContentLinkInvokedEventArgs* This,
        __x_ABI_CWindows_CUI_CXaml_CDocuments_CIContentLink* sender,
        __x_ABI_CWindows_CUI_CXaml_CDocuments_CIContentLinkInvokedEventArgs* args);

        END_INTERFACE
    } __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CDocuments__CContentLink___x_ABI_CWindows__CUI__CXaml__CDocuments__CContentLinkInvokedEventArgsVtbl;

    interface __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CDocuments__CContentLink___x_ABI_CWindows__CUI__CXaml__CDocuments__CContentLinkInvokedEventArgs
    {
        CONST_VTBL struct __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CDocuments__CContentLink___x_ABI_CWindows__CUI__CXaml__CDocuments__CContentLinkInvokedEventArgsVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CDocuments__CContentLink___x_ABI_CWindows__CUI__CXaml__CDocuments__CContentLinkInvokedEventArgs_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CDocuments__CHyperlink___x_ABI_CWindows__CUI__CXaml__CDocuments__CHyperlinkClickEventArgs_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CDocuments__CHyperlink___x_ABI_CWindows__CUI__CXaml__CDocuments__CHyperlinkClickEventArgs_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CDocuments__CHyperlink___x_ABI_CWindows__CUI__CXaml__CDocuments__CHyperlinkClickEventArgs __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CDocuments__CHyperlink___x_ABI_CWindows__CUI__CXaml__CDocuments__CHyperlinkClickEventArgs;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CDocuments__CHyperlink___x_ABI_CWindows__CUI__CXaml__CDocuments__CHyperlinkClickEventArgs;

    typedef struct __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CDocuments__CHyperlink___x_ABI_CWindows__CUI__CXaml__CDocuments__CHyperlinkClickEventArgsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CDocuments__CHyperlink___x_ABI_CWindows__CUI__CXaml__CDocuments__CHyperlinkClickEventArgs* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CDocuments__CHyperlink___x_ABI_CWindows__CUI__CXaml__CDocuments__CHyperlinkClickEventArgs* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CDocuments__CHyperlink___x_ABI_CWindows__CUI__CXaml__CDocuments__CHyperlinkClickEventArgs* This);
        HRESULT (STDMETHODCALLTYPE* Invoke)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CDocuments__CHyperlink___x_ABI_CWindows__CUI__CXaml__CDocuments__CHyperlinkClickEventArgs* This,
        __x_ABI_CWindows_CUI_CXaml_CDocuments_CIHyperlink* sender,
        __x_ABI_CWindows_CUI_CXaml_CDocuments_CIHyperlinkClickEventArgs* args);

        END_INTERFACE
    } __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CDocuments__CHyperlink___x_ABI_CWindows__CUI__CXaml__CDocuments__CHyperlinkClickEventArgsVtbl;

    interface __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CDocuments__CHyperlink___x_ABI_CWindows__CUI__CXaml__CDocuments__CHyperlinkClickEventArgs
    {
        CONST_VTBL struct __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CDocuments__CHyperlink___x_ABI_CWindows__CUI__CXaml__CDocuments__CHyperlinkClickEventArgsVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CDocuments__CHyperlink___x_ABI_CWindows__CUI__CXaml__CDocuments__CHyperlinkClickEventArgs_INTERFACE_DEFINED__
    
#ifndef ____x_ABI_CWindows_CUI_CXaml_CInput_CIAccessKeyDisplayDismissedEventArgs_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CInput_CIAccessKeyDisplayDismissedEventArgs_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CInput_CIAccessKeyDisplayDismissedEventArgs __x_ABI_CWindows_CUI_CXaml_CInput_CIAccessKeyDisplayDismissedEventArgs;

#endif // ____x_ABI_CWindows_CUI_CXaml_CInput_CIAccessKeyDisplayDismissedEventArgs_FWD_DEFINED__

#if !defined(____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CDocuments__CTextElement___x_ABI_CWindows__CUI__CXaml__CInput__CAccessKeyDisplayDismissedEventArgs_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CDocuments__CTextElement___x_ABI_CWindows__CUI__CXaml__CInput__CAccessKeyDisplayDismissedEventArgs_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CDocuments__CTextElement___x_ABI_CWindows__CUI__CXaml__CInput__CAccessKeyDisplayDismissedEventArgs __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CDocuments__CTextElement___x_ABI_CWindows__CUI__CXaml__CInput__CAccessKeyDisplayDismissedEventArgs;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CDocuments__CTextElement___x_ABI_CWindows__CUI__CXaml__CInput__CAccessKeyDisplayDismissedEventArgs;

    typedef struct __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CDocuments__CTextElement___x_ABI_CWindows__CUI__CXaml__CInput__CAccessKeyDisplayDismissedEventArgsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CDocuments__CTextElement___x_ABI_CWindows__CUI__CXaml__CInput__CAccessKeyDisplayDismissedEventArgs* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CDocuments__CTextElement___x_ABI_CWindows__CUI__CXaml__CInput__CAccessKeyDisplayDismissedEventArgs* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CDocuments__CTextElement___x_ABI_CWindows__CUI__CXaml__CInput__CAccessKeyDisplayDismissedEventArgs* This);
        HRESULT (STDMETHODCALLTYPE* Invoke)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CDocuments__CTextElement___x_ABI_CWindows__CUI__CXaml__CInput__CAccessKeyDisplayDismissedEventArgs* This,
        __x_ABI_CWindows_CUI_CXaml_CDocuments_CITextElement* sender,
        __x_ABI_CWindows_CUI_CXaml_CInput_CIAccessKeyDisplayDismissedEventArgs* args);

        END_INTERFACE
    } __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CDocuments__CTextElement___x_ABI_CWindows__CUI__CXaml__CInput__CAccessKeyDisplayDismissedEventArgsVtbl;

    interface __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CDocuments__CTextElement___x_ABI_CWindows__CUI__CXaml__CInput__CAccessKeyDisplayDismissedEventArgs
    {
        CONST_VTBL struct __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CDocuments__CTextElement___x_ABI_CWindows__CUI__CXaml__CInput__CAccessKeyDisplayDismissedEventArgsVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CDocuments__CTextElement___x_ABI_CWindows__CUI__CXaml__CInput__CAccessKeyDisplayDismissedEventArgs_INTERFACE_DEFINED__
    
#ifndef ____x_ABI_CWindows_CUI_CXaml_CInput_CIAccessKeyDisplayRequestedEventArgs_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CInput_CIAccessKeyDisplayRequestedEventArgs_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CInput_CIAccessKeyDisplayRequestedEventArgs __x_ABI_CWindows_CUI_CXaml_CInput_CIAccessKeyDisplayRequestedEventArgs;

#endif // ____x_ABI_CWindows_CUI_CXaml_CInput_CIAccessKeyDisplayRequestedEventArgs_FWD_DEFINED__

#if !defined(____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CDocuments__CTextElement___x_ABI_CWindows__CUI__CXaml__CInput__CAccessKeyDisplayRequestedEventArgs_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CDocuments__CTextElement___x_ABI_CWindows__CUI__CXaml__CInput__CAccessKeyDisplayRequestedEventArgs_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CDocuments__CTextElement___x_ABI_CWindows__CUI__CXaml__CInput__CAccessKeyDisplayRequestedEventArgs __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CDocuments__CTextElement___x_ABI_CWindows__CUI__CXaml__CInput__CAccessKeyDisplayRequestedEventArgs;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CDocuments__CTextElement___x_ABI_CWindows__CUI__CXaml__CInput__CAccessKeyDisplayRequestedEventArgs;

    typedef struct __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CDocuments__CTextElement___x_ABI_CWindows__CUI__CXaml__CInput__CAccessKeyDisplayRequestedEventArgsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CDocuments__CTextElement___x_ABI_CWindows__CUI__CXaml__CInput__CAccessKeyDisplayRequestedEventArgs* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CDocuments__CTextElement___x_ABI_CWindows__CUI__CXaml__CInput__CAccessKeyDisplayRequestedEventArgs* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CDocuments__CTextElement___x_ABI_CWindows__CUI__CXaml__CInput__CAccessKeyDisplayRequestedEventArgs* This);
        HRESULT (STDMETHODCALLTYPE* Invoke)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CDocuments__CTextElement___x_ABI_CWindows__CUI__CXaml__CInput__CAccessKeyDisplayRequestedEventArgs* This,
        __x_ABI_CWindows_CUI_CXaml_CDocuments_CITextElement* sender,
        __x_ABI_CWindows_CUI_CXaml_CInput_CIAccessKeyDisplayRequestedEventArgs* args);

        END_INTERFACE
    } __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CDocuments__CTextElement___x_ABI_CWindows__CUI__CXaml__CInput__CAccessKeyDisplayRequestedEventArgsVtbl;

    interface __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CDocuments__CTextElement___x_ABI_CWindows__CUI__CXaml__CInput__CAccessKeyDisplayRequestedEventArgs
    {
        CONST_VTBL struct __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CDocuments__CTextElement___x_ABI_CWindows__CUI__CXaml__CInput__CAccessKeyDisplayRequestedEventArgsVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CDocuments__CTextElement___x_ABI_CWindows__CUI__CXaml__CInput__CAccessKeyDisplayRequestedEventArgs_INTERFACE_DEFINED__
    
#ifndef ____x_ABI_CWindows_CUI_CXaml_CInput_CIAccessKeyInvokedEventArgs_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CInput_CIAccessKeyInvokedEventArgs_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CInput_CIAccessKeyInvokedEventArgs __x_ABI_CWindows_CUI_CXaml_CInput_CIAccessKeyInvokedEventArgs;

#endif // ____x_ABI_CWindows_CUI_CXaml_CInput_CIAccessKeyInvokedEventArgs_FWD_DEFINED__

#if !defined(____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CDocuments__CTextElement___x_ABI_CWindows__CUI__CXaml__CInput__CAccessKeyInvokedEventArgs_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CDocuments__CTextElement___x_ABI_CWindows__CUI__CXaml__CInput__CAccessKeyInvokedEventArgs_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CDocuments__CTextElement___x_ABI_CWindows__CUI__CXaml__CInput__CAccessKeyInvokedEventArgs __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CDocuments__CTextElement___x_ABI_CWindows__CUI__CXaml__CInput__CAccessKeyInvokedEventArgs;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CDocuments__CTextElement___x_ABI_CWindows__CUI__CXaml__CInput__CAccessKeyInvokedEventArgs;

    typedef struct __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CDocuments__CTextElement___x_ABI_CWindows__CUI__CXaml__CInput__CAccessKeyInvokedEventArgsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CDocuments__CTextElement___x_ABI_CWindows__CUI__CXaml__CInput__CAccessKeyInvokedEventArgs* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CDocuments__CTextElement___x_ABI_CWindows__CUI__CXaml__CInput__CAccessKeyInvokedEventArgs* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CDocuments__CTextElement___x_ABI_CWindows__CUI__CXaml__CInput__CAccessKeyInvokedEventArgs* This);
        HRESULT (STDMETHODCALLTYPE* Invoke)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CDocuments__CTextElement___x_ABI_CWindows__CUI__CXaml__CInput__CAccessKeyInvokedEventArgs* This,
        __x_ABI_CWindows_CUI_CXaml_CDocuments_CITextElement* sender,
        __x_ABI_CWindows_CUI_CXaml_CInput_CIAccessKeyInvokedEventArgs* args);

        END_INTERFACE
    } __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CDocuments__CTextElement___x_ABI_CWindows__CUI__CXaml__CInput__CAccessKeyInvokedEventArgsVtbl;

    interface __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CDocuments__CTextElement___x_ABI_CWindows__CUI__CXaml__CInput__CAccessKeyInvokedEventArgs
    {
        CONST_VTBL struct __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CDocuments__CTextElement___x_ABI_CWindows__CUI__CXaml__CInput__CAccessKeyInvokedEventArgsVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CDocuments__CTextElement___x_ABI_CWindows__CUI__CXaml__CInput__CAccessKeyInvokedEventArgs_INTERFACE_DEFINED__
    
typedef struct __x_ABI_CWindows_CFoundation_CRect __x_ABI_CWindows_CFoundation_CRect;

#ifndef ____x_ABI_CWindows_CFoundation_CIUriRuntimeClass_FWD_DEFINED__
#define ____x_ABI_CWindows_CFoundation_CIUriRuntimeClass_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CFoundation_CIUriRuntimeClass __x_ABI_CWindows_CFoundation_CIUriRuntimeClass;

#endif // ____x_ABI_CWindows_CFoundation_CIUriRuntimeClass_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CComposition_CIAnimationObject_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CComposition_CIAnimationObject_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CComposition_CIAnimationObject __x_ABI_CWindows_CUI_CComposition_CIAnimationObject;

#endif // ____x_ABI_CWindows_CUI_CComposition_CIAnimationObject_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CComposition_CIVisualElement_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CComposition_CIVisualElement_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CComposition_CIVisualElement __x_ABI_CWindows_CUI_CComposition_CIVisualElement;

#endif // ____x_ABI_CWindows_CUI_CComposition_CIVisualElement_FWD_DEFINED__

typedef enum __x_ABI_CWindows_CUI_CCore_CCoreCursorType __x_ABI_CWindows_CUI_CCore_CCoreCursorType;

#ifndef ____x_ABI_CWindows_CUI_CText_CIContentLinkInfo_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CText_CIContentLinkInfo_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CText_CIContentLinkInfo __x_ABI_CWindows_CUI_CText_CIContentLinkInfo;

#endif // ____x_ABI_CWindows_CUI_CText_CIContentLinkInfo_FWD_DEFINED__

typedef enum __x_ABI_CWindows_CUI_CText_CFontStretch __x_ABI_CWindows_CUI_CText_CFontStretch;

typedef enum __x_ABI_CWindows_CUI_CText_CFontStyle __x_ABI_CWindows_CUI_CText_CFontStyle;

typedef struct __x_ABI_CWindows_CUI_CText_CFontWeight __x_ABI_CWindows_CUI_CText_CFontWeight;

typedef enum __x_ABI_CWindows_CUI_CText_CTextDecorations __x_ABI_CWindows_CUI_CText_CTextDecorations;

#ifndef ____x_ABI_CWindows_CUI_CXaml_CIDependencyObject_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CIDependencyObject_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CIDependencyObject __x_ABI_CWindows_CUI_CXaml_CIDependencyObject;

#endif // ____x_ABI_CWindows_CUI_CXaml_CIDependencyObject_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CIDependencyProperty_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CIDependencyProperty_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty;

#endif // ____x_ABI_CWindows_CUI_CXaml_CIDependencyProperty_FWD_DEFINED__

typedef enum __x_ABI_CWindows_CUI_CXaml_CElementSoundMode __x_ABI_CWindows_CUI_CXaml_CElementSoundMode;

typedef enum __x_ABI_CWindows_CUI_CXaml_CFlowDirection __x_ABI_CWindows_CUI_CXaml_CFlowDirection;

typedef enum __x_ABI_CWindows_CUI_CXaml_CFocusState __x_ABI_CWindows_CUI_CXaml_CFocusState;

typedef enum __x_ABI_CWindows_CUI_CXaml_CFontCapitals __x_ABI_CWindows_CUI_CXaml_CFontCapitals;

typedef enum __x_ABI_CWindows_CUI_CXaml_CFontEastAsianLanguage __x_ABI_CWindows_CUI_CXaml_CFontEastAsianLanguage;

typedef enum __x_ABI_CWindows_CUI_CXaml_CFontEastAsianWidths __x_ABI_CWindows_CUI_CXaml_CFontEastAsianWidths;

typedef enum __x_ABI_CWindows_CUI_CXaml_CFontFraction __x_ABI_CWindows_CUI_CXaml_CFontFraction;

typedef enum __x_ABI_CWindows_CUI_CXaml_CFontNumeralAlignment __x_ABI_CWindows_CUI_CXaml_CFontNumeralAlignment;

typedef enum __x_ABI_CWindows_CUI_CXaml_CFontNumeralStyle __x_ABI_CWindows_CUI_CXaml_CFontNumeralStyle;

typedef enum __x_ABI_CWindows_CUI_CXaml_CFontVariants __x_ABI_CWindows_CUI_CXaml_CFontVariants;

#ifndef ____x_ABI_CWindows_CUI_CXaml_CIFrameworkElement_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CIFrameworkElement_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CIFrameworkElement __x_ABI_CWindows_CUI_CXaml_CIFrameworkElement;

#endif // ____x_ABI_CWindows_CUI_CXaml_CIFrameworkElement_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CIDependencyObject2_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CIDependencyObject2_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CIDependencyObject2 __x_ABI_CWindows_CUI_CXaml_CIDependencyObject2;

#endif // ____x_ABI_CWindows_CUI_CXaml_CIDependencyObject2_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CIFrameworkElement2_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CIFrameworkElement2_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CIFrameworkElement2 __x_ABI_CWindows_CUI_CXaml_CIFrameworkElement2;

#endif // ____x_ABI_CWindows_CUI_CXaml_CIFrameworkElement2_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CIFrameworkElement3_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CIFrameworkElement3_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CIFrameworkElement3 __x_ABI_CWindows_CUI_CXaml_CIFrameworkElement3;

#endif // ____x_ABI_CWindows_CUI_CXaml_CIFrameworkElement3_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CIFrameworkElement4_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CIFrameworkElement4_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CIFrameworkElement4 __x_ABI_CWindows_CUI_CXaml_CIFrameworkElement4;

#endif // ____x_ABI_CWindows_CUI_CXaml_CIFrameworkElement4_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CIFrameworkElement6_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CIFrameworkElement6_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CIFrameworkElement6 __x_ABI_CWindows_CUI_CXaml_CIFrameworkElement6;

#endif // ____x_ABI_CWindows_CUI_CXaml_CIFrameworkElement6_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CIFrameworkElement7_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CIFrameworkElement7_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CIFrameworkElement7 __x_ABI_CWindows_CUI_CXaml_CIFrameworkElement7;

#endif // ____x_ABI_CWindows_CUI_CXaml_CIFrameworkElement7_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CIFrameworkElementOverrides_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CIFrameworkElementOverrides_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CIFrameworkElementOverrides __x_ABI_CWindows_CUI_CXaml_CIFrameworkElementOverrides;

#endif // ____x_ABI_CWindows_CUI_CXaml_CIFrameworkElementOverrides_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CIFrameworkElementOverrides2_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CIFrameworkElementOverrides2_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CIFrameworkElementOverrides2 __x_ABI_CWindows_CUI_CXaml_CIFrameworkElementOverrides2;

#endif // ____x_ABI_CWindows_CUI_CXaml_CIFrameworkElementOverrides2_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CIFrameworkElementProtected7_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CIFrameworkElementProtected7_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CIFrameworkElementProtected7 __x_ABI_CWindows_CUI_CXaml_CIFrameworkElementProtected7;

#endif // ____x_ABI_CWindows_CUI_CXaml_CIFrameworkElementProtected7_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CIRoutedEventArgs_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CIRoutedEventArgs_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CIRoutedEventArgs __x_ABI_CWindows_CUI_CXaml_CIRoutedEventArgs;

#endif // ____x_ABI_CWindows_CUI_CXaml_CIRoutedEventArgs_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CIUIElement_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CIUIElement_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CIUIElement __x_ABI_CWindows_CUI_CXaml_CIUIElement;

#endif // ____x_ABI_CWindows_CUI_CXaml_CIUIElement_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CIUIElement10_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CIUIElement10_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CIUIElement10 __x_ABI_CWindows_CUI_CXaml_CIUIElement10;

#endif // ____x_ABI_CWindows_CUI_CXaml_CIUIElement10_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CIUIElement2_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CIUIElement2_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CIUIElement2 __x_ABI_CWindows_CUI_CXaml_CIUIElement2;

#endif // ____x_ABI_CWindows_CUI_CXaml_CIUIElement2_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CIUIElement3_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CIUIElement3_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CIUIElement3 __x_ABI_CWindows_CUI_CXaml_CIUIElement3;

#endif // ____x_ABI_CWindows_CUI_CXaml_CIUIElement3_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CIUIElement4_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CIUIElement4_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CIUIElement4 __x_ABI_CWindows_CUI_CXaml_CIUIElement4;

#endif // ____x_ABI_CWindows_CUI_CXaml_CIUIElement4_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CIUIElement5_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CIUIElement5_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CIUIElement5 __x_ABI_CWindows_CUI_CXaml_CIUIElement5;

#endif // ____x_ABI_CWindows_CUI_CXaml_CIUIElement5_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CIUIElement7_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CIUIElement7_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CIUIElement7 __x_ABI_CWindows_CUI_CXaml_CIUIElement7;

#endif // ____x_ABI_CWindows_CUI_CXaml_CIUIElement7_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CIUIElement8_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CIUIElement8_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CIUIElement8 __x_ABI_CWindows_CUI_CXaml_CIUIElement8;

#endif // ____x_ABI_CWindows_CUI_CXaml_CIUIElement8_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CIUIElement9_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CIUIElement9_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CIUIElement9 __x_ABI_CWindows_CUI_CXaml_CIUIElement9;

#endif // ____x_ABI_CWindows_CUI_CXaml_CIUIElement9_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CIUIElementOverrides_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CIUIElementOverrides_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CIUIElementOverrides __x_ABI_CWindows_CUI_CXaml_CIUIElementOverrides;

#endif // ____x_ABI_CWindows_CUI_CXaml_CIUIElementOverrides_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CIUIElementOverrides7_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CIUIElementOverrides7_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CIUIElementOverrides7 __x_ABI_CWindows_CUI_CXaml_CIUIElementOverrides7;

#endif // ____x_ABI_CWindows_CUI_CXaml_CIUIElementOverrides7_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CIUIElementOverrides8_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CIUIElementOverrides8_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CIUIElementOverrides8 __x_ABI_CWindows_CUI_CXaml_CIUIElementOverrides8;

#endif // ____x_ABI_CWindows_CUI_CXaml_CIUIElementOverrides8_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CIUIElementOverrides9_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CIUIElementOverrides9_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CIUIElementOverrides9 __x_ABI_CWindows_CUI_CXaml_CIUIElementOverrides9;

#endif // ____x_ABI_CWindows_CUI_CXaml_CIUIElementOverrides9_FWD_DEFINED__

typedef enum __x_ABI_CWindows_CUI_CXaml_CInput_CKeyTipPlacementMode __x_ABI_CWindows_CUI_CXaml_CInput_CKeyTipPlacementMode;

typedef enum __x_ABI_CWindows_CUI_CXaml_CInput_CXYFocusNavigationStrategy __x_ABI_CWindows_CUI_CXaml_CInput_CXYFocusNavigationStrategy;

typedef enum __x_ABI_CWindows_CUI_CXaml_CLineStackingStrategy __x_ABI_CWindows_CUI_CXaml_CLineStackingStrategy;

#ifndef ____x_ABI_CWindows_CUI_CXaml_CMedia_CIBrush_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CMedia_CIBrush_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CMedia_CIBrush __x_ABI_CWindows_CUI_CXaml_CMedia_CIBrush;

#endif // ____x_ABI_CWindows_CUI_CXaml_CMedia_CIBrush_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CMedia_CIFontFamily_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CMedia_CIFontFamily_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CMedia_CIFontFamily __x_ABI_CWindows_CUI_CXaml_CMedia_CIFontFamily;

#endif // ____x_ABI_CWindows_CUI_CXaml_CMedia_CIFontFamily_FWD_DEFINED__

typedef enum __x_ABI_CWindows_CUI_CXaml_CMedia_CStyleSimulations __x_ABI_CWindows_CUI_CXaml_CMedia_CStyleSimulations;

#ifndef ____x_ABI_CWindows_CUI_CXaml_CIRoutedEventHandler_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CIRoutedEventHandler_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CIRoutedEventHandler __x_ABI_CWindows_CUI_CXaml_CIRoutedEventHandler;

#endif // ____x_ABI_CWindows_CUI_CXaml_CIRoutedEventHandler_FWD_DEFINED__

    typedef enum __x_ABI_CWindows_CUI_CXaml_CTextAlignment __x_ABI_CWindows_CUI_CXaml_CTextAlignment;

typedef struct __x_ABI_CWindows_CUI_CXaml_CThickness __x_ABI_CWindows_CUI_CXaml_CThickness;

#ifndef ____x_ABI_CWindows_CUI_CXaml_CIXamlRoot_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CIXamlRoot_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CIXamlRoot __x_ABI_CWindows_CUI_CXaml_CIXamlRoot;

#endif // ____x_ABI_CWindows_CUI_CXaml_CIXamlRoot_FWD_DEFINED__

typedef enum __x_ABI_CWindows_CUI_CXaml_CDocuments_CLogicalDirection __x_ABI_CWindows_CUI_CXaml_CDocuments_CLogicalDirection;

typedef enum __x_ABI_CWindows_CUI_CXaml_CDocuments_CUnderlineStyle __x_ABI_CWindows_CUI_CXaml_CDocuments_CUnderlineStyle;

enum __x_ABI_CWindows_CUI_CXaml_CDocuments_CLogicalDirection
    {
        __x_ABI_CWindows_CUI_CXaml_CDocuments_CLogicalDirection_Backward = 0,
    __x_ABI_CWindows_CUI_CXaml_CDocuments_CLogicalDirection_Forward = 1,
};

enum __x_ABI_CWindows_CUI_CXaml_CDocuments_CUnderlineStyle
    {
        __x_ABI_CWindows_CUI_CXaml_CDocuments_CUnderlineStyle_None = 0,
    __x_ABI_CWindows_CUI_CXaml_CDocuments_CUnderlineStyle_Single = 1,
};

struct __x_ABI_CWindows_CUI_CXaml_CDocuments_CTextRange
    {
        INT32 StartIndex;
    INT32 Length;
};

#if !defined(____x_ABI_CWindows_CUI_CXaml_CDocuments_CIBlock_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CDocuments_CIBlock_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CDocuments_CIBlockVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CDocuments_CIBlock* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CDocuments_CIBlock* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CDocuments_CIBlock* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CDocuments_CIBlock* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CDocuments_CIBlock* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CDocuments_CIBlock* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_TextAlignment)(__x_ABI_CWindows_CUI_CXaml_CDocuments_CIBlock* This,
        enum __x_ABI_CWindows_CUI_CXaml_CTextAlignment* value);
    HRESULT (STDMETHODCALLTYPE* put_TextAlignment)(__x_ABI_CWindows_CUI_CXaml_CDocuments_CIBlock* This,
        enum __x_ABI_CWindows_CUI_CXaml_CTextAlignment value);
    HRESULT (STDMETHODCALLTYPE* get_LineHeight)(__x_ABI_CWindows_CUI_CXaml_CDocuments_CIBlock* This,
        DOUBLE* value);
    HRESULT (STDMETHODCALLTYPE* put_LineHeight)(__x_ABI_CWindows_CUI_CXaml_CDocuments_CIBlock* This,
        DOUBLE value);
    HRESULT (STDMETHODCALLTYPE* get_LineStackingStrategy)(__x_ABI_CWindows_CUI_CXaml_CDocuments_CIBlock* This,
        enum __x_ABI_CWindows_CUI_CXaml_CLineStackingStrategy* value);
    HRESULT (STDMETHODCALLTYPE* put_LineStackingStrategy)(__x_ABI_CWindows_CUI_CXaml_CDocuments_CIBlock* This,
        enum __x_ABI_CWindows_CUI_CXaml_CLineStackingStrategy value);
    HRESULT (STDMETHODCALLTYPE* get_Margin)(__x_ABI_CWindows_CUI_CXaml_CDocuments_CIBlock* This,
        struct __x_ABI_CWindows_CUI_CXaml_CThickness* value);
    HRESULT (STDMETHODCALLTYPE* put_Margin)(__x_ABI_CWindows_CUI_CXaml_CDocuments_CIBlock* This,
        struct __x_ABI_CWindows_CUI_CXaml_CThickness value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CDocuments_CIBlockVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CDocuments_CIBlock
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CDocuments_CIBlockVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CDocuments_CIBlock;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CDocuments_CIBlock_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CDocuments_CIBlock2_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CDocuments_CIBlock2_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CDocuments_CIBlock2Vtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CDocuments_CIBlock2* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CDocuments_CIBlock2* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CDocuments_CIBlock2* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CDocuments_CIBlock2* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CDocuments_CIBlock2* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CDocuments_CIBlock2* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_HorizontalTextAlignment)(__x_ABI_CWindows_CUI_CXaml_CDocuments_CIBlock2* This,
        enum __x_ABI_CWindows_CUI_CXaml_CTextAlignment* value);
    HRESULT (STDMETHODCALLTYPE* put_HorizontalTextAlignment)(__x_ABI_CWindows_CUI_CXaml_CDocuments_CIBlock2* This,
        enum __x_ABI_CWindows_CUI_CXaml_CTextAlignment value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CDocuments_CIBlock2Vtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CDocuments_CIBlock2
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CDocuments_CIBlock2Vtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CDocuments_CIBlock2;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CDocuments_CIBlock2_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CDocuments_CIBlockFactory_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CDocuments_CIBlockFactory_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CDocuments_CIBlockFactoryVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CDocuments_CIBlockFactory* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CDocuments_CIBlockFactory* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CDocuments_CIBlockFactory* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CDocuments_CIBlockFactory* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CDocuments_CIBlockFactory* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CDocuments_CIBlockFactory* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* CreateInstance)(__x_ABI_CWindows_CUI_CXaml_CDocuments_CIBlockFactory* This,
        IInspectable* baseInterface,
        IInspectable** innerInterface,
        __x_ABI_CWindows_CUI_CXaml_CDocuments_CIBlock** value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CDocuments_CIBlockFactoryVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CDocuments_CIBlockFactory
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CDocuments_CIBlockFactoryVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CDocuments_CIBlockFactory;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CDocuments_CIBlockFactory_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CDocuments_CIBlockStatics_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CDocuments_CIBlockStatics_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CDocuments_CIBlockStaticsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CDocuments_CIBlockStatics* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CDocuments_CIBlockStatics* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CDocuments_CIBlockStatics* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CDocuments_CIBlockStatics* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CDocuments_CIBlockStatics* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CDocuments_CIBlockStatics* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_TextAlignmentProperty)(__x_ABI_CWindows_CUI_CXaml_CDocuments_CIBlockStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_LineHeightProperty)(__x_ABI_CWindows_CUI_CXaml_CDocuments_CIBlockStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_LineStackingStrategyProperty)(__x_ABI_CWindows_CUI_CXaml_CDocuments_CIBlockStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_MarginProperty)(__x_ABI_CWindows_CUI_CXaml_CDocuments_CIBlockStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CDocuments_CIBlockStaticsVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CDocuments_CIBlockStatics
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CDocuments_CIBlockStaticsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CDocuments_CIBlockStatics;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CDocuments_CIBlockStatics_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CDocuments_CIBlockStatics2_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CDocuments_CIBlockStatics2_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CDocuments_CIBlockStatics2Vtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CDocuments_CIBlockStatics2* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CDocuments_CIBlockStatics2* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CDocuments_CIBlockStatics2* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CDocuments_CIBlockStatics2* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CDocuments_CIBlockStatics2* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CDocuments_CIBlockStatics2* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_HorizontalTextAlignmentProperty)(__x_ABI_CWindows_CUI_CXaml_CDocuments_CIBlockStatics2* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CDocuments_CIBlockStatics2Vtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CDocuments_CIBlockStatics2
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CDocuments_CIBlockStatics2Vtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CDocuments_CIBlockStatics2;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CDocuments_CIBlockStatics2_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CDocuments_CIBold_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CDocuments_CIBold_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CDocuments_CIBoldVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CDocuments_CIBold* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CDocuments_CIBold* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CDocuments_CIBold* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CDocuments_CIBold* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CDocuments_CIBold* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CDocuments_CIBold* This,
            TrustLevel* trustLevel);
    
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CDocuments_CIBoldVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CDocuments_CIBold
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CDocuments_CIBoldVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CDocuments_CIBold;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CDocuments_CIBold_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CDocuments_CIContactContentLinkProvider_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CDocuments_CIContactContentLinkProvider_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CDocuments_CIContactContentLinkProviderVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CDocuments_CIContactContentLinkProvider* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CDocuments_CIContactContentLinkProvider* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CDocuments_CIContactContentLinkProvider* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CDocuments_CIContactContentLinkProvider* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CDocuments_CIContactContentLinkProvider* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CDocuments_CIContactContentLinkProvider* This,
            TrustLevel* trustLevel);
    
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CDocuments_CIContactContentLinkProviderVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CDocuments_CIContactContentLinkProvider
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CDocuments_CIContactContentLinkProviderVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CDocuments_CIContactContentLinkProvider;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CDocuments_CIContactContentLinkProvider_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CDocuments_CIContentLink_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CDocuments_CIContentLink_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CDocuments_CIContentLinkVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CDocuments_CIContentLink* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CDocuments_CIContentLink* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CDocuments_CIContentLink* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CDocuments_CIContentLink* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CDocuments_CIContentLink* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CDocuments_CIContentLink* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Info)(__x_ABI_CWindows_CUI_CXaml_CDocuments_CIContentLink* This,
        __x_ABI_CWindows_CUI_CText_CIContentLinkInfo** value);
    HRESULT (STDMETHODCALLTYPE* put_Info)(__x_ABI_CWindows_CUI_CXaml_CDocuments_CIContentLink* This,
        __x_ABI_CWindows_CUI_CText_CIContentLinkInfo* value);
    HRESULT (STDMETHODCALLTYPE* get_Background)(__x_ABI_CWindows_CUI_CXaml_CDocuments_CIContentLink* This,
        __x_ABI_CWindows_CUI_CXaml_CMedia_CIBrush** value);
    HRESULT (STDMETHODCALLTYPE* put_Background)(__x_ABI_CWindows_CUI_CXaml_CDocuments_CIContentLink* This,
        __x_ABI_CWindows_CUI_CXaml_CMedia_CIBrush* value);
    HRESULT (STDMETHODCALLTYPE* get_Cursor)(__x_ABI_CWindows_CUI_CXaml_CDocuments_CIContentLink* This,
        enum __x_ABI_CWindows_CUI_CCore_CCoreCursorType* value);
    HRESULT (STDMETHODCALLTYPE* put_Cursor)(__x_ABI_CWindows_CUI_CXaml_CDocuments_CIContentLink* This,
        enum __x_ABI_CWindows_CUI_CCore_CCoreCursorType value);
    HRESULT (STDMETHODCALLTYPE* get_XYFocusLeft)(__x_ABI_CWindows_CUI_CXaml_CDocuments_CIContentLink* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyObject** value);
    HRESULT (STDMETHODCALLTYPE* put_XYFocusLeft)(__x_ABI_CWindows_CUI_CXaml_CDocuments_CIContentLink* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyObject* value);
    HRESULT (STDMETHODCALLTYPE* get_XYFocusRight)(__x_ABI_CWindows_CUI_CXaml_CDocuments_CIContentLink* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyObject** value);
    HRESULT (STDMETHODCALLTYPE* put_XYFocusRight)(__x_ABI_CWindows_CUI_CXaml_CDocuments_CIContentLink* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyObject* value);
    HRESULT (STDMETHODCALLTYPE* get_XYFocusUp)(__x_ABI_CWindows_CUI_CXaml_CDocuments_CIContentLink* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyObject** value);
    HRESULT (STDMETHODCALLTYPE* put_XYFocusUp)(__x_ABI_CWindows_CUI_CXaml_CDocuments_CIContentLink* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyObject* value);
    HRESULT (STDMETHODCALLTYPE* get_XYFocusDown)(__x_ABI_CWindows_CUI_CXaml_CDocuments_CIContentLink* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyObject** value);
    HRESULT (STDMETHODCALLTYPE* put_XYFocusDown)(__x_ABI_CWindows_CUI_CXaml_CDocuments_CIContentLink* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyObject* value);
    HRESULT (STDMETHODCALLTYPE* get_ElementSoundMode)(__x_ABI_CWindows_CUI_CXaml_CDocuments_CIContentLink* This,
        enum __x_ABI_CWindows_CUI_CXaml_CElementSoundMode* value);
    HRESULT (STDMETHODCALLTYPE* put_ElementSoundMode)(__x_ABI_CWindows_CUI_CXaml_CDocuments_CIContentLink* This,
        enum __x_ABI_CWindows_CUI_CXaml_CElementSoundMode value);
    HRESULT (STDMETHODCALLTYPE* get_FocusState)(__x_ABI_CWindows_CUI_CXaml_CDocuments_CIContentLink* This,
        enum __x_ABI_CWindows_CUI_CXaml_CFocusState* value);
    HRESULT (STDMETHODCALLTYPE* get_XYFocusUpNavigationStrategy)(__x_ABI_CWindows_CUI_CXaml_CDocuments_CIContentLink* This,
        enum __x_ABI_CWindows_CUI_CXaml_CInput_CXYFocusNavigationStrategy* value);
    HRESULT (STDMETHODCALLTYPE* put_XYFocusUpNavigationStrategy)(__x_ABI_CWindows_CUI_CXaml_CDocuments_CIContentLink* This,
        enum __x_ABI_CWindows_CUI_CXaml_CInput_CXYFocusNavigationStrategy value);
    HRESULT (STDMETHODCALLTYPE* get_XYFocusDownNavigationStrategy)(__x_ABI_CWindows_CUI_CXaml_CDocuments_CIContentLink* This,
        enum __x_ABI_CWindows_CUI_CXaml_CInput_CXYFocusNavigationStrategy* value);
    HRESULT (STDMETHODCALLTYPE* put_XYFocusDownNavigationStrategy)(__x_ABI_CWindows_CUI_CXaml_CDocuments_CIContentLink* This,
        enum __x_ABI_CWindows_CUI_CXaml_CInput_CXYFocusNavigationStrategy value);
    HRESULT (STDMETHODCALLTYPE* get_XYFocusLeftNavigationStrategy)(__x_ABI_CWindows_CUI_CXaml_CDocuments_CIContentLink* This,
        enum __x_ABI_CWindows_CUI_CXaml_CInput_CXYFocusNavigationStrategy* value);
    HRESULT (STDMETHODCALLTYPE* put_XYFocusLeftNavigationStrategy)(__x_ABI_CWindows_CUI_CXaml_CDocuments_CIContentLink* This,
        enum __x_ABI_CWindows_CUI_CXaml_CInput_CXYFocusNavigationStrategy value);
    HRESULT (STDMETHODCALLTYPE* get_XYFocusRightNavigationStrategy)(__x_ABI_CWindows_CUI_CXaml_CDocuments_CIContentLink* This,
        enum __x_ABI_CWindows_CUI_CXaml_CInput_CXYFocusNavigationStrategy* value);
    HRESULT (STDMETHODCALLTYPE* put_XYFocusRightNavigationStrategy)(__x_ABI_CWindows_CUI_CXaml_CDocuments_CIContentLink* This,
        enum __x_ABI_CWindows_CUI_CXaml_CInput_CXYFocusNavigationStrategy value);
    HRESULT (STDMETHODCALLTYPE* get_IsTabStop)(__x_ABI_CWindows_CUI_CXaml_CDocuments_CIContentLink* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* put_IsTabStop)(__x_ABI_CWindows_CUI_CXaml_CDocuments_CIContentLink* This,
        boolean value);
    HRESULT (STDMETHODCALLTYPE* get_TabIndex)(__x_ABI_CWindows_CUI_CXaml_CDocuments_CIContentLink* This,
        INT32* value);
    HRESULT (STDMETHODCALLTYPE* put_TabIndex)(__x_ABI_CWindows_CUI_CXaml_CDocuments_CIContentLink* This,
        INT32 value);
    HRESULT (STDMETHODCALLTYPE* add_Invoked)(__x_ABI_CWindows_CUI_CXaml_CDocuments_CIContentLink* This,
        __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CDocuments__CContentLink___x_ABI_CWindows__CUI__CXaml__CDocuments__CContentLinkInvokedEventArgs* handler,
        EventRegistrationToken* token);
    HRESULT (STDMETHODCALLTYPE* remove_Invoked)(__x_ABI_CWindows_CUI_CXaml_CDocuments_CIContentLink* This,
        EventRegistrationToken token);
    HRESULT (STDMETHODCALLTYPE* add_GotFocus)(__x_ABI_CWindows_CUI_CXaml_CDocuments_CIContentLink* This,
        __x_ABI_CWindows_CUI_CXaml_CIRoutedEventHandler* handler,
        EventRegistrationToken* token);
    HRESULT (STDMETHODCALLTYPE* remove_GotFocus)(__x_ABI_CWindows_CUI_CXaml_CDocuments_CIContentLink* This,
        EventRegistrationToken token);
    HRESULT (STDMETHODCALLTYPE* add_LostFocus)(__x_ABI_CWindows_CUI_CXaml_CDocuments_CIContentLink* This,
        __x_ABI_CWindows_CUI_CXaml_CIRoutedEventHandler* handler,
        EventRegistrationToken* token);
    HRESULT (STDMETHODCALLTYPE* remove_LostFocus)(__x_ABI_CWindows_CUI_CXaml_CDocuments_CIContentLink* This,
        EventRegistrationToken token);
    HRESULT (STDMETHODCALLTYPE* Focus)(__x_ABI_CWindows_CUI_CXaml_CDocuments_CIContentLink* This,
        enum __x_ABI_CWindows_CUI_CXaml_CFocusState value,
        boolean* result);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CDocuments_CIContentLinkVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CDocuments_CIContentLink
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CDocuments_CIContentLinkVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CDocuments_CIContentLink;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CDocuments_CIContentLink_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CDocuments_CIContentLinkInvokedEventArgs_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CDocuments_CIContentLinkInvokedEventArgs_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CDocuments_CIContentLinkInvokedEventArgsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CDocuments_CIContentLinkInvokedEventArgs* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CDocuments_CIContentLinkInvokedEventArgs* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CDocuments_CIContentLinkInvokedEventArgs* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CDocuments_CIContentLinkInvokedEventArgs* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CDocuments_CIContentLinkInvokedEventArgs* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CDocuments_CIContentLinkInvokedEventArgs* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_ContentLinkInfo)(__x_ABI_CWindows_CUI_CXaml_CDocuments_CIContentLinkInvokedEventArgs* This,
        __x_ABI_CWindows_CUI_CText_CIContentLinkInfo** value);
    HRESULT (STDMETHODCALLTYPE* get_Handled)(__x_ABI_CWindows_CUI_CXaml_CDocuments_CIContentLinkInvokedEventArgs* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* put_Handled)(__x_ABI_CWindows_CUI_CXaml_CDocuments_CIContentLinkInvokedEventArgs* This,
        boolean value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CDocuments_CIContentLinkInvokedEventArgsVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CDocuments_CIContentLinkInvokedEventArgs
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CDocuments_CIContentLinkInvokedEventArgsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CDocuments_CIContentLinkInvokedEventArgs;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CDocuments_CIContentLinkInvokedEventArgs_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CDocuments_CIContentLinkProvider_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CDocuments_CIContentLinkProvider_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CDocuments_CIContentLinkProviderVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CDocuments_CIContentLinkProvider* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CDocuments_CIContentLinkProvider* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CDocuments_CIContentLinkProvider* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CDocuments_CIContentLinkProvider* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CDocuments_CIContentLinkProvider* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CDocuments_CIContentLinkProvider* This,
            TrustLevel* trustLevel);
    
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CDocuments_CIContentLinkProviderVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CDocuments_CIContentLinkProvider
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CDocuments_CIContentLinkProviderVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CDocuments_CIContentLinkProvider;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CDocuments_CIContentLinkProvider_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CDocuments_CIContentLinkProviderCollection_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CDocuments_CIContentLinkProviderCollection_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CDocuments_CIContentLinkProviderCollectionVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CDocuments_CIContentLinkProviderCollection* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CDocuments_CIContentLinkProviderCollection* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CDocuments_CIContentLinkProviderCollection* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CDocuments_CIContentLinkProviderCollection* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CDocuments_CIContentLinkProviderCollection* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CDocuments_CIContentLinkProviderCollection* This,
            TrustLevel* trustLevel);
    
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CDocuments_CIContentLinkProviderCollectionVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CDocuments_CIContentLinkProviderCollection
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CDocuments_CIContentLinkProviderCollectionVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CDocuments_CIContentLinkProviderCollection;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CDocuments_CIContentLinkProviderCollection_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CDocuments_CIContentLinkProviderFactory_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CDocuments_CIContentLinkProviderFactory_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CDocuments_CIContentLinkProviderFactoryVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CDocuments_CIContentLinkProviderFactory* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CDocuments_CIContentLinkProviderFactory* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CDocuments_CIContentLinkProviderFactory* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CDocuments_CIContentLinkProviderFactory* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CDocuments_CIContentLinkProviderFactory* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CDocuments_CIContentLinkProviderFactory* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* CreateInstance)(__x_ABI_CWindows_CUI_CXaml_CDocuments_CIContentLinkProviderFactory* This,
        IInspectable* baseInterface,
        IInspectable** innerInterface,
        __x_ABI_CWindows_CUI_CXaml_CDocuments_CIContentLinkProvider** value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CDocuments_CIContentLinkProviderFactoryVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CDocuments_CIContentLinkProviderFactory
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CDocuments_CIContentLinkProviderFactoryVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CDocuments_CIContentLinkProviderFactory;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CDocuments_CIContentLinkProviderFactory_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CDocuments_CIContentLinkStatics_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CDocuments_CIContentLinkStatics_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CDocuments_CIContentLinkStaticsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CDocuments_CIContentLinkStatics* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CDocuments_CIContentLinkStatics* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CDocuments_CIContentLinkStatics* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CDocuments_CIContentLinkStatics* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CDocuments_CIContentLinkStatics* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CDocuments_CIContentLinkStatics* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_BackgroundProperty)(__x_ABI_CWindows_CUI_CXaml_CDocuments_CIContentLinkStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_CursorProperty)(__x_ABI_CWindows_CUI_CXaml_CDocuments_CIContentLinkStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_XYFocusLeftProperty)(__x_ABI_CWindows_CUI_CXaml_CDocuments_CIContentLinkStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_XYFocusRightProperty)(__x_ABI_CWindows_CUI_CXaml_CDocuments_CIContentLinkStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_XYFocusUpProperty)(__x_ABI_CWindows_CUI_CXaml_CDocuments_CIContentLinkStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_XYFocusDownProperty)(__x_ABI_CWindows_CUI_CXaml_CDocuments_CIContentLinkStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_ElementSoundModeProperty)(__x_ABI_CWindows_CUI_CXaml_CDocuments_CIContentLinkStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_FocusStateProperty)(__x_ABI_CWindows_CUI_CXaml_CDocuments_CIContentLinkStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_XYFocusUpNavigationStrategyProperty)(__x_ABI_CWindows_CUI_CXaml_CDocuments_CIContentLinkStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_XYFocusDownNavigationStrategyProperty)(__x_ABI_CWindows_CUI_CXaml_CDocuments_CIContentLinkStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_XYFocusLeftNavigationStrategyProperty)(__x_ABI_CWindows_CUI_CXaml_CDocuments_CIContentLinkStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_XYFocusRightNavigationStrategyProperty)(__x_ABI_CWindows_CUI_CXaml_CDocuments_CIContentLinkStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_IsTabStopProperty)(__x_ABI_CWindows_CUI_CXaml_CDocuments_CIContentLinkStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_TabIndexProperty)(__x_ABI_CWindows_CUI_CXaml_CDocuments_CIContentLinkStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CDocuments_CIContentLinkStaticsVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CDocuments_CIContentLinkStatics
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CDocuments_CIContentLinkStaticsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CDocuments_CIContentLinkStatics;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CDocuments_CIContentLinkStatics_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CDocuments_CIGlyphs_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CDocuments_CIGlyphs_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CDocuments_CIGlyphsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CDocuments_CIGlyphs* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CDocuments_CIGlyphs* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CDocuments_CIGlyphs* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CDocuments_CIGlyphs* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CDocuments_CIGlyphs* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CDocuments_CIGlyphs* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_UnicodeString)(__x_ABI_CWindows_CUI_CXaml_CDocuments_CIGlyphs* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* put_UnicodeString)(__x_ABI_CWindows_CUI_CXaml_CDocuments_CIGlyphs* This,
        HSTRING value);
    HRESULT (STDMETHODCALLTYPE* get_Indices)(__x_ABI_CWindows_CUI_CXaml_CDocuments_CIGlyphs* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* put_Indices)(__x_ABI_CWindows_CUI_CXaml_CDocuments_CIGlyphs* This,
        HSTRING value);
    HRESULT (STDMETHODCALLTYPE* get_FontUri)(__x_ABI_CWindows_CUI_CXaml_CDocuments_CIGlyphs* This,
        __x_ABI_CWindows_CFoundation_CIUriRuntimeClass** value);
    HRESULT (STDMETHODCALLTYPE* put_FontUri)(__x_ABI_CWindows_CUI_CXaml_CDocuments_CIGlyphs* This,
        __x_ABI_CWindows_CFoundation_CIUriRuntimeClass* value);
    HRESULT (STDMETHODCALLTYPE* get_StyleSimulations)(__x_ABI_CWindows_CUI_CXaml_CDocuments_CIGlyphs* This,
        enum __x_ABI_CWindows_CUI_CXaml_CMedia_CStyleSimulations* value);
    HRESULT (STDMETHODCALLTYPE* put_StyleSimulations)(__x_ABI_CWindows_CUI_CXaml_CDocuments_CIGlyphs* This,
        enum __x_ABI_CWindows_CUI_CXaml_CMedia_CStyleSimulations value);
    HRESULT (STDMETHODCALLTYPE* get_FontRenderingEmSize)(__x_ABI_CWindows_CUI_CXaml_CDocuments_CIGlyphs* This,
        DOUBLE* value);
    HRESULT (STDMETHODCALLTYPE* put_FontRenderingEmSize)(__x_ABI_CWindows_CUI_CXaml_CDocuments_CIGlyphs* This,
        DOUBLE value);
    HRESULT (STDMETHODCALLTYPE* get_OriginX)(__x_ABI_CWindows_CUI_CXaml_CDocuments_CIGlyphs* This,
        DOUBLE* value);
    HRESULT (STDMETHODCALLTYPE* put_OriginX)(__x_ABI_CWindows_CUI_CXaml_CDocuments_CIGlyphs* This,
        DOUBLE value);
    HRESULT (STDMETHODCALLTYPE* get_OriginY)(__x_ABI_CWindows_CUI_CXaml_CDocuments_CIGlyphs* This,
        DOUBLE* value);
    HRESULT (STDMETHODCALLTYPE* put_OriginY)(__x_ABI_CWindows_CUI_CXaml_CDocuments_CIGlyphs* This,
        DOUBLE value);
    HRESULT (STDMETHODCALLTYPE* get_Fill)(__x_ABI_CWindows_CUI_CXaml_CDocuments_CIGlyphs* This,
        __x_ABI_CWindows_CUI_CXaml_CMedia_CIBrush** value);
    HRESULT (STDMETHODCALLTYPE* put_Fill)(__x_ABI_CWindows_CUI_CXaml_CDocuments_CIGlyphs* This,
        __x_ABI_CWindows_CUI_CXaml_CMedia_CIBrush* value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CDocuments_CIGlyphsVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CDocuments_CIGlyphs
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CDocuments_CIGlyphsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CDocuments_CIGlyphs;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CDocuments_CIGlyphs_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CDocuments_CIGlyphs2_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CDocuments_CIGlyphs2_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CDocuments_CIGlyphs2Vtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CDocuments_CIGlyphs2* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CDocuments_CIGlyphs2* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CDocuments_CIGlyphs2* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CDocuments_CIGlyphs2* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CDocuments_CIGlyphs2* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CDocuments_CIGlyphs2* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_IsColorFontEnabled)(__x_ABI_CWindows_CUI_CXaml_CDocuments_CIGlyphs2* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* put_IsColorFontEnabled)(__x_ABI_CWindows_CUI_CXaml_CDocuments_CIGlyphs2* This,
        boolean value);
    HRESULT (STDMETHODCALLTYPE* get_ColorFontPaletteIndex)(__x_ABI_CWindows_CUI_CXaml_CDocuments_CIGlyphs2* This,
        INT32* value);
    HRESULT (STDMETHODCALLTYPE* put_ColorFontPaletteIndex)(__x_ABI_CWindows_CUI_CXaml_CDocuments_CIGlyphs2* This,
        INT32 value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CDocuments_CIGlyphs2Vtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CDocuments_CIGlyphs2
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CDocuments_CIGlyphs2Vtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CDocuments_CIGlyphs2;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CDocuments_CIGlyphs2_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CDocuments_CIGlyphsStatics_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CDocuments_CIGlyphsStatics_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CDocuments_CIGlyphsStaticsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CDocuments_CIGlyphsStatics* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CDocuments_CIGlyphsStatics* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CDocuments_CIGlyphsStatics* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CDocuments_CIGlyphsStatics* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CDocuments_CIGlyphsStatics* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CDocuments_CIGlyphsStatics* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_UnicodeStringProperty)(__x_ABI_CWindows_CUI_CXaml_CDocuments_CIGlyphsStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_IndicesProperty)(__x_ABI_CWindows_CUI_CXaml_CDocuments_CIGlyphsStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_FontUriProperty)(__x_ABI_CWindows_CUI_CXaml_CDocuments_CIGlyphsStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_StyleSimulationsProperty)(__x_ABI_CWindows_CUI_CXaml_CDocuments_CIGlyphsStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_FontRenderingEmSizeProperty)(__x_ABI_CWindows_CUI_CXaml_CDocuments_CIGlyphsStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_OriginXProperty)(__x_ABI_CWindows_CUI_CXaml_CDocuments_CIGlyphsStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_OriginYProperty)(__x_ABI_CWindows_CUI_CXaml_CDocuments_CIGlyphsStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_FillProperty)(__x_ABI_CWindows_CUI_CXaml_CDocuments_CIGlyphsStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CDocuments_CIGlyphsStaticsVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CDocuments_CIGlyphsStatics
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CDocuments_CIGlyphsStaticsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CDocuments_CIGlyphsStatics;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CDocuments_CIGlyphsStatics_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CDocuments_CIGlyphsStatics2_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CDocuments_CIGlyphsStatics2_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CDocuments_CIGlyphsStatics2Vtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CDocuments_CIGlyphsStatics2* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CDocuments_CIGlyphsStatics2* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CDocuments_CIGlyphsStatics2* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CDocuments_CIGlyphsStatics2* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CDocuments_CIGlyphsStatics2* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CDocuments_CIGlyphsStatics2* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_IsColorFontEnabledProperty)(__x_ABI_CWindows_CUI_CXaml_CDocuments_CIGlyphsStatics2* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_ColorFontPaletteIndexProperty)(__x_ABI_CWindows_CUI_CXaml_CDocuments_CIGlyphsStatics2* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CDocuments_CIGlyphsStatics2Vtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CDocuments_CIGlyphsStatics2
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CDocuments_CIGlyphsStatics2Vtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CDocuments_CIGlyphsStatics2;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CDocuments_CIGlyphsStatics2_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CDocuments_CIHyperlink_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CDocuments_CIHyperlink_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CDocuments_CIHyperlinkVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CDocuments_CIHyperlink* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CDocuments_CIHyperlink* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CDocuments_CIHyperlink* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CDocuments_CIHyperlink* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CDocuments_CIHyperlink* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CDocuments_CIHyperlink* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_NavigateUri)(__x_ABI_CWindows_CUI_CXaml_CDocuments_CIHyperlink* This,
        __x_ABI_CWindows_CFoundation_CIUriRuntimeClass** value);
    HRESULT (STDMETHODCALLTYPE* put_NavigateUri)(__x_ABI_CWindows_CUI_CXaml_CDocuments_CIHyperlink* This,
        __x_ABI_CWindows_CFoundation_CIUriRuntimeClass* value);
    HRESULT (STDMETHODCALLTYPE* add_Click)(__x_ABI_CWindows_CUI_CXaml_CDocuments_CIHyperlink* This,
        __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CDocuments__CHyperlink___x_ABI_CWindows__CUI__CXaml__CDocuments__CHyperlinkClickEventArgs* handler,
        EventRegistrationToken* token);
    HRESULT (STDMETHODCALLTYPE* remove_Click)(__x_ABI_CWindows_CUI_CXaml_CDocuments_CIHyperlink* This,
        EventRegistrationToken token);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CDocuments_CIHyperlinkVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CDocuments_CIHyperlink
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CDocuments_CIHyperlinkVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CDocuments_CIHyperlink;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CDocuments_CIHyperlink_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CDocuments_CIHyperlink2_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CDocuments_CIHyperlink2_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CDocuments_CIHyperlink2Vtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CDocuments_CIHyperlink2* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CDocuments_CIHyperlink2* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CDocuments_CIHyperlink2* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CDocuments_CIHyperlink2* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CDocuments_CIHyperlink2* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CDocuments_CIHyperlink2* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_UnderlineStyle)(__x_ABI_CWindows_CUI_CXaml_CDocuments_CIHyperlink2* This,
        enum __x_ABI_CWindows_CUI_CXaml_CDocuments_CUnderlineStyle* value);
    HRESULT (STDMETHODCALLTYPE* put_UnderlineStyle)(__x_ABI_CWindows_CUI_CXaml_CDocuments_CIHyperlink2* This,
        enum __x_ABI_CWindows_CUI_CXaml_CDocuments_CUnderlineStyle value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CDocuments_CIHyperlink2Vtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CDocuments_CIHyperlink2
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CDocuments_CIHyperlink2Vtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CDocuments_CIHyperlink2;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CDocuments_CIHyperlink2_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CDocuments_CIHyperlink3_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CDocuments_CIHyperlink3_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CDocuments_CIHyperlink3Vtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CDocuments_CIHyperlink3* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CDocuments_CIHyperlink3* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CDocuments_CIHyperlink3* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CDocuments_CIHyperlink3* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CDocuments_CIHyperlink3* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CDocuments_CIHyperlink3* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_XYFocusLeft)(__x_ABI_CWindows_CUI_CXaml_CDocuments_CIHyperlink3* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyObject** value);
    HRESULT (STDMETHODCALLTYPE* put_XYFocusLeft)(__x_ABI_CWindows_CUI_CXaml_CDocuments_CIHyperlink3* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyObject* value);
    HRESULT (STDMETHODCALLTYPE* get_XYFocusRight)(__x_ABI_CWindows_CUI_CXaml_CDocuments_CIHyperlink3* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyObject** value);
    HRESULT (STDMETHODCALLTYPE* put_XYFocusRight)(__x_ABI_CWindows_CUI_CXaml_CDocuments_CIHyperlink3* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyObject* value);
    HRESULT (STDMETHODCALLTYPE* get_XYFocusUp)(__x_ABI_CWindows_CUI_CXaml_CDocuments_CIHyperlink3* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyObject** value);
    HRESULT (STDMETHODCALLTYPE* put_XYFocusUp)(__x_ABI_CWindows_CUI_CXaml_CDocuments_CIHyperlink3* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyObject* value);
    HRESULT (STDMETHODCALLTYPE* get_XYFocusDown)(__x_ABI_CWindows_CUI_CXaml_CDocuments_CIHyperlink3* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyObject** value);
    HRESULT (STDMETHODCALLTYPE* put_XYFocusDown)(__x_ABI_CWindows_CUI_CXaml_CDocuments_CIHyperlink3* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyObject* value);
    HRESULT (STDMETHODCALLTYPE* get_ElementSoundMode)(__x_ABI_CWindows_CUI_CXaml_CDocuments_CIHyperlink3* This,
        enum __x_ABI_CWindows_CUI_CXaml_CElementSoundMode* value);
    HRESULT (STDMETHODCALLTYPE* put_ElementSoundMode)(__x_ABI_CWindows_CUI_CXaml_CDocuments_CIHyperlink3* This,
        enum __x_ABI_CWindows_CUI_CXaml_CElementSoundMode value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CDocuments_CIHyperlink3Vtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CDocuments_CIHyperlink3
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CDocuments_CIHyperlink3Vtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CDocuments_CIHyperlink3;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CDocuments_CIHyperlink3_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CDocuments_CIHyperlink4_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CDocuments_CIHyperlink4_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CDocuments_CIHyperlink4Vtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CDocuments_CIHyperlink4* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CDocuments_CIHyperlink4* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CDocuments_CIHyperlink4* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CDocuments_CIHyperlink4* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CDocuments_CIHyperlink4* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CDocuments_CIHyperlink4* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_FocusState)(__x_ABI_CWindows_CUI_CXaml_CDocuments_CIHyperlink4* This,
        enum __x_ABI_CWindows_CUI_CXaml_CFocusState* value);
    HRESULT (STDMETHODCALLTYPE* get_XYFocusUpNavigationStrategy)(__x_ABI_CWindows_CUI_CXaml_CDocuments_CIHyperlink4* This,
        enum __x_ABI_CWindows_CUI_CXaml_CInput_CXYFocusNavigationStrategy* value);
    HRESULT (STDMETHODCALLTYPE* put_XYFocusUpNavigationStrategy)(__x_ABI_CWindows_CUI_CXaml_CDocuments_CIHyperlink4* This,
        enum __x_ABI_CWindows_CUI_CXaml_CInput_CXYFocusNavigationStrategy value);
    HRESULT (STDMETHODCALLTYPE* get_XYFocusDownNavigationStrategy)(__x_ABI_CWindows_CUI_CXaml_CDocuments_CIHyperlink4* This,
        enum __x_ABI_CWindows_CUI_CXaml_CInput_CXYFocusNavigationStrategy* value);
    HRESULT (STDMETHODCALLTYPE* put_XYFocusDownNavigationStrategy)(__x_ABI_CWindows_CUI_CXaml_CDocuments_CIHyperlink4* This,
        enum __x_ABI_CWindows_CUI_CXaml_CInput_CXYFocusNavigationStrategy value);
    HRESULT (STDMETHODCALLTYPE* get_XYFocusLeftNavigationStrategy)(__x_ABI_CWindows_CUI_CXaml_CDocuments_CIHyperlink4* This,
        enum __x_ABI_CWindows_CUI_CXaml_CInput_CXYFocusNavigationStrategy* value);
    HRESULT (STDMETHODCALLTYPE* put_XYFocusLeftNavigationStrategy)(__x_ABI_CWindows_CUI_CXaml_CDocuments_CIHyperlink4* This,
        enum __x_ABI_CWindows_CUI_CXaml_CInput_CXYFocusNavigationStrategy value);
    HRESULT (STDMETHODCALLTYPE* get_XYFocusRightNavigationStrategy)(__x_ABI_CWindows_CUI_CXaml_CDocuments_CIHyperlink4* This,
        enum __x_ABI_CWindows_CUI_CXaml_CInput_CXYFocusNavigationStrategy* value);
    HRESULT (STDMETHODCALLTYPE* put_XYFocusRightNavigationStrategy)(__x_ABI_CWindows_CUI_CXaml_CDocuments_CIHyperlink4* This,
        enum __x_ABI_CWindows_CUI_CXaml_CInput_CXYFocusNavigationStrategy value);
    HRESULT (STDMETHODCALLTYPE* add_GotFocus)(__x_ABI_CWindows_CUI_CXaml_CDocuments_CIHyperlink4* This,
        __x_ABI_CWindows_CUI_CXaml_CIRoutedEventHandler* handler,
        EventRegistrationToken* token);
    HRESULT (STDMETHODCALLTYPE* remove_GotFocus)(__x_ABI_CWindows_CUI_CXaml_CDocuments_CIHyperlink4* This,
        EventRegistrationToken token);
    HRESULT (STDMETHODCALLTYPE* add_LostFocus)(__x_ABI_CWindows_CUI_CXaml_CDocuments_CIHyperlink4* This,
        __x_ABI_CWindows_CUI_CXaml_CIRoutedEventHandler* handler,
        EventRegistrationToken* token);
    HRESULT (STDMETHODCALLTYPE* remove_LostFocus)(__x_ABI_CWindows_CUI_CXaml_CDocuments_CIHyperlink4* This,
        EventRegistrationToken token);
    HRESULT (STDMETHODCALLTYPE* Focus)(__x_ABI_CWindows_CUI_CXaml_CDocuments_CIHyperlink4* This,
        enum __x_ABI_CWindows_CUI_CXaml_CFocusState value,
        boolean* result);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CDocuments_CIHyperlink4Vtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CDocuments_CIHyperlink4
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CDocuments_CIHyperlink4Vtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CDocuments_CIHyperlink4;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CDocuments_CIHyperlink4_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CDocuments_CIHyperlink5_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CDocuments_CIHyperlink5_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CDocuments_CIHyperlink5Vtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CDocuments_CIHyperlink5* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CDocuments_CIHyperlink5* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CDocuments_CIHyperlink5* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CDocuments_CIHyperlink5* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CDocuments_CIHyperlink5* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CDocuments_CIHyperlink5* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_IsTabStop)(__x_ABI_CWindows_CUI_CXaml_CDocuments_CIHyperlink5* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* put_IsTabStop)(__x_ABI_CWindows_CUI_CXaml_CDocuments_CIHyperlink5* This,
        boolean value);
    HRESULT (STDMETHODCALLTYPE* get_TabIndex)(__x_ABI_CWindows_CUI_CXaml_CDocuments_CIHyperlink5* This,
        INT32* value);
    HRESULT (STDMETHODCALLTYPE* put_TabIndex)(__x_ABI_CWindows_CUI_CXaml_CDocuments_CIHyperlink5* This,
        INT32 value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CDocuments_CIHyperlink5Vtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CDocuments_CIHyperlink5
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CDocuments_CIHyperlink5Vtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CDocuments_CIHyperlink5;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CDocuments_CIHyperlink5_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CDocuments_CIHyperlinkClickEventArgs_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CDocuments_CIHyperlinkClickEventArgs_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CDocuments_CIHyperlinkClickEventArgsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CDocuments_CIHyperlinkClickEventArgs* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CDocuments_CIHyperlinkClickEventArgs* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CDocuments_CIHyperlinkClickEventArgs* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CDocuments_CIHyperlinkClickEventArgs* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CDocuments_CIHyperlinkClickEventArgs* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CDocuments_CIHyperlinkClickEventArgs* This,
            TrustLevel* trustLevel);
    
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CDocuments_CIHyperlinkClickEventArgsVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CDocuments_CIHyperlinkClickEventArgs
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CDocuments_CIHyperlinkClickEventArgsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CDocuments_CIHyperlinkClickEventArgs;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CDocuments_CIHyperlinkClickEventArgs_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CDocuments_CIHyperlinkStatics_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CDocuments_CIHyperlinkStatics_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CDocuments_CIHyperlinkStaticsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CDocuments_CIHyperlinkStatics* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CDocuments_CIHyperlinkStatics* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CDocuments_CIHyperlinkStatics* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CDocuments_CIHyperlinkStatics* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CDocuments_CIHyperlinkStatics* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CDocuments_CIHyperlinkStatics* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_NavigateUriProperty)(__x_ABI_CWindows_CUI_CXaml_CDocuments_CIHyperlinkStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CDocuments_CIHyperlinkStaticsVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CDocuments_CIHyperlinkStatics
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CDocuments_CIHyperlinkStaticsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CDocuments_CIHyperlinkStatics;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CDocuments_CIHyperlinkStatics_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CDocuments_CIHyperlinkStatics2_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CDocuments_CIHyperlinkStatics2_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CDocuments_CIHyperlinkStatics2Vtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CDocuments_CIHyperlinkStatics2* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CDocuments_CIHyperlinkStatics2* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CDocuments_CIHyperlinkStatics2* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CDocuments_CIHyperlinkStatics2* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CDocuments_CIHyperlinkStatics2* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CDocuments_CIHyperlinkStatics2* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_UnderlineStyleProperty)(__x_ABI_CWindows_CUI_CXaml_CDocuments_CIHyperlinkStatics2* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CDocuments_CIHyperlinkStatics2Vtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CDocuments_CIHyperlinkStatics2
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CDocuments_CIHyperlinkStatics2Vtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CDocuments_CIHyperlinkStatics2;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CDocuments_CIHyperlinkStatics2_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CDocuments_CIHyperlinkStatics3_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CDocuments_CIHyperlinkStatics3_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CDocuments_CIHyperlinkStatics3Vtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CDocuments_CIHyperlinkStatics3* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CDocuments_CIHyperlinkStatics3* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CDocuments_CIHyperlinkStatics3* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CDocuments_CIHyperlinkStatics3* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CDocuments_CIHyperlinkStatics3* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CDocuments_CIHyperlinkStatics3* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_XYFocusLeftProperty)(__x_ABI_CWindows_CUI_CXaml_CDocuments_CIHyperlinkStatics3* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_XYFocusRightProperty)(__x_ABI_CWindows_CUI_CXaml_CDocuments_CIHyperlinkStatics3* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_XYFocusUpProperty)(__x_ABI_CWindows_CUI_CXaml_CDocuments_CIHyperlinkStatics3* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_XYFocusDownProperty)(__x_ABI_CWindows_CUI_CXaml_CDocuments_CIHyperlinkStatics3* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_ElementSoundModeProperty)(__x_ABI_CWindows_CUI_CXaml_CDocuments_CIHyperlinkStatics3* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CDocuments_CIHyperlinkStatics3Vtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CDocuments_CIHyperlinkStatics3
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CDocuments_CIHyperlinkStatics3Vtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CDocuments_CIHyperlinkStatics3;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CDocuments_CIHyperlinkStatics3_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CDocuments_CIHyperlinkStatics4_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CDocuments_CIHyperlinkStatics4_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CDocuments_CIHyperlinkStatics4Vtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CDocuments_CIHyperlinkStatics4* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CDocuments_CIHyperlinkStatics4* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CDocuments_CIHyperlinkStatics4* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CDocuments_CIHyperlinkStatics4* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CDocuments_CIHyperlinkStatics4* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CDocuments_CIHyperlinkStatics4* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_FocusStateProperty)(__x_ABI_CWindows_CUI_CXaml_CDocuments_CIHyperlinkStatics4* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_XYFocusUpNavigationStrategyProperty)(__x_ABI_CWindows_CUI_CXaml_CDocuments_CIHyperlinkStatics4* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_XYFocusDownNavigationStrategyProperty)(__x_ABI_CWindows_CUI_CXaml_CDocuments_CIHyperlinkStatics4* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_XYFocusLeftNavigationStrategyProperty)(__x_ABI_CWindows_CUI_CXaml_CDocuments_CIHyperlinkStatics4* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_XYFocusRightNavigationStrategyProperty)(__x_ABI_CWindows_CUI_CXaml_CDocuments_CIHyperlinkStatics4* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CDocuments_CIHyperlinkStatics4Vtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CDocuments_CIHyperlinkStatics4
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CDocuments_CIHyperlinkStatics4Vtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CDocuments_CIHyperlinkStatics4;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CDocuments_CIHyperlinkStatics4_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CDocuments_CIHyperlinkStatics5_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CDocuments_CIHyperlinkStatics5_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CDocuments_CIHyperlinkStatics5Vtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CDocuments_CIHyperlinkStatics5* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CDocuments_CIHyperlinkStatics5* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CDocuments_CIHyperlinkStatics5* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CDocuments_CIHyperlinkStatics5* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CDocuments_CIHyperlinkStatics5* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CDocuments_CIHyperlinkStatics5* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_IsTabStopProperty)(__x_ABI_CWindows_CUI_CXaml_CDocuments_CIHyperlinkStatics5* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_TabIndexProperty)(__x_ABI_CWindows_CUI_CXaml_CDocuments_CIHyperlinkStatics5* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CDocuments_CIHyperlinkStatics5Vtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CDocuments_CIHyperlinkStatics5
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CDocuments_CIHyperlinkStatics5Vtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CDocuments_CIHyperlinkStatics5;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CDocuments_CIHyperlinkStatics5_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CDocuments_CIInline_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CDocuments_CIInline_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CDocuments_CIInlineVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CDocuments_CIInline* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CDocuments_CIInline* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CDocuments_CIInline* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CDocuments_CIInline* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CDocuments_CIInline* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CDocuments_CIInline* This,
            TrustLevel* trustLevel);
    
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CDocuments_CIInlineVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CDocuments_CIInline
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CDocuments_CIInlineVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CDocuments_CIInline;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CDocuments_CIInline_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CDocuments_CIInlineFactory_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CDocuments_CIInlineFactory_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CDocuments_CIInlineFactoryVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CDocuments_CIInlineFactory* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CDocuments_CIInlineFactory* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CDocuments_CIInlineFactory* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CDocuments_CIInlineFactory* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CDocuments_CIInlineFactory* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CDocuments_CIInlineFactory* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* CreateInstance)(__x_ABI_CWindows_CUI_CXaml_CDocuments_CIInlineFactory* This,
        IInspectable* baseInterface,
        IInspectable** innerInterface,
        __x_ABI_CWindows_CUI_CXaml_CDocuments_CIInline** value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CDocuments_CIInlineFactoryVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CDocuments_CIInlineFactory
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CDocuments_CIInlineFactoryVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CDocuments_CIInlineFactory;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CDocuments_CIInlineFactory_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CDocuments_CIInlineUIContainer_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CDocuments_CIInlineUIContainer_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CDocuments_CIInlineUIContainerVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CDocuments_CIInlineUIContainer* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CDocuments_CIInlineUIContainer* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CDocuments_CIInlineUIContainer* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CDocuments_CIInlineUIContainer* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CDocuments_CIInlineUIContainer* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CDocuments_CIInlineUIContainer* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Child)(__x_ABI_CWindows_CUI_CXaml_CDocuments_CIInlineUIContainer* This,
        __x_ABI_CWindows_CUI_CXaml_CIUIElement** value);
    HRESULT (STDMETHODCALLTYPE* put_Child)(__x_ABI_CWindows_CUI_CXaml_CDocuments_CIInlineUIContainer* This,
        __x_ABI_CWindows_CUI_CXaml_CIUIElement* value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CDocuments_CIInlineUIContainerVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CDocuments_CIInlineUIContainer
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CDocuments_CIInlineUIContainerVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CDocuments_CIInlineUIContainer;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CDocuments_CIInlineUIContainer_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CDocuments_CIItalic_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CDocuments_CIItalic_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CDocuments_CIItalicVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CDocuments_CIItalic* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CDocuments_CIItalic* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CDocuments_CIItalic* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CDocuments_CIItalic* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CDocuments_CIItalic* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CDocuments_CIItalic* This,
            TrustLevel* trustLevel);
    
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CDocuments_CIItalicVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CDocuments_CIItalic
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CDocuments_CIItalicVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CDocuments_CIItalic;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CDocuments_CIItalic_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CDocuments_CILineBreak_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CDocuments_CILineBreak_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CDocuments_CILineBreakVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CDocuments_CILineBreak* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CDocuments_CILineBreak* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CDocuments_CILineBreak* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CDocuments_CILineBreak* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CDocuments_CILineBreak* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CDocuments_CILineBreak* This,
            TrustLevel* trustLevel);
    
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CDocuments_CILineBreakVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CDocuments_CILineBreak
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CDocuments_CILineBreakVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CDocuments_CILineBreak;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CDocuments_CILineBreak_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CDocuments_CIParagraph_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CDocuments_CIParagraph_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CDocuments_CIParagraphVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CDocuments_CIParagraph* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CDocuments_CIParagraph* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CDocuments_CIParagraph* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CDocuments_CIParagraph* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CDocuments_CIParagraph* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CDocuments_CIParagraph* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Inlines)(__x_ABI_CWindows_CUI_CXaml_CDocuments_CIParagraph* This,
        __x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CXaml__CDocuments__CInline** value);
    HRESULT (STDMETHODCALLTYPE* get_TextIndent)(__x_ABI_CWindows_CUI_CXaml_CDocuments_CIParagraph* This,
        DOUBLE* value);
    HRESULT (STDMETHODCALLTYPE* put_TextIndent)(__x_ABI_CWindows_CUI_CXaml_CDocuments_CIParagraph* This,
        DOUBLE value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CDocuments_CIParagraphVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CDocuments_CIParagraph
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CDocuments_CIParagraphVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CDocuments_CIParagraph;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CDocuments_CIParagraph_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CDocuments_CIParagraphStatics_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CDocuments_CIParagraphStatics_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CDocuments_CIParagraphStaticsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CDocuments_CIParagraphStatics* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CDocuments_CIParagraphStatics* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CDocuments_CIParagraphStatics* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CDocuments_CIParagraphStatics* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CDocuments_CIParagraphStatics* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CDocuments_CIParagraphStatics* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_TextIndentProperty)(__x_ABI_CWindows_CUI_CXaml_CDocuments_CIParagraphStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CDocuments_CIParagraphStaticsVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CDocuments_CIParagraphStatics
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CDocuments_CIParagraphStaticsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CDocuments_CIParagraphStatics;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CDocuments_CIParagraphStatics_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CDocuments_CIPlaceContentLinkProvider_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CDocuments_CIPlaceContentLinkProvider_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CDocuments_CIPlaceContentLinkProviderVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CDocuments_CIPlaceContentLinkProvider* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CDocuments_CIPlaceContentLinkProvider* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CDocuments_CIPlaceContentLinkProvider* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CDocuments_CIPlaceContentLinkProvider* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CDocuments_CIPlaceContentLinkProvider* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CDocuments_CIPlaceContentLinkProvider* This,
            TrustLevel* trustLevel);
    
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CDocuments_CIPlaceContentLinkProviderVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CDocuments_CIPlaceContentLinkProvider
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CDocuments_CIPlaceContentLinkProviderVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CDocuments_CIPlaceContentLinkProvider;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CDocuments_CIPlaceContentLinkProvider_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CDocuments_CIRun_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CDocuments_CIRun_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CDocuments_CIRunVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CDocuments_CIRun* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CDocuments_CIRun* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CDocuments_CIRun* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CDocuments_CIRun* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CDocuments_CIRun* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CDocuments_CIRun* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Text)(__x_ABI_CWindows_CUI_CXaml_CDocuments_CIRun* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* put_Text)(__x_ABI_CWindows_CUI_CXaml_CDocuments_CIRun* This,
        HSTRING value);
    HRESULT (STDMETHODCALLTYPE* get_FlowDirection)(__x_ABI_CWindows_CUI_CXaml_CDocuments_CIRun* This,
        enum __x_ABI_CWindows_CUI_CXaml_CFlowDirection* value);
    HRESULT (STDMETHODCALLTYPE* put_FlowDirection)(__x_ABI_CWindows_CUI_CXaml_CDocuments_CIRun* This,
        enum __x_ABI_CWindows_CUI_CXaml_CFlowDirection value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CDocuments_CIRunVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CDocuments_CIRun
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CDocuments_CIRunVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CDocuments_CIRun;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CDocuments_CIRun_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CDocuments_CIRunStatics_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CDocuments_CIRunStatics_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CDocuments_CIRunStaticsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CDocuments_CIRunStatics* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CDocuments_CIRunStatics* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CDocuments_CIRunStatics* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CDocuments_CIRunStatics* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CDocuments_CIRunStatics* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CDocuments_CIRunStatics* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_FlowDirectionProperty)(__x_ABI_CWindows_CUI_CXaml_CDocuments_CIRunStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CDocuments_CIRunStaticsVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CDocuments_CIRunStatics
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CDocuments_CIRunStaticsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CDocuments_CIRunStatics;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CDocuments_CIRunStatics_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CDocuments_CISpan_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CDocuments_CISpan_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CDocuments_CISpanVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CDocuments_CISpan* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CDocuments_CISpan* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CDocuments_CISpan* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CDocuments_CISpan* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CDocuments_CISpan* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CDocuments_CISpan* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Inlines)(__x_ABI_CWindows_CUI_CXaml_CDocuments_CISpan* This,
        __x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CXaml__CDocuments__CInline** value);
    HRESULT (STDMETHODCALLTYPE* put_Inlines)(__x_ABI_CWindows_CUI_CXaml_CDocuments_CISpan* This,
        __x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CXaml__CDocuments__CInline* value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CDocuments_CISpanVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CDocuments_CISpan
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CDocuments_CISpanVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CDocuments_CISpan;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CDocuments_CISpan_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CDocuments_CISpanFactory_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CDocuments_CISpanFactory_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CDocuments_CISpanFactoryVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CDocuments_CISpanFactory* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CDocuments_CISpanFactory* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CDocuments_CISpanFactory* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CDocuments_CISpanFactory* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CDocuments_CISpanFactory* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CDocuments_CISpanFactory* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* CreateInstance)(__x_ABI_CWindows_CUI_CXaml_CDocuments_CISpanFactory* This,
        IInspectable* baseInterface,
        IInspectable** innerInterface,
        __x_ABI_CWindows_CUI_CXaml_CDocuments_CISpan** value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CDocuments_CISpanFactoryVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CDocuments_CISpanFactory
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CDocuments_CISpanFactoryVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CDocuments_CISpanFactory;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CDocuments_CISpanFactory_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CDocuments_CITextElement_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CDocuments_CITextElement_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CDocuments_CITextElementVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CDocuments_CITextElement* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CDocuments_CITextElement* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CDocuments_CITextElement* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CDocuments_CITextElement* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CDocuments_CITextElement* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CDocuments_CITextElement* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Name)(__x_ABI_CWindows_CUI_CXaml_CDocuments_CITextElement* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* get_FontSize)(__x_ABI_CWindows_CUI_CXaml_CDocuments_CITextElement* This,
        DOUBLE* value);
    HRESULT (STDMETHODCALLTYPE* put_FontSize)(__x_ABI_CWindows_CUI_CXaml_CDocuments_CITextElement* This,
        DOUBLE value);
    HRESULT (STDMETHODCALLTYPE* get_FontFamily)(__x_ABI_CWindows_CUI_CXaml_CDocuments_CITextElement* This,
        __x_ABI_CWindows_CUI_CXaml_CMedia_CIFontFamily** value);
    HRESULT (STDMETHODCALLTYPE* put_FontFamily)(__x_ABI_CWindows_CUI_CXaml_CDocuments_CITextElement* This,
        __x_ABI_CWindows_CUI_CXaml_CMedia_CIFontFamily* value);
    HRESULT (STDMETHODCALLTYPE* get_FontWeight)(__x_ABI_CWindows_CUI_CXaml_CDocuments_CITextElement* This,
        struct __x_ABI_CWindows_CUI_CText_CFontWeight* value);
    HRESULT (STDMETHODCALLTYPE* put_FontWeight)(__x_ABI_CWindows_CUI_CXaml_CDocuments_CITextElement* This,
        struct __x_ABI_CWindows_CUI_CText_CFontWeight value);
    HRESULT (STDMETHODCALLTYPE* get_FontStyle)(__x_ABI_CWindows_CUI_CXaml_CDocuments_CITextElement* This,
        enum __x_ABI_CWindows_CUI_CText_CFontStyle* value);
    HRESULT (STDMETHODCALLTYPE* put_FontStyle)(__x_ABI_CWindows_CUI_CXaml_CDocuments_CITextElement* This,
        enum __x_ABI_CWindows_CUI_CText_CFontStyle value);
    HRESULT (STDMETHODCALLTYPE* get_FontStretch)(__x_ABI_CWindows_CUI_CXaml_CDocuments_CITextElement* This,
        enum __x_ABI_CWindows_CUI_CText_CFontStretch* value);
    HRESULT (STDMETHODCALLTYPE* put_FontStretch)(__x_ABI_CWindows_CUI_CXaml_CDocuments_CITextElement* This,
        enum __x_ABI_CWindows_CUI_CText_CFontStretch value);
    HRESULT (STDMETHODCALLTYPE* get_CharacterSpacing)(__x_ABI_CWindows_CUI_CXaml_CDocuments_CITextElement* This,
        INT32* value);
    HRESULT (STDMETHODCALLTYPE* put_CharacterSpacing)(__x_ABI_CWindows_CUI_CXaml_CDocuments_CITextElement* This,
        INT32 value);
    HRESULT (STDMETHODCALLTYPE* get_Foreground)(__x_ABI_CWindows_CUI_CXaml_CDocuments_CITextElement* This,
        __x_ABI_CWindows_CUI_CXaml_CMedia_CIBrush** value);
    HRESULT (STDMETHODCALLTYPE* put_Foreground)(__x_ABI_CWindows_CUI_CXaml_CDocuments_CITextElement* This,
        __x_ABI_CWindows_CUI_CXaml_CMedia_CIBrush* value);
    HRESULT (STDMETHODCALLTYPE* get_Language)(__x_ABI_CWindows_CUI_CXaml_CDocuments_CITextElement* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* put_Language)(__x_ABI_CWindows_CUI_CXaml_CDocuments_CITextElement* This,
        HSTRING value);
    HRESULT (STDMETHODCALLTYPE* get_ContentStart)(__x_ABI_CWindows_CUI_CXaml_CDocuments_CITextElement* This,
        __x_ABI_CWindows_CUI_CXaml_CDocuments_CITextPointer** value);
    HRESULT (STDMETHODCALLTYPE* get_ContentEnd)(__x_ABI_CWindows_CUI_CXaml_CDocuments_CITextElement* This,
        __x_ABI_CWindows_CUI_CXaml_CDocuments_CITextPointer** value);
    HRESULT (STDMETHODCALLTYPE* get_ElementStart)(__x_ABI_CWindows_CUI_CXaml_CDocuments_CITextElement* This,
        __x_ABI_CWindows_CUI_CXaml_CDocuments_CITextPointer** value);
    HRESULT (STDMETHODCALLTYPE* get_ElementEnd)(__x_ABI_CWindows_CUI_CXaml_CDocuments_CITextElement* This,
        __x_ABI_CWindows_CUI_CXaml_CDocuments_CITextPointer** value);
    HRESULT (STDMETHODCALLTYPE* FindName)(__x_ABI_CWindows_CUI_CXaml_CDocuments_CITextElement* This,
        HSTRING name,
        IInspectable** result);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CDocuments_CITextElementVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CDocuments_CITextElement
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CDocuments_CITextElementVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CDocuments_CITextElement;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CDocuments_CITextElement_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CDocuments_CITextElement2_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CDocuments_CITextElement2_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CDocuments_CITextElement2Vtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CDocuments_CITextElement2* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CDocuments_CITextElement2* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CDocuments_CITextElement2* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CDocuments_CITextElement2* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CDocuments_CITextElement2* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CDocuments_CITextElement2* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_IsTextScaleFactorEnabled)(__x_ABI_CWindows_CUI_CXaml_CDocuments_CITextElement2* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* put_IsTextScaleFactorEnabled)(__x_ABI_CWindows_CUI_CXaml_CDocuments_CITextElement2* This,
        boolean value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CDocuments_CITextElement2Vtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CDocuments_CITextElement2
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CDocuments_CITextElement2Vtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CDocuments_CITextElement2;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CDocuments_CITextElement2_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CDocuments_CITextElement3_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CDocuments_CITextElement3_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CDocuments_CITextElement3Vtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CDocuments_CITextElement3* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CDocuments_CITextElement3* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CDocuments_CITextElement3* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CDocuments_CITextElement3* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CDocuments_CITextElement3* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CDocuments_CITextElement3* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_AllowFocusOnInteraction)(__x_ABI_CWindows_CUI_CXaml_CDocuments_CITextElement3* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* put_AllowFocusOnInteraction)(__x_ABI_CWindows_CUI_CXaml_CDocuments_CITextElement3* This,
        boolean value);
    HRESULT (STDMETHODCALLTYPE* get_AccessKey)(__x_ABI_CWindows_CUI_CXaml_CDocuments_CITextElement3* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* put_AccessKey)(__x_ABI_CWindows_CUI_CXaml_CDocuments_CITextElement3* This,
        HSTRING value);
    HRESULT (STDMETHODCALLTYPE* get_ExitDisplayModeOnAccessKeyInvoked)(__x_ABI_CWindows_CUI_CXaml_CDocuments_CITextElement3* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* put_ExitDisplayModeOnAccessKeyInvoked)(__x_ABI_CWindows_CUI_CXaml_CDocuments_CITextElement3* This,
        boolean value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CDocuments_CITextElement3Vtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CDocuments_CITextElement3
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CDocuments_CITextElement3Vtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CDocuments_CITextElement3;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CDocuments_CITextElement3_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CDocuments_CITextElement4_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CDocuments_CITextElement4_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CDocuments_CITextElement4Vtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CDocuments_CITextElement4* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CDocuments_CITextElement4* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CDocuments_CITextElement4* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CDocuments_CITextElement4* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CDocuments_CITextElement4* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CDocuments_CITextElement4* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_TextDecorations)(__x_ABI_CWindows_CUI_CXaml_CDocuments_CITextElement4* This,
        enum __x_ABI_CWindows_CUI_CText_CTextDecorations* value);
    HRESULT (STDMETHODCALLTYPE* put_TextDecorations)(__x_ABI_CWindows_CUI_CXaml_CDocuments_CITextElement4* This,
        enum __x_ABI_CWindows_CUI_CText_CTextDecorations value);
    HRESULT (STDMETHODCALLTYPE* get_IsAccessKeyScope)(__x_ABI_CWindows_CUI_CXaml_CDocuments_CITextElement4* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* put_IsAccessKeyScope)(__x_ABI_CWindows_CUI_CXaml_CDocuments_CITextElement4* This,
        boolean value);
    HRESULT (STDMETHODCALLTYPE* get_AccessKeyScopeOwner)(__x_ABI_CWindows_CUI_CXaml_CDocuments_CITextElement4* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyObject** value);
    HRESULT (STDMETHODCALLTYPE* put_AccessKeyScopeOwner)(__x_ABI_CWindows_CUI_CXaml_CDocuments_CITextElement4* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyObject* value);
    HRESULT (STDMETHODCALLTYPE* get_KeyTipPlacementMode)(__x_ABI_CWindows_CUI_CXaml_CDocuments_CITextElement4* This,
        enum __x_ABI_CWindows_CUI_CXaml_CInput_CKeyTipPlacementMode* value);
    HRESULT (STDMETHODCALLTYPE* put_KeyTipPlacementMode)(__x_ABI_CWindows_CUI_CXaml_CDocuments_CITextElement4* This,
        enum __x_ABI_CWindows_CUI_CXaml_CInput_CKeyTipPlacementMode value);
    HRESULT (STDMETHODCALLTYPE* get_KeyTipHorizontalOffset)(__x_ABI_CWindows_CUI_CXaml_CDocuments_CITextElement4* This,
        DOUBLE* value);
    HRESULT (STDMETHODCALLTYPE* put_KeyTipHorizontalOffset)(__x_ABI_CWindows_CUI_CXaml_CDocuments_CITextElement4* This,
        DOUBLE value);
    HRESULT (STDMETHODCALLTYPE* get_KeyTipVerticalOffset)(__x_ABI_CWindows_CUI_CXaml_CDocuments_CITextElement4* This,
        DOUBLE* value);
    HRESULT (STDMETHODCALLTYPE* put_KeyTipVerticalOffset)(__x_ABI_CWindows_CUI_CXaml_CDocuments_CITextElement4* This,
        DOUBLE value);
    HRESULT (STDMETHODCALLTYPE* add_AccessKeyDisplayRequested)(__x_ABI_CWindows_CUI_CXaml_CDocuments_CITextElement4* This,
        __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CDocuments__CTextElement___x_ABI_CWindows__CUI__CXaml__CInput__CAccessKeyDisplayRequestedEventArgs* handler,
        EventRegistrationToken* token);
    HRESULT (STDMETHODCALLTYPE* remove_AccessKeyDisplayRequested)(__x_ABI_CWindows_CUI_CXaml_CDocuments_CITextElement4* This,
        EventRegistrationToken token);
    HRESULT (STDMETHODCALLTYPE* add_AccessKeyDisplayDismissed)(__x_ABI_CWindows_CUI_CXaml_CDocuments_CITextElement4* This,
        __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CDocuments__CTextElement___x_ABI_CWindows__CUI__CXaml__CInput__CAccessKeyDisplayDismissedEventArgs* handler,
        EventRegistrationToken* token);
    HRESULT (STDMETHODCALLTYPE* remove_AccessKeyDisplayDismissed)(__x_ABI_CWindows_CUI_CXaml_CDocuments_CITextElement4* This,
        EventRegistrationToken token);
    HRESULT (STDMETHODCALLTYPE* add_AccessKeyInvoked)(__x_ABI_CWindows_CUI_CXaml_CDocuments_CITextElement4* This,
        __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CDocuments__CTextElement___x_ABI_CWindows__CUI__CXaml__CInput__CAccessKeyInvokedEventArgs* handler,
        EventRegistrationToken* token);
    HRESULT (STDMETHODCALLTYPE* remove_AccessKeyInvoked)(__x_ABI_CWindows_CUI_CXaml_CDocuments_CITextElement4* This,
        EventRegistrationToken token);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CDocuments_CITextElement4Vtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CDocuments_CITextElement4
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CDocuments_CITextElement4Vtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CDocuments_CITextElement4;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CDocuments_CITextElement4_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CDocuments_CITextElement5_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CDocuments_CITextElement5_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CDocuments_CITextElement5Vtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CDocuments_CITextElement5* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CDocuments_CITextElement5* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CDocuments_CITextElement5* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CDocuments_CITextElement5* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CDocuments_CITextElement5* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CDocuments_CITextElement5* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_XamlRoot)(__x_ABI_CWindows_CUI_CXaml_CDocuments_CITextElement5* This,
        __x_ABI_CWindows_CUI_CXaml_CIXamlRoot** value);
    HRESULT (STDMETHODCALLTYPE* put_XamlRoot)(__x_ABI_CWindows_CUI_CXaml_CDocuments_CITextElement5* This,
        __x_ABI_CWindows_CUI_CXaml_CIXamlRoot* value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CDocuments_CITextElement5Vtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CDocuments_CITextElement5
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CDocuments_CITextElement5Vtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CDocuments_CITextElement5;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CDocuments_CITextElement5_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CDocuments_CITextElementFactory_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CDocuments_CITextElementFactory_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CDocuments_CITextElementFactoryVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CDocuments_CITextElementFactory* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CDocuments_CITextElementFactory* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CDocuments_CITextElementFactory* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CDocuments_CITextElementFactory* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CDocuments_CITextElementFactory* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CDocuments_CITextElementFactory* This,
            TrustLevel* trustLevel);
    
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CDocuments_CITextElementFactoryVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CDocuments_CITextElementFactory
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CDocuments_CITextElementFactoryVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CDocuments_CITextElementFactory;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CDocuments_CITextElementFactory_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CDocuments_CITextElementOverrides_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CDocuments_CITextElementOverrides_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CDocuments_CITextElementOverridesVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CDocuments_CITextElementOverrides* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CDocuments_CITextElementOverrides* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CDocuments_CITextElementOverrides* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CDocuments_CITextElementOverrides* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CDocuments_CITextElementOverrides* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CDocuments_CITextElementOverrides* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* OnDisconnectVisualChildren)(__x_ABI_CWindows_CUI_CXaml_CDocuments_CITextElementOverrides* This);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CDocuments_CITextElementOverridesVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CDocuments_CITextElementOverrides
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CDocuments_CITextElementOverridesVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CDocuments_CITextElementOverrides;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CDocuments_CITextElementOverrides_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CDocuments_CITextElementStatics_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CDocuments_CITextElementStatics_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CDocuments_CITextElementStaticsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CDocuments_CITextElementStatics* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CDocuments_CITextElementStatics* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CDocuments_CITextElementStatics* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CDocuments_CITextElementStatics* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CDocuments_CITextElementStatics* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CDocuments_CITextElementStatics* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_FontSizeProperty)(__x_ABI_CWindows_CUI_CXaml_CDocuments_CITextElementStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_FontFamilyProperty)(__x_ABI_CWindows_CUI_CXaml_CDocuments_CITextElementStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_FontWeightProperty)(__x_ABI_CWindows_CUI_CXaml_CDocuments_CITextElementStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_FontStyleProperty)(__x_ABI_CWindows_CUI_CXaml_CDocuments_CITextElementStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_FontStretchProperty)(__x_ABI_CWindows_CUI_CXaml_CDocuments_CITextElementStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_CharacterSpacingProperty)(__x_ABI_CWindows_CUI_CXaml_CDocuments_CITextElementStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_ForegroundProperty)(__x_ABI_CWindows_CUI_CXaml_CDocuments_CITextElementStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_LanguageProperty)(__x_ABI_CWindows_CUI_CXaml_CDocuments_CITextElementStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CDocuments_CITextElementStaticsVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CDocuments_CITextElementStatics
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CDocuments_CITextElementStaticsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CDocuments_CITextElementStatics;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CDocuments_CITextElementStatics_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CDocuments_CITextElementStatics2_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CDocuments_CITextElementStatics2_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CDocuments_CITextElementStatics2Vtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CDocuments_CITextElementStatics2* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CDocuments_CITextElementStatics2* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CDocuments_CITextElementStatics2* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CDocuments_CITextElementStatics2* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CDocuments_CITextElementStatics2* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CDocuments_CITextElementStatics2* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_IsTextScaleFactorEnabledProperty)(__x_ABI_CWindows_CUI_CXaml_CDocuments_CITextElementStatics2* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CDocuments_CITextElementStatics2Vtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CDocuments_CITextElementStatics2
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CDocuments_CITextElementStatics2Vtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CDocuments_CITextElementStatics2;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CDocuments_CITextElementStatics2_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CDocuments_CITextElementStatics3_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CDocuments_CITextElementStatics3_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CDocuments_CITextElementStatics3Vtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CDocuments_CITextElementStatics3* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CDocuments_CITextElementStatics3* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CDocuments_CITextElementStatics3* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CDocuments_CITextElementStatics3* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CDocuments_CITextElementStatics3* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CDocuments_CITextElementStatics3* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_AllowFocusOnInteractionProperty)(__x_ABI_CWindows_CUI_CXaml_CDocuments_CITextElementStatics3* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_AccessKeyProperty)(__x_ABI_CWindows_CUI_CXaml_CDocuments_CITextElementStatics3* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_ExitDisplayModeOnAccessKeyInvokedProperty)(__x_ABI_CWindows_CUI_CXaml_CDocuments_CITextElementStatics3* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CDocuments_CITextElementStatics3Vtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CDocuments_CITextElementStatics3
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CDocuments_CITextElementStatics3Vtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CDocuments_CITextElementStatics3;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CDocuments_CITextElementStatics3_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CDocuments_CITextElementStatics4_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CDocuments_CITextElementStatics4_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CDocuments_CITextElementStatics4Vtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CDocuments_CITextElementStatics4* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CDocuments_CITextElementStatics4* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CDocuments_CITextElementStatics4* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CDocuments_CITextElementStatics4* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CDocuments_CITextElementStatics4* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CDocuments_CITextElementStatics4* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_TextDecorationsProperty)(__x_ABI_CWindows_CUI_CXaml_CDocuments_CITextElementStatics4* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_IsAccessKeyScopeProperty)(__x_ABI_CWindows_CUI_CXaml_CDocuments_CITextElementStatics4* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_AccessKeyScopeOwnerProperty)(__x_ABI_CWindows_CUI_CXaml_CDocuments_CITextElementStatics4* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_KeyTipPlacementModeProperty)(__x_ABI_CWindows_CUI_CXaml_CDocuments_CITextElementStatics4* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_KeyTipHorizontalOffsetProperty)(__x_ABI_CWindows_CUI_CXaml_CDocuments_CITextElementStatics4* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_KeyTipVerticalOffsetProperty)(__x_ABI_CWindows_CUI_CXaml_CDocuments_CITextElementStatics4* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CDocuments_CITextElementStatics4Vtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CDocuments_CITextElementStatics4
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CDocuments_CITextElementStatics4Vtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CDocuments_CITextElementStatics4;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CDocuments_CITextElementStatics4_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CDocuments_CITextHighlighter_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CDocuments_CITextHighlighter_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CDocuments_CITextHighlighterVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CDocuments_CITextHighlighter* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CDocuments_CITextHighlighter* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CDocuments_CITextHighlighter* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CDocuments_CITextHighlighter* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CDocuments_CITextHighlighter* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CDocuments_CITextHighlighter* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Ranges)(__x_ABI_CWindows_CUI_CXaml_CDocuments_CITextHighlighter* This,
        __x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CXaml__CDocuments__CTextRange** value);
    HRESULT (STDMETHODCALLTYPE* get_Foreground)(__x_ABI_CWindows_CUI_CXaml_CDocuments_CITextHighlighter* This,
        __x_ABI_CWindows_CUI_CXaml_CMedia_CIBrush** value);
    HRESULT (STDMETHODCALLTYPE* put_Foreground)(__x_ABI_CWindows_CUI_CXaml_CDocuments_CITextHighlighter* This,
        __x_ABI_CWindows_CUI_CXaml_CMedia_CIBrush* value);
    HRESULT (STDMETHODCALLTYPE* get_Background)(__x_ABI_CWindows_CUI_CXaml_CDocuments_CITextHighlighter* This,
        __x_ABI_CWindows_CUI_CXaml_CMedia_CIBrush** value);
    HRESULT (STDMETHODCALLTYPE* put_Background)(__x_ABI_CWindows_CUI_CXaml_CDocuments_CITextHighlighter* This,
        __x_ABI_CWindows_CUI_CXaml_CMedia_CIBrush* value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CDocuments_CITextHighlighterVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CDocuments_CITextHighlighter
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CDocuments_CITextHighlighterVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CDocuments_CITextHighlighter;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CDocuments_CITextHighlighter_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CDocuments_CITextHighlighterBase_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CDocuments_CITextHighlighterBase_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CDocuments_CITextHighlighterBaseVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CDocuments_CITextHighlighterBase* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CDocuments_CITextHighlighterBase* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CDocuments_CITextHighlighterBase* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CDocuments_CITextHighlighterBase* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CDocuments_CITextHighlighterBase* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CDocuments_CITextHighlighterBase* This,
            TrustLevel* trustLevel);
    
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CDocuments_CITextHighlighterBaseVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CDocuments_CITextHighlighterBase
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CDocuments_CITextHighlighterBaseVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CDocuments_CITextHighlighterBase;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CDocuments_CITextHighlighterBase_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CDocuments_CITextHighlighterBaseFactory_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CDocuments_CITextHighlighterBaseFactory_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CDocuments_CITextHighlighterBaseFactoryVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CDocuments_CITextHighlighterBaseFactory* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CDocuments_CITextHighlighterBaseFactory* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CDocuments_CITextHighlighterBaseFactory* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CDocuments_CITextHighlighterBaseFactory* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CDocuments_CITextHighlighterBaseFactory* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CDocuments_CITextHighlighterBaseFactory* This,
            TrustLevel* trustLevel);
    
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CDocuments_CITextHighlighterBaseFactoryVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CDocuments_CITextHighlighterBaseFactory
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CDocuments_CITextHighlighterBaseFactoryVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CDocuments_CITextHighlighterBaseFactory;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CDocuments_CITextHighlighterBaseFactory_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CDocuments_CITextHighlighterFactory_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CDocuments_CITextHighlighterFactory_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CDocuments_CITextHighlighterFactoryVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CDocuments_CITextHighlighterFactory* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CDocuments_CITextHighlighterFactory* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CDocuments_CITextHighlighterFactory* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CDocuments_CITextHighlighterFactory* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CDocuments_CITextHighlighterFactory* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CDocuments_CITextHighlighterFactory* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* CreateInstance)(__x_ABI_CWindows_CUI_CXaml_CDocuments_CITextHighlighterFactory* This,
        IInspectable* baseInterface,
        IInspectable** innerInterface,
        __x_ABI_CWindows_CUI_CXaml_CDocuments_CITextHighlighter** value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CDocuments_CITextHighlighterFactoryVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CDocuments_CITextHighlighterFactory
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CDocuments_CITextHighlighterFactoryVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CDocuments_CITextHighlighterFactory;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CDocuments_CITextHighlighterFactory_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CDocuments_CITextHighlighterStatics_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CDocuments_CITextHighlighterStatics_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CDocuments_CITextHighlighterStaticsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CDocuments_CITextHighlighterStatics* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CDocuments_CITextHighlighterStatics* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CDocuments_CITextHighlighterStatics* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CDocuments_CITextHighlighterStatics* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CDocuments_CITextHighlighterStatics* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CDocuments_CITextHighlighterStatics* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_ForegroundProperty)(__x_ABI_CWindows_CUI_CXaml_CDocuments_CITextHighlighterStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_BackgroundProperty)(__x_ABI_CWindows_CUI_CXaml_CDocuments_CITextHighlighterStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CDocuments_CITextHighlighterStaticsVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CDocuments_CITextHighlighterStatics
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CDocuments_CITextHighlighterStaticsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CDocuments_CITextHighlighterStatics;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CDocuments_CITextHighlighterStatics_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CDocuments_CITextPointer_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CDocuments_CITextPointer_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CDocuments_CITextPointerVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CDocuments_CITextPointer* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CDocuments_CITextPointer* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CDocuments_CITextPointer* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CDocuments_CITextPointer* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CDocuments_CITextPointer* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CDocuments_CITextPointer* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Parent)(__x_ABI_CWindows_CUI_CXaml_CDocuments_CITextPointer* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyObject** value);
    HRESULT (STDMETHODCALLTYPE* get_VisualParent)(__x_ABI_CWindows_CUI_CXaml_CDocuments_CITextPointer* This,
        __x_ABI_CWindows_CUI_CXaml_CIFrameworkElement** value);
    HRESULT (STDMETHODCALLTYPE* get_LogicalDirection)(__x_ABI_CWindows_CUI_CXaml_CDocuments_CITextPointer* This,
        enum __x_ABI_CWindows_CUI_CXaml_CDocuments_CLogicalDirection* value);
    HRESULT (STDMETHODCALLTYPE* get_Offset)(__x_ABI_CWindows_CUI_CXaml_CDocuments_CITextPointer* This,
        INT32* value);
    HRESULT (STDMETHODCALLTYPE* GetCharacterRect)(__x_ABI_CWindows_CUI_CXaml_CDocuments_CITextPointer* This,
        enum __x_ABI_CWindows_CUI_CXaml_CDocuments_CLogicalDirection direction,
        struct __x_ABI_CWindows_CFoundation_CRect* result);
    HRESULT (STDMETHODCALLTYPE* GetPositionAtOffset)(__x_ABI_CWindows_CUI_CXaml_CDocuments_CITextPointer* This,
        INT32 offset,
        enum __x_ABI_CWindows_CUI_CXaml_CDocuments_CLogicalDirection direction,
        __x_ABI_CWindows_CUI_CXaml_CDocuments_CITextPointer** result);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CDocuments_CITextPointerVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CDocuments_CITextPointer
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CDocuments_CITextPointerVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CDocuments_CITextPointer;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CDocuments_CITextPointer_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CDocuments_CITypography_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CDocuments_CITypography_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CDocuments_CITypographyVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CDocuments_CITypography* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CDocuments_CITypography* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CDocuments_CITypography* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CDocuments_CITypography* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CDocuments_CITypography* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CDocuments_CITypography* This,
            TrustLevel* trustLevel);
    
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CDocuments_CITypographyVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CDocuments_CITypography
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CDocuments_CITypographyVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CDocuments_CITypography;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CDocuments_CITypography_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CDocuments_CITypographyStatics_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CDocuments_CITypographyStatics_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CDocuments_CITypographyStaticsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CDocuments_CITypographyStatics* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CDocuments_CITypographyStatics* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CDocuments_CITypographyStatics* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CDocuments_CITypographyStatics* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CDocuments_CITypographyStatics* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CDocuments_CITypographyStatics* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_AnnotationAlternatesProperty)(__x_ABI_CWindows_CUI_CXaml_CDocuments_CITypographyStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* GetAnnotationAlternates)(__x_ABI_CWindows_CUI_CXaml_CDocuments_CITypographyStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyObject* element,
        INT32* result);
    HRESULT (STDMETHODCALLTYPE* SetAnnotationAlternates)(__x_ABI_CWindows_CUI_CXaml_CDocuments_CITypographyStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyObject* element,
        INT32 value);
    HRESULT (STDMETHODCALLTYPE* get_EastAsianExpertFormsProperty)(__x_ABI_CWindows_CUI_CXaml_CDocuments_CITypographyStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* GetEastAsianExpertForms)(__x_ABI_CWindows_CUI_CXaml_CDocuments_CITypographyStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyObject* element,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* SetEastAsianExpertForms)(__x_ABI_CWindows_CUI_CXaml_CDocuments_CITypographyStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyObject* element,
        boolean value);
    HRESULT (STDMETHODCALLTYPE* get_EastAsianLanguageProperty)(__x_ABI_CWindows_CUI_CXaml_CDocuments_CITypographyStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* GetEastAsianLanguage)(__x_ABI_CWindows_CUI_CXaml_CDocuments_CITypographyStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyObject* element,
        enum __x_ABI_CWindows_CUI_CXaml_CFontEastAsianLanguage* result);
    HRESULT (STDMETHODCALLTYPE* SetEastAsianLanguage)(__x_ABI_CWindows_CUI_CXaml_CDocuments_CITypographyStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyObject* element,
        enum __x_ABI_CWindows_CUI_CXaml_CFontEastAsianLanguage value);
    HRESULT (STDMETHODCALLTYPE* get_EastAsianWidthsProperty)(__x_ABI_CWindows_CUI_CXaml_CDocuments_CITypographyStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* GetEastAsianWidths)(__x_ABI_CWindows_CUI_CXaml_CDocuments_CITypographyStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyObject* element,
        enum __x_ABI_CWindows_CUI_CXaml_CFontEastAsianWidths* result);
    HRESULT (STDMETHODCALLTYPE* SetEastAsianWidths)(__x_ABI_CWindows_CUI_CXaml_CDocuments_CITypographyStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyObject* element,
        enum __x_ABI_CWindows_CUI_CXaml_CFontEastAsianWidths value);
    HRESULT (STDMETHODCALLTYPE* get_StandardLigaturesProperty)(__x_ABI_CWindows_CUI_CXaml_CDocuments_CITypographyStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* GetStandardLigatures)(__x_ABI_CWindows_CUI_CXaml_CDocuments_CITypographyStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyObject* element,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* SetStandardLigatures)(__x_ABI_CWindows_CUI_CXaml_CDocuments_CITypographyStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyObject* element,
        boolean value);
    HRESULT (STDMETHODCALLTYPE* get_ContextualLigaturesProperty)(__x_ABI_CWindows_CUI_CXaml_CDocuments_CITypographyStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* GetContextualLigatures)(__x_ABI_CWindows_CUI_CXaml_CDocuments_CITypographyStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyObject* element,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* SetContextualLigatures)(__x_ABI_CWindows_CUI_CXaml_CDocuments_CITypographyStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyObject* element,
        boolean value);
    HRESULT (STDMETHODCALLTYPE* get_DiscretionaryLigaturesProperty)(__x_ABI_CWindows_CUI_CXaml_CDocuments_CITypographyStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* GetDiscretionaryLigatures)(__x_ABI_CWindows_CUI_CXaml_CDocuments_CITypographyStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyObject* element,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* SetDiscretionaryLigatures)(__x_ABI_CWindows_CUI_CXaml_CDocuments_CITypographyStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyObject* element,
        boolean value);
    HRESULT (STDMETHODCALLTYPE* get_HistoricalLigaturesProperty)(__x_ABI_CWindows_CUI_CXaml_CDocuments_CITypographyStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* GetHistoricalLigatures)(__x_ABI_CWindows_CUI_CXaml_CDocuments_CITypographyStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyObject* element,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* SetHistoricalLigatures)(__x_ABI_CWindows_CUI_CXaml_CDocuments_CITypographyStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyObject* element,
        boolean value);
    HRESULT (STDMETHODCALLTYPE* get_StandardSwashesProperty)(__x_ABI_CWindows_CUI_CXaml_CDocuments_CITypographyStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* GetStandardSwashes)(__x_ABI_CWindows_CUI_CXaml_CDocuments_CITypographyStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyObject* element,
        INT32* result);
    HRESULT (STDMETHODCALLTYPE* SetStandardSwashes)(__x_ABI_CWindows_CUI_CXaml_CDocuments_CITypographyStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyObject* element,
        INT32 value);
    HRESULT (STDMETHODCALLTYPE* get_ContextualSwashesProperty)(__x_ABI_CWindows_CUI_CXaml_CDocuments_CITypographyStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* GetContextualSwashes)(__x_ABI_CWindows_CUI_CXaml_CDocuments_CITypographyStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyObject* element,
        INT32* result);
    HRESULT (STDMETHODCALLTYPE* SetContextualSwashes)(__x_ABI_CWindows_CUI_CXaml_CDocuments_CITypographyStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyObject* element,
        INT32 value);
    HRESULT (STDMETHODCALLTYPE* get_ContextualAlternatesProperty)(__x_ABI_CWindows_CUI_CXaml_CDocuments_CITypographyStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* GetContextualAlternates)(__x_ABI_CWindows_CUI_CXaml_CDocuments_CITypographyStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyObject* element,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* SetContextualAlternates)(__x_ABI_CWindows_CUI_CXaml_CDocuments_CITypographyStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyObject* element,
        boolean value);
    HRESULT (STDMETHODCALLTYPE* get_StylisticAlternatesProperty)(__x_ABI_CWindows_CUI_CXaml_CDocuments_CITypographyStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* GetStylisticAlternates)(__x_ABI_CWindows_CUI_CXaml_CDocuments_CITypographyStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyObject* element,
        INT32* result);
    HRESULT (STDMETHODCALLTYPE* SetStylisticAlternates)(__x_ABI_CWindows_CUI_CXaml_CDocuments_CITypographyStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyObject* element,
        INT32 value);
    HRESULT (STDMETHODCALLTYPE* get_StylisticSet1Property)(__x_ABI_CWindows_CUI_CXaml_CDocuments_CITypographyStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* GetStylisticSet1)(__x_ABI_CWindows_CUI_CXaml_CDocuments_CITypographyStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyObject* element,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* SetStylisticSet1)(__x_ABI_CWindows_CUI_CXaml_CDocuments_CITypographyStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyObject* element,
        boolean value);
    HRESULT (STDMETHODCALLTYPE* get_StylisticSet2Property)(__x_ABI_CWindows_CUI_CXaml_CDocuments_CITypographyStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* GetStylisticSet2)(__x_ABI_CWindows_CUI_CXaml_CDocuments_CITypographyStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyObject* element,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* SetStylisticSet2)(__x_ABI_CWindows_CUI_CXaml_CDocuments_CITypographyStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyObject* element,
        boolean value);
    HRESULT (STDMETHODCALLTYPE* get_StylisticSet3Property)(__x_ABI_CWindows_CUI_CXaml_CDocuments_CITypographyStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* GetStylisticSet3)(__x_ABI_CWindows_CUI_CXaml_CDocuments_CITypographyStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyObject* element,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* SetStylisticSet3)(__x_ABI_CWindows_CUI_CXaml_CDocuments_CITypographyStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyObject* element,
        boolean value);
    HRESULT (STDMETHODCALLTYPE* get_StylisticSet4Property)(__x_ABI_CWindows_CUI_CXaml_CDocuments_CITypographyStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* GetStylisticSet4)(__x_ABI_CWindows_CUI_CXaml_CDocuments_CITypographyStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyObject* element,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* SetStylisticSet4)(__x_ABI_CWindows_CUI_CXaml_CDocuments_CITypographyStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyObject* element,
        boolean value);
    HRESULT (STDMETHODCALLTYPE* get_StylisticSet5Property)(__x_ABI_CWindows_CUI_CXaml_CDocuments_CITypographyStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* GetStylisticSet5)(__x_ABI_CWindows_CUI_CXaml_CDocuments_CITypographyStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyObject* element,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* SetStylisticSet5)(__x_ABI_CWindows_CUI_CXaml_CDocuments_CITypographyStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyObject* element,
        boolean value);
    HRESULT (STDMETHODCALLTYPE* get_StylisticSet6Property)(__x_ABI_CWindows_CUI_CXaml_CDocuments_CITypographyStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* GetStylisticSet6)(__x_ABI_CWindows_CUI_CXaml_CDocuments_CITypographyStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyObject* element,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* SetStylisticSet6)(__x_ABI_CWindows_CUI_CXaml_CDocuments_CITypographyStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyObject* element,
        boolean value);
    HRESULT (STDMETHODCALLTYPE* get_StylisticSet7Property)(__x_ABI_CWindows_CUI_CXaml_CDocuments_CITypographyStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* GetStylisticSet7)(__x_ABI_CWindows_CUI_CXaml_CDocuments_CITypographyStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyObject* element,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* SetStylisticSet7)(__x_ABI_CWindows_CUI_CXaml_CDocuments_CITypographyStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyObject* element,
        boolean value);
    HRESULT (STDMETHODCALLTYPE* get_StylisticSet8Property)(__x_ABI_CWindows_CUI_CXaml_CDocuments_CITypographyStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* GetStylisticSet8)(__x_ABI_CWindows_CUI_CXaml_CDocuments_CITypographyStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyObject* element,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* SetStylisticSet8)(__x_ABI_CWindows_CUI_CXaml_CDocuments_CITypographyStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyObject* element,
        boolean value);
    HRESULT (STDMETHODCALLTYPE* get_StylisticSet9Property)(__x_ABI_CWindows_CUI_CXaml_CDocuments_CITypographyStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* GetStylisticSet9)(__x_ABI_CWindows_CUI_CXaml_CDocuments_CITypographyStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyObject* element,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* SetStylisticSet9)(__x_ABI_CWindows_CUI_CXaml_CDocuments_CITypographyStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyObject* element,
        boolean value);
    HRESULT (STDMETHODCALLTYPE* get_StylisticSet10Property)(__x_ABI_CWindows_CUI_CXaml_CDocuments_CITypographyStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* GetStylisticSet10)(__x_ABI_CWindows_CUI_CXaml_CDocuments_CITypographyStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyObject* element,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* SetStylisticSet10)(__x_ABI_CWindows_CUI_CXaml_CDocuments_CITypographyStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyObject* element,
        boolean value);
    HRESULT (STDMETHODCALLTYPE* get_StylisticSet11Property)(__x_ABI_CWindows_CUI_CXaml_CDocuments_CITypographyStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* GetStylisticSet11)(__x_ABI_CWindows_CUI_CXaml_CDocuments_CITypographyStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyObject* element,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* SetStylisticSet11)(__x_ABI_CWindows_CUI_CXaml_CDocuments_CITypographyStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyObject* element,
        boolean value);
    HRESULT (STDMETHODCALLTYPE* get_StylisticSet12Property)(__x_ABI_CWindows_CUI_CXaml_CDocuments_CITypographyStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* GetStylisticSet12)(__x_ABI_CWindows_CUI_CXaml_CDocuments_CITypographyStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyObject* element,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* SetStylisticSet12)(__x_ABI_CWindows_CUI_CXaml_CDocuments_CITypographyStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyObject* element,
        boolean value);
    HRESULT (STDMETHODCALLTYPE* get_StylisticSet13Property)(__x_ABI_CWindows_CUI_CXaml_CDocuments_CITypographyStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* GetStylisticSet13)(__x_ABI_CWindows_CUI_CXaml_CDocuments_CITypographyStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyObject* element,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* SetStylisticSet13)(__x_ABI_CWindows_CUI_CXaml_CDocuments_CITypographyStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyObject* element,
        boolean value);
    HRESULT (STDMETHODCALLTYPE* get_StylisticSet14Property)(__x_ABI_CWindows_CUI_CXaml_CDocuments_CITypographyStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* GetStylisticSet14)(__x_ABI_CWindows_CUI_CXaml_CDocuments_CITypographyStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyObject* element,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* SetStylisticSet14)(__x_ABI_CWindows_CUI_CXaml_CDocuments_CITypographyStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyObject* element,
        boolean value);
    HRESULT (STDMETHODCALLTYPE* get_StylisticSet15Property)(__x_ABI_CWindows_CUI_CXaml_CDocuments_CITypographyStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* GetStylisticSet15)(__x_ABI_CWindows_CUI_CXaml_CDocuments_CITypographyStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyObject* element,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* SetStylisticSet15)(__x_ABI_CWindows_CUI_CXaml_CDocuments_CITypographyStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyObject* element,
        boolean value);
    HRESULT (STDMETHODCALLTYPE* get_StylisticSet16Property)(__x_ABI_CWindows_CUI_CXaml_CDocuments_CITypographyStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* GetStylisticSet16)(__x_ABI_CWindows_CUI_CXaml_CDocuments_CITypographyStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyObject* element,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* SetStylisticSet16)(__x_ABI_CWindows_CUI_CXaml_CDocuments_CITypographyStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyObject* element,
        boolean value);
    HRESULT (STDMETHODCALLTYPE* get_StylisticSet17Property)(__x_ABI_CWindows_CUI_CXaml_CDocuments_CITypographyStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* GetStylisticSet17)(__x_ABI_CWindows_CUI_CXaml_CDocuments_CITypographyStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyObject* element,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* SetStylisticSet17)(__x_ABI_CWindows_CUI_CXaml_CDocuments_CITypographyStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyObject* element,
        boolean value);
    HRESULT (STDMETHODCALLTYPE* get_StylisticSet18Property)(__x_ABI_CWindows_CUI_CXaml_CDocuments_CITypographyStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* GetStylisticSet18)(__x_ABI_CWindows_CUI_CXaml_CDocuments_CITypographyStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyObject* element,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* SetStylisticSet18)(__x_ABI_CWindows_CUI_CXaml_CDocuments_CITypographyStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyObject* element,
        boolean value);
    HRESULT (STDMETHODCALLTYPE* get_StylisticSet19Property)(__x_ABI_CWindows_CUI_CXaml_CDocuments_CITypographyStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* GetStylisticSet19)(__x_ABI_CWindows_CUI_CXaml_CDocuments_CITypographyStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyObject* element,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* SetStylisticSet19)(__x_ABI_CWindows_CUI_CXaml_CDocuments_CITypographyStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyObject* element,
        boolean value);
    HRESULT (STDMETHODCALLTYPE* get_StylisticSet20Property)(__x_ABI_CWindows_CUI_CXaml_CDocuments_CITypographyStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* GetStylisticSet20)(__x_ABI_CWindows_CUI_CXaml_CDocuments_CITypographyStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyObject* element,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* SetStylisticSet20)(__x_ABI_CWindows_CUI_CXaml_CDocuments_CITypographyStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyObject* element,
        boolean value);
    HRESULT (STDMETHODCALLTYPE* get_CapitalsProperty)(__x_ABI_CWindows_CUI_CXaml_CDocuments_CITypographyStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* GetCapitals)(__x_ABI_CWindows_CUI_CXaml_CDocuments_CITypographyStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyObject* element,
        enum __x_ABI_CWindows_CUI_CXaml_CFontCapitals* result);
    HRESULT (STDMETHODCALLTYPE* SetCapitals)(__x_ABI_CWindows_CUI_CXaml_CDocuments_CITypographyStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyObject* element,
        enum __x_ABI_CWindows_CUI_CXaml_CFontCapitals value);
    HRESULT (STDMETHODCALLTYPE* get_CapitalSpacingProperty)(__x_ABI_CWindows_CUI_CXaml_CDocuments_CITypographyStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* GetCapitalSpacing)(__x_ABI_CWindows_CUI_CXaml_CDocuments_CITypographyStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyObject* element,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* SetCapitalSpacing)(__x_ABI_CWindows_CUI_CXaml_CDocuments_CITypographyStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyObject* element,
        boolean value);
    HRESULT (STDMETHODCALLTYPE* get_KerningProperty)(__x_ABI_CWindows_CUI_CXaml_CDocuments_CITypographyStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* GetKerning)(__x_ABI_CWindows_CUI_CXaml_CDocuments_CITypographyStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyObject* element,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* SetKerning)(__x_ABI_CWindows_CUI_CXaml_CDocuments_CITypographyStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyObject* element,
        boolean value);
    HRESULT (STDMETHODCALLTYPE* get_CaseSensitiveFormsProperty)(__x_ABI_CWindows_CUI_CXaml_CDocuments_CITypographyStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* GetCaseSensitiveForms)(__x_ABI_CWindows_CUI_CXaml_CDocuments_CITypographyStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyObject* element,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* SetCaseSensitiveForms)(__x_ABI_CWindows_CUI_CXaml_CDocuments_CITypographyStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyObject* element,
        boolean value);
    HRESULT (STDMETHODCALLTYPE* get_HistoricalFormsProperty)(__x_ABI_CWindows_CUI_CXaml_CDocuments_CITypographyStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* GetHistoricalForms)(__x_ABI_CWindows_CUI_CXaml_CDocuments_CITypographyStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyObject* element,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* SetHistoricalForms)(__x_ABI_CWindows_CUI_CXaml_CDocuments_CITypographyStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyObject* element,
        boolean value);
    HRESULT (STDMETHODCALLTYPE* get_FractionProperty)(__x_ABI_CWindows_CUI_CXaml_CDocuments_CITypographyStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* GetFraction)(__x_ABI_CWindows_CUI_CXaml_CDocuments_CITypographyStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyObject* element,
        enum __x_ABI_CWindows_CUI_CXaml_CFontFraction* result);
    HRESULT (STDMETHODCALLTYPE* SetFraction)(__x_ABI_CWindows_CUI_CXaml_CDocuments_CITypographyStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyObject* element,
        enum __x_ABI_CWindows_CUI_CXaml_CFontFraction value);
    HRESULT (STDMETHODCALLTYPE* get_NumeralStyleProperty)(__x_ABI_CWindows_CUI_CXaml_CDocuments_CITypographyStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* GetNumeralStyle)(__x_ABI_CWindows_CUI_CXaml_CDocuments_CITypographyStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyObject* element,
        enum __x_ABI_CWindows_CUI_CXaml_CFontNumeralStyle* result);
    HRESULT (STDMETHODCALLTYPE* SetNumeralStyle)(__x_ABI_CWindows_CUI_CXaml_CDocuments_CITypographyStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyObject* element,
        enum __x_ABI_CWindows_CUI_CXaml_CFontNumeralStyle value);
    HRESULT (STDMETHODCALLTYPE* get_NumeralAlignmentProperty)(__x_ABI_CWindows_CUI_CXaml_CDocuments_CITypographyStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* GetNumeralAlignment)(__x_ABI_CWindows_CUI_CXaml_CDocuments_CITypographyStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyObject* element,
        enum __x_ABI_CWindows_CUI_CXaml_CFontNumeralAlignment* result);
    HRESULT (STDMETHODCALLTYPE* SetNumeralAlignment)(__x_ABI_CWindows_CUI_CXaml_CDocuments_CITypographyStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyObject* element,
        enum __x_ABI_CWindows_CUI_CXaml_CFontNumeralAlignment value);
    HRESULT (STDMETHODCALLTYPE* get_SlashedZeroProperty)(__x_ABI_CWindows_CUI_CXaml_CDocuments_CITypographyStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* GetSlashedZero)(__x_ABI_CWindows_CUI_CXaml_CDocuments_CITypographyStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyObject* element,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* SetSlashedZero)(__x_ABI_CWindows_CUI_CXaml_CDocuments_CITypographyStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyObject* element,
        boolean value);
    HRESULT (STDMETHODCALLTYPE* get_MathematicalGreekProperty)(__x_ABI_CWindows_CUI_CXaml_CDocuments_CITypographyStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* GetMathematicalGreek)(__x_ABI_CWindows_CUI_CXaml_CDocuments_CITypographyStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyObject* element,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* SetMathematicalGreek)(__x_ABI_CWindows_CUI_CXaml_CDocuments_CITypographyStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyObject* element,
        boolean value);
    HRESULT (STDMETHODCALLTYPE* get_VariantsProperty)(__x_ABI_CWindows_CUI_CXaml_CDocuments_CITypographyStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* GetVariants)(__x_ABI_CWindows_CUI_CXaml_CDocuments_CITypographyStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyObject* element,
        enum __x_ABI_CWindows_CUI_CXaml_CFontVariants* result);
    HRESULT (STDMETHODCALLTYPE* SetVariants)(__x_ABI_CWindows_CUI_CXaml_CDocuments_CITypographyStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyObject* element,
        enum __x_ABI_CWindows_CUI_CXaml_CFontVariants value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CDocuments_CITypographyStaticsVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CDocuments_CITypographyStatics
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CDocuments_CITypographyStaticsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CDocuments_CITypographyStatics;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CDocuments_CITypographyStatics_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CDocuments_CIUnderline_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CDocuments_CIUnderline_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CDocuments_CIUnderlineVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CDocuments_CIUnderline* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CDocuments_CIUnderline* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CDocuments_CIUnderline* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CDocuments_CIUnderline* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CDocuments_CIUnderline* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CDocuments_CIUnderline* This,
            TrustLevel* trustLevel);
    
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CDocuments_CIUnderlineVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CDocuments_CIUnderline
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CDocuments_CIUnderlineVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CDocuments_CIUnderline;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CDocuments_CIUnderline_INTERFACE_DEFINED__) */
    
