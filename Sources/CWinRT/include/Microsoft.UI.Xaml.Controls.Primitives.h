// WARNING: Please don't edit this file. It was generated by Swift/WinRT v0.0.1

#pragma once
// Header files for imported files
#include <inspectable.h>
#include <EventToken.h>
#include <windowscontracts.h>
#include "Windows.Foundation.h"
#include "Microsoft.UI.Composition.h"
#include "Microsoft.UI.Input.h"
#include "Microsoft.UI.Xaml.h"
#include "Microsoft.UI.Xaml.Automation.Peers.h"
#include "Microsoft.UI.Xaml.Controls.h"
#include "Microsoft.UI.Xaml.Data.h"
#include "Microsoft.UI.Xaml.Input.h"
#include "Microsoft.UI.Xaml.Media.h"
#include "Windows.Foundation.Numerics.h"
#include "Windows.UI.h"
// Importing Collections header
#include "Windows.Foundation.Collections.h"

/* Forward Declarations */
#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIDragCompletedEventHandler_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIDragCompletedEventHandler_FWD_DEFINED__
typedef interface __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIDragCompletedEventHandler __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIDragCompletedEventHandler;

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIDragCompletedEventHandler_FWD_DEFINED__

    #ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIDragDeltaEventHandler_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIDragDeltaEventHandler_FWD_DEFINED__
typedef interface __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIDragDeltaEventHandler __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIDragDeltaEventHandler;

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIDragDeltaEventHandler_FWD_DEFINED__

    #ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIDragStartedEventHandler_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIDragStartedEventHandler_FWD_DEFINED__
typedef interface __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIDragStartedEventHandler __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIDragStartedEventHandler;

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIDragStartedEventHandler_FWD_DEFINED__

    #ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIItemsChangedEventHandler_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIItemsChangedEventHandler_FWD_DEFINED__
typedef interface __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIItemsChangedEventHandler __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIItemsChangedEventHandler;

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIItemsChangedEventHandler_FWD_DEFINED__

    #ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIRangeBaseValueChangedEventHandler_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIRangeBaseValueChangedEventHandler_FWD_DEFINED__
typedef interface __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIRangeBaseValueChangedEventHandler __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIRangeBaseValueChangedEventHandler;

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIRangeBaseValueChangedEventHandler_FWD_DEFINED__

    #ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIScrollEventHandler_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIScrollEventHandler_FWD_DEFINED__
typedef interface __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIScrollEventHandler __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIScrollEventHandler;

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIScrollEventHandler_FWD_DEFINED__

    #ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIAppBarButtonTemplateSettings_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIAppBarButtonTemplateSettings_FWD_DEFINED__
    typedef interface __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIAppBarButtonTemplateSettings __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIAppBarButtonTemplateSettings;

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIAppBarButtonTemplateSettings_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIAppBarTemplateSettings_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIAppBarTemplateSettings_FWD_DEFINED__
    typedef interface __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIAppBarTemplateSettings __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIAppBarTemplateSettings;

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIAppBarTemplateSettings_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIAppBarToggleButtonTemplateSettings_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIAppBarToggleButtonTemplateSettings_FWD_DEFINED__
    typedef interface __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIAppBarToggleButtonTemplateSettings __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIAppBarToggleButtonTemplateSettings;

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIAppBarToggleButtonTemplateSettings_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIAutoSuggestBoxHelper_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIAutoSuggestBoxHelper_FWD_DEFINED__
    typedef interface __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIAutoSuggestBoxHelper __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIAutoSuggestBoxHelper;

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIAutoSuggestBoxHelper_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIAutoSuggestBoxHelperStatics_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIAutoSuggestBoxHelperStatics_FWD_DEFINED__
    typedef interface __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIAutoSuggestBoxHelperStatics __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIAutoSuggestBoxHelperStatics;

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIAutoSuggestBoxHelperStatics_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIButtonBase_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIButtonBase_FWD_DEFINED__
    typedef interface __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIButtonBase __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIButtonBase;

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIButtonBase_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIButtonBaseFactory_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIButtonBaseFactory_FWD_DEFINED__
    typedef interface __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIButtonBaseFactory __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIButtonBaseFactory;

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIButtonBaseFactory_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIButtonBaseStatics_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIButtonBaseStatics_FWD_DEFINED__
    typedef interface __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIButtonBaseStatics __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIButtonBaseStatics;

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIButtonBaseStatics_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CICalendarPanel_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CICalendarPanel_FWD_DEFINED__
    typedef interface __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CICalendarPanel __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CICalendarPanel;

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CICalendarPanel_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CICalendarViewTemplateSettings_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CICalendarViewTemplateSettings_FWD_DEFINED__
    typedef interface __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CICalendarViewTemplateSettings __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CICalendarViewTemplateSettings;

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CICalendarViewTemplateSettings_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CICarouselPanel_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CICarouselPanel_FWD_DEFINED__
    typedef interface __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CICarouselPanel __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CICarouselPanel;

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CICarouselPanel_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CICarouselPanelFactory_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CICarouselPanelFactory_FWD_DEFINED__
    typedef interface __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CICarouselPanelFactory __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CICarouselPanelFactory;

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CICarouselPanelFactory_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIColorPickerSlider_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIColorPickerSlider_FWD_DEFINED__
    typedef interface __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIColorPickerSlider __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIColorPickerSlider;

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIColorPickerSlider_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIColorPickerSliderFactory_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIColorPickerSliderFactory_FWD_DEFINED__
    typedef interface __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIColorPickerSliderFactory __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIColorPickerSliderFactory;

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIColorPickerSliderFactory_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIColorPickerSliderStatics_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIColorPickerSliderStatics_FWD_DEFINED__
    typedef interface __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIColorPickerSliderStatics __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIColorPickerSliderStatics;

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIColorPickerSliderStatics_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIColorSpectrum_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIColorSpectrum_FWD_DEFINED__
    typedef interface __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIColorSpectrum __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIColorSpectrum;

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIColorSpectrum_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIColorSpectrumFactory_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIColorSpectrumFactory_FWD_DEFINED__
    typedef interface __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIColorSpectrumFactory __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIColorSpectrumFactory;

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIColorSpectrumFactory_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIColorSpectrumStatics_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIColorSpectrumStatics_FWD_DEFINED__
    typedef interface __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIColorSpectrumStatics __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIColorSpectrumStatics;

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIColorSpectrumStatics_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIColumnMajorUniformToLargestGridLayout_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIColumnMajorUniformToLargestGridLayout_FWD_DEFINED__
    typedef interface __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIColumnMajorUniformToLargestGridLayout __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIColumnMajorUniformToLargestGridLayout;

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIColumnMajorUniformToLargestGridLayout_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIColumnMajorUniformToLargestGridLayoutFactory_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIColumnMajorUniformToLargestGridLayoutFactory_FWD_DEFINED__
    typedef interface __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIColumnMajorUniformToLargestGridLayoutFactory __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIColumnMajorUniformToLargestGridLayoutFactory;

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIColumnMajorUniformToLargestGridLayoutFactory_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIColumnMajorUniformToLargestGridLayoutStatics_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIColumnMajorUniformToLargestGridLayoutStatics_FWD_DEFINED__
    typedef interface __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIColumnMajorUniformToLargestGridLayoutStatics __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIColumnMajorUniformToLargestGridLayoutStatics;

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIColumnMajorUniformToLargestGridLayoutStatics_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIComboBoxHelper_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIComboBoxHelper_FWD_DEFINED__
    typedef interface __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIComboBoxHelper __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIComboBoxHelper;

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIComboBoxHelper_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIComboBoxHelperStatics_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIComboBoxHelperStatics_FWD_DEFINED__
    typedef interface __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIComboBoxHelperStatics __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIComboBoxHelperStatics;

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIComboBoxHelperStatics_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIComboBoxTemplateSettings_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIComboBoxTemplateSettings_FWD_DEFINED__
    typedef interface __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIComboBoxTemplateSettings __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIComboBoxTemplateSettings;

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIComboBoxTemplateSettings_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CICommandBarFlyoutCommandBar_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CICommandBarFlyoutCommandBar_FWD_DEFINED__
    typedef interface __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CICommandBarFlyoutCommandBar __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CICommandBarFlyoutCommandBar;

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CICommandBarFlyoutCommandBar_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CICommandBarFlyoutCommandBar2_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CICommandBarFlyoutCommandBar2_FWD_DEFINED__
    typedef interface __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CICommandBarFlyoutCommandBar2 __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CICommandBarFlyoutCommandBar2;

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CICommandBarFlyoutCommandBar2_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CICommandBarFlyoutCommandBarAutomationPropertiesStatics_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CICommandBarFlyoutCommandBarAutomationPropertiesStatics_FWD_DEFINED__
    typedef interface __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CICommandBarFlyoutCommandBarAutomationPropertiesStatics __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CICommandBarFlyoutCommandBarAutomationPropertiesStatics;

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CICommandBarFlyoutCommandBarAutomationPropertiesStatics_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CICommandBarFlyoutCommandBarFactory_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CICommandBarFlyoutCommandBarFactory_FWD_DEFINED__
    typedef interface __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CICommandBarFlyoutCommandBarFactory __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CICommandBarFlyoutCommandBarFactory;

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CICommandBarFlyoutCommandBarFactory_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CICommandBarFlyoutCommandBarStatics_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CICommandBarFlyoutCommandBarStatics_FWD_DEFINED__
    typedef interface __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CICommandBarFlyoutCommandBarStatics __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CICommandBarFlyoutCommandBarStatics;

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CICommandBarFlyoutCommandBarStatics_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CICommandBarFlyoutCommandBarTemplateSettings_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CICommandBarFlyoutCommandBarTemplateSettings_FWD_DEFINED__
    typedef interface __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CICommandBarFlyoutCommandBarTemplateSettings __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CICommandBarFlyoutCommandBarTemplateSettings;

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CICommandBarFlyoutCommandBarTemplateSettings_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CICommandBarTemplateSettings_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CICommandBarTemplateSettings_FWD_DEFINED__
    typedef interface __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CICommandBarTemplateSettings __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CICommandBarTemplateSettings;

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CICommandBarTemplateSettings_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CICornerRadiusFilterConverter_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CICornerRadiusFilterConverter_FWD_DEFINED__
    typedef interface __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CICornerRadiusFilterConverter __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CICornerRadiusFilterConverter;

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CICornerRadiusFilterConverter_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CICornerRadiusFilterConverterStatics_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CICornerRadiusFilterConverterStatics_FWD_DEFINED__
    typedef interface __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CICornerRadiusFilterConverterStatics __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CICornerRadiusFilterConverterStatics;

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CICornerRadiusFilterConverterStatics_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CICornerRadiusToThicknessConverter_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CICornerRadiusToThicknessConverter_FWD_DEFINED__
    typedef interface __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CICornerRadiusToThicknessConverter __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CICornerRadiusToThicknessConverter;

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CICornerRadiusToThicknessConverter_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CICornerRadiusToThicknessConverterStatics_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CICornerRadiusToThicknessConverterStatics_FWD_DEFINED__
    typedef interface __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CICornerRadiusToThicknessConverterStatics __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CICornerRadiusToThicknessConverterStatics;

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CICornerRadiusToThicknessConverterStatics_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIDragCompletedEventArgs_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIDragCompletedEventArgs_FWD_DEFINED__
    typedef interface __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIDragCompletedEventArgs __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIDragCompletedEventArgs;

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIDragCompletedEventArgs_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIDragCompletedEventArgsFactory_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIDragCompletedEventArgsFactory_FWD_DEFINED__
    typedef interface __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIDragCompletedEventArgsFactory __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIDragCompletedEventArgsFactory;

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIDragCompletedEventArgsFactory_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIDragDeltaEventArgs_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIDragDeltaEventArgs_FWD_DEFINED__
    typedef interface __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIDragDeltaEventArgs __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIDragDeltaEventArgs;

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIDragDeltaEventArgs_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIDragDeltaEventArgsFactory_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIDragDeltaEventArgsFactory_FWD_DEFINED__
    typedef interface __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIDragDeltaEventArgsFactory __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIDragDeltaEventArgsFactory;

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIDragDeltaEventArgsFactory_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIDragStartedEventArgs_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIDragStartedEventArgs_FWD_DEFINED__
    typedef interface __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIDragStartedEventArgs __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIDragStartedEventArgs;

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIDragStartedEventArgs_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIDragStartedEventArgsFactory_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIDragStartedEventArgsFactory_FWD_DEFINED__
    typedef interface __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIDragStartedEventArgsFactory __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIDragStartedEventArgsFactory;

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIDragStartedEventArgsFactory_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIFlyoutBase_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIFlyoutBase_FWD_DEFINED__
    typedef interface __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIFlyoutBase __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIFlyoutBase;

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIFlyoutBase_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIFlyoutBase2_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIFlyoutBase2_FWD_DEFINED__
    typedef interface __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIFlyoutBase2 __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIFlyoutBase2;

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIFlyoutBase2_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIFlyoutBaseClosingEventArgs_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIFlyoutBaseClosingEventArgs_FWD_DEFINED__
    typedef interface __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIFlyoutBaseClosingEventArgs __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIFlyoutBaseClosingEventArgs;

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIFlyoutBaseClosingEventArgs_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIFlyoutBaseFactory_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIFlyoutBaseFactory_FWD_DEFINED__
    typedef interface __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIFlyoutBaseFactory __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIFlyoutBaseFactory;

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIFlyoutBaseFactory_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIFlyoutBaseOverrides_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIFlyoutBaseOverrides_FWD_DEFINED__
    typedef interface __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIFlyoutBaseOverrides __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIFlyoutBaseOverrides;

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIFlyoutBaseOverrides_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIFlyoutBaseStatics_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIFlyoutBaseStatics_FWD_DEFINED__
    typedef interface __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIFlyoutBaseStatics __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIFlyoutBaseStatics;

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIFlyoutBaseStatics_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIFlyoutBaseStatics2_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIFlyoutBaseStatics2_FWD_DEFINED__
    typedef interface __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIFlyoutBaseStatics2 __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIFlyoutBaseStatics2;

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIFlyoutBaseStatics2_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIFlyoutShowOptions_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIFlyoutShowOptions_FWD_DEFINED__
    typedef interface __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIFlyoutShowOptions __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIFlyoutShowOptions;

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIFlyoutShowOptions_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIFlyoutShowOptionsFactory_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIFlyoutShowOptionsFactory_FWD_DEFINED__
    typedef interface __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIFlyoutShowOptionsFactory __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIFlyoutShowOptionsFactory;

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIFlyoutShowOptionsFactory_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIGeneratorPositionHelper_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIGeneratorPositionHelper_FWD_DEFINED__
    typedef interface __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIGeneratorPositionHelper __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIGeneratorPositionHelper;

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIGeneratorPositionHelper_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIGeneratorPositionHelperStatics_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIGeneratorPositionHelperStatics_FWD_DEFINED__
    typedef interface __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIGeneratorPositionHelperStatics __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIGeneratorPositionHelperStatics;

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIGeneratorPositionHelperStatics_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIGridViewItemPresenter_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIGridViewItemPresenter_FWD_DEFINED__
    typedef interface __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIGridViewItemPresenter __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIGridViewItemPresenter;

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIGridViewItemPresenter_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIGridViewItemPresenterFactory_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIGridViewItemPresenterFactory_FWD_DEFINED__
    typedef interface __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIGridViewItemPresenterFactory __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIGridViewItemPresenterFactory;

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIGridViewItemPresenterFactory_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIGridViewItemPresenterStatics_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIGridViewItemPresenterStatics_FWD_DEFINED__
    typedef interface __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIGridViewItemPresenterStatics __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIGridViewItemPresenterStatics;

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIGridViewItemPresenterStatics_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIGridViewItemTemplateSettings_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIGridViewItemTemplateSettings_FWD_DEFINED__
    typedef interface __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIGridViewItemTemplateSettings __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIGridViewItemTemplateSettings;

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIGridViewItemTemplateSettings_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIInfoBarPanel_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIInfoBarPanel_FWD_DEFINED__
    typedef interface __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIInfoBarPanel __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIInfoBarPanel;

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIInfoBarPanel_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIInfoBarPanelFactory_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIInfoBarPanelFactory_FWD_DEFINED__
    typedef interface __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIInfoBarPanelFactory __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIInfoBarPanelFactory;

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIInfoBarPanelFactory_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIInfoBarPanelStatics_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIInfoBarPanelStatics_FWD_DEFINED__
    typedef interface __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIInfoBarPanelStatics __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIInfoBarPanelStatics;

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIInfoBarPanelStatics_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIItemsChangedEventArgs_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIItemsChangedEventArgs_FWD_DEFINED__
    typedef interface __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIItemsChangedEventArgs __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIItemsChangedEventArgs;

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIItemsChangedEventArgs_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIJumpListItemBackgroundConverter_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIJumpListItemBackgroundConverter_FWD_DEFINED__
    typedef interface __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIJumpListItemBackgroundConverter __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIJumpListItemBackgroundConverter;

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIJumpListItemBackgroundConverter_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIJumpListItemBackgroundConverterStatics_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIJumpListItemBackgroundConverterStatics_FWD_DEFINED__
    typedef interface __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIJumpListItemBackgroundConverterStatics __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIJumpListItemBackgroundConverterStatics;

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIJumpListItemBackgroundConverterStatics_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIJumpListItemForegroundConverter_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIJumpListItemForegroundConverter_FWD_DEFINED__
    typedef interface __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIJumpListItemForegroundConverter __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIJumpListItemForegroundConverter;

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIJumpListItemForegroundConverter_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIJumpListItemForegroundConverterStatics_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIJumpListItemForegroundConverterStatics_FWD_DEFINED__
    typedef interface __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIJumpListItemForegroundConverterStatics __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIJumpListItemForegroundConverterStatics;

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIJumpListItemForegroundConverterStatics_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CILayoutInformation_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CILayoutInformation_FWD_DEFINED__
    typedef interface __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CILayoutInformation __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CILayoutInformation;

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CILayoutInformation_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CILayoutInformationStatics_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CILayoutInformationStatics_FWD_DEFINED__
    typedef interface __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CILayoutInformationStatics __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CILayoutInformationStatics;

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CILayoutInformationStatics_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIListViewItemPresenter_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIListViewItemPresenter_FWD_DEFINED__
    typedef interface __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIListViewItemPresenter __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIListViewItemPresenter;

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIListViewItemPresenter_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIListViewItemPresenterFactory_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIListViewItemPresenterFactory_FWD_DEFINED__
    typedef interface __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIListViewItemPresenterFactory __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIListViewItemPresenterFactory;

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIListViewItemPresenterFactory_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIListViewItemPresenterStatics_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIListViewItemPresenterStatics_FWD_DEFINED__
    typedef interface __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIListViewItemPresenterStatics __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIListViewItemPresenterStatics;

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIListViewItemPresenterStatics_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIListViewItemTemplateSettings_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIListViewItemTemplateSettings_FWD_DEFINED__
    typedef interface __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIListViewItemTemplateSettings __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIListViewItemTemplateSettings;

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIListViewItemTemplateSettings_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CILoopingSelector_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CILoopingSelector_FWD_DEFINED__
    typedef interface __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CILoopingSelector __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CILoopingSelector;

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CILoopingSelector_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CILoopingSelectorItem_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CILoopingSelectorItem_FWD_DEFINED__
    typedef interface __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CILoopingSelectorItem __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CILoopingSelectorItem;

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CILoopingSelectorItem_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CILoopingSelectorPanel_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CILoopingSelectorPanel_FWD_DEFINED__
    typedef interface __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CILoopingSelectorPanel __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CILoopingSelectorPanel;

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CILoopingSelectorPanel_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CILoopingSelectorStatics_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CILoopingSelectorStatics_FWD_DEFINED__
    typedef interface __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CILoopingSelectorStatics __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CILoopingSelectorStatics;

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CILoopingSelectorStatics_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIMenuFlyoutItemTemplateSettings_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIMenuFlyoutItemTemplateSettings_FWD_DEFINED__
    typedef interface __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIMenuFlyoutItemTemplateSettings __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIMenuFlyoutItemTemplateSettings;

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIMenuFlyoutItemTemplateSettings_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIMenuFlyoutPresenterTemplateSettings_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIMenuFlyoutPresenterTemplateSettings_FWD_DEFINED__
    typedef interface __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIMenuFlyoutPresenterTemplateSettings __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIMenuFlyoutPresenterTemplateSettings;

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIMenuFlyoutPresenterTemplateSettings_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIMonochromaticOverlayPresenter_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIMonochromaticOverlayPresenter_FWD_DEFINED__
    typedef interface __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIMonochromaticOverlayPresenter __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIMonochromaticOverlayPresenter;

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIMonochromaticOverlayPresenter_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIMonochromaticOverlayPresenterFactory_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIMonochromaticOverlayPresenterFactory_FWD_DEFINED__
    typedef interface __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIMonochromaticOverlayPresenterFactory __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIMonochromaticOverlayPresenterFactory;

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIMonochromaticOverlayPresenterFactory_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIMonochromaticOverlayPresenterStatics_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIMonochromaticOverlayPresenterStatics_FWD_DEFINED__
    typedef interface __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIMonochromaticOverlayPresenterStatics __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIMonochromaticOverlayPresenterStatics;

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIMonochromaticOverlayPresenterStatics_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CINavigationViewItemPresenter_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CINavigationViewItemPresenter_FWD_DEFINED__
    typedef interface __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CINavigationViewItemPresenter __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CINavigationViewItemPresenter;

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CINavigationViewItemPresenter_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CINavigationViewItemPresenter2_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CINavigationViewItemPresenter2_FWD_DEFINED__
    typedef interface __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CINavigationViewItemPresenter2 __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CINavigationViewItemPresenter2;

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CINavigationViewItemPresenter2_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CINavigationViewItemPresenterFactory_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CINavigationViewItemPresenterFactory_FWD_DEFINED__
    typedef interface __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CINavigationViewItemPresenterFactory __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CINavigationViewItemPresenterFactory;

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CINavigationViewItemPresenterFactory_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CINavigationViewItemPresenterStatics_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CINavigationViewItemPresenterStatics_FWD_DEFINED__
    typedef interface __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CINavigationViewItemPresenterStatics __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CINavigationViewItemPresenterStatics;

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CINavigationViewItemPresenterStatics_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CINavigationViewItemPresenterStatics2_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CINavigationViewItemPresenterStatics2_FWD_DEFINED__
    typedef interface __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CINavigationViewItemPresenterStatics2 __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CINavigationViewItemPresenterStatics2;

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CINavigationViewItemPresenterStatics2_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CINavigationViewItemPresenterTemplateSettings_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CINavigationViewItemPresenterTemplateSettings_FWD_DEFINED__
    typedef interface __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CINavigationViewItemPresenterTemplateSettings __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CINavigationViewItemPresenterTemplateSettings;

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CINavigationViewItemPresenterTemplateSettings_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CINavigationViewItemPresenterTemplateSettingsFactory_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CINavigationViewItemPresenterTemplateSettingsFactory_FWD_DEFINED__
    typedef interface __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CINavigationViewItemPresenterTemplateSettingsFactory __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CINavigationViewItemPresenterTemplateSettingsFactory;

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CINavigationViewItemPresenterTemplateSettingsFactory_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CINavigationViewItemPresenterTemplateSettingsStatics_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CINavigationViewItemPresenterTemplateSettingsStatics_FWD_DEFINED__
    typedef interface __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CINavigationViewItemPresenterTemplateSettingsStatics __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CINavigationViewItemPresenterTemplateSettingsStatics;

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CINavigationViewItemPresenterTemplateSettingsStatics_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIOrientedVirtualizingPanel_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIOrientedVirtualizingPanel_FWD_DEFINED__
    typedef interface __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIOrientedVirtualizingPanel __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIOrientedVirtualizingPanel;

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIOrientedVirtualizingPanel_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIOrientedVirtualizingPanelFactory_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIOrientedVirtualizingPanelFactory_FWD_DEFINED__
    typedef interface __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIOrientedVirtualizingPanelFactory __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIOrientedVirtualizingPanelFactory;

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIOrientedVirtualizingPanelFactory_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIPickerFlyoutBase_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIPickerFlyoutBase_FWD_DEFINED__
    typedef interface __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIPickerFlyoutBase __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIPickerFlyoutBase;

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIPickerFlyoutBase_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIPickerFlyoutBaseFactory_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIPickerFlyoutBaseFactory_FWD_DEFINED__
    typedef interface __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIPickerFlyoutBaseFactory __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIPickerFlyoutBaseFactory;

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIPickerFlyoutBaseFactory_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIPickerFlyoutBaseOverrides_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIPickerFlyoutBaseOverrides_FWD_DEFINED__
    typedef interface __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIPickerFlyoutBaseOverrides __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIPickerFlyoutBaseOverrides;

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIPickerFlyoutBaseOverrides_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIPickerFlyoutBaseStatics_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIPickerFlyoutBaseStatics_FWD_DEFINED__
    typedef interface __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIPickerFlyoutBaseStatics __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIPickerFlyoutBaseStatics;

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIPickerFlyoutBaseStatics_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIPivotHeaderItem_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIPivotHeaderItem_FWD_DEFINED__
    typedef interface __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIPivotHeaderItem __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIPivotHeaderItem;

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIPivotHeaderItem_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIPivotHeaderItemFactory_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIPivotHeaderItemFactory_FWD_DEFINED__
    typedef interface __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIPivotHeaderItemFactory __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIPivotHeaderItemFactory;

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIPivotHeaderItemFactory_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIPivotHeaderPanel_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIPivotHeaderPanel_FWD_DEFINED__
    typedef interface __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIPivotHeaderPanel __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIPivotHeaderPanel;

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIPivotHeaderPanel_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIPivotPanel_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIPivotPanel_FWD_DEFINED__
    typedef interface __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIPivotPanel __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIPivotPanel;

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIPivotPanel_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIPopup_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIPopup_FWD_DEFINED__
    typedef interface __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIPopup __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIPopup;

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIPopup_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIPopup2_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIPopup2_FWD_DEFINED__
    typedef interface __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIPopup2 __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIPopup2;

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIPopup2_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIPopup3_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIPopup3_FWD_DEFINED__
    typedef interface __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIPopup3 __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIPopup3;

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIPopup3_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIPopupStatics_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIPopupStatics_FWD_DEFINED__
    typedef interface __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIPopupStatics __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIPopupStatics;

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIPopupStatics_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIPopupStatics2_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIPopupStatics2_FWD_DEFINED__
    typedef interface __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIPopupStatics2 __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIPopupStatics2;

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIPopupStatics2_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIPopupStatics3_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIPopupStatics3_FWD_DEFINED__
    typedef interface __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIPopupStatics3 __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIPopupStatics3;

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIPopupStatics3_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIRangeBase_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIRangeBase_FWD_DEFINED__
    typedef interface __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIRangeBase __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIRangeBase;

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIRangeBase_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIRangeBaseFactory_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIRangeBaseFactory_FWD_DEFINED__
    typedef interface __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIRangeBaseFactory __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIRangeBaseFactory;

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIRangeBaseFactory_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIRangeBaseOverrides_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIRangeBaseOverrides_FWD_DEFINED__
    typedef interface __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIRangeBaseOverrides __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIRangeBaseOverrides;

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIRangeBaseOverrides_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIRangeBaseStatics_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIRangeBaseStatics_FWD_DEFINED__
    typedef interface __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIRangeBaseStatics __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIRangeBaseStatics;

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIRangeBaseStatics_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIRangeBaseValueChangedEventArgs_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIRangeBaseValueChangedEventArgs_FWD_DEFINED__
    typedef interface __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIRangeBaseValueChangedEventArgs __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIRangeBaseValueChangedEventArgs;

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIRangeBaseValueChangedEventArgs_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIRepeatButton_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIRepeatButton_FWD_DEFINED__
    typedef interface __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIRepeatButton __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIRepeatButton;

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIRepeatButton_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIRepeatButtonStatics_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIRepeatButtonStatics_FWD_DEFINED__
    typedef interface __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIRepeatButtonStatics __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIRepeatButtonStatics;

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIRepeatButtonStatics_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIRepeatedScrollSnapPoint_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIRepeatedScrollSnapPoint_FWD_DEFINED__
    typedef interface __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIRepeatedScrollSnapPoint __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIRepeatedScrollSnapPoint;

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIRepeatedScrollSnapPoint_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIRepeatedScrollSnapPointFactory_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIRepeatedScrollSnapPointFactory_FWD_DEFINED__
    typedef interface __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIRepeatedScrollSnapPointFactory __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIRepeatedScrollSnapPointFactory;

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIRepeatedScrollSnapPointFactory_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIRepeatedZoomSnapPoint_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIRepeatedZoomSnapPoint_FWD_DEFINED__
    typedef interface __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIRepeatedZoomSnapPoint __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIRepeatedZoomSnapPoint;

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIRepeatedZoomSnapPoint_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIRepeatedZoomSnapPointFactory_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIRepeatedZoomSnapPointFactory_FWD_DEFINED__
    typedef interface __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIRepeatedZoomSnapPointFactory __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIRepeatedZoomSnapPointFactory;

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIRepeatedZoomSnapPointFactory_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIScrollBar_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIScrollBar_FWD_DEFINED__
    typedef interface __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIScrollBar __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIScrollBar;

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIScrollBar_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIScrollBarStatics_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIScrollBarStatics_FWD_DEFINED__
    typedef interface __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIScrollBarStatics __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIScrollBarStatics;

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIScrollBarStatics_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIScrollController_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIScrollController_FWD_DEFINED__
    typedef interface __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIScrollController __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIScrollController;

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIScrollController_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIScrollControllerAddScrollVelocityRequestedEventArgs_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIScrollControllerAddScrollVelocityRequestedEventArgs_FWD_DEFINED__
    typedef interface __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIScrollControllerAddScrollVelocityRequestedEventArgs __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIScrollControllerAddScrollVelocityRequestedEventArgs;

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIScrollControllerAddScrollVelocityRequestedEventArgs_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIScrollControllerAddScrollVelocityRequestedEventArgsFactory_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIScrollControllerAddScrollVelocityRequestedEventArgsFactory_FWD_DEFINED__
    typedef interface __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIScrollControllerAddScrollVelocityRequestedEventArgsFactory __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIScrollControllerAddScrollVelocityRequestedEventArgsFactory;

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIScrollControllerAddScrollVelocityRequestedEventArgsFactory_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIScrollControllerPanRequestedEventArgs_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIScrollControllerPanRequestedEventArgs_FWD_DEFINED__
    typedef interface __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIScrollControllerPanRequestedEventArgs __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIScrollControllerPanRequestedEventArgs;

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIScrollControllerPanRequestedEventArgs_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIScrollControllerPanRequestedEventArgsFactory_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIScrollControllerPanRequestedEventArgsFactory_FWD_DEFINED__
    typedef interface __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIScrollControllerPanRequestedEventArgsFactory __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIScrollControllerPanRequestedEventArgsFactory;

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIScrollControllerPanRequestedEventArgsFactory_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIScrollControllerPanningInfo_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIScrollControllerPanningInfo_FWD_DEFINED__
    typedef interface __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIScrollControllerPanningInfo __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIScrollControllerPanningInfo;

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIScrollControllerPanningInfo_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIScrollControllerScrollByRequestedEventArgs_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIScrollControllerScrollByRequestedEventArgs_FWD_DEFINED__
    typedef interface __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIScrollControllerScrollByRequestedEventArgs __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIScrollControllerScrollByRequestedEventArgs;

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIScrollControllerScrollByRequestedEventArgs_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIScrollControllerScrollByRequestedEventArgsFactory_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIScrollControllerScrollByRequestedEventArgsFactory_FWD_DEFINED__
    typedef interface __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIScrollControllerScrollByRequestedEventArgsFactory __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIScrollControllerScrollByRequestedEventArgsFactory;

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIScrollControllerScrollByRequestedEventArgsFactory_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIScrollControllerScrollToRequestedEventArgs_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIScrollControllerScrollToRequestedEventArgs_FWD_DEFINED__
    typedef interface __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIScrollControllerScrollToRequestedEventArgs __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIScrollControllerScrollToRequestedEventArgs;

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIScrollControllerScrollToRequestedEventArgs_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIScrollControllerScrollToRequestedEventArgsFactory_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIScrollControllerScrollToRequestedEventArgsFactory_FWD_DEFINED__
    typedef interface __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIScrollControllerScrollToRequestedEventArgsFactory __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIScrollControllerScrollToRequestedEventArgsFactory;

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIScrollControllerScrollToRequestedEventArgsFactory_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIScrollEventArgs_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIScrollEventArgs_FWD_DEFINED__
    typedef interface __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIScrollEventArgs __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIScrollEventArgs;

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIScrollEventArgs_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIScrollPresenter_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIScrollPresenter_FWD_DEFINED__
    typedef interface __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIScrollPresenter __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIScrollPresenter;

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIScrollPresenter_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIScrollPresenterFactory_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIScrollPresenterFactory_FWD_DEFINED__
    typedef interface __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIScrollPresenterFactory __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIScrollPresenterFactory;

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIScrollPresenterFactory_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIScrollPresenterStatics_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIScrollPresenterStatics_FWD_DEFINED__
    typedef interface __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIScrollPresenterStatics __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIScrollPresenterStatics;

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIScrollPresenterStatics_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIScrollSnapPoint_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIScrollSnapPoint_FWD_DEFINED__
    typedef interface __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIScrollSnapPoint __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIScrollSnapPoint;

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIScrollSnapPoint_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIScrollSnapPointBase_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIScrollSnapPointBase_FWD_DEFINED__
    typedef interface __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIScrollSnapPointBase __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIScrollSnapPointBase;

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIScrollSnapPointBase_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIScrollSnapPointBaseFactory_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIScrollSnapPointBaseFactory_FWD_DEFINED__
    typedef interface __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIScrollSnapPointBaseFactory __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIScrollSnapPointBaseFactory;

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIScrollSnapPointBaseFactory_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIScrollSnapPointFactory_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIScrollSnapPointFactory_FWD_DEFINED__
    typedef interface __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIScrollSnapPointFactory __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIScrollSnapPointFactory;

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIScrollSnapPointFactory_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIScrollSnapPointsInfo_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIScrollSnapPointsInfo_FWD_DEFINED__
    typedef interface __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIScrollSnapPointsInfo __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIScrollSnapPointsInfo;

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIScrollSnapPointsInfo_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CISelector_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CISelector_FWD_DEFINED__
    typedef interface __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CISelector __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CISelector;

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CISelector_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CISelectorFactory_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CISelectorFactory_FWD_DEFINED__
    typedef interface __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CISelectorFactory __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CISelectorFactory;

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CISelectorFactory_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CISelectorItem_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CISelectorItem_FWD_DEFINED__
    typedef interface __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CISelectorItem __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CISelectorItem;

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CISelectorItem_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CISelectorItemFactory_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CISelectorItemFactory_FWD_DEFINED__
    typedef interface __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CISelectorItemFactory __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CISelectorItemFactory;

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CISelectorItemFactory_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CISelectorItemStatics_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CISelectorItemStatics_FWD_DEFINED__
    typedef interface __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CISelectorItemStatics __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CISelectorItemStatics;

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CISelectorItemStatics_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CISelectorStatics_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CISelectorStatics_FWD_DEFINED__
    typedef interface __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CISelectorStatics __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CISelectorStatics;

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CISelectorStatics_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CISnapPointBase_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CISnapPointBase_FWD_DEFINED__
    typedef interface __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CISnapPointBase __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CISnapPointBase;

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CISnapPointBase_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CISnapPointBaseFactory_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CISnapPointBaseFactory_FWD_DEFINED__
    typedef interface __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CISnapPointBaseFactory __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CISnapPointBaseFactory;

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CISnapPointBaseFactory_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CISplitViewTemplateSettings_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CISplitViewTemplateSettings_FWD_DEFINED__
    typedef interface __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CISplitViewTemplateSettings __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CISplitViewTemplateSettings;

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CISplitViewTemplateSettings_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CITabViewListView_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CITabViewListView_FWD_DEFINED__
    typedef interface __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CITabViewListView __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CITabViewListView;

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CITabViewListView_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CITabViewListViewFactory_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CITabViewListViewFactory_FWD_DEFINED__
    typedef interface __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CITabViewListViewFactory __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CITabViewListViewFactory;

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CITabViewListViewFactory_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIThumb_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIThumb_FWD_DEFINED__
    typedef interface __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIThumb __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIThumb;

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIThumb_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIThumbStatics_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIThumbStatics_FWD_DEFINED__
    typedef interface __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIThumbStatics __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIThumbStatics;

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIThumbStatics_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CITickBar_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CITickBar_FWD_DEFINED__
    typedef interface __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CITickBar __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CITickBar;

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CITickBar_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CITickBarStatics_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CITickBarStatics_FWD_DEFINED__
    typedef interface __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CITickBarStatics __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CITickBarStatics;

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CITickBarStatics_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIToggleButton_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIToggleButton_FWD_DEFINED__
    typedef interface __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIToggleButton __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIToggleButton;

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIToggleButton_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIToggleButtonFactory_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIToggleButtonFactory_FWD_DEFINED__
    typedef interface __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIToggleButtonFactory __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIToggleButtonFactory;

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIToggleButtonFactory_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIToggleButtonOverrides_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIToggleButtonOverrides_FWD_DEFINED__
    typedef interface __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIToggleButtonOverrides __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIToggleButtonOverrides;

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIToggleButtonOverrides_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIToggleButtonStatics_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIToggleButtonStatics_FWD_DEFINED__
    typedef interface __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIToggleButtonStatics __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIToggleButtonStatics;

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIToggleButtonStatics_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIToggleSwitchTemplateSettings_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIToggleSwitchTemplateSettings_FWD_DEFINED__
    typedef interface __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIToggleSwitchTemplateSettings __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIToggleSwitchTemplateSettings;

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIToggleSwitchTemplateSettings_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIToolTipTemplateSettings_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIToolTipTemplateSettings_FWD_DEFINED__
    typedef interface __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIToolTipTemplateSettings __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIToolTipTemplateSettings;

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIToolTipTemplateSettings_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIZoomSnapPoint_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIZoomSnapPoint_FWD_DEFINED__
    typedef interface __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIZoomSnapPoint __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIZoomSnapPoint;

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIZoomSnapPoint_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIZoomSnapPointBase_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIZoomSnapPointBase_FWD_DEFINED__
    typedef interface __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIZoomSnapPointBase __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIZoomSnapPointBase;

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIZoomSnapPointBase_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIZoomSnapPointBaseFactory_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIZoomSnapPointBaseFactory_FWD_DEFINED__
    typedef interface __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIZoomSnapPointBaseFactory __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIZoomSnapPointBaseFactory;

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIZoomSnapPointBaseFactory_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIZoomSnapPointFactory_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIZoomSnapPointFactory_FWD_DEFINED__
    typedef interface __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIZoomSnapPointFactory __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIZoomSnapPointFactory;

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIZoomSnapPointFactory_FWD_DEFINED__

// Parameterized interface forward declarations (C)

// Collection interface definitions

#if !defined(____x_ABI_C__FIIterator_1_IInspectable_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIIterator_1_IInspectable_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIIterator_1_IInspectable __x_ABI_C__FIIterator_1_IInspectable;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIIterator_1_IInspectable;

    typedef struct __x_ABI_C__FIIterator_1_IInspectableVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIIterator_1_IInspectable* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIIterator_1_IInspectable* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIIterator_1_IInspectable* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIIterator_1_IInspectable* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIIterator_1_IInspectable* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIIterator_1_IInspectable* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Current)(__x_ABI_C__FIIterator_1_IInspectable* This,
        IInspectable** result);
    HRESULT (STDMETHODCALLTYPE* get_HasCurrent)(__x_ABI_C__FIIterator_1_IInspectable* This,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* MoveNext)(__x_ABI_C__FIIterator_1_IInspectable* This,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__x_ABI_C__FIIterator_1_IInspectable* This,
        UINT32 itemsLength,
        IInspectable** items,
        UINT32* result);

        END_INTERFACE
    } __x_ABI_C__FIIterator_1_IInspectableVtbl;

    interface __x_ABI_C__FIIterator_1_IInspectable
    {
        CONST_VTBL struct __x_ABI_C__FIIterator_1_IInspectableVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIIterator_1_IInspectable_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIIterable_1_IInspectable_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIIterable_1_IInspectable_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIIterable_1_IInspectable __x_ABI_C__FIIterable_1_IInspectable;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIIterable_1_IInspectable;

    typedef struct __x_ABI_C__FIIterable_1_IInspectableVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIIterable_1_IInspectable* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIIterable_1_IInspectable* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIIterable_1_IInspectable* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIIterable_1_IInspectable* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIIterable_1_IInspectable* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIIterable_1_IInspectable* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* First)(__x_ABI_C__FIIterable_1_IInspectable* This,
        __x_ABI_C__FIIterator_1_IInspectable** result);

        END_INTERFACE
    } __x_ABI_C__FIIterable_1_IInspectableVtbl;

    interface __x_ABI_C__FIIterable_1_IInspectable
    {
        CONST_VTBL struct __x_ABI_C__FIIterable_1_IInspectableVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIIterable_1_IInspectable_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIIterator_1_float_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIIterator_1_float_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIIterator_1_float __x_ABI_C__FIIterator_1_float;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIIterator_1_float;

    typedef struct __x_ABI_C__FIIterator_1_floatVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIIterator_1_float* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIIterator_1_float* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIIterator_1_float* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIIterator_1_float* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIIterator_1_float* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIIterator_1_float* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Current)(__x_ABI_C__FIIterator_1_float* This,
        FLOAT* result);
    HRESULT (STDMETHODCALLTYPE* get_HasCurrent)(__x_ABI_C__FIIterator_1_float* This,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* MoveNext)(__x_ABI_C__FIIterator_1_float* This,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__x_ABI_C__FIIterator_1_float* This,
        UINT32 itemsLength,
        FLOAT* items,
        UINT32* result);

        END_INTERFACE
    } __x_ABI_C__FIIterator_1_floatVtbl;

    interface __x_ABI_C__FIIterator_1_float
    {
        CONST_VTBL struct __x_ABI_C__FIIterator_1_floatVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIIterator_1_float_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIIterable_1_float_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIIterable_1_float_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIIterable_1_float __x_ABI_C__FIIterable_1_float;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIIterable_1_float;

    typedef struct __x_ABI_C__FIIterable_1_floatVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIIterable_1_float* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIIterable_1_float* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIIterable_1_float* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIIterable_1_float* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIIterable_1_float* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIIterable_1_float* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* First)(__x_ABI_C__FIIterable_1_float* This,
        __x_ABI_C__FIIterator_1_float** result);

        END_INTERFACE
    } __x_ABI_C__FIIterable_1_floatVtbl;

    interface __x_ABI_C__FIIterable_1_float
    {
        CONST_VTBL struct __x_ABI_C__FIIterable_1_floatVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIIterable_1_float_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIIterator_1___x_ABI_CMicrosoft__CUI__CXaml__CControls__CPrimitives__CScrollSnapPointBase_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIIterator_1___x_ABI_CMicrosoft__CUI__CXaml__CControls__CPrimitives__CScrollSnapPointBase_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIIterator_1___x_ABI_CMicrosoft__CUI__CXaml__CControls__CPrimitives__CScrollSnapPointBase __x_ABI_C__FIIterator_1___x_ABI_CMicrosoft__CUI__CXaml__CControls__CPrimitives__CScrollSnapPointBase;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIIterator_1___x_ABI_CMicrosoft__CUI__CXaml__CControls__CPrimitives__CScrollSnapPointBase;

    typedef struct __x_ABI_C__FIIterator_1___x_ABI_CMicrosoft__CUI__CXaml__CControls__CPrimitives__CScrollSnapPointBaseVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIIterator_1___x_ABI_CMicrosoft__CUI__CXaml__CControls__CPrimitives__CScrollSnapPointBase* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIIterator_1___x_ABI_CMicrosoft__CUI__CXaml__CControls__CPrimitives__CScrollSnapPointBase* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIIterator_1___x_ABI_CMicrosoft__CUI__CXaml__CControls__CPrimitives__CScrollSnapPointBase* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIIterator_1___x_ABI_CMicrosoft__CUI__CXaml__CControls__CPrimitives__CScrollSnapPointBase* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIIterator_1___x_ABI_CMicrosoft__CUI__CXaml__CControls__CPrimitives__CScrollSnapPointBase* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIIterator_1___x_ABI_CMicrosoft__CUI__CXaml__CControls__CPrimitives__CScrollSnapPointBase* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Current)(__x_ABI_C__FIIterator_1___x_ABI_CMicrosoft__CUI__CXaml__CControls__CPrimitives__CScrollSnapPointBase* This,
        __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIScrollSnapPointBase** result);
    HRESULT (STDMETHODCALLTYPE* get_HasCurrent)(__x_ABI_C__FIIterator_1___x_ABI_CMicrosoft__CUI__CXaml__CControls__CPrimitives__CScrollSnapPointBase* This,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* MoveNext)(__x_ABI_C__FIIterator_1___x_ABI_CMicrosoft__CUI__CXaml__CControls__CPrimitives__CScrollSnapPointBase* This,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__x_ABI_C__FIIterator_1___x_ABI_CMicrosoft__CUI__CXaml__CControls__CPrimitives__CScrollSnapPointBase* This,
        UINT32 itemsLength,
        __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIScrollSnapPointBase** items,
        UINT32* result);

        END_INTERFACE
    } __x_ABI_C__FIIterator_1___x_ABI_CMicrosoft__CUI__CXaml__CControls__CPrimitives__CScrollSnapPointBaseVtbl;

    interface __x_ABI_C__FIIterator_1___x_ABI_CMicrosoft__CUI__CXaml__CControls__CPrimitives__CScrollSnapPointBase
    {
        CONST_VTBL struct __x_ABI_C__FIIterator_1___x_ABI_CMicrosoft__CUI__CXaml__CControls__CPrimitives__CScrollSnapPointBaseVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIIterator_1___x_ABI_CMicrosoft__CUI__CXaml__CControls__CPrimitives__CScrollSnapPointBase_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIIterable_1___x_ABI_CMicrosoft__CUI__CXaml__CControls__CPrimitives__CScrollSnapPointBase_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIIterable_1___x_ABI_CMicrosoft__CUI__CXaml__CControls__CPrimitives__CScrollSnapPointBase_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIIterable_1___x_ABI_CMicrosoft__CUI__CXaml__CControls__CPrimitives__CScrollSnapPointBase __x_ABI_C__FIIterable_1___x_ABI_CMicrosoft__CUI__CXaml__CControls__CPrimitives__CScrollSnapPointBase;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIIterable_1___x_ABI_CMicrosoft__CUI__CXaml__CControls__CPrimitives__CScrollSnapPointBase;

    typedef struct __x_ABI_C__FIIterable_1___x_ABI_CMicrosoft__CUI__CXaml__CControls__CPrimitives__CScrollSnapPointBaseVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIIterable_1___x_ABI_CMicrosoft__CUI__CXaml__CControls__CPrimitives__CScrollSnapPointBase* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIIterable_1___x_ABI_CMicrosoft__CUI__CXaml__CControls__CPrimitives__CScrollSnapPointBase* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIIterable_1___x_ABI_CMicrosoft__CUI__CXaml__CControls__CPrimitives__CScrollSnapPointBase* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIIterable_1___x_ABI_CMicrosoft__CUI__CXaml__CControls__CPrimitives__CScrollSnapPointBase* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIIterable_1___x_ABI_CMicrosoft__CUI__CXaml__CControls__CPrimitives__CScrollSnapPointBase* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIIterable_1___x_ABI_CMicrosoft__CUI__CXaml__CControls__CPrimitives__CScrollSnapPointBase* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* First)(__x_ABI_C__FIIterable_1___x_ABI_CMicrosoft__CUI__CXaml__CControls__CPrimitives__CScrollSnapPointBase* This,
        __x_ABI_C__FIIterator_1___x_ABI_CMicrosoft__CUI__CXaml__CControls__CPrimitives__CScrollSnapPointBase** result);

        END_INTERFACE
    } __x_ABI_C__FIIterable_1___x_ABI_CMicrosoft__CUI__CXaml__CControls__CPrimitives__CScrollSnapPointBaseVtbl;

    interface __x_ABI_C__FIIterable_1___x_ABI_CMicrosoft__CUI__CXaml__CControls__CPrimitives__CScrollSnapPointBase
    {
        CONST_VTBL struct __x_ABI_C__FIIterable_1___x_ABI_CMicrosoft__CUI__CXaml__CControls__CPrimitives__CScrollSnapPointBaseVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIIterable_1___x_ABI_CMicrosoft__CUI__CXaml__CControls__CPrimitives__CScrollSnapPointBase_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIIterator_1___x_ABI_CMicrosoft__CUI__CXaml__CControls__CPrimitives__CZoomSnapPointBase_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIIterator_1___x_ABI_CMicrosoft__CUI__CXaml__CControls__CPrimitives__CZoomSnapPointBase_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIIterator_1___x_ABI_CMicrosoft__CUI__CXaml__CControls__CPrimitives__CZoomSnapPointBase __x_ABI_C__FIIterator_1___x_ABI_CMicrosoft__CUI__CXaml__CControls__CPrimitives__CZoomSnapPointBase;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIIterator_1___x_ABI_CMicrosoft__CUI__CXaml__CControls__CPrimitives__CZoomSnapPointBase;

    typedef struct __x_ABI_C__FIIterator_1___x_ABI_CMicrosoft__CUI__CXaml__CControls__CPrimitives__CZoomSnapPointBaseVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIIterator_1___x_ABI_CMicrosoft__CUI__CXaml__CControls__CPrimitives__CZoomSnapPointBase* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIIterator_1___x_ABI_CMicrosoft__CUI__CXaml__CControls__CPrimitives__CZoomSnapPointBase* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIIterator_1___x_ABI_CMicrosoft__CUI__CXaml__CControls__CPrimitives__CZoomSnapPointBase* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIIterator_1___x_ABI_CMicrosoft__CUI__CXaml__CControls__CPrimitives__CZoomSnapPointBase* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIIterator_1___x_ABI_CMicrosoft__CUI__CXaml__CControls__CPrimitives__CZoomSnapPointBase* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIIterator_1___x_ABI_CMicrosoft__CUI__CXaml__CControls__CPrimitives__CZoomSnapPointBase* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Current)(__x_ABI_C__FIIterator_1___x_ABI_CMicrosoft__CUI__CXaml__CControls__CPrimitives__CZoomSnapPointBase* This,
        __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIZoomSnapPointBase** result);
    HRESULT (STDMETHODCALLTYPE* get_HasCurrent)(__x_ABI_C__FIIterator_1___x_ABI_CMicrosoft__CUI__CXaml__CControls__CPrimitives__CZoomSnapPointBase* This,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* MoveNext)(__x_ABI_C__FIIterator_1___x_ABI_CMicrosoft__CUI__CXaml__CControls__CPrimitives__CZoomSnapPointBase* This,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__x_ABI_C__FIIterator_1___x_ABI_CMicrosoft__CUI__CXaml__CControls__CPrimitives__CZoomSnapPointBase* This,
        UINT32 itemsLength,
        __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIZoomSnapPointBase** items,
        UINT32* result);

        END_INTERFACE
    } __x_ABI_C__FIIterator_1___x_ABI_CMicrosoft__CUI__CXaml__CControls__CPrimitives__CZoomSnapPointBaseVtbl;

    interface __x_ABI_C__FIIterator_1___x_ABI_CMicrosoft__CUI__CXaml__CControls__CPrimitives__CZoomSnapPointBase
    {
        CONST_VTBL struct __x_ABI_C__FIIterator_1___x_ABI_CMicrosoft__CUI__CXaml__CControls__CPrimitives__CZoomSnapPointBaseVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIIterator_1___x_ABI_CMicrosoft__CUI__CXaml__CControls__CPrimitives__CZoomSnapPointBase_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIIterable_1___x_ABI_CMicrosoft__CUI__CXaml__CControls__CPrimitives__CZoomSnapPointBase_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIIterable_1___x_ABI_CMicrosoft__CUI__CXaml__CControls__CPrimitives__CZoomSnapPointBase_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIIterable_1___x_ABI_CMicrosoft__CUI__CXaml__CControls__CPrimitives__CZoomSnapPointBase __x_ABI_C__FIIterable_1___x_ABI_CMicrosoft__CUI__CXaml__CControls__CPrimitives__CZoomSnapPointBase;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIIterable_1___x_ABI_CMicrosoft__CUI__CXaml__CControls__CPrimitives__CZoomSnapPointBase;

    typedef struct __x_ABI_C__FIIterable_1___x_ABI_CMicrosoft__CUI__CXaml__CControls__CPrimitives__CZoomSnapPointBaseVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIIterable_1___x_ABI_CMicrosoft__CUI__CXaml__CControls__CPrimitives__CZoomSnapPointBase* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIIterable_1___x_ABI_CMicrosoft__CUI__CXaml__CControls__CPrimitives__CZoomSnapPointBase* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIIterable_1___x_ABI_CMicrosoft__CUI__CXaml__CControls__CPrimitives__CZoomSnapPointBase* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIIterable_1___x_ABI_CMicrosoft__CUI__CXaml__CControls__CPrimitives__CZoomSnapPointBase* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIIterable_1___x_ABI_CMicrosoft__CUI__CXaml__CControls__CPrimitives__CZoomSnapPointBase* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIIterable_1___x_ABI_CMicrosoft__CUI__CXaml__CControls__CPrimitives__CZoomSnapPointBase* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* First)(__x_ABI_C__FIIterable_1___x_ABI_CMicrosoft__CUI__CXaml__CControls__CPrimitives__CZoomSnapPointBase* This,
        __x_ABI_C__FIIterator_1___x_ABI_CMicrosoft__CUI__CXaml__CControls__CPrimitives__CZoomSnapPointBase** result);

        END_INTERFACE
    } __x_ABI_C__FIIterable_1___x_ABI_CMicrosoft__CUI__CXaml__CControls__CPrimitives__CZoomSnapPointBaseVtbl;

    interface __x_ABI_C__FIIterable_1___x_ABI_CMicrosoft__CUI__CXaml__CControls__CPrimitives__CZoomSnapPointBase
    {
        CONST_VTBL struct __x_ABI_C__FIIterable_1___x_ABI_CMicrosoft__CUI__CXaml__CControls__CPrimitives__CZoomSnapPointBaseVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIIterable_1___x_ABI_CMicrosoft__CUI__CXaml__CControls__CPrimitives__CZoomSnapPointBase_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIVectorView_1_IInspectable_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIVectorView_1_IInspectable_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIVectorView_1_IInspectable __x_ABI_C__FIVectorView_1_IInspectable;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIVectorView_1_IInspectable;

    typedef struct __x_ABI_C__FIVectorView_1_IInspectableVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIVectorView_1_IInspectable* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIVectorView_1_IInspectable* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIVectorView_1_IInspectable* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIVectorView_1_IInspectable* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIVectorView_1_IInspectable* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIVectorView_1_IInspectable* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* GetAt)(__x_ABI_C__FIVectorView_1_IInspectable* This,
        UINT32 index,
        IInspectable** result);
    HRESULT (STDMETHODCALLTYPE* get_Size)(__x_ABI_C__FIVectorView_1_IInspectable* This,
        UINT32* result);
    HRESULT (STDMETHODCALLTYPE* IndexOf)(__x_ABI_C__FIVectorView_1_IInspectable* This,
        IInspectable* value,
        UINT32* index,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__x_ABI_C__FIVectorView_1_IInspectable* This,
        UINT32 startIndex,
        UINT32 itemsLength,
        IInspectable** items,
        UINT32* result);

        END_INTERFACE
    } __x_ABI_C__FIVectorView_1_IInspectableVtbl;

    interface __x_ABI_C__FIVectorView_1_IInspectable
    {
        CONST_VTBL struct __x_ABI_C__FIVectorView_1_IInspectableVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIVectorView_1_IInspectable_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIVectorView_1_float_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIVectorView_1_float_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIVectorView_1_float __x_ABI_C__FIVectorView_1_float;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIVectorView_1_float;

    typedef struct __x_ABI_C__FIVectorView_1_floatVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIVectorView_1_float* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIVectorView_1_float* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIVectorView_1_float* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIVectorView_1_float* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIVectorView_1_float* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIVectorView_1_float* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* GetAt)(__x_ABI_C__FIVectorView_1_float* This,
        UINT32 index,
        FLOAT* result);
    HRESULT (STDMETHODCALLTYPE* get_Size)(__x_ABI_C__FIVectorView_1_float* This,
        UINT32* result);
    HRESULT (STDMETHODCALLTYPE* IndexOf)(__x_ABI_C__FIVectorView_1_float* This,
        FLOAT value,
        UINT32* index,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__x_ABI_C__FIVectorView_1_float* This,
        UINT32 startIndex,
        UINT32 itemsLength,
        FLOAT* items,
        UINT32* result);

        END_INTERFACE
    } __x_ABI_C__FIVectorView_1_floatVtbl;

    interface __x_ABI_C__FIVectorView_1_float
    {
        CONST_VTBL struct __x_ABI_C__FIVectorView_1_floatVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIVectorView_1_float_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIVectorView_1___x_ABI_CMicrosoft__CUI__CXaml__CControls__CPrimitives__CScrollSnapPointBase_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIVectorView_1___x_ABI_CMicrosoft__CUI__CXaml__CControls__CPrimitives__CScrollSnapPointBase_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIVectorView_1___x_ABI_CMicrosoft__CUI__CXaml__CControls__CPrimitives__CScrollSnapPointBase __x_ABI_C__FIVectorView_1___x_ABI_CMicrosoft__CUI__CXaml__CControls__CPrimitives__CScrollSnapPointBase;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIVectorView_1___x_ABI_CMicrosoft__CUI__CXaml__CControls__CPrimitives__CScrollSnapPointBase;

    typedef struct __x_ABI_C__FIVectorView_1___x_ABI_CMicrosoft__CUI__CXaml__CControls__CPrimitives__CScrollSnapPointBaseVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIVectorView_1___x_ABI_CMicrosoft__CUI__CXaml__CControls__CPrimitives__CScrollSnapPointBase* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIVectorView_1___x_ABI_CMicrosoft__CUI__CXaml__CControls__CPrimitives__CScrollSnapPointBase* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIVectorView_1___x_ABI_CMicrosoft__CUI__CXaml__CControls__CPrimitives__CScrollSnapPointBase* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIVectorView_1___x_ABI_CMicrosoft__CUI__CXaml__CControls__CPrimitives__CScrollSnapPointBase* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIVectorView_1___x_ABI_CMicrosoft__CUI__CXaml__CControls__CPrimitives__CScrollSnapPointBase* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIVectorView_1___x_ABI_CMicrosoft__CUI__CXaml__CControls__CPrimitives__CScrollSnapPointBase* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* GetAt)(__x_ABI_C__FIVectorView_1___x_ABI_CMicrosoft__CUI__CXaml__CControls__CPrimitives__CScrollSnapPointBase* This,
        UINT32 index,
        __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIScrollSnapPointBase** result);
    HRESULT (STDMETHODCALLTYPE* get_Size)(__x_ABI_C__FIVectorView_1___x_ABI_CMicrosoft__CUI__CXaml__CControls__CPrimitives__CScrollSnapPointBase* This,
        UINT32* result);
    HRESULT (STDMETHODCALLTYPE* IndexOf)(__x_ABI_C__FIVectorView_1___x_ABI_CMicrosoft__CUI__CXaml__CControls__CPrimitives__CScrollSnapPointBase* This,
        __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIScrollSnapPointBase* value,
        UINT32* index,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__x_ABI_C__FIVectorView_1___x_ABI_CMicrosoft__CUI__CXaml__CControls__CPrimitives__CScrollSnapPointBase* This,
        UINT32 startIndex,
        UINT32 itemsLength,
        __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIScrollSnapPointBase** items,
        UINT32* result);

        END_INTERFACE
    } __x_ABI_C__FIVectorView_1___x_ABI_CMicrosoft__CUI__CXaml__CControls__CPrimitives__CScrollSnapPointBaseVtbl;

    interface __x_ABI_C__FIVectorView_1___x_ABI_CMicrosoft__CUI__CXaml__CControls__CPrimitives__CScrollSnapPointBase
    {
        CONST_VTBL struct __x_ABI_C__FIVectorView_1___x_ABI_CMicrosoft__CUI__CXaml__CControls__CPrimitives__CScrollSnapPointBaseVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIVectorView_1___x_ABI_CMicrosoft__CUI__CXaml__CControls__CPrimitives__CScrollSnapPointBase_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIVectorView_1___x_ABI_CMicrosoft__CUI__CXaml__CControls__CPrimitives__CZoomSnapPointBase_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIVectorView_1___x_ABI_CMicrosoft__CUI__CXaml__CControls__CPrimitives__CZoomSnapPointBase_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIVectorView_1___x_ABI_CMicrosoft__CUI__CXaml__CControls__CPrimitives__CZoomSnapPointBase __x_ABI_C__FIVectorView_1___x_ABI_CMicrosoft__CUI__CXaml__CControls__CPrimitives__CZoomSnapPointBase;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIVectorView_1___x_ABI_CMicrosoft__CUI__CXaml__CControls__CPrimitives__CZoomSnapPointBase;

    typedef struct __x_ABI_C__FIVectorView_1___x_ABI_CMicrosoft__CUI__CXaml__CControls__CPrimitives__CZoomSnapPointBaseVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIVectorView_1___x_ABI_CMicrosoft__CUI__CXaml__CControls__CPrimitives__CZoomSnapPointBase* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIVectorView_1___x_ABI_CMicrosoft__CUI__CXaml__CControls__CPrimitives__CZoomSnapPointBase* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIVectorView_1___x_ABI_CMicrosoft__CUI__CXaml__CControls__CPrimitives__CZoomSnapPointBase* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIVectorView_1___x_ABI_CMicrosoft__CUI__CXaml__CControls__CPrimitives__CZoomSnapPointBase* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIVectorView_1___x_ABI_CMicrosoft__CUI__CXaml__CControls__CPrimitives__CZoomSnapPointBase* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIVectorView_1___x_ABI_CMicrosoft__CUI__CXaml__CControls__CPrimitives__CZoomSnapPointBase* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* GetAt)(__x_ABI_C__FIVectorView_1___x_ABI_CMicrosoft__CUI__CXaml__CControls__CPrimitives__CZoomSnapPointBase* This,
        UINT32 index,
        __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIZoomSnapPointBase** result);
    HRESULT (STDMETHODCALLTYPE* get_Size)(__x_ABI_C__FIVectorView_1___x_ABI_CMicrosoft__CUI__CXaml__CControls__CPrimitives__CZoomSnapPointBase* This,
        UINT32* result);
    HRESULT (STDMETHODCALLTYPE* IndexOf)(__x_ABI_C__FIVectorView_1___x_ABI_CMicrosoft__CUI__CXaml__CControls__CPrimitives__CZoomSnapPointBase* This,
        __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIZoomSnapPointBase* value,
        UINT32* index,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__x_ABI_C__FIVectorView_1___x_ABI_CMicrosoft__CUI__CXaml__CControls__CPrimitives__CZoomSnapPointBase* This,
        UINT32 startIndex,
        UINT32 itemsLength,
        __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIZoomSnapPointBase** items,
        UINT32* result);

        END_INTERFACE
    } __x_ABI_C__FIVectorView_1___x_ABI_CMicrosoft__CUI__CXaml__CControls__CPrimitives__CZoomSnapPointBaseVtbl;

    interface __x_ABI_C__FIVectorView_1___x_ABI_CMicrosoft__CUI__CXaml__CControls__CPrimitives__CZoomSnapPointBase
    {
        CONST_VTBL struct __x_ABI_C__FIVectorView_1___x_ABI_CMicrosoft__CUI__CXaml__CControls__CPrimitives__CZoomSnapPointBaseVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIVectorView_1___x_ABI_CMicrosoft__CUI__CXaml__CControls__CPrimitives__CZoomSnapPointBase_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIVector_1_IInspectable_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIVector_1_IInspectable_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIVector_1_IInspectable __x_ABI_C__FIVector_1_IInspectable;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIVector_1_IInspectable;

    typedef struct __x_ABI_C__FIVector_1_IInspectableVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIVector_1_IInspectable* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIVector_1_IInspectable* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIVector_1_IInspectable* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIVector_1_IInspectable* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIVector_1_IInspectable* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIVector_1_IInspectable* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* GetAt)(__x_ABI_C__FIVector_1_IInspectable* This,
        UINT32 index,
        IInspectable** result);
    HRESULT (STDMETHODCALLTYPE* get_Size)(__x_ABI_C__FIVector_1_IInspectable* This,
        UINT32* result);
    HRESULT (STDMETHODCALLTYPE* GetView)(__x_ABI_C__FIVector_1_IInspectable* This,
        __x_ABI_C__FIVectorView_1_IInspectable** result);
    HRESULT (STDMETHODCALLTYPE* IndexOf)(__x_ABI_C__FIVector_1_IInspectable* This,
        IInspectable* value,
        UINT32* index,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* SetAt)(__x_ABI_C__FIVector_1_IInspectable* This,
        UINT32 index,
        IInspectable* value);
    HRESULT (STDMETHODCALLTYPE* InsertAt)(__x_ABI_C__FIVector_1_IInspectable* This,
        UINT32 index,
        IInspectable* value);
    HRESULT (STDMETHODCALLTYPE* RemoveAt)(__x_ABI_C__FIVector_1_IInspectable* This,
        UINT32 index);
    HRESULT (STDMETHODCALLTYPE* Append)(__x_ABI_C__FIVector_1_IInspectable* This,
        IInspectable* value);
    HRESULT (STDMETHODCALLTYPE* RemoveAtEnd)(__x_ABI_C__FIVector_1_IInspectable* This);
    HRESULT (STDMETHODCALLTYPE* Clear)(__x_ABI_C__FIVector_1_IInspectable* This);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__x_ABI_C__FIVector_1_IInspectable* This,
        UINT32 startIndex,
        UINT32 itemsLength,
        IInspectable** items,
        UINT32* result);
    HRESULT (STDMETHODCALLTYPE* ReplaceAll)(__x_ABI_C__FIVector_1_IInspectable* This,
        UINT32 itemsLength,
        IInspectable** items);

        END_INTERFACE
    } __x_ABI_C__FIVector_1_IInspectableVtbl;

    interface __x_ABI_C__FIVector_1_IInspectable
    {
        CONST_VTBL struct __x_ABI_C__FIVector_1_IInspectableVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIVector_1_IInspectable_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIVector_1___x_ABI_CMicrosoft__CUI__CXaml__CControls__CPrimitives__CScrollSnapPointBase_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIVector_1___x_ABI_CMicrosoft__CUI__CXaml__CControls__CPrimitives__CScrollSnapPointBase_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIVector_1___x_ABI_CMicrosoft__CUI__CXaml__CControls__CPrimitives__CScrollSnapPointBase __x_ABI_C__FIVector_1___x_ABI_CMicrosoft__CUI__CXaml__CControls__CPrimitives__CScrollSnapPointBase;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIVector_1___x_ABI_CMicrosoft__CUI__CXaml__CControls__CPrimitives__CScrollSnapPointBase;

    typedef struct __x_ABI_C__FIVector_1___x_ABI_CMicrosoft__CUI__CXaml__CControls__CPrimitives__CScrollSnapPointBaseVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIVector_1___x_ABI_CMicrosoft__CUI__CXaml__CControls__CPrimitives__CScrollSnapPointBase* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIVector_1___x_ABI_CMicrosoft__CUI__CXaml__CControls__CPrimitives__CScrollSnapPointBase* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIVector_1___x_ABI_CMicrosoft__CUI__CXaml__CControls__CPrimitives__CScrollSnapPointBase* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIVector_1___x_ABI_CMicrosoft__CUI__CXaml__CControls__CPrimitives__CScrollSnapPointBase* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIVector_1___x_ABI_CMicrosoft__CUI__CXaml__CControls__CPrimitives__CScrollSnapPointBase* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIVector_1___x_ABI_CMicrosoft__CUI__CXaml__CControls__CPrimitives__CScrollSnapPointBase* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* GetAt)(__x_ABI_C__FIVector_1___x_ABI_CMicrosoft__CUI__CXaml__CControls__CPrimitives__CScrollSnapPointBase* This,
        UINT32 index,
        __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIScrollSnapPointBase** result);
    HRESULT (STDMETHODCALLTYPE* get_Size)(__x_ABI_C__FIVector_1___x_ABI_CMicrosoft__CUI__CXaml__CControls__CPrimitives__CScrollSnapPointBase* This,
        UINT32* result);
    HRESULT (STDMETHODCALLTYPE* GetView)(__x_ABI_C__FIVector_1___x_ABI_CMicrosoft__CUI__CXaml__CControls__CPrimitives__CScrollSnapPointBase* This,
        __x_ABI_C__FIVectorView_1___x_ABI_CMicrosoft__CUI__CXaml__CControls__CPrimitives__CScrollSnapPointBase** result);
    HRESULT (STDMETHODCALLTYPE* IndexOf)(__x_ABI_C__FIVector_1___x_ABI_CMicrosoft__CUI__CXaml__CControls__CPrimitives__CScrollSnapPointBase* This,
        __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIScrollSnapPointBase* value,
        UINT32* index,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* SetAt)(__x_ABI_C__FIVector_1___x_ABI_CMicrosoft__CUI__CXaml__CControls__CPrimitives__CScrollSnapPointBase* This,
        UINT32 index,
        __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIScrollSnapPointBase* value);
    HRESULT (STDMETHODCALLTYPE* InsertAt)(__x_ABI_C__FIVector_1___x_ABI_CMicrosoft__CUI__CXaml__CControls__CPrimitives__CScrollSnapPointBase* This,
        UINT32 index,
        __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIScrollSnapPointBase* value);
    HRESULT (STDMETHODCALLTYPE* RemoveAt)(__x_ABI_C__FIVector_1___x_ABI_CMicrosoft__CUI__CXaml__CControls__CPrimitives__CScrollSnapPointBase* This,
        UINT32 index);
    HRESULT (STDMETHODCALLTYPE* Append)(__x_ABI_C__FIVector_1___x_ABI_CMicrosoft__CUI__CXaml__CControls__CPrimitives__CScrollSnapPointBase* This,
        __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIScrollSnapPointBase* value);
    HRESULT (STDMETHODCALLTYPE* RemoveAtEnd)(__x_ABI_C__FIVector_1___x_ABI_CMicrosoft__CUI__CXaml__CControls__CPrimitives__CScrollSnapPointBase* This);
    HRESULT (STDMETHODCALLTYPE* Clear)(__x_ABI_C__FIVector_1___x_ABI_CMicrosoft__CUI__CXaml__CControls__CPrimitives__CScrollSnapPointBase* This);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__x_ABI_C__FIVector_1___x_ABI_CMicrosoft__CUI__CXaml__CControls__CPrimitives__CScrollSnapPointBase* This,
        UINT32 startIndex,
        UINT32 itemsLength,
        __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIScrollSnapPointBase** items,
        UINT32* result);
    HRESULT (STDMETHODCALLTYPE* ReplaceAll)(__x_ABI_C__FIVector_1___x_ABI_CMicrosoft__CUI__CXaml__CControls__CPrimitives__CScrollSnapPointBase* This,
        UINT32 itemsLength,
        __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIScrollSnapPointBase** items);

        END_INTERFACE
    } __x_ABI_C__FIVector_1___x_ABI_CMicrosoft__CUI__CXaml__CControls__CPrimitives__CScrollSnapPointBaseVtbl;

    interface __x_ABI_C__FIVector_1___x_ABI_CMicrosoft__CUI__CXaml__CControls__CPrimitives__CScrollSnapPointBase
    {
        CONST_VTBL struct __x_ABI_C__FIVector_1___x_ABI_CMicrosoft__CUI__CXaml__CControls__CPrimitives__CScrollSnapPointBaseVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIVector_1___x_ABI_CMicrosoft__CUI__CXaml__CControls__CPrimitives__CScrollSnapPointBase_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIVector_1___x_ABI_CMicrosoft__CUI__CXaml__CControls__CPrimitives__CZoomSnapPointBase_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIVector_1___x_ABI_CMicrosoft__CUI__CXaml__CControls__CPrimitives__CZoomSnapPointBase_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIVector_1___x_ABI_CMicrosoft__CUI__CXaml__CControls__CPrimitives__CZoomSnapPointBase __x_ABI_C__FIVector_1___x_ABI_CMicrosoft__CUI__CXaml__CControls__CPrimitives__CZoomSnapPointBase;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIVector_1___x_ABI_CMicrosoft__CUI__CXaml__CControls__CPrimitives__CZoomSnapPointBase;

    typedef struct __x_ABI_C__FIVector_1___x_ABI_CMicrosoft__CUI__CXaml__CControls__CPrimitives__CZoomSnapPointBaseVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIVector_1___x_ABI_CMicrosoft__CUI__CXaml__CControls__CPrimitives__CZoomSnapPointBase* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIVector_1___x_ABI_CMicrosoft__CUI__CXaml__CControls__CPrimitives__CZoomSnapPointBase* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIVector_1___x_ABI_CMicrosoft__CUI__CXaml__CControls__CPrimitives__CZoomSnapPointBase* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIVector_1___x_ABI_CMicrosoft__CUI__CXaml__CControls__CPrimitives__CZoomSnapPointBase* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIVector_1___x_ABI_CMicrosoft__CUI__CXaml__CControls__CPrimitives__CZoomSnapPointBase* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIVector_1___x_ABI_CMicrosoft__CUI__CXaml__CControls__CPrimitives__CZoomSnapPointBase* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* GetAt)(__x_ABI_C__FIVector_1___x_ABI_CMicrosoft__CUI__CXaml__CControls__CPrimitives__CZoomSnapPointBase* This,
        UINT32 index,
        __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIZoomSnapPointBase** result);
    HRESULT (STDMETHODCALLTYPE* get_Size)(__x_ABI_C__FIVector_1___x_ABI_CMicrosoft__CUI__CXaml__CControls__CPrimitives__CZoomSnapPointBase* This,
        UINT32* result);
    HRESULT (STDMETHODCALLTYPE* GetView)(__x_ABI_C__FIVector_1___x_ABI_CMicrosoft__CUI__CXaml__CControls__CPrimitives__CZoomSnapPointBase* This,
        __x_ABI_C__FIVectorView_1___x_ABI_CMicrosoft__CUI__CXaml__CControls__CPrimitives__CZoomSnapPointBase** result);
    HRESULT (STDMETHODCALLTYPE* IndexOf)(__x_ABI_C__FIVector_1___x_ABI_CMicrosoft__CUI__CXaml__CControls__CPrimitives__CZoomSnapPointBase* This,
        __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIZoomSnapPointBase* value,
        UINT32* index,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* SetAt)(__x_ABI_C__FIVector_1___x_ABI_CMicrosoft__CUI__CXaml__CControls__CPrimitives__CZoomSnapPointBase* This,
        UINT32 index,
        __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIZoomSnapPointBase* value);
    HRESULT (STDMETHODCALLTYPE* InsertAt)(__x_ABI_C__FIVector_1___x_ABI_CMicrosoft__CUI__CXaml__CControls__CPrimitives__CZoomSnapPointBase* This,
        UINT32 index,
        __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIZoomSnapPointBase* value);
    HRESULT (STDMETHODCALLTYPE* RemoveAt)(__x_ABI_C__FIVector_1___x_ABI_CMicrosoft__CUI__CXaml__CControls__CPrimitives__CZoomSnapPointBase* This,
        UINT32 index);
    HRESULT (STDMETHODCALLTYPE* Append)(__x_ABI_C__FIVector_1___x_ABI_CMicrosoft__CUI__CXaml__CControls__CPrimitives__CZoomSnapPointBase* This,
        __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIZoomSnapPointBase* value);
    HRESULT (STDMETHODCALLTYPE* RemoveAtEnd)(__x_ABI_C__FIVector_1___x_ABI_CMicrosoft__CUI__CXaml__CControls__CPrimitives__CZoomSnapPointBase* This);
    HRESULT (STDMETHODCALLTYPE* Clear)(__x_ABI_C__FIVector_1___x_ABI_CMicrosoft__CUI__CXaml__CControls__CPrimitives__CZoomSnapPointBase* This);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__x_ABI_C__FIVector_1___x_ABI_CMicrosoft__CUI__CXaml__CControls__CPrimitives__CZoomSnapPointBase* This,
        UINT32 startIndex,
        UINT32 itemsLength,
        __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIZoomSnapPointBase** items,
        UINT32* result);
    HRESULT (STDMETHODCALLTYPE* ReplaceAll)(__x_ABI_C__FIVector_1___x_ABI_CMicrosoft__CUI__CXaml__CControls__CPrimitives__CZoomSnapPointBase* This,
        UINT32 itemsLength,
        __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIZoomSnapPointBase** items);

        END_INTERFACE
    } __x_ABI_C__FIVector_1___x_ABI_CMicrosoft__CUI__CXaml__CControls__CPrimitives__CZoomSnapPointBaseVtbl;

    interface __x_ABI_C__FIVector_1___x_ABI_CMicrosoft__CUI__CXaml__CControls__CPrimitives__CZoomSnapPointBase
    {
        CONST_VTBL struct __x_ABI_C__FIVector_1___x_ABI_CMicrosoft__CUI__CXaml__CControls__CPrimitives__CZoomSnapPointBaseVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIVector_1___x_ABI_CMicrosoft__CUI__CXaml__CControls__CPrimitives__CZoomSnapPointBase_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIEventHandler_1_IInspectable_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIEventHandler_1_IInspectable_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIEventHandler_1_IInspectable __x_ABI_C__FIEventHandler_1_IInspectable;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIEventHandler_1_IInspectable;

    typedef struct __x_ABI_C__FIEventHandler_1_IInspectableVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIEventHandler_1_IInspectable* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIEventHandler_1_IInspectable* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIEventHandler_1_IInspectable* This);
        HRESULT (STDMETHODCALLTYPE* Invoke)(__x_ABI_C__FIEventHandler_1_IInspectable* This,
        IInspectable* sender,
        IInspectable* args);

        END_INTERFACE
    } __x_ABI_C__FIEventHandler_1_IInspectableVtbl;

    interface __x_ABI_C__FIEventHandler_1_IInspectable
    {
        CONST_VTBL struct __x_ABI_C__FIEventHandler_1_IInspectableVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIEventHandler_1_IInspectable_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIReference_1_boolean_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIReference_1_boolean_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIReference_1_boolean __x_ABI_C__FIReference_1_boolean;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIReference_1_boolean;

    typedef struct __x_ABI_C__FIReference_1_booleanVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIReference_1_boolean* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIReference_1_boolean* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIReference_1_boolean* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIReference_1_boolean* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIReference_1_boolean* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIReference_1_boolean* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Value)(__x_ABI_C__FIReference_1_boolean* This,
        boolean* result);

        END_INTERFACE
    } __x_ABI_C__FIReference_1_booleanVtbl;

    interface __x_ABI_C__FIReference_1_boolean
    {
        CONST_VTBL struct __x_ABI_C__FIReference_1_booleanVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIReference_1_boolean_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIReference_1_float_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIReference_1_float_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIReference_1_float __x_ABI_C__FIReference_1_float;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIReference_1_float;

    typedef struct __x_ABI_C__FIReference_1_floatVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIReference_1_float* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIReference_1_float* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIReference_1_float* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIReference_1_float* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIReference_1_float* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIReference_1_float* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Value)(__x_ABI_C__FIReference_1_float* This,
        FLOAT* result);

        END_INTERFACE
    } __x_ABI_C__FIReference_1_floatVtbl;

    interface __x_ABI_C__FIReference_1_float
    {
        CONST_VTBL struct __x_ABI_C__FIReference_1_floatVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIReference_1_float_INTERFACE_DEFINED__
    
typedef struct __x_ABI_CWindows_CFoundation_CNumerics_CVector2 __x_ABI_CWindows_CFoundation_CNumerics_CVector2;

#if !defined(____x_ABI_C__FIReference_1___x_ABI_CWindows__CFoundation__CNumerics__CVector2_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIReference_1___x_ABI_CWindows__CFoundation__CNumerics__CVector2_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIReference_1___x_ABI_CWindows__CFoundation__CNumerics__CVector2 __x_ABI_C__FIReference_1___x_ABI_CWindows__CFoundation__CNumerics__CVector2;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIReference_1___x_ABI_CWindows__CFoundation__CNumerics__CVector2;

    typedef struct __x_ABI_C__FIReference_1___x_ABI_CWindows__CFoundation__CNumerics__CVector2Vtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIReference_1___x_ABI_CWindows__CFoundation__CNumerics__CVector2* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIReference_1___x_ABI_CWindows__CFoundation__CNumerics__CVector2* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIReference_1___x_ABI_CWindows__CFoundation__CNumerics__CVector2* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIReference_1___x_ABI_CWindows__CFoundation__CNumerics__CVector2* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIReference_1___x_ABI_CWindows__CFoundation__CNumerics__CVector2* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIReference_1___x_ABI_CWindows__CFoundation__CNumerics__CVector2* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Value)(__x_ABI_C__FIReference_1___x_ABI_CWindows__CFoundation__CNumerics__CVector2* This,
        struct __x_ABI_CWindows_CFoundation_CNumerics_CVector2* result);

        END_INTERFACE
    } __x_ABI_C__FIReference_1___x_ABI_CWindows__CFoundation__CNumerics__CVector2Vtbl;

    interface __x_ABI_C__FIReference_1___x_ABI_CWindows__CFoundation__CNumerics__CVector2
    {
        CONST_VTBL struct __x_ABI_C__FIReference_1___x_ABI_CWindows__CFoundation__CNumerics__CVector2Vtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIReference_1___x_ABI_CWindows__CFoundation__CNumerics__CVector2_INTERFACE_DEFINED__
    
typedef struct __x_ABI_CWindows_CFoundation_CPoint __x_ABI_CWindows_CFoundation_CPoint;

#if !defined(____x_ABI_C__FIReference_1___x_ABI_CWindows__CFoundation__CPoint_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIReference_1___x_ABI_CWindows__CFoundation__CPoint_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIReference_1___x_ABI_CWindows__CFoundation__CPoint __x_ABI_C__FIReference_1___x_ABI_CWindows__CFoundation__CPoint;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIReference_1___x_ABI_CWindows__CFoundation__CPoint;

    typedef struct __x_ABI_C__FIReference_1___x_ABI_CWindows__CFoundation__CPointVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIReference_1___x_ABI_CWindows__CFoundation__CPoint* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIReference_1___x_ABI_CWindows__CFoundation__CPoint* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIReference_1___x_ABI_CWindows__CFoundation__CPoint* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIReference_1___x_ABI_CWindows__CFoundation__CPoint* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIReference_1___x_ABI_CWindows__CFoundation__CPoint* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIReference_1___x_ABI_CWindows__CFoundation__CPoint* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Value)(__x_ABI_C__FIReference_1___x_ABI_CWindows__CFoundation__CPoint* This,
        struct __x_ABI_CWindows_CFoundation_CPoint* result);

        END_INTERFACE
    } __x_ABI_C__FIReference_1___x_ABI_CWindows__CFoundation__CPointVtbl;

    interface __x_ABI_C__FIReference_1___x_ABI_CWindows__CFoundation__CPoint
    {
        CONST_VTBL struct __x_ABI_C__FIReference_1___x_ABI_CWindows__CFoundation__CPointVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIReference_1___x_ABI_CWindows__CFoundation__CPoint_INTERFACE_DEFINED__
    
typedef struct __x_ABI_CWindows_CFoundation_CRect __x_ABI_CWindows_CFoundation_CRect;

#if !defined(____x_ABI_C__FIReference_1___x_ABI_CWindows__CFoundation__CRect_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIReference_1___x_ABI_CWindows__CFoundation__CRect_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIReference_1___x_ABI_CWindows__CFoundation__CRect __x_ABI_C__FIReference_1___x_ABI_CWindows__CFoundation__CRect;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIReference_1___x_ABI_CWindows__CFoundation__CRect;

    typedef struct __x_ABI_C__FIReference_1___x_ABI_CWindows__CFoundation__CRectVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIReference_1___x_ABI_CWindows__CFoundation__CRect* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIReference_1___x_ABI_CWindows__CFoundation__CRect* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIReference_1___x_ABI_CWindows__CFoundation__CRect* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIReference_1___x_ABI_CWindows__CFoundation__CRect* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIReference_1___x_ABI_CWindows__CFoundation__CRect* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIReference_1___x_ABI_CWindows__CFoundation__CRect* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Value)(__x_ABI_C__FIReference_1___x_ABI_CWindows__CFoundation__CRect* This,
        struct __x_ABI_CWindows_CFoundation_CRect* result);

        END_INTERFACE
    } __x_ABI_C__FIReference_1___x_ABI_CWindows__CFoundation__CRectVtbl;

    interface __x_ABI_C__FIReference_1___x_ABI_CWindows__CFoundation__CRect
    {
        CONST_VTBL struct __x_ABI_C__FIReference_1___x_ABI_CWindows__CFoundation__CRectVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIReference_1___x_ABI_CWindows__CFoundation__CRect_INTERFACE_DEFINED__
    
#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CIColorChangedEventArgs_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CIColorChangedEventArgs_FWD_DEFINED__
    typedef interface __x_ABI_CMicrosoft_CUI_CXaml_CControls_CIColorChangedEventArgs __x_ABI_CMicrosoft_CUI_CXaml_CControls_CIColorChangedEventArgs;

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CIColorChangedEventArgs_FWD_DEFINED__

#if !defined(____x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CUI__CXaml__CControls__CPrimitives__CColorSpectrum___x_ABI_CMicrosoft__CUI__CXaml__CControls__CColorChangedEventArgs_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CUI__CXaml__CControls__CPrimitives__CColorSpectrum___x_ABI_CMicrosoft__CUI__CXaml__CControls__CColorChangedEventArgs_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CUI__CXaml__CControls__CPrimitives__CColorSpectrum___x_ABI_CMicrosoft__CUI__CXaml__CControls__CColorChangedEventArgs __x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CUI__CXaml__CControls__CPrimitives__CColorSpectrum___x_ABI_CMicrosoft__CUI__CXaml__CControls__CColorChangedEventArgs;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CUI__CXaml__CControls__CPrimitives__CColorSpectrum___x_ABI_CMicrosoft__CUI__CXaml__CControls__CColorChangedEventArgs;

    typedef struct __x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CUI__CXaml__CControls__CPrimitives__CColorSpectrum___x_ABI_CMicrosoft__CUI__CXaml__CControls__CColorChangedEventArgsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CUI__CXaml__CControls__CPrimitives__CColorSpectrum___x_ABI_CMicrosoft__CUI__CXaml__CControls__CColorChangedEventArgs* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CUI__CXaml__CControls__CPrimitives__CColorSpectrum___x_ABI_CMicrosoft__CUI__CXaml__CControls__CColorChangedEventArgs* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CUI__CXaml__CControls__CPrimitives__CColorSpectrum___x_ABI_CMicrosoft__CUI__CXaml__CControls__CColorChangedEventArgs* This);
        HRESULT (STDMETHODCALLTYPE* Invoke)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CUI__CXaml__CControls__CPrimitives__CColorSpectrum___x_ABI_CMicrosoft__CUI__CXaml__CControls__CColorChangedEventArgs* This,
        __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIColorSpectrum* sender,
        __x_ABI_CMicrosoft_CUI_CXaml_CControls_CIColorChangedEventArgs* args);

        END_INTERFACE
    } __x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CUI__CXaml__CControls__CPrimitives__CColorSpectrum___x_ABI_CMicrosoft__CUI__CXaml__CControls__CColorChangedEventArgsVtbl;

    interface __x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CUI__CXaml__CControls__CPrimitives__CColorSpectrum___x_ABI_CMicrosoft__CUI__CXaml__CControls__CColorChangedEventArgs
    {
        CONST_VTBL struct __x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CUI__CXaml__CControls__CPrimitives__CColorSpectrum___x_ABI_CMicrosoft__CUI__CXaml__CControls__CColorChangedEventArgsVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CUI__CXaml__CControls__CPrimitives__CColorSpectrum___x_ABI_CMicrosoft__CUI__CXaml__CControls__CColorChangedEventArgs_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CUI__CXaml__CControls__CPrimitives__CFlyoutBase___x_ABI_CMicrosoft__CUI__CXaml__CControls__CPrimitives__CFlyoutBaseClosingEventArgs_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CUI__CXaml__CControls__CPrimitives__CFlyoutBase___x_ABI_CMicrosoft__CUI__CXaml__CControls__CPrimitives__CFlyoutBaseClosingEventArgs_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CUI__CXaml__CControls__CPrimitives__CFlyoutBase___x_ABI_CMicrosoft__CUI__CXaml__CControls__CPrimitives__CFlyoutBaseClosingEventArgs __x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CUI__CXaml__CControls__CPrimitives__CFlyoutBase___x_ABI_CMicrosoft__CUI__CXaml__CControls__CPrimitives__CFlyoutBaseClosingEventArgs;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CUI__CXaml__CControls__CPrimitives__CFlyoutBase___x_ABI_CMicrosoft__CUI__CXaml__CControls__CPrimitives__CFlyoutBaseClosingEventArgs;

    typedef struct __x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CUI__CXaml__CControls__CPrimitives__CFlyoutBase___x_ABI_CMicrosoft__CUI__CXaml__CControls__CPrimitives__CFlyoutBaseClosingEventArgsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CUI__CXaml__CControls__CPrimitives__CFlyoutBase___x_ABI_CMicrosoft__CUI__CXaml__CControls__CPrimitives__CFlyoutBaseClosingEventArgs* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CUI__CXaml__CControls__CPrimitives__CFlyoutBase___x_ABI_CMicrosoft__CUI__CXaml__CControls__CPrimitives__CFlyoutBaseClosingEventArgs* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CUI__CXaml__CControls__CPrimitives__CFlyoutBase___x_ABI_CMicrosoft__CUI__CXaml__CControls__CPrimitives__CFlyoutBaseClosingEventArgs* This);
        HRESULT (STDMETHODCALLTYPE* Invoke)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CUI__CXaml__CControls__CPrimitives__CFlyoutBase___x_ABI_CMicrosoft__CUI__CXaml__CControls__CPrimitives__CFlyoutBaseClosingEventArgs* This,
        __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIFlyoutBase* sender,
        __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIFlyoutBaseClosingEventArgs* args);

        END_INTERFACE
    } __x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CUI__CXaml__CControls__CPrimitives__CFlyoutBase___x_ABI_CMicrosoft__CUI__CXaml__CControls__CPrimitives__CFlyoutBaseClosingEventArgsVtbl;

    interface __x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CUI__CXaml__CControls__CPrimitives__CFlyoutBase___x_ABI_CMicrosoft__CUI__CXaml__CControls__CPrimitives__CFlyoutBaseClosingEventArgs
    {
        CONST_VTBL struct __x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CUI__CXaml__CControls__CPrimitives__CFlyoutBase___x_ABI_CMicrosoft__CUI__CXaml__CControls__CPrimitives__CFlyoutBaseClosingEventArgsVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CUI__CXaml__CControls__CPrimitives__CFlyoutBase___x_ABI_CMicrosoft__CUI__CXaml__CControls__CPrimitives__CFlyoutBaseClosingEventArgs_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CUI__CXaml__CControls__CPrimitives__CIScrollController_IInspectable_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CUI__CXaml__CControls__CPrimitives__CIScrollController_IInspectable_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CUI__CXaml__CControls__CPrimitives__CIScrollController_IInspectable __x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CUI__CXaml__CControls__CPrimitives__CIScrollController_IInspectable;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CUI__CXaml__CControls__CPrimitives__CIScrollController_IInspectable;

    typedef struct __x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CUI__CXaml__CControls__CPrimitives__CIScrollController_IInspectableVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CUI__CXaml__CControls__CPrimitives__CIScrollController_IInspectable* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CUI__CXaml__CControls__CPrimitives__CIScrollController_IInspectable* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CUI__CXaml__CControls__CPrimitives__CIScrollController_IInspectable* This);
        HRESULT (STDMETHODCALLTYPE* Invoke)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CUI__CXaml__CControls__CPrimitives__CIScrollController_IInspectable* This,
        __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIScrollController* sender,
        IInspectable* args);

        END_INTERFACE
    } __x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CUI__CXaml__CControls__CPrimitives__CIScrollController_IInspectableVtbl;

    interface __x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CUI__CXaml__CControls__CPrimitives__CIScrollController_IInspectable
    {
        CONST_VTBL struct __x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CUI__CXaml__CControls__CPrimitives__CIScrollController_IInspectableVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CUI__CXaml__CControls__CPrimitives__CIScrollController_IInspectable_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CUI__CXaml__CControls__CPrimitives__CIScrollController___x_ABI_CMicrosoft__CUI__CXaml__CControls__CPrimitives__CScrollControllerAddScrollVelocityRequestedEventArgs_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CUI__CXaml__CControls__CPrimitives__CIScrollController___x_ABI_CMicrosoft__CUI__CXaml__CControls__CPrimitives__CScrollControllerAddScrollVelocityRequestedEventArgs_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CUI__CXaml__CControls__CPrimitives__CIScrollController___x_ABI_CMicrosoft__CUI__CXaml__CControls__CPrimitives__CScrollControllerAddScrollVelocityRequestedEventArgs __x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CUI__CXaml__CControls__CPrimitives__CIScrollController___x_ABI_CMicrosoft__CUI__CXaml__CControls__CPrimitives__CScrollControllerAddScrollVelocityRequestedEventArgs;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CUI__CXaml__CControls__CPrimitives__CIScrollController___x_ABI_CMicrosoft__CUI__CXaml__CControls__CPrimitives__CScrollControllerAddScrollVelocityRequestedEventArgs;

    typedef struct __x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CUI__CXaml__CControls__CPrimitives__CIScrollController___x_ABI_CMicrosoft__CUI__CXaml__CControls__CPrimitives__CScrollControllerAddScrollVelocityRequestedEventArgsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CUI__CXaml__CControls__CPrimitives__CIScrollController___x_ABI_CMicrosoft__CUI__CXaml__CControls__CPrimitives__CScrollControllerAddScrollVelocityRequestedEventArgs* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CUI__CXaml__CControls__CPrimitives__CIScrollController___x_ABI_CMicrosoft__CUI__CXaml__CControls__CPrimitives__CScrollControllerAddScrollVelocityRequestedEventArgs* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CUI__CXaml__CControls__CPrimitives__CIScrollController___x_ABI_CMicrosoft__CUI__CXaml__CControls__CPrimitives__CScrollControllerAddScrollVelocityRequestedEventArgs* This);
        HRESULT (STDMETHODCALLTYPE* Invoke)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CUI__CXaml__CControls__CPrimitives__CIScrollController___x_ABI_CMicrosoft__CUI__CXaml__CControls__CPrimitives__CScrollControllerAddScrollVelocityRequestedEventArgs* This,
        __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIScrollController* sender,
        __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIScrollControllerAddScrollVelocityRequestedEventArgs* args);

        END_INTERFACE
    } __x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CUI__CXaml__CControls__CPrimitives__CIScrollController___x_ABI_CMicrosoft__CUI__CXaml__CControls__CPrimitives__CScrollControllerAddScrollVelocityRequestedEventArgsVtbl;

    interface __x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CUI__CXaml__CControls__CPrimitives__CIScrollController___x_ABI_CMicrosoft__CUI__CXaml__CControls__CPrimitives__CScrollControllerAddScrollVelocityRequestedEventArgs
    {
        CONST_VTBL struct __x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CUI__CXaml__CControls__CPrimitives__CIScrollController___x_ABI_CMicrosoft__CUI__CXaml__CControls__CPrimitives__CScrollControllerAddScrollVelocityRequestedEventArgsVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CUI__CXaml__CControls__CPrimitives__CIScrollController___x_ABI_CMicrosoft__CUI__CXaml__CControls__CPrimitives__CScrollControllerAddScrollVelocityRequestedEventArgs_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CUI__CXaml__CControls__CPrimitives__CIScrollController___x_ABI_CMicrosoft__CUI__CXaml__CControls__CPrimitives__CScrollControllerScrollByRequestedEventArgs_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CUI__CXaml__CControls__CPrimitives__CIScrollController___x_ABI_CMicrosoft__CUI__CXaml__CControls__CPrimitives__CScrollControllerScrollByRequestedEventArgs_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CUI__CXaml__CControls__CPrimitives__CIScrollController___x_ABI_CMicrosoft__CUI__CXaml__CControls__CPrimitives__CScrollControllerScrollByRequestedEventArgs __x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CUI__CXaml__CControls__CPrimitives__CIScrollController___x_ABI_CMicrosoft__CUI__CXaml__CControls__CPrimitives__CScrollControllerScrollByRequestedEventArgs;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CUI__CXaml__CControls__CPrimitives__CIScrollController___x_ABI_CMicrosoft__CUI__CXaml__CControls__CPrimitives__CScrollControllerScrollByRequestedEventArgs;

    typedef struct __x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CUI__CXaml__CControls__CPrimitives__CIScrollController___x_ABI_CMicrosoft__CUI__CXaml__CControls__CPrimitives__CScrollControllerScrollByRequestedEventArgsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CUI__CXaml__CControls__CPrimitives__CIScrollController___x_ABI_CMicrosoft__CUI__CXaml__CControls__CPrimitives__CScrollControllerScrollByRequestedEventArgs* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CUI__CXaml__CControls__CPrimitives__CIScrollController___x_ABI_CMicrosoft__CUI__CXaml__CControls__CPrimitives__CScrollControllerScrollByRequestedEventArgs* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CUI__CXaml__CControls__CPrimitives__CIScrollController___x_ABI_CMicrosoft__CUI__CXaml__CControls__CPrimitives__CScrollControllerScrollByRequestedEventArgs* This);
        HRESULT (STDMETHODCALLTYPE* Invoke)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CUI__CXaml__CControls__CPrimitives__CIScrollController___x_ABI_CMicrosoft__CUI__CXaml__CControls__CPrimitives__CScrollControllerScrollByRequestedEventArgs* This,
        __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIScrollController* sender,
        __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIScrollControllerScrollByRequestedEventArgs* args);

        END_INTERFACE
    } __x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CUI__CXaml__CControls__CPrimitives__CIScrollController___x_ABI_CMicrosoft__CUI__CXaml__CControls__CPrimitives__CScrollControllerScrollByRequestedEventArgsVtbl;

    interface __x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CUI__CXaml__CControls__CPrimitives__CIScrollController___x_ABI_CMicrosoft__CUI__CXaml__CControls__CPrimitives__CScrollControllerScrollByRequestedEventArgs
    {
        CONST_VTBL struct __x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CUI__CXaml__CControls__CPrimitives__CIScrollController___x_ABI_CMicrosoft__CUI__CXaml__CControls__CPrimitives__CScrollControllerScrollByRequestedEventArgsVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CUI__CXaml__CControls__CPrimitives__CIScrollController___x_ABI_CMicrosoft__CUI__CXaml__CControls__CPrimitives__CScrollControllerScrollByRequestedEventArgs_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CUI__CXaml__CControls__CPrimitives__CIScrollController___x_ABI_CMicrosoft__CUI__CXaml__CControls__CPrimitives__CScrollControllerScrollToRequestedEventArgs_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CUI__CXaml__CControls__CPrimitives__CIScrollController___x_ABI_CMicrosoft__CUI__CXaml__CControls__CPrimitives__CScrollControllerScrollToRequestedEventArgs_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CUI__CXaml__CControls__CPrimitives__CIScrollController___x_ABI_CMicrosoft__CUI__CXaml__CControls__CPrimitives__CScrollControllerScrollToRequestedEventArgs __x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CUI__CXaml__CControls__CPrimitives__CIScrollController___x_ABI_CMicrosoft__CUI__CXaml__CControls__CPrimitives__CScrollControllerScrollToRequestedEventArgs;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CUI__CXaml__CControls__CPrimitives__CIScrollController___x_ABI_CMicrosoft__CUI__CXaml__CControls__CPrimitives__CScrollControllerScrollToRequestedEventArgs;

    typedef struct __x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CUI__CXaml__CControls__CPrimitives__CIScrollController___x_ABI_CMicrosoft__CUI__CXaml__CControls__CPrimitives__CScrollControllerScrollToRequestedEventArgsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CUI__CXaml__CControls__CPrimitives__CIScrollController___x_ABI_CMicrosoft__CUI__CXaml__CControls__CPrimitives__CScrollControllerScrollToRequestedEventArgs* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CUI__CXaml__CControls__CPrimitives__CIScrollController___x_ABI_CMicrosoft__CUI__CXaml__CControls__CPrimitives__CScrollControllerScrollToRequestedEventArgs* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CUI__CXaml__CControls__CPrimitives__CIScrollController___x_ABI_CMicrosoft__CUI__CXaml__CControls__CPrimitives__CScrollControllerScrollToRequestedEventArgs* This);
        HRESULT (STDMETHODCALLTYPE* Invoke)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CUI__CXaml__CControls__CPrimitives__CIScrollController___x_ABI_CMicrosoft__CUI__CXaml__CControls__CPrimitives__CScrollControllerScrollToRequestedEventArgs* This,
        __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIScrollController* sender,
        __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIScrollControllerScrollToRequestedEventArgs* args);

        END_INTERFACE
    } __x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CUI__CXaml__CControls__CPrimitives__CIScrollController___x_ABI_CMicrosoft__CUI__CXaml__CControls__CPrimitives__CScrollControllerScrollToRequestedEventArgsVtbl;

    interface __x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CUI__CXaml__CControls__CPrimitives__CIScrollController___x_ABI_CMicrosoft__CUI__CXaml__CControls__CPrimitives__CScrollControllerScrollToRequestedEventArgs
    {
        CONST_VTBL struct __x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CUI__CXaml__CControls__CPrimitives__CIScrollController___x_ABI_CMicrosoft__CUI__CXaml__CControls__CPrimitives__CScrollControllerScrollToRequestedEventArgsVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CUI__CXaml__CControls__CPrimitives__CIScrollController___x_ABI_CMicrosoft__CUI__CXaml__CControls__CPrimitives__CScrollControllerScrollToRequestedEventArgs_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CUI__CXaml__CControls__CPrimitives__CIScrollControllerPanningInfo_IInspectable_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CUI__CXaml__CControls__CPrimitives__CIScrollControllerPanningInfo_IInspectable_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CUI__CXaml__CControls__CPrimitives__CIScrollControllerPanningInfo_IInspectable __x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CUI__CXaml__CControls__CPrimitives__CIScrollControllerPanningInfo_IInspectable;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CUI__CXaml__CControls__CPrimitives__CIScrollControllerPanningInfo_IInspectable;

    typedef struct __x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CUI__CXaml__CControls__CPrimitives__CIScrollControllerPanningInfo_IInspectableVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CUI__CXaml__CControls__CPrimitives__CIScrollControllerPanningInfo_IInspectable* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CUI__CXaml__CControls__CPrimitives__CIScrollControllerPanningInfo_IInspectable* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CUI__CXaml__CControls__CPrimitives__CIScrollControllerPanningInfo_IInspectable* This);
        HRESULT (STDMETHODCALLTYPE* Invoke)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CUI__CXaml__CControls__CPrimitives__CIScrollControllerPanningInfo_IInspectable* This,
        __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIScrollControllerPanningInfo* sender,
        IInspectable* args);

        END_INTERFACE
    } __x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CUI__CXaml__CControls__CPrimitives__CIScrollControllerPanningInfo_IInspectableVtbl;

    interface __x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CUI__CXaml__CControls__CPrimitives__CIScrollControllerPanningInfo_IInspectable
    {
        CONST_VTBL struct __x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CUI__CXaml__CControls__CPrimitives__CIScrollControllerPanningInfo_IInspectableVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CUI__CXaml__CControls__CPrimitives__CIScrollControllerPanningInfo_IInspectable_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CUI__CXaml__CControls__CPrimitives__CIScrollControllerPanningInfo___x_ABI_CMicrosoft__CUI__CXaml__CControls__CPrimitives__CScrollControllerPanRequestedEventArgs_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CUI__CXaml__CControls__CPrimitives__CIScrollControllerPanningInfo___x_ABI_CMicrosoft__CUI__CXaml__CControls__CPrimitives__CScrollControllerPanRequestedEventArgs_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CUI__CXaml__CControls__CPrimitives__CIScrollControllerPanningInfo___x_ABI_CMicrosoft__CUI__CXaml__CControls__CPrimitives__CScrollControllerPanRequestedEventArgs __x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CUI__CXaml__CControls__CPrimitives__CIScrollControllerPanningInfo___x_ABI_CMicrosoft__CUI__CXaml__CControls__CPrimitives__CScrollControllerPanRequestedEventArgs;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CUI__CXaml__CControls__CPrimitives__CIScrollControllerPanningInfo___x_ABI_CMicrosoft__CUI__CXaml__CControls__CPrimitives__CScrollControllerPanRequestedEventArgs;

    typedef struct __x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CUI__CXaml__CControls__CPrimitives__CIScrollControllerPanningInfo___x_ABI_CMicrosoft__CUI__CXaml__CControls__CPrimitives__CScrollControllerPanRequestedEventArgsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CUI__CXaml__CControls__CPrimitives__CIScrollControllerPanningInfo___x_ABI_CMicrosoft__CUI__CXaml__CControls__CPrimitives__CScrollControllerPanRequestedEventArgs* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CUI__CXaml__CControls__CPrimitives__CIScrollControllerPanningInfo___x_ABI_CMicrosoft__CUI__CXaml__CControls__CPrimitives__CScrollControllerPanRequestedEventArgs* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CUI__CXaml__CControls__CPrimitives__CIScrollControllerPanningInfo___x_ABI_CMicrosoft__CUI__CXaml__CControls__CPrimitives__CScrollControllerPanRequestedEventArgs* This);
        HRESULT (STDMETHODCALLTYPE* Invoke)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CUI__CXaml__CControls__CPrimitives__CIScrollControllerPanningInfo___x_ABI_CMicrosoft__CUI__CXaml__CControls__CPrimitives__CScrollControllerPanRequestedEventArgs* This,
        __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIScrollControllerPanningInfo* sender,
        __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIScrollControllerPanRequestedEventArgs* args);

        END_INTERFACE
    } __x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CUI__CXaml__CControls__CPrimitives__CIScrollControllerPanningInfo___x_ABI_CMicrosoft__CUI__CXaml__CControls__CPrimitives__CScrollControllerPanRequestedEventArgsVtbl;

    interface __x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CUI__CXaml__CControls__CPrimitives__CIScrollControllerPanningInfo___x_ABI_CMicrosoft__CUI__CXaml__CControls__CPrimitives__CScrollControllerPanRequestedEventArgs
    {
        CONST_VTBL struct __x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CUI__CXaml__CControls__CPrimitives__CIScrollControllerPanningInfo___x_ABI_CMicrosoft__CUI__CXaml__CControls__CPrimitives__CScrollControllerPanRequestedEventArgsVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CUI__CXaml__CControls__CPrimitives__CIScrollControllerPanningInfo___x_ABI_CMicrosoft__CUI__CXaml__CControls__CPrimitives__CScrollControllerPanRequestedEventArgs_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CUI__CXaml__CControls__CPrimitives__CScrollPresenter_IInspectable_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CUI__CXaml__CControls__CPrimitives__CScrollPresenter_IInspectable_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CUI__CXaml__CControls__CPrimitives__CScrollPresenter_IInspectable __x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CUI__CXaml__CControls__CPrimitives__CScrollPresenter_IInspectable;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CUI__CXaml__CControls__CPrimitives__CScrollPresenter_IInspectable;

    typedef struct __x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CUI__CXaml__CControls__CPrimitives__CScrollPresenter_IInspectableVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CUI__CXaml__CControls__CPrimitives__CScrollPresenter_IInspectable* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CUI__CXaml__CControls__CPrimitives__CScrollPresenter_IInspectable* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CUI__CXaml__CControls__CPrimitives__CScrollPresenter_IInspectable* This);
        HRESULT (STDMETHODCALLTYPE* Invoke)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CUI__CXaml__CControls__CPrimitives__CScrollPresenter_IInspectable* This,
        __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIScrollPresenter* sender,
        IInspectable* args);

        END_INTERFACE
    } __x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CUI__CXaml__CControls__CPrimitives__CScrollPresenter_IInspectableVtbl;

    interface __x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CUI__CXaml__CControls__CPrimitives__CScrollPresenter_IInspectable
    {
        CONST_VTBL struct __x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CUI__CXaml__CControls__CPrimitives__CScrollPresenter_IInspectableVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CUI__CXaml__CControls__CPrimitives__CScrollPresenter_IInspectable_INTERFACE_DEFINED__
    
#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CIScrollingAnchorRequestedEventArgs_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CIScrollingAnchorRequestedEventArgs_FWD_DEFINED__
    typedef interface __x_ABI_CMicrosoft_CUI_CXaml_CControls_CIScrollingAnchorRequestedEventArgs __x_ABI_CMicrosoft_CUI_CXaml_CControls_CIScrollingAnchorRequestedEventArgs;

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CIScrollingAnchorRequestedEventArgs_FWD_DEFINED__

#if !defined(____x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CUI__CXaml__CControls__CPrimitives__CScrollPresenter___x_ABI_CMicrosoft__CUI__CXaml__CControls__CScrollingAnchorRequestedEventArgs_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CUI__CXaml__CControls__CPrimitives__CScrollPresenter___x_ABI_CMicrosoft__CUI__CXaml__CControls__CScrollingAnchorRequestedEventArgs_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CUI__CXaml__CControls__CPrimitives__CScrollPresenter___x_ABI_CMicrosoft__CUI__CXaml__CControls__CScrollingAnchorRequestedEventArgs __x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CUI__CXaml__CControls__CPrimitives__CScrollPresenter___x_ABI_CMicrosoft__CUI__CXaml__CControls__CScrollingAnchorRequestedEventArgs;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CUI__CXaml__CControls__CPrimitives__CScrollPresenter___x_ABI_CMicrosoft__CUI__CXaml__CControls__CScrollingAnchorRequestedEventArgs;

    typedef struct __x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CUI__CXaml__CControls__CPrimitives__CScrollPresenter___x_ABI_CMicrosoft__CUI__CXaml__CControls__CScrollingAnchorRequestedEventArgsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CUI__CXaml__CControls__CPrimitives__CScrollPresenter___x_ABI_CMicrosoft__CUI__CXaml__CControls__CScrollingAnchorRequestedEventArgs* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CUI__CXaml__CControls__CPrimitives__CScrollPresenter___x_ABI_CMicrosoft__CUI__CXaml__CControls__CScrollingAnchorRequestedEventArgs* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CUI__CXaml__CControls__CPrimitives__CScrollPresenter___x_ABI_CMicrosoft__CUI__CXaml__CControls__CScrollingAnchorRequestedEventArgs* This);
        HRESULT (STDMETHODCALLTYPE* Invoke)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CUI__CXaml__CControls__CPrimitives__CScrollPresenter___x_ABI_CMicrosoft__CUI__CXaml__CControls__CScrollingAnchorRequestedEventArgs* This,
        __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIScrollPresenter* sender,
        __x_ABI_CMicrosoft_CUI_CXaml_CControls_CIScrollingAnchorRequestedEventArgs* args);

        END_INTERFACE
    } __x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CUI__CXaml__CControls__CPrimitives__CScrollPresenter___x_ABI_CMicrosoft__CUI__CXaml__CControls__CScrollingAnchorRequestedEventArgsVtbl;

    interface __x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CUI__CXaml__CControls__CPrimitives__CScrollPresenter___x_ABI_CMicrosoft__CUI__CXaml__CControls__CScrollingAnchorRequestedEventArgs
    {
        CONST_VTBL struct __x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CUI__CXaml__CControls__CPrimitives__CScrollPresenter___x_ABI_CMicrosoft__CUI__CXaml__CControls__CScrollingAnchorRequestedEventArgsVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CUI__CXaml__CControls__CPrimitives__CScrollPresenter___x_ABI_CMicrosoft__CUI__CXaml__CControls__CScrollingAnchorRequestedEventArgs_INTERFACE_DEFINED__
    
#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CIScrollingBringingIntoViewEventArgs_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CIScrollingBringingIntoViewEventArgs_FWD_DEFINED__
    typedef interface __x_ABI_CMicrosoft_CUI_CXaml_CControls_CIScrollingBringingIntoViewEventArgs __x_ABI_CMicrosoft_CUI_CXaml_CControls_CIScrollingBringingIntoViewEventArgs;

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CIScrollingBringingIntoViewEventArgs_FWD_DEFINED__

#if !defined(____x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CUI__CXaml__CControls__CPrimitives__CScrollPresenter___x_ABI_CMicrosoft__CUI__CXaml__CControls__CScrollingBringingIntoViewEventArgs_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CUI__CXaml__CControls__CPrimitives__CScrollPresenter___x_ABI_CMicrosoft__CUI__CXaml__CControls__CScrollingBringingIntoViewEventArgs_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CUI__CXaml__CControls__CPrimitives__CScrollPresenter___x_ABI_CMicrosoft__CUI__CXaml__CControls__CScrollingBringingIntoViewEventArgs __x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CUI__CXaml__CControls__CPrimitives__CScrollPresenter___x_ABI_CMicrosoft__CUI__CXaml__CControls__CScrollingBringingIntoViewEventArgs;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CUI__CXaml__CControls__CPrimitives__CScrollPresenter___x_ABI_CMicrosoft__CUI__CXaml__CControls__CScrollingBringingIntoViewEventArgs;

    typedef struct __x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CUI__CXaml__CControls__CPrimitives__CScrollPresenter___x_ABI_CMicrosoft__CUI__CXaml__CControls__CScrollingBringingIntoViewEventArgsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CUI__CXaml__CControls__CPrimitives__CScrollPresenter___x_ABI_CMicrosoft__CUI__CXaml__CControls__CScrollingBringingIntoViewEventArgs* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CUI__CXaml__CControls__CPrimitives__CScrollPresenter___x_ABI_CMicrosoft__CUI__CXaml__CControls__CScrollingBringingIntoViewEventArgs* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CUI__CXaml__CControls__CPrimitives__CScrollPresenter___x_ABI_CMicrosoft__CUI__CXaml__CControls__CScrollingBringingIntoViewEventArgs* This);
        HRESULT (STDMETHODCALLTYPE* Invoke)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CUI__CXaml__CControls__CPrimitives__CScrollPresenter___x_ABI_CMicrosoft__CUI__CXaml__CControls__CScrollingBringingIntoViewEventArgs* This,
        __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIScrollPresenter* sender,
        __x_ABI_CMicrosoft_CUI_CXaml_CControls_CIScrollingBringingIntoViewEventArgs* args);

        END_INTERFACE
    } __x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CUI__CXaml__CControls__CPrimitives__CScrollPresenter___x_ABI_CMicrosoft__CUI__CXaml__CControls__CScrollingBringingIntoViewEventArgsVtbl;

    interface __x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CUI__CXaml__CControls__CPrimitives__CScrollPresenter___x_ABI_CMicrosoft__CUI__CXaml__CControls__CScrollingBringingIntoViewEventArgs
    {
        CONST_VTBL struct __x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CUI__CXaml__CControls__CPrimitives__CScrollPresenter___x_ABI_CMicrosoft__CUI__CXaml__CControls__CScrollingBringingIntoViewEventArgsVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CUI__CXaml__CControls__CPrimitives__CScrollPresenter___x_ABI_CMicrosoft__CUI__CXaml__CControls__CScrollingBringingIntoViewEventArgs_INTERFACE_DEFINED__
    
#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CIScrollingScrollAnimationStartingEventArgs_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CIScrollingScrollAnimationStartingEventArgs_FWD_DEFINED__
    typedef interface __x_ABI_CMicrosoft_CUI_CXaml_CControls_CIScrollingScrollAnimationStartingEventArgs __x_ABI_CMicrosoft_CUI_CXaml_CControls_CIScrollingScrollAnimationStartingEventArgs;

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CIScrollingScrollAnimationStartingEventArgs_FWD_DEFINED__

#if !defined(____x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CUI__CXaml__CControls__CPrimitives__CScrollPresenter___x_ABI_CMicrosoft__CUI__CXaml__CControls__CScrollingScrollAnimationStartingEventArgs_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CUI__CXaml__CControls__CPrimitives__CScrollPresenter___x_ABI_CMicrosoft__CUI__CXaml__CControls__CScrollingScrollAnimationStartingEventArgs_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CUI__CXaml__CControls__CPrimitives__CScrollPresenter___x_ABI_CMicrosoft__CUI__CXaml__CControls__CScrollingScrollAnimationStartingEventArgs __x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CUI__CXaml__CControls__CPrimitives__CScrollPresenter___x_ABI_CMicrosoft__CUI__CXaml__CControls__CScrollingScrollAnimationStartingEventArgs;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CUI__CXaml__CControls__CPrimitives__CScrollPresenter___x_ABI_CMicrosoft__CUI__CXaml__CControls__CScrollingScrollAnimationStartingEventArgs;

    typedef struct __x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CUI__CXaml__CControls__CPrimitives__CScrollPresenter___x_ABI_CMicrosoft__CUI__CXaml__CControls__CScrollingScrollAnimationStartingEventArgsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CUI__CXaml__CControls__CPrimitives__CScrollPresenter___x_ABI_CMicrosoft__CUI__CXaml__CControls__CScrollingScrollAnimationStartingEventArgs* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CUI__CXaml__CControls__CPrimitives__CScrollPresenter___x_ABI_CMicrosoft__CUI__CXaml__CControls__CScrollingScrollAnimationStartingEventArgs* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CUI__CXaml__CControls__CPrimitives__CScrollPresenter___x_ABI_CMicrosoft__CUI__CXaml__CControls__CScrollingScrollAnimationStartingEventArgs* This);
        HRESULT (STDMETHODCALLTYPE* Invoke)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CUI__CXaml__CControls__CPrimitives__CScrollPresenter___x_ABI_CMicrosoft__CUI__CXaml__CControls__CScrollingScrollAnimationStartingEventArgs* This,
        __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIScrollPresenter* sender,
        __x_ABI_CMicrosoft_CUI_CXaml_CControls_CIScrollingScrollAnimationStartingEventArgs* args);

        END_INTERFACE
    } __x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CUI__CXaml__CControls__CPrimitives__CScrollPresenter___x_ABI_CMicrosoft__CUI__CXaml__CControls__CScrollingScrollAnimationStartingEventArgsVtbl;

    interface __x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CUI__CXaml__CControls__CPrimitives__CScrollPresenter___x_ABI_CMicrosoft__CUI__CXaml__CControls__CScrollingScrollAnimationStartingEventArgs
    {
        CONST_VTBL struct __x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CUI__CXaml__CControls__CPrimitives__CScrollPresenter___x_ABI_CMicrosoft__CUI__CXaml__CControls__CScrollingScrollAnimationStartingEventArgsVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CUI__CXaml__CControls__CPrimitives__CScrollPresenter___x_ABI_CMicrosoft__CUI__CXaml__CControls__CScrollingScrollAnimationStartingEventArgs_INTERFACE_DEFINED__
    
#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CIScrollingScrollCompletedEventArgs_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CIScrollingScrollCompletedEventArgs_FWD_DEFINED__
    typedef interface __x_ABI_CMicrosoft_CUI_CXaml_CControls_CIScrollingScrollCompletedEventArgs __x_ABI_CMicrosoft_CUI_CXaml_CControls_CIScrollingScrollCompletedEventArgs;

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CIScrollingScrollCompletedEventArgs_FWD_DEFINED__

#if !defined(____x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CUI__CXaml__CControls__CPrimitives__CScrollPresenter___x_ABI_CMicrosoft__CUI__CXaml__CControls__CScrollingScrollCompletedEventArgs_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CUI__CXaml__CControls__CPrimitives__CScrollPresenter___x_ABI_CMicrosoft__CUI__CXaml__CControls__CScrollingScrollCompletedEventArgs_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CUI__CXaml__CControls__CPrimitives__CScrollPresenter___x_ABI_CMicrosoft__CUI__CXaml__CControls__CScrollingScrollCompletedEventArgs __x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CUI__CXaml__CControls__CPrimitives__CScrollPresenter___x_ABI_CMicrosoft__CUI__CXaml__CControls__CScrollingScrollCompletedEventArgs;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CUI__CXaml__CControls__CPrimitives__CScrollPresenter___x_ABI_CMicrosoft__CUI__CXaml__CControls__CScrollingScrollCompletedEventArgs;

    typedef struct __x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CUI__CXaml__CControls__CPrimitives__CScrollPresenter___x_ABI_CMicrosoft__CUI__CXaml__CControls__CScrollingScrollCompletedEventArgsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CUI__CXaml__CControls__CPrimitives__CScrollPresenter___x_ABI_CMicrosoft__CUI__CXaml__CControls__CScrollingScrollCompletedEventArgs* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CUI__CXaml__CControls__CPrimitives__CScrollPresenter___x_ABI_CMicrosoft__CUI__CXaml__CControls__CScrollingScrollCompletedEventArgs* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CUI__CXaml__CControls__CPrimitives__CScrollPresenter___x_ABI_CMicrosoft__CUI__CXaml__CControls__CScrollingScrollCompletedEventArgs* This);
        HRESULT (STDMETHODCALLTYPE* Invoke)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CUI__CXaml__CControls__CPrimitives__CScrollPresenter___x_ABI_CMicrosoft__CUI__CXaml__CControls__CScrollingScrollCompletedEventArgs* This,
        __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIScrollPresenter* sender,
        __x_ABI_CMicrosoft_CUI_CXaml_CControls_CIScrollingScrollCompletedEventArgs* args);

        END_INTERFACE
    } __x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CUI__CXaml__CControls__CPrimitives__CScrollPresenter___x_ABI_CMicrosoft__CUI__CXaml__CControls__CScrollingScrollCompletedEventArgsVtbl;

    interface __x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CUI__CXaml__CControls__CPrimitives__CScrollPresenter___x_ABI_CMicrosoft__CUI__CXaml__CControls__CScrollingScrollCompletedEventArgs
    {
        CONST_VTBL struct __x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CUI__CXaml__CControls__CPrimitives__CScrollPresenter___x_ABI_CMicrosoft__CUI__CXaml__CControls__CScrollingScrollCompletedEventArgsVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CUI__CXaml__CControls__CPrimitives__CScrollPresenter___x_ABI_CMicrosoft__CUI__CXaml__CControls__CScrollingScrollCompletedEventArgs_INTERFACE_DEFINED__
    
#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CIScrollingZoomAnimationStartingEventArgs_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CIScrollingZoomAnimationStartingEventArgs_FWD_DEFINED__
    typedef interface __x_ABI_CMicrosoft_CUI_CXaml_CControls_CIScrollingZoomAnimationStartingEventArgs __x_ABI_CMicrosoft_CUI_CXaml_CControls_CIScrollingZoomAnimationStartingEventArgs;

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CIScrollingZoomAnimationStartingEventArgs_FWD_DEFINED__

#if !defined(____x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CUI__CXaml__CControls__CPrimitives__CScrollPresenter___x_ABI_CMicrosoft__CUI__CXaml__CControls__CScrollingZoomAnimationStartingEventArgs_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CUI__CXaml__CControls__CPrimitives__CScrollPresenter___x_ABI_CMicrosoft__CUI__CXaml__CControls__CScrollingZoomAnimationStartingEventArgs_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CUI__CXaml__CControls__CPrimitives__CScrollPresenter___x_ABI_CMicrosoft__CUI__CXaml__CControls__CScrollingZoomAnimationStartingEventArgs __x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CUI__CXaml__CControls__CPrimitives__CScrollPresenter___x_ABI_CMicrosoft__CUI__CXaml__CControls__CScrollingZoomAnimationStartingEventArgs;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CUI__CXaml__CControls__CPrimitives__CScrollPresenter___x_ABI_CMicrosoft__CUI__CXaml__CControls__CScrollingZoomAnimationStartingEventArgs;

    typedef struct __x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CUI__CXaml__CControls__CPrimitives__CScrollPresenter___x_ABI_CMicrosoft__CUI__CXaml__CControls__CScrollingZoomAnimationStartingEventArgsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CUI__CXaml__CControls__CPrimitives__CScrollPresenter___x_ABI_CMicrosoft__CUI__CXaml__CControls__CScrollingZoomAnimationStartingEventArgs* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CUI__CXaml__CControls__CPrimitives__CScrollPresenter___x_ABI_CMicrosoft__CUI__CXaml__CControls__CScrollingZoomAnimationStartingEventArgs* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CUI__CXaml__CControls__CPrimitives__CScrollPresenter___x_ABI_CMicrosoft__CUI__CXaml__CControls__CScrollingZoomAnimationStartingEventArgs* This);
        HRESULT (STDMETHODCALLTYPE* Invoke)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CUI__CXaml__CControls__CPrimitives__CScrollPresenter___x_ABI_CMicrosoft__CUI__CXaml__CControls__CScrollingZoomAnimationStartingEventArgs* This,
        __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIScrollPresenter* sender,
        __x_ABI_CMicrosoft_CUI_CXaml_CControls_CIScrollingZoomAnimationStartingEventArgs* args);

        END_INTERFACE
    } __x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CUI__CXaml__CControls__CPrimitives__CScrollPresenter___x_ABI_CMicrosoft__CUI__CXaml__CControls__CScrollingZoomAnimationStartingEventArgsVtbl;

    interface __x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CUI__CXaml__CControls__CPrimitives__CScrollPresenter___x_ABI_CMicrosoft__CUI__CXaml__CControls__CScrollingZoomAnimationStartingEventArgs
    {
        CONST_VTBL struct __x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CUI__CXaml__CControls__CPrimitives__CScrollPresenter___x_ABI_CMicrosoft__CUI__CXaml__CControls__CScrollingZoomAnimationStartingEventArgsVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CUI__CXaml__CControls__CPrimitives__CScrollPresenter___x_ABI_CMicrosoft__CUI__CXaml__CControls__CScrollingZoomAnimationStartingEventArgs_INTERFACE_DEFINED__
    
#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CIScrollingZoomCompletedEventArgs_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CIScrollingZoomCompletedEventArgs_FWD_DEFINED__
    typedef interface __x_ABI_CMicrosoft_CUI_CXaml_CControls_CIScrollingZoomCompletedEventArgs __x_ABI_CMicrosoft_CUI_CXaml_CControls_CIScrollingZoomCompletedEventArgs;

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CIScrollingZoomCompletedEventArgs_FWD_DEFINED__

#if !defined(____x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CUI__CXaml__CControls__CPrimitives__CScrollPresenter___x_ABI_CMicrosoft__CUI__CXaml__CControls__CScrollingZoomCompletedEventArgs_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CUI__CXaml__CControls__CPrimitives__CScrollPresenter___x_ABI_CMicrosoft__CUI__CXaml__CControls__CScrollingZoomCompletedEventArgs_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CUI__CXaml__CControls__CPrimitives__CScrollPresenter___x_ABI_CMicrosoft__CUI__CXaml__CControls__CScrollingZoomCompletedEventArgs __x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CUI__CXaml__CControls__CPrimitives__CScrollPresenter___x_ABI_CMicrosoft__CUI__CXaml__CControls__CScrollingZoomCompletedEventArgs;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CUI__CXaml__CControls__CPrimitives__CScrollPresenter___x_ABI_CMicrosoft__CUI__CXaml__CControls__CScrollingZoomCompletedEventArgs;

    typedef struct __x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CUI__CXaml__CControls__CPrimitives__CScrollPresenter___x_ABI_CMicrosoft__CUI__CXaml__CControls__CScrollingZoomCompletedEventArgsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CUI__CXaml__CControls__CPrimitives__CScrollPresenter___x_ABI_CMicrosoft__CUI__CXaml__CControls__CScrollingZoomCompletedEventArgs* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CUI__CXaml__CControls__CPrimitives__CScrollPresenter___x_ABI_CMicrosoft__CUI__CXaml__CControls__CScrollingZoomCompletedEventArgs* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CUI__CXaml__CControls__CPrimitives__CScrollPresenter___x_ABI_CMicrosoft__CUI__CXaml__CControls__CScrollingZoomCompletedEventArgs* This);
        HRESULT (STDMETHODCALLTYPE* Invoke)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CUI__CXaml__CControls__CPrimitives__CScrollPresenter___x_ABI_CMicrosoft__CUI__CXaml__CControls__CScrollingZoomCompletedEventArgs* This,
        __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIScrollPresenter* sender,
        __x_ABI_CMicrosoft_CUI_CXaml_CControls_CIScrollingZoomCompletedEventArgs* args);

        END_INTERFACE
    } __x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CUI__CXaml__CControls__CPrimitives__CScrollPresenter___x_ABI_CMicrosoft__CUI__CXaml__CControls__CScrollingZoomCompletedEventArgsVtbl;

    interface __x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CUI__CXaml__CControls__CPrimitives__CScrollPresenter___x_ABI_CMicrosoft__CUI__CXaml__CControls__CScrollingZoomCompletedEventArgs
    {
        CONST_VTBL struct __x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CUI__CXaml__CControls__CPrimitives__CScrollPresenter___x_ABI_CMicrosoft__CUI__CXaml__CControls__CScrollingZoomCompletedEventArgsVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CUI__CXaml__CControls__CPrimitives__CScrollPresenter___x_ABI_CMicrosoft__CUI__CXaml__CControls__CScrollingZoomCompletedEventArgs_INTERFACE_DEFINED__
    
#ifndef ____x_ABI_CMicrosoft_CUI_CComposition_CICompositionAnimation_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CComposition_CICompositionAnimation_FWD_DEFINED__
    typedef interface __x_ABI_CMicrosoft_CUI_CComposition_CICompositionAnimation __x_ABI_CMicrosoft_CUI_CComposition_CICompositionAnimation;

#endif // ____x_ABI_CMicrosoft_CUI_CComposition_CICompositionAnimation_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CComposition_CICompositionPropertySet_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CComposition_CICompositionPropertySet_FWD_DEFINED__
    typedef interface __x_ABI_CMicrosoft_CUI_CComposition_CICompositionPropertySet __x_ABI_CMicrosoft_CUI_CComposition_CICompositionPropertySet;

#endif // ____x_ABI_CMicrosoft_CUI_CComposition_CICompositionPropertySet_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CComposition_CIAnimationObject_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CComposition_CIAnimationObject_FWD_DEFINED__
    typedef interface __x_ABI_CMicrosoft_CUI_CComposition_CIAnimationObject __x_ABI_CMicrosoft_CUI_CComposition_CIAnimationObject;

#endif // ____x_ABI_CMicrosoft_CUI_CComposition_CIAnimationObject_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CComposition_CIVisualElement_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CComposition_CIVisualElement_FWD_DEFINED__
    typedef interface __x_ABI_CMicrosoft_CUI_CComposition_CIVisualElement __x_ABI_CMicrosoft_CUI_CComposition_CIVisualElement;

#endif // ____x_ABI_CMicrosoft_CUI_CComposition_CIVisualElement_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CComposition_CIVisualElement2_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CComposition_CIVisualElement2_FWD_DEFINED__
    typedef interface __x_ABI_CMicrosoft_CUI_CComposition_CIVisualElement2 __x_ABI_CMicrosoft_CUI_CComposition_CIVisualElement2;

#endif // ____x_ABI_CMicrosoft_CUI_CComposition_CIVisualElement2_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CInput_CIPointerPoint_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CInput_CIPointerPoint_FWD_DEFINED__
    typedef interface __x_ABI_CMicrosoft_CUI_CInput_CIPointerPoint __x_ABI_CMicrosoft_CUI_CInput_CIPointerPoint;

#endif // ____x_ABI_CMicrosoft_CUI_CInput_CIPointerPoint_FWD_DEFINED__

typedef enum __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CAutomationControlType __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CAutomationControlType;

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CIAutoSuggestBox_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CIAutoSuggestBox_FWD_DEFINED__
    typedef interface __x_ABI_CMicrosoft_CUI_CXaml_CControls_CIAutoSuggestBox __x_ABI_CMicrosoft_CUI_CXaml_CControls_CIAutoSuggestBox;

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CIAutoSuggestBox_FWD_DEFINED__

typedef enum __x_ABI_CMicrosoft_CUI_CXaml_CControls_CClickMode __x_ABI_CMicrosoft_CUI_CXaml_CControls_CClickMode;

typedef enum __x_ABI_CMicrosoft_CUI_CXaml_CControls_CColorPickerHsvChannel __x_ABI_CMicrosoft_CUI_CXaml_CControls_CColorPickerHsvChannel;

typedef enum __x_ABI_CMicrosoft_CUI_CXaml_CControls_CColorSpectrumComponents __x_ABI_CMicrosoft_CUI_CXaml_CControls_CColorSpectrumComponents;

typedef enum __x_ABI_CMicrosoft_CUI_CXaml_CControls_CColorSpectrumShape __x_ABI_CMicrosoft_CUI_CXaml_CControls_CColorSpectrumShape;

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CIComboBox_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CIComboBox_FWD_DEFINED__
    typedef interface __x_ABI_CMicrosoft_CUI_CXaml_CControls_CIComboBox __x_ABI_CMicrosoft_CUI_CXaml_CControls_CIComboBox;

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CIComboBox_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CIControl_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CIControl_FWD_DEFINED__
    typedef interface __x_ABI_CMicrosoft_CUI_CXaml_CControls_CIControl __x_ABI_CMicrosoft_CUI_CXaml_CControls_CIControl;

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CIControl_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CIAppBar_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CIAppBar_FWD_DEFINED__
    typedef interface __x_ABI_CMicrosoft_CUI_CXaml_CControls_CIAppBar __x_ABI_CMicrosoft_CUI_CXaml_CControls_CIAppBar;

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CIAppBar_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CIAppBarOverrides_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CIAppBarOverrides_FWD_DEFINED__
    typedef interface __x_ABI_CMicrosoft_CUI_CXaml_CControls_CIAppBarOverrides __x_ABI_CMicrosoft_CUI_CXaml_CControls_CIAppBarOverrides;

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CIAppBarOverrides_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CICanvas_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CICanvas_FWD_DEFINED__
    typedef interface __x_ABI_CMicrosoft_CUI_CXaml_CControls_CICanvas __x_ABI_CMicrosoft_CUI_CXaml_CControls_CICanvas;

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CICanvas_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CICommandBar_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CICommandBar_FWD_DEFINED__
    typedef interface __x_ABI_CMicrosoft_CUI_CXaml_CControls_CICommandBar __x_ABI_CMicrosoft_CUI_CXaml_CControls_CICommandBar;

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CICommandBar_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CIContentControl_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CIContentControl_FWD_DEFINED__
    typedef interface __x_ABI_CMicrosoft_CUI_CXaml_CControls_CIContentControl __x_ABI_CMicrosoft_CUI_CXaml_CControls_CIContentControl;

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CIContentControl_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CIContentControlOverrides_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CIContentControlOverrides_FWD_DEFINED__
    typedef interface __x_ABI_CMicrosoft_CUI_CXaml_CControls_CIContentControlOverrides __x_ABI_CMicrosoft_CUI_CXaml_CControls_CIContentControlOverrides;

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CIContentControlOverrides_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CIContentPresenter_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CIContentPresenter_FWD_DEFINED__
    typedef interface __x_ABI_CMicrosoft_CUI_CXaml_CControls_CIContentPresenter __x_ABI_CMicrosoft_CUI_CXaml_CControls_CIContentPresenter;

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CIContentPresenter_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CIContentPresenterOverrides_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CIContentPresenterOverrides_FWD_DEFINED__
    typedef interface __x_ABI_CMicrosoft_CUI_CXaml_CControls_CIContentPresenterOverrides __x_ABI_CMicrosoft_CUI_CXaml_CControls_CIContentPresenterOverrides;

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CIContentPresenterOverrides_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CIControlOverrides_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CIControlOverrides_FWD_DEFINED__
    typedef interface __x_ABI_CMicrosoft_CUI_CXaml_CControls_CIControlOverrides __x_ABI_CMicrosoft_CUI_CXaml_CControls_CIControlOverrides;

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CIControlOverrides_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CIControlProtected_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CIControlProtected_FWD_DEFINED__
    typedef interface __x_ABI_CMicrosoft_CUI_CXaml_CControls_CIControlProtected __x_ABI_CMicrosoft_CUI_CXaml_CControls_CIControlProtected;

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CIControlProtected_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CIGrid_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CIGrid_FWD_DEFINED__
    typedef interface __x_ABI_CMicrosoft_CUI_CXaml_CControls_CIGrid __x_ABI_CMicrosoft_CUI_CXaml_CControls_CIGrid;

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CIGrid_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CIInsertionPanel_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CIInsertionPanel_FWD_DEFINED__
    typedef interface __x_ABI_CMicrosoft_CUI_CXaml_CControls_CIInsertionPanel __x_ABI_CMicrosoft_CUI_CXaml_CControls_CIInsertionPanel;

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CIInsertionPanel_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CIItemContainerMapping_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CIItemContainerMapping_FWD_DEFINED__
    typedef interface __x_ABI_CMicrosoft_CUI_CXaml_CControls_CIItemContainerMapping __x_ABI_CMicrosoft_CUI_CXaml_CControls_CIItemContainerMapping;

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CIItemContainerMapping_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CIItemsControl_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CIItemsControl_FWD_DEFINED__
    typedef interface __x_ABI_CMicrosoft_CUI_CXaml_CControls_CIItemsControl __x_ABI_CMicrosoft_CUI_CXaml_CControls_CIItemsControl;

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CIItemsControl_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CIItemsControlOverrides_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CIItemsControlOverrides_FWD_DEFINED__
    typedef interface __x_ABI_CMicrosoft_CUI_CXaml_CControls_CIItemsControlOverrides __x_ABI_CMicrosoft_CUI_CXaml_CControls_CIItemsControlOverrides;

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CIItemsControlOverrides_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CILayout_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CILayout_FWD_DEFINED__
    typedef interface __x_ABI_CMicrosoft_CUI_CXaml_CControls_CILayout __x_ABI_CMicrosoft_CUI_CXaml_CControls_CILayout;

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CILayout_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CILayout2_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CILayout2_FWD_DEFINED__
    typedef interface __x_ABI_CMicrosoft_CUI_CXaml_CControls_CILayout2 __x_ABI_CMicrosoft_CUI_CXaml_CControls_CILayout2;

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CILayout2_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CILayoutOverrides_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CILayoutOverrides_FWD_DEFINED__
    typedef interface __x_ABI_CMicrosoft_CUI_CXaml_CControls_CILayoutOverrides __x_ABI_CMicrosoft_CUI_CXaml_CControls_CILayoutOverrides;

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CILayoutOverrides_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CILayoutProtected_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CILayoutProtected_FWD_DEFINED__
    typedef interface __x_ABI_CMicrosoft_CUI_CXaml_CControls_CILayoutProtected __x_ABI_CMicrosoft_CUI_CXaml_CControls_CILayoutProtected;

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CILayoutProtected_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CILayoutProtected2_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CILayoutProtected2_FWD_DEFINED__
    typedef interface __x_ABI_CMicrosoft_CUI_CXaml_CControls_CILayoutProtected2 __x_ABI_CMicrosoft_CUI_CXaml_CControls_CILayoutProtected2;

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CILayoutProtected2_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CIListView_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CIListView_FWD_DEFINED__
    typedef interface __x_ABI_CMicrosoft_CUI_CXaml_CControls_CIListView __x_ABI_CMicrosoft_CUI_CXaml_CControls_CIListView;

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CIListView_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CIListViewBase_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CIListViewBase_FWD_DEFINED__
    typedef interface __x_ABI_CMicrosoft_CUI_CXaml_CControls_CIListViewBase __x_ABI_CMicrosoft_CUI_CXaml_CControls_CIListViewBase;

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CIListViewBase_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CINonVirtualizingLayout_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CINonVirtualizingLayout_FWD_DEFINED__
    typedef interface __x_ABI_CMicrosoft_CUI_CXaml_CControls_CINonVirtualizingLayout __x_ABI_CMicrosoft_CUI_CXaml_CControls_CINonVirtualizingLayout;

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CINonVirtualizingLayout_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CINonVirtualizingLayoutOverrides_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CINonVirtualizingLayoutOverrides_FWD_DEFINED__
    typedef interface __x_ABI_CMicrosoft_CUI_CXaml_CControls_CINonVirtualizingLayoutOverrides __x_ABI_CMicrosoft_CUI_CXaml_CControls_CINonVirtualizingLayoutOverrides;

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CINonVirtualizingLayoutOverrides_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CIPanel_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CIPanel_FWD_DEFINED__
    typedef interface __x_ABI_CMicrosoft_CUI_CXaml_CControls_CIPanel __x_ABI_CMicrosoft_CUI_CXaml_CControls_CIPanel;

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CIPanel_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CIScrollAnchorProvider_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CIScrollAnchorProvider_FWD_DEFINED__
    typedef interface __x_ABI_CMicrosoft_CUI_CXaml_CControls_CIScrollAnchorProvider __x_ABI_CMicrosoft_CUI_CXaml_CControls_CIScrollAnchorProvider;

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CIScrollAnchorProvider_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CISemanticZoomInformation_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CISemanticZoomInformation_FWD_DEFINED__
    typedef interface __x_ABI_CMicrosoft_CUI_CXaml_CControls_CISemanticZoomInformation __x_ABI_CMicrosoft_CUI_CXaml_CControls_CISemanticZoomInformation;

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CISemanticZoomInformation_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CISlider_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CISlider_FWD_DEFINED__
    typedef interface __x_ABI_CMicrosoft_CUI_CXaml_CControls_CISlider __x_ABI_CMicrosoft_CUI_CXaml_CControls_CISlider;

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CISlider_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CIVirtualizingPanel_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CIVirtualizingPanel_FWD_DEFINED__
    typedef interface __x_ABI_CMicrosoft_CUI_CXaml_CControls_CIVirtualizingPanel __x_ABI_CMicrosoft_CUI_CXaml_CControls_CIVirtualizingPanel;

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CIVirtualizingPanel_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CIVirtualizingPanelOverrides_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CIVirtualizingPanelOverrides_FWD_DEFINED__
    typedef interface __x_ABI_CMicrosoft_CUI_CXaml_CControls_CIVirtualizingPanelOverrides __x_ABI_CMicrosoft_CUI_CXaml_CControls_CIVirtualizingPanelOverrides;

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CIVirtualizingPanelOverrides_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CIVirtualizingPanelProtected_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CIVirtualizingPanelProtected_FWD_DEFINED__
    typedef interface __x_ABI_CMicrosoft_CUI_CXaml_CControls_CIVirtualizingPanelProtected __x_ABI_CMicrosoft_CUI_CXaml_CControls_CIVirtualizingPanelProtected;

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CIVirtualizingPanelProtected_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CIIconElement_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CIIconElement_FWD_DEFINED__
    typedef interface __x_ABI_CMicrosoft_CUI_CXaml_CControls_CIIconElement __x_ABI_CMicrosoft_CUI_CXaml_CControls_CIIconElement;

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CIIconElement_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CIInfoBadge_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CIInfoBadge_FWD_DEFINED__
    typedef interface __x_ABI_CMicrosoft_CUI_CXaml_CControls_CIInfoBadge __x_ABI_CMicrosoft_CUI_CXaml_CControls_CIInfoBadge;

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CIInfoBadge_FWD_DEFINED__

typedef enum __x_ABI_CMicrosoft_CUI_CXaml_CControls_CLightDismissOverlayMode __x_ABI_CMicrosoft_CUI_CXaml_CControls_CLightDismissOverlayMode;

typedef enum __x_ABI_CMicrosoft_CUI_CXaml_CControls_COrientation __x_ABI_CMicrosoft_CUI_CXaml_CControls_COrientation;

typedef enum __x_ABI_CMicrosoft_CUI_CXaml_CControls_CScrollingChainMode __x_ABI_CMicrosoft_CUI_CXaml_CControls_CScrollingChainMode;

typedef enum __x_ABI_CMicrosoft_CUI_CXaml_CControls_CScrollingContentOrientation __x_ABI_CMicrosoft_CUI_CXaml_CControls_CScrollingContentOrientation;

typedef enum __x_ABI_CMicrosoft_CUI_CXaml_CControls_CScrollingInputKinds __x_ABI_CMicrosoft_CUI_CXaml_CControls_CScrollingInputKinds;

typedef enum __x_ABI_CMicrosoft_CUI_CXaml_CControls_CScrollingInteractionState __x_ABI_CMicrosoft_CUI_CXaml_CControls_CScrollingInteractionState;

typedef enum __x_ABI_CMicrosoft_CUI_CXaml_CControls_CScrollingRailMode __x_ABI_CMicrosoft_CUI_CXaml_CControls_CScrollingRailMode;

typedef enum __x_ABI_CMicrosoft_CUI_CXaml_CControls_CScrollingScrollMode __x_ABI_CMicrosoft_CUI_CXaml_CControls_CScrollingScrollMode;

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CIScrollingScrollOptions_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CIScrollingScrollOptions_FWD_DEFINED__
    typedef interface __x_ABI_CMicrosoft_CUI_CXaml_CControls_CIScrollingScrollOptions __x_ABI_CMicrosoft_CUI_CXaml_CControls_CIScrollingScrollOptions;

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CIScrollingScrollOptions_FWD_DEFINED__

typedef enum __x_ABI_CMicrosoft_CUI_CXaml_CControls_CScrollingZoomMode __x_ABI_CMicrosoft_CUI_CXaml_CControls_CScrollingZoomMode;

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CIScrollingZoomOptions_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CIScrollingZoomOptions_FWD_DEFINED__
    typedef interface __x_ABI_CMicrosoft_CUI_CXaml_CControls_CIScrollingZoomOptions __x_ABI_CMicrosoft_CUI_CXaml_CControls_CIScrollingZoomOptions;

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CIScrollingZoomOptions_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CISelectionChangedEventHandler_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CISelectionChangedEventHandler_FWD_DEFINED__
typedef interface __x_ABI_CMicrosoft_CUI_CXaml_CControls_CISelectionChangedEventHandler __x_ABI_CMicrosoft_CUI_CXaml_CControls_CISelectionChangedEventHandler;

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CISelectionChangedEventHandler_FWD_DEFINED__

    typedef struct __x_ABI_CMicrosoft_CUI_CXaml_CCornerRadius __x_ABI_CMicrosoft_CUI_CXaml_CCornerRadius;

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CData_CIValueConverter_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CData_CIValueConverter_FWD_DEFINED__
    typedef interface __x_ABI_CMicrosoft_CUI_CXaml_CData_CIValueConverter __x_ABI_CMicrosoft_CUI_CXaml_CData_CIValueConverter;

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CData_CIValueConverter_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CIDataTemplate_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CIDataTemplate_FWD_DEFINED__
    typedef interface __x_ABI_CMicrosoft_CUI_CXaml_CIDataTemplate __x_ABI_CMicrosoft_CUI_CXaml_CIDataTemplate;

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CIDataTemplate_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CIDependencyObject_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CIDependencyObject_FWD_DEFINED__
    typedef interface __x_ABI_CMicrosoft_CUI_CXaml_CIDependencyObject __x_ABI_CMicrosoft_CUI_CXaml_CIDependencyObject;

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CIDependencyObject_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CIDependencyProperty_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CIDependencyProperty_FWD_DEFINED__
    typedef interface __x_ABI_CMicrosoft_CUI_CXaml_CIDependencyProperty __x_ABI_CMicrosoft_CUI_CXaml_CIDependencyProperty;

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CIDependencyProperty_FWD_DEFINED__

typedef enum __x_ABI_CMicrosoft_CUI_CXaml_CElementSoundMode __x_ABI_CMicrosoft_CUI_CXaml_CElementSoundMode;

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CIFrameworkElement_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CIFrameworkElement_FWD_DEFINED__
    typedef interface __x_ABI_CMicrosoft_CUI_CXaml_CIFrameworkElement __x_ABI_CMicrosoft_CUI_CXaml_CIFrameworkElement;

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CIFrameworkElement_FWD_DEFINED__

typedef struct __x_ABI_CMicrosoft_CUI_CXaml_CGridLength __x_ABI_CMicrosoft_CUI_CXaml_CGridLength;

typedef enum __x_ABI_CMicrosoft_CUI_CXaml_CHorizontalAlignment __x_ABI_CMicrosoft_CUI_CXaml_CHorizontalAlignment;

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CIFrameworkElementOverrides_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CIFrameworkElementOverrides_FWD_DEFINED__
    typedef interface __x_ABI_CMicrosoft_CUI_CXaml_CIFrameworkElementOverrides __x_ABI_CMicrosoft_CUI_CXaml_CIFrameworkElementOverrides;

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CIFrameworkElementOverrides_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CIFrameworkElementProtected_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CIFrameworkElementProtected_FWD_DEFINED__
    typedef interface __x_ABI_CMicrosoft_CUI_CXaml_CIFrameworkElementProtected __x_ABI_CMicrosoft_CUI_CXaml_CIFrameworkElementProtected;

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CIFrameworkElementProtected_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CIRoutedEventArgs_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CIRoutedEventArgs_FWD_DEFINED__
    typedef interface __x_ABI_CMicrosoft_CUI_CXaml_CIRoutedEventArgs __x_ABI_CMicrosoft_CUI_CXaml_CIRoutedEventArgs;

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CIRoutedEventArgs_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CIUIElement_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CIUIElement_FWD_DEFINED__
    typedef interface __x_ABI_CMicrosoft_CUI_CXaml_CIUIElement __x_ABI_CMicrosoft_CUI_CXaml_CIUIElement;

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CIUIElement_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CIUIElementOverrides_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CIUIElementOverrides_FWD_DEFINED__
    typedef interface __x_ABI_CMicrosoft_CUI_CXaml_CIUIElementOverrides __x_ABI_CMicrosoft_CUI_CXaml_CIUIElementOverrides;

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CIUIElementOverrides_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CIUIElementProtected_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CIUIElementProtected_FWD_DEFINED__
    typedef interface __x_ABI_CMicrosoft_CUI_CXaml_CIUIElementProtected __x_ABI_CMicrosoft_CUI_CXaml_CIUIElementProtected;

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CIUIElementProtected_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CInput_CICommand_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CInput_CICommand_FWD_DEFINED__
    typedef interface __x_ABI_CMicrosoft_CUI_CXaml_CInput_CICommand __x_ABI_CMicrosoft_CUI_CXaml_CInput_CICommand;

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CInput_CICommand_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CInput_CIProcessKeyboardAcceleratorEventArgs_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CInput_CIProcessKeyboardAcceleratorEventArgs_FWD_DEFINED__
    typedef interface __x_ABI_CMicrosoft_CUI_CXaml_CInput_CIProcessKeyboardAcceleratorEventArgs __x_ABI_CMicrosoft_CUI_CXaml_CInput_CIProcessKeyboardAcceleratorEventArgs;

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CInput_CIProcessKeyboardAcceleratorEventArgs_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CAnimation_CITransition_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CAnimation_CITransition_FWD_DEFINED__
    typedef interface __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CAnimation_CITransition __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CAnimation_CITransition;

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CAnimation_CITransition_FWD_DEFINED__

#if !defined(____x_ABI_C__FIIterator_1___x_ABI_CMicrosoft__CUI__CXaml__CMedia__CAnimation__CTransition_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIIterator_1___x_ABI_CMicrosoft__CUI__CXaml__CMedia__CAnimation__CTransition_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIIterator_1___x_ABI_CMicrosoft__CUI__CXaml__CMedia__CAnimation__CTransition __x_ABI_C__FIIterator_1___x_ABI_CMicrosoft__CUI__CXaml__CMedia__CAnimation__CTransition;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIIterator_1___x_ABI_CMicrosoft__CUI__CXaml__CMedia__CAnimation__CTransition;

    typedef struct __x_ABI_C__FIIterator_1___x_ABI_CMicrosoft__CUI__CXaml__CMedia__CAnimation__CTransitionVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIIterator_1___x_ABI_CMicrosoft__CUI__CXaml__CMedia__CAnimation__CTransition* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIIterator_1___x_ABI_CMicrosoft__CUI__CXaml__CMedia__CAnimation__CTransition* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIIterator_1___x_ABI_CMicrosoft__CUI__CXaml__CMedia__CAnimation__CTransition* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIIterator_1___x_ABI_CMicrosoft__CUI__CXaml__CMedia__CAnimation__CTransition* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIIterator_1___x_ABI_CMicrosoft__CUI__CXaml__CMedia__CAnimation__CTransition* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIIterator_1___x_ABI_CMicrosoft__CUI__CXaml__CMedia__CAnimation__CTransition* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Current)(__x_ABI_C__FIIterator_1___x_ABI_CMicrosoft__CUI__CXaml__CMedia__CAnimation__CTransition* This,
        __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CAnimation_CITransition** result);
    HRESULT (STDMETHODCALLTYPE* get_HasCurrent)(__x_ABI_C__FIIterator_1___x_ABI_CMicrosoft__CUI__CXaml__CMedia__CAnimation__CTransition* This,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* MoveNext)(__x_ABI_C__FIIterator_1___x_ABI_CMicrosoft__CUI__CXaml__CMedia__CAnimation__CTransition* This,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__x_ABI_C__FIIterator_1___x_ABI_CMicrosoft__CUI__CXaml__CMedia__CAnimation__CTransition* This,
        UINT32 itemsLength,
        __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CAnimation_CITransition** items,
        UINT32* result);

        END_INTERFACE
    } __x_ABI_C__FIIterator_1___x_ABI_CMicrosoft__CUI__CXaml__CMedia__CAnimation__CTransitionVtbl;

    interface __x_ABI_C__FIIterator_1___x_ABI_CMicrosoft__CUI__CXaml__CMedia__CAnimation__CTransition
    {
        CONST_VTBL struct __x_ABI_C__FIIterator_1___x_ABI_CMicrosoft__CUI__CXaml__CMedia__CAnimation__CTransitionVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIIterator_1___x_ABI_CMicrosoft__CUI__CXaml__CMedia__CAnimation__CTransition_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIIterable_1___x_ABI_CMicrosoft__CUI__CXaml__CMedia__CAnimation__CTransition_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIIterable_1___x_ABI_CMicrosoft__CUI__CXaml__CMedia__CAnimation__CTransition_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIIterable_1___x_ABI_CMicrosoft__CUI__CXaml__CMedia__CAnimation__CTransition __x_ABI_C__FIIterable_1___x_ABI_CMicrosoft__CUI__CXaml__CMedia__CAnimation__CTransition;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIIterable_1___x_ABI_CMicrosoft__CUI__CXaml__CMedia__CAnimation__CTransition;

    typedef struct __x_ABI_C__FIIterable_1___x_ABI_CMicrosoft__CUI__CXaml__CMedia__CAnimation__CTransitionVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIIterable_1___x_ABI_CMicrosoft__CUI__CXaml__CMedia__CAnimation__CTransition* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIIterable_1___x_ABI_CMicrosoft__CUI__CXaml__CMedia__CAnimation__CTransition* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIIterable_1___x_ABI_CMicrosoft__CUI__CXaml__CMedia__CAnimation__CTransition* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIIterable_1___x_ABI_CMicrosoft__CUI__CXaml__CMedia__CAnimation__CTransition* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIIterable_1___x_ABI_CMicrosoft__CUI__CXaml__CMedia__CAnimation__CTransition* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIIterable_1___x_ABI_CMicrosoft__CUI__CXaml__CMedia__CAnimation__CTransition* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* First)(__x_ABI_C__FIIterable_1___x_ABI_CMicrosoft__CUI__CXaml__CMedia__CAnimation__CTransition* This,
        __x_ABI_C__FIIterator_1___x_ABI_CMicrosoft__CUI__CXaml__CMedia__CAnimation__CTransition** result);

        END_INTERFACE
    } __x_ABI_C__FIIterable_1___x_ABI_CMicrosoft__CUI__CXaml__CMedia__CAnimation__CTransitionVtbl;

    interface __x_ABI_C__FIIterable_1___x_ABI_CMicrosoft__CUI__CXaml__CMedia__CAnimation__CTransition
    {
        CONST_VTBL struct __x_ABI_C__FIIterable_1___x_ABI_CMicrosoft__CUI__CXaml__CMedia__CAnimation__CTransitionVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIIterable_1___x_ABI_CMicrosoft__CUI__CXaml__CMedia__CAnimation__CTransition_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIVectorView_1___x_ABI_CMicrosoft__CUI__CXaml__CMedia__CAnimation__CTransition_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIVectorView_1___x_ABI_CMicrosoft__CUI__CXaml__CMedia__CAnimation__CTransition_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIVectorView_1___x_ABI_CMicrosoft__CUI__CXaml__CMedia__CAnimation__CTransition __x_ABI_C__FIVectorView_1___x_ABI_CMicrosoft__CUI__CXaml__CMedia__CAnimation__CTransition;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIVectorView_1___x_ABI_CMicrosoft__CUI__CXaml__CMedia__CAnimation__CTransition;

    typedef struct __x_ABI_C__FIVectorView_1___x_ABI_CMicrosoft__CUI__CXaml__CMedia__CAnimation__CTransitionVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIVectorView_1___x_ABI_CMicrosoft__CUI__CXaml__CMedia__CAnimation__CTransition* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIVectorView_1___x_ABI_CMicrosoft__CUI__CXaml__CMedia__CAnimation__CTransition* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIVectorView_1___x_ABI_CMicrosoft__CUI__CXaml__CMedia__CAnimation__CTransition* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIVectorView_1___x_ABI_CMicrosoft__CUI__CXaml__CMedia__CAnimation__CTransition* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIVectorView_1___x_ABI_CMicrosoft__CUI__CXaml__CMedia__CAnimation__CTransition* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIVectorView_1___x_ABI_CMicrosoft__CUI__CXaml__CMedia__CAnimation__CTransition* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* GetAt)(__x_ABI_C__FIVectorView_1___x_ABI_CMicrosoft__CUI__CXaml__CMedia__CAnimation__CTransition* This,
        UINT32 index,
        __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CAnimation_CITransition** result);
    HRESULT (STDMETHODCALLTYPE* get_Size)(__x_ABI_C__FIVectorView_1___x_ABI_CMicrosoft__CUI__CXaml__CMedia__CAnimation__CTransition* This,
        UINT32* result);
    HRESULT (STDMETHODCALLTYPE* IndexOf)(__x_ABI_C__FIVectorView_1___x_ABI_CMicrosoft__CUI__CXaml__CMedia__CAnimation__CTransition* This,
        __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CAnimation_CITransition* value,
        UINT32* index,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__x_ABI_C__FIVectorView_1___x_ABI_CMicrosoft__CUI__CXaml__CMedia__CAnimation__CTransition* This,
        UINT32 startIndex,
        UINT32 itemsLength,
        __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CAnimation_CITransition** items,
        UINT32* result);

        END_INTERFACE
    } __x_ABI_C__FIVectorView_1___x_ABI_CMicrosoft__CUI__CXaml__CMedia__CAnimation__CTransitionVtbl;

    interface __x_ABI_C__FIVectorView_1___x_ABI_CMicrosoft__CUI__CXaml__CMedia__CAnimation__CTransition
    {
        CONST_VTBL struct __x_ABI_C__FIVectorView_1___x_ABI_CMicrosoft__CUI__CXaml__CMedia__CAnimation__CTransitionVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIVectorView_1___x_ABI_CMicrosoft__CUI__CXaml__CMedia__CAnimation__CTransition_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIVector_1___x_ABI_CMicrosoft__CUI__CXaml__CMedia__CAnimation__CTransition_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIVector_1___x_ABI_CMicrosoft__CUI__CXaml__CMedia__CAnimation__CTransition_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIVector_1___x_ABI_CMicrosoft__CUI__CXaml__CMedia__CAnimation__CTransition __x_ABI_C__FIVector_1___x_ABI_CMicrosoft__CUI__CXaml__CMedia__CAnimation__CTransition;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIVector_1___x_ABI_CMicrosoft__CUI__CXaml__CMedia__CAnimation__CTransition;

    typedef struct __x_ABI_C__FIVector_1___x_ABI_CMicrosoft__CUI__CXaml__CMedia__CAnimation__CTransitionVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIVector_1___x_ABI_CMicrosoft__CUI__CXaml__CMedia__CAnimation__CTransition* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIVector_1___x_ABI_CMicrosoft__CUI__CXaml__CMedia__CAnimation__CTransition* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIVector_1___x_ABI_CMicrosoft__CUI__CXaml__CMedia__CAnimation__CTransition* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIVector_1___x_ABI_CMicrosoft__CUI__CXaml__CMedia__CAnimation__CTransition* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIVector_1___x_ABI_CMicrosoft__CUI__CXaml__CMedia__CAnimation__CTransition* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIVector_1___x_ABI_CMicrosoft__CUI__CXaml__CMedia__CAnimation__CTransition* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* GetAt)(__x_ABI_C__FIVector_1___x_ABI_CMicrosoft__CUI__CXaml__CMedia__CAnimation__CTransition* This,
        UINT32 index,
        __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CAnimation_CITransition** result);
    HRESULT (STDMETHODCALLTYPE* get_Size)(__x_ABI_C__FIVector_1___x_ABI_CMicrosoft__CUI__CXaml__CMedia__CAnimation__CTransition* This,
        UINT32* result);
    HRESULT (STDMETHODCALLTYPE* GetView)(__x_ABI_C__FIVector_1___x_ABI_CMicrosoft__CUI__CXaml__CMedia__CAnimation__CTransition* This,
        __x_ABI_C__FIVectorView_1___x_ABI_CMicrosoft__CUI__CXaml__CMedia__CAnimation__CTransition** result);
    HRESULT (STDMETHODCALLTYPE* IndexOf)(__x_ABI_C__FIVector_1___x_ABI_CMicrosoft__CUI__CXaml__CMedia__CAnimation__CTransition* This,
        __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CAnimation_CITransition* value,
        UINT32* index,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* SetAt)(__x_ABI_C__FIVector_1___x_ABI_CMicrosoft__CUI__CXaml__CMedia__CAnimation__CTransition* This,
        UINT32 index,
        __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CAnimation_CITransition* value);
    HRESULT (STDMETHODCALLTYPE* InsertAt)(__x_ABI_C__FIVector_1___x_ABI_CMicrosoft__CUI__CXaml__CMedia__CAnimation__CTransition* This,
        UINT32 index,
        __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CAnimation_CITransition* value);
    HRESULT (STDMETHODCALLTYPE* RemoveAt)(__x_ABI_C__FIVector_1___x_ABI_CMicrosoft__CUI__CXaml__CMedia__CAnimation__CTransition* This,
        UINT32 index);
    HRESULT (STDMETHODCALLTYPE* Append)(__x_ABI_C__FIVector_1___x_ABI_CMicrosoft__CUI__CXaml__CMedia__CAnimation__CTransition* This,
        __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CAnimation_CITransition* value);
    HRESULT (STDMETHODCALLTYPE* RemoveAtEnd)(__x_ABI_C__FIVector_1___x_ABI_CMicrosoft__CUI__CXaml__CMedia__CAnimation__CTransition* This);
    HRESULT (STDMETHODCALLTYPE* Clear)(__x_ABI_C__FIVector_1___x_ABI_CMicrosoft__CUI__CXaml__CMedia__CAnimation__CTransition* This);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__x_ABI_C__FIVector_1___x_ABI_CMicrosoft__CUI__CXaml__CMedia__CAnimation__CTransition* This,
        UINT32 startIndex,
        UINT32 itemsLength,
        __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CAnimation_CITransition** items,
        UINT32* result);
    HRESULT (STDMETHODCALLTYPE* ReplaceAll)(__x_ABI_C__FIVector_1___x_ABI_CMicrosoft__CUI__CXaml__CMedia__CAnimation__CTransition* This,
        UINT32 itemsLength,
        __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CAnimation_CITransition** items);

        END_INTERFACE
    } __x_ABI_C__FIVector_1___x_ABI_CMicrosoft__CUI__CXaml__CMedia__CAnimation__CTransitionVtbl;

    interface __x_ABI_C__FIVector_1___x_ABI_CMicrosoft__CUI__CXaml__CMedia__CAnimation__CTransition
    {
        CONST_VTBL struct __x_ABI_C__FIVector_1___x_ABI_CMicrosoft__CUI__CXaml__CMedia__CAnimation__CTransitionVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIVector_1___x_ABI_CMicrosoft__CUI__CXaml__CMedia__CAnimation__CTransition_INTERFACE_DEFINED__
    
#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIBrush_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIBrush_FWD_DEFINED__
    typedef interface __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIBrush __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIBrush;

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIBrush_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CISystemBackdrop_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CISystemBackdrop_FWD_DEFINED__
    typedef interface __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CISystemBackdrop __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CISystemBackdrop;

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CISystemBackdrop_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CIRoutedEventHandler_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CIRoutedEventHandler_FWD_DEFINED__
typedef interface __x_ABI_CMicrosoft_CUI_CXaml_CIRoutedEventHandler __x_ABI_CMicrosoft_CUI_CXaml_CIRoutedEventHandler;

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CIRoutedEventHandler_FWD_DEFINED__

    typedef struct __x_ABI_CMicrosoft_CUI_CXaml_CThickness __x_ABI_CMicrosoft_CUI_CXaml_CThickness;

typedef enum __x_ABI_CMicrosoft_CUI_CXaml_CVerticalAlignment __x_ABI_CMicrosoft_CUI_CXaml_CVerticalAlignment;

typedef enum __x_ABI_CMicrosoft_CUI_CXaml_CVisibility __x_ABI_CMicrosoft_CUI_CXaml_CVisibility;

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CIXamlRoot_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CIXamlRoot_FWD_DEFINED__
    typedef interface __x_ABI_CMicrosoft_CUI_CXaml_CIXamlRoot __x_ABI_CMicrosoft_CUI_CXaml_CIXamlRoot;

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CIXamlRoot_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CFoundation_CIPropertyValue_FWD_DEFINED__
#define ____x_ABI_CWindows_CFoundation_CIPropertyValue_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CFoundation_CIPropertyValue __x_ABI_CWindows_CFoundation_CIPropertyValue;

#endif // ____x_ABI_CWindows_CFoundation_CIPropertyValue_FWD_DEFINED__

typedef struct __x_ABI_CWindows_CFoundation_CNumerics_CVector4 __x_ABI_CWindows_CFoundation_CNumerics_CVector4;

typedef struct __x_ABI_CWindows_CFoundation_CSize __x_ABI_CWindows_CFoundation_CSize;

typedef struct __x_ABI_CWindows_CUI_CColor __x_ABI_CWindows_CUI_CColor;

typedef enum __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CAnimationDirection __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CAnimationDirection;

typedef enum __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CCornerRadiusFilterKind __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CCornerRadiusFilterKind;

typedef enum __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CCornerRadiusToThicknessConverterKind __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CCornerRadiusToThicknessConverterKind;

typedef enum __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CFlyoutPlacementMode __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CFlyoutPlacementMode;

typedef enum __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CFlyoutShowMode __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CFlyoutShowMode;

typedef enum __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CListViewItemPresenterCheckMode __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CListViewItemPresenterCheckMode;

typedef enum __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CListViewItemPresenterSelectionIndicatorMode __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CListViewItemPresenterSelectionIndicatorMode;

typedef enum __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CPopupPlacementMode __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CPopupPlacementMode;

typedef enum __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CScrollEventType __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CScrollEventType;

typedef enum __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CScrollSnapPointsAlignment __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CScrollSnapPointsAlignment;

typedef enum __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CScrollingIndicatorMode __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CScrollingIndicatorMode;

typedef enum __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CSnapPointsAlignment __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CSnapPointsAlignment;

typedef struct __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CGeneratorPosition __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CGeneratorPosition;

enum __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CAnimationDirection
    {
        __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CAnimationDirection_Left = 0,
    __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CAnimationDirection_Top = 1,
    __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CAnimationDirection_Right = 2,
    __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CAnimationDirection_Bottom = 3,
};

enum __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CComponentResourceLocation
    {
        __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CComponentResourceLocation_Application = 0,
    __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CComponentResourceLocation_Nested = 1,
};

enum __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CCornerRadiusFilterKind
    {
        __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CCornerRadiusFilterKind_None = 0,
    __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CCornerRadiusFilterKind_Top = 1,
    __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CCornerRadiusFilterKind_Right = 2,
    __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CCornerRadiusFilterKind_Bottom = 3,
    __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CCornerRadiusFilterKind_Left = 4,
    __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CCornerRadiusFilterKind_TopLeftValue = 5,
    __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CCornerRadiusFilterKind_BottomRightValue = 6,
};

enum __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CCornerRadiusToThicknessConverterKind
    {
        __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CCornerRadiusToThicknessConverterKind_FilterTopAndBottomFromLeft = 0,
    __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CCornerRadiusToThicknessConverterKind_FilterTopAndBottomFromRight = 1,
    __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CCornerRadiusToThicknessConverterKind_FilterLeftAndRightFromTop = 2,
    __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CCornerRadiusToThicknessConverterKind_FilterLeftAndRightFromBottom = 3,
    __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CCornerRadiusToThicknessConverterKind_FilterTopFromTopLeft = 4,
    __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CCornerRadiusToThicknessConverterKind_FilterTopFromTopRight = 5,
    __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CCornerRadiusToThicknessConverterKind_FilterRightFromTopRight = 6,
    __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CCornerRadiusToThicknessConverterKind_FilterRightFromBottomRight = 7,
    __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CCornerRadiusToThicknessConverterKind_FilterBottomFromBottomRight = 8,
    __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CCornerRadiusToThicknessConverterKind_FilterBottomFromBottomLeft = 9,
    __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CCornerRadiusToThicknessConverterKind_FilterLeftFromBottomLeft = 10,
    __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CCornerRadiusToThicknessConverterKind_FilterLeftFromTopLeft = 11,
};

enum __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CEdgeTransitionLocation
    {
        __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CEdgeTransitionLocation_Left = 0,
    __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CEdgeTransitionLocation_Top = 1,
    __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CEdgeTransitionLocation_Right = 2,
    __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CEdgeTransitionLocation_Bottom = 3,
};

enum __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CFlyoutPlacementMode
    {
        __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CFlyoutPlacementMode_Top = 0,
    __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CFlyoutPlacementMode_Bottom = 1,
    __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CFlyoutPlacementMode_Left = 2,
    __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CFlyoutPlacementMode_Right = 3,
    __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CFlyoutPlacementMode_Full = 4,
    __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CFlyoutPlacementMode_TopEdgeAlignedLeft = 5,
    __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CFlyoutPlacementMode_TopEdgeAlignedRight = 6,
    __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CFlyoutPlacementMode_BottomEdgeAlignedLeft = 7,
    __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CFlyoutPlacementMode_BottomEdgeAlignedRight = 8,
    __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CFlyoutPlacementMode_LeftEdgeAlignedTop = 9,
    __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CFlyoutPlacementMode_LeftEdgeAlignedBottom = 10,
    __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CFlyoutPlacementMode_RightEdgeAlignedTop = 11,
    __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CFlyoutPlacementMode_RightEdgeAlignedBottom = 12,
    __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CFlyoutPlacementMode_Auto = 13,
};

enum __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CFlyoutShowMode
    {
        __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CFlyoutShowMode_Auto = 0,
    __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CFlyoutShowMode_Standard = 1,
    __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CFlyoutShowMode_Transient = 2,
    __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CFlyoutShowMode_TransientWithDismissOnPointerMoveAway = 3,
};

enum __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CGeneratorDirection
    {
        __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CGeneratorDirection_Forward = 0,
    __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CGeneratorDirection_Backward = 1,
};

enum __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CGroupHeaderPlacement
    {
        __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CGroupHeaderPlacement_Top = 0,
    __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CGroupHeaderPlacement_Left = 1,
};

enum __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CListViewItemPresenterCheckMode
    {
        __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CListViewItemPresenterCheckMode_Inline = 0,
    __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CListViewItemPresenterCheckMode_Overlay = 1,
};

enum __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CListViewItemPresenterSelectionIndicatorMode
    {
        __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CListViewItemPresenterSelectionIndicatorMode_Inline = 0,
    __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CListViewItemPresenterSelectionIndicatorMode_Overlay = 1,
};

enum __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CPlacementMode
    {
        __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CPlacementMode_Bottom = 2,
    __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CPlacementMode_Left = 9,
    __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CPlacementMode_Mouse = 7,
    __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CPlacementMode_Right = 4,
    __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CPlacementMode_Top = 10,
};

enum __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CPopupPlacementMode
    {
        __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CPopupPlacementMode_Auto = 0,
    __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CPopupPlacementMode_Top = 1,
    __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CPopupPlacementMode_Bottom = 2,
    __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CPopupPlacementMode_Left = 3,
    __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CPopupPlacementMode_Right = 4,
    __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CPopupPlacementMode_TopEdgeAlignedLeft = 5,
    __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CPopupPlacementMode_TopEdgeAlignedRight = 6,
    __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CPopupPlacementMode_BottomEdgeAlignedLeft = 7,
    __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CPopupPlacementMode_BottomEdgeAlignedRight = 8,
    __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CPopupPlacementMode_LeftEdgeAlignedTop = 9,
    __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CPopupPlacementMode_LeftEdgeAlignedBottom = 10,
    __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CPopupPlacementMode_RightEdgeAlignedTop = 11,
    __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CPopupPlacementMode_RightEdgeAlignedBottom = 12,
};

enum __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CScrollEventType
    {
        __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CScrollEventType_SmallDecrement = 0,
    __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CScrollEventType_SmallIncrement = 1,
    __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CScrollEventType_LargeDecrement = 2,
    __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CScrollEventType_LargeIncrement = 3,
    __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CScrollEventType_ThumbPosition = 4,
    __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CScrollEventType_ThumbTrack = 5,
    __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CScrollEventType_First = 6,
    __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CScrollEventType_Last = 7,
    __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CScrollEventType_EndScroll = 8,
};

enum __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CScrollSnapPointsAlignment
    {
        __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CScrollSnapPointsAlignment_Near = 0,
    __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CScrollSnapPointsAlignment_Center = 1,
    __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CScrollSnapPointsAlignment_Far = 2,
};

enum __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CScrollingIndicatorMode
    {
        __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CScrollingIndicatorMode_None = 0,
    __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CScrollingIndicatorMode_TouchIndicator = 1,
    __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CScrollingIndicatorMode_MouseIndicator = 2,
};

enum __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CSliderSnapsTo
    {
        __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CSliderSnapsTo_StepValues = 0,
    __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CSliderSnapsTo_Ticks = 1,
};

enum __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CSnapPointsAlignment
    {
        __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CSnapPointsAlignment_Near = 0,
    __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CSnapPointsAlignment_Center = 1,
    __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CSnapPointsAlignment_Far = 2,
};

enum __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CTickPlacement
    {
        __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CTickPlacement_None = 0,
    __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CTickPlacement_TopLeft = 1,
    __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CTickPlacement_BottomRight = 2,
    __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CTickPlacement_Outside = 3,
    __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CTickPlacement_Inline = 4,
};

struct __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CGeneratorPosition
    {
        INT32 Index;
    INT32 Offset;
};

#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIDragCompletedEventHandler_INTERFACE_DEFINED__)
    #define ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIDragCompletedEventHandler_INTERFACE_DEFINED__
    typedef struct __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIDragCompletedEventHandlerVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIDragCompletedEventHandler* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIDragCompletedEventHandler* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIDragCompletedEventHandler* This);
        HRESULT (STDMETHODCALLTYPE* Invoke)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIDragCompletedEventHandler* This,
        IInspectable* sender,
        __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIDragCompletedEventArgs* e);

        END_INTERFACE
    } __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIDragCompletedEventHandlerVtbl;

    interface __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIDragCompletedEventHandler
    {
        CONST_VTBL struct __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIDragCompletedEventHandlerVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIDragCompletedEventHandler;
    #endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIDragCompletedEventHandler_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIDragDeltaEventHandler_INTERFACE_DEFINED__)
    #define ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIDragDeltaEventHandler_INTERFACE_DEFINED__
    typedef struct __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIDragDeltaEventHandlerVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIDragDeltaEventHandler* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIDragDeltaEventHandler* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIDragDeltaEventHandler* This);
        HRESULT (STDMETHODCALLTYPE* Invoke)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIDragDeltaEventHandler* This,
        IInspectable* sender,
        __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIDragDeltaEventArgs* e);

        END_INTERFACE
    } __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIDragDeltaEventHandlerVtbl;

    interface __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIDragDeltaEventHandler
    {
        CONST_VTBL struct __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIDragDeltaEventHandlerVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIDragDeltaEventHandler;
    #endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIDragDeltaEventHandler_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIDragStartedEventHandler_INTERFACE_DEFINED__)
    #define ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIDragStartedEventHandler_INTERFACE_DEFINED__
    typedef struct __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIDragStartedEventHandlerVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIDragStartedEventHandler* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIDragStartedEventHandler* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIDragStartedEventHandler* This);
        HRESULT (STDMETHODCALLTYPE* Invoke)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIDragStartedEventHandler* This,
        IInspectable* sender,
        __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIDragStartedEventArgs* e);

        END_INTERFACE
    } __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIDragStartedEventHandlerVtbl;

    interface __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIDragStartedEventHandler
    {
        CONST_VTBL struct __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIDragStartedEventHandlerVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIDragStartedEventHandler;
    #endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIDragStartedEventHandler_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIItemsChangedEventHandler_INTERFACE_DEFINED__)
    #define ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIItemsChangedEventHandler_INTERFACE_DEFINED__
    typedef struct __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIItemsChangedEventHandlerVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIItemsChangedEventHandler* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIItemsChangedEventHandler* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIItemsChangedEventHandler* This);
        HRESULT (STDMETHODCALLTYPE* Invoke)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIItemsChangedEventHandler* This,
        IInspectable* sender,
        __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIItemsChangedEventArgs* e);

        END_INTERFACE
    } __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIItemsChangedEventHandlerVtbl;

    interface __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIItemsChangedEventHandler
    {
        CONST_VTBL struct __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIItemsChangedEventHandlerVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIItemsChangedEventHandler;
    #endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIItemsChangedEventHandler_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIRangeBaseValueChangedEventHandler_INTERFACE_DEFINED__)
    #define ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIRangeBaseValueChangedEventHandler_INTERFACE_DEFINED__
    typedef struct __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIRangeBaseValueChangedEventHandlerVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIRangeBaseValueChangedEventHandler* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIRangeBaseValueChangedEventHandler* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIRangeBaseValueChangedEventHandler* This);
        HRESULT (STDMETHODCALLTYPE* Invoke)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIRangeBaseValueChangedEventHandler* This,
        IInspectable* sender,
        __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIRangeBaseValueChangedEventArgs* e);

        END_INTERFACE
    } __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIRangeBaseValueChangedEventHandlerVtbl;

    interface __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIRangeBaseValueChangedEventHandler
    {
        CONST_VTBL struct __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIRangeBaseValueChangedEventHandlerVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIRangeBaseValueChangedEventHandler;
    #endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIRangeBaseValueChangedEventHandler_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIScrollEventHandler_INTERFACE_DEFINED__)
    #define ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIScrollEventHandler_INTERFACE_DEFINED__
    typedef struct __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIScrollEventHandlerVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIScrollEventHandler* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIScrollEventHandler* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIScrollEventHandler* This);
        HRESULT (STDMETHODCALLTYPE* Invoke)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIScrollEventHandler* This,
        IInspectable* sender,
        __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIScrollEventArgs* e);

        END_INTERFACE
    } __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIScrollEventHandlerVtbl;

    interface __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIScrollEventHandler
    {
        CONST_VTBL struct __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIScrollEventHandlerVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIScrollEventHandler;
    #endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIScrollEventHandler_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIAppBarButtonTemplateSettings_INTERFACE_DEFINED__)
    #define ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIAppBarButtonTemplateSettings_INTERFACE_DEFINED__
    typedef struct __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIAppBarButtonTemplateSettingsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIAppBarButtonTemplateSettings* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIAppBarButtonTemplateSettings* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIAppBarButtonTemplateSettings* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIAppBarButtonTemplateSettings* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIAppBarButtonTemplateSettings* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIAppBarButtonTemplateSettings* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_KeyboardAcceleratorTextMinWidth)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIAppBarButtonTemplateSettings* This,
        DOUBLE* value);

        END_INTERFACE
    } __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIAppBarButtonTemplateSettingsVtbl;

    interface __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIAppBarButtonTemplateSettings
    {
        CONST_VTBL struct __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIAppBarButtonTemplateSettingsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIAppBarButtonTemplateSettings;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIAppBarButtonTemplateSettings_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIAppBarTemplateSettings_INTERFACE_DEFINED__)
    #define ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIAppBarTemplateSettings_INTERFACE_DEFINED__
    typedef struct __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIAppBarTemplateSettingsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIAppBarTemplateSettings* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIAppBarTemplateSettings* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIAppBarTemplateSettings* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIAppBarTemplateSettings* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIAppBarTemplateSettings* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIAppBarTemplateSettings* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_ClipRect)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIAppBarTemplateSettings* This,
        struct __x_ABI_CWindows_CFoundation_CRect* value);
    HRESULT (STDMETHODCALLTYPE* get_CompactVerticalDelta)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIAppBarTemplateSettings* This,
        DOUBLE* value);
    HRESULT (STDMETHODCALLTYPE* get_CompactRootMargin)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIAppBarTemplateSettings* This,
        struct __x_ABI_CMicrosoft_CUI_CXaml_CThickness* value);
    HRESULT (STDMETHODCALLTYPE* get_MinimalVerticalDelta)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIAppBarTemplateSettings* This,
        DOUBLE* value);
    HRESULT (STDMETHODCALLTYPE* get_MinimalRootMargin)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIAppBarTemplateSettings* This,
        struct __x_ABI_CMicrosoft_CUI_CXaml_CThickness* value);
    HRESULT (STDMETHODCALLTYPE* get_HiddenVerticalDelta)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIAppBarTemplateSettings* This,
        DOUBLE* value);
    HRESULT (STDMETHODCALLTYPE* get_HiddenRootMargin)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIAppBarTemplateSettings* This,
        struct __x_ABI_CMicrosoft_CUI_CXaml_CThickness* value);
    HRESULT (STDMETHODCALLTYPE* get_NegativeCompactVerticalDelta)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIAppBarTemplateSettings* This,
        DOUBLE* value);
    HRESULT (STDMETHODCALLTYPE* get_NegativeMinimalVerticalDelta)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIAppBarTemplateSettings* This,
        DOUBLE* value);
    HRESULT (STDMETHODCALLTYPE* get_NegativeHiddenVerticalDelta)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIAppBarTemplateSettings* This,
        DOUBLE* value);

        END_INTERFACE
    } __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIAppBarTemplateSettingsVtbl;

    interface __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIAppBarTemplateSettings
    {
        CONST_VTBL struct __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIAppBarTemplateSettingsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIAppBarTemplateSettings;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIAppBarTemplateSettings_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIAppBarToggleButtonTemplateSettings_INTERFACE_DEFINED__)
    #define ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIAppBarToggleButtonTemplateSettings_INTERFACE_DEFINED__
    typedef struct __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIAppBarToggleButtonTemplateSettingsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIAppBarToggleButtonTemplateSettings* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIAppBarToggleButtonTemplateSettings* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIAppBarToggleButtonTemplateSettings* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIAppBarToggleButtonTemplateSettings* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIAppBarToggleButtonTemplateSettings* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIAppBarToggleButtonTemplateSettings* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_KeyboardAcceleratorTextMinWidth)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIAppBarToggleButtonTemplateSettings* This,
        DOUBLE* value);

        END_INTERFACE
    } __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIAppBarToggleButtonTemplateSettingsVtbl;

    interface __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIAppBarToggleButtonTemplateSettings
    {
        CONST_VTBL struct __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIAppBarToggleButtonTemplateSettingsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIAppBarToggleButtonTemplateSettings;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIAppBarToggleButtonTemplateSettings_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIAutoSuggestBoxHelper_INTERFACE_DEFINED__)
    #define ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIAutoSuggestBoxHelper_INTERFACE_DEFINED__
    typedef struct __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIAutoSuggestBoxHelperVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIAutoSuggestBoxHelper* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIAutoSuggestBoxHelper* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIAutoSuggestBoxHelper* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIAutoSuggestBoxHelper* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIAutoSuggestBoxHelper* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIAutoSuggestBoxHelper* This,
            TrustLevel* trustLevel);
    
        END_INTERFACE
    } __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIAutoSuggestBoxHelperVtbl;

    interface __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIAutoSuggestBoxHelper
    {
        CONST_VTBL struct __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIAutoSuggestBoxHelperVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIAutoSuggestBoxHelper;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIAutoSuggestBoxHelper_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIAutoSuggestBoxHelperStatics_INTERFACE_DEFINED__)
    #define ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIAutoSuggestBoxHelperStatics_INTERFACE_DEFINED__
    typedef struct __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIAutoSuggestBoxHelperStaticsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIAutoSuggestBoxHelperStatics* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIAutoSuggestBoxHelperStatics* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIAutoSuggestBoxHelperStatics* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIAutoSuggestBoxHelperStatics* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIAutoSuggestBoxHelperStatics* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIAutoSuggestBoxHelperStatics* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_KeepInteriorCornersSquareProperty)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIAutoSuggestBoxHelperStatics* This,
        __x_ABI_CMicrosoft_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* SetKeepInteriorCornersSquare)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIAutoSuggestBoxHelperStatics* This,
        __x_ABI_CMicrosoft_CUI_CXaml_CControls_CIAutoSuggestBox* autoSuggestBox,
        boolean value);
    HRESULT (STDMETHODCALLTYPE* GetKeepInteriorCornersSquare)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIAutoSuggestBoxHelperStatics* This,
        __x_ABI_CMicrosoft_CUI_CXaml_CControls_CIAutoSuggestBox* autoSuggestBox,
        boolean* result);

        END_INTERFACE
    } __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIAutoSuggestBoxHelperStaticsVtbl;

    interface __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIAutoSuggestBoxHelperStatics
    {
        CONST_VTBL struct __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIAutoSuggestBoxHelperStaticsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIAutoSuggestBoxHelperStatics;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIAutoSuggestBoxHelperStatics_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIButtonBase_INTERFACE_DEFINED__)
    #define ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIButtonBase_INTERFACE_DEFINED__
    typedef struct __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIButtonBaseVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIButtonBase* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIButtonBase* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIButtonBase* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIButtonBase* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIButtonBase* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIButtonBase* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_ClickMode)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIButtonBase* This,
        enum __x_ABI_CMicrosoft_CUI_CXaml_CControls_CClickMode* value);
    HRESULT (STDMETHODCALLTYPE* put_ClickMode)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIButtonBase* This,
        enum __x_ABI_CMicrosoft_CUI_CXaml_CControls_CClickMode value);
    HRESULT (STDMETHODCALLTYPE* get_IsPointerOver)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIButtonBase* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* get_IsPressed)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIButtonBase* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* get_Command)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIButtonBase* This,
        __x_ABI_CMicrosoft_CUI_CXaml_CInput_CICommand** value);
    HRESULT (STDMETHODCALLTYPE* put_Command)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIButtonBase* This,
        __x_ABI_CMicrosoft_CUI_CXaml_CInput_CICommand* value);
    HRESULT (STDMETHODCALLTYPE* get_CommandParameter)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIButtonBase* This,
        IInspectable** value);
    HRESULT (STDMETHODCALLTYPE* put_CommandParameter)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIButtonBase* This,
        IInspectable* value);
    HRESULT (STDMETHODCALLTYPE* add_Click)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIButtonBase* This,
        __x_ABI_CMicrosoft_CUI_CXaml_CIRoutedEventHandler* handler,
        EventRegistrationToken* token);
    HRESULT (STDMETHODCALLTYPE* remove_Click)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIButtonBase* This,
        EventRegistrationToken token);

        END_INTERFACE
    } __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIButtonBaseVtbl;

    interface __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIButtonBase
    {
        CONST_VTBL struct __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIButtonBaseVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIButtonBase;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIButtonBase_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIButtonBaseFactory_INTERFACE_DEFINED__)
    #define ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIButtonBaseFactory_INTERFACE_DEFINED__
    typedef struct __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIButtonBaseFactoryVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIButtonBaseFactory* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIButtonBaseFactory* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIButtonBaseFactory* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIButtonBaseFactory* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIButtonBaseFactory* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIButtonBaseFactory* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* CreateInstance)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIButtonBaseFactory* This,
        IInspectable* baseInterface,
        IInspectable** innerInterface,
        __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIButtonBase** value);

        END_INTERFACE
    } __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIButtonBaseFactoryVtbl;

    interface __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIButtonBaseFactory
    {
        CONST_VTBL struct __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIButtonBaseFactoryVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIButtonBaseFactory;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIButtonBaseFactory_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIButtonBaseStatics_INTERFACE_DEFINED__)
    #define ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIButtonBaseStatics_INTERFACE_DEFINED__
    typedef struct __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIButtonBaseStaticsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIButtonBaseStatics* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIButtonBaseStatics* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIButtonBaseStatics* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIButtonBaseStatics* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIButtonBaseStatics* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIButtonBaseStatics* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_ClickModeProperty)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIButtonBaseStatics* This,
        __x_ABI_CMicrosoft_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_IsPointerOverProperty)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIButtonBaseStatics* This,
        __x_ABI_CMicrosoft_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_IsPressedProperty)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIButtonBaseStatics* This,
        __x_ABI_CMicrosoft_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_CommandProperty)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIButtonBaseStatics* This,
        __x_ABI_CMicrosoft_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_CommandParameterProperty)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIButtonBaseStatics* This,
        __x_ABI_CMicrosoft_CUI_CXaml_CIDependencyProperty** value);

        END_INTERFACE
    } __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIButtonBaseStaticsVtbl;

    interface __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIButtonBaseStatics
    {
        CONST_VTBL struct __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIButtonBaseStaticsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIButtonBaseStatics;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIButtonBaseStatics_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CICalendarPanel_INTERFACE_DEFINED__)
    #define ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CICalendarPanel_INTERFACE_DEFINED__
    typedef struct __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CICalendarPanelVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CICalendarPanel* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CICalendarPanel* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CICalendarPanel* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CICalendarPanel* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CICalendarPanel* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CICalendarPanel* This,
            TrustLevel* trustLevel);
    
        END_INTERFACE
    } __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CICalendarPanelVtbl;

    interface __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CICalendarPanel
    {
        CONST_VTBL struct __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CICalendarPanelVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CICalendarPanel;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CICalendarPanel_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CICalendarViewTemplateSettings_INTERFACE_DEFINED__)
    #define ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CICalendarViewTemplateSettings_INTERFACE_DEFINED__
    typedef struct __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CICalendarViewTemplateSettingsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CICalendarViewTemplateSettings* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CICalendarViewTemplateSettings* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CICalendarViewTemplateSettings* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CICalendarViewTemplateSettings* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CICalendarViewTemplateSettings* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CICalendarViewTemplateSettings* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_MinViewWidth)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CICalendarViewTemplateSettings* This,
        DOUBLE* value);
    HRESULT (STDMETHODCALLTYPE* get_HeaderText)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CICalendarViewTemplateSettings* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* get_WeekDay1)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CICalendarViewTemplateSettings* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* get_WeekDay2)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CICalendarViewTemplateSettings* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* get_WeekDay3)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CICalendarViewTemplateSettings* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* get_WeekDay4)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CICalendarViewTemplateSettings* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* get_WeekDay5)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CICalendarViewTemplateSettings* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* get_WeekDay6)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CICalendarViewTemplateSettings* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* get_WeekDay7)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CICalendarViewTemplateSettings* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* get_HasMoreContentAfter)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CICalendarViewTemplateSettings* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* get_HasMoreContentBefore)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CICalendarViewTemplateSettings* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* get_HasMoreViews)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CICalendarViewTemplateSettings* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* get_ClipRect)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CICalendarViewTemplateSettings* This,
        struct __x_ABI_CWindows_CFoundation_CRect* value);
    HRESULT (STDMETHODCALLTYPE* get_CenterX)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CICalendarViewTemplateSettings* This,
        DOUBLE* value);
    HRESULT (STDMETHODCALLTYPE* get_CenterY)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CICalendarViewTemplateSettings* This,
        DOUBLE* value);

        END_INTERFACE
    } __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CICalendarViewTemplateSettingsVtbl;

    interface __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CICalendarViewTemplateSettings
    {
        CONST_VTBL struct __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CICalendarViewTemplateSettingsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CICalendarViewTemplateSettings;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CICalendarViewTemplateSettings_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CICarouselPanel_INTERFACE_DEFINED__)
    #define ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CICarouselPanel_INTERFACE_DEFINED__
    typedef struct __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CICarouselPanelVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CICarouselPanel* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CICarouselPanel* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CICarouselPanel* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CICarouselPanel* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CICarouselPanel* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CICarouselPanel* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_CanVerticallyScroll)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CICarouselPanel* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* put_CanVerticallyScroll)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CICarouselPanel* This,
        boolean value);
    HRESULT (STDMETHODCALLTYPE* get_CanHorizontallyScroll)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CICarouselPanel* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* put_CanHorizontallyScroll)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CICarouselPanel* This,
        boolean value);
    HRESULT (STDMETHODCALLTYPE* get_ExtentWidth)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CICarouselPanel* This,
        DOUBLE* value);
    HRESULT (STDMETHODCALLTYPE* get_ExtentHeight)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CICarouselPanel* This,
        DOUBLE* value);
    HRESULT (STDMETHODCALLTYPE* get_ViewportWidth)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CICarouselPanel* This,
        DOUBLE* value);
    HRESULT (STDMETHODCALLTYPE* get_ViewportHeight)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CICarouselPanel* This,
        DOUBLE* value);
    HRESULT (STDMETHODCALLTYPE* get_HorizontalOffset)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CICarouselPanel* This,
        DOUBLE* value);
    HRESULT (STDMETHODCALLTYPE* get_VerticalOffset)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CICarouselPanel* This,
        DOUBLE* value);
    HRESULT (STDMETHODCALLTYPE* get_ScrollOwner)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CICarouselPanel* This,
        IInspectable** value);
    HRESULT (STDMETHODCALLTYPE* put_ScrollOwner)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CICarouselPanel* This,
        IInspectable* value);
    HRESULT (STDMETHODCALLTYPE* LineUp)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CICarouselPanel* This);
    HRESULT (STDMETHODCALLTYPE* LineDown)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CICarouselPanel* This);
    HRESULT (STDMETHODCALLTYPE* LineLeft)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CICarouselPanel* This);
    HRESULT (STDMETHODCALLTYPE* LineRight)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CICarouselPanel* This);
    HRESULT (STDMETHODCALLTYPE* PageUp)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CICarouselPanel* This);
    HRESULT (STDMETHODCALLTYPE* PageDown)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CICarouselPanel* This);
    HRESULT (STDMETHODCALLTYPE* PageLeft)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CICarouselPanel* This);
    HRESULT (STDMETHODCALLTYPE* PageRight)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CICarouselPanel* This);
    HRESULT (STDMETHODCALLTYPE* MouseWheelUp)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CICarouselPanel* This);
    HRESULT (STDMETHODCALLTYPE* MouseWheelDown)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CICarouselPanel* This);
    HRESULT (STDMETHODCALLTYPE* MouseWheelLeft)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CICarouselPanel* This);
    HRESULT (STDMETHODCALLTYPE* MouseWheelRight)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CICarouselPanel* This);
    HRESULT (STDMETHODCALLTYPE* SetHorizontalOffset)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CICarouselPanel* This,
        DOUBLE offset);
    HRESULT (STDMETHODCALLTYPE* SetVerticalOffset)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CICarouselPanel* This,
        DOUBLE offset);
    HRESULT (STDMETHODCALLTYPE* MakeVisible)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CICarouselPanel* This,
        __x_ABI_CMicrosoft_CUI_CXaml_CIUIElement* visual,
        struct __x_ABI_CWindows_CFoundation_CRect rectangle,
        struct __x_ABI_CWindows_CFoundation_CRect* result);

        END_INTERFACE
    } __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CICarouselPanelVtbl;

    interface __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CICarouselPanel
    {
        CONST_VTBL struct __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CICarouselPanelVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CICarouselPanel;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CICarouselPanel_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CICarouselPanelFactory_INTERFACE_DEFINED__)
    #define ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CICarouselPanelFactory_INTERFACE_DEFINED__
    typedef struct __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CICarouselPanelFactoryVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CICarouselPanelFactory* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CICarouselPanelFactory* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CICarouselPanelFactory* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CICarouselPanelFactory* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CICarouselPanelFactory* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CICarouselPanelFactory* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* CreateInstance)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CICarouselPanelFactory* This,
        IInspectable* baseInterface,
        IInspectable** innerInterface,
        __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CICarouselPanel** value);

        END_INTERFACE
    } __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CICarouselPanelFactoryVtbl;

    interface __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CICarouselPanelFactory
    {
        CONST_VTBL struct __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CICarouselPanelFactoryVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CICarouselPanelFactory;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CICarouselPanelFactory_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIColorPickerSlider_INTERFACE_DEFINED__)
    #define ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIColorPickerSlider_INTERFACE_DEFINED__
    typedef struct __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIColorPickerSliderVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIColorPickerSlider* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIColorPickerSlider* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIColorPickerSlider* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIColorPickerSlider* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIColorPickerSlider* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIColorPickerSlider* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_ColorChannel)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIColorPickerSlider* This,
        enum __x_ABI_CMicrosoft_CUI_CXaml_CControls_CColorPickerHsvChannel* value);
    HRESULT (STDMETHODCALLTYPE* put_ColorChannel)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIColorPickerSlider* This,
        enum __x_ABI_CMicrosoft_CUI_CXaml_CControls_CColorPickerHsvChannel value);

        END_INTERFACE
    } __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIColorPickerSliderVtbl;

    interface __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIColorPickerSlider
    {
        CONST_VTBL struct __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIColorPickerSliderVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIColorPickerSlider;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIColorPickerSlider_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIColorPickerSliderFactory_INTERFACE_DEFINED__)
    #define ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIColorPickerSliderFactory_INTERFACE_DEFINED__
    typedef struct __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIColorPickerSliderFactoryVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIColorPickerSliderFactory* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIColorPickerSliderFactory* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIColorPickerSliderFactory* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIColorPickerSliderFactory* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIColorPickerSliderFactory* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIColorPickerSliderFactory* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* CreateInstance)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIColorPickerSliderFactory* This,
        IInspectable* baseInterface,
        IInspectable** innerInterface,
        __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIColorPickerSlider** value);

        END_INTERFACE
    } __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIColorPickerSliderFactoryVtbl;

    interface __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIColorPickerSliderFactory
    {
        CONST_VTBL struct __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIColorPickerSliderFactoryVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIColorPickerSliderFactory;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIColorPickerSliderFactory_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIColorPickerSliderStatics_INTERFACE_DEFINED__)
    #define ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIColorPickerSliderStatics_INTERFACE_DEFINED__
    typedef struct __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIColorPickerSliderStaticsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIColorPickerSliderStatics* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIColorPickerSliderStatics* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIColorPickerSliderStatics* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIColorPickerSliderStatics* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIColorPickerSliderStatics* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIColorPickerSliderStatics* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_ColorChannelProperty)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIColorPickerSliderStatics* This,
        __x_ABI_CMicrosoft_CUI_CXaml_CIDependencyProperty** value);

        END_INTERFACE
    } __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIColorPickerSliderStaticsVtbl;

    interface __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIColorPickerSliderStatics
    {
        CONST_VTBL struct __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIColorPickerSliderStaticsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIColorPickerSliderStatics;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIColorPickerSliderStatics_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIColorSpectrum_INTERFACE_DEFINED__)
    #define ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIColorSpectrum_INTERFACE_DEFINED__
    typedef struct __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIColorSpectrumVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIColorSpectrum* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIColorSpectrum* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIColorSpectrum* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIColorSpectrum* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIColorSpectrum* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIColorSpectrum* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Color)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIColorSpectrum* This,
        struct __x_ABI_CWindows_CUI_CColor* value);
    HRESULT (STDMETHODCALLTYPE* put_Color)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIColorSpectrum* This,
        struct __x_ABI_CWindows_CUI_CColor value);
    HRESULT (STDMETHODCALLTYPE* get_HsvColor)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIColorSpectrum* This,
        struct __x_ABI_CWindows_CFoundation_CNumerics_CVector4* value);
    HRESULT (STDMETHODCALLTYPE* put_HsvColor)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIColorSpectrum* This,
        struct __x_ABI_CWindows_CFoundation_CNumerics_CVector4 value);
    HRESULT (STDMETHODCALLTYPE* get_MinHue)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIColorSpectrum* This,
        INT32* value);
    HRESULT (STDMETHODCALLTYPE* put_MinHue)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIColorSpectrum* This,
        INT32 value);
    HRESULT (STDMETHODCALLTYPE* get_MaxHue)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIColorSpectrum* This,
        INT32* value);
    HRESULT (STDMETHODCALLTYPE* put_MaxHue)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIColorSpectrum* This,
        INT32 value);
    HRESULT (STDMETHODCALLTYPE* get_MinSaturation)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIColorSpectrum* This,
        INT32* value);
    HRESULT (STDMETHODCALLTYPE* put_MinSaturation)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIColorSpectrum* This,
        INT32 value);
    HRESULT (STDMETHODCALLTYPE* get_MaxSaturation)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIColorSpectrum* This,
        INT32* value);
    HRESULT (STDMETHODCALLTYPE* put_MaxSaturation)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIColorSpectrum* This,
        INT32 value);
    HRESULT (STDMETHODCALLTYPE* get_MinValue)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIColorSpectrum* This,
        INT32* value);
    HRESULT (STDMETHODCALLTYPE* put_MinValue)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIColorSpectrum* This,
        INT32 value);
    HRESULT (STDMETHODCALLTYPE* get_MaxValue)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIColorSpectrum* This,
        INT32* value);
    HRESULT (STDMETHODCALLTYPE* put_MaxValue)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIColorSpectrum* This,
        INT32 value);
    HRESULT (STDMETHODCALLTYPE* get_Shape)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIColorSpectrum* This,
        enum __x_ABI_CMicrosoft_CUI_CXaml_CControls_CColorSpectrumShape* value);
    HRESULT (STDMETHODCALLTYPE* put_Shape)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIColorSpectrum* This,
        enum __x_ABI_CMicrosoft_CUI_CXaml_CControls_CColorSpectrumShape value);
    HRESULT (STDMETHODCALLTYPE* get_Components)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIColorSpectrum* This,
        enum __x_ABI_CMicrosoft_CUI_CXaml_CControls_CColorSpectrumComponents* value);
    HRESULT (STDMETHODCALLTYPE* put_Components)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIColorSpectrum* This,
        enum __x_ABI_CMicrosoft_CUI_CXaml_CControls_CColorSpectrumComponents value);
    HRESULT (STDMETHODCALLTYPE* add_ColorChanged)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIColorSpectrum* This,
        __x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CUI__CXaml__CControls__CPrimitives__CColorSpectrum___x_ABI_CMicrosoft__CUI__CXaml__CControls__CColorChangedEventArgs* handler,
        EventRegistrationToken* token);
    HRESULT (STDMETHODCALLTYPE* remove_ColorChanged)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIColorSpectrum* This,
        EventRegistrationToken token);

        END_INTERFACE
    } __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIColorSpectrumVtbl;

    interface __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIColorSpectrum
    {
        CONST_VTBL struct __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIColorSpectrumVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIColorSpectrum;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIColorSpectrum_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIColorSpectrumFactory_INTERFACE_DEFINED__)
    #define ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIColorSpectrumFactory_INTERFACE_DEFINED__
    typedef struct __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIColorSpectrumFactoryVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIColorSpectrumFactory* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIColorSpectrumFactory* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIColorSpectrumFactory* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIColorSpectrumFactory* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIColorSpectrumFactory* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIColorSpectrumFactory* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* CreateInstance)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIColorSpectrumFactory* This,
        IInspectable* baseInterface,
        IInspectable** innerInterface,
        __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIColorSpectrum** value);

        END_INTERFACE
    } __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIColorSpectrumFactoryVtbl;

    interface __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIColorSpectrumFactory
    {
        CONST_VTBL struct __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIColorSpectrumFactoryVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIColorSpectrumFactory;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIColorSpectrumFactory_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIColorSpectrumStatics_INTERFACE_DEFINED__)
    #define ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIColorSpectrumStatics_INTERFACE_DEFINED__
    typedef struct __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIColorSpectrumStaticsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIColorSpectrumStatics* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIColorSpectrumStatics* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIColorSpectrumStatics* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIColorSpectrumStatics* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIColorSpectrumStatics* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIColorSpectrumStatics* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_ColorProperty)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIColorSpectrumStatics* This,
        __x_ABI_CMicrosoft_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_HsvColorProperty)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIColorSpectrumStatics* This,
        __x_ABI_CMicrosoft_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_MinHueProperty)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIColorSpectrumStatics* This,
        __x_ABI_CMicrosoft_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_MaxHueProperty)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIColorSpectrumStatics* This,
        __x_ABI_CMicrosoft_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_MinSaturationProperty)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIColorSpectrumStatics* This,
        __x_ABI_CMicrosoft_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_MaxSaturationProperty)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIColorSpectrumStatics* This,
        __x_ABI_CMicrosoft_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_MinValueProperty)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIColorSpectrumStatics* This,
        __x_ABI_CMicrosoft_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_MaxValueProperty)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIColorSpectrumStatics* This,
        __x_ABI_CMicrosoft_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_ShapeProperty)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIColorSpectrumStatics* This,
        __x_ABI_CMicrosoft_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_ComponentsProperty)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIColorSpectrumStatics* This,
        __x_ABI_CMicrosoft_CUI_CXaml_CIDependencyProperty** value);

        END_INTERFACE
    } __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIColorSpectrumStaticsVtbl;

    interface __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIColorSpectrumStatics
    {
        CONST_VTBL struct __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIColorSpectrumStaticsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIColorSpectrumStatics;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIColorSpectrumStatics_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIColumnMajorUniformToLargestGridLayout_INTERFACE_DEFINED__)
    #define ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIColumnMajorUniformToLargestGridLayout_INTERFACE_DEFINED__
    typedef struct __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIColumnMajorUniformToLargestGridLayoutVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIColumnMajorUniformToLargestGridLayout* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIColumnMajorUniformToLargestGridLayout* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIColumnMajorUniformToLargestGridLayout* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIColumnMajorUniformToLargestGridLayout* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIColumnMajorUniformToLargestGridLayout* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIColumnMajorUniformToLargestGridLayout* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_MaxColumns)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIColumnMajorUniformToLargestGridLayout* This,
        INT32* value);
    HRESULT (STDMETHODCALLTYPE* put_MaxColumns)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIColumnMajorUniformToLargestGridLayout* This,
        INT32 value);
    HRESULT (STDMETHODCALLTYPE* get_ColumnSpacing)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIColumnMajorUniformToLargestGridLayout* This,
        DOUBLE* value);
    HRESULT (STDMETHODCALLTYPE* put_ColumnSpacing)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIColumnMajorUniformToLargestGridLayout* This,
        DOUBLE value);
    HRESULT (STDMETHODCALLTYPE* get_RowSpacing)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIColumnMajorUniformToLargestGridLayout* This,
        DOUBLE* value);
    HRESULT (STDMETHODCALLTYPE* put_RowSpacing)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIColumnMajorUniformToLargestGridLayout* This,
        DOUBLE value);

        END_INTERFACE
    } __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIColumnMajorUniformToLargestGridLayoutVtbl;

    interface __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIColumnMajorUniformToLargestGridLayout
    {
        CONST_VTBL struct __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIColumnMajorUniformToLargestGridLayoutVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIColumnMajorUniformToLargestGridLayout;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIColumnMajorUniformToLargestGridLayout_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIColumnMajorUniformToLargestGridLayoutFactory_INTERFACE_DEFINED__)
    #define ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIColumnMajorUniformToLargestGridLayoutFactory_INTERFACE_DEFINED__
    typedef struct __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIColumnMajorUniformToLargestGridLayoutFactoryVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIColumnMajorUniformToLargestGridLayoutFactory* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIColumnMajorUniformToLargestGridLayoutFactory* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIColumnMajorUniformToLargestGridLayoutFactory* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIColumnMajorUniformToLargestGridLayoutFactory* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIColumnMajorUniformToLargestGridLayoutFactory* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIColumnMajorUniformToLargestGridLayoutFactory* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* CreateInstance)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIColumnMajorUniformToLargestGridLayoutFactory* This,
        IInspectable* baseInterface,
        IInspectable** innerInterface,
        __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIColumnMajorUniformToLargestGridLayout** value);

        END_INTERFACE
    } __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIColumnMajorUniformToLargestGridLayoutFactoryVtbl;

    interface __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIColumnMajorUniformToLargestGridLayoutFactory
    {
        CONST_VTBL struct __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIColumnMajorUniformToLargestGridLayoutFactoryVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIColumnMajorUniformToLargestGridLayoutFactory;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIColumnMajorUniformToLargestGridLayoutFactory_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIColumnMajorUniformToLargestGridLayoutStatics_INTERFACE_DEFINED__)
    #define ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIColumnMajorUniformToLargestGridLayoutStatics_INTERFACE_DEFINED__
    typedef struct __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIColumnMajorUniformToLargestGridLayoutStaticsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIColumnMajorUniformToLargestGridLayoutStatics* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIColumnMajorUniformToLargestGridLayoutStatics* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIColumnMajorUniformToLargestGridLayoutStatics* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIColumnMajorUniformToLargestGridLayoutStatics* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIColumnMajorUniformToLargestGridLayoutStatics* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIColumnMajorUniformToLargestGridLayoutStatics* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_MaxColumnsProperty)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIColumnMajorUniformToLargestGridLayoutStatics* This,
        __x_ABI_CMicrosoft_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_ColumnSpacingProperty)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIColumnMajorUniformToLargestGridLayoutStatics* This,
        __x_ABI_CMicrosoft_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_RowSpacingProperty)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIColumnMajorUniformToLargestGridLayoutStatics* This,
        __x_ABI_CMicrosoft_CUI_CXaml_CIDependencyProperty** value);

        END_INTERFACE
    } __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIColumnMajorUniformToLargestGridLayoutStaticsVtbl;

    interface __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIColumnMajorUniformToLargestGridLayoutStatics
    {
        CONST_VTBL struct __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIColumnMajorUniformToLargestGridLayoutStaticsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIColumnMajorUniformToLargestGridLayoutStatics;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIColumnMajorUniformToLargestGridLayoutStatics_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIComboBoxHelper_INTERFACE_DEFINED__)
    #define ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIComboBoxHelper_INTERFACE_DEFINED__
    typedef struct __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIComboBoxHelperVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIComboBoxHelper* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIComboBoxHelper* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIComboBoxHelper* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIComboBoxHelper* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIComboBoxHelper* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIComboBoxHelper* This,
            TrustLevel* trustLevel);
    
        END_INTERFACE
    } __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIComboBoxHelperVtbl;

    interface __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIComboBoxHelper
    {
        CONST_VTBL struct __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIComboBoxHelperVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIComboBoxHelper;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIComboBoxHelper_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIComboBoxHelperStatics_INTERFACE_DEFINED__)
    #define ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIComboBoxHelperStatics_INTERFACE_DEFINED__
    typedef struct __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIComboBoxHelperStaticsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIComboBoxHelperStatics* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIComboBoxHelperStatics* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIComboBoxHelperStatics* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIComboBoxHelperStatics* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIComboBoxHelperStatics* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIComboBoxHelperStatics* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_KeepInteriorCornersSquareProperty)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIComboBoxHelperStatics* This,
        __x_ABI_CMicrosoft_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* SetKeepInteriorCornersSquare)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIComboBoxHelperStatics* This,
        __x_ABI_CMicrosoft_CUI_CXaml_CControls_CIComboBox* comboBox,
        boolean value);
    HRESULT (STDMETHODCALLTYPE* GetKeepInteriorCornersSquare)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIComboBoxHelperStatics* This,
        __x_ABI_CMicrosoft_CUI_CXaml_CControls_CIComboBox* comboBox,
        boolean* result);

        END_INTERFACE
    } __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIComboBoxHelperStaticsVtbl;

    interface __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIComboBoxHelperStatics
    {
        CONST_VTBL struct __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIComboBoxHelperStaticsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIComboBoxHelperStatics;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIComboBoxHelperStatics_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIComboBoxTemplateSettings_INTERFACE_DEFINED__)
    #define ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIComboBoxTemplateSettings_INTERFACE_DEFINED__
    typedef struct __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIComboBoxTemplateSettingsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIComboBoxTemplateSettings* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIComboBoxTemplateSettings* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIComboBoxTemplateSettings* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIComboBoxTemplateSettings* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIComboBoxTemplateSettings* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIComboBoxTemplateSettings* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_DropDownOpenedHeight)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIComboBoxTemplateSettings* This,
        DOUBLE* value);
    HRESULT (STDMETHODCALLTYPE* get_DropDownClosedHeight)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIComboBoxTemplateSettings* This,
        DOUBLE* value);
    HRESULT (STDMETHODCALLTYPE* get_DropDownOffset)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIComboBoxTemplateSettings* This,
        DOUBLE* value);
    HRESULT (STDMETHODCALLTYPE* get_SelectedItemDirection)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIComboBoxTemplateSettings* This,
        enum __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CAnimationDirection* value);
    HRESULT (STDMETHODCALLTYPE* get_DropDownContentMinWidth)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIComboBoxTemplateSettings* This,
        DOUBLE* value);

        END_INTERFACE
    } __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIComboBoxTemplateSettingsVtbl;

    interface __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIComboBoxTemplateSettings
    {
        CONST_VTBL struct __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIComboBoxTemplateSettingsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIComboBoxTemplateSettings;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIComboBoxTemplateSettings_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CICommandBarFlyoutCommandBar_INTERFACE_DEFINED__)
    #define ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CICommandBarFlyoutCommandBar_INTERFACE_DEFINED__
    typedef struct __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CICommandBarFlyoutCommandBarVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CICommandBarFlyoutCommandBar* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CICommandBarFlyoutCommandBar* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CICommandBarFlyoutCommandBar* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CICommandBarFlyoutCommandBar* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CICommandBarFlyoutCommandBar* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CICommandBarFlyoutCommandBar* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_FlyoutTemplateSettings)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CICommandBarFlyoutCommandBar* This,
        __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CICommandBarFlyoutCommandBarTemplateSettings** value);

        END_INTERFACE
    } __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CICommandBarFlyoutCommandBarVtbl;

    interface __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CICommandBarFlyoutCommandBar
    {
        CONST_VTBL struct __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CICommandBarFlyoutCommandBarVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CICommandBarFlyoutCommandBar;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CICommandBarFlyoutCommandBar_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CICommandBarFlyoutCommandBar2_INTERFACE_DEFINED__)
    #define ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CICommandBarFlyoutCommandBar2_INTERFACE_DEFINED__
    typedef struct __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CICommandBarFlyoutCommandBar2Vtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CICommandBarFlyoutCommandBar2* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CICommandBarFlyoutCommandBar2* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CICommandBarFlyoutCommandBar2* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CICommandBarFlyoutCommandBar2* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CICommandBarFlyoutCommandBar2* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CICommandBarFlyoutCommandBar2* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_SystemBackdrop)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CICommandBarFlyoutCommandBar2* This,
        __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CISystemBackdrop** value);
    HRESULT (STDMETHODCALLTYPE* put_SystemBackdrop)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CICommandBarFlyoutCommandBar2* This,
        __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CISystemBackdrop* value);

        END_INTERFACE
    } __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CICommandBarFlyoutCommandBar2Vtbl;

    interface __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CICommandBarFlyoutCommandBar2
    {
        CONST_VTBL struct __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CICommandBarFlyoutCommandBar2Vtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CICommandBarFlyoutCommandBar2;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CICommandBarFlyoutCommandBar2_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CICommandBarFlyoutCommandBarAutomationPropertiesStatics_INTERFACE_DEFINED__)
    #define ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CICommandBarFlyoutCommandBarAutomationPropertiesStatics_INTERFACE_DEFINED__
    typedef struct __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CICommandBarFlyoutCommandBarAutomationPropertiesStaticsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CICommandBarFlyoutCommandBarAutomationPropertiesStatics* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CICommandBarFlyoutCommandBarAutomationPropertiesStatics* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CICommandBarFlyoutCommandBarAutomationPropertiesStatics* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CICommandBarFlyoutCommandBarAutomationPropertiesStatics* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CICommandBarFlyoutCommandBarAutomationPropertiesStatics* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CICommandBarFlyoutCommandBarAutomationPropertiesStatics* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_ControlTypeProperty)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CICommandBarFlyoutCommandBarAutomationPropertiesStatics* This,
        __x_ABI_CMicrosoft_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* GetControlType)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CICommandBarFlyoutCommandBarAutomationPropertiesStatics* This,
        __x_ABI_CMicrosoft_CUI_CXaml_CIUIElement* element,
        enum __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CAutomationControlType* result);
    HRESULT (STDMETHODCALLTYPE* SetControlType)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CICommandBarFlyoutCommandBarAutomationPropertiesStatics* This,
        __x_ABI_CMicrosoft_CUI_CXaml_CIUIElement* element,
        enum __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CAutomationControlType value);

        END_INTERFACE
    } __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CICommandBarFlyoutCommandBarAutomationPropertiesStaticsVtbl;

    interface __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CICommandBarFlyoutCommandBarAutomationPropertiesStatics
    {
        CONST_VTBL struct __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CICommandBarFlyoutCommandBarAutomationPropertiesStaticsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CICommandBarFlyoutCommandBarAutomationPropertiesStatics;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CICommandBarFlyoutCommandBarAutomationPropertiesStatics_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CICommandBarFlyoutCommandBarFactory_INTERFACE_DEFINED__)
    #define ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CICommandBarFlyoutCommandBarFactory_INTERFACE_DEFINED__
    typedef struct __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CICommandBarFlyoutCommandBarFactoryVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CICommandBarFlyoutCommandBarFactory* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CICommandBarFlyoutCommandBarFactory* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CICommandBarFlyoutCommandBarFactory* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CICommandBarFlyoutCommandBarFactory* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CICommandBarFlyoutCommandBarFactory* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CICommandBarFlyoutCommandBarFactory* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* CreateInstance)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CICommandBarFlyoutCommandBarFactory* This,
        IInspectable* baseInterface,
        IInspectable** innerInterface,
        __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CICommandBarFlyoutCommandBar** value);

        END_INTERFACE
    } __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CICommandBarFlyoutCommandBarFactoryVtbl;

    interface __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CICommandBarFlyoutCommandBarFactory
    {
        CONST_VTBL struct __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CICommandBarFlyoutCommandBarFactoryVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CICommandBarFlyoutCommandBarFactory;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CICommandBarFlyoutCommandBarFactory_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CICommandBarFlyoutCommandBarStatics_INTERFACE_DEFINED__)
    #define ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CICommandBarFlyoutCommandBarStatics_INTERFACE_DEFINED__
    typedef struct __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CICommandBarFlyoutCommandBarStaticsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CICommandBarFlyoutCommandBarStatics* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CICommandBarFlyoutCommandBarStatics* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CICommandBarFlyoutCommandBarStatics* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CICommandBarFlyoutCommandBarStatics* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CICommandBarFlyoutCommandBarStatics* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CICommandBarFlyoutCommandBarStatics* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_SystemBackdropProperty)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CICommandBarFlyoutCommandBarStatics* This,
        __x_ABI_CMicrosoft_CUI_CXaml_CIDependencyProperty** value);

        END_INTERFACE
    } __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CICommandBarFlyoutCommandBarStaticsVtbl;

    interface __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CICommandBarFlyoutCommandBarStatics
    {
        CONST_VTBL struct __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CICommandBarFlyoutCommandBarStaticsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CICommandBarFlyoutCommandBarStatics;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CICommandBarFlyoutCommandBarStatics_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CICommandBarFlyoutCommandBarTemplateSettings_INTERFACE_DEFINED__)
    #define ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CICommandBarFlyoutCommandBarTemplateSettings_INTERFACE_DEFINED__
    typedef struct __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CICommandBarFlyoutCommandBarTemplateSettingsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CICommandBarFlyoutCommandBarTemplateSettings* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CICommandBarFlyoutCommandBarTemplateSettings* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CICommandBarFlyoutCommandBarTemplateSettings* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CICommandBarFlyoutCommandBarTemplateSettings* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CICommandBarFlyoutCommandBarTemplateSettings* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CICommandBarFlyoutCommandBarTemplateSettings* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_OpenAnimationStartPosition)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CICommandBarFlyoutCommandBarTemplateSettings* This,
        DOUBLE* value);
    HRESULT (STDMETHODCALLTYPE* get_OpenAnimationEndPosition)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CICommandBarFlyoutCommandBarTemplateSettings* This,
        DOUBLE* value);
    HRESULT (STDMETHODCALLTYPE* get_CloseAnimationEndPosition)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CICommandBarFlyoutCommandBarTemplateSettings* This,
        DOUBLE* value);
    HRESULT (STDMETHODCALLTYPE* get_CurrentWidth)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CICommandBarFlyoutCommandBarTemplateSettings* This,
        DOUBLE* value);
    HRESULT (STDMETHODCALLTYPE* get_ExpandedWidth)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CICommandBarFlyoutCommandBarTemplateSettings* This,
        DOUBLE* value);
    HRESULT (STDMETHODCALLTYPE* get_WidthExpansionDelta)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CICommandBarFlyoutCommandBarTemplateSettings* This,
        DOUBLE* value);
    HRESULT (STDMETHODCALLTYPE* get_WidthExpansionAnimationStartPosition)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CICommandBarFlyoutCommandBarTemplateSettings* This,
        DOUBLE* value);
    HRESULT (STDMETHODCALLTYPE* get_WidthExpansionAnimationEndPosition)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CICommandBarFlyoutCommandBarTemplateSettings* This,
        DOUBLE* value);
    HRESULT (STDMETHODCALLTYPE* get_WidthExpansionMoreButtonAnimationStartPosition)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CICommandBarFlyoutCommandBarTemplateSettings* This,
        DOUBLE* value);
    HRESULT (STDMETHODCALLTYPE* get_WidthExpansionMoreButtonAnimationEndPosition)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CICommandBarFlyoutCommandBarTemplateSettings* This,
        DOUBLE* value);
    HRESULT (STDMETHODCALLTYPE* get_ExpandUpOverflowVerticalPosition)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CICommandBarFlyoutCommandBarTemplateSettings* This,
        DOUBLE* value);
    HRESULT (STDMETHODCALLTYPE* get_ExpandDownOverflowVerticalPosition)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CICommandBarFlyoutCommandBarTemplateSettings* This,
        DOUBLE* value);
    HRESULT (STDMETHODCALLTYPE* get_ExpandUpAnimationStartPosition)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CICommandBarFlyoutCommandBarTemplateSettings* This,
        DOUBLE* value);
    HRESULT (STDMETHODCALLTYPE* get_ExpandUpAnimationEndPosition)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CICommandBarFlyoutCommandBarTemplateSettings* This,
        DOUBLE* value);
    HRESULT (STDMETHODCALLTYPE* get_ExpandUpAnimationHoldPosition)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CICommandBarFlyoutCommandBarTemplateSettings* This,
        DOUBLE* value);
    HRESULT (STDMETHODCALLTYPE* get_ExpandDownAnimationStartPosition)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CICommandBarFlyoutCommandBarTemplateSettings* This,
        DOUBLE* value);
    HRESULT (STDMETHODCALLTYPE* get_ExpandDownAnimationEndPosition)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CICommandBarFlyoutCommandBarTemplateSettings* This,
        DOUBLE* value);
    HRESULT (STDMETHODCALLTYPE* get_ExpandDownAnimationHoldPosition)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CICommandBarFlyoutCommandBarTemplateSettings* This,
        DOUBLE* value);
    HRESULT (STDMETHODCALLTYPE* get_ContentClipRect)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CICommandBarFlyoutCommandBarTemplateSettings* This,
        struct __x_ABI_CWindows_CFoundation_CRect* value);
    HRESULT (STDMETHODCALLTYPE* get_OverflowContentClipRect)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CICommandBarFlyoutCommandBarTemplateSettings* This,
        struct __x_ABI_CWindows_CFoundation_CRect* value);

        END_INTERFACE
    } __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CICommandBarFlyoutCommandBarTemplateSettingsVtbl;

    interface __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CICommandBarFlyoutCommandBarTemplateSettings
    {
        CONST_VTBL struct __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CICommandBarFlyoutCommandBarTemplateSettingsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CICommandBarFlyoutCommandBarTemplateSettings;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CICommandBarFlyoutCommandBarTemplateSettings_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CICommandBarTemplateSettings_INTERFACE_DEFINED__)
    #define ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CICommandBarTemplateSettings_INTERFACE_DEFINED__
    typedef struct __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CICommandBarTemplateSettingsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CICommandBarTemplateSettings* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CICommandBarTemplateSettings* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CICommandBarTemplateSettings* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CICommandBarTemplateSettings* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CICommandBarTemplateSettings* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CICommandBarTemplateSettings* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_ContentHeight)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CICommandBarTemplateSettings* This,
        DOUBLE* value);
    HRESULT (STDMETHODCALLTYPE* get_OverflowContentClipRect)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CICommandBarTemplateSettings* This,
        struct __x_ABI_CWindows_CFoundation_CRect* value);
    HRESULT (STDMETHODCALLTYPE* get_OverflowContentMinWidth)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CICommandBarTemplateSettings* This,
        DOUBLE* value);
    HRESULT (STDMETHODCALLTYPE* get_OverflowContentMaxWidth)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CICommandBarTemplateSettings* This,
        DOUBLE* value);
    HRESULT (STDMETHODCALLTYPE* get_OverflowContentMaxHeight)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CICommandBarTemplateSettings* This,
        DOUBLE* value);
    HRESULT (STDMETHODCALLTYPE* get_OverflowContentHorizontalOffset)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CICommandBarTemplateSettings* This,
        DOUBLE* value);
    HRESULT (STDMETHODCALLTYPE* get_OverflowContentHeight)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CICommandBarTemplateSettings* This,
        DOUBLE* value);
    HRESULT (STDMETHODCALLTYPE* get_NegativeOverflowContentHeight)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CICommandBarTemplateSettings* This,
        DOUBLE* value);
    HRESULT (STDMETHODCALLTYPE* get_EffectiveOverflowButtonVisibility)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CICommandBarTemplateSettings* This,
        enum __x_ABI_CMicrosoft_CUI_CXaml_CVisibility* value);
    HRESULT (STDMETHODCALLTYPE* get_OverflowContentCompactYTranslation)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CICommandBarTemplateSettings* This,
        DOUBLE* value);
    HRESULT (STDMETHODCALLTYPE* get_OverflowContentMinimalYTranslation)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CICommandBarTemplateSettings* This,
        DOUBLE* value);
    HRESULT (STDMETHODCALLTYPE* get_OverflowContentHiddenYTranslation)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CICommandBarTemplateSettings* This,
        DOUBLE* value);

        END_INTERFACE
    } __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CICommandBarTemplateSettingsVtbl;

    interface __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CICommandBarTemplateSettings
    {
        CONST_VTBL struct __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CICommandBarTemplateSettingsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CICommandBarTemplateSettings;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CICommandBarTemplateSettings_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CICornerRadiusFilterConverter_INTERFACE_DEFINED__)
    #define ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CICornerRadiusFilterConverter_INTERFACE_DEFINED__
    typedef struct __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CICornerRadiusFilterConverterVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CICornerRadiusFilterConverter* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CICornerRadiusFilterConverter* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CICornerRadiusFilterConverter* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CICornerRadiusFilterConverter* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CICornerRadiusFilterConverter* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CICornerRadiusFilterConverter* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Filter)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CICornerRadiusFilterConverter* This,
        enum __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CCornerRadiusFilterKind* value);
    HRESULT (STDMETHODCALLTYPE* put_Filter)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CICornerRadiusFilterConverter* This,
        enum __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CCornerRadiusFilterKind value);
    HRESULT (STDMETHODCALLTYPE* get_Scale)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CICornerRadiusFilterConverter* This,
        DOUBLE* value);
    HRESULT (STDMETHODCALLTYPE* put_Scale)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CICornerRadiusFilterConverter* This,
        DOUBLE value);

        END_INTERFACE
    } __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CICornerRadiusFilterConverterVtbl;

    interface __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CICornerRadiusFilterConverter
    {
        CONST_VTBL struct __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CICornerRadiusFilterConverterVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CICornerRadiusFilterConverter;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CICornerRadiusFilterConverter_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CICornerRadiusFilterConverterStatics_INTERFACE_DEFINED__)
    #define ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CICornerRadiusFilterConverterStatics_INTERFACE_DEFINED__
    typedef struct __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CICornerRadiusFilterConverterStaticsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CICornerRadiusFilterConverterStatics* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CICornerRadiusFilterConverterStatics* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CICornerRadiusFilterConverterStatics* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CICornerRadiusFilterConverterStatics* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CICornerRadiusFilterConverterStatics* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CICornerRadiusFilterConverterStatics* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_FilterProperty)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CICornerRadiusFilterConverterStatics* This,
        __x_ABI_CMicrosoft_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_ScaleProperty)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CICornerRadiusFilterConverterStatics* This,
        __x_ABI_CMicrosoft_CUI_CXaml_CIDependencyProperty** value);

        END_INTERFACE
    } __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CICornerRadiusFilterConverterStaticsVtbl;

    interface __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CICornerRadiusFilterConverterStatics
    {
        CONST_VTBL struct __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CICornerRadiusFilterConverterStaticsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CICornerRadiusFilterConverterStatics;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CICornerRadiusFilterConverterStatics_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CICornerRadiusToThicknessConverter_INTERFACE_DEFINED__)
    #define ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CICornerRadiusToThicknessConverter_INTERFACE_DEFINED__
    typedef struct __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CICornerRadiusToThicknessConverterVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CICornerRadiusToThicknessConverter* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CICornerRadiusToThicknessConverter* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CICornerRadiusToThicknessConverter* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CICornerRadiusToThicknessConverter* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CICornerRadiusToThicknessConverter* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CICornerRadiusToThicknessConverter* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_ConversionKind)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CICornerRadiusToThicknessConverter* This,
        enum __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CCornerRadiusToThicknessConverterKind* value);
    HRESULT (STDMETHODCALLTYPE* put_ConversionKind)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CICornerRadiusToThicknessConverter* This,
        enum __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CCornerRadiusToThicknessConverterKind value);
    HRESULT (STDMETHODCALLTYPE* get_Multiplier)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CICornerRadiusToThicknessConverter* This,
        DOUBLE* value);
    HRESULT (STDMETHODCALLTYPE* put_Multiplier)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CICornerRadiusToThicknessConverter* This,
        DOUBLE value);

        END_INTERFACE
    } __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CICornerRadiusToThicknessConverterVtbl;

    interface __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CICornerRadiusToThicknessConverter
    {
        CONST_VTBL struct __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CICornerRadiusToThicknessConverterVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CICornerRadiusToThicknessConverter;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CICornerRadiusToThicknessConverter_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CICornerRadiusToThicknessConverterStatics_INTERFACE_DEFINED__)
    #define ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CICornerRadiusToThicknessConverterStatics_INTERFACE_DEFINED__
    typedef struct __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CICornerRadiusToThicknessConverterStaticsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CICornerRadiusToThicknessConverterStatics* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CICornerRadiusToThicknessConverterStatics* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CICornerRadiusToThicknessConverterStatics* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CICornerRadiusToThicknessConverterStatics* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CICornerRadiusToThicknessConverterStatics* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CICornerRadiusToThicknessConverterStatics* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_ConversionKindProperty)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CICornerRadiusToThicknessConverterStatics* This,
        __x_ABI_CMicrosoft_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_MultiplierProperty)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CICornerRadiusToThicknessConverterStatics* This,
        __x_ABI_CMicrosoft_CUI_CXaml_CIDependencyProperty** value);

        END_INTERFACE
    } __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CICornerRadiusToThicknessConverterStaticsVtbl;

    interface __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CICornerRadiusToThicknessConverterStatics
    {
        CONST_VTBL struct __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CICornerRadiusToThicknessConverterStaticsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CICornerRadiusToThicknessConverterStatics;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CICornerRadiusToThicknessConverterStatics_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIDragCompletedEventArgs_INTERFACE_DEFINED__)
    #define ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIDragCompletedEventArgs_INTERFACE_DEFINED__
    typedef struct __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIDragCompletedEventArgsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIDragCompletedEventArgs* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIDragCompletedEventArgs* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIDragCompletedEventArgs* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIDragCompletedEventArgs* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIDragCompletedEventArgs* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIDragCompletedEventArgs* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_HorizontalChange)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIDragCompletedEventArgs* This,
        DOUBLE* value);
    HRESULT (STDMETHODCALLTYPE* get_VerticalChange)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIDragCompletedEventArgs* This,
        DOUBLE* value);
    HRESULT (STDMETHODCALLTYPE* get_Canceled)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIDragCompletedEventArgs* This,
        boolean* value);

        END_INTERFACE
    } __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIDragCompletedEventArgsVtbl;

    interface __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIDragCompletedEventArgs
    {
        CONST_VTBL struct __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIDragCompletedEventArgsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIDragCompletedEventArgs;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIDragCompletedEventArgs_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIDragCompletedEventArgsFactory_INTERFACE_DEFINED__)
    #define ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIDragCompletedEventArgsFactory_INTERFACE_DEFINED__
    typedef struct __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIDragCompletedEventArgsFactoryVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIDragCompletedEventArgsFactory* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIDragCompletedEventArgsFactory* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIDragCompletedEventArgsFactory* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIDragCompletedEventArgsFactory* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIDragCompletedEventArgsFactory* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIDragCompletedEventArgsFactory* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* CreateInstanceWithHorizontalChangeVerticalChangeAndCanceled)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIDragCompletedEventArgsFactory* This,
        DOUBLE horizontalChange,
        DOUBLE verticalChange,
        boolean canceled,
        IInspectable* baseInterface,
        IInspectable** innerInterface,
        __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIDragCompletedEventArgs** value);

        END_INTERFACE
    } __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIDragCompletedEventArgsFactoryVtbl;

    interface __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIDragCompletedEventArgsFactory
    {
        CONST_VTBL struct __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIDragCompletedEventArgsFactoryVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIDragCompletedEventArgsFactory;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIDragCompletedEventArgsFactory_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIDragDeltaEventArgs_INTERFACE_DEFINED__)
    #define ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIDragDeltaEventArgs_INTERFACE_DEFINED__
    typedef struct __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIDragDeltaEventArgsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIDragDeltaEventArgs* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIDragDeltaEventArgs* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIDragDeltaEventArgs* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIDragDeltaEventArgs* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIDragDeltaEventArgs* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIDragDeltaEventArgs* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_HorizontalChange)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIDragDeltaEventArgs* This,
        DOUBLE* value);
    HRESULT (STDMETHODCALLTYPE* get_VerticalChange)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIDragDeltaEventArgs* This,
        DOUBLE* value);

        END_INTERFACE
    } __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIDragDeltaEventArgsVtbl;

    interface __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIDragDeltaEventArgs
    {
        CONST_VTBL struct __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIDragDeltaEventArgsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIDragDeltaEventArgs;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIDragDeltaEventArgs_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIDragDeltaEventArgsFactory_INTERFACE_DEFINED__)
    #define ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIDragDeltaEventArgsFactory_INTERFACE_DEFINED__
    typedef struct __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIDragDeltaEventArgsFactoryVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIDragDeltaEventArgsFactory* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIDragDeltaEventArgsFactory* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIDragDeltaEventArgsFactory* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIDragDeltaEventArgsFactory* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIDragDeltaEventArgsFactory* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIDragDeltaEventArgsFactory* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* CreateInstanceWithHorizontalChangeAndVerticalChange)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIDragDeltaEventArgsFactory* This,
        DOUBLE horizontalChange,
        DOUBLE verticalChange,
        IInspectable* baseInterface,
        IInspectable** innerInterface,
        __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIDragDeltaEventArgs** value);

        END_INTERFACE
    } __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIDragDeltaEventArgsFactoryVtbl;

    interface __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIDragDeltaEventArgsFactory
    {
        CONST_VTBL struct __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIDragDeltaEventArgsFactoryVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIDragDeltaEventArgsFactory;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIDragDeltaEventArgsFactory_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIDragStartedEventArgs_INTERFACE_DEFINED__)
    #define ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIDragStartedEventArgs_INTERFACE_DEFINED__
    typedef struct __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIDragStartedEventArgsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIDragStartedEventArgs* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIDragStartedEventArgs* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIDragStartedEventArgs* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIDragStartedEventArgs* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIDragStartedEventArgs* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIDragStartedEventArgs* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_HorizontalOffset)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIDragStartedEventArgs* This,
        DOUBLE* value);
    HRESULT (STDMETHODCALLTYPE* get_VerticalOffset)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIDragStartedEventArgs* This,
        DOUBLE* value);

        END_INTERFACE
    } __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIDragStartedEventArgsVtbl;

    interface __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIDragStartedEventArgs
    {
        CONST_VTBL struct __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIDragStartedEventArgsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIDragStartedEventArgs;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIDragStartedEventArgs_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIDragStartedEventArgsFactory_INTERFACE_DEFINED__)
    #define ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIDragStartedEventArgsFactory_INTERFACE_DEFINED__
    typedef struct __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIDragStartedEventArgsFactoryVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIDragStartedEventArgsFactory* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIDragStartedEventArgsFactory* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIDragStartedEventArgsFactory* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIDragStartedEventArgsFactory* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIDragStartedEventArgsFactory* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIDragStartedEventArgsFactory* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* CreateInstanceWithHorizontalOffsetAndVerticalOffset)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIDragStartedEventArgsFactory* This,
        DOUBLE horizontalOffset,
        DOUBLE verticalOffset,
        IInspectable* baseInterface,
        IInspectable** innerInterface,
        __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIDragStartedEventArgs** value);

        END_INTERFACE
    } __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIDragStartedEventArgsFactoryVtbl;

    interface __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIDragStartedEventArgsFactory
    {
        CONST_VTBL struct __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIDragStartedEventArgsFactoryVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIDragStartedEventArgsFactory;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIDragStartedEventArgsFactory_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIFlyoutBase_INTERFACE_DEFINED__)
    #define ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIFlyoutBase_INTERFACE_DEFINED__
    typedef struct __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIFlyoutBaseVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIFlyoutBase* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIFlyoutBase* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIFlyoutBase* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIFlyoutBase* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIFlyoutBase* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIFlyoutBase* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Placement)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIFlyoutBase* This,
        enum __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CFlyoutPlacementMode* value);
    HRESULT (STDMETHODCALLTYPE* put_Placement)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIFlyoutBase* This,
        enum __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CFlyoutPlacementMode value);
    HRESULT (STDMETHODCALLTYPE* get_Target)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIFlyoutBase* This,
        __x_ABI_CMicrosoft_CUI_CXaml_CIFrameworkElement** value);
    HRESULT (STDMETHODCALLTYPE* get_AllowFocusOnInteraction)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIFlyoutBase* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* put_AllowFocusOnInteraction)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIFlyoutBase* This,
        boolean value);
    HRESULT (STDMETHODCALLTYPE* get_LightDismissOverlayMode)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIFlyoutBase* This,
        enum __x_ABI_CMicrosoft_CUI_CXaml_CControls_CLightDismissOverlayMode* value);
    HRESULT (STDMETHODCALLTYPE* put_LightDismissOverlayMode)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIFlyoutBase* This,
        enum __x_ABI_CMicrosoft_CUI_CXaml_CControls_CLightDismissOverlayMode value);
    HRESULT (STDMETHODCALLTYPE* get_AllowFocusWhenDisabled)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIFlyoutBase* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* put_AllowFocusWhenDisabled)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIFlyoutBase* This,
        boolean value);
    HRESULT (STDMETHODCALLTYPE* get_ShowMode)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIFlyoutBase* This,
        enum __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CFlyoutShowMode* value);
    HRESULT (STDMETHODCALLTYPE* put_ShowMode)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIFlyoutBase* This,
        enum __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CFlyoutShowMode value);
    HRESULT (STDMETHODCALLTYPE* get_InputDevicePrefersPrimaryCommands)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIFlyoutBase* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* get_AreOpenCloseAnimationsEnabled)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIFlyoutBase* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* put_AreOpenCloseAnimationsEnabled)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIFlyoutBase* This,
        boolean value);
    HRESULT (STDMETHODCALLTYPE* get_ShouldConstrainToRootBounds)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIFlyoutBase* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* put_ShouldConstrainToRootBounds)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIFlyoutBase* This,
        boolean value);
    HRESULT (STDMETHODCALLTYPE* get_IsConstrainedToRootBounds)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIFlyoutBase* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* get_ElementSoundMode)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIFlyoutBase* This,
        enum __x_ABI_CMicrosoft_CUI_CXaml_CElementSoundMode* value);
    HRESULT (STDMETHODCALLTYPE* put_ElementSoundMode)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIFlyoutBase* This,
        enum __x_ABI_CMicrosoft_CUI_CXaml_CElementSoundMode value);
    HRESULT (STDMETHODCALLTYPE* get_OverlayInputPassThroughElement)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIFlyoutBase* This,
        __x_ABI_CMicrosoft_CUI_CXaml_CIDependencyObject** value);
    HRESULT (STDMETHODCALLTYPE* put_OverlayInputPassThroughElement)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIFlyoutBase* This,
        __x_ABI_CMicrosoft_CUI_CXaml_CIDependencyObject* value);
    HRESULT (STDMETHODCALLTYPE* get_IsOpen)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIFlyoutBase* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* get_XamlRoot)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIFlyoutBase* This,
        __x_ABI_CMicrosoft_CUI_CXaml_CIXamlRoot** value);
    HRESULT (STDMETHODCALLTYPE* put_XamlRoot)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIFlyoutBase* This,
        __x_ABI_CMicrosoft_CUI_CXaml_CIXamlRoot* value);
    HRESULT (STDMETHODCALLTYPE* add_Opened)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIFlyoutBase* This,
        __x_ABI_C__FIEventHandler_1_IInspectable* handler,
        EventRegistrationToken* token);
    HRESULT (STDMETHODCALLTYPE* remove_Opened)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIFlyoutBase* This,
        EventRegistrationToken token);
    HRESULT (STDMETHODCALLTYPE* add_Closed)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIFlyoutBase* This,
        __x_ABI_C__FIEventHandler_1_IInspectable* handler,
        EventRegistrationToken* token);
    HRESULT (STDMETHODCALLTYPE* remove_Closed)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIFlyoutBase* This,
        EventRegistrationToken token);
    HRESULT (STDMETHODCALLTYPE* add_Opening)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIFlyoutBase* This,
        __x_ABI_C__FIEventHandler_1_IInspectable* handler,
        EventRegistrationToken* token);
    HRESULT (STDMETHODCALLTYPE* remove_Opening)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIFlyoutBase* This,
        EventRegistrationToken token);
    HRESULT (STDMETHODCALLTYPE* add_Closing)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIFlyoutBase* This,
        __x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CUI__CXaml__CControls__CPrimitives__CFlyoutBase___x_ABI_CMicrosoft__CUI__CXaml__CControls__CPrimitives__CFlyoutBaseClosingEventArgs* handler,
        EventRegistrationToken* token);
    HRESULT (STDMETHODCALLTYPE* remove_Closing)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIFlyoutBase* This,
        EventRegistrationToken token);
    HRESULT (STDMETHODCALLTYPE* ShowAt)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIFlyoutBase* This,
        __x_ABI_CMicrosoft_CUI_CXaml_CIFrameworkElement* placementTarget);
    HRESULT (STDMETHODCALLTYPE* ShowAtWithOptions)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIFlyoutBase* This,
        __x_ABI_CMicrosoft_CUI_CXaml_CIDependencyObject* placementTarget,
        __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIFlyoutShowOptions* showOptions);
    HRESULT (STDMETHODCALLTYPE* Hide)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIFlyoutBase* This);
    HRESULT (STDMETHODCALLTYPE* TryInvokeKeyboardAccelerator)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIFlyoutBase* This,
        __x_ABI_CMicrosoft_CUI_CXaml_CInput_CIProcessKeyboardAcceleratorEventArgs* args);

        END_INTERFACE
    } __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIFlyoutBaseVtbl;

    interface __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIFlyoutBase
    {
        CONST_VTBL struct __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIFlyoutBaseVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIFlyoutBase;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIFlyoutBase_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIFlyoutBase2_INTERFACE_DEFINED__)
    #define ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIFlyoutBase2_INTERFACE_DEFINED__
    typedef struct __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIFlyoutBase2Vtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIFlyoutBase2* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIFlyoutBase2* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIFlyoutBase2* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIFlyoutBase2* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIFlyoutBase2* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIFlyoutBase2* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_SystemBackdrop)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIFlyoutBase2* This,
        __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CISystemBackdrop** value);
    HRESULT (STDMETHODCALLTYPE* put_SystemBackdrop)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIFlyoutBase2* This,
        __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CISystemBackdrop* value);

        END_INTERFACE
    } __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIFlyoutBase2Vtbl;

    interface __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIFlyoutBase2
    {
        CONST_VTBL struct __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIFlyoutBase2Vtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIFlyoutBase2;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIFlyoutBase2_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIFlyoutBaseClosingEventArgs_INTERFACE_DEFINED__)
    #define ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIFlyoutBaseClosingEventArgs_INTERFACE_DEFINED__
    typedef struct __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIFlyoutBaseClosingEventArgsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIFlyoutBaseClosingEventArgs* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIFlyoutBaseClosingEventArgs* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIFlyoutBaseClosingEventArgs* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIFlyoutBaseClosingEventArgs* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIFlyoutBaseClosingEventArgs* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIFlyoutBaseClosingEventArgs* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Cancel)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIFlyoutBaseClosingEventArgs* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* put_Cancel)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIFlyoutBaseClosingEventArgs* This,
        boolean value);

        END_INTERFACE
    } __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIFlyoutBaseClosingEventArgsVtbl;

    interface __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIFlyoutBaseClosingEventArgs
    {
        CONST_VTBL struct __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIFlyoutBaseClosingEventArgsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIFlyoutBaseClosingEventArgs;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIFlyoutBaseClosingEventArgs_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIFlyoutBaseFactory_INTERFACE_DEFINED__)
    #define ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIFlyoutBaseFactory_INTERFACE_DEFINED__
    typedef struct __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIFlyoutBaseFactoryVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIFlyoutBaseFactory* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIFlyoutBaseFactory* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIFlyoutBaseFactory* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIFlyoutBaseFactory* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIFlyoutBaseFactory* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIFlyoutBaseFactory* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* CreateInstance)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIFlyoutBaseFactory* This,
        IInspectable* baseInterface,
        IInspectable** innerInterface,
        __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIFlyoutBase** value);

        END_INTERFACE
    } __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIFlyoutBaseFactoryVtbl;

    interface __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIFlyoutBaseFactory
    {
        CONST_VTBL struct __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIFlyoutBaseFactoryVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIFlyoutBaseFactory;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIFlyoutBaseFactory_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIFlyoutBaseOverrides_INTERFACE_DEFINED__)
    #define ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIFlyoutBaseOverrides_INTERFACE_DEFINED__
    typedef struct __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIFlyoutBaseOverridesVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIFlyoutBaseOverrides* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIFlyoutBaseOverrides* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIFlyoutBaseOverrides* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIFlyoutBaseOverrides* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIFlyoutBaseOverrides* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIFlyoutBaseOverrides* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* CreatePresenter)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIFlyoutBaseOverrides* This,
        __x_ABI_CMicrosoft_CUI_CXaml_CControls_CIControl** result);
    HRESULT (STDMETHODCALLTYPE* OnProcessKeyboardAccelerators)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIFlyoutBaseOverrides* This,
        __x_ABI_CMicrosoft_CUI_CXaml_CInput_CIProcessKeyboardAcceleratorEventArgs* args);

        END_INTERFACE
    } __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIFlyoutBaseOverridesVtbl;

    interface __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIFlyoutBaseOverrides
    {
        CONST_VTBL struct __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIFlyoutBaseOverridesVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIFlyoutBaseOverrides;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIFlyoutBaseOverrides_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIFlyoutBaseStatics_INTERFACE_DEFINED__)
    #define ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIFlyoutBaseStatics_INTERFACE_DEFINED__
    typedef struct __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIFlyoutBaseStaticsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIFlyoutBaseStatics* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIFlyoutBaseStatics* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIFlyoutBaseStatics* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIFlyoutBaseStatics* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIFlyoutBaseStatics* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIFlyoutBaseStatics* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_TargetProperty)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIFlyoutBaseStatics* This,
        __x_ABI_CMicrosoft_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_PlacementProperty)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIFlyoutBaseStatics* This,
        __x_ABI_CMicrosoft_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_AllowFocusOnInteractionProperty)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIFlyoutBaseStatics* This,
        __x_ABI_CMicrosoft_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_LightDismissOverlayModeProperty)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIFlyoutBaseStatics* This,
        __x_ABI_CMicrosoft_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_AllowFocusWhenDisabledProperty)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIFlyoutBaseStatics* This,
        __x_ABI_CMicrosoft_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_ShowModeProperty)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIFlyoutBaseStatics* This,
        __x_ABI_CMicrosoft_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_InputDevicePrefersPrimaryCommandsProperty)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIFlyoutBaseStatics* This,
        __x_ABI_CMicrosoft_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_AreOpenCloseAnimationsEnabledProperty)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIFlyoutBaseStatics* This,
        __x_ABI_CMicrosoft_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_ShouldConstrainToRootBoundsProperty)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIFlyoutBaseStatics* This,
        __x_ABI_CMicrosoft_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_ElementSoundModeProperty)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIFlyoutBaseStatics* This,
        __x_ABI_CMicrosoft_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_OverlayInputPassThroughElementProperty)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIFlyoutBaseStatics* This,
        __x_ABI_CMicrosoft_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_IsOpenProperty)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIFlyoutBaseStatics* This,
        __x_ABI_CMicrosoft_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_AttachedFlyoutProperty)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIFlyoutBaseStatics* This,
        __x_ABI_CMicrosoft_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* GetAttachedFlyout)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIFlyoutBaseStatics* This,
        __x_ABI_CMicrosoft_CUI_CXaml_CIFrameworkElement* element,
        __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIFlyoutBase** result);
    HRESULT (STDMETHODCALLTYPE* SetAttachedFlyout)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIFlyoutBaseStatics* This,
        __x_ABI_CMicrosoft_CUI_CXaml_CIFrameworkElement* element,
        __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIFlyoutBase* value);
    HRESULT (STDMETHODCALLTYPE* ShowAttachedFlyout)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIFlyoutBaseStatics* This,
        __x_ABI_CMicrosoft_CUI_CXaml_CIFrameworkElement* flyoutOwner);

        END_INTERFACE
    } __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIFlyoutBaseStaticsVtbl;

    interface __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIFlyoutBaseStatics
    {
        CONST_VTBL struct __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIFlyoutBaseStaticsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIFlyoutBaseStatics;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIFlyoutBaseStatics_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIFlyoutBaseStatics2_INTERFACE_DEFINED__)
    #define ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIFlyoutBaseStatics2_INTERFACE_DEFINED__
    typedef struct __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIFlyoutBaseStatics2Vtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIFlyoutBaseStatics2* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIFlyoutBaseStatics2* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIFlyoutBaseStatics2* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIFlyoutBaseStatics2* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIFlyoutBaseStatics2* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIFlyoutBaseStatics2* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_SystemBackdropProperty)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIFlyoutBaseStatics2* This,
        __x_ABI_CMicrosoft_CUI_CXaml_CIDependencyProperty** value);

        END_INTERFACE
    } __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIFlyoutBaseStatics2Vtbl;

    interface __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIFlyoutBaseStatics2
    {
        CONST_VTBL struct __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIFlyoutBaseStatics2Vtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIFlyoutBaseStatics2;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIFlyoutBaseStatics2_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIFlyoutShowOptions_INTERFACE_DEFINED__)
    #define ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIFlyoutShowOptions_INTERFACE_DEFINED__
    typedef struct __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIFlyoutShowOptionsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIFlyoutShowOptions* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIFlyoutShowOptions* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIFlyoutShowOptions* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIFlyoutShowOptions* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIFlyoutShowOptions* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIFlyoutShowOptions* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Position)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIFlyoutShowOptions* This,
        __x_ABI_C__FIReference_1___x_ABI_CWindows__CFoundation__CPoint** value);
    HRESULT (STDMETHODCALLTYPE* put_Position)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIFlyoutShowOptions* This,
        __x_ABI_C__FIReference_1___x_ABI_CWindows__CFoundation__CPoint* value);
    HRESULT (STDMETHODCALLTYPE* get_ExclusionRect)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIFlyoutShowOptions* This,
        __x_ABI_C__FIReference_1___x_ABI_CWindows__CFoundation__CRect** value);
    HRESULT (STDMETHODCALLTYPE* put_ExclusionRect)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIFlyoutShowOptions* This,
        __x_ABI_C__FIReference_1___x_ABI_CWindows__CFoundation__CRect* value);
    HRESULT (STDMETHODCALLTYPE* get_ShowMode)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIFlyoutShowOptions* This,
        enum __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CFlyoutShowMode* value);
    HRESULT (STDMETHODCALLTYPE* put_ShowMode)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIFlyoutShowOptions* This,
        enum __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CFlyoutShowMode value);
    HRESULT (STDMETHODCALLTYPE* get_Placement)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIFlyoutShowOptions* This,
        enum __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CFlyoutPlacementMode* value);
    HRESULT (STDMETHODCALLTYPE* put_Placement)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIFlyoutShowOptions* This,
        enum __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CFlyoutPlacementMode value);

        END_INTERFACE
    } __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIFlyoutShowOptionsVtbl;

    interface __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIFlyoutShowOptions
    {
        CONST_VTBL struct __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIFlyoutShowOptionsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIFlyoutShowOptions;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIFlyoutShowOptions_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIFlyoutShowOptionsFactory_INTERFACE_DEFINED__)
    #define ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIFlyoutShowOptionsFactory_INTERFACE_DEFINED__
    typedef struct __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIFlyoutShowOptionsFactoryVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIFlyoutShowOptionsFactory* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIFlyoutShowOptionsFactory* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIFlyoutShowOptionsFactory* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIFlyoutShowOptionsFactory* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIFlyoutShowOptionsFactory* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIFlyoutShowOptionsFactory* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* CreateInstance)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIFlyoutShowOptionsFactory* This,
        IInspectable* baseInterface,
        IInspectable** innerInterface,
        __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIFlyoutShowOptions** value);

        END_INTERFACE
    } __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIFlyoutShowOptionsFactoryVtbl;

    interface __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIFlyoutShowOptionsFactory
    {
        CONST_VTBL struct __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIFlyoutShowOptionsFactoryVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIFlyoutShowOptionsFactory;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIFlyoutShowOptionsFactory_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIGeneratorPositionHelper_INTERFACE_DEFINED__)
    #define ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIGeneratorPositionHelper_INTERFACE_DEFINED__
    typedef struct __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIGeneratorPositionHelperVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIGeneratorPositionHelper* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIGeneratorPositionHelper* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIGeneratorPositionHelper* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIGeneratorPositionHelper* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIGeneratorPositionHelper* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIGeneratorPositionHelper* This,
            TrustLevel* trustLevel);
    
        END_INTERFACE
    } __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIGeneratorPositionHelperVtbl;

    interface __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIGeneratorPositionHelper
    {
        CONST_VTBL struct __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIGeneratorPositionHelperVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIGeneratorPositionHelper;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIGeneratorPositionHelper_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIGeneratorPositionHelperStatics_INTERFACE_DEFINED__)
    #define ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIGeneratorPositionHelperStatics_INTERFACE_DEFINED__
    typedef struct __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIGeneratorPositionHelperStaticsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIGeneratorPositionHelperStatics* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIGeneratorPositionHelperStatics* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIGeneratorPositionHelperStatics* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIGeneratorPositionHelperStatics* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIGeneratorPositionHelperStatics* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIGeneratorPositionHelperStatics* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* FromIndexAndOffset)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIGeneratorPositionHelperStatics* This,
        INT32 index,
        INT32 offset,
        struct __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CGeneratorPosition* result);

        END_INTERFACE
    } __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIGeneratorPositionHelperStaticsVtbl;

    interface __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIGeneratorPositionHelperStatics
    {
        CONST_VTBL struct __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIGeneratorPositionHelperStaticsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIGeneratorPositionHelperStatics;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIGeneratorPositionHelperStatics_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIGridViewItemPresenter_INTERFACE_DEFINED__)
    #define ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIGridViewItemPresenter_INTERFACE_DEFINED__
    typedef struct __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIGridViewItemPresenterVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIGridViewItemPresenter* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIGridViewItemPresenter* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIGridViewItemPresenter* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIGridViewItemPresenter* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIGridViewItemPresenter* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIGridViewItemPresenter* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_SelectionCheckMarkVisualEnabled)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIGridViewItemPresenter* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* put_SelectionCheckMarkVisualEnabled)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIGridViewItemPresenter* This,
        boolean value);
    HRESULT (STDMETHODCALLTYPE* get_CheckHintBrush)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIGridViewItemPresenter* This,
        __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIBrush** value);
    HRESULT (STDMETHODCALLTYPE* put_CheckHintBrush)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIGridViewItemPresenter* This,
        __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIBrush* value);
    HRESULT (STDMETHODCALLTYPE* get_CheckSelectingBrush)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIGridViewItemPresenter* This,
        __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIBrush** value);
    HRESULT (STDMETHODCALLTYPE* put_CheckSelectingBrush)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIGridViewItemPresenter* This,
        __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIBrush* value);
    HRESULT (STDMETHODCALLTYPE* get_CheckBrush)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIGridViewItemPresenter* This,
        __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIBrush** value);
    HRESULT (STDMETHODCALLTYPE* put_CheckBrush)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIGridViewItemPresenter* This,
        __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIBrush* value);
    HRESULT (STDMETHODCALLTYPE* get_DragBackground)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIGridViewItemPresenter* This,
        __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIBrush** value);
    HRESULT (STDMETHODCALLTYPE* put_DragBackground)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIGridViewItemPresenter* This,
        __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIBrush* value);
    HRESULT (STDMETHODCALLTYPE* get_DragForeground)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIGridViewItemPresenter* This,
        __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIBrush** value);
    HRESULT (STDMETHODCALLTYPE* put_DragForeground)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIGridViewItemPresenter* This,
        __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIBrush* value);
    HRESULT (STDMETHODCALLTYPE* get_FocusBorderBrush)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIGridViewItemPresenter* This,
        __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIBrush** value);
    HRESULT (STDMETHODCALLTYPE* put_FocusBorderBrush)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIGridViewItemPresenter* This,
        __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIBrush* value);
    HRESULT (STDMETHODCALLTYPE* get_PlaceholderBackground)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIGridViewItemPresenter* This,
        __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIBrush** value);
    HRESULT (STDMETHODCALLTYPE* put_PlaceholderBackground)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIGridViewItemPresenter* This,
        __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIBrush* value);
    HRESULT (STDMETHODCALLTYPE* get_PointerOverBackground)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIGridViewItemPresenter* This,
        __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIBrush** value);
    HRESULT (STDMETHODCALLTYPE* put_PointerOverBackground)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIGridViewItemPresenter* This,
        __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIBrush* value);
    HRESULT (STDMETHODCALLTYPE* get_SelectedBackground)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIGridViewItemPresenter* This,
        __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIBrush** value);
    HRESULT (STDMETHODCALLTYPE* put_SelectedBackground)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIGridViewItemPresenter* This,
        __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIBrush* value);
    HRESULT (STDMETHODCALLTYPE* get_SelectedForeground)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIGridViewItemPresenter* This,
        __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIBrush** value);
    HRESULT (STDMETHODCALLTYPE* put_SelectedForeground)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIGridViewItemPresenter* This,
        __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIBrush* value);
    HRESULT (STDMETHODCALLTYPE* get_SelectedPointerOverBackground)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIGridViewItemPresenter* This,
        __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIBrush** value);
    HRESULT (STDMETHODCALLTYPE* put_SelectedPointerOverBackground)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIGridViewItemPresenter* This,
        __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIBrush* value);
    HRESULT (STDMETHODCALLTYPE* get_SelectedPointerOverBorderBrush)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIGridViewItemPresenter* This,
        __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIBrush** value);
    HRESULT (STDMETHODCALLTYPE* put_SelectedPointerOverBorderBrush)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIGridViewItemPresenter* This,
        __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIBrush* value);
    HRESULT (STDMETHODCALLTYPE* get_SelectedBorderThickness)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIGridViewItemPresenter* This,
        struct __x_ABI_CMicrosoft_CUI_CXaml_CThickness* value);
    HRESULT (STDMETHODCALLTYPE* put_SelectedBorderThickness)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIGridViewItemPresenter* This,
        struct __x_ABI_CMicrosoft_CUI_CXaml_CThickness value);
    HRESULT (STDMETHODCALLTYPE* get_DisabledOpacity)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIGridViewItemPresenter* This,
        DOUBLE* value);
    HRESULT (STDMETHODCALLTYPE* put_DisabledOpacity)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIGridViewItemPresenter* This,
        DOUBLE value);
    HRESULT (STDMETHODCALLTYPE* get_DragOpacity)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIGridViewItemPresenter* This,
        DOUBLE* value);
    HRESULT (STDMETHODCALLTYPE* put_DragOpacity)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIGridViewItemPresenter* This,
        DOUBLE value);
    HRESULT (STDMETHODCALLTYPE* get_ReorderHintOffset)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIGridViewItemPresenter* This,
        DOUBLE* value);
    HRESULT (STDMETHODCALLTYPE* put_ReorderHintOffset)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIGridViewItemPresenter* This,
        DOUBLE value);
    HRESULT (STDMETHODCALLTYPE* get_GridViewItemPresenterHorizontalContentAlignment)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIGridViewItemPresenter* This,
        enum __x_ABI_CMicrosoft_CUI_CXaml_CHorizontalAlignment* value);
    HRESULT (STDMETHODCALLTYPE* put_GridViewItemPresenterHorizontalContentAlignment)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIGridViewItemPresenter* This,
        enum __x_ABI_CMicrosoft_CUI_CXaml_CHorizontalAlignment value);
    HRESULT (STDMETHODCALLTYPE* get_GridViewItemPresenterVerticalContentAlignment)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIGridViewItemPresenter* This,
        enum __x_ABI_CMicrosoft_CUI_CXaml_CVerticalAlignment* value);
    HRESULT (STDMETHODCALLTYPE* put_GridViewItemPresenterVerticalContentAlignment)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIGridViewItemPresenter* This,
        enum __x_ABI_CMicrosoft_CUI_CXaml_CVerticalAlignment value);
    HRESULT (STDMETHODCALLTYPE* get_GridViewItemPresenterPadding)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIGridViewItemPresenter* This,
        struct __x_ABI_CMicrosoft_CUI_CXaml_CThickness* value);
    HRESULT (STDMETHODCALLTYPE* put_GridViewItemPresenterPadding)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIGridViewItemPresenter* This,
        struct __x_ABI_CMicrosoft_CUI_CXaml_CThickness value);
    HRESULT (STDMETHODCALLTYPE* get_PointerOverBackgroundMargin)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIGridViewItemPresenter* This,
        struct __x_ABI_CMicrosoft_CUI_CXaml_CThickness* value);
    HRESULT (STDMETHODCALLTYPE* put_PointerOverBackgroundMargin)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIGridViewItemPresenter* This,
        struct __x_ABI_CMicrosoft_CUI_CXaml_CThickness value);
    HRESULT (STDMETHODCALLTYPE* get_ContentMargin)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIGridViewItemPresenter* This,
        struct __x_ABI_CMicrosoft_CUI_CXaml_CThickness* value);
    HRESULT (STDMETHODCALLTYPE* put_ContentMargin)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIGridViewItemPresenter* This,
        struct __x_ABI_CMicrosoft_CUI_CXaml_CThickness value);

        END_INTERFACE
    } __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIGridViewItemPresenterVtbl;

    interface __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIGridViewItemPresenter
    {
        CONST_VTBL struct __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIGridViewItemPresenterVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIGridViewItemPresenter;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIGridViewItemPresenter_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIGridViewItemPresenterFactory_INTERFACE_DEFINED__)
    #define ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIGridViewItemPresenterFactory_INTERFACE_DEFINED__
    typedef struct __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIGridViewItemPresenterFactoryVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIGridViewItemPresenterFactory* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIGridViewItemPresenterFactory* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIGridViewItemPresenterFactory* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIGridViewItemPresenterFactory* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIGridViewItemPresenterFactory* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIGridViewItemPresenterFactory* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* CreateInstance)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIGridViewItemPresenterFactory* This,
        IInspectable* baseInterface,
        IInspectable** innerInterface,
        __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIGridViewItemPresenter** value);

        END_INTERFACE
    } __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIGridViewItemPresenterFactoryVtbl;

    interface __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIGridViewItemPresenterFactory
    {
        CONST_VTBL struct __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIGridViewItemPresenterFactoryVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIGridViewItemPresenterFactory;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIGridViewItemPresenterFactory_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIGridViewItemPresenterStatics_INTERFACE_DEFINED__)
    #define ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIGridViewItemPresenterStatics_INTERFACE_DEFINED__
    typedef struct __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIGridViewItemPresenterStaticsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIGridViewItemPresenterStatics* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIGridViewItemPresenterStatics* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIGridViewItemPresenterStatics* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIGridViewItemPresenterStatics* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIGridViewItemPresenterStatics* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIGridViewItemPresenterStatics* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_SelectionCheckMarkVisualEnabledProperty)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIGridViewItemPresenterStatics* This,
        __x_ABI_CMicrosoft_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_CheckHintBrushProperty)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIGridViewItemPresenterStatics* This,
        __x_ABI_CMicrosoft_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_CheckSelectingBrushProperty)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIGridViewItemPresenterStatics* This,
        __x_ABI_CMicrosoft_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_CheckBrushProperty)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIGridViewItemPresenterStatics* This,
        __x_ABI_CMicrosoft_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_DragBackgroundProperty)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIGridViewItemPresenterStatics* This,
        __x_ABI_CMicrosoft_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_DragForegroundProperty)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIGridViewItemPresenterStatics* This,
        __x_ABI_CMicrosoft_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_FocusBorderBrushProperty)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIGridViewItemPresenterStatics* This,
        __x_ABI_CMicrosoft_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_PlaceholderBackgroundProperty)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIGridViewItemPresenterStatics* This,
        __x_ABI_CMicrosoft_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_PointerOverBackgroundProperty)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIGridViewItemPresenterStatics* This,
        __x_ABI_CMicrosoft_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_SelectedBackgroundProperty)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIGridViewItemPresenterStatics* This,
        __x_ABI_CMicrosoft_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_SelectedForegroundProperty)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIGridViewItemPresenterStatics* This,
        __x_ABI_CMicrosoft_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_SelectedPointerOverBackgroundProperty)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIGridViewItemPresenterStatics* This,
        __x_ABI_CMicrosoft_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_SelectedPointerOverBorderBrushProperty)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIGridViewItemPresenterStatics* This,
        __x_ABI_CMicrosoft_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_SelectedBorderThicknessProperty)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIGridViewItemPresenterStatics* This,
        __x_ABI_CMicrosoft_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_DisabledOpacityProperty)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIGridViewItemPresenterStatics* This,
        __x_ABI_CMicrosoft_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_DragOpacityProperty)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIGridViewItemPresenterStatics* This,
        __x_ABI_CMicrosoft_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_ReorderHintOffsetProperty)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIGridViewItemPresenterStatics* This,
        __x_ABI_CMicrosoft_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_GridViewItemPresenterHorizontalContentAlignmentProperty)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIGridViewItemPresenterStatics* This,
        __x_ABI_CMicrosoft_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_GridViewItemPresenterVerticalContentAlignmentProperty)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIGridViewItemPresenterStatics* This,
        __x_ABI_CMicrosoft_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_GridViewItemPresenterPaddingProperty)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIGridViewItemPresenterStatics* This,
        __x_ABI_CMicrosoft_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_PointerOverBackgroundMarginProperty)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIGridViewItemPresenterStatics* This,
        __x_ABI_CMicrosoft_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_ContentMarginProperty)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIGridViewItemPresenterStatics* This,
        __x_ABI_CMicrosoft_CUI_CXaml_CIDependencyProperty** value);

        END_INTERFACE
    } __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIGridViewItemPresenterStaticsVtbl;

    interface __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIGridViewItemPresenterStatics
    {
        CONST_VTBL struct __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIGridViewItemPresenterStaticsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIGridViewItemPresenterStatics;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIGridViewItemPresenterStatics_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIGridViewItemTemplateSettings_INTERFACE_DEFINED__)
    #define ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIGridViewItemTemplateSettings_INTERFACE_DEFINED__
    typedef struct __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIGridViewItemTemplateSettingsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIGridViewItemTemplateSettings* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIGridViewItemTemplateSettings* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIGridViewItemTemplateSettings* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIGridViewItemTemplateSettings* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIGridViewItemTemplateSettings* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIGridViewItemTemplateSettings* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_DragItemsCount)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIGridViewItemTemplateSettings* This,
        INT32* value);

        END_INTERFACE
    } __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIGridViewItemTemplateSettingsVtbl;

    interface __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIGridViewItemTemplateSettings
    {
        CONST_VTBL struct __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIGridViewItemTemplateSettingsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIGridViewItemTemplateSettings;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIGridViewItemTemplateSettings_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIInfoBarPanel_INTERFACE_DEFINED__)
    #define ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIInfoBarPanel_INTERFACE_DEFINED__
    typedef struct __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIInfoBarPanelVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIInfoBarPanel* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIInfoBarPanel* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIInfoBarPanel* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIInfoBarPanel* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIInfoBarPanel* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIInfoBarPanel* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_HorizontalOrientationPadding)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIInfoBarPanel* This,
        struct __x_ABI_CMicrosoft_CUI_CXaml_CThickness* value);
    HRESULT (STDMETHODCALLTYPE* put_HorizontalOrientationPadding)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIInfoBarPanel* This,
        struct __x_ABI_CMicrosoft_CUI_CXaml_CThickness value);
    HRESULT (STDMETHODCALLTYPE* get_VerticalOrientationPadding)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIInfoBarPanel* This,
        struct __x_ABI_CMicrosoft_CUI_CXaml_CThickness* value);
    HRESULT (STDMETHODCALLTYPE* put_VerticalOrientationPadding)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIInfoBarPanel* This,
        struct __x_ABI_CMicrosoft_CUI_CXaml_CThickness value);

        END_INTERFACE
    } __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIInfoBarPanelVtbl;

    interface __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIInfoBarPanel
    {
        CONST_VTBL struct __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIInfoBarPanelVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIInfoBarPanel;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIInfoBarPanel_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIInfoBarPanelFactory_INTERFACE_DEFINED__)
    #define ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIInfoBarPanelFactory_INTERFACE_DEFINED__
    typedef struct __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIInfoBarPanelFactoryVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIInfoBarPanelFactory* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIInfoBarPanelFactory* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIInfoBarPanelFactory* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIInfoBarPanelFactory* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIInfoBarPanelFactory* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIInfoBarPanelFactory* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* CreateInstance)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIInfoBarPanelFactory* This,
        IInspectable* baseInterface,
        IInspectable** innerInterface,
        __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIInfoBarPanel** value);

        END_INTERFACE
    } __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIInfoBarPanelFactoryVtbl;

    interface __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIInfoBarPanelFactory
    {
        CONST_VTBL struct __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIInfoBarPanelFactoryVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIInfoBarPanelFactory;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIInfoBarPanelFactory_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIInfoBarPanelStatics_INTERFACE_DEFINED__)
    #define ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIInfoBarPanelStatics_INTERFACE_DEFINED__
    typedef struct __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIInfoBarPanelStaticsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIInfoBarPanelStatics* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIInfoBarPanelStatics* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIInfoBarPanelStatics* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIInfoBarPanelStatics* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIInfoBarPanelStatics* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIInfoBarPanelStatics* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_HorizontalOrientationPaddingProperty)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIInfoBarPanelStatics* This,
        __x_ABI_CMicrosoft_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_VerticalOrientationPaddingProperty)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIInfoBarPanelStatics* This,
        __x_ABI_CMicrosoft_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* SetHorizontalOrientationMargin)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIInfoBarPanelStatics* This,
        __x_ABI_CMicrosoft_CUI_CXaml_CIDependencyObject* object,
        struct __x_ABI_CMicrosoft_CUI_CXaml_CThickness value);
    HRESULT (STDMETHODCALLTYPE* GetHorizontalOrientationMargin)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIInfoBarPanelStatics* This,
        __x_ABI_CMicrosoft_CUI_CXaml_CIDependencyObject* object,
        struct __x_ABI_CMicrosoft_CUI_CXaml_CThickness* result);
    HRESULT (STDMETHODCALLTYPE* get_HorizontalOrientationMarginProperty)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIInfoBarPanelStatics* This,
        __x_ABI_CMicrosoft_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* SetVerticalOrientationMargin)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIInfoBarPanelStatics* This,
        __x_ABI_CMicrosoft_CUI_CXaml_CIDependencyObject* object,
        struct __x_ABI_CMicrosoft_CUI_CXaml_CThickness value);
    HRESULT (STDMETHODCALLTYPE* GetVerticalOrientationMargin)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIInfoBarPanelStatics* This,
        __x_ABI_CMicrosoft_CUI_CXaml_CIDependencyObject* object,
        struct __x_ABI_CMicrosoft_CUI_CXaml_CThickness* result);
    HRESULT (STDMETHODCALLTYPE* get_VerticalOrientationMarginProperty)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIInfoBarPanelStatics* This,
        __x_ABI_CMicrosoft_CUI_CXaml_CIDependencyProperty** value);

        END_INTERFACE
    } __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIInfoBarPanelStaticsVtbl;

    interface __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIInfoBarPanelStatics
    {
        CONST_VTBL struct __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIInfoBarPanelStaticsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIInfoBarPanelStatics;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIInfoBarPanelStatics_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIItemsChangedEventArgs_INTERFACE_DEFINED__)
    #define ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIItemsChangedEventArgs_INTERFACE_DEFINED__
    typedef struct __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIItemsChangedEventArgsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIItemsChangedEventArgs* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIItemsChangedEventArgs* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIItemsChangedEventArgs* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIItemsChangedEventArgs* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIItemsChangedEventArgs* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIItemsChangedEventArgs* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Action)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIItemsChangedEventArgs* This,
        INT32* value);
    HRESULT (STDMETHODCALLTYPE* get_Position)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIItemsChangedEventArgs* This,
        struct __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CGeneratorPosition* value);
    HRESULT (STDMETHODCALLTYPE* get_OldPosition)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIItemsChangedEventArgs* This,
        struct __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CGeneratorPosition* value);
    HRESULT (STDMETHODCALLTYPE* get_ItemCount)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIItemsChangedEventArgs* This,
        INT32* value);
    HRESULT (STDMETHODCALLTYPE* get_ItemUICount)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIItemsChangedEventArgs* This,
        INT32* value);

        END_INTERFACE
    } __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIItemsChangedEventArgsVtbl;

    interface __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIItemsChangedEventArgs
    {
        CONST_VTBL struct __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIItemsChangedEventArgsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIItemsChangedEventArgs;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIItemsChangedEventArgs_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIJumpListItemBackgroundConverter_INTERFACE_DEFINED__)
    #define ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIJumpListItemBackgroundConverter_INTERFACE_DEFINED__
    typedef struct __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIJumpListItemBackgroundConverterVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIJumpListItemBackgroundConverter* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIJumpListItemBackgroundConverter* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIJumpListItemBackgroundConverter* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIJumpListItemBackgroundConverter* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIJumpListItemBackgroundConverter* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIJumpListItemBackgroundConverter* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Enabled)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIJumpListItemBackgroundConverter* This,
        __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIBrush** value);
    HRESULT (STDMETHODCALLTYPE* put_Enabled)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIJumpListItemBackgroundConverter* This,
        __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIBrush* value);
    HRESULT (STDMETHODCALLTYPE* get_Disabled)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIJumpListItemBackgroundConverter* This,
        __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIBrush** value);
    HRESULT (STDMETHODCALLTYPE* put_Disabled)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIJumpListItemBackgroundConverter* This,
        __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIBrush* value);

        END_INTERFACE
    } __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIJumpListItemBackgroundConverterVtbl;

    interface __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIJumpListItemBackgroundConverter
    {
        CONST_VTBL struct __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIJumpListItemBackgroundConverterVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIJumpListItemBackgroundConverter;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIJumpListItemBackgroundConverter_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIJumpListItemBackgroundConverterStatics_INTERFACE_DEFINED__)
    #define ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIJumpListItemBackgroundConverterStatics_INTERFACE_DEFINED__
    typedef struct __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIJumpListItemBackgroundConverterStaticsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIJumpListItemBackgroundConverterStatics* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIJumpListItemBackgroundConverterStatics* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIJumpListItemBackgroundConverterStatics* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIJumpListItemBackgroundConverterStatics* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIJumpListItemBackgroundConverterStatics* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIJumpListItemBackgroundConverterStatics* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_EnabledProperty)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIJumpListItemBackgroundConverterStatics* This,
        __x_ABI_CMicrosoft_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_DisabledProperty)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIJumpListItemBackgroundConverterStatics* This,
        __x_ABI_CMicrosoft_CUI_CXaml_CIDependencyProperty** value);

        END_INTERFACE
    } __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIJumpListItemBackgroundConverterStaticsVtbl;

    interface __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIJumpListItemBackgroundConverterStatics
    {
        CONST_VTBL struct __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIJumpListItemBackgroundConverterStaticsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIJumpListItemBackgroundConverterStatics;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIJumpListItemBackgroundConverterStatics_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIJumpListItemForegroundConverter_INTERFACE_DEFINED__)
    #define ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIJumpListItemForegroundConverter_INTERFACE_DEFINED__
    typedef struct __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIJumpListItemForegroundConverterVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIJumpListItemForegroundConverter* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIJumpListItemForegroundConverter* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIJumpListItemForegroundConverter* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIJumpListItemForegroundConverter* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIJumpListItemForegroundConverter* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIJumpListItemForegroundConverter* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Enabled)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIJumpListItemForegroundConverter* This,
        __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIBrush** value);
    HRESULT (STDMETHODCALLTYPE* put_Enabled)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIJumpListItemForegroundConverter* This,
        __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIBrush* value);
    HRESULT (STDMETHODCALLTYPE* get_Disabled)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIJumpListItemForegroundConverter* This,
        __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIBrush** value);
    HRESULT (STDMETHODCALLTYPE* put_Disabled)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIJumpListItemForegroundConverter* This,
        __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIBrush* value);

        END_INTERFACE
    } __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIJumpListItemForegroundConverterVtbl;

    interface __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIJumpListItemForegroundConverter
    {
        CONST_VTBL struct __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIJumpListItemForegroundConverterVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIJumpListItemForegroundConverter;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIJumpListItemForegroundConverter_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIJumpListItemForegroundConverterStatics_INTERFACE_DEFINED__)
    #define ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIJumpListItemForegroundConverterStatics_INTERFACE_DEFINED__
    typedef struct __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIJumpListItemForegroundConverterStaticsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIJumpListItemForegroundConverterStatics* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIJumpListItemForegroundConverterStatics* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIJumpListItemForegroundConverterStatics* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIJumpListItemForegroundConverterStatics* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIJumpListItemForegroundConverterStatics* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIJumpListItemForegroundConverterStatics* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_EnabledProperty)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIJumpListItemForegroundConverterStatics* This,
        __x_ABI_CMicrosoft_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_DisabledProperty)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIJumpListItemForegroundConverterStatics* This,
        __x_ABI_CMicrosoft_CUI_CXaml_CIDependencyProperty** value);

        END_INTERFACE
    } __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIJumpListItemForegroundConverterStaticsVtbl;

    interface __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIJumpListItemForegroundConverterStatics
    {
        CONST_VTBL struct __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIJumpListItemForegroundConverterStaticsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIJumpListItemForegroundConverterStatics;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIJumpListItemForegroundConverterStatics_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CILayoutInformation_INTERFACE_DEFINED__)
    #define ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CILayoutInformation_INTERFACE_DEFINED__
    typedef struct __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CILayoutInformationVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CILayoutInformation* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CILayoutInformation* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CILayoutInformation* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CILayoutInformation* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CILayoutInformation* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CILayoutInformation* This,
            TrustLevel* trustLevel);
    
        END_INTERFACE
    } __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CILayoutInformationVtbl;

    interface __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CILayoutInformation
    {
        CONST_VTBL struct __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CILayoutInformationVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CILayoutInformation;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CILayoutInformation_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CILayoutInformationStatics_INTERFACE_DEFINED__)
    #define ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CILayoutInformationStatics_INTERFACE_DEFINED__
    typedef struct __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CILayoutInformationStaticsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CILayoutInformationStatics* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CILayoutInformationStatics* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CILayoutInformationStatics* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CILayoutInformationStatics* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CILayoutInformationStatics* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CILayoutInformationStatics* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* GetLayoutExceptionElement)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CILayoutInformationStatics* This,
        IInspectable* dispatcher,
        __x_ABI_CMicrosoft_CUI_CXaml_CIUIElement** result);
    HRESULT (STDMETHODCALLTYPE* GetLayoutSlot)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CILayoutInformationStatics* This,
        __x_ABI_CMicrosoft_CUI_CXaml_CIFrameworkElement* element,
        struct __x_ABI_CWindows_CFoundation_CRect* result);
    HRESULT (STDMETHODCALLTYPE* GetAvailableSize)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CILayoutInformationStatics* This,
        __x_ABI_CMicrosoft_CUI_CXaml_CIUIElement* element,
        struct __x_ABI_CWindows_CFoundation_CSize* result);

        END_INTERFACE
    } __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CILayoutInformationStaticsVtbl;

    interface __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CILayoutInformationStatics
    {
        CONST_VTBL struct __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CILayoutInformationStaticsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CILayoutInformationStatics;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CILayoutInformationStatics_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIListViewItemPresenter_INTERFACE_DEFINED__)
    #define ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIListViewItemPresenter_INTERFACE_DEFINED__
    typedef struct __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIListViewItemPresenterVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIListViewItemPresenter* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIListViewItemPresenter* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIListViewItemPresenter* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIListViewItemPresenter* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIListViewItemPresenter* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIListViewItemPresenter* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_SelectionCheckMarkVisualEnabled)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIListViewItemPresenter* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* put_SelectionCheckMarkVisualEnabled)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIListViewItemPresenter* This,
        boolean value);
    HRESULT (STDMETHODCALLTYPE* get_CheckHintBrush)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIListViewItemPresenter* This,
        __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIBrush** value);
    HRESULT (STDMETHODCALLTYPE* put_CheckHintBrush)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIListViewItemPresenter* This,
        __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIBrush* value);
    HRESULT (STDMETHODCALLTYPE* get_CheckSelectingBrush)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIListViewItemPresenter* This,
        __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIBrush** value);
    HRESULT (STDMETHODCALLTYPE* put_CheckSelectingBrush)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIListViewItemPresenter* This,
        __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIBrush* value);
    HRESULT (STDMETHODCALLTYPE* get_CheckBrush)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIListViewItemPresenter* This,
        __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIBrush** value);
    HRESULT (STDMETHODCALLTYPE* put_CheckBrush)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIListViewItemPresenter* This,
        __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIBrush* value);
    HRESULT (STDMETHODCALLTYPE* get_DragBackground)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIListViewItemPresenter* This,
        __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIBrush** value);
    HRESULT (STDMETHODCALLTYPE* put_DragBackground)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIListViewItemPresenter* This,
        __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIBrush* value);
    HRESULT (STDMETHODCALLTYPE* get_DragForeground)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIListViewItemPresenter* This,
        __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIBrush** value);
    HRESULT (STDMETHODCALLTYPE* put_DragForeground)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIListViewItemPresenter* This,
        __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIBrush* value);
    HRESULT (STDMETHODCALLTYPE* get_FocusBorderBrush)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIListViewItemPresenter* This,
        __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIBrush** value);
    HRESULT (STDMETHODCALLTYPE* put_FocusBorderBrush)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIListViewItemPresenter* This,
        __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIBrush* value);
    HRESULT (STDMETHODCALLTYPE* get_PlaceholderBackground)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIListViewItemPresenter* This,
        __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIBrush** value);
    HRESULT (STDMETHODCALLTYPE* put_PlaceholderBackground)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIListViewItemPresenter* This,
        __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIBrush* value);
    HRESULT (STDMETHODCALLTYPE* get_PointerOverBackground)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIListViewItemPresenter* This,
        __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIBrush** value);
    HRESULT (STDMETHODCALLTYPE* put_PointerOverBackground)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIListViewItemPresenter* This,
        __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIBrush* value);
    HRESULT (STDMETHODCALLTYPE* get_SelectedBackground)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIListViewItemPresenter* This,
        __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIBrush** value);
    HRESULT (STDMETHODCALLTYPE* put_SelectedBackground)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIListViewItemPresenter* This,
        __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIBrush* value);
    HRESULT (STDMETHODCALLTYPE* get_SelectedForeground)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIListViewItemPresenter* This,
        __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIBrush** value);
    HRESULT (STDMETHODCALLTYPE* put_SelectedForeground)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIListViewItemPresenter* This,
        __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIBrush* value);
    HRESULT (STDMETHODCALLTYPE* get_SelectedPointerOverBackground)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIListViewItemPresenter* This,
        __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIBrush** value);
    HRESULT (STDMETHODCALLTYPE* put_SelectedPointerOverBackground)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIListViewItemPresenter* This,
        __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIBrush* value);
    HRESULT (STDMETHODCALLTYPE* get_SelectedPointerOverBorderBrush)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIListViewItemPresenter* This,
        __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIBrush** value);
    HRESULT (STDMETHODCALLTYPE* put_SelectedPointerOverBorderBrush)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIListViewItemPresenter* This,
        __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIBrush* value);
    HRESULT (STDMETHODCALLTYPE* get_SelectedBorderThickness)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIListViewItemPresenter* This,
        struct __x_ABI_CMicrosoft_CUI_CXaml_CThickness* value);
    HRESULT (STDMETHODCALLTYPE* put_SelectedBorderThickness)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIListViewItemPresenter* This,
        struct __x_ABI_CMicrosoft_CUI_CXaml_CThickness value);
    HRESULT (STDMETHODCALLTYPE* get_DisabledOpacity)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIListViewItemPresenter* This,
        DOUBLE* value);
    HRESULT (STDMETHODCALLTYPE* put_DisabledOpacity)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIListViewItemPresenter* This,
        DOUBLE value);
    HRESULT (STDMETHODCALLTYPE* get_DragOpacity)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIListViewItemPresenter* This,
        DOUBLE* value);
    HRESULT (STDMETHODCALLTYPE* put_DragOpacity)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIListViewItemPresenter* This,
        DOUBLE value);
    HRESULT (STDMETHODCALLTYPE* get_ReorderHintOffset)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIListViewItemPresenter* This,
        DOUBLE* value);
    HRESULT (STDMETHODCALLTYPE* put_ReorderHintOffset)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIListViewItemPresenter* This,
        DOUBLE value);
    HRESULT (STDMETHODCALLTYPE* get_ListViewItemPresenterHorizontalContentAlignment)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIListViewItemPresenter* This,
        enum __x_ABI_CMicrosoft_CUI_CXaml_CHorizontalAlignment* value);
    HRESULT (STDMETHODCALLTYPE* put_ListViewItemPresenterHorizontalContentAlignment)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIListViewItemPresenter* This,
        enum __x_ABI_CMicrosoft_CUI_CXaml_CHorizontalAlignment value);
    HRESULT (STDMETHODCALLTYPE* get_ListViewItemPresenterVerticalContentAlignment)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIListViewItemPresenter* This,
        enum __x_ABI_CMicrosoft_CUI_CXaml_CVerticalAlignment* value);
    HRESULT (STDMETHODCALLTYPE* put_ListViewItemPresenterVerticalContentAlignment)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIListViewItemPresenter* This,
        enum __x_ABI_CMicrosoft_CUI_CXaml_CVerticalAlignment value);
    HRESULT (STDMETHODCALLTYPE* get_ListViewItemPresenterPadding)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIListViewItemPresenter* This,
        struct __x_ABI_CMicrosoft_CUI_CXaml_CThickness* value);
    HRESULT (STDMETHODCALLTYPE* put_ListViewItemPresenterPadding)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIListViewItemPresenter* This,
        struct __x_ABI_CMicrosoft_CUI_CXaml_CThickness value);
    HRESULT (STDMETHODCALLTYPE* get_PointerOverBackgroundMargin)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIListViewItemPresenter* This,
        struct __x_ABI_CMicrosoft_CUI_CXaml_CThickness* value);
    HRESULT (STDMETHODCALLTYPE* put_PointerOverBackgroundMargin)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIListViewItemPresenter* This,
        struct __x_ABI_CMicrosoft_CUI_CXaml_CThickness value);
    HRESULT (STDMETHODCALLTYPE* get_ContentMargin)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIListViewItemPresenter* This,
        struct __x_ABI_CMicrosoft_CUI_CXaml_CThickness* value);
    HRESULT (STDMETHODCALLTYPE* put_ContentMargin)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIListViewItemPresenter* This,
        struct __x_ABI_CMicrosoft_CUI_CXaml_CThickness value);
    HRESULT (STDMETHODCALLTYPE* get_SelectedPressedBackground)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIListViewItemPresenter* This,
        __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIBrush** value);
    HRESULT (STDMETHODCALLTYPE* put_SelectedPressedBackground)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIListViewItemPresenter* This,
        __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIBrush* value);
    HRESULT (STDMETHODCALLTYPE* get_PressedBackground)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIListViewItemPresenter* This,
        __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIBrush** value);
    HRESULT (STDMETHODCALLTYPE* put_PressedBackground)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIListViewItemPresenter* This,
        __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIBrush* value);
    HRESULT (STDMETHODCALLTYPE* get_CheckBoxBrush)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIListViewItemPresenter* This,
        __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIBrush** value);
    HRESULT (STDMETHODCALLTYPE* put_CheckBoxBrush)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIListViewItemPresenter* This,
        __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIBrush* value);
    HRESULT (STDMETHODCALLTYPE* get_FocusSecondaryBorderBrush)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIListViewItemPresenter* This,
        __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIBrush** value);
    HRESULT (STDMETHODCALLTYPE* put_FocusSecondaryBorderBrush)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIListViewItemPresenter* This,
        __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIBrush* value);
    HRESULT (STDMETHODCALLTYPE* get_CheckMode)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIListViewItemPresenter* This,
        enum __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CListViewItemPresenterCheckMode* value);
    HRESULT (STDMETHODCALLTYPE* put_CheckMode)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIListViewItemPresenter* This,
        enum __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CListViewItemPresenterCheckMode value);
    HRESULT (STDMETHODCALLTYPE* get_PointerOverForeground)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIListViewItemPresenter* This,
        __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIBrush** value);
    HRESULT (STDMETHODCALLTYPE* put_PointerOverForeground)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIListViewItemPresenter* This,
        __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIBrush* value);
    HRESULT (STDMETHODCALLTYPE* get_RevealBackground)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIListViewItemPresenter* This,
        __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIBrush** value);
    HRESULT (STDMETHODCALLTYPE* put_RevealBackground)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIListViewItemPresenter* This,
        __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIBrush* value);
    HRESULT (STDMETHODCALLTYPE* get_RevealBorderBrush)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIListViewItemPresenter* This,
        __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIBrush** value);
    HRESULT (STDMETHODCALLTYPE* put_RevealBorderBrush)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIListViewItemPresenter* This,
        __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIBrush* value);
    HRESULT (STDMETHODCALLTYPE* get_RevealBorderThickness)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIListViewItemPresenter* This,
        struct __x_ABI_CMicrosoft_CUI_CXaml_CThickness* value);
    HRESULT (STDMETHODCALLTYPE* put_RevealBorderThickness)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIListViewItemPresenter* This,
        struct __x_ABI_CMicrosoft_CUI_CXaml_CThickness value);
    HRESULT (STDMETHODCALLTYPE* get_RevealBackgroundShowsAboveContent)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIListViewItemPresenter* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* put_RevealBackgroundShowsAboveContent)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIListViewItemPresenter* This,
        boolean value);
    HRESULT (STDMETHODCALLTYPE* get_SelectedDisabledBackground)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIListViewItemPresenter* This,
        __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIBrush** value);
    HRESULT (STDMETHODCALLTYPE* put_SelectedDisabledBackground)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIListViewItemPresenter* This,
        __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIBrush* value);
    HRESULT (STDMETHODCALLTYPE* get_CheckPressedBrush)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIListViewItemPresenter* This,
        __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIBrush** value);
    HRESULT (STDMETHODCALLTYPE* put_CheckPressedBrush)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIListViewItemPresenter* This,
        __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIBrush* value);
    HRESULT (STDMETHODCALLTYPE* get_CheckDisabledBrush)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIListViewItemPresenter* This,
        __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIBrush** value);
    HRESULT (STDMETHODCALLTYPE* put_CheckDisabledBrush)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIListViewItemPresenter* This,
        __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIBrush* value);
    HRESULT (STDMETHODCALLTYPE* get_CheckBoxPointerOverBrush)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIListViewItemPresenter* This,
        __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIBrush** value);
    HRESULT (STDMETHODCALLTYPE* put_CheckBoxPointerOverBrush)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIListViewItemPresenter* This,
        __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIBrush* value);
    HRESULT (STDMETHODCALLTYPE* get_CheckBoxPressedBrush)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIListViewItemPresenter* This,
        __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIBrush** value);
    HRESULT (STDMETHODCALLTYPE* put_CheckBoxPressedBrush)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIListViewItemPresenter* This,
        __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIBrush* value);
    HRESULT (STDMETHODCALLTYPE* get_CheckBoxDisabledBrush)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIListViewItemPresenter* This,
        __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIBrush** value);
    HRESULT (STDMETHODCALLTYPE* put_CheckBoxDisabledBrush)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIListViewItemPresenter* This,
        __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIBrush* value);
    HRESULT (STDMETHODCALLTYPE* get_CheckBoxSelectedBrush)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIListViewItemPresenter* This,
        __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIBrush** value);
    HRESULT (STDMETHODCALLTYPE* put_CheckBoxSelectedBrush)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIListViewItemPresenter* This,
        __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIBrush* value);
    HRESULT (STDMETHODCALLTYPE* get_CheckBoxSelectedPointerOverBrush)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIListViewItemPresenter* This,
        __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIBrush** value);
    HRESULT (STDMETHODCALLTYPE* put_CheckBoxSelectedPointerOverBrush)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIListViewItemPresenter* This,
        __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIBrush* value);
    HRESULT (STDMETHODCALLTYPE* get_CheckBoxSelectedPressedBrush)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIListViewItemPresenter* This,
        __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIBrush** value);
    HRESULT (STDMETHODCALLTYPE* put_CheckBoxSelectedPressedBrush)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIListViewItemPresenter* This,
        __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIBrush* value);
    HRESULT (STDMETHODCALLTYPE* get_CheckBoxSelectedDisabledBrush)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIListViewItemPresenter* This,
        __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIBrush** value);
    HRESULT (STDMETHODCALLTYPE* put_CheckBoxSelectedDisabledBrush)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIListViewItemPresenter* This,
        __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIBrush* value);
    HRESULT (STDMETHODCALLTYPE* get_CheckBoxBorderBrush)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIListViewItemPresenter* This,
        __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIBrush** value);
    HRESULT (STDMETHODCALLTYPE* put_CheckBoxBorderBrush)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIListViewItemPresenter* This,
        __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIBrush* value);
    HRESULT (STDMETHODCALLTYPE* get_CheckBoxPointerOverBorderBrush)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIListViewItemPresenter* This,
        __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIBrush** value);
    HRESULT (STDMETHODCALLTYPE* put_CheckBoxPointerOverBorderBrush)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIListViewItemPresenter* This,
        __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIBrush* value);
    HRESULT (STDMETHODCALLTYPE* get_CheckBoxPressedBorderBrush)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIListViewItemPresenter* This,
        __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIBrush** value);
    HRESULT (STDMETHODCALLTYPE* put_CheckBoxPressedBorderBrush)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIListViewItemPresenter* This,
        __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIBrush* value);
    HRESULT (STDMETHODCALLTYPE* get_CheckBoxDisabledBorderBrush)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIListViewItemPresenter* This,
        __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIBrush** value);
    HRESULT (STDMETHODCALLTYPE* put_CheckBoxDisabledBorderBrush)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIListViewItemPresenter* This,
        __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIBrush* value);
    HRESULT (STDMETHODCALLTYPE* get_CheckBoxCornerRadius)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIListViewItemPresenter* This,
        struct __x_ABI_CMicrosoft_CUI_CXaml_CCornerRadius* value);
    HRESULT (STDMETHODCALLTYPE* put_CheckBoxCornerRadius)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIListViewItemPresenter* This,
        struct __x_ABI_CMicrosoft_CUI_CXaml_CCornerRadius value);
    HRESULT (STDMETHODCALLTYPE* get_SelectionIndicatorCornerRadius)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIListViewItemPresenter* This,
        struct __x_ABI_CMicrosoft_CUI_CXaml_CCornerRadius* value);
    HRESULT (STDMETHODCALLTYPE* put_SelectionIndicatorCornerRadius)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIListViewItemPresenter* This,
        struct __x_ABI_CMicrosoft_CUI_CXaml_CCornerRadius value);
    HRESULT (STDMETHODCALLTYPE* get_SelectionIndicatorVisualEnabled)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIListViewItemPresenter* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* put_SelectionIndicatorVisualEnabled)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIListViewItemPresenter* This,
        boolean value);
    HRESULT (STDMETHODCALLTYPE* get_SelectionIndicatorMode)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIListViewItemPresenter* This,
        enum __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CListViewItemPresenterSelectionIndicatorMode* value);
    HRESULT (STDMETHODCALLTYPE* put_SelectionIndicatorMode)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIListViewItemPresenter* This,
        enum __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CListViewItemPresenterSelectionIndicatorMode value);
    HRESULT (STDMETHODCALLTYPE* get_SelectionIndicatorBrush)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIListViewItemPresenter* This,
        __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIBrush** value);
    HRESULT (STDMETHODCALLTYPE* put_SelectionIndicatorBrush)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIListViewItemPresenter* This,
        __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIBrush* value);
    HRESULT (STDMETHODCALLTYPE* get_SelectionIndicatorPointerOverBrush)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIListViewItemPresenter* This,
        __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIBrush** value);
    HRESULT (STDMETHODCALLTYPE* put_SelectionIndicatorPointerOverBrush)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIListViewItemPresenter* This,
        __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIBrush* value);
    HRESULT (STDMETHODCALLTYPE* get_SelectionIndicatorPressedBrush)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIListViewItemPresenter* This,
        __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIBrush** value);
    HRESULT (STDMETHODCALLTYPE* put_SelectionIndicatorPressedBrush)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIListViewItemPresenter* This,
        __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIBrush* value);
    HRESULT (STDMETHODCALLTYPE* get_SelectionIndicatorDisabledBrush)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIListViewItemPresenter* This,
        __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIBrush** value);
    HRESULT (STDMETHODCALLTYPE* put_SelectionIndicatorDisabledBrush)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIListViewItemPresenter* This,
        __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIBrush* value);
    HRESULT (STDMETHODCALLTYPE* get_SelectedBorderBrush)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIListViewItemPresenter* This,
        __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIBrush** value);
    HRESULT (STDMETHODCALLTYPE* put_SelectedBorderBrush)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIListViewItemPresenter* This,
        __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIBrush* value);
    HRESULT (STDMETHODCALLTYPE* get_SelectedPressedBorderBrush)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIListViewItemPresenter* This,
        __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIBrush** value);
    HRESULT (STDMETHODCALLTYPE* put_SelectedPressedBorderBrush)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIListViewItemPresenter* This,
        __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIBrush* value);
    HRESULT (STDMETHODCALLTYPE* get_SelectedDisabledBorderBrush)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIListViewItemPresenter* This,
        __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIBrush** value);
    HRESULT (STDMETHODCALLTYPE* put_SelectedDisabledBorderBrush)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIListViewItemPresenter* This,
        __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIBrush* value);
    HRESULT (STDMETHODCALLTYPE* get_SelectedInnerBorderBrush)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIListViewItemPresenter* This,
        __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIBrush** value);
    HRESULT (STDMETHODCALLTYPE* put_SelectedInnerBorderBrush)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIListViewItemPresenter* This,
        __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIBrush* value);
    HRESULT (STDMETHODCALLTYPE* get_PointerOverBorderBrush)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIListViewItemPresenter* This,
        __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIBrush** value);
    HRESULT (STDMETHODCALLTYPE* put_PointerOverBorderBrush)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIListViewItemPresenter* This,
        __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIBrush* value);

        END_INTERFACE
    } __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIListViewItemPresenterVtbl;

    interface __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIListViewItemPresenter
    {
        CONST_VTBL struct __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIListViewItemPresenterVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIListViewItemPresenter;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIListViewItemPresenter_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIListViewItemPresenterFactory_INTERFACE_DEFINED__)
    #define ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIListViewItemPresenterFactory_INTERFACE_DEFINED__
    typedef struct __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIListViewItemPresenterFactoryVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIListViewItemPresenterFactory* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIListViewItemPresenterFactory* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIListViewItemPresenterFactory* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIListViewItemPresenterFactory* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIListViewItemPresenterFactory* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIListViewItemPresenterFactory* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* CreateInstance)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIListViewItemPresenterFactory* This,
        IInspectable* baseInterface,
        IInspectable** innerInterface,
        __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIListViewItemPresenter** value);

        END_INTERFACE
    } __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIListViewItemPresenterFactoryVtbl;

    interface __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIListViewItemPresenterFactory
    {
        CONST_VTBL struct __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIListViewItemPresenterFactoryVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIListViewItemPresenterFactory;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIListViewItemPresenterFactory_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIListViewItemPresenterStatics_INTERFACE_DEFINED__)
    #define ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIListViewItemPresenterStatics_INTERFACE_DEFINED__
    typedef struct __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIListViewItemPresenterStaticsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIListViewItemPresenterStatics* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIListViewItemPresenterStatics* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIListViewItemPresenterStatics* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIListViewItemPresenterStatics* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIListViewItemPresenterStatics* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIListViewItemPresenterStatics* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_SelectionCheckMarkVisualEnabledProperty)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIListViewItemPresenterStatics* This,
        __x_ABI_CMicrosoft_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_CheckHintBrushProperty)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIListViewItemPresenterStatics* This,
        __x_ABI_CMicrosoft_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_CheckSelectingBrushProperty)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIListViewItemPresenterStatics* This,
        __x_ABI_CMicrosoft_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_CheckBrushProperty)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIListViewItemPresenterStatics* This,
        __x_ABI_CMicrosoft_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_DragBackgroundProperty)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIListViewItemPresenterStatics* This,
        __x_ABI_CMicrosoft_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_DragForegroundProperty)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIListViewItemPresenterStatics* This,
        __x_ABI_CMicrosoft_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_FocusBorderBrushProperty)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIListViewItemPresenterStatics* This,
        __x_ABI_CMicrosoft_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_PlaceholderBackgroundProperty)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIListViewItemPresenterStatics* This,
        __x_ABI_CMicrosoft_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_PointerOverBackgroundProperty)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIListViewItemPresenterStatics* This,
        __x_ABI_CMicrosoft_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_SelectedBackgroundProperty)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIListViewItemPresenterStatics* This,
        __x_ABI_CMicrosoft_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_SelectedForegroundProperty)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIListViewItemPresenterStatics* This,
        __x_ABI_CMicrosoft_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_SelectedPointerOverBackgroundProperty)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIListViewItemPresenterStatics* This,
        __x_ABI_CMicrosoft_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_SelectedPointerOverBorderBrushProperty)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIListViewItemPresenterStatics* This,
        __x_ABI_CMicrosoft_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_SelectedBorderThicknessProperty)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIListViewItemPresenterStatics* This,
        __x_ABI_CMicrosoft_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_DisabledOpacityProperty)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIListViewItemPresenterStatics* This,
        __x_ABI_CMicrosoft_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_DragOpacityProperty)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIListViewItemPresenterStatics* This,
        __x_ABI_CMicrosoft_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_ReorderHintOffsetProperty)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIListViewItemPresenterStatics* This,
        __x_ABI_CMicrosoft_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_ListViewItemPresenterHorizontalContentAlignmentProperty)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIListViewItemPresenterStatics* This,
        __x_ABI_CMicrosoft_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_ListViewItemPresenterVerticalContentAlignmentProperty)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIListViewItemPresenterStatics* This,
        __x_ABI_CMicrosoft_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_ListViewItemPresenterPaddingProperty)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIListViewItemPresenterStatics* This,
        __x_ABI_CMicrosoft_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_PointerOverBackgroundMarginProperty)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIListViewItemPresenterStatics* This,
        __x_ABI_CMicrosoft_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_ContentMarginProperty)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIListViewItemPresenterStatics* This,
        __x_ABI_CMicrosoft_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_SelectedPressedBackgroundProperty)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIListViewItemPresenterStatics* This,
        __x_ABI_CMicrosoft_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_PressedBackgroundProperty)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIListViewItemPresenterStatics* This,
        __x_ABI_CMicrosoft_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_CheckBoxBrushProperty)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIListViewItemPresenterStatics* This,
        __x_ABI_CMicrosoft_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_FocusSecondaryBorderBrushProperty)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIListViewItemPresenterStatics* This,
        __x_ABI_CMicrosoft_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_CheckModeProperty)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIListViewItemPresenterStatics* This,
        __x_ABI_CMicrosoft_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_PointerOverForegroundProperty)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIListViewItemPresenterStatics* This,
        __x_ABI_CMicrosoft_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_RevealBackgroundProperty)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIListViewItemPresenterStatics* This,
        __x_ABI_CMicrosoft_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_RevealBorderBrushProperty)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIListViewItemPresenterStatics* This,
        __x_ABI_CMicrosoft_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_RevealBorderThicknessProperty)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIListViewItemPresenterStatics* This,
        __x_ABI_CMicrosoft_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_RevealBackgroundShowsAboveContentProperty)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIListViewItemPresenterStatics* This,
        __x_ABI_CMicrosoft_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_SelectedDisabledBackgroundProperty)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIListViewItemPresenterStatics* This,
        __x_ABI_CMicrosoft_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_CheckPressedBrushProperty)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIListViewItemPresenterStatics* This,
        __x_ABI_CMicrosoft_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_CheckDisabledBrushProperty)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIListViewItemPresenterStatics* This,
        __x_ABI_CMicrosoft_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_CheckBoxPointerOverBrushProperty)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIListViewItemPresenterStatics* This,
        __x_ABI_CMicrosoft_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_CheckBoxPressedBrushProperty)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIListViewItemPresenterStatics* This,
        __x_ABI_CMicrosoft_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_CheckBoxDisabledBrushProperty)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIListViewItemPresenterStatics* This,
        __x_ABI_CMicrosoft_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_CheckBoxSelectedBrushProperty)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIListViewItemPresenterStatics* This,
        __x_ABI_CMicrosoft_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_CheckBoxSelectedPointerOverBrushProperty)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIListViewItemPresenterStatics* This,
        __x_ABI_CMicrosoft_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_CheckBoxSelectedPressedBrushProperty)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIListViewItemPresenterStatics* This,
        __x_ABI_CMicrosoft_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_CheckBoxSelectedDisabledBrushProperty)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIListViewItemPresenterStatics* This,
        __x_ABI_CMicrosoft_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_CheckBoxBorderBrushProperty)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIListViewItemPresenterStatics* This,
        __x_ABI_CMicrosoft_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_CheckBoxPointerOverBorderBrushProperty)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIListViewItemPresenterStatics* This,
        __x_ABI_CMicrosoft_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_CheckBoxPressedBorderBrushProperty)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIListViewItemPresenterStatics* This,
        __x_ABI_CMicrosoft_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_CheckBoxDisabledBorderBrushProperty)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIListViewItemPresenterStatics* This,
        __x_ABI_CMicrosoft_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_CheckBoxCornerRadiusProperty)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIListViewItemPresenterStatics* This,
        __x_ABI_CMicrosoft_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_SelectionIndicatorCornerRadiusProperty)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIListViewItemPresenterStatics* This,
        __x_ABI_CMicrosoft_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_SelectionIndicatorVisualEnabledProperty)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIListViewItemPresenterStatics* This,
        __x_ABI_CMicrosoft_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_SelectionIndicatorModeProperty)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIListViewItemPresenterStatics* This,
        __x_ABI_CMicrosoft_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_SelectionIndicatorBrushProperty)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIListViewItemPresenterStatics* This,
        __x_ABI_CMicrosoft_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_SelectionIndicatorPointerOverBrushProperty)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIListViewItemPresenterStatics* This,
        __x_ABI_CMicrosoft_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_SelectionIndicatorPressedBrushProperty)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIListViewItemPresenterStatics* This,
        __x_ABI_CMicrosoft_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_SelectionIndicatorDisabledBrushProperty)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIListViewItemPresenterStatics* This,
        __x_ABI_CMicrosoft_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_SelectedBorderBrushProperty)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIListViewItemPresenterStatics* This,
        __x_ABI_CMicrosoft_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_SelectedPressedBorderBrushProperty)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIListViewItemPresenterStatics* This,
        __x_ABI_CMicrosoft_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_SelectedDisabledBorderBrushProperty)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIListViewItemPresenterStatics* This,
        __x_ABI_CMicrosoft_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_SelectedInnerBorderBrushProperty)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIListViewItemPresenterStatics* This,
        __x_ABI_CMicrosoft_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_PointerOverBorderBrushProperty)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIListViewItemPresenterStatics* This,
        __x_ABI_CMicrosoft_CUI_CXaml_CIDependencyProperty** value);

        END_INTERFACE
    } __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIListViewItemPresenterStaticsVtbl;

    interface __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIListViewItemPresenterStatics
    {
        CONST_VTBL struct __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIListViewItemPresenterStaticsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIListViewItemPresenterStatics;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIListViewItemPresenterStatics_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIListViewItemTemplateSettings_INTERFACE_DEFINED__)
    #define ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIListViewItemTemplateSettings_INTERFACE_DEFINED__
    typedef struct __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIListViewItemTemplateSettingsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIListViewItemTemplateSettings* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIListViewItemTemplateSettings* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIListViewItemTemplateSettings* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIListViewItemTemplateSettings* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIListViewItemTemplateSettings* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIListViewItemTemplateSettings* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_DragItemsCount)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIListViewItemTemplateSettings* This,
        INT32* value);

        END_INTERFACE
    } __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIListViewItemTemplateSettingsVtbl;

    interface __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIListViewItemTemplateSettings
    {
        CONST_VTBL struct __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIListViewItemTemplateSettingsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIListViewItemTemplateSettings;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIListViewItemTemplateSettings_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CILoopingSelector_INTERFACE_DEFINED__)
    #define ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CILoopingSelector_INTERFACE_DEFINED__
    typedef struct __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CILoopingSelectorVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CILoopingSelector* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CILoopingSelector* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CILoopingSelector* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CILoopingSelector* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CILoopingSelector* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CILoopingSelector* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_ShouldLoop)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CILoopingSelector* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* put_ShouldLoop)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CILoopingSelector* This,
        boolean value);
    HRESULT (STDMETHODCALLTYPE* get_Items)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CILoopingSelector* This,
        __x_ABI_C__FIVector_1_IInspectable** value);
    HRESULT (STDMETHODCALLTYPE* put_Items)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CILoopingSelector* This,
        __x_ABI_C__FIVector_1_IInspectable* value);
    HRESULT (STDMETHODCALLTYPE* get_SelectedIndex)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CILoopingSelector* This,
        INT32* value);
    HRESULT (STDMETHODCALLTYPE* put_SelectedIndex)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CILoopingSelector* This,
        INT32 value);
    HRESULT (STDMETHODCALLTYPE* get_SelectedItem)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CILoopingSelector* This,
        IInspectable** value);
    HRESULT (STDMETHODCALLTYPE* put_SelectedItem)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CILoopingSelector* This,
        IInspectable* value);
    HRESULT (STDMETHODCALLTYPE* get_ItemWidth)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CILoopingSelector* This,
        INT32* value);
    HRESULT (STDMETHODCALLTYPE* put_ItemWidth)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CILoopingSelector* This,
        INT32 value);
    HRESULT (STDMETHODCALLTYPE* get_ItemHeight)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CILoopingSelector* This,
        INT32* value);
    HRESULT (STDMETHODCALLTYPE* put_ItemHeight)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CILoopingSelector* This,
        INT32 value);
    HRESULT (STDMETHODCALLTYPE* get_ItemTemplate)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CILoopingSelector* This,
        __x_ABI_CMicrosoft_CUI_CXaml_CIDataTemplate** value);
    HRESULT (STDMETHODCALLTYPE* put_ItemTemplate)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CILoopingSelector* This,
        __x_ABI_CMicrosoft_CUI_CXaml_CIDataTemplate* value);
    HRESULT (STDMETHODCALLTYPE* add_SelectionChanged)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CILoopingSelector* This,
        __x_ABI_CMicrosoft_CUI_CXaml_CControls_CISelectionChangedEventHandler* handler,
        EventRegistrationToken* token);
    HRESULT (STDMETHODCALLTYPE* remove_SelectionChanged)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CILoopingSelector* This,
        EventRegistrationToken token);

        END_INTERFACE
    } __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CILoopingSelectorVtbl;

    interface __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CILoopingSelector
    {
        CONST_VTBL struct __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CILoopingSelectorVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CILoopingSelector;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CILoopingSelector_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CILoopingSelectorItem_INTERFACE_DEFINED__)
    #define ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CILoopingSelectorItem_INTERFACE_DEFINED__
    typedef struct __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CILoopingSelectorItemVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CILoopingSelectorItem* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CILoopingSelectorItem* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CILoopingSelectorItem* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CILoopingSelectorItem* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CILoopingSelectorItem* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CILoopingSelectorItem* This,
            TrustLevel* trustLevel);
    
        END_INTERFACE
    } __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CILoopingSelectorItemVtbl;

    interface __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CILoopingSelectorItem
    {
        CONST_VTBL struct __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CILoopingSelectorItemVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CILoopingSelectorItem;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CILoopingSelectorItem_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CILoopingSelectorPanel_INTERFACE_DEFINED__)
    #define ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CILoopingSelectorPanel_INTERFACE_DEFINED__
    typedef struct __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CILoopingSelectorPanelVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CILoopingSelectorPanel* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CILoopingSelectorPanel* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CILoopingSelectorPanel* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CILoopingSelectorPanel* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CILoopingSelectorPanel* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CILoopingSelectorPanel* This,
            TrustLevel* trustLevel);
    
        END_INTERFACE
    } __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CILoopingSelectorPanelVtbl;

    interface __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CILoopingSelectorPanel
    {
        CONST_VTBL struct __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CILoopingSelectorPanelVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CILoopingSelectorPanel;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CILoopingSelectorPanel_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CILoopingSelectorStatics_INTERFACE_DEFINED__)
    #define ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CILoopingSelectorStatics_INTERFACE_DEFINED__
    typedef struct __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CILoopingSelectorStaticsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CILoopingSelectorStatics* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CILoopingSelectorStatics* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CILoopingSelectorStatics* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CILoopingSelectorStatics* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CILoopingSelectorStatics* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CILoopingSelectorStatics* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_ShouldLoopProperty)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CILoopingSelectorStatics* This,
        __x_ABI_CMicrosoft_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_ItemsProperty)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CILoopingSelectorStatics* This,
        __x_ABI_CMicrosoft_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_SelectedIndexProperty)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CILoopingSelectorStatics* This,
        __x_ABI_CMicrosoft_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_SelectedItemProperty)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CILoopingSelectorStatics* This,
        __x_ABI_CMicrosoft_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_ItemWidthProperty)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CILoopingSelectorStatics* This,
        __x_ABI_CMicrosoft_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_ItemHeightProperty)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CILoopingSelectorStatics* This,
        __x_ABI_CMicrosoft_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_ItemTemplateProperty)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CILoopingSelectorStatics* This,
        __x_ABI_CMicrosoft_CUI_CXaml_CIDependencyProperty** value);

        END_INTERFACE
    } __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CILoopingSelectorStaticsVtbl;

    interface __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CILoopingSelectorStatics
    {
        CONST_VTBL struct __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CILoopingSelectorStaticsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CILoopingSelectorStatics;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CILoopingSelectorStatics_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIMenuFlyoutItemTemplateSettings_INTERFACE_DEFINED__)
    #define ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIMenuFlyoutItemTemplateSettings_INTERFACE_DEFINED__
    typedef struct __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIMenuFlyoutItemTemplateSettingsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIMenuFlyoutItemTemplateSettings* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIMenuFlyoutItemTemplateSettings* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIMenuFlyoutItemTemplateSettings* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIMenuFlyoutItemTemplateSettings* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIMenuFlyoutItemTemplateSettings* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIMenuFlyoutItemTemplateSettings* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_KeyboardAcceleratorTextMinWidth)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIMenuFlyoutItemTemplateSettings* This,
        DOUBLE* value);

        END_INTERFACE
    } __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIMenuFlyoutItemTemplateSettingsVtbl;

    interface __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIMenuFlyoutItemTemplateSettings
    {
        CONST_VTBL struct __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIMenuFlyoutItemTemplateSettingsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIMenuFlyoutItemTemplateSettings;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIMenuFlyoutItemTemplateSettings_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIMenuFlyoutPresenterTemplateSettings_INTERFACE_DEFINED__)
    #define ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIMenuFlyoutPresenterTemplateSettings_INTERFACE_DEFINED__
    typedef struct __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIMenuFlyoutPresenterTemplateSettingsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIMenuFlyoutPresenterTemplateSettings* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIMenuFlyoutPresenterTemplateSettings* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIMenuFlyoutPresenterTemplateSettings* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIMenuFlyoutPresenterTemplateSettings* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIMenuFlyoutPresenterTemplateSettings* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIMenuFlyoutPresenterTemplateSettings* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_FlyoutContentMinWidth)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIMenuFlyoutPresenterTemplateSettings* This,
        DOUBLE* value);

        END_INTERFACE
    } __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIMenuFlyoutPresenterTemplateSettingsVtbl;

    interface __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIMenuFlyoutPresenterTemplateSettings
    {
        CONST_VTBL struct __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIMenuFlyoutPresenterTemplateSettingsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIMenuFlyoutPresenterTemplateSettings;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIMenuFlyoutPresenterTemplateSettings_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIMonochromaticOverlayPresenter_INTERFACE_DEFINED__)
    #define ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIMonochromaticOverlayPresenter_INTERFACE_DEFINED__
    typedef struct __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIMonochromaticOverlayPresenterVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIMonochromaticOverlayPresenter* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIMonochromaticOverlayPresenter* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIMonochromaticOverlayPresenter* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIMonochromaticOverlayPresenter* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIMonochromaticOverlayPresenter* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIMonochromaticOverlayPresenter* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_SourceElement)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIMonochromaticOverlayPresenter* This,
        __x_ABI_CMicrosoft_CUI_CXaml_CIUIElement** value);
    HRESULT (STDMETHODCALLTYPE* put_SourceElement)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIMonochromaticOverlayPresenter* This,
        __x_ABI_CMicrosoft_CUI_CXaml_CIUIElement* value);
    HRESULT (STDMETHODCALLTYPE* get_ReplacementColor)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIMonochromaticOverlayPresenter* This,
        struct __x_ABI_CWindows_CUI_CColor* value);
    HRESULT (STDMETHODCALLTYPE* put_ReplacementColor)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIMonochromaticOverlayPresenter* This,
        struct __x_ABI_CWindows_CUI_CColor value);

        END_INTERFACE
    } __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIMonochromaticOverlayPresenterVtbl;

    interface __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIMonochromaticOverlayPresenter
    {
        CONST_VTBL struct __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIMonochromaticOverlayPresenterVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIMonochromaticOverlayPresenter;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIMonochromaticOverlayPresenter_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIMonochromaticOverlayPresenterFactory_INTERFACE_DEFINED__)
    #define ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIMonochromaticOverlayPresenterFactory_INTERFACE_DEFINED__
    typedef struct __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIMonochromaticOverlayPresenterFactoryVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIMonochromaticOverlayPresenterFactory* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIMonochromaticOverlayPresenterFactory* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIMonochromaticOverlayPresenterFactory* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIMonochromaticOverlayPresenterFactory* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIMonochromaticOverlayPresenterFactory* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIMonochromaticOverlayPresenterFactory* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* CreateInstance)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIMonochromaticOverlayPresenterFactory* This,
        IInspectable* baseInterface,
        IInspectable** innerInterface,
        __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIMonochromaticOverlayPresenter** value);

        END_INTERFACE
    } __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIMonochromaticOverlayPresenterFactoryVtbl;

    interface __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIMonochromaticOverlayPresenterFactory
    {
        CONST_VTBL struct __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIMonochromaticOverlayPresenterFactoryVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIMonochromaticOverlayPresenterFactory;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIMonochromaticOverlayPresenterFactory_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIMonochromaticOverlayPresenterStatics_INTERFACE_DEFINED__)
    #define ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIMonochromaticOverlayPresenterStatics_INTERFACE_DEFINED__
    typedef struct __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIMonochromaticOverlayPresenterStaticsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIMonochromaticOverlayPresenterStatics* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIMonochromaticOverlayPresenterStatics* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIMonochromaticOverlayPresenterStatics* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIMonochromaticOverlayPresenterStatics* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIMonochromaticOverlayPresenterStatics* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIMonochromaticOverlayPresenterStatics* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_SourceElementProperty)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIMonochromaticOverlayPresenterStatics* This,
        __x_ABI_CMicrosoft_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_ReplacementColorProperty)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIMonochromaticOverlayPresenterStatics* This,
        __x_ABI_CMicrosoft_CUI_CXaml_CIDependencyProperty** value);

        END_INTERFACE
    } __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIMonochromaticOverlayPresenterStaticsVtbl;

    interface __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIMonochromaticOverlayPresenterStatics
    {
        CONST_VTBL struct __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIMonochromaticOverlayPresenterStaticsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIMonochromaticOverlayPresenterStatics;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIMonochromaticOverlayPresenterStatics_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CINavigationViewItemPresenter_INTERFACE_DEFINED__)
    #define ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CINavigationViewItemPresenter_INTERFACE_DEFINED__
    typedef struct __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CINavigationViewItemPresenterVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CINavigationViewItemPresenter* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CINavigationViewItemPresenter* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CINavigationViewItemPresenter* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CINavigationViewItemPresenter* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CINavigationViewItemPresenter* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CINavigationViewItemPresenter* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Icon)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CINavigationViewItemPresenter* This,
        __x_ABI_CMicrosoft_CUI_CXaml_CControls_CIIconElement** value);
    HRESULT (STDMETHODCALLTYPE* put_Icon)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CINavigationViewItemPresenter* This,
        __x_ABI_CMicrosoft_CUI_CXaml_CControls_CIIconElement* value);
    HRESULT (STDMETHODCALLTYPE* get_TemplateSettings)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CINavigationViewItemPresenter* This,
        __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CINavigationViewItemPresenterTemplateSettings** value);

        END_INTERFACE
    } __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CINavigationViewItemPresenterVtbl;

    interface __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CINavigationViewItemPresenter
    {
        CONST_VTBL struct __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CINavigationViewItemPresenterVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CINavigationViewItemPresenter;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CINavigationViewItemPresenter_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CINavigationViewItemPresenter2_INTERFACE_DEFINED__)
    #define ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CINavigationViewItemPresenter2_INTERFACE_DEFINED__
    typedef struct __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CINavigationViewItemPresenter2Vtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CINavigationViewItemPresenter2* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CINavigationViewItemPresenter2* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CINavigationViewItemPresenter2* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CINavigationViewItemPresenter2* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CINavigationViewItemPresenter2* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CINavigationViewItemPresenter2* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_InfoBadge)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CINavigationViewItemPresenter2* This,
        __x_ABI_CMicrosoft_CUI_CXaml_CControls_CIInfoBadge** value);
    HRESULT (STDMETHODCALLTYPE* put_InfoBadge)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CINavigationViewItemPresenter2* This,
        __x_ABI_CMicrosoft_CUI_CXaml_CControls_CIInfoBadge* value);

        END_INTERFACE
    } __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CINavigationViewItemPresenter2Vtbl;

    interface __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CINavigationViewItemPresenter2
    {
        CONST_VTBL struct __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CINavigationViewItemPresenter2Vtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CINavigationViewItemPresenter2;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CINavigationViewItemPresenter2_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CINavigationViewItemPresenterFactory_INTERFACE_DEFINED__)
    #define ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CINavigationViewItemPresenterFactory_INTERFACE_DEFINED__
    typedef struct __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CINavigationViewItemPresenterFactoryVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CINavigationViewItemPresenterFactory* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CINavigationViewItemPresenterFactory* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CINavigationViewItemPresenterFactory* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CINavigationViewItemPresenterFactory* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CINavigationViewItemPresenterFactory* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CINavigationViewItemPresenterFactory* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* CreateInstance)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CINavigationViewItemPresenterFactory* This,
        IInspectable* baseInterface,
        IInspectable** innerInterface,
        __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CINavigationViewItemPresenter** value);

        END_INTERFACE
    } __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CINavigationViewItemPresenterFactoryVtbl;

    interface __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CINavigationViewItemPresenterFactory
    {
        CONST_VTBL struct __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CINavigationViewItemPresenterFactoryVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CINavigationViewItemPresenterFactory;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CINavigationViewItemPresenterFactory_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CINavigationViewItemPresenterStatics_INTERFACE_DEFINED__)
    #define ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CINavigationViewItemPresenterStatics_INTERFACE_DEFINED__
    typedef struct __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CINavigationViewItemPresenterStaticsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CINavigationViewItemPresenterStatics* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CINavigationViewItemPresenterStatics* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CINavigationViewItemPresenterStatics* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CINavigationViewItemPresenterStatics* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CINavigationViewItemPresenterStatics* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CINavigationViewItemPresenterStatics* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_IconProperty)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CINavigationViewItemPresenterStatics* This,
        __x_ABI_CMicrosoft_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_TemplateSettingsProperty)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CINavigationViewItemPresenterStatics* This,
        __x_ABI_CMicrosoft_CUI_CXaml_CIDependencyProperty** value);

        END_INTERFACE
    } __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CINavigationViewItemPresenterStaticsVtbl;

    interface __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CINavigationViewItemPresenterStatics
    {
        CONST_VTBL struct __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CINavigationViewItemPresenterStaticsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CINavigationViewItemPresenterStatics;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CINavigationViewItemPresenterStatics_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CINavigationViewItemPresenterStatics2_INTERFACE_DEFINED__)
    #define ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CINavigationViewItemPresenterStatics2_INTERFACE_DEFINED__
    typedef struct __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CINavigationViewItemPresenterStatics2Vtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CINavigationViewItemPresenterStatics2* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CINavigationViewItemPresenterStatics2* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CINavigationViewItemPresenterStatics2* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CINavigationViewItemPresenterStatics2* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CINavigationViewItemPresenterStatics2* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CINavigationViewItemPresenterStatics2* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_InfoBadgeProperty)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CINavigationViewItemPresenterStatics2* This,
        __x_ABI_CMicrosoft_CUI_CXaml_CIDependencyProperty** value);

        END_INTERFACE
    } __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CINavigationViewItemPresenterStatics2Vtbl;

    interface __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CINavigationViewItemPresenterStatics2
    {
        CONST_VTBL struct __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CINavigationViewItemPresenterStatics2Vtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CINavigationViewItemPresenterStatics2;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CINavigationViewItemPresenterStatics2_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CINavigationViewItemPresenterTemplateSettings_INTERFACE_DEFINED__)
    #define ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CINavigationViewItemPresenterTemplateSettings_INTERFACE_DEFINED__
    typedef struct __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CINavigationViewItemPresenterTemplateSettingsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CINavigationViewItemPresenterTemplateSettings* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CINavigationViewItemPresenterTemplateSettings* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CINavigationViewItemPresenterTemplateSettings* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CINavigationViewItemPresenterTemplateSettings* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CINavigationViewItemPresenterTemplateSettings* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CINavigationViewItemPresenterTemplateSettings* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_IconWidth)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CINavigationViewItemPresenterTemplateSettings* This,
        DOUBLE* value);
    HRESULT (STDMETHODCALLTYPE* get_SmallerIconWidth)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CINavigationViewItemPresenterTemplateSettings* This,
        DOUBLE* value);

        END_INTERFACE
    } __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CINavigationViewItemPresenterTemplateSettingsVtbl;

    interface __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CINavigationViewItemPresenterTemplateSettings
    {
        CONST_VTBL struct __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CINavigationViewItemPresenterTemplateSettingsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CINavigationViewItemPresenterTemplateSettings;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CINavigationViewItemPresenterTemplateSettings_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CINavigationViewItemPresenterTemplateSettingsFactory_INTERFACE_DEFINED__)
    #define ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CINavigationViewItemPresenterTemplateSettingsFactory_INTERFACE_DEFINED__
    typedef struct __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CINavigationViewItemPresenterTemplateSettingsFactoryVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CINavigationViewItemPresenterTemplateSettingsFactory* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CINavigationViewItemPresenterTemplateSettingsFactory* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CINavigationViewItemPresenterTemplateSettingsFactory* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CINavigationViewItemPresenterTemplateSettingsFactory* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CINavigationViewItemPresenterTemplateSettingsFactory* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CINavigationViewItemPresenterTemplateSettingsFactory* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* CreateInstance)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CINavigationViewItemPresenterTemplateSettingsFactory* This,
        IInspectable* baseInterface,
        IInspectable** innerInterface,
        __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CINavigationViewItemPresenterTemplateSettings** value);

        END_INTERFACE
    } __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CINavigationViewItemPresenterTemplateSettingsFactoryVtbl;

    interface __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CINavigationViewItemPresenterTemplateSettingsFactory
    {
        CONST_VTBL struct __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CINavigationViewItemPresenterTemplateSettingsFactoryVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CINavigationViewItemPresenterTemplateSettingsFactory;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CINavigationViewItemPresenterTemplateSettingsFactory_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CINavigationViewItemPresenterTemplateSettingsStatics_INTERFACE_DEFINED__)
    #define ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CINavigationViewItemPresenterTemplateSettingsStatics_INTERFACE_DEFINED__
    typedef struct __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CINavigationViewItemPresenterTemplateSettingsStaticsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CINavigationViewItemPresenterTemplateSettingsStatics* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CINavigationViewItemPresenterTemplateSettingsStatics* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CINavigationViewItemPresenterTemplateSettingsStatics* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CINavigationViewItemPresenterTemplateSettingsStatics* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CINavigationViewItemPresenterTemplateSettingsStatics* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CINavigationViewItemPresenterTemplateSettingsStatics* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_IconWidthProperty)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CINavigationViewItemPresenterTemplateSettingsStatics* This,
        __x_ABI_CMicrosoft_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_SmallerIconWidthProperty)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CINavigationViewItemPresenterTemplateSettingsStatics* This,
        __x_ABI_CMicrosoft_CUI_CXaml_CIDependencyProperty** value);

        END_INTERFACE
    } __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CINavigationViewItemPresenterTemplateSettingsStaticsVtbl;

    interface __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CINavigationViewItemPresenterTemplateSettingsStatics
    {
        CONST_VTBL struct __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CINavigationViewItemPresenterTemplateSettingsStaticsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CINavigationViewItemPresenterTemplateSettingsStatics;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CINavigationViewItemPresenterTemplateSettingsStatics_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIOrientedVirtualizingPanel_INTERFACE_DEFINED__)
    #define ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIOrientedVirtualizingPanel_INTERFACE_DEFINED__
    typedef struct __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIOrientedVirtualizingPanelVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIOrientedVirtualizingPanel* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIOrientedVirtualizingPanel* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIOrientedVirtualizingPanel* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIOrientedVirtualizingPanel* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIOrientedVirtualizingPanel* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIOrientedVirtualizingPanel* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_CanVerticallyScroll)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIOrientedVirtualizingPanel* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* put_CanVerticallyScroll)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIOrientedVirtualizingPanel* This,
        boolean value);
    HRESULT (STDMETHODCALLTYPE* get_CanHorizontallyScroll)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIOrientedVirtualizingPanel* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* put_CanHorizontallyScroll)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIOrientedVirtualizingPanel* This,
        boolean value);
    HRESULT (STDMETHODCALLTYPE* get_ExtentWidth)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIOrientedVirtualizingPanel* This,
        DOUBLE* value);
    HRESULT (STDMETHODCALLTYPE* get_ExtentHeight)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIOrientedVirtualizingPanel* This,
        DOUBLE* value);
    HRESULT (STDMETHODCALLTYPE* get_ViewportWidth)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIOrientedVirtualizingPanel* This,
        DOUBLE* value);
    HRESULT (STDMETHODCALLTYPE* get_ViewportHeight)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIOrientedVirtualizingPanel* This,
        DOUBLE* value);
    HRESULT (STDMETHODCALLTYPE* get_HorizontalOffset)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIOrientedVirtualizingPanel* This,
        DOUBLE* value);
    HRESULT (STDMETHODCALLTYPE* get_VerticalOffset)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIOrientedVirtualizingPanel* This,
        DOUBLE* value);
    HRESULT (STDMETHODCALLTYPE* get_ScrollOwner)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIOrientedVirtualizingPanel* This,
        IInspectable** value);
    HRESULT (STDMETHODCALLTYPE* put_ScrollOwner)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIOrientedVirtualizingPanel* This,
        IInspectable* value);
    HRESULT (STDMETHODCALLTYPE* LineUp)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIOrientedVirtualizingPanel* This);
    HRESULT (STDMETHODCALLTYPE* LineDown)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIOrientedVirtualizingPanel* This);
    HRESULT (STDMETHODCALLTYPE* LineLeft)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIOrientedVirtualizingPanel* This);
    HRESULT (STDMETHODCALLTYPE* LineRight)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIOrientedVirtualizingPanel* This);
    HRESULT (STDMETHODCALLTYPE* PageUp)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIOrientedVirtualizingPanel* This);
    HRESULT (STDMETHODCALLTYPE* PageDown)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIOrientedVirtualizingPanel* This);
    HRESULT (STDMETHODCALLTYPE* PageLeft)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIOrientedVirtualizingPanel* This);
    HRESULT (STDMETHODCALLTYPE* PageRight)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIOrientedVirtualizingPanel* This);
    HRESULT (STDMETHODCALLTYPE* MouseWheelUp)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIOrientedVirtualizingPanel* This);
    HRESULT (STDMETHODCALLTYPE* MouseWheelDown)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIOrientedVirtualizingPanel* This);
    HRESULT (STDMETHODCALLTYPE* MouseWheelLeft)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIOrientedVirtualizingPanel* This);
    HRESULT (STDMETHODCALLTYPE* MouseWheelRight)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIOrientedVirtualizingPanel* This);
    HRESULT (STDMETHODCALLTYPE* SetHorizontalOffset)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIOrientedVirtualizingPanel* This,
        DOUBLE offset);
    HRESULT (STDMETHODCALLTYPE* SetVerticalOffset)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIOrientedVirtualizingPanel* This,
        DOUBLE offset);
    HRESULT (STDMETHODCALLTYPE* MakeVisible)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIOrientedVirtualizingPanel* This,
        __x_ABI_CMicrosoft_CUI_CXaml_CIUIElement* visual,
        struct __x_ABI_CWindows_CFoundation_CRect rectangle,
        struct __x_ABI_CWindows_CFoundation_CRect* result);

        END_INTERFACE
    } __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIOrientedVirtualizingPanelVtbl;

    interface __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIOrientedVirtualizingPanel
    {
        CONST_VTBL struct __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIOrientedVirtualizingPanelVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIOrientedVirtualizingPanel;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIOrientedVirtualizingPanel_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIOrientedVirtualizingPanelFactory_INTERFACE_DEFINED__)
    #define ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIOrientedVirtualizingPanelFactory_INTERFACE_DEFINED__
    typedef struct __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIOrientedVirtualizingPanelFactoryVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIOrientedVirtualizingPanelFactory* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIOrientedVirtualizingPanelFactory* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIOrientedVirtualizingPanelFactory* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIOrientedVirtualizingPanelFactory* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIOrientedVirtualizingPanelFactory* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIOrientedVirtualizingPanelFactory* This,
            TrustLevel* trustLevel);
    
        END_INTERFACE
    } __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIOrientedVirtualizingPanelFactoryVtbl;

    interface __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIOrientedVirtualizingPanelFactory
    {
        CONST_VTBL struct __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIOrientedVirtualizingPanelFactoryVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIOrientedVirtualizingPanelFactory;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIOrientedVirtualizingPanelFactory_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIPickerFlyoutBase_INTERFACE_DEFINED__)
    #define ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIPickerFlyoutBase_INTERFACE_DEFINED__
    typedef struct __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIPickerFlyoutBaseVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIPickerFlyoutBase* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIPickerFlyoutBase* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIPickerFlyoutBase* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIPickerFlyoutBase* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIPickerFlyoutBase* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIPickerFlyoutBase* This,
            TrustLevel* trustLevel);
    
        END_INTERFACE
    } __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIPickerFlyoutBaseVtbl;

    interface __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIPickerFlyoutBase
    {
        CONST_VTBL struct __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIPickerFlyoutBaseVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIPickerFlyoutBase;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIPickerFlyoutBase_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIPickerFlyoutBaseFactory_INTERFACE_DEFINED__)
    #define ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIPickerFlyoutBaseFactory_INTERFACE_DEFINED__
    typedef struct __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIPickerFlyoutBaseFactoryVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIPickerFlyoutBaseFactory* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIPickerFlyoutBaseFactory* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIPickerFlyoutBaseFactory* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIPickerFlyoutBaseFactory* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIPickerFlyoutBaseFactory* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIPickerFlyoutBaseFactory* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* CreateInstance)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIPickerFlyoutBaseFactory* This,
        IInspectable* baseInterface,
        IInspectable** innerInterface,
        __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIPickerFlyoutBase** value);

        END_INTERFACE
    } __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIPickerFlyoutBaseFactoryVtbl;

    interface __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIPickerFlyoutBaseFactory
    {
        CONST_VTBL struct __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIPickerFlyoutBaseFactoryVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIPickerFlyoutBaseFactory;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIPickerFlyoutBaseFactory_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIPickerFlyoutBaseOverrides_INTERFACE_DEFINED__)
    #define ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIPickerFlyoutBaseOverrides_INTERFACE_DEFINED__
    typedef struct __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIPickerFlyoutBaseOverridesVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIPickerFlyoutBaseOverrides* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIPickerFlyoutBaseOverrides* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIPickerFlyoutBaseOverrides* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIPickerFlyoutBaseOverrides* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIPickerFlyoutBaseOverrides* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIPickerFlyoutBaseOverrides* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* OnConfirmed)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIPickerFlyoutBaseOverrides* This);
    HRESULT (STDMETHODCALLTYPE* ShouldShowConfirmationButtons)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIPickerFlyoutBaseOverrides* This,
        boolean* result);

        END_INTERFACE
    } __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIPickerFlyoutBaseOverridesVtbl;

    interface __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIPickerFlyoutBaseOverrides
    {
        CONST_VTBL struct __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIPickerFlyoutBaseOverridesVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIPickerFlyoutBaseOverrides;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIPickerFlyoutBaseOverrides_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIPickerFlyoutBaseStatics_INTERFACE_DEFINED__)
    #define ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIPickerFlyoutBaseStatics_INTERFACE_DEFINED__
    typedef struct __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIPickerFlyoutBaseStaticsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIPickerFlyoutBaseStatics* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIPickerFlyoutBaseStatics* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIPickerFlyoutBaseStatics* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIPickerFlyoutBaseStatics* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIPickerFlyoutBaseStatics* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIPickerFlyoutBaseStatics* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_TitleProperty)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIPickerFlyoutBaseStatics* This,
        __x_ABI_CMicrosoft_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* GetTitle)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIPickerFlyoutBaseStatics* This,
        __x_ABI_CMicrosoft_CUI_CXaml_CIDependencyObject* element,
        HSTRING* result);
    HRESULT (STDMETHODCALLTYPE* SetTitle)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIPickerFlyoutBaseStatics* This,
        __x_ABI_CMicrosoft_CUI_CXaml_CIDependencyObject* element,
        HSTRING value);

        END_INTERFACE
    } __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIPickerFlyoutBaseStaticsVtbl;

    interface __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIPickerFlyoutBaseStatics
    {
        CONST_VTBL struct __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIPickerFlyoutBaseStaticsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIPickerFlyoutBaseStatics;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIPickerFlyoutBaseStatics_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIPivotHeaderItem_INTERFACE_DEFINED__)
    #define ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIPivotHeaderItem_INTERFACE_DEFINED__
    typedef struct __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIPivotHeaderItemVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIPivotHeaderItem* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIPivotHeaderItem* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIPivotHeaderItem* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIPivotHeaderItem* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIPivotHeaderItem* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIPivotHeaderItem* This,
            TrustLevel* trustLevel);
    
        END_INTERFACE
    } __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIPivotHeaderItemVtbl;

    interface __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIPivotHeaderItem
    {
        CONST_VTBL struct __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIPivotHeaderItemVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIPivotHeaderItem;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIPivotHeaderItem_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIPivotHeaderItemFactory_INTERFACE_DEFINED__)
    #define ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIPivotHeaderItemFactory_INTERFACE_DEFINED__
    typedef struct __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIPivotHeaderItemFactoryVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIPivotHeaderItemFactory* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIPivotHeaderItemFactory* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIPivotHeaderItemFactory* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIPivotHeaderItemFactory* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIPivotHeaderItemFactory* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIPivotHeaderItemFactory* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* CreateInstance)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIPivotHeaderItemFactory* This,
        IInspectable* baseInterface,
        IInspectable** innerInterface,
        __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIPivotHeaderItem** value);

        END_INTERFACE
    } __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIPivotHeaderItemFactoryVtbl;

    interface __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIPivotHeaderItemFactory
    {
        CONST_VTBL struct __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIPivotHeaderItemFactoryVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIPivotHeaderItemFactory;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIPivotHeaderItemFactory_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIPivotHeaderPanel_INTERFACE_DEFINED__)
    #define ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIPivotHeaderPanel_INTERFACE_DEFINED__
    typedef struct __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIPivotHeaderPanelVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIPivotHeaderPanel* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIPivotHeaderPanel* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIPivotHeaderPanel* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIPivotHeaderPanel* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIPivotHeaderPanel* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIPivotHeaderPanel* This,
            TrustLevel* trustLevel);
    
        END_INTERFACE
    } __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIPivotHeaderPanelVtbl;

    interface __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIPivotHeaderPanel
    {
        CONST_VTBL struct __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIPivotHeaderPanelVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIPivotHeaderPanel;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIPivotHeaderPanel_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIPivotPanel_INTERFACE_DEFINED__)
    #define ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIPivotPanel_INTERFACE_DEFINED__
    typedef struct __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIPivotPanelVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIPivotPanel* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIPivotPanel* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIPivotPanel* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIPivotPanel* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIPivotPanel* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIPivotPanel* This,
            TrustLevel* trustLevel);
    
        END_INTERFACE
    } __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIPivotPanelVtbl;

    interface __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIPivotPanel
    {
        CONST_VTBL struct __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIPivotPanelVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIPivotPanel;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIPivotPanel_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIPopup_INTERFACE_DEFINED__)
    #define ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIPopup_INTERFACE_DEFINED__
    typedef struct __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIPopupVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIPopup* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIPopup* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIPopup* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIPopup* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIPopup* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIPopup* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Child)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIPopup* This,
        __x_ABI_CMicrosoft_CUI_CXaml_CIUIElement** value);
    HRESULT (STDMETHODCALLTYPE* put_Child)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIPopup* This,
        __x_ABI_CMicrosoft_CUI_CXaml_CIUIElement* value);
    HRESULT (STDMETHODCALLTYPE* get_IsOpen)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIPopup* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* put_IsOpen)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIPopup* This,
        boolean value);
    HRESULT (STDMETHODCALLTYPE* get_HorizontalOffset)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIPopup* This,
        DOUBLE* value);
    HRESULT (STDMETHODCALLTYPE* put_HorizontalOffset)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIPopup* This,
        DOUBLE value);
    HRESULT (STDMETHODCALLTYPE* get_VerticalOffset)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIPopup* This,
        DOUBLE* value);
    HRESULT (STDMETHODCALLTYPE* put_VerticalOffset)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIPopup* This,
        DOUBLE value);
    HRESULT (STDMETHODCALLTYPE* get_ChildTransitions)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIPopup* This,
        __x_ABI_C__FIVector_1___x_ABI_CMicrosoft__CUI__CXaml__CMedia__CAnimation__CTransition** value);
    HRESULT (STDMETHODCALLTYPE* put_ChildTransitions)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIPopup* This,
        __x_ABI_C__FIVector_1___x_ABI_CMicrosoft__CUI__CXaml__CMedia__CAnimation__CTransition* value);
    HRESULT (STDMETHODCALLTYPE* get_IsLightDismissEnabled)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIPopup* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* put_IsLightDismissEnabled)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIPopup* This,
        boolean value);
    HRESULT (STDMETHODCALLTYPE* get_LightDismissOverlayMode)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIPopup* This,
        enum __x_ABI_CMicrosoft_CUI_CXaml_CControls_CLightDismissOverlayMode* value);
    HRESULT (STDMETHODCALLTYPE* put_LightDismissOverlayMode)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIPopup* This,
        enum __x_ABI_CMicrosoft_CUI_CXaml_CControls_CLightDismissOverlayMode value);
    HRESULT (STDMETHODCALLTYPE* get_ShouldConstrainToRootBounds)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIPopup* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* put_ShouldConstrainToRootBounds)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIPopup* This,
        boolean value);
    HRESULT (STDMETHODCALLTYPE* get_IsConstrainedToRootBounds)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIPopup* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* add_Opened)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIPopup* This,
        __x_ABI_C__FIEventHandler_1_IInspectable* handler,
        EventRegistrationToken* token);
    HRESULT (STDMETHODCALLTYPE* remove_Opened)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIPopup* This,
        EventRegistrationToken token);
    HRESULT (STDMETHODCALLTYPE* add_Closed)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIPopup* This,
        __x_ABI_C__FIEventHandler_1_IInspectable* handler,
        EventRegistrationToken* token);
    HRESULT (STDMETHODCALLTYPE* remove_Closed)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIPopup* This,
        EventRegistrationToken token);

        END_INTERFACE
    } __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIPopupVtbl;

    interface __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIPopup
    {
        CONST_VTBL struct __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIPopupVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIPopup;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIPopup_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIPopup2_INTERFACE_DEFINED__)
    #define ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIPopup2_INTERFACE_DEFINED__
    typedef struct __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIPopup2Vtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIPopup2* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIPopup2* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIPopup2* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIPopup2* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIPopup2* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIPopup2* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_PlacementTarget)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIPopup2* This,
        __x_ABI_CMicrosoft_CUI_CXaml_CIFrameworkElement** value);
    HRESULT (STDMETHODCALLTYPE* put_PlacementTarget)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIPopup2* This,
        __x_ABI_CMicrosoft_CUI_CXaml_CIFrameworkElement* value);
    HRESULT (STDMETHODCALLTYPE* get_DesiredPlacement)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIPopup2* This,
        enum __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CPopupPlacementMode* value);
    HRESULT (STDMETHODCALLTYPE* put_DesiredPlacement)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIPopup2* This,
        enum __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CPopupPlacementMode value);
    HRESULT (STDMETHODCALLTYPE* get_ActualPlacement)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIPopup2* This,
        enum __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CPopupPlacementMode* value);
    HRESULT (STDMETHODCALLTYPE* add_ActualPlacementChanged)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIPopup2* This,
        __x_ABI_C__FIEventHandler_1_IInspectable* handler,
        EventRegistrationToken* token);
    HRESULT (STDMETHODCALLTYPE* remove_ActualPlacementChanged)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIPopup2* This,
        EventRegistrationToken token);

        END_INTERFACE
    } __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIPopup2Vtbl;

    interface __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIPopup2
    {
        CONST_VTBL struct __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIPopup2Vtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIPopup2;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIPopup2_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIPopup3_INTERFACE_DEFINED__)
    #define ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIPopup3_INTERFACE_DEFINED__
    typedef struct __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIPopup3Vtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIPopup3* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIPopup3* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIPopup3* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIPopup3* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIPopup3* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIPopup3* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_SystemBackdrop)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIPopup3* This,
        __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CISystemBackdrop** value);
    HRESULT (STDMETHODCALLTYPE* put_SystemBackdrop)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIPopup3* This,
        __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CISystemBackdrop* value);

        END_INTERFACE
    } __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIPopup3Vtbl;

    interface __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIPopup3
    {
        CONST_VTBL struct __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIPopup3Vtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIPopup3;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIPopup3_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIPopupStatics_INTERFACE_DEFINED__)
    #define ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIPopupStatics_INTERFACE_DEFINED__
    typedef struct __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIPopupStaticsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIPopupStatics* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIPopupStatics* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIPopupStatics* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIPopupStatics* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIPopupStatics* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIPopupStatics* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_ChildProperty)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIPopupStatics* This,
        __x_ABI_CMicrosoft_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_IsOpenProperty)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIPopupStatics* This,
        __x_ABI_CMicrosoft_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_HorizontalOffsetProperty)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIPopupStatics* This,
        __x_ABI_CMicrosoft_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_VerticalOffsetProperty)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIPopupStatics* This,
        __x_ABI_CMicrosoft_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_ChildTransitionsProperty)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIPopupStatics* This,
        __x_ABI_CMicrosoft_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_IsLightDismissEnabledProperty)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIPopupStatics* This,
        __x_ABI_CMicrosoft_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_LightDismissOverlayModeProperty)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIPopupStatics* This,
        __x_ABI_CMicrosoft_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_ShouldConstrainToRootBoundsProperty)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIPopupStatics* This,
        __x_ABI_CMicrosoft_CUI_CXaml_CIDependencyProperty** value);

        END_INTERFACE
    } __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIPopupStaticsVtbl;

    interface __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIPopupStatics
    {
        CONST_VTBL struct __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIPopupStaticsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIPopupStatics;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIPopupStatics_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIPopupStatics2_INTERFACE_DEFINED__)
    #define ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIPopupStatics2_INTERFACE_DEFINED__
    typedef struct __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIPopupStatics2Vtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIPopupStatics2* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIPopupStatics2* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIPopupStatics2* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIPopupStatics2* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIPopupStatics2* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIPopupStatics2* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_PlacementTargetProperty)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIPopupStatics2* This,
        __x_ABI_CMicrosoft_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_DesiredPlacementProperty)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIPopupStatics2* This,
        __x_ABI_CMicrosoft_CUI_CXaml_CIDependencyProperty** value);

        END_INTERFACE
    } __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIPopupStatics2Vtbl;

    interface __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIPopupStatics2
    {
        CONST_VTBL struct __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIPopupStatics2Vtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIPopupStatics2;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIPopupStatics2_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIPopupStatics3_INTERFACE_DEFINED__)
    #define ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIPopupStatics3_INTERFACE_DEFINED__
    typedef struct __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIPopupStatics3Vtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIPopupStatics3* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIPopupStatics3* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIPopupStatics3* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIPopupStatics3* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIPopupStatics3* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIPopupStatics3* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_SystemBackdropProperty)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIPopupStatics3* This,
        __x_ABI_CMicrosoft_CUI_CXaml_CIDependencyProperty** value);

        END_INTERFACE
    } __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIPopupStatics3Vtbl;

    interface __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIPopupStatics3
    {
        CONST_VTBL struct __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIPopupStatics3Vtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIPopupStatics3;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIPopupStatics3_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIRangeBase_INTERFACE_DEFINED__)
    #define ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIRangeBase_INTERFACE_DEFINED__
    typedef struct __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIRangeBaseVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIRangeBase* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIRangeBase* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIRangeBase* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIRangeBase* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIRangeBase* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIRangeBase* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Minimum)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIRangeBase* This,
        DOUBLE* value);
    HRESULT (STDMETHODCALLTYPE* put_Minimum)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIRangeBase* This,
        DOUBLE value);
    HRESULT (STDMETHODCALLTYPE* get_Maximum)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIRangeBase* This,
        DOUBLE* value);
    HRESULT (STDMETHODCALLTYPE* put_Maximum)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIRangeBase* This,
        DOUBLE value);
    HRESULT (STDMETHODCALLTYPE* get_SmallChange)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIRangeBase* This,
        DOUBLE* value);
    HRESULT (STDMETHODCALLTYPE* put_SmallChange)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIRangeBase* This,
        DOUBLE value);
    HRESULT (STDMETHODCALLTYPE* get_LargeChange)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIRangeBase* This,
        DOUBLE* value);
    HRESULT (STDMETHODCALLTYPE* put_LargeChange)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIRangeBase* This,
        DOUBLE value);
    HRESULT (STDMETHODCALLTYPE* get_Value)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIRangeBase* This,
        DOUBLE* value);
    HRESULT (STDMETHODCALLTYPE* put_Value)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIRangeBase* This,
        DOUBLE value);
    HRESULT (STDMETHODCALLTYPE* add_ValueChanged)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIRangeBase* This,
        __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIRangeBaseValueChangedEventHandler* handler,
        EventRegistrationToken* token);
    HRESULT (STDMETHODCALLTYPE* remove_ValueChanged)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIRangeBase* This,
        EventRegistrationToken token);

        END_INTERFACE
    } __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIRangeBaseVtbl;

    interface __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIRangeBase
    {
        CONST_VTBL struct __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIRangeBaseVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIRangeBase;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIRangeBase_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIRangeBaseFactory_INTERFACE_DEFINED__)
    #define ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIRangeBaseFactory_INTERFACE_DEFINED__
    typedef struct __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIRangeBaseFactoryVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIRangeBaseFactory* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIRangeBaseFactory* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIRangeBaseFactory* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIRangeBaseFactory* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIRangeBaseFactory* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIRangeBaseFactory* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* CreateInstance)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIRangeBaseFactory* This,
        IInspectable* baseInterface,
        IInspectable** innerInterface,
        __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIRangeBase** value);

        END_INTERFACE
    } __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIRangeBaseFactoryVtbl;

    interface __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIRangeBaseFactory
    {
        CONST_VTBL struct __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIRangeBaseFactoryVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIRangeBaseFactory;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIRangeBaseFactory_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIRangeBaseOverrides_INTERFACE_DEFINED__)
    #define ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIRangeBaseOverrides_INTERFACE_DEFINED__
    typedef struct __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIRangeBaseOverridesVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIRangeBaseOverrides* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIRangeBaseOverrides* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIRangeBaseOverrides* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIRangeBaseOverrides* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIRangeBaseOverrides* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIRangeBaseOverrides* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* OnMinimumChanged)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIRangeBaseOverrides* This,
        DOUBLE oldMinimum,
        DOUBLE newMinimum);
    HRESULT (STDMETHODCALLTYPE* OnMaximumChanged)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIRangeBaseOverrides* This,
        DOUBLE oldMaximum,
        DOUBLE newMaximum);
    HRESULT (STDMETHODCALLTYPE* OnValueChanged)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIRangeBaseOverrides* This,
        DOUBLE oldValue,
        DOUBLE newValue);

        END_INTERFACE
    } __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIRangeBaseOverridesVtbl;

    interface __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIRangeBaseOverrides
    {
        CONST_VTBL struct __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIRangeBaseOverridesVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIRangeBaseOverrides;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIRangeBaseOverrides_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIRangeBaseStatics_INTERFACE_DEFINED__)
    #define ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIRangeBaseStatics_INTERFACE_DEFINED__
    typedef struct __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIRangeBaseStaticsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIRangeBaseStatics* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIRangeBaseStatics* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIRangeBaseStatics* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIRangeBaseStatics* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIRangeBaseStatics* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIRangeBaseStatics* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_MinimumProperty)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIRangeBaseStatics* This,
        __x_ABI_CMicrosoft_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_MaximumProperty)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIRangeBaseStatics* This,
        __x_ABI_CMicrosoft_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_SmallChangeProperty)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIRangeBaseStatics* This,
        __x_ABI_CMicrosoft_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_LargeChangeProperty)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIRangeBaseStatics* This,
        __x_ABI_CMicrosoft_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_ValueProperty)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIRangeBaseStatics* This,
        __x_ABI_CMicrosoft_CUI_CXaml_CIDependencyProperty** value);

        END_INTERFACE
    } __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIRangeBaseStaticsVtbl;

    interface __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIRangeBaseStatics
    {
        CONST_VTBL struct __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIRangeBaseStaticsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIRangeBaseStatics;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIRangeBaseStatics_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIRangeBaseValueChangedEventArgs_INTERFACE_DEFINED__)
    #define ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIRangeBaseValueChangedEventArgs_INTERFACE_DEFINED__
    typedef struct __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIRangeBaseValueChangedEventArgsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIRangeBaseValueChangedEventArgs* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIRangeBaseValueChangedEventArgs* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIRangeBaseValueChangedEventArgs* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIRangeBaseValueChangedEventArgs* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIRangeBaseValueChangedEventArgs* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIRangeBaseValueChangedEventArgs* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_OldValue)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIRangeBaseValueChangedEventArgs* This,
        DOUBLE* value);
    HRESULT (STDMETHODCALLTYPE* get_NewValue)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIRangeBaseValueChangedEventArgs* This,
        DOUBLE* value);

        END_INTERFACE
    } __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIRangeBaseValueChangedEventArgsVtbl;

    interface __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIRangeBaseValueChangedEventArgs
    {
        CONST_VTBL struct __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIRangeBaseValueChangedEventArgsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIRangeBaseValueChangedEventArgs;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIRangeBaseValueChangedEventArgs_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIRepeatButton_INTERFACE_DEFINED__)
    #define ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIRepeatButton_INTERFACE_DEFINED__
    typedef struct __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIRepeatButtonVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIRepeatButton* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIRepeatButton* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIRepeatButton* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIRepeatButton* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIRepeatButton* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIRepeatButton* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Delay)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIRepeatButton* This,
        INT32* value);
    HRESULT (STDMETHODCALLTYPE* put_Delay)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIRepeatButton* This,
        INT32 value);
    HRESULT (STDMETHODCALLTYPE* get_Interval)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIRepeatButton* This,
        INT32* value);
    HRESULT (STDMETHODCALLTYPE* put_Interval)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIRepeatButton* This,
        INT32 value);

        END_INTERFACE
    } __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIRepeatButtonVtbl;

    interface __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIRepeatButton
    {
        CONST_VTBL struct __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIRepeatButtonVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIRepeatButton;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIRepeatButton_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIRepeatButtonStatics_INTERFACE_DEFINED__)
    #define ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIRepeatButtonStatics_INTERFACE_DEFINED__
    typedef struct __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIRepeatButtonStaticsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIRepeatButtonStatics* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIRepeatButtonStatics* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIRepeatButtonStatics* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIRepeatButtonStatics* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIRepeatButtonStatics* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIRepeatButtonStatics* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_DelayProperty)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIRepeatButtonStatics* This,
        __x_ABI_CMicrosoft_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_IntervalProperty)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIRepeatButtonStatics* This,
        __x_ABI_CMicrosoft_CUI_CXaml_CIDependencyProperty** value);

        END_INTERFACE
    } __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIRepeatButtonStaticsVtbl;

    interface __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIRepeatButtonStatics
    {
        CONST_VTBL struct __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIRepeatButtonStaticsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIRepeatButtonStatics;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIRepeatButtonStatics_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIRepeatedScrollSnapPoint_INTERFACE_DEFINED__)
    #define ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIRepeatedScrollSnapPoint_INTERFACE_DEFINED__
    typedef struct __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIRepeatedScrollSnapPointVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIRepeatedScrollSnapPoint* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIRepeatedScrollSnapPoint* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIRepeatedScrollSnapPoint* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIRepeatedScrollSnapPoint* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIRepeatedScrollSnapPoint* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIRepeatedScrollSnapPoint* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Offset)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIRepeatedScrollSnapPoint* This,
        DOUBLE* value);
    HRESULT (STDMETHODCALLTYPE* get_Interval)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIRepeatedScrollSnapPoint* This,
        DOUBLE* value);
    HRESULT (STDMETHODCALLTYPE* get_Start)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIRepeatedScrollSnapPoint* This,
        DOUBLE* value);
    HRESULT (STDMETHODCALLTYPE* get_End)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIRepeatedScrollSnapPoint* This,
        DOUBLE* value);

        END_INTERFACE
    } __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIRepeatedScrollSnapPointVtbl;

    interface __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIRepeatedScrollSnapPoint
    {
        CONST_VTBL struct __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIRepeatedScrollSnapPointVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIRepeatedScrollSnapPoint;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIRepeatedScrollSnapPoint_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIRepeatedScrollSnapPointFactory_INTERFACE_DEFINED__)
    #define ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIRepeatedScrollSnapPointFactory_INTERFACE_DEFINED__
    typedef struct __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIRepeatedScrollSnapPointFactoryVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIRepeatedScrollSnapPointFactory* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIRepeatedScrollSnapPointFactory* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIRepeatedScrollSnapPointFactory* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIRepeatedScrollSnapPointFactory* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIRepeatedScrollSnapPointFactory* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIRepeatedScrollSnapPointFactory* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* CreateInstance)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIRepeatedScrollSnapPointFactory* This,
        DOUBLE offset,
        DOUBLE interval,
        DOUBLE start,
        DOUBLE end,
        enum __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CScrollSnapPointsAlignment alignment,
        IInspectable* baseInterface,
        IInspectable** innerInterface,
        __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIRepeatedScrollSnapPoint** value);

        END_INTERFACE
    } __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIRepeatedScrollSnapPointFactoryVtbl;

    interface __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIRepeatedScrollSnapPointFactory
    {
        CONST_VTBL struct __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIRepeatedScrollSnapPointFactoryVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIRepeatedScrollSnapPointFactory;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIRepeatedScrollSnapPointFactory_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIRepeatedZoomSnapPoint_INTERFACE_DEFINED__)
    #define ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIRepeatedZoomSnapPoint_INTERFACE_DEFINED__
    typedef struct __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIRepeatedZoomSnapPointVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIRepeatedZoomSnapPoint* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIRepeatedZoomSnapPoint* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIRepeatedZoomSnapPoint* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIRepeatedZoomSnapPoint* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIRepeatedZoomSnapPoint* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIRepeatedZoomSnapPoint* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Offset)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIRepeatedZoomSnapPoint* This,
        DOUBLE* value);
    HRESULT (STDMETHODCALLTYPE* get_Interval)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIRepeatedZoomSnapPoint* This,
        DOUBLE* value);
    HRESULT (STDMETHODCALLTYPE* get_Start)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIRepeatedZoomSnapPoint* This,
        DOUBLE* value);
    HRESULT (STDMETHODCALLTYPE* get_End)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIRepeatedZoomSnapPoint* This,
        DOUBLE* value);

        END_INTERFACE
    } __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIRepeatedZoomSnapPointVtbl;

    interface __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIRepeatedZoomSnapPoint
    {
        CONST_VTBL struct __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIRepeatedZoomSnapPointVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIRepeatedZoomSnapPoint;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIRepeatedZoomSnapPoint_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIRepeatedZoomSnapPointFactory_INTERFACE_DEFINED__)
    #define ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIRepeatedZoomSnapPointFactory_INTERFACE_DEFINED__
    typedef struct __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIRepeatedZoomSnapPointFactoryVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIRepeatedZoomSnapPointFactory* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIRepeatedZoomSnapPointFactory* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIRepeatedZoomSnapPointFactory* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIRepeatedZoomSnapPointFactory* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIRepeatedZoomSnapPointFactory* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIRepeatedZoomSnapPointFactory* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* CreateInstance)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIRepeatedZoomSnapPointFactory* This,
        DOUBLE offset,
        DOUBLE interval,
        DOUBLE start,
        DOUBLE end,
        IInspectable* baseInterface,
        IInspectable** innerInterface,
        __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIRepeatedZoomSnapPoint** value);

        END_INTERFACE
    } __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIRepeatedZoomSnapPointFactoryVtbl;

    interface __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIRepeatedZoomSnapPointFactory
    {
        CONST_VTBL struct __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIRepeatedZoomSnapPointFactoryVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIRepeatedZoomSnapPointFactory;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIRepeatedZoomSnapPointFactory_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIScrollBar_INTERFACE_DEFINED__)
    #define ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIScrollBar_INTERFACE_DEFINED__
    typedef struct __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIScrollBarVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIScrollBar* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIScrollBar* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIScrollBar* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIScrollBar* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIScrollBar* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIScrollBar* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Orientation)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIScrollBar* This,
        enum __x_ABI_CMicrosoft_CUI_CXaml_CControls_COrientation* value);
    HRESULT (STDMETHODCALLTYPE* put_Orientation)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIScrollBar* This,
        enum __x_ABI_CMicrosoft_CUI_CXaml_CControls_COrientation value);
    HRESULT (STDMETHODCALLTYPE* get_ViewportSize)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIScrollBar* This,
        DOUBLE* value);
    HRESULT (STDMETHODCALLTYPE* put_ViewportSize)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIScrollBar* This,
        DOUBLE value);
    HRESULT (STDMETHODCALLTYPE* get_IndicatorMode)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIScrollBar* This,
        enum __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CScrollingIndicatorMode* value);
    HRESULT (STDMETHODCALLTYPE* put_IndicatorMode)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIScrollBar* This,
        enum __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CScrollingIndicatorMode value);
    HRESULT (STDMETHODCALLTYPE* add_Scroll)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIScrollBar* This,
        __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIScrollEventHandler* handler,
        EventRegistrationToken* token);
    HRESULT (STDMETHODCALLTYPE* remove_Scroll)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIScrollBar* This,
        EventRegistrationToken token);

        END_INTERFACE
    } __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIScrollBarVtbl;

    interface __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIScrollBar
    {
        CONST_VTBL struct __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIScrollBarVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIScrollBar;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIScrollBar_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIScrollBarStatics_INTERFACE_DEFINED__)
    #define ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIScrollBarStatics_INTERFACE_DEFINED__
    typedef struct __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIScrollBarStaticsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIScrollBarStatics* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIScrollBarStatics* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIScrollBarStatics* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIScrollBarStatics* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIScrollBarStatics* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIScrollBarStatics* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_OrientationProperty)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIScrollBarStatics* This,
        __x_ABI_CMicrosoft_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_ViewportSizeProperty)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIScrollBarStatics* This,
        __x_ABI_CMicrosoft_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_IndicatorModeProperty)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIScrollBarStatics* This,
        __x_ABI_CMicrosoft_CUI_CXaml_CIDependencyProperty** value);

        END_INTERFACE
    } __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIScrollBarStaticsVtbl;

    interface __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIScrollBarStatics
    {
        CONST_VTBL struct __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIScrollBarStaticsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIScrollBarStatics;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIScrollBarStatics_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIScrollController_INTERFACE_DEFINED__)
    #define ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIScrollController_INTERFACE_DEFINED__
    typedef struct __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIScrollControllerVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIScrollController* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIScrollController* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIScrollController* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIScrollController* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIScrollController* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIScrollController* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_PanningInfo)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIScrollController* This,
        __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIScrollControllerPanningInfo** value);
    HRESULT (STDMETHODCALLTYPE* get_CanScroll)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIScrollController* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* get_IsScrollingWithMouse)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIScrollController* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* SetIsScrollable)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIScrollController* This,
        boolean isScrollable);
    HRESULT (STDMETHODCALLTYPE* SetValues)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIScrollController* This,
        DOUBLE minOffset,
        DOUBLE maxOffset,
        DOUBLE offset,
        DOUBLE viewportLength);
    HRESULT (STDMETHODCALLTYPE* GetScrollAnimation)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIScrollController* This,
        INT32 correlationId,
        struct __x_ABI_CWindows_CFoundation_CNumerics_CVector2 startPosition,
        struct __x_ABI_CWindows_CFoundation_CNumerics_CVector2 endPosition,
        __x_ABI_CMicrosoft_CUI_CComposition_CICompositionAnimation* defaultAnimation,
        __x_ABI_CMicrosoft_CUI_CComposition_CICompositionAnimation** result);
    HRESULT (STDMETHODCALLTYPE* NotifyRequestedScrollCompleted)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIScrollController* This,
        INT32 correlationId);
    HRESULT (STDMETHODCALLTYPE* add_CanScrollChanged)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIScrollController* This,
        __x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CUI__CXaml__CControls__CPrimitives__CIScrollController_IInspectable* handler,
        EventRegistrationToken* token);
    HRESULT (STDMETHODCALLTYPE* remove_CanScrollChanged)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIScrollController* This,
        EventRegistrationToken token);
    HRESULT (STDMETHODCALLTYPE* add_IsScrollingWithMouseChanged)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIScrollController* This,
        __x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CUI__CXaml__CControls__CPrimitives__CIScrollController_IInspectable* handler,
        EventRegistrationToken* token);
    HRESULT (STDMETHODCALLTYPE* remove_IsScrollingWithMouseChanged)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIScrollController* This,
        EventRegistrationToken token);
    HRESULT (STDMETHODCALLTYPE* add_ScrollToRequested)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIScrollController* This,
        __x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CUI__CXaml__CControls__CPrimitives__CIScrollController___x_ABI_CMicrosoft__CUI__CXaml__CControls__CPrimitives__CScrollControllerScrollToRequestedEventArgs* handler,
        EventRegistrationToken* token);
    HRESULT (STDMETHODCALLTYPE* remove_ScrollToRequested)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIScrollController* This,
        EventRegistrationToken token);
    HRESULT (STDMETHODCALLTYPE* add_ScrollByRequested)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIScrollController* This,
        __x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CUI__CXaml__CControls__CPrimitives__CIScrollController___x_ABI_CMicrosoft__CUI__CXaml__CControls__CPrimitives__CScrollControllerScrollByRequestedEventArgs* handler,
        EventRegistrationToken* token);
    HRESULT (STDMETHODCALLTYPE* remove_ScrollByRequested)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIScrollController* This,
        EventRegistrationToken token);
    HRESULT (STDMETHODCALLTYPE* add_AddScrollVelocityRequested)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIScrollController* This,
        __x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CUI__CXaml__CControls__CPrimitives__CIScrollController___x_ABI_CMicrosoft__CUI__CXaml__CControls__CPrimitives__CScrollControllerAddScrollVelocityRequestedEventArgs* handler,
        EventRegistrationToken* token);
    HRESULT (STDMETHODCALLTYPE* remove_AddScrollVelocityRequested)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIScrollController* This,
        EventRegistrationToken token);

        END_INTERFACE
    } __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIScrollControllerVtbl;

    interface __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIScrollController
    {
        CONST_VTBL struct __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIScrollControllerVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIScrollController;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIScrollController_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIScrollControllerAddScrollVelocityRequestedEventArgs_INTERFACE_DEFINED__)
    #define ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIScrollControllerAddScrollVelocityRequestedEventArgs_INTERFACE_DEFINED__
    typedef struct __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIScrollControllerAddScrollVelocityRequestedEventArgsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIScrollControllerAddScrollVelocityRequestedEventArgs* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIScrollControllerAddScrollVelocityRequestedEventArgs* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIScrollControllerAddScrollVelocityRequestedEventArgs* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIScrollControllerAddScrollVelocityRequestedEventArgs* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIScrollControllerAddScrollVelocityRequestedEventArgs* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIScrollControllerAddScrollVelocityRequestedEventArgs* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_OffsetVelocity)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIScrollControllerAddScrollVelocityRequestedEventArgs* This,
        FLOAT* value);
    HRESULT (STDMETHODCALLTYPE* get_InertiaDecayRate)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIScrollControllerAddScrollVelocityRequestedEventArgs* This,
        __x_ABI_C__FIReference_1_float** value);
    HRESULT (STDMETHODCALLTYPE* get_CorrelationId)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIScrollControllerAddScrollVelocityRequestedEventArgs* This,
        INT32* value);
    HRESULT (STDMETHODCALLTYPE* put_CorrelationId)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIScrollControllerAddScrollVelocityRequestedEventArgs* This,
        INT32 value);

        END_INTERFACE
    } __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIScrollControllerAddScrollVelocityRequestedEventArgsVtbl;

    interface __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIScrollControllerAddScrollVelocityRequestedEventArgs
    {
        CONST_VTBL struct __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIScrollControllerAddScrollVelocityRequestedEventArgsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIScrollControllerAddScrollVelocityRequestedEventArgs;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIScrollControllerAddScrollVelocityRequestedEventArgs_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIScrollControllerAddScrollVelocityRequestedEventArgsFactory_INTERFACE_DEFINED__)
    #define ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIScrollControllerAddScrollVelocityRequestedEventArgsFactory_INTERFACE_DEFINED__
    typedef struct __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIScrollControllerAddScrollVelocityRequestedEventArgsFactoryVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIScrollControllerAddScrollVelocityRequestedEventArgsFactory* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIScrollControllerAddScrollVelocityRequestedEventArgsFactory* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIScrollControllerAddScrollVelocityRequestedEventArgsFactory* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIScrollControllerAddScrollVelocityRequestedEventArgsFactory* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIScrollControllerAddScrollVelocityRequestedEventArgsFactory* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIScrollControllerAddScrollVelocityRequestedEventArgsFactory* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* CreateInstance)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIScrollControllerAddScrollVelocityRequestedEventArgsFactory* This,
        FLOAT offsetVelocity,
        __x_ABI_C__FIReference_1_float* inertiaDecayRate,
        __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIScrollControllerAddScrollVelocityRequestedEventArgs** value);

        END_INTERFACE
    } __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIScrollControllerAddScrollVelocityRequestedEventArgsFactoryVtbl;

    interface __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIScrollControllerAddScrollVelocityRequestedEventArgsFactory
    {
        CONST_VTBL struct __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIScrollControllerAddScrollVelocityRequestedEventArgsFactoryVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIScrollControllerAddScrollVelocityRequestedEventArgsFactory;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIScrollControllerAddScrollVelocityRequestedEventArgsFactory_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIScrollControllerPanRequestedEventArgs_INTERFACE_DEFINED__)
    #define ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIScrollControllerPanRequestedEventArgs_INTERFACE_DEFINED__
    typedef struct __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIScrollControllerPanRequestedEventArgsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIScrollControllerPanRequestedEventArgs* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIScrollControllerPanRequestedEventArgs* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIScrollControllerPanRequestedEventArgs* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIScrollControllerPanRequestedEventArgs* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIScrollControllerPanRequestedEventArgs* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIScrollControllerPanRequestedEventArgs* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_PointerPoint)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIScrollControllerPanRequestedEventArgs* This,
        __x_ABI_CMicrosoft_CUI_CInput_CIPointerPoint** value);
    HRESULT (STDMETHODCALLTYPE* get_Handled)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIScrollControllerPanRequestedEventArgs* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* put_Handled)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIScrollControllerPanRequestedEventArgs* This,
        boolean value);

        END_INTERFACE
    } __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIScrollControllerPanRequestedEventArgsVtbl;

    interface __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIScrollControllerPanRequestedEventArgs
    {
        CONST_VTBL struct __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIScrollControllerPanRequestedEventArgsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIScrollControllerPanRequestedEventArgs;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIScrollControllerPanRequestedEventArgs_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIScrollControllerPanRequestedEventArgsFactory_INTERFACE_DEFINED__)
    #define ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIScrollControllerPanRequestedEventArgsFactory_INTERFACE_DEFINED__
    typedef struct __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIScrollControllerPanRequestedEventArgsFactoryVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIScrollControllerPanRequestedEventArgsFactory* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIScrollControllerPanRequestedEventArgsFactory* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIScrollControllerPanRequestedEventArgsFactory* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIScrollControllerPanRequestedEventArgsFactory* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIScrollControllerPanRequestedEventArgsFactory* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIScrollControllerPanRequestedEventArgsFactory* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* CreateInstance)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIScrollControllerPanRequestedEventArgsFactory* This,
        __x_ABI_CMicrosoft_CUI_CInput_CIPointerPoint* pointerPoint,
        __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIScrollControllerPanRequestedEventArgs** value);

        END_INTERFACE
    } __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIScrollControllerPanRequestedEventArgsFactoryVtbl;

    interface __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIScrollControllerPanRequestedEventArgsFactory
    {
        CONST_VTBL struct __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIScrollControllerPanRequestedEventArgsFactoryVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIScrollControllerPanRequestedEventArgsFactory;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIScrollControllerPanRequestedEventArgsFactory_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIScrollControllerPanningInfo_INTERFACE_DEFINED__)
    #define ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIScrollControllerPanningInfo_INTERFACE_DEFINED__
    typedef struct __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIScrollControllerPanningInfoVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIScrollControllerPanningInfo* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIScrollControllerPanningInfo* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIScrollControllerPanningInfo* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIScrollControllerPanningInfo* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIScrollControllerPanningInfo* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIScrollControllerPanningInfo* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_IsRailEnabled)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIScrollControllerPanningInfo* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* get_PanOrientation)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIScrollControllerPanningInfo* This,
        enum __x_ABI_CMicrosoft_CUI_CXaml_CControls_COrientation* value);
    HRESULT (STDMETHODCALLTYPE* get_PanningElementAncestor)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIScrollControllerPanningInfo* This,
        __x_ABI_CMicrosoft_CUI_CXaml_CIUIElement** value);
    HRESULT (STDMETHODCALLTYPE* SetPanningElementExpressionAnimationSources)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIScrollControllerPanningInfo* This,
        __x_ABI_CMicrosoft_CUI_CComposition_CICompositionPropertySet* propertySet,
        HSTRING minOffsetPropertyName,
        HSTRING maxOffsetPropertyName,
        HSTRING offsetPropertyName,
        HSTRING multiplierPropertyName);
    HRESULT (STDMETHODCALLTYPE* add_Changed)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIScrollControllerPanningInfo* This,
        __x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CUI__CXaml__CControls__CPrimitives__CIScrollControllerPanningInfo_IInspectable* handler,
        EventRegistrationToken* token);
    HRESULT (STDMETHODCALLTYPE* remove_Changed)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIScrollControllerPanningInfo* This,
        EventRegistrationToken token);
    HRESULT (STDMETHODCALLTYPE* add_PanRequested)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIScrollControllerPanningInfo* This,
        __x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CUI__CXaml__CControls__CPrimitives__CIScrollControllerPanningInfo___x_ABI_CMicrosoft__CUI__CXaml__CControls__CPrimitives__CScrollControllerPanRequestedEventArgs* handler,
        EventRegistrationToken* token);
    HRESULT (STDMETHODCALLTYPE* remove_PanRequested)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIScrollControllerPanningInfo* This,
        EventRegistrationToken token);

        END_INTERFACE
    } __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIScrollControllerPanningInfoVtbl;

    interface __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIScrollControllerPanningInfo
    {
        CONST_VTBL struct __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIScrollControllerPanningInfoVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIScrollControllerPanningInfo;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIScrollControllerPanningInfo_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIScrollControllerScrollByRequestedEventArgs_INTERFACE_DEFINED__)
    #define ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIScrollControllerScrollByRequestedEventArgs_INTERFACE_DEFINED__
    typedef struct __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIScrollControllerScrollByRequestedEventArgsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIScrollControllerScrollByRequestedEventArgs* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIScrollControllerScrollByRequestedEventArgs* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIScrollControllerScrollByRequestedEventArgs* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIScrollControllerScrollByRequestedEventArgs* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIScrollControllerScrollByRequestedEventArgs* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIScrollControllerScrollByRequestedEventArgs* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_OffsetDelta)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIScrollControllerScrollByRequestedEventArgs* This,
        DOUBLE* value);
    HRESULT (STDMETHODCALLTYPE* get_Options)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIScrollControllerScrollByRequestedEventArgs* This,
        __x_ABI_CMicrosoft_CUI_CXaml_CControls_CIScrollingScrollOptions** value);
    HRESULT (STDMETHODCALLTYPE* get_CorrelationId)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIScrollControllerScrollByRequestedEventArgs* This,
        INT32* value);
    HRESULT (STDMETHODCALLTYPE* put_CorrelationId)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIScrollControllerScrollByRequestedEventArgs* This,
        INT32 value);

        END_INTERFACE
    } __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIScrollControllerScrollByRequestedEventArgsVtbl;

    interface __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIScrollControllerScrollByRequestedEventArgs
    {
        CONST_VTBL struct __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIScrollControllerScrollByRequestedEventArgsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIScrollControllerScrollByRequestedEventArgs;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIScrollControllerScrollByRequestedEventArgs_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIScrollControllerScrollByRequestedEventArgsFactory_INTERFACE_DEFINED__)
    #define ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIScrollControllerScrollByRequestedEventArgsFactory_INTERFACE_DEFINED__
    typedef struct __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIScrollControllerScrollByRequestedEventArgsFactoryVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIScrollControllerScrollByRequestedEventArgsFactory* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIScrollControllerScrollByRequestedEventArgsFactory* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIScrollControllerScrollByRequestedEventArgsFactory* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIScrollControllerScrollByRequestedEventArgsFactory* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIScrollControllerScrollByRequestedEventArgsFactory* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIScrollControllerScrollByRequestedEventArgsFactory* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* CreateInstance)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIScrollControllerScrollByRequestedEventArgsFactory* This,
        DOUBLE offsetDelta,
        __x_ABI_CMicrosoft_CUI_CXaml_CControls_CIScrollingScrollOptions* options,
        __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIScrollControllerScrollByRequestedEventArgs** value);

        END_INTERFACE
    } __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIScrollControllerScrollByRequestedEventArgsFactoryVtbl;

    interface __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIScrollControllerScrollByRequestedEventArgsFactory
    {
        CONST_VTBL struct __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIScrollControllerScrollByRequestedEventArgsFactoryVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIScrollControllerScrollByRequestedEventArgsFactory;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIScrollControllerScrollByRequestedEventArgsFactory_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIScrollControllerScrollToRequestedEventArgs_INTERFACE_DEFINED__)
    #define ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIScrollControllerScrollToRequestedEventArgs_INTERFACE_DEFINED__
    typedef struct __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIScrollControllerScrollToRequestedEventArgsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIScrollControllerScrollToRequestedEventArgs* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIScrollControllerScrollToRequestedEventArgs* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIScrollControllerScrollToRequestedEventArgs* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIScrollControllerScrollToRequestedEventArgs* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIScrollControllerScrollToRequestedEventArgs* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIScrollControllerScrollToRequestedEventArgs* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Offset)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIScrollControllerScrollToRequestedEventArgs* This,
        DOUBLE* value);
    HRESULT (STDMETHODCALLTYPE* get_Options)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIScrollControllerScrollToRequestedEventArgs* This,
        __x_ABI_CMicrosoft_CUI_CXaml_CControls_CIScrollingScrollOptions** value);
    HRESULT (STDMETHODCALLTYPE* get_CorrelationId)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIScrollControllerScrollToRequestedEventArgs* This,
        INT32* value);
    HRESULT (STDMETHODCALLTYPE* put_CorrelationId)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIScrollControllerScrollToRequestedEventArgs* This,
        INT32 value);

        END_INTERFACE
    } __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIScrollControllerScrollToRequestedEventArgsVtbl;

    interface __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIScrollControllerScrollToRequestedEventArgs
    {
        CONST_VTBL struct __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIScrollControllerScrollToRequestedEventArgsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIScrollControllerScrollToRequestedEventArgs;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIScrollControllerScrollToRequestedEventArgs_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIScrollControllerScrollToRequestedEventArgsFactory_INTERFACE_DEFINED__)
    #define ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIScrollControllerScrollToRequestedEventArgsFactory_INTERFACE_DEFINED__
    typedef struct __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIScrollControllerScrollToRequestedEventArgsFactoryVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIScrollControllerScrollToRequestedEventArgsFactory* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIScrollControllerScrollToRequestedEventArgsFactory* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIScrollControllerScrollToRequestedEventArgsFactory* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIScrollControllerScrollToRequestedEventArgsFactory* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIScrollControllerScrollToRequestedEventArgsFactory* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIScrollControllerScrollToRequestedEventArgsFactory* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* CreateInstance)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIScrollControllerScrollToRequestedEventArgsFactory* This,
        DOUBLE offset,
        __x_ABI_CMicrosoft_CUI_CXaml_CControls_CIScrollingScrollOptions* options,
        __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIScrollControllerScrollToRequestedEventArgs** value);

        END_INTERFACE
    } __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIScrollControllerScrollToRequestedEventArgsFactoryVtbl;

    interface __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIScrollControllerScrollToRequestedEventArgsFactory
    {
        CONST_VTBL struct __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIScrollControllerScrollToRequestedEventArgsFactoryVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIScrollControllerScrollToRequestedEventArgsFactory;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIScrollControllerScrollToRequestedEventArgsFactory_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIScrollEventArgs_INTERFACE_DEFINED__)
    #define ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIScrollEventArgs_INTERFACE_DEFINED__
    typedef struct __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIScrollEventArgsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIScrollEventArgs* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIScrollEventArgs* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIScrollEventArgs* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIScrollEventArgs* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIScrollEventArgs* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIScrollEventArgs* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_NewValue)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIScrollEventArgs* This,
        DOUBLE* value);
    HRESULT (STDMETHODCALLTYPE* get_ScrollEventType)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIScrollEventArgs* This,
        enum __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CScrollEventType* value);

        END_INTERFACE
    } __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIScrollEventArgsVtbl;

    interface __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIScrollEventArgs
    {
        CONST_VTBL struct __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIScrollEventArgsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIScrollEventArgs;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIScrollEventArgs_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIScrollPresenter_INTERFACE_DEFINED__)
    #define ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIScrollPresenter_INTERFACE_DEFINED__
    typedef struct __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIScrollPresenterVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIScrollPresenter* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIScrollPresenter* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIScrollPresenter* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIScrollPresenter* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIScrollPresenter* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIScrollPresenter* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Background)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIScrollPresenter* This,
        __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIBrush** value);
    HRESULT (STDMETHODCALLTYPE* put_Background)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIScrollPresenter* This,
        __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIBrush* value);
    HRESULT (STDMETHODCALLTYPE* get_Content)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIScrollPresenter* This,
        __x_ABI_CMicrosoft_CUI_CXaml_CIUIElement** value);
    HRESULT (STDMETHODCALLTYPE* put_Content)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIScrollPresenter* This,
        __x_ABI_CMicrosoft_CUI_CXaml_CIUIElement* value);
    HRESULT (STDMETHODCALLTYPE* get_ExpressionAnimationSources)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIScrollPresenter* This,
        __x_ABI_CMicrosoft_CUI_CComposition_CICompositionPropertySet** value);
    HRESULT (STDMETHODCALLTYPE* get_HorizontalOffset)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIScrollPresenter* This,
        DOUBLE* value);
    HRESULT (STDMETHODCALLTYPE* get_VerticalOffset)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIScrollPresenter* This,
        DOUBLE* value);
    HRESULT (STDMETHODCALLTYPE* get_ZoomFactor)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIScrollPresenter* This,
        FLOAT* value);
    HRESULT (STDMETHODCALLTYPE* get_ExtentWidth)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIScrollPresenter* This,
        DOUBLE* value);
    HRESULT (STDMETHODCALLTYPE* get_ExtentHeight)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIScrollPresenter* This,
        DOUBLE* value);
    HRESULT (STDMETHODCALLTYPE* get_ViewportWidth)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIScrollPresenter* This,
        DOUBLE* value);
    HRESULT (STDMETHODCALLTYPE* get_ViewportHeight)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIScrollPresenter* This,
        DOUBLE* value);
    HRESULT (STDMETHODCALLTYPE* get_ScrollableWidth)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIScrollPresenter* This,
        DOUBLE* value);
    HRESULT (STDMETHODCALLTYPE* get_ScrollableHeight)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIScrollPresenter* This,
        DOUBLE* value);
    HRESULT (STDMETHODCALLTYPE* get_ContentOrientation)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIScrollPresenter* This,
        enum __x_ABI_CMicrosoft_CUI_CXaml_CControls_CScrollingContentOrientation* value);
    HRESULT (STDMETHODCALLTYPE* put_ContentOrientation)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIScrollPresenter* This,
        enum __x_ABI_CMicrosoft_CUI_CXaml_CControls_CScrollingContentOrientation value);
    HRESULT (STDMETHODCALLTYPE* get_HorizontalScrollChainMode)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIScrollPresenter* This,
        enum __x_ABI_CMicrosoft_CUI_CXaml_CControls_CScrollingChainMode* value);
    HRESULT (STDMETHODCALLTYPE* put_HorizontalScrollChainMode)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIScrollPresenter* This,
        enum __x_ABI_CMicrosoft_CUI_CXaml_CControls_CScrollingChainMode value);
    HRESULT (STDMETHODCALLTYPE* get_VerticalScrollChainMode)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIScrollPresenter* This,
        enum __x_ABI_CMicrosoft_CUI_CXaml_CControls_CScrollingChainMode* value);
    HRESULT (STDMETHODCALLTYPE* put_VerticalScrollChainMode)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIScrollPresenter* This,
        enum __x_ABI_CMicrosoft_CUI_CXaml_CControls_CScrollingChainMode value);
    HRESULT (STDMETHODCALLTYPE* get_HorizontalScrollRailMode)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIScrollPresenter* This,
        enum __x_ABI_CMicrosoft_CUI_CXaml_CControls_CScrollingRailMode* value);
    HRESULT (STDMETHODCALLTYPE* put_HorizontalScrollRailMode)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIScrollPresenter* This,
        enum __x_ABI_CMicrosoft_CUI_CXaml_CControls_CScrollingRailMode value);
    HRESULT (STDMETHODCALLTYPE* get_VerticalScrollRailMode)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIScrollPresenter* This,
        enum __x_ABI_CMicrosoft_CUI_CXaml_CControls_CScrollingRailMode* value);
    HRESULT (STDMETHODCALLTYPE* put_VerticalScrollRailMode)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIScrollPresenter* This,
        enum __x_ABI_CMicrosoft_CUI_CXaml_CControls_CScrollingRailMode value);
    HRESULT (STDMETHODCALLTYPE* get_HorizontalScrollMode)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIScrollPresenter* This,
        enum __x_ABI_CMicrosoft_CUI_CXaml_CControls_CScrollingScrollMode* value);
    HRESULT (STDMETHODCALLTYPE* put_HorizontalScrollMode)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIScrollPresenter* This,
        enum __x_ABI_CMicrosoft_CUI_CXaml_CControls_CScrollingScrollMode value);
    HRESULT (STDMETHODCALLTYPE* get_VerticalScrollMode)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIScrollPresenter* This,
        enum __x_ABI_CMicrosoft_CUI_CXaml_CControls_CScrollingScrollMode* value);
    HRESULT (STDMETHODCALLTYPE* put_VerticalScrollMode)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIScrollPresenter* This,
        enum __x_ABI_CMicrosoft_CUI_CXaml_CControls_CScrollingScrollMode value);
    HRESULT (STDMETHODCALLTYPE* get_ComputedHorizontalScrollMode)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIScrollPresenter* This,
        enum __x_ABI_CMicrosoft_CUI_CXaml_CControls_CScrollingScrollMode* value);
    HRESULT (STDMETHODCALLTYPE* get_ComputedVerticalScrollMode)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIScrollPresenter* This,
        enum __x_ABI_CMicrosoft_CUI_CXaml_CControls_CScrollingScrollMode* value);
    HRESULT (STDMETHODCALLTYPE* get_ZoomChainMode)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIScrollPresenter* This,
        enum __x_ABI_CMicrosoft_CUI_CXaml_CControls_CScrollingChainMode* value);
    HRESULT (STDMETHODCALLTYPE* put_ZoomChainMode)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIScrollPresenter* This,
        enum __x_ABI_CMicrosoft_CUI_CXaml_CControls_CScrollingChainMode value);
    HRESULT (STDMETHODCALLTYPE* get_ZoomMode)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIScrollPresenter* This,
        enum __x_ABI_CMicrosoft_CUI_CXaml_CControls_CScrollingZoomMode* value);
    HRESULT (STDMETHODCALLTYPE* put_ZoomMode)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIScrollPresenter* This,
        enum __x_ABI_CMicrosoft_CUI_CXaml_CControls_CScrollingZoomMode value);
    HRESULT (STDMETHODCALLTYPE* get_IgnoredInputKinds)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIScrollPresenter* This,
        enum __x_ABI_CMicrosoft_CUI_CXaml_CControls_CScrollingInputKinds* value);
    HRESULT (STDMETHODCALLTYPE* put_IgnoredInputKinds)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIScrollPresenter* This,
        enum __x_ABI_CMicrosoft_CUI_CXaml_CControls_CScrollingInputKinds value);
    HRESULT (STDMETHODCALLTYPE* get_MinZoomFactor)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIScrollPresenter* This,
        DOUBLE* value);
    HRESULT (STDMETHODCALLTYPE* put_MinZoomFactor)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIScrollPresenter* This,
        DOUBLE value);
    HRESULT (STDMETHODCALLTYPE* get_MaxZoomFactor)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIScrollPresenter* This,
        DOUBLE* value);
    HRESULT (STDMETHODCALLTYPE* put_MaxZoomFactor)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIScrollPresenter* This,
        DOUBLE value);
    HRESULT (STDMETHODCALLTYPE* get_State)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIScrollPresenter* This,
        enum __x_ABI_CMicrosoft_CUI_CXaml_CControls_CScrollingInteractionState* value);
    HRESULT (STDMETHODCALLTYPE* get_HorizontalScrollController)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIScrollPresenter* This,
        __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIScrollController** value);
    HRESULT (STDMETHODCALLTYPE* put_HorizontalScrollController)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIScrollPresenter* This,
        __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIScrollController* value);
    HRESULT (STDMETHODCALLTYPE* get_VerticalScrollController)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIScrollPresenter* This,
        __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIScrollController** value);
    HRESULT (STDMETHODCALLTYPE* put_VerticalScrollController)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIScrollPresenter* This,
        __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIScrollController* value);
    HRESULT (STDMETHODCALLTYPE* get_HorizontalAnchorRatio)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIScrollPresenter* This,
        DOUBLE* value);
    HRESULT (STDMETHODCALLTYPE* put_HorizontalAnchorRatio)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIScrollPresenter* This,
        DOUBLE value);
    HRESULT (STDMETHODCALLTYPE* get_VerticalAnchorRatio)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIScrollPresenter* This,
        DOUBLE* value);
    HRESULT (STDMETHODCALLTYPE* put_VerticalAnchorRatio)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIScrollPresenter* This,
        DOUBLE value);
    HRESULT (STDMETHODCALLTYPE* get_HorizontalSnapPoints)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIScrollPresenter* This,
        __x_ABI_C__FIVector_1___x_ABI_CMicrosoft__CUI__CXaml__CControls__CPrimitives__CScrollSnapPointBase** value);
    HRESULT (STDMETHODCALLTYPE* get_VerticalSnapPoints)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIScrollPresenter* This,
        __x_ABI_C__FIVector_1___x_ABI_CMicrosoft__CUI__CXaml__CControls__CPrimitives__CScrollSnapPointBase** value);
    HRESULT (STDMETHODCALLTYPE* get_ZoomSnapPoints)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIScrollPresenter* This,
        __x_ABI_C__FIVector_1___x_ABI_CMicrosoft__CUI__CXaml__CControls__CPrimitives__CZoomSnapPointBase** value);
    HRESULT (STDMETHODCALLTYPE* ScrollTo)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIScrollPresenter* This,
        DOUBLE horizontalOffset,
        DOUBLE verticalOffset,
        INT32* result);
    HRESULT (STDMETHODCALLTYPE* ScrollToWithOptions)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIScrollPresenter* This,
        DOUBLE horizontalOffset,
        DOUBLE verticalOffset,
        __x_ABI_CMicrosoft_CUI_CXaml_CControls_CIScrollingScrollOptions* options,
        INT32* result);
    HRESULT (STDMETHODCALLTYPE* ScrollBy)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIScrollPresenter* This,
        DOUBLE horizontalOffsetDelta,
        DOUBLE verticalOffsetDelta,
        INT32* result);
    HRESULT (STDMETHODCALLTYPE* ScrollByWithOptions)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIScrollPresenter* This,
        DOUBLE horizontalOffsetDelta,
        DOUBLE verticalOffsetDelta,
        __x_ABI_CMicrosoft_CUI_CXaml_CControls_CIScrollingScrollOptions* options,
        INT32* result);
    HRESULT (STDMETHODCALLTYPE* AddScrollVelocity)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIScrollPresenter* This,
        struct __x_ABI_CWindows_CFoundation_CNumerics_CVector2 offsetsVelocity,
        __x_ABI_C__FIReference_1___x_ABI_CWindows__CFoundation__CNumerics__CVector2* inertiaDecayRate,
        INT32* result);
    HRESULT (STDMETHODCALLTYPE* ZoomTo)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIScrollPresenter* This,
        FLOAT zoomFactor,
        __x_ABI_C__FIReference_1___x_ABI_CWindows__CFoundation__CNumerics__CVector2* centerPoint,
        INT32* result);
    HRESULT (STDMETHODCALLTYPE* ZoomToWithOptions)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIScrollPresenter* This,
        FLOAT zoomFactor,
        __x_ABI_C__FIReference_1___x_ABI_CWindows__CFoundation__CNumerics__CVector2* centerPoint,
        __x_ABI_CMicrosoft_CUI_CXaml_CControls_CIScrollingZoomOptions* options,
        INT32* result);
    HRESULT (STDMETHODCALLTYPE* ZoomBy)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIScrollPresenter* This,
        FLOAT zoomFactorDelta,
        __x_ABI_C__FIReference_1___x_ABI_CWindows__CFoundation__CNumerics__CVector2* centerPoint,
        INT32* result);
    HRESULT (STDMETHODCALLTYPE* ZoomByWithOptions)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIScrollPresenter* This,
        FLOAT zoomFactorDelta,
        __x_ABI_C__FIReference_1___x_ABI_CWindows__CFoundation__CNumerics__CVector2* centerPoint,
        __x_ABI_CMicrosoft_CUI_CXaml_CControls_CIScrollingZoomOptions* options,
        INT32* result);
    HRESULT (STDMETHODCALLTYPE* AddZoomVelocity)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIScrollPresenter* This,
        FLOAT zoomFactorVelocity,
        __x_ABI_C__FIReference_1___x_ABI_CWindows__CFoundation__CNumerics__CVector2* centerPoint,
        __x_ABI_C__FIReference_1_float* inertiaDecayRate,
        INT32* result);
    HRESULT (STDMETHODCALLTYPE* add_ExtentChanged)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIScrollPresenter* This,
        __x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CUI__CXaml__CControls__CPrimitives__CScrollPresenter_IInspectable* handler,
        EventRegistrationToken* token);
    HRESULT (STDMETHODCALLTYPE* remove_ExtentChanged)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIScrollPresenter* This,
        EventRegistrationToken token);
    HRESULT (STDMETHODCALLTYPE* add_StateChanged)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIScrollPresenter* This,
        __x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CUI__CXaml__CControls__CPrimitives__CScrollPresenter_IInspectable* handler,
        EventRegistrationToken* token);
    HRESULT (STDMETHODCALLTYPE* remove_StateChanged)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIScrollPresenter* This,
        EventRegistrationToken token);
    HRESULT (STDMETHODCALLTYPE* add_ViewChanged)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIScrollPresenter* This,
        __x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CUI__CXaml__CControls__CPrimitives__CScrollPresenter_IInspectable* handler,
        EventRegistrationToken* token);
    HRESULT (STDMETHODCALLTYPE* remove_ViewChanged)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIScrollPresenter* This,
        EventRegistrationToken token);
    HRESULT (STDMETHODCALLTYPE* add_ScrollAnimationStarting)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIScrollPresenter* This,
        __x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CUI__CXaml__CControls__CPrimitives__CScrollPresenter___x_ABI_CMicrosoft__CUI__CXaml__CControls__CScrollingScrollAnimationStartingEventArgs* handler,
        EventRegistrationToken* token);
    HRESULT (STDMETHODCALLTYPE* remove_ScrollAnimationStarting)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIScrollPresenter* This,
        EventRegistrationToken token);
    HRESULT (STDMETHODCALLTYPE* add_ZoomAnimationStarting)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIScrollPresenter* This,
        __x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CUI__CXaml__CControls__CPrimitives__CScrollPresenter___x_ABI_CMicrosoft__CUI__CXaml__CControls__CScrollingZoomAnimationStartingEventArgs* handler,
        EventRegistrationToken* token);
    HRESULT (STDMETHODCALLTYPE* remove_ZoomAnimationStarting)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIScrollPresenter* This,
        EventRegistrationToken token);
    HRESULT (STDMETHODCALLTYPE* add_ScrollCompleted)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIScrollPresenter* This,
        __x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CUI__CXaml__CControls__CPrimitives__CScrollPresenter___x_ABI_CMicrosoft__CUI__CXaml__CControls__CScrollingScrollCompletedEventArgs* handler,
        EventRegistrationToken* token);
    HRESULT (STDMETHODCALLTYPE* remove_ScrollCompleted)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIScrollPresenter* This,
        EventRegistrationToken token);
    HRESULT (STDMETHODCALLTYPE* add_ZoomCompleted)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIScrollPresenter* This,
        __x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CUI__CXaml__CControls__CPrimitives__CScrollPresenter___x_ABI_CMicrosoft__CUI__CXaml__CControls__CScrollingZoomCompletedEventArgs* handler,
        EventRegistrationToken* token);
    HRESULT (STDMETHODCALLTYPE* remove_ZoomCompleted)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIScrollPresenter* This,
        EventRegistrationToken token);
    HRESULT (STDMETHODCALLTYPE* add_BringingIntoView)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIScrollPresenter* This,
        __x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CUI__CXaml__CControls__CPrimitives__CScrollPresenter___x_ABI_CMicrosoft__CUI__CXaml__CControls__CScrollingBringingIntoViewEventArgs* handler,
        EventRegistrationToken* token);
    HRESULT (STDMETHODCALLTYPE* remove_BringingIntoView)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIScrollPresenter* This,
        EventRegistrationToken token);
    HRESULT (STDMETHODCALLTYPE* add_AnchorRequested)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIScrollPresenter* This,
        __x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CUI__CXaml__CControls__CPrimitives__CScrollPresenter___x_ABI_CMicrosoft__CUI__CXaml__CControls__CScrollingAnchorRequestedEventArgs* handler,
        EventRegistrationToken* token);
    HRESULT (STDMETHODCALLTYPE* remove_AnchorRequested)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIScrollPresenter* This,
        EventRegistrationToken token);

        END_INTERFACE
    } __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIScrollPresenterVtbl;

    interface __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIScrollPresenter
    {
        CONST_VTBL struct __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIScrollPresenterVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIScrollPresenter;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIScrollPresenter_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIScrollPresenterFactory_INTERFACE_DEFINED__)
    #define ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIScrollPresenterFactory_INTERFACE_DEFINED__
    typedef struct __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIScrollPresenterFactoryVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIScrollPresenterFactory* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIScrollPresenterFactory* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIScrollPresenterFactory* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIScrollPresenterFactory* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIScrollPresenterFactory* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIScrollPresenterFactory* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* CreateInstance)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIScrollPresenterFactory* This,
        IInspectable* baseInterface,
        IInspectable** innerInterface,
        __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIScrollPresenter** value);

        END_INTERFACE
    } __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIScrollPresenterFactoryVtbl;

    interface __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIScrollPresenterFactory
    {
        CONST_VTBL struct __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIScrollPresenterFactoryVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIScrollPresenterFactory;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIScrollPresenterFactory_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIScrollPresenterStatics_INTERFACE_DEFINED__)
    #define ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIScrollPresenterStatics_INTERFACE_DEFINED__
    typedef struct __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIScrollPresenterStaticsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIScrollPresenterStatics* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIScrollPresenterStatics* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIScrollPresenterStatics* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIScrollPresenterStatics* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIScrollPresenterStatics* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIScrollPresenterStatics* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_BackgroundProperty)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIScrollPresenterStatics* This,
        __x_ABI_CMicrosoft_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_ContentProperty)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIScrollPresenterStatics* This,
        __x_ABI_CMicrosoft_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_ContentOrientationProperty)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIScrollPresenterStatics* This,
        __x_ABI_CMicrosoft_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_HorizontalScrollChainModeProperty)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIScrollPresenterStatics* This,
        __x_ABI_CMicrosoft_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_VerticalScrollChainModeProperty)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIScrollPresenterStatics* This,
        __x_ABI_CMicrosoft_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_HorizontalScrollRailModeProperty)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIScrollPresenterStatics* This,
        __x_ABI_CMicrosoft_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_VerticalScrollRailModeProperty)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIScrollPresenterStatics* This,
        __x_ABI_CMicrosoft_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_HorizontalScrollModeProperty)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIScrollPresenterStatics* This,
        __x_ABI_CMicrosoft_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_VerticalScrollModeProperty)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIScrollPresenterStatics* This,
        __x_ABI_CMicrosoft_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_ComputedHorizontalScrollModeProperty)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIScrollPresenterStatics* This,
        __x_ABI_CMicrosoft_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_ComputedVerticalScrollModeProperty)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIScrollPresenterStatics* This,
        __x_ABI_CMicrosoft_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_ZoomChainModeProperty)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIScrollPresenterStatics* This,
        __x_ABI_CMicrosoft_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_ZoomModeProperty)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIScrollPresenterStatics* This,
        __x_ABI_CMicrosoft_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_IgnoredInputKindsProperty)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIScrollPresenterStatics* This,
        __x_ABI_CMicrosoft_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_MinZoomFactorProperty)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIScrollPresenterStatics* This,
        __x_ABI_CMicrosoft_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_MaxZoomFactorProperty)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIScrollPresenterStatics* This,
        __x_ABI_CMicrosoft_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_HorizontalAnchorRatioProperty)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIScrollPresenterStatics* This,
        __x_ABI_CMicrosoft_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_VerticalAnchorRatioProperty)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIScrollPresenterStatics* This,
        __x_ABI_CMicrosoft_CUI_CXaml_CIDependencyProperty** value);

        END_INTERFACE
    } __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIScrollPresenterStaticsVtbl;

    interface __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIScrollPresenterStatics
    {
        CONST_VTBL struct __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIScrollPresenterStaticsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIScrollPresenterStatics;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIScrollPresenterStatics_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIScrollSnapPoint_INTERFACE_DEFINED__)
    #define ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIScrollSnapPoint_INTERFACE_DEFINED__
    typedef struct __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIScrollSnapPointVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIScrollSnapPoint* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIScrollSnapPoint* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIScrollSnapPoint* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIScrollSnapPoint* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIScrollSnapPoint* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIScrollSnapPoint* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Value)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIScrollSnapPoint* This,
        DOUBLE* value);

        END_INTERFACE
    } __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIScrollSnapPointVtbl;

    interface __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIScrollSnapPoint
    {
        CONST_VTBL struct __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIScrollSnapPointVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIScrollSnapPoint;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIScrollSnapPoint_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIScrollSnapPointBase_INTERFACE_DEFINED__)
    #define ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIScrollSnapPointBase_INTERFACE_DEFINED__
    typedef struct __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIScrollSnapPointBaseVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIScrollSnapPointBase* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIScrollSnapPointBase* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIScrollSnapPointBase* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIScrollSnapPointBase* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIScrollSnapPointBase* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIScrollSnapPointBase* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Alignment)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIScrollSnapPointBase* This,
        enum __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CScrollSnapPointsAlignment* value);

        END_INTERFACE
    } __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIScrollSnapPointBaseVtbl;

    interface __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIScrollSnapPointBase
    {
        CONST_VTBL struct __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIScrollSnapPointBaseVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIScrollSnapPointBase;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIScrollSnapPointBase_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIScrollSnapPointBaseFactory_INTERFACE_DEFINED__)
    #define ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIScrollSnapPointBaseFactory_INTERFACE_DEFINED__
    typedef struct __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIScrollSnapPointBaseFactoryVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIScrollSnapPointBaseFactory* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIScrollSnapPointBaseFactory* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIScrollSnapPointBaseFactory* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIScrollSnapPointBaseFactory* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIScrollSnapPointBaseFactory* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIScrollSnapPointBaseFactory* This,
            TrustLevel* trustLevel);
    
        END_INTERFACE
    } __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIScrollSnapPointBaseFactoryVtbl;

    interface __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIScrollSnapPointBaseFactory
    {
        CONST_VTBL struct __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIScrollSnapPointBaseFactoryVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIScrollSnapPointBaseFactory;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIScrollSnapPointBaseFactory_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIScrollSnapPointFactory_INTERFACE_DEFINED__)
    #define ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIScrollSnapPointFactory_INTERFACE_DEFINED__
    typedef struct __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIScrollSnapPointFactoryVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIScrollSnapPointFactory* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIScrollSnapPointFactory* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIScrollSnapPointFactory* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIScrollSnapPointFactory* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIScrollSnapPointFactory* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIScrollSnapPointFactory* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* CreateInstance)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIScrollSnapPointFactory* This,
        DOUBLE snapPointValue,
        enum __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CScrollSnapPointsAlignment alignment,
        IInspectable* baseInterface,
        IInspectable** innerInterface,
        __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIScrollSnapPoint** value);

        END_INTERFACE
    } __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIScrollSnapPointFactoryVtbl;

    interface __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIScrollSnapPointFactory
    {
        CONST_VTBL struct __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIScrollSnapPointFactoryVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIScrollSnapPointFactory;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIScrollSnapPointFactory_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIScrollSnapPointsInfo_INTERFACE_DEFINED__)
    #define ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIScrollSnapPointsInfo_INTERFACE_DEFINED__
    typedef struct __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIScrollSnapPointsInfoVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIScrollSnapPointsInfo* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIScrollSnapPointsInfo* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIScrollSnapPointsInfo* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIScrollSnapPointsInfo* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIScrollSnapPointsInfo* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIScrollSnapPointsInfo* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_AreHorizontalSnapPointsRegular)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIScrollSnapPointsInfo* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* get_AreVerticalSnapPointsRegular)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIScrollSnapPointsInfo* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* add_HorizontalSnapPointsChanged)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIScrollSnapPointsInfo* This,
        __x_ABI_C__FIEventHandler_1_IInspectable* handler,
        EventRegistrationToken* token);
    HRESULT (STDMETHODCALLTYPE* remove_HorizontalSnapPointsChanged)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIScrollSnapPointsInfo* This,
        EventRegistrationToken token);
    HRESULT (STDMETHODCALLTYPE* add_VerticalSnapPointsChanged)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIScrollSnapPointsInfo* This,
        __x_ABI_C__FIEventHandler_1_IInspectable* handler,
        EventRegistrationToken* token);
    HRESULT (STDMETHODCALLTYPE* remove_VerticalSnapPointsChanged)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIScrollSnapPointsInfo* This,
        EventRegistrationToken token);
    HRESULT (STDMETHODCALLTYPE* GetIrregularSnapPoints)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIScrollSnapPointsInfo* This,
        enum __x_ABI_CMicrosoft_CUI_CXaml_CControls_COrientation orientation,
        enum __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CSnapPointsAlignment alignment,
        __x_ABI_C__FIVectorView_1_float** result);
    HRESULT (STDMETHODCALLTYPE* GetRegularSnapPoints)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIScrollSnapPointsInfo* This,
        enum __x_ABI_CMicrosoft_CUI_CXaml_CControls_COrientation orientation,
        enum __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CSnapPointsAlignment alignment,
        FLOAT* offset,
        FLOAT* returnValue);

        END_INTERFACE
    } __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIScrollSnapPointsInfoVtbl;

    interface __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIScrollSnapPointsInfo
    {
        CONST_VTBL struct __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIScrollSnapPointsInfoVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIScrollSnapPointsInfo;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIScrollSnapPointsInfo_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CISelector_INTERFACE_DEFINED__)
    #define ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CISelector_INTERFACE_DEFINED__
    typedef struct __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CISelectorVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CISelector* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CISelector* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CISelector* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CISelector* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CISelector* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CISelector* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_SelectedIndex)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CISelector* This,
        INT32* value);
    HRESULT (STDMETHODCALLTYPE* put_SelectedIndex)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CISelector* This,
        INT32 value);
    HRESULT (STDMETHODCALLTYPE* get_SelectedItem)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CISelector* This,
        IInspectable** value);
    HRESULT (STDMETHODCALLTYPE* put_SelectedItem)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CISelector* This,
        IInspectable* value);
    HRESULT (STDMETHODCALLTYPE* get_SelectedValue)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CISelector* This,
        IInspectable** value);
    HRESULT (STDMETHODCALLTYPE* put_SelectedValue)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CISelector* This,
        IInspectable* value);
    HRESULT (STDMETHODCALLTYPE* get_SelectedValuePath)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CISelector* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* put_SelectedValuePath)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CISelector* This,
        HSTRING value);
    HRESULT (STDMETHODCALLTYPE* get_IsSynchronizedWithCurrentItem)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CISelector* This,
        __x_ABI_C__FIReference_1_boolean** value);
    HRESULT (STDMETHODCALLTYPE* put_IsSynchronizedWithCurrentItem)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CISelector* This,
        __x_ABI_C__FIReference_1_boolean* value);
    HRESULT (STDMETHODCALLTYPE* add_SelectionChanged)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CISelector* This,
        __x_ABI_CMicrosoft_CUI_CXaml_CControls_CISelectionChangedEventHandler* handler,
        EventRegistrationToken* token);
    HRESULT (STDMETHODCALLTYPE* remove_SelectionChanged)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CISelector* This,
        EventRegistrationToken token);

        END_INTERFACE
    } __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CISelectorVtbl;

    interface __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CISelector
    {
        CONST_VTBL struct __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CISelectorVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CISelector;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CISelector_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CISelectorFactory_INTERFACE_DEFINED__)
    #define ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CISelectorFactory_INTERFACE_DEFINED__
    typedef struct __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CISelectorFactoryVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CISelectorFactory* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CISelectorFactory* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CISelectorFactory* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CISelectorFactory* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CISelectorFactory* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CISelectorFactory* This,
            TrustLevel* trustLevel);
    
        END_INTERFACE
    } __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CISelectorFactoryVtbl;

    interface __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CISelectorFactory
    {
        CONST_VTBL struct __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CISelectorFactoryVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CISelectorFactory;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CISelectorFactory_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CISelectorItem_INTERFACE_DEFINED__)
    #define ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CISelectorItem_INTERFACE_DEFINED__
    typedef struct __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CISelectorItemVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CISelectorItem* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CISelectorItem* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CISelectorItem* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CISelectorItem* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CISelectorItem* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CISelectorItem* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_IsSelected)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CISelectorItem* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* put_IsSelected)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CISelectorItem* This,
        boolean value);

        END_INTERFACE
    } __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CISelectorItemVtbl;

    interface __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CISelectorItem
    {
        CONST_VTBL struct __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CISelectorItemVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CISelectorItem;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CISelectorItem_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CISelectorItemFactory_INTERFACE_DEFINED__)
    #define ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CISelectorItemFactory_INTERFACE_DEFINED__
    typedef struct __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CISelectorItemFactoryVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CISelectorItemFactory* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CISelectorItemFactory* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CISelectorItemFactory* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CISelectorItemFactory* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CISelectorItemFactory* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CISelectorItemFactory* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* CreateInstance)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CISelectorItemFactory* This,
        IInspectable* baseInterface,
        IInspectable** innerInterface,
        __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CISelectorItem** value);

        END_INTERFACE
    } __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CISelectorItemFactoryVtbl;

    interface __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CISelectorItemFactory
    {
        CONST_VTBL struct __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CISelectorItemFactoryVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CISelectorItemFactory;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CISelectorItemFactory_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CISelectorItemStatics_INTERFACE_DEFINED__)
    #define ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CISelectorItemStatics_INTERFACE_DEFINED__
    typedef struct __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CISelectorItemStaticsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CISelectorItemStatics* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CISelectorItemStatics* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CISelectorItemStatics* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CISelectorItemStatics* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CISelectorItemStatics* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CISelectorItemStatics* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_IsSelectedProperty)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CISelectorItemStatics* This,
        __x_ABI_CMicrosoft_CUI_CXaml_CIDependencyProperty** value);

        END_INTERFACE
    } __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CISelectorItemStaticsVtbl;

    interface __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CISelectorItemStatics
    {
        CONST_VTBL struct __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CISelectorItemStaticsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CISelectorItemStatics;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CISelectorItemStatics_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CISelectorStatics_INTERFACE_DEFINED__)
    #define ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CISelectorStatics_INTERFACE_DEFINED__
    typedef struct __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CISelectorStaticsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CISelectorStatics* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CISelectorStatics* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CISelectorStatics* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CISelectorStatics* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CISelectorStatics* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CISelectorStatics* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_SelectedIndexProperty)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CISelectorStatics* This,
        __x_ABI_CMicrosoft_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_SelectedItemProperty)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CISelectorStatics* This,
        __x_ABI_CMicrosoft_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_SelectedValueProperty)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CISelectorStatics* This,
        __x_ABI_CMicrosoft_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_SelectedValuePathProperty)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CISelectorStatics* This,
        __x_ABI_CMicrosoft_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_IsSynchronizedWithCurrentItemProperty)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CISelectorStatics* This,
        __x_ABI_CMicrosoft_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* GetIsSelectionActive)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CISelectorStatics* This,
        __x_ABI_CMicrosoft_CUI_CXaml_CIDependencyObject* element,
        boolean* result);

        END_INTERFACE
    } __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CISelectorStaticsVtbl;

    interface __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CISelectorStatics
    {
        CONST_VTBL struct __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CISelectorStaticsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CISelectorStatics;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CISelectorStatics_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CISnapPointBase_INTERFACE_DEFINED__)
    #define ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CISnapPointBase_INTERFACE_DEFINED__
    typedef struct __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CISnapPointBaseVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CISnapPointBase* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CISnapPointBase* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CISnapPointBase* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CISnapPointBase* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CISnapPointBase* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CISnapPointBase* This,
            TrustLevel* trustLevel);
    
        END_INTERFACE
    } __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CISnapPointBaseVtbl;

    interface __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CISnapPointBase
    {
        CONST_VTBL struct __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CISnapPointBaseVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CISnapPointBase;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CISnapPointBase_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CISnapPointBaseFactory_INTERFACE_DEFINED__)
    #define ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CISnapPointBaseFactory_INTERFACE_DEFINED__
    typedef struct __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CISnapPointBaseFactoryVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CISnapPointBaseFactory* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CISnapPointBaseFactory* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CISnapPointBaseFactory* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CISnapPointBaseFactory* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CISnapPointBaseFactory* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CISnapPointBaseFactory* This,
            TrustLevel* trustLevel);
    
        END_INTERFACE
    } __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CISnapPointBaseFactoryVtbl;

    interface __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CISnapPointBaseFactory
    {
        CONST_VTBL struct __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CISnapPointBaseFactoryVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CISnapPointBaseFactory;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CISnapPointBaseFactory_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CISplitViewTemplateSettings_INTERFACE_DEFINED__)
    #define ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CISplitViewTemplateSettings_INTERFACE_DEFINED__
    typedef struct __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CISplitViewTemplateSettingsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CISplitViewTemplateSettings* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CISplitViewTemplateSettings* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CISplitViewTemplateSettings* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CISplitViewTemplateSettings* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CISplitViewTemplateSettings* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CISplitViewTemplateSettings* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_OpenPaneLength)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CISplitViewTemplateSettings* This,
        DOUBLE* value);
    HRESULT (STDMETHODCALLTYPE* get_NegativeOpenPaneLength)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CISplitViewTemplateSettings* This,
        DOUBLE* value);
    HRESULT (STDMETHODCALLTYPE* get_OpenPaneLengthMinusCompactLength)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CISplitViewTemplateSettings* This,
        DOUBLE* value);
    HRESULT (STDMETHODCALLTYPE* get_NegativeOpenPaneLengthMinusCompactLength)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CISplitViewTemplateSettings* This,
        DOUBLE* value);
    HRESULT (STDMETHODCALLTYPE* get_OpenPaneGridLength)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CISplitViewTemplateSettings* This,
        struct __x_ABI_CMicrosoft_CUI_CXaml_CGridLength* value);
    HRESULT (STDMETHODCALLTYPE* get_CompactPaneGridLength)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CISplitViewTemplateSettings* This,
        struct __x_ABI_CMicrosoft_CUI_CXaml_CGridLength* value);

        END_INTERFACE
    } __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CISplitViewTemplateSettingsVtbl;

    interface __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CISplitViewTemplateSettings
    {
        CONST_VTBL struct __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CISplitViewTemplateSettingsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CISplitViewTemplateSettings;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CISplitViewTemplateSettings_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CITabViewListView_INTERFACE_DEFINED__)
    #define ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CITabViewListView_INTERFACE_DEFINED__
    typedef struct __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CITabViewListViewVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CITabViewListView* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CITabViewListView* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CITabViewListView* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CITabViewListView* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CITabViewListView* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CITabViewListView* This,
            TrustLevel* trustLevel);
    
        END_INTERFACE
    } __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CITabViewListViewVtbl;

    interface __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CITabViewListView
    {
        CONST_VTBL struct __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CITabViewListViewVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CITabViewListView;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CITabViewListView_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CITabViewListViewFactory_INTERFACE_DEFINED__)
    #define ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CITabViewListViewFactory_INTERFACE_DEFINED__
    typedef struct __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CITabViewListViewFactoryVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CITabViewListViewFactory* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CITabViewListViewFactory* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CITabViewListViewFactory* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CITabViewListViewFactory* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CITabViewListViewFactory* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CITabViewListViewFactory* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* CreateInstance)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CITabViewListViewFactory* This,
        IInspectable* baseInterface,
        IInspectable** innerInterface,
        __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CITabViewListView** value);

        END_INTERFACE
    } __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CITabViewListViewFactoryVtbl;

    interface __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CITabViewListViewFactory
    {
        CONST_VTBL struct __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CITabViewListViewFactoryVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CITabViewListViewFactory;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CITabViewListViewFactory_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIThumb_INTERFACE_DEFINED__)
    #define ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIThumb_INTERFACE_DEFINED__
    typedef struct __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIThumbVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIThumb* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIThumb* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIThumb* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIThumb* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIThumb* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIThumb* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_IsDragging)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIThumb* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* add_DragStarted)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIThumb* This,
        __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIDragStartedEventHandler* handler,
        EventRegistrationToken* token);
    HRESULT (STDMETHODCALLTYPE* remove_DragStarted)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIThumb* This,
        EventRegistrationToken token);
    HRESULT (STDMETHODCALLTYPE* add_DragDelta)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIThumb* This,
        __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIDragDeltaEventHandler* handler,
        EventRegistrationToken* token);
    HRESULT (STDMETHODCALLTYPE* remove_DragDelta)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIThumb* This,
        EventRegistrationToken token);
    HRESULT (STDMETHODCALLTYPE* add_DragCompleted)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIThumb* This,
        __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIDragCompletedEventHandler* handler,
        EventRegistrationToken* token);
    HRESULT (STDMETHODCALLTYPE* remove_DragCompleted)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIThumb* This,
        EventRegistrationToken token);
    HRESULT (STDMETHODCALLTYPE* CancelDrag)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIThumb* This);

        END_INTERFACE
    } __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIThumbVtbl;

    interface __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIThumb
    {
        CONST_VTBL struct __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIThumbVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIThumb;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIThumb_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIThumbStatics_INTERFACE_DEFINED__)
    #define ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIThumbStatics_INTERFACE_DEFINED__
    typedef struct __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIThumbStaticsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIThumbStatics* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIThumbStatics* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIThumbStatics* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIThumbStatics* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIThumbStatics* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIThumbStatics* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_IsDraggingProperty)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIThumbStatics* This,
        __x_ABI_CMicrosoft_CUI_CXaml_CIDependencyProperty** value);

        END_INTERFACE
    } __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIThumbStaticsVtbl;

    interface __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIThumbStatics
    {
        CONST_VTBL struct __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIThumbStaticsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIThumbStatics;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIThumbStatics_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CITickBar_INTERFACE_DEFINED__)
    #define ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CITickBar_INTERFACE_DEFINED__
    typedef struct __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CITickBarVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CITickBar* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CITickBar* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CITickBar* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CITickBar* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CITickBar* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CITickBar* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Fill)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CITickBar* This,
        __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIBrush** value);
    HRESULT (STDMETHODCALLTYPE* put_Fill)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CITickBar* This,
        __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIBrush* value);

        END_INTERFACE
    } __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CITickBarVtbl;

    interface __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CITickBar
    {
        CONST_VTBL struct __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CITickBarVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CITickBar;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CITickBar_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CITickBarStatics_INTERFACE_DEFINED__)
    #define ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CITickBarStatics_INTERFACE_DEFINED__
    typedef struct __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CITickBarStaticsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CITickBarStatics* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CITickBarStatics* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CITickBarStatics* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CITickBarStatics* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CITickBarStatics* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CITickBarStatics* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_FillProperty)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CITickBarStatics* This,
        __x_ABI_CMicrosoft_CUI_CXaml_CIDependencyProperty** value);

        END_INTERFACE
    } __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CITickBarStaticsVtbl;

    interface __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CITickBarStatics
    {
        CONST_VTBL struct __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CITickBarStaticsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CITickBarStatics;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CITickBarStatics_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIToggleButton_INTERFACE_DEFINED__)
    #define ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIToggleButton_INTERFACE_DEFINED__
    typedef struct __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIToggleButtonVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIToggleButton* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIToggleButton* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIToggleButton* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIToggleButton* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIToggleButton* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIToggleButton* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_IsChecked)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIToggleButton* This,
        __x_ABI_C__FIReference_1_boolean** value);
    HRESULT (STDMETHODCALLTYPE* put_IsChecked)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIToggleButton* This,
        __x_ABI_C__FIReference_1_boolean* value);
    HRESULT (STDMETHODCALLTYPE* get_IsThreeState)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIToggleButton* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* put_IsThreeState)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIToggleButton* This,
        boolean value);
    HRESULT (STDMETHODCALLTYPE* add_Checked)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIToggleButton* This,
        __x_ABI_CMicrosoft_CUI_CXaml_CIRoutedEventHandler* handler,
        EventRegistrationToken* token);
    HRESULT (STDMETHODCALLTYPE* remove_Checked)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIToggleButton* This,
        EventRegistrationToken token);
    HRESULT (STDMETHODCALLTYPE* add_Unchecked)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIToggleButton* This,
        __x_ABI_CMicrosoft_CUI_CXaml_CIRoutedEventHandler* handler,
        EventRegistrationToken* token);
    HRESULT (STDMETHODCALLTYPE* remove_Unchecked)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIToggleButton* This,
        EventRegistrationToken token);
    HRESULT (STDMETHODCALLTYPE* add_Indeterminate)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIToggleButton* This,
        __x_ABI_CMicrosoft_CUI_CXaml_CIRoutedEventHandler* handler,
        EventRegistrationToken* token);
    HRESULT (STDMETHODCALLTYPE* remove_Indeterminate)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIToggleButton* This,
        EventRegistrationToken token);

        END_INTERFACE
    } __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIToggleButtonVtbl;

    interface __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIToggleButton
    {
        CONST_VTBL struct __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIToggleButtonVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIToggleButton;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIToggleButton_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIToggleButtonFactory_INTERFACE_DEFINED__)
    #define ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIToggleButtonFactory_INTERFACE_DEFINED__
    typedef struct __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIToggleButtonFactoryVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIToggleButtonFactory* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIToggleButtonFactory* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIToggleButtonFactory* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIToggleButtonFactory* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIToggleButtonFactory* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIToggleButtonFactory* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* CreateInstance)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIToggleButtonFactory* This,
        IInspectable* baseInterface,
        IInspectable** innerInterface,
        __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIToggleButton** value);

        END_INTERFACE
    } __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIToggleButtonFactoryVtbl;

    interface __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIToggleButtonFactory
    {
        CONST_VTBL struct __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIToggleButtonFactoryVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIToggleButtonFactory;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIToggleButtonFactory_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIToggleButtonOverrides_INTERFACE_DEFINED__)
    #define ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIToggleButtonOverrides_INTERFACE_DEFINED__
    typedef struct __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIToggleButtonOverridesVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIToggleButtonOverrides* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIToggleButtonOverrides* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIToggleButtonOverrides* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIToggleButtonOverrides* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIToggleButtonOverrides* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIToggleButtonOverrides* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* OnToggle)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIToggleButtonOverrides* This);

        END_INTERFACE
    } __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIToggleButtonOverridesVtbl;

    interface __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIToggleButtonOverrides
    {
        CONST_VTBL struct __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIToggleButtonOverridesVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIToggleButtonOverrides;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIToggleButtonOverrides_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIToggleButtonStatics_INTERFACE_DEFINED__)
    #define ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIToggleButtonStatics_INTERFACE_DEFINED__
    typedef struct __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIToggleButtonStaticsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIToggleButtonStatics* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIToggleButtonStatics* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIToggleButtonStatics* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIToggleButtonStatics* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIToggleButtonStatics* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIToggleButtonStatics* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_IsCheckedProperty)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIToggleButtonStatics* This,
        __x_ABI_CMicrosoft_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_IsThreeStateProperty)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIToggleButtonStatics* This,
        __x_ABI_CMicrosoft_CUI_CXaml_CIDependencyProperty** value);

        END_INTERFACE
    } __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIToggleButtonStaticsVtbl;

    interface __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIToggleButtonStatics
    {
        CONST_VTBL struct __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIToggleButtonStaticsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIToggleButtonStatics;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIToggleButtonStatics_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIToggleSwitchTemplateSettings_INTERFACE_DEFINED__)
    #define ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIToggleSwitchTemplateSettings_INTERFACE_DEFINED__
    typedef struct __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIToggleSwitchTemplateSettingsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIToggleSwitchTemplateSettings* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIToggleSwitchTemplateSettings* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIToggleSwitchTemplateSettings* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIToggleSwitchTemplateSettings* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIToggleSwitchTemplateSettings* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIToggleSwitchTemplateSettings* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_KnobCurrentToOnOffset)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIToggleSwitchTemplateSettings* This,
        DOUBLE* value);
    HRESULT (STDMETHODCALLTYPE* get_KnobCurrentToOffOffset)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIToggleSwitchTemplateSettings* This,
        DOUBLE* value);
    HRESULT (STDMETHODCALLTYPE* get_KnobOnToOffOffset)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIToggleSwitchTemplateSettings* This,
        DOUBLE* value);
    HRESULT (STDMETHODCALLTYPE* get_KnobOffToOnOffset)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIToggleSwitchTemplateSettings* This,
        DOUBLE* value);
    HRESULT (STDMETHODCALLTYPE* get_CurtainCurrentToOnOffset)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIToggleSwitchTemplateSettings* This,
        DOUBLE* value);
    HRESULT (STDMETHODCALLTYPE* get_CurtainCurrentToOffOffset)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIToggleSwitchTemplateSettings* This,
        DOUBLE* value);
    HRESULT (STDMETHODCALLTYPE* get_CurtainOnToOffOffset)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIToggleSwitchTemplateSettings* This,
        DOUBLE* value);
    HRESULT (STDMETHODCALLTYPE* get_CurtainOffToOnOffset)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIToggleSwitchTemplateSettings* This,
        DOUBLE* value);

        END_INTERFACE
    } __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIToggleSwitchTemplateSettingsVtbl;

    interface __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIToggleSwitchTemplateSettings
    {
        CONST_VTBL struct __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIToggleSwitchTemplateSettingsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIToggleSwitchTemplateSettings;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIToggleSwitchTemplateSettings_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIToolTipTemplateSettings_INTERFACE_DEFINED__)
    #define ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIToolTipTemplateSettings_INTERFACE_DEFINED__
    typedef struct __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIToolTipTemplateSettingsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIToolTipTemplateSettings* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIToolTipTemplateSettings* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIToolTipTemplateSettings* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIToolTipTemplateSettings* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIToolTipTemplateSettings* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIToolTipTemplateSettings* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_FromHorizontalOffset)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIToolTipTemplateSettings* This,
        DOUBLE* value);
    HRESULT (STDMETHODCALLTYPE* get_FromVerticalOffset)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIToolTipTemplateSettings* This,
        DOUBLE* value);

        END_INTERFACE
    } __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIToolTipTemplateSettingsVtbl;

    interface __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIToolTipTemplateSettings
    {
        CONST_VTBL struct __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIToolTipTemplateSettingsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIToolTipTemplateSettings;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIToolTipTemplateSettings_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIZoomSnapPoint_INTERFACE_DEFINED__)
    #define ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIZoomSnapPoint_INTERFACE_DEFINED__
    typedef struct __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIZoomSnapPointVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIZoomSnapPoint* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIZoomSnapPoint* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIZoomSnapPoint* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIZoomSnapPoint* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIZoomSnapPoint* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIZoomSnapPoint* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Value)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIZoomSnapPoint* This,
        DOUBLE* value);

        END_INTERFACE
    } __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIZoomSnapPointVtbl;

    interface __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIZoomSnapPoint
    {
        CONST_VTBL struct __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIZoomSnapPointVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIZoomSnapPoint;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIZoomSnapPoint_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIZoomSnapPointBase_INTERFACE_DEFINED__)
    #define ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIZoomSnapPointBase_INTERFACE_DEFINED__
    typedef struct __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIZoomSnapPointBaseVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIZoomSnapPointBase* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIZoomSnapPointBase* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIZoomSnapPointBase* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIZoomSnapPointBase* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIZoomSnapPointBase* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIZoomSnapPointBase* This,
            TrustLevel* trustLevel);
    
        END_INTERFACE
    } __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIZoomSnapPointBaseVtbl;

    interface __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIZoomSnapPointBase
    {
        CONST_VTBL struct __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIZoomSnapPointBaseVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIZoomSnapPointBase;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIZoomSnapPointBase_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIZoomSnapPointBaseFactory_INTERFACE_DEFINED__)
    #define ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIZoomSnapPointBaseFactory_INTERFACE_DEFINED__
    typedef struct __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIZoomSnapPointBaseFactoryVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIZoomSnapPointBaseFactory* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIZoomSnapPointBaseFactory* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIZoomSnapPointBaseFactory* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIZoomSnapPointBaseFactory* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIZoomSnapPointBaseFactory* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIZoomSnapPointBaseFactory* This,
            TrustLevel* trustLevel);
    
        END_INTERFACE
    } __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIZoomSnapPointBaseFactoryVtbl;

    interface __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIZoomSnapPointBaseFactory
    {
        CONST_VTBL struct __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIZoomSnapPointBaseFactoryVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIZoomSnapPointBaseFactory;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIZoomSnapPointBaseFactory_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIZoomSnapPointFactory_INTERFACE_DEFINED__)
    #define ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIZoomSnapPointFactory_INTERFACE_DEFINED__
    typedef struct __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIZoomSnapPointFactoryVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIZoomSnapPointFactory* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIZoomSnapPointFactory* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIZoomSnapPointFactory* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIZoomSnapPointFactory* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIZoomSnapPointFactory* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIZoomSnapPointFactory* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* CreateInstance)(__x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIZoomSnapPointFactory* This,
        DOUBLE snapPointValue,
        IInspectable* baseInterface,
        IInspectable** innerInterface,
        __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIZoomSnapPoint** value);

        END_INTERFACE
    } __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIZoomSnapPointFactoryVtbl;

    interface __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIZoomSnapPointFactory
    {
        CONST_VTBL struct __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIZoomSnapPointFactoryVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIZoomSnapPointFactory;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIZoomSnapPointFactory_INTERFACE_DEFINED__) */
    
