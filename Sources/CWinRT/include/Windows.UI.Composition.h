// WARNING: Please don't edit this file. It was generated by Swift/WinRT v0.0.1

#pragma once
// Header files for imported files
#include <inspectable.h>
#include <EventToken.h>
#include <windowscontracts.h>
#include "Windows.Foundation.h"
#include "Windows.Foundation.Numerics.h"
#include "Windows.Graphics.h"
#include "Windows.Graphics.DirectX.h"
#include "Windows.Graphics.Effects.h"
#include "Windows.System.h"
#include "Windows.UI.h"
#include "Windows.UI.Core.h"
// Importing Collections header
#include "Windows.Foundation.Collections.h"

/* Forward Declarations */
#ifndef ____x_ABI_CWindows_CUI_CComposition_CIAmbientLight_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CComposition_CIAmbientLight_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CComposition_CIAmbientLight __x_ABI_CWindows_CUI_CComposition_CIAmbientLight;

#endif // ____x_ABI_CWindows_CUI_CComposition_CIAmbientLight_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CComposition_CIAmbientLight2_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CComposition_CIAmbientLight2_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CComposition_CIAmbientLight2 __x_ABI_CWindows_CUI_CComposition_CIAmbientLight2;

#endif // ____x_ABI_CWindows_CUI_CComposition_CIAmbientLight2_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CComposition_CIAnimationController_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CComposition_CIAnimationController_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CComposition_CIAnimationController __x_ABI_CWindows_CUI_CComposition_CIAnimationController;

#endif // ____x_ABI_CWindows_CUI_CComposition_CIAnimationController_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CComposition_CIAnimationControllerStatics_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CComposition_CIAnimationControllerStatics_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CComposition_CIAnimationControllerStatics __x_ABI_CWindows_CUI_CComposition_CIAnimationControllerStatics;

#endif // ____x_ABI_CWindows_CUI_CComposition_CIAnimationControllerStatics_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CComposition_CIAnimationObject_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CComposition_CIAnimationObject_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CComposition_CIAnimationObject __x_ABI_CWindows_CUI_CComposition_CIAnimationObject;

#endif // ____x_ABI_CWindows_CUI_CComposition_CIAnimationObject_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CComposition_CIAnimationPropertyInfo_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CComposition_CIAnimationPropertyInfo_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CComposition_CIAnimationPropertyInfo __x_ABI_CWindows_CUI_CComposition_CIAnimationPropertyInfo;

#endif // ____x_ABI_CWindows_CUI_CComposition_CIAnimationPropertyInfo_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CComposition_CIBooleanKeyFrameAnimation_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CComposition_CIBooleanKeyFrameAnimation_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CComposition_CIBooleanKeyFrameAnimation __x_ABI_CWindows_CUI_CComposition_CIBooleanKeyFrameAnimation;

#endif // ____x_ABI_CWindows_CUI_CComposition_CIBooleanKeyFrameAnimation_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CComposition_CIBounceScalarNaturalMotionAnimation_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CComposition_CIBounceScalarNaturalMotionAnimation_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CComposition_CIBounceScalarNaturalMotionAnimation __x_ABI_CWindows_CUI_CComposition_CIBounceScalarNaturalMotionAnimation;

#endif // ____x_ABI_CWindows_CUI_CComposition_CIBounceScalarNaturalMotionAnimation_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CComposition_CIBounceVector2NaturalMotionAnimation_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CComposition_CIBounceVector2NaturalMotionAnimation_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CComposition_CIBounceVector2NaturalMotionAnimation __x_ABI_CWindows_CUI_CComposition_CIBounceVector2NaturalMotionAnimation;

#endif // ____x_ABI_CWindows_CUI_CComposition_CIBounceVector2NaturalMotionAnimation_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CComposition_CIBounceVector3NaturalMotionAnimation_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CComposition_CIBounceVector3NaturalMotionAnimation_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CComposition_CIBounceVector3NaturalMotionAnimation __x_ABI_CWindows_CUI_CComposition_CIBounceVector3NaturalMotionAnimation;

#endif // ____x_ABI_CWindows_CUI_CComposition_CIBounceVector3NaturalMotionAnimation_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CComposition_CIColorKeyFrameAnimation_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CComposition_CIColorKeyFrameAnimation_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CComposition_CIColorKeyFrameAnimation __x_ABI_CWindows_CUI_CComposition_CIColorKeyFrameAnimation;

#endif // ____x_ABI_CWindows_CUI_CComposition_CIColorKeyFrameAnimation_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CComposition_CICompositionAnimation_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CComposition_CICompositionAnimation_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CComposition_CICompositionAnimation __x_ABI_CWindows_CUI_CComposition_CICompositionAnimation;

#endif // ____x_ABI_CWindows_CUI_CComposition_CICompositionAnimation_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CComposition_CICompositionAnimation2_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CComposition_CICompositionAnimation2_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CComposition_CICompositionAnimation2 __x_ABI_CWindows_CUI_CComposition_CICompositionAnimation2;

#endif // ____x_ABI_CWindows_CUI_CComposition_CICompositionAnimation2_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CComposition_CICompositionAnimation3_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CComposition_CICompositionAnimation3_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CComposition_CICompositionAnimation3 __x_ABI_CWindows_CUI_CComposition_CICompositionAnimation3;

#endif // ____x_ABI_CWindows_CUI_CComposition_CICompositionAnimation3_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CComposition_CICompositionAnimation4_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CComposition_CICompositionAnimation4_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CComposition_CICompositionAnimation4 __x_ABI_CWindows_CUI_CComposition_CICompositionAnimation4;

#endif // ____x_ABI_CWindows_CUI_CComposition_CICompositionAnimation4_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CComposition_CICompositionAnimationBase_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CComposition_CICompositionAnimationBase_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CComposition_CICompositionAnimationBase __x_ABI_CWindows_CUI_CComposition_CICompositionAnimationBase;

#endif // ____x_ABI_CWindows_CUI_CComposition_CICompositionAnimationBase_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CComposition_CICompositionAnimationFactory_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CComposition_CICompositionAnimationFactory_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CComposition_CICompositionAnimationFactory __x_ABI_CWindows_CUI_CComposition_CICompositionAnimationFactory;

#endif // ____x_ABI_CWindows_CUI_CComposition_CICompositionAnimationFactory_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CComposition_CICompositionAnimationGroup_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CComposition_CICompositionAnimationGroup_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CComposition_CICompositionAnimationGroup __x_ABI_CWindows_CUI_CComposition_CICompositionAnimationGroup;

#endif // ____x_ABI_CWindows_CUI_CComposition_CICompositionAnimationGroup_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CComposition_CICompositionBackdropBrush_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CComposition_CICompositionBackdropBrush_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CComposition_CICompositionBackdropBrush __x_ABI_CWindows_CUI_CComposition_CICompositionBackdropBrush;

#endif // ____x_ABI_CWindows_CUI_CComposition_CICompositionBackdropBrush_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CComposition_CICompositionBatchCompletedEventArgs_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CComposition_CICompositionBatchCompletedEventArgs_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CComposition_CICompositionBatchCompletedEventArgs __x_ABI_CWindows_CUI_CComposition_CICompositionBatchCompletedEventArgs;

#endif // ____x_ABI_CWindows_CUI_CComposition_CICompositionBatchCompletedEventArgs_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CComposition_CICompositionBrush_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CComposition_CICompositionBrush_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CComposition_CICompositionBrush __x_ABI_CWindows_CUI_CComposition_CICompositionBrush;

#endif // ____x_ABI_CWindows_CUI_CComposition_CICompositionBrush_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CComposition_CICompositionBrushFactory_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CComposition_CICompositionBrushFactory_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CComposition_CICompositionBrushFactory __x_ABI_CWindows_CUI_CComposition_CICompositionBrushFactory;

#endif // ____x_ABI_CWindows_CUI_CComposition_CICompositionBrushFactory_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CComposition_CICompositionCapabilities_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CComposition_CICompositionCapabilities_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CComposition_CICompositionCapabilities __x_ABI_CWindows_CUI_CComposition_CICompositionCapabilities;

#endif // ____x_ABI_CWindows_CUI_CComposition_CICompositionCapabilities_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CComposition_CICompositionCapabilitiesStatics_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CComposition_CICompositionCapabilitiesStatics_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CComposition_CICompositionCapabilitiesStatics __x_ABI_CWindows_CUI_CComposition_CICompositionCapabilitiesStatics;

#endif // ____x_ABI_CWindows_CUI_CComposition_CICompositionCapabilitiesStatics_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CComposition_CICompositionClip_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CComposition_CICompositionClip_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CComposition_CICompositionClip __x_ABI_CWindows_CUI_CComposition_CICompositionClip;

#endif // ____x_ABI_CWindows_CUI_CComposition_CICompositionClip_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CComposition_CICompositionClip2_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CComposition_CICompositionClip2_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CComposition_CICompositionClip2 __x_ABI_CWindows_CUI_CComposition_CICompositionClip2;

#endif // ____x_ABI_CWindows_CUI_CComposition_CICompositionClip2_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CComposition_CICompositionClipFactory_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CComposition_CICompositionClipFactory_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CComposition_CICompositionClipFactory __x_ABI_CWindows_CUI_CComposition_CICompositionClipFactory;

#endif // ____x_ABI_CWindows_CUI_CComposition_CICompositionClipFactory_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CComposition_CICompositionColorBrush_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CComposition_CICompositionColorBrush_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CComposition_CICompositionColorBrush __x_ABI_CWindows_CUI_CComposition_CICompositionColorBrush;

#endif // ____x_ABI_CWindows_CUI_CComposition_CICompositionColorBrush_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CComposition_CICompositionColorGradientStop_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CComposition_CICompositionColorGradientStop_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CComposition_CICompositionColorGradientStop __x_ABI_CWindows_CUI_CComposition_CICompositionColorGradientStop;

#endif // ____x_ABI_CWindows_CUI_CComposition_CICompositionColorGradientStop_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CComposition_CICompositionColorGradientStopCollection_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CComposition_CICompositionColorGradientStopCollection_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CComposition_CICompositionColorGradientStopCollection __x_ABI_CWindows_CUI_CComposition_CICompositionColorGradientStopCollection;

#endif // ____x_ABI_CWindows_CUI_CComposition_CICompositionColorGradientStopCollection_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CComposition_CICompositionCommitBatch_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CComposition_CICompositionCommitBatch_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CComposition_CICompositionCommitBatch __x_ABI_CWindows_CUI_CComposition_CICompositionCommitBatch;

#endif // ____x_ABI_CWindows_CUI_CComposition_CICompositionCommitBatch_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CComposition_CICompositionContainerShape_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CComposition_CICompositionContainerShape_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CComposition_CICompositionContainerShape __x_ABI_CWindows_CUI_CComposition_CICompositionContainerShape;

#endif // ____x_ABI_CWindows_CUI_CComposition_CICompositionContainerShape_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CComposition_CICompositionDrawingSurface_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CComposition_CICompositionDrawingSurface_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CComposition_CICompositionDrawingSurface __x_ABI_CWindows_CUI_CComposition_CICompositionDrawingSurface;

#endif // ____x_ABI_CWindows_CUI_CComposition_CICompositionDrawingSurface_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CComposition_CICompositionDrawingSurface2_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CComposition_CICompositionDrawingSurface2_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CComposition_CICompositionDrawingSurface2 __x_ABI_CWindows_CUI_CComposition_CICompositionDrawingSurface2;

#endif // ____x_ABI_CWindows_CUI_CComposition_CICompositionDrawingSurface2_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CComposition_CICompositionDrawingSurfaceFactory_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CComposition_CICompositionDrawingSurfaceFactory_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CComposition_CICompositionDrawingSurfaceFactory __x_ABI_CWindows_CUI_CComposition_CICompositionDrawingSurfaceFactory;

#endif // ____x_ABI_CWindows_CUI_CComposition_CICompositionDrawingSurfaceFactory_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CComposition_CICompositionEasingFunction_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CComposition_CICompositionEasingFunction_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CComposition_CICompositionEasingFunction __x_ABI_CWindows_CUI_CComposition_CICompositionEasingFunction;

#endif // ____x_ABI_CWindows_CUI_CComposition_CICompositionEasingFunction_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CComposition_CICompositionEasingFunctionFactory_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CComposition_CICompositionEasingFunctionFactory_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CComposition_CICompositionEasingFunctionFactory __x_ABI_CWindows_CUI_CComposition_CICompositionEasingFunctionFactory;

#endif // ____x_ABI_CWindows_CUI_CComposition_CICompositionEasingFunctionFactory_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CComposition_CICompositionEffectBrush_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CComposition_CICompositionEffectBrush_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CComposition_CICompositionEffectBrush __x_ABI_CWindows_CUI_CComposition_CICompositionEffectBrush;

#endif // ____x_ABI_CWindows_CUI_CComposition_CICompositionEffectBrush_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CComposition_CICompositionEffectFactory_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CComposition_CICompositionEffectFactory_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CComposition_CICompositionEffectFactory __x_ABI_CWindows_CUI_CComposition_CICompositionEffectFactory;

#endif // ____x_ABI_CWindows_CUI_CComposition_CICompositionEffectFactory_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CComposition_CICompositionEffectSourceParameter_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CComposition_CICompositionEffectSourceParameter_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CComposition_CICompositionEffectSourceParameter __x_ABI_CWindows_CUI_CComposition_CICompositionEffectSourceParameter;

#endif // ____x_ABI_CWindows_CUI_CComposition_CICompositionEffectSourceParameter_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CComposition_CICompositionEffectSourceParameterFactory_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CComposition_CICompositionEffectSourceParameterFactory_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CComposition_CICompositionEffectSourceParameterFactory __x_ABI_CWindows_CUI_CComposition_CICompositionEffectSourceParameterFactory;

#endif // ____x_ABI_CWindows_CUI_CComposition_CICompositionEffectSourceParameterFactory_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CComposition_CICompositionEllipseGeometry_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CComposition_CICompositionEllipseGeometry_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CComposition_CICompositionEllipseGeometry __x_ABI_CWindows_CUI_CComposition_CICompositionEllipseGeometry;

#endif // ____x_ABI_CWindows_CUI_CComposition_CICompositionEllipseGeometry_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CComposition_CICompositionGeometricClip_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CComposition_CICompositionGeometricClip_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CComposition_CICompositionGeometricClip __x_ABI_CWindows_CUI_CComposition_CICompositionGeometricClip;

#endif // ____x_ABI_CWindows_CUI_CComposition_CICompositionGeometricClip_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CComposition_CICompositionGeometry_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CComposition_CICompositionGeometry_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CComposition_CICompositionGeometry __x_ABI_CWindows_CUI_CComposition_CICompositionGeometry;

#endif // ____x_ABI_CWindows_CUI_CComposition_CICompositionGeometry_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CComposition_CICompositionGeometryFactory_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CComposition_CICompositionGeometryFactory_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CComposition_CICompositionGeometryFactory __x_ABI_CWindows_CUI_CComposition_CICompositionGeometryFactory;

#endif // ____x_ABI_CWindows_CUI_CComposition_CICompositionGeometryFactory_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CComposition_CICompositionGradientBrush_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CComposition_CICompositionGradientBrush_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CComposition_CICompositionGradientBrush __x_ABI_CWindows_CUI_CComposition_CICompositionGradientBrush;

#endif // ____x_ABI_CWindows_CUI_CComposition_CICompositionGradientBrush_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CComposition_CICompositionGradientBrush2_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CComposition_CICompositionGradientBrush2_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CComposition_CICompositionGradientBrush2 __x_ABI_CWindows_CUI_CComposition_CICompositionGradientBrush2;

#endif // ____x_ABI_CWindows_CUI_CComposition_CICompositionGradientBrush2_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CComposition_CICompositionGradientBrushFactory_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CComposition_CICompositionGradientBrushFactory_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CComposition_CICompositionGradientBrushFactory __x_ABI_CWindows_CUI_CComposition_CICompositionGradientBrushFactory;

#endif // ____x_ABI_CWindows_CUI_CComposition_CICompositionGradientBrushFactory_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CComposition_CICompositionGraphicsDevice_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CComposition_CICompositionGraphicsDevice_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CComposition_CICompositionGraphicsDevice __x_ABI_CWindows_CUI_CComposition_CICompositionGraphicsDevice;

#endif // ____x_ABI_CWindows_CUI_CComposition_CICompositionGraphicsDevice_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CComposition_CICompositionGraphicsDevice2_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CComposition_CICompositionGraphicsDevice2_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CComposition_CICompositionGraphicsDevice2 __x_ABI_CWindows_CUI_CComposition_CICompositionGraphicsDevice2;

#endif // ____x_ABI_CWindows_CUI_CComposition_CICompositionGraphicsDevice2_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CComposition_CICompositionGraphicsDevice3_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CComposition_CICompositionGraphicsDevice3_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CComposition_CICompositionGraphicsDevice3 __x_ABI_CWindows_CUI_CComposition_CICompositionGraphicsDevice3;

#endif // ____x_ABI_CWindows_CUI_CComposition_CICompositionGraphicsDevice3_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CComposition_CICompositionLight_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CComposition_CICompositionLight_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CComposition_CICompositionLight __x_ABI_CWindows_CUI_CComposition_CICompositionLight;

#endif // ____x_ABI_CWindows_CUI_CComposition_CICompositionLight_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CComposition_CICompositionLight2_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CComposition_CICompositionLight2_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CComposition_CICompositionLight2 __x_ABI_CWindows_CUI_CComposition_CICompositionLight2;

#endif // ____x_ABI_CWindows_CUI_CComposition_CICompositionLight2_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CComposition_CICompositionLight3_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CComposition_CICompositionLight3_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CComposition_CICompositionLight3 __x_ABI_CWindows_CUI_CComposition_CICompositionLight3;

#endif // ____x_ABI_CWindows_CUI_CComposition_CICompositionLight3_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CComposition_CICompositionLightFactory_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CComposition_CICompositionLightFactory_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CComposition_CICompositionLightFactory __x_ABI_CWindows_CUI_CComposition_CICompositionLightFactory;

#endif // ____x_ABI_CWindows_CUI_CComposition_CICompositionLightFactory_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CComposition_CICompositionLineGeometry_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CComposition_CICompositionLineGeometry_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CComposition_CICompositionLineGeometry __x_ABI_CWindows_CUI_CComposition_CICompositionLineGeometry;

#endif // ____x_ABI_CWindows_CUI_CComposition_CICompositionLineGeometry_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CComposition_CICompositionLinearGradientBrush_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CComposition_CICompositionLinearGradientBrush_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CComposition_CICompositionLinearGradientBrush __x_ABI_CWindows_CUI_CComposition_CICompositionLinearGradientBrush;

#endif // ____x_ABI_CWindows_CUI_CComposition_CICompositionLinearGradientBrush_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CComposition_CICompositionMaskBrush_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CComposition_CICompositionMaskBrush_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CComposition_CICompositionMaskBrush __x_ABI_CWindows_CUI_CComposition_CICompositionMaskBrush;

#endif // ____x_ABI_CWindows_CUI_CComposition_CICompositionMaskBrush_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CComposition_CICompositionMipmapSurface_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CComposition_CICompositionMipmapSurface_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CComposition_CICompositionMipmapSurface __x_ABI_CWindows_CUI_CComposition_CICompositionMipmapSurface;

#endif // ____x_ABI_CWindows_CUI_CComposition_CICompositionMipmapSurface_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CComposition_CICompositionNineGridBrush_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CComposition_CICompositionNineGridBrush_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CComposition_CICompositionNineGridBrush __x_ABI_CWindows_CUI_CComposition_CICompositionNineGridBrush;

#endif // ____x_ABI_CWindows_CUI_CComposition_CICompositionNineGridBrush_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CComposition_CICompositionObject_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CComposition_CICompositionObject_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CComposition_CICompositionObject __x_ABI_CWindows_CUI_CComposition_CICompositionObject;

#endif // ____x_ABI_CWindows_CUI_CComposition_CICompositionObject_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CComposition_CICompositionObject2_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CComposition_CICompositionObject2_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CComposition_CICompositionObject2 __x_ABI_CWindows_CUI_CComposition_CICompositionObject2;

#endif // ____x_ABI_CWindows_CUI_CComposition_CICompositionObject2_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CComposition_CICompositionObject3_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CComposition_CICompositionObject3_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CComposition_CICompositionObject3 __x_ABI_CWindows_CUI_CComposition_CICompositionObject3;

#endif // ____x_ABI_CWindows_CUI_CComposition_CICompositionObject3_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CComposition_CICompositionObject4_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CComposition_CICompositionObject4_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CComposition_CICompositionObject4 __x_ABI_CWindows_CUI_CComposition_CICompositionObject4;

#endif // ____x_ABI_CWindows_CUI_CComposition_CICompositionObject4_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CComposition_CICompositionObjectFactory_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CComposition_CICompositionObjectFactory_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CComposition_CICompositionObjectFactory __x_ABI_CWindows_CUI_CComposition_CICompositionObjectFactory;

#endif // ____x_ABI_CWindows_CUI_CComposition_CICompositionObjectFactory_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CComposition_CICompositionObjectStatics_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CComposition_CICompositionObjectStatics_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CComposition_CICompositionObjectStatics __x_ABI_CWindows_CUI_CComposition_CICompositionObjectStatics;

#endif // ____x_ABI_CWindows_CUI_CComposition_CICompositionObjectStatics_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CComposition_CICompositionPath_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CComposition_CICompositionPath_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CComposition_CICompositionPath __x_ABI_CWindows_CUI_CComposition_CICompositionPath;

#endif // ____x_ABI_CWindows_CUI_CComposition_CICompositionPath_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CComposition_CICompositionPathFactory_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CComposition_CICompositionPathFactory_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CComposition_CICompositionPathFactory __x_ABI_CWindows_CUI_CComposition_CICompositionPathFactory;

#endif // ____x_ABI_CWindows_CUI_CComposition_CICompositionPathFactory_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CComposition_CICompositionPathGeometry_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CComposition_CICompositionPathGeometry_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CComposition_CICompositionPathGeometry __x_ABI_CWindows_CUI_CComposition_CICompositionPathGeometry;

#endif // ____x_ABI_CWindows_CUI_CComposition_CICompositionPathGeometry_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CComposition_CICompositionProjectedShadow_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CComposition_CICompositionProjectedShadow_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CComposition_CICompositionProjectedShadow __x_ABI_CWindows_CUI_CComposition_CICompositionProjectedShadow;

#endif // ____x_ABI_CWindows_CUI_CComposition_CICompositionProjectedShadow_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CComposition_CICompositionProjectedShadowCaster_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CComposition_CICompositionProjectedShadowCaster_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CComposition_CICompositionProjectedShadowCaster __x_ABI_CWindows_CUI_CComposition_CICompositionProjectedShadowCaster;

#endif // ____x_ABI_CWindows_CUI_CComposition_CICompositionProjectedShadowCaster_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CComposition_CICompositionProjectedShadowCasterCollection_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CComposition_CICompositionProjectedShadowCasterCollection_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CComposition_CICompositionProjectedShadowCasterCollection __x_ABI_CWindows_CUI_CComposition_CICompositionProjectedShadowCasterCollection;

#endif // ____x_ABI_CWindows_CUI_CComposition_CICompositionProjectedShadowCasterCollection_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CComposition_CICompositionProjectedShadowCasterCollectionStatics_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CComposition_CICompositionProjectedShadowCasterCollectionStatics_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CComposition_CICompositionProjectedShadowCasterCollectionStatics __x_ABI_CWindows_CUI_CComposition_CICompositionProjectedShadowCasterCollectionStatics;

#endif // ____x_ABI_CWindows_CUI_CComposition_CICompositionProjectedShadowCasterCollectionStatics_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CComposition_CICompositionProjectedShadowReceiver_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CComposition_CICompositionProjectedShadowReceiver_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CComposition_CICompositionProjectedShadowReceiver __x_ABI_CWindows_CUI_CComposition_CICompositionProjectedShadowReceiver;

#endif // ____x_ABI_CWindows_CUI_CComposition_CICompositionProjectedShadowReceiver_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CComposition_CICompositionProjectedShadowReceiverUnorderedCollection_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CComposition_CICompositionProjectedShadowReceiverUnorderedCollection_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CComposition_CICompositionProjectedShadowReceiverUnorderedCollection __x_ABI_CWindows_CUI_CComposition_CICompositionProjectedShadowReceiverUnorderedCollection;

#endif // ____x_ABI_CWindows_CUI_CComposition_CICompositionProjectedShadowReceiverUnorderedCollection_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CComposition_CICompositionPropertySet_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CComposition_CICompositionPropertySet_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CComposition_CICompositionPropertySet __x_ABI_CWindows_CUI_CComposition_CICompositionPropertySet;

#endif // ____x_ABI_CWindows_CUI_CComposition_CICompositionPropertySet_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CComposition_CICompositionPropertySet2_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CComposition_CICompositionPropertySet2_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CComposition_CICompositionPropertySet2 __x_ABI_CWindows_CUI_CComposition_CICompositionPropertySet2;

#endif // ____x_ABI_CWindows_CUI_CComposition_CICompositionPropertySet2_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CComposition_CICompositionRadialGradientBrush_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CComposition_CICompositionRadialGradientBrush_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CComposition_CICompositionRadialGradientBrush __x_ABI_CWindows_CUI_CComposition_CICompositionRadialGradientBrush;

#endif // ____x_ABI_CWindows_CUI_CComposition_CICompositionRadialGradientBrush_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CComposition_CICompositionRectangleGeometry_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CComposition_CICompositionRectangleGeometry_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CComposition_CICompositionRectangleGeometry __x_ABI_CWindows_CUI_CComposition_CICompositionRectangleGeometry;

#endif // ____x_ABI_CWindows_CUI_CComposition_CICompositionRectangleGeometry_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CComposition_CICompositionRoundedRectangleGeometry_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CComposition_CICompositionRoundedRectangleGeometry_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CComposition_CICompositionRoundedRectangleGeometry __x_ABI_CWindows_CUI_CComposition_CICompositionRoundedRectangleGeometry;

#endif // ____x_ABI_CWindows_CUI_CComposition_CICompositionRoundedRectangleGeometry_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CComposition_CICompositionScopedBatch_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CComposition_CICompositionScopedBatch_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CComposition_CICompositionScopedBatch __x_ABI_CWindows_CUI_CComposition_CICompositionScopedBatch;

#endif // ____x_ABI_CWindows_CUI_CComposition_CICompositionScopedBatch_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CComposition_CICompositionShadow_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CComposition_CICompositionShadow_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CComposition_CICompositionShadow __x_ABI_CWindows_CUI_CComposition_CICompositionShadow;

#endif // ____x_ABI_CWindows_CUI_CComposition_CICompositionShadow_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CComposition_CICompositionShadowFactory_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CComposition_CICompositionShadowFactory_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CComposition_CICompositionShadowFactory __x_ABI_CWindows_CUI_CComposition_CICompositionShadowFactory;

#endif // ____x_ABI_CWindows_CUI_CComposition_CICompositionShadowFactory_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CComposition_CICompositionShape_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CComposition_CICompositionShape_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CComposition_CICompositionShape __x_ABI_CWindows_CUI_CComposition_CICompositionShape;

#endif // ____x_ABI_CWindows_CUI_CComposition_CICompositionShape_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CComposition_CICompositionShapeFactory_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CComposition_CICompositionShapeFactory_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CComposition_CICompositionShapeFactory __x_ABI_CWindows_CUI_CComposition_CICompositionShapeFactory;

#endif // ____x_ABI_CWindows_CUI_CComposition_CICompositionShapeFactory_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CComposition_CICompositionSpriteShape_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CComposition_CICompositionSpriteShape_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CComposition_CICompositionSpriteShape __x_ABI_CWindows_CUI_CComposition_CICompositionSpriteShape;

#endif // ____x_ABI_CWindows_CUI_CComposition_CICompositionSpriteShape_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CComposition_CICompositionSurface_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CComposition_CICompositionSurface_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CComposition_CICompositionSurface __x_ABI_CWindows_CUI_CComposition_CICompositionSurface;

#endif // ____x_ABI_CWindows_CUI_CComposition_CICompositionSurface_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CComposition_CICompositionSurfaceBrush_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CComposition_CICompositionSurfaceBrush_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CComposition_CICompositionSurfaceBrush __x_ABI_CWindows_CUI_CComposition_CICompositionSurfaceBrush;

#endif // ____x_ABI_CWindows_CUI_CComposition_CICompositionSurfaceBrush_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CComposition_CICompositionSurfaceBrush2_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CComposition_CICompositionSurfaceBrush2_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CComposition_CICompositionSurfaceBrush2 __x_ABI_CWindows_CUI_CComposition_CICompositionSurfaceBrush2;

#endif // ____x_ABI_CWindows_CUI_CComposition_CICompositionSurfaceBrush2_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CComposition_CICompositionSurfaceBrush3_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CComposition_CICompositionSurfaceBrush3_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CComposition_CICompositionSurfaceBrush3 __x_ABI_CWindows_CUI_CComposition_CICompositionSurfaceBrush3;

#endif // ____x_ABI_CWindows_CUI_CComposition_CICompositionSurfaceBrush3_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CComposition_CICompositionTarget_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CComposition_CICompositionTarget_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CComposition_CICompositionTarget __x_ABI_CWindows_CUI_CComposition_CICompositionTarget;

#endif // ____x_ABI_CWindows_CUI_CComposition_CICompositionTarget_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CComposition_CICompositionTargetFactory_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CComposition_CICompositionTargetFactory_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CComposition_CICompositionTargetFactory __x_ABI_CWindows_CUI_CComposition_CICompositionTargetFactory;

#endif // ____x_ABI_CWindows_CUI_CComposition_CICompositionTargetFactory_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CComposition_CICompositionTransform_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CComposition_CICompositionTransform_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CComposition_CICompositionTransform __x_ABI_CWindows_CUI_CComposition_CICompositionTransform;

#endif // ____x_ABI_CWindows_CUI_CComposition_CICompositionTransform_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CComposition_CICompositionTransformFactory_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CComposition_CICompositionTransformFactory_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CComposition_CICompositionTransformFactory __x_ABI_CWindows_CUI_CComposition_CICompositionTransformFactory;

#endif // ____x_ABI_CWindows_CUI_CComposition_CICompositionTransformFactory_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CComposition_CICompositionViewBox_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CComposition_CICompositionViewBox_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CComposition_CICompositionViewBox __x_ABI_CWindows_CUI_CComposition_CICompositionViewBox;

#endif // ____x_ABI_CWindows_CUI_CComposition_CICompositionViewBox_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CComposition_CICompositionVirtualDrawingSurface_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CComposition_CICompositionVirtualDrawingSurface_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CComposition_CICompositionVirtualDrawingSurface __x_ABI_CWindows_CUI_CComposition_CICompositionVirtualDrawingSurface;

#endif // ____x_ABI_CWindows_CUI_CComposition_CICompositionVirtualDrawingSurface_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CComposition_CICompositionVirtualDrawingSurfaceFactory_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CComposition_CICompositionVirtualDrawingSurfaceFactory_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CComposition_CICompositionVirtualDrawingSurfaceFactory __x_ABI_CWindows_CUI_CComposition_CICompositionVirtualDrawingSurfaceFactory;

#endif // ____x_ABI_CWindows_CUI_CComposition_CICompositionVirtualDrawingSurfaceFactory_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CComposition_CICompositionVisualSurface_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CComposition_CICompositionVisualSurface_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CComposition_CICompositionVisualSurface __x_ABI_CWindows_CUI_CComposition_CICompositionVisualSurface;

#endif // ____x_ABI_CWindows_CUI_CComposition_CICompositionVisualSurface_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CComposition_CICompositor_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CComposition_CICompositor_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CComposition_CICompositor __x_ABI_CWindows_CUI_CComposition_CICompositor;

#endif // ____x_ABI_CWindows_CUI_CComposition_CICompositor_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CComposition_CICompositor2_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CComposition_CICompositor2_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CComposition_CICompositor2 __x_ABI_CWindows_CUI_CComposition_CICompositor2;

#endif // ____x_ABI_CWindows_CUI_CComposition_CICompositor2_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CComposition_CICompositor3_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CComposition_CICompositor3_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CComposition_CICompositor3 __x_ABI_CWindows_CUI_CComposition_CICompositor3;

#endif // ____x_ABI_CWindows_CUI_CComposition_CICompositor3_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CComposition_CICompositor4_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CComposition_CICompositor4_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CComposition_CICompositor4 __x_ABI_CWindows_CUI_CComposition_CICompositor4;

#endif // ____x_ABI_CWindows_CUI_CComposition_CICompositor4_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CComposition_CICompositor5_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CComposition_CICompositor5_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CComposition_CICompositor5 __x_ABI_CWindows_CUI_CComposition_CICompositor5;

#endif // ____x_ABI_CWindows_CUI_CComposition_CICompositor5_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CComposition_CICompositor6_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CComposition_CICompositor6_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CComposition_CICompositor6 __x_ABI_CWindows_CUI_CComposition_CICompositor6;

#endif // ____x_ABI_CWindows_CUI_CComposition_CICompositor6_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CComposition_CICompositorStatics_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CComposition_CICompositorStatics_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CComposition_CICompositorStatics __x_ABI_CWindows_CUI_CComposition_CICompositorStatics;

#endif // ____x_ABI_CWindows_CUI_CComposition_CICompositorStatics_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CComposition_CICompositorWithProjectedShadow_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CComposition_CICompositorWithProjectedShadow_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CComposition_CICompositorWithProjectedShadow __x_ABI_CWindows_CUI_CComposition_CICompositorWithProjectedShadow;

#endif // ____x_ABI_CWindows_CUI_CComposition_CICompositorWithProjectedShadow_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CComposition_CICompositorWithRadialGradient_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CComposition_CICompositorWithRadialGradient_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CComposition_CICompositorWithRadialGradient __x_ABI_CWindows_CUI_CComposition_CICompositorWithRadialGradient;

#endif // ____x_ABI_CWindows_CUI_CComposition_CICompositorWithRadialGradient_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CComposition_CICompositorWithVisualSurface_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CComposition_CICompositorWithVisualSurface_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CComposition_CICompositorWithVisualSurface __x_ABI_CWindows_CUI_CComposition_CICompositorWithVisualSurface;

#endif // ____x_ABI_CWindows_CUI_CComposition_CICompositorWithVisualSurface_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CComposition_CIContainerVisual_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CComposition_CIContainerVisual_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CComposition_CIContainerVisual __x_ABI_CWindows_CUI_CComposition_CIContainerVisual;

#endif // ____x_ABI_CWindows_CUI_CComposition_CIContainerVisual_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CComposition_CIContainerVisualFactory_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CComposition_CIContainerVisualFactory_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CComposition_CIContainerVisualFactory __x_ABI_CWindows_CUI_CComposition_CIContainerVisualFactory;

#endif // ____x_ABI_CWindows_CUI_CComposition_CIContainerVisualFactory_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CComposition_CICubicBezierEasingFunction_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CComposition_CICubicBezierEasingFunction_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CComposition_CICubicBezierEasingFunction __x_ABI_CWindows_CUI_CComposition_CICubicBezierEasingFunction;

#endif // ____x_ABI_CWindows_CUI_CComposition_CICubicBezierEasingFunction_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CComposition_CIDistantLight_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CComposition_CIDistantLight_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CComposition_CIDistantLight __x_ABI_CWindows_CUI_CComposition_CIDistantLight;

#endif // ____x_ABI_CWindows_CUI_CComposition_CIDistantLight_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CComposition_CIDistantLight2_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CComposition_CIDistantLight2_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CComposition_CIDistantLight2 __x_ABI_CWindows_CUI_CComposition_CIDistantLight2;

#endif // ____x_ABI_CWindows_CUI_CComposition_CIDistantLight2_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CComposition_CIDropShadow_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CComposition_CIDropShadow_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CComposition_CIDropShadow __x_ABI_CWindows_CUI_CComposition_CIDropShadow;

#endif // ____x_ABI_CWindows_CUI_CComposition_CIDropShadow_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CComposition_CIDropShadow2_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CComposition_CIDropShadow2_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CComposition_CIDropShadow2 __x_ABI_CWindows_CUI_CComposition_CIDropShadow2;

#endif // ____x_ABI_CWindows_CUI_CComposition_CIDropShadow2_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CComposition_CIExpressionAnimation_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CComposition_CIExpressionAnimation_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CComposition_CIExpressionAnimation __x_ABI_CWindows_CUI_CComposition_CIExpressionAnimation;

#endif // ____x_ABI_CWindows_CUI_CComposition_CIExpressionAnimation_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CComposition_CIImplicitAnimationCollection_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CComposition_CIImplicitAnimationCollection_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CComposition_CIImplicitAnimationCollection __x_ABI_CWindows_CUI_CComposition_CIImplicitAnimationCollection;

#endif // ____x_ABI_CWindows_CUI_CComposition_CIImplicitAnimationCollection_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CComposition_CIInsetClip_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CComposition_CIInsetClip_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CComposition_CIInsetClip __x_ABI_CWindows_CUI_CComposition_CIInsetClip;

#endif // ____x_ABI_CWindows_CUI_CComposition_CIInsetClip_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CComposition_CIKeyFrameAnimation_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CComposition_CIKeyFrameAnimation_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CComposition_CIKeyFrameAnimation __x_ABI_CWindows_CUI_CComposition_CIKeyFrameAnimation;

#endif // ____x_ABI_CWindows_CUI_CComposition_CIKeyFrameAnimation_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CComposition_CIKeyFrameAnimation2_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CComposition_CIKeyFrameAnimation2_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CComposition_CIKeyFrameAnimation2 __x_ABI_CWindows_CUI_CComposition_CIKeyFrameAnimation2;

#endif // ____x_ABI_CWindows_CUI_CComposition_CIKeyFrameAnimation2_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CComposition_CIKeyFrameAnimation3_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CComposition_CIKeyFrameAnimation3_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CComposition_CIKeyFrameAnimation3 __x_ABI_CWindows_CUI_CComposition_CIKeyFrameAnimation3;

#endif // ____x_ABI_CWindows_CUI_CComposition_CIKeyFrameAnimation3_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CComposition_CIKeyFrameAnimationFactory_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CComposition_CIKeyFrameAnimationFactory_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CComposition_CIKeyFrameAnimationFactory __x_ABI_CWindows_CUI_CComposition_CIKeyFrameAnimationFactory;

#endif // ____x_ABI_CWindows_CUI_CComposition_CIKeyFrameAnimationFactory_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CComposition_CILayerVisual_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CComposition_CILayerVisual_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CComposition_CILayerVisual __x_ABI_CWindows_CUI_CComposition_CILayerVisual;

#endif // ____x_ABI_CWindows_CUI_CComposition_CILayerVisual_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CComposition_CILayerVisual2_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CComposition_CILayerVisual2_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CComposition_CILayerVisual2 __x_ABI_CWindows_CUI_CComposition_CILayerVisual2;

#endif // ____x_ABI_CWindows_CUI_CComposition_CILayerVisual2_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CComposition_CILinearEasingFunction_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CComposition_CILinearEasingFunction_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CComposition_CILinearEasingFunction __x_ABI_CWindows_CUI_CComposition_CILinearEasingFunction;

#endif // ____x_ABI_CWindows_CUI_CComposition_CILinearEasingFunction_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CComposition_CINaturalMotionAnimation_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CComposition_CINaturalMotionAnimation_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CComposition_CINaturalMotionAnimation __x_ABI_CWindows_CUI_CComposition_CINaturalMotionAnimation;

#endif // ____x_ABI_CWindows_CUI_CComposition_CINaturalMotionAnimation_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CComposition_CINaturalMotionAnimationFactory_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CComposition_CINaturalMotionAnimationFactory_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CComposition_CINaturalMotionAnimationFactory __x_ABI_CWindows_CUI_CComposition_CINaturalMotionAnimationFactory;

#endif // ____x_ABI_CWindows_CUI_CComposition_CINaturalMotionAnimationFactory_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CComposition_CIPathKeyFrameAnimation_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CComposition_CIPathKeyFrameAnimation_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CComposition_CIPathKeyFrameAnimation __x_ABI_CWindows_CUI_CComposition_CIPathKeyFrameAnimation;

#endif // ____x_ABI_CWindows_CUI_CComposition_CIPathKeyFrameAnimation_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CComposition_CIPointLight_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CComposition_CIPointLight_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CComposition_CIPointLight __x_ABI_CWindows_CUI_CComposition_CIPointLight;

#endif // ____x_ABI_CWindows_CUI_CComposition_CIPointLight_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CComposition_CIPointLight2_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CComposition_CIPointLight2_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CComposition_CIPointLight2 __x_ABI_CWindows_CUI_CComposition_CIPointLight2;

#endif // ____x_ABI_CWindows_CUI_CComposition_CIPointLight2_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CComposition_CIPointLight3_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CComposition_CIPointLight3_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CComposition_CIPointLight3 __x_ABI_CWindows_CUI_CComposition_CIPointLight3;

#endif // ____x_ABI_CWindows_CUI_CComposition_CIPointLight3_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CComposition_CIQuaternionKeyFrameAnimation_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CComposition_CIQuaternionKeyFrameAnimation_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CComposition_CIQuaternionKeyFrameAnimation __x_ABI_CWindows_CUI_CComposition_CIQuaternionKeyFrameAnimation;

#endif // ____x_ABI_CWindows_CUI_CComposition_CIQuaternionKeyFrameAnimation_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CComposition_CIRedirectVisual_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CComposition_CIRedirectVisual_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CComposition_CIRedirectVisual __x_ABI_CWindows_CUI_CComposition_CIRedirectVisual;

#endif // ____x_ABI_CWindows_CUI_CComposition_CIRedirectVisual_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CComposition_CIRenderingDeviceReplacedEventArgs_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CComposition_CIRenderingDeviceReplacedEventArgs_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CComposition_CIRenderingDeviceReplacedEventArgs __x_ABI_CWindows_CUI_CComposition_CIRenderingDeviceReplacedEventArgs;

#endif // ____x_ABI_CWindows_CUI_CComposition_CIRenderingDeviceReplacedEventArgs_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CComposition_CIScalarKeyFrameAnimation_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CComposition_CIScalarKeyFrameAnimation_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CComposition_CIScalarKeyFrameAnimation __x_ABI_CWindows_CUI_CComposition_CIScalarKeyFrameAnimation;

#endif // ____x_ABI_CWindows_CUI_CComposition_CIScalarKeyFrameAnimation_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CComposition_CIScalarNaturalMotionAnimation_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CComposition_CIScalarNaturalMotionAnimation_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CComposition_CIScalarNaturalMotionAnimation __x_ABI_CWindows_CUI_CComposition_CIScalarNaturalMotionAnimation;

#endif // ____x_ABI_CWindows_CUI_CComposition_CIScalarNaturalMotionAnimation_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CComposition_CIScalarNaturalMotionAnimationFactory_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CComposition_CIScalarNaturalMotionAnimationFactory_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CComposition_CIScalarNaturalMotionAnimationFactory __x_ABI_CWindows_CUI_CComposition_CIScalarNaturalMotionAnimationFactory;

#endif // ____x_ABI_CWindows_CUI_CComposition_CIScalarNaturalMotionAnimationFactory_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CComposition_CIShapeVisual_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CComposition_CIShapeVisual_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CComposition_CIShapeVisual __x_ABI_CWindows_CUI_CComposition_CIShapeVisual;

#endif // ____x_ABI_CWindows_CUI_CComposition_CIShapeVisual_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CComposition_CISpotLight_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CComposition_CISpotLight_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CComposition_CISpotLight __x_ABI_CWindows_CUI_CComposition_CISpotLight;

#endif // ____x_ABI_CWindows_CUI_CComposition_CISpotLight_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CComposition_CISpotLight2_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CComposition_CISpotLight2_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CComposition_CISpotLight2 __x_ABI_CWindows_CUI_CComposition_CISpotLight2;

#endif // ____x_ABI_CWindows_CUI_CComposition_CISpotLight2_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CComposition_CISpotLight3_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CComposition_CISpotLight3_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CComposition_CISpotLight3 __x_ABI_CWindows_CUI_CComposition_CISpotLight3;

#endif // ____x_ABI_CWindows_CUI_CComposition_CISpotLight3_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CComposition_CISpringScalarNaturalMotionAnimation_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CComposition_CISpringScalarNaturalMotionAnimation_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CComposition_CISpringScalarNaturalMotionAnimation __x_ABI_CWindows_CUI_CComposition_CISpringScalarNaturalMotionAnimation;

#endif // ____x_ABI_CWindows_CUI_CComposition_CISpringScalarNaturalMotionAnimation_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CComposition_CISpringVector2NaturalMotionAnimation_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CComposition_CISpringVector2NaturalMotionAnimation_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CComposition_CISpringVector2NaturalMotionAnimation __x_ABI_CWindows_CUI_CComposition_CISpringVector2NaturalMotionAnimation;

#endif // ____x_ABI_CWindows_CUI_CComposition_CISpringVector2NaturalMotionAnimation_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CComposition_CISpringVector3NaturalMotionAnimation_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CComposition_CISpringVector3NaturalMotionAnimation_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CComposition_CISpringVector3NaturalMotionAnimation __x_ABI_CWindows_CUI_CComposition_CISpringVector3NaturalMotionAnimation;

#endif // ____x_ABI_CWindows_CUI_CComposition_CISpringVector3NaturalMotionAnimation_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CComposition_CISpriteVisual_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CComposition_CISpriteVisual_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CComposition_CISpriteVisual __x_ABI_CWindows_CUI_CComposition_CISpriteVisual;

#endif // ____x_ABI_CWindows_CUI_CComposition_CISpriteVisual_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CComposition_CISpriteVisual2_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CComposition_CISpriteVisual2_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CComposition_CISpriteVisual2 __x_ABI_CWindows_CUI_CComposition_CISpriteVisual2;

#endif // ____x_ABI_CWindows_CUI_CComposition_CISpriteVisual2_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CComposition_CIStepEasingFunction_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CComposition_CIStepEasingFunction_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CComposition_CIStepEasingFunction __x_ABI_CWindows_CUI_CComposition_CIStepEasingFunction;

#endif // ____x_ABI_CWindows_CUI_CComposition_CIStepEasingFunction_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CComposition_CIVector2KeyFrameAnimation_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CComposition_CIVector2KeyFrameAnimation_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CComposition_CIVector2KeyFrameAnimation __x_ABI_CWindows_CUI_CComposition_CIVector2KeyFrameAnimation;

#endif // ____x_ABI_CWindows_CUI_CComposition_CIVector2KeyFrameAnimation_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CComposition_CIVector2NaturalMotionAnimation_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CComposition_CIVector2NaturalMotionAnimation_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CComposition_CIVector2NaturalMotionAnimation __x_ABI_CWindows_CUI_CComposition_CIVector2NaturalMotionAnimation;

#endif // ____x_ABI_CWindows_CUI_CComposition_CIVector2NaturalMotionAnimation_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CComposition_CIVector2NaturalMotionAnimationFactory_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CComposition_CIVector2NaturalMotionAnimationFactory_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CComposition_CIVector2NaturalMotionAnimationFactory __x_ABI_CWindows_CUI_CComposition_CIVector2NaturalMotionAnimationFactory;

#endif // ____x_ABI_CWindows_CUI_CComposition_CIVector2NaturalMotionAnimationFactory_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CComposition_CIVector3KeyFrameAnimation_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CComposition_CIVector3KeyFrameAnimation_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CComposition_CIVector3KeyFrameAnimation __x_ABI_CWindows_CUI_CComposition_CIVector3KeyFrameAnimation;

#endif // ____x_ABI_CWindows_CUI_CComposition_CIVector3KeyFrameAnimation_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CComposition_CIVector3NaturalMotionAnimation_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CComposition_CIVector3NaturalMotionAnimation_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CComposition_CIVector3NaturalMotionAnimation __x_ABI_CWindows_CUI_CComposition_CIVector3NaturalMotionAnimation;

#endif // ____x_ABI_CWindows_CUI_CComposition_CIVector3NaturalMotionAnimation_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CComposition_CIVector3NaturalMotionAnimationFactory_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CComposition_CIVector3NaturalMotionAnimationFactory_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CComposition_CIVector3NaturalMotionAnimationFactory __x_ABI_CWindows_CUI_CComposition_CIVector3NaturalMotionAnimationFactory;

#endif // ____x_ABI_CWindows_CUI_CComposition_CIVector3NaturalMotionAnimationFactory_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CComposition_CIVector4KeyFrameAnimation_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CComposition_CIVector4KeyFrameAnimation_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CComposition_CIVector4KeyFrameAnimation __x_ABI_CWindows_CUI_CComposition_CIVector4KeyFrameAnimation;

#endif // ____x_ABI_CWindows_CUI_CComposition_CIVector4KeyFrameAnimation_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CComposition_CIVisual_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CComposition_CIVisual_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CComposition_CIVisual __x_ABI_CWindows_CUI_CComposition_CIVisual;

#endif // ____x_ABI_CWindows_CUI_CComposition_CIVisual_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CComposition_CIVisual2_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CComposition_CIVisual2_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CComposition_CIVisual2 __x_ABI_CWindows_CUI_CComposition_CIVisual2;

#endif // ____x_ABI_CWindows_CUI_CComposition_CIVisual2_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CComposition_CIVisualCollection_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CComposition_CIVisualCollection_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CComposition_CIVisualCollection __x_ABI_CWindows_CUI_CComposition_CIVisualCollection;

#endif // ____x_ABI_CWindows_CUI_CComposition_CIVisualCollection_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CComposition_CIVisualElement_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CComposition_CIVisualElement_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CComposition_CIVisualElement __x_ABI_CWindows_CUI_CComposition_CIVisualElement;

#endif // ____x_ABI_CWindows_CUI_CComposition_CIVisualElement_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CComposition_CIVisualFactory_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CComposition_CIVisualFactory_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CComposition_CIVisualFactory __x_ABI_CWindows_CUI_CComposition_CIVisualFactory;

#endif // ____x_ABI_CWindows_CUI_CComposition_CIVisualFactory_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CComposition_CIVisualUnorderedCollection_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CComposition_CIVisualUnorderedCollection_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CComposition_CIVisualUnorderedCollection __x_ABI_CWindows_CUI_CComposition_CIVisualUnorderedCollection;

#endif // ____x_ABI_CWindows_CUI_CComposition_CIVisualUnorderedCollection_FWD_DEFINED__

// Parameterized interface forward declarations (C)

// Collection interface definitions

#if !defined(____x_ABI_C__FIIterator_1_float_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIIterator_1_float_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIIterator_1_float __x_ABI_C__FIIterator_1_float;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIIterator_1_float;

    typedef struct __x_ABI_C__FIIterator_1_floatVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIIterator_1_float* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIIterator_1_float* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIIterator_1_float* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIIterator_1_float* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIIterator_1_float* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIIterator_1_float* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Current)(__x_ABI_C__FIIterator_1_float* This,
        FLOAT* result);
    HRESULT (STDMETHODCALLTYPE* get_HasCurrent)(__x_ABI_C__FIIterator_1_float* This,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* MoveNext)(__x_ABI_C__FIIterator_1_float* This,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__x_ABI_C__FIIterator_1_float* This,
        UINT32 itemsLength,
        FLOAT* items,
        UINT32* result);

        END_INTERFACE
    } __x_ABI_C__FIIterator_1_floatVtbl;

    interface __x_ABI_C__FIIterator_1_float
    {
        CONST_VTBL struct __x_ABI_C__FIIterator_1_floatVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIIterator_1_float_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIIterable_1_float_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIIterable_1_float_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIIterable_1_float __x_ABI_C__FIIterable_1_float;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIIterable_1_float;

    typedef struct __x_ABI_C__FIIterable_1_floatVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIIterable_1_float* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIIterable_1_float* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIIterable_1_float* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIIterable_1_float* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIIterable_1_float* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIIterable_1_float* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* First)(__x_ABI_C__FIIterable_1_float* This,
        __x_ABI_C__FIIterator_1_float** result);

        END_INTERFACE
    } __x_ABI_C__FIIterable_1_floatVtbl;

    interface __x_ABI_C__FIIterable_1_float
    {
        CONST_VTBL struct __x_ABI_C__FIIterable_1_floatVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIIterable_1_float_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIIterator_1_HSTRING_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIIterator_1_HSTRING_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIIterator_1_HSTRING __x_ABI_C__FIIterator_1_HSTRING;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIIterator_1_HSTRING;

    typedef struct __x_ABI_C__FIIterator_1_HSTRINGVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIIterator_1_HSTRING* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIIterator_1_HSTRING* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIIterator_1_HSTRING* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIIterator_1_HSTRING* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIIterator_1_HSTRING* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIIterator_1_HSTRING* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Current)(__x_ABI_C__FIIterator_1_HSTRING* This,
        HSTRING* result);
    HRESULT (STDMETHODCALLTYPE* get_HasCurrent)(__x_ABI_C__FIIterator_1_HSTRING* This,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* MoveNext)(__x_ABI_C__FIIterator_1_HSTRING* This,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__x_ABI_C__FIIterator_1_HSTRING* This,
        UINT32 itemsLength,
        HSTRING* items,
        UINT32* result);

        END_INTERFACE
    } __x_ABI_C__FIIterator_1_HSTRINGVtbl;

    interface __x_ABI_C__FIIterator_1_HSTRING
    {
        CONST_VTBL struct __x_ABI_C__FIIterator_1_HSTRINGVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIIterator_1_HSTRING_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIIterable_1_HSTRING_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIIterable_1_HSTRING_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIIterable_1_HSTRING __x_ABI_C__FIIterable_1_HSTRING;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIIterable_1_HSTRING;

    typedef struct __x_ABI_C__FIIterable_1_HSTRINGVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIIterable_1_HSTRING* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIIterable_1_HSTRING* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIIterable_1_HSTRING* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIIterable_1_HSTRING* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIIterable_1_HSTRING* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIIterable_1_HSTRING* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* First)(__x_ABI_C__FIIterable_1_HSTRING* This,
        __x_ABI_C__FIIterator_1_HSTRING** result);

        END_INTERFACE
    } __x_ABI_C__FIIterable_1_HSTRINGVtbl;

    interface __x_ABI_C__FIIterable_1_HSTRING
    {
        CONST_VTBL struct __x_ABI_C__FIIterable_1_HSTRINGVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIIterable_1_HSTRING_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIKeyValuePair_2_HSTRING_HSTRING_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIKeyValuePair_2_HSTRING_HSTRING_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIKeyValuePair_2_HSTRING_HSTRING __x_ABI_C__FIKeyValuePair_2_HSTRING_HSTRING;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIKeyValuePair_2_HSTRING_HSTRING;

    typedef struct __x_ABI_C__FIKeyValuePair_2_HSTRING_HSTRINGVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIKeyValuePair_2_HSTRING_HSTRING* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIKeyValuePair_2_HSTRING_HSTRING* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIKeyValuePair_2_HSTRING_HSTRING* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIKeyValuePair_2_HSTRING_HSTRING* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIKeyValuePair_2_HSTRING_HSTRING* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIKeyValuePair_2_HSTRING_HSTRING* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Key)(__x_ABI_C__FIKeyValuePair_2_HSTRING_HSTRING* This,
        HSTRING* result);
    HRESULT (STDMETHODCALLTYPE* get_Value)(__x_ABI_C__FIKeyValuePair_2_HSTRING_HSTRING* This,
        HSTRING* result);

        END_INTERFACE
    } __x_ABI_C__FIKeyValuePair_2_HSTRING_HSTRINGVtbl;

    interface __x_ABI_C__FIKeyValuePair_2_HSTRING_HSTRING
    {
        CONST_VTBL struct __x_ABI_C__FIKeyValuePair_2_HSTRING_HSTRINGVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIKeyValuePair_2_HSTRING_HSTRING_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2_HSTRING_HSTRING_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2_HSTRING_HSTRING_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2_HSTRING_HSTRING __x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2_HSTRING_HSTRING;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2_HSTRING_HSTRING;

    typedef struct __x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2_HSTRING_HSTRINGVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2_HSTRING_HSTRING* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2_HSTRING_HSTRING* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2_HSTRING_HSTRING* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2_HSTRING_HSTRING* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2_HSTRING_HSTRING* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2_HSTRING_HSTRING* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Current)(__x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2_HSTRING_HSTRING* This,
        __x_ABI_C__FIKeyValuePair_2_HSTRING_HSTRING** result);
    HRESULT (STDMETHODCALLTYPE* get_HasCurrent)(__x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2_HSTRING_HSTRING* This,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* MoveNext)(__x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2_HSTRING_HSTRING* This,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2_HSTRING_HSTRING* This,
        UINT32 itemsLength,
        __x_ABI_C__FIKeyValuePair_2_HSTRING_HSTRING** items,
        UINT32* result);

        END_INTERFACE
    } __x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2_HSTRING_HSTRINGVtbl;

    interface __x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2_HSTRING_HSTRING
    {
        CONST_VTBL struct __x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2_HSTRING_HSTRINGVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2_HSTRING_HSTRING_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIIterable_1___x_ABI_C__FIKeyValuePair_2_HSTRING_HSTRING_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIIterable_1___x_ABI_C__FIKeyValuePair_2_HSTRING_HSTRING_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIIterable_1___x_ABI_C__FIKeyValuePair_2_HSTRING_HSTRING __x_ABI_C__FIIterable_1___x_ABI_C__FIKeyValuePair_2_HSTRING_HSTRING;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIIterable_1___x_ABI_C__FIKeyValuePair_2_HSTRING_HSTRING;

    typedef struct __x_ABI_C__FIIterable_1___x_ABI_C__FIKeyValuePair_2_HSTRING_HSTRINGVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIIterable_1___x_ABI_C__FIKeyValuePair_2_HSTRING_HSTRING* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIIterable_1___x_ABI_C__FIKeyValuePair_2_HSTRING_HSTRING* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIIterable_1___x_ABI_C__FIKeyValuePair_2_HSTRING_HSTRING* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIIterable_1___x_ABI_C__FIKeyValuePair_2_HSTRING_HSTRING* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIIterable_1___x_ABI_C__FIKeyValuePair_2_HSTRING_HSTRING* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIIterable_1___x_ABI_C__FIKeyValuePair_2_HSTRING_HSTRING* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* First)(__x_ABI_C__FIIterable_1___x_ABI_C__FIKeyValuePair_2_HSTRING_HSTRING* This,
        __x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2_HSTRING_HSTRING** result);

        END_INTERFACE
    } __x_ABI_C__FIIterable_1___x_ABI_C__FIKeyValuePair_2_HSTRING_HSTRINGVtbl;

    interface __x_ABI_C__FIIterable_1___x_ABI_C__FIKeyValuePair_2_HSTRING_HSTRING
    {
        CONST_VTBL struct __x_ABI_C__FIIterable_1___x_ABI_C__FIKeyValuePair_2_HSTRING_HSTRINGVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIIterable_1___x_ABI_C__FIKeyValuePair_2_HSTRING_HSTRING_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIKeyValuePair_2_HSTRING___x_ABI_CWindows__CUI__CComposition__CICompositionAnimationBase_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIKeyValuePair_2_HSTRING___x_ABI_CWindows__CUI__CComposition__CICompositionAnimationBase_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIKeyValuePair_2_HSTRING___x_ABI_CWindows__CUI__CComposition__CICompositionAnimationBase __x_ABI_C__FIKeyValuePair_2_HSTRING___x_ABI_CWindows__CUI__CComposition__CICompositionAnimationBase;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIKeyValuePair_2_HSTRING___x_ABI_CWindows__CUI__CComposition__CICompositionAnimationBase;

    typedef struct __x_ABI_C__FIKeyValuePair_2_HSTRING___x_ABI_CWindows__CUI__CComposition__CICompositionAnimationBaseVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIKeyValuePair_2_HSTRING___x_ABI_CWindows__CUI__CComposition__CICompositionAnimationBase* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIKeyValuePair_2_HSTRING___x_ABI_CWindows__CUI__CComposition__CICompositionAnimationBase* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIKeyValuePair_2_HSTRING___x_ABI_CWindows__CUI__CComposition__CICompositionAnimationBase* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIKeyValuePair_2_HSTRING___x_ABI_CWindows__CUI__CComposition__CICompositionAnimationBase* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIKeyValuePair_2_HSTRING___x_ABI_CWindows__CUI__CComposition__CICompositionAnimationBase* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIKeyValuePair_2_HSTRING___x_ABI_CWindows__CUI__CComposition__CICompositionAnimationBase* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Key)(__x_ABI_C__FIKeyValuePair_2_HSTRING___x_ABI_CWindows__CUI__CComposition__CICompositionAnimationBase* This,
        HSTRING* result);
    HRESULT (STDMETHODCALLTYPE* get_Value)(__x_ABI_C__FIKeyValuePair_2_HSTRING___x_ABI_CWindows__CUI__CComposition__CICompositionAnimationBase* This,
        __x_ABI_CWindows_CUI_CComposition_CICompositionAnimationBase** result);

        END_INTERFACE
    } __x_ABI_C__FIKeyValuePair_2_HSTRING___x_ABI_CWindows__CUI__CComposition__CICompositionAnimationBaseVtbl;

    interface __x_ABI_C__FIKeyValuePair_2_HSTRING___x_ABI_CWindows__CUI__CComposition__CICompositionAnimationBase
    {
        CONST_VTBL struct __x_ABI_C__FIKeyValuePair_2_HSTRING___x_ABI_CWindows__CUI__CComposition__CICompositionAnimationBaseVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIKeyValuePair_2_HSTRING___x_ABI_CWindows__CUI__CComposition__CICompositionAnimationBase_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2_HSTRING___x_ABI_CWindows__CUI__CComposition__CICompositionAnimationBase_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2_HSTRING___x_ABI_CWindows__CUI__CComposition__CICompositionAnimationBase_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2_HSTRING___x_ABI_CWindows__CUI__CComposition__CICompositionAnimationBase __x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2_HSTRING___x_ABI_CWindows__CUI__CComposition__CICompositionAnimationBase;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2_HSTRING___x_ABI_CWindows__CUI__CComposition__CICompositionAnimationBase;

    typedef struct __x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2_HSTRING___x_ABI_CWindows__CUI__CComposition__CICompositionAnimationBaseVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2_HSTRING___x_ABI_CWindows__CUI__CComposition__CICompositionAnimationBase* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2_HSTRING___x_ABI_CWindows__CUI__CComposition__CICompositionAnimationBase* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2_HSTRING___x_ABI_CWindows__CUI__CComposition__CICompositionAnimationBase* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2_HSTRING___x_ABI_CWindows__CUI__CComposition__CICompositionAnimationBase* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2_HSTRING___x_ABI_CWindows__CUI__CComposition__CICompositionAnimationBase* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2_HSTRING___x_ABI_CWindows__CUI__CComposition__CICompositionAnimationBase* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Current)(__x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2_HSTRING___x_ABI_CWindows__CUI__CComposition__CICompositionAnimationBase* This,
        __x_ABI_C__FIKeyValuePair_2_HSTRING___x_ABI_CWindows__CUI__CComposition__CICompositionAnimationBase** result);
    HRESULT (STDMETHODCALLTYPE* get_HasCurrent)(__x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2_HSTRING___x_ABI_CWindows__CUI__CComposition__CICompositionAnimationBase* This,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* MoveNext)(__x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2_HSTRING___x_ABI_CWindows__CUI__CComposition__CICompositionAnimationBase* This,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2_HSTRING___x_ABI_CWindows__CUI__CComposition__CICompositionAnimationBase* This,
        UINT32 itemsLength,
        __x_ABI_C__FIKeyValuePair_2_HSTRING___x_ABI_CWindows__CUI__CComposition__CICompositionAnimationBase** items,
        UINT32* result);

        END_INTERFACE
    } __x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2_HSTRING___x_ABI_CWindows__CUI__CComposition__CICompositionAnimationBaseVtbl;

    interface __x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2_HSTRING___x_ABI_CWindows__CUI__CComposition__CICompositionAnimationBase
    {
        CONST_VTBL struct __x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2_HSTRING___x_ABI_CWindows__CUI__CComposition__CICompositionAnimationBaseVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2_HSTRING___x_ABI_CWindows__CUI__CComposition__CICompositionAnimationBase_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIIterable_1___x_ABI_C__FIKeyValuePair_2_HSTRING___x_ABI_CWindows__CUI__CComposition__CICompositionAnimationBase_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIIterable_1___x_ABI_C__FIKeyValuePair_2_HSTRING___x_ABI_CWindows__CUI__CComposition__CICompositionAnimationBase_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIIterable_1___x_ABI_C__FIKeyValuePair_2_HSTRING___x_ABI_CWindows__CUI__CComposition__CICompositionAnimationBase __x_ABI_C__FIIterable_1___x_ABI_C__FIKeyValuePair_2_HSTRING___x_ABI_CWindows__CUI__CComposition__CICompositionAnimationBase;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIIterable_1___x_ABI_C__FIKeyValuePair_2_HSTRING___x_ABI_CWindows__CUI__CComposition__CICompositionAnimationBase;

    typedef struct __x_ABI_C__FIIterable_1___x_ABI_C__FIKeyValuePair_2_HSTRING___x_ABI_CWindows__CUI__CComposition__CICompositionAnimationBaseVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIIterable_1___x_ABI_C__FIKeyValuePair_2_HSTRING___x_ABI_CWindows__CUI__CComposition__CICompositionAnimationBase* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIIterable_1___x_ABI_C__FIKeyValuePair_2_HSTRING___x_ABI_CWindows__CUI__CComposition__CICompositionAnimationBase* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIIterable_1___x_ABI_C__FIKeyValuePair_2_HSTRING___x_ABI_CWindows__CUI__CComposition__CICompositionAnimationBase* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIIterable_1___x_ABI_C__FIKeyValuePair_2_HSTRING___x_ABI_CWindows__CUI__CComposition__CICompositionAnimationBase* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIIterable_1___x_ABI_C__FIKeyValuePair_2_HSTRING___x_ABI_CWindows__CUI__CComposition__CICompositionAnimationBase* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIIterable_1___x_ABI_C__FIKeyValuePair_2_HSTRING___x_ABI_CWindows__CUI__CComposition__CICompositionAnimationBase* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* First)(__x_ABI_C__FIIterable_1___x_ABI_C__FIKeyValuePair_2_HSTRING___x_ABI_CWindows__CUI__CComposition__CICompositionAnimationBase* This,
        __x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2_HSTRING___x_ABI_CWindows__CUI__CComposition__CICompositionAnimationBase** result);

        END_INTERFACE
    } __x_ABI_C__FIIterable_1___x_ABI_C__FIKeyValuePair_2_HSTRING___x_ABI_CWindows__CUI__CComposition__CICompositionAnimationBaseVtbl;

    interface __x_ABI_C__FIIterable_1___x_ABI_C__FIKeyValuePair_2_HSTRING___x_ABI_CWindows__CUI__CComposition__CICompositionAnimationBase
    {
        CONST_VTBL struct __x_ABI_C__FIIterable_1___x_ABI_C__FIKeyValuePair_2_HSTRING___x_ABI_CWindows__CUI__CComposition__CICompositionAnimationBaseVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIIterable_1___x_ABI_C__FIKeyValuePair_2_HSTRING___x_ABI_CWindows__CUI__CComposition__CICompositionAnimationBase_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CComposition__CCompositionAnimation_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CComposition__CCompositionAnimation_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CComposition__CCompositionAnimation __x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CComposition__CCompositionAnimation;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CComposition__CCompositionAnimation;

    typedef struct __x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CComposition__CCompositionAnimationVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CComposition__CCompositionAnimation* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CComposition__CCompositionAnimation* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CComposition__CCompositionAnimation* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CComposition__CCompositionAnimation* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CComposition__CCompositionAnimation* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CComposition__CCompositionAnimation* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Current)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CComposition__CCompositionAnimation* This,
        __x_ABI_CWindows_CUI_CComposition_CICompositionAnimation** result);
    HRESULT (STDMETHODCALLTYPE* get_HasCurrent)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CComposition__CCompositionAnimation* This,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* MoveNext)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CComposition__CCompositionAnimation* This,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CComposition__CCompositionAnimation* This,
        UINT32 itemsLength,
        __x_ABI_CWindows_CUI_CComposition_CICompositionAnimation** items,
        UINT32* result);

        END_INTERFACE
    } __x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CComposition__CCompositionAnimationVtbl;

    interface __x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CComposition__CCompositionAnimation
    {
        CONST_VTBL struct __x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CComposition__CCompositionAnimationVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CComposition__CCompositionAnimation_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIIterable_1___x_ABI_CWindows__CUI__CComposition__CCompositionAnimation_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIIterable_1___x_ABI_CWindows__CUI__CComposition__CCompositionAnimation_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIIterable_1___x_ABI_CWindows__CUI__CComposition__CCompositionAnimation __x_ABI_C__FIIterable_1___x_ABI_CWindows__CUI__CComposition__CCompositionAnimation;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIIterable_1___x_ABI_CWindows__CUI__CComposition__CCompositionAnimation;

    typedef struct __x_ABI_C__FIIterable_1___x_ABI_CWindows__CUI__CComposition__CCompositionAnimationVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CUI__CComposition__CCompositionAnimation* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CUI__CComposition__CCompositionAnimation* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CUI__CComposition__CCompositionAnimation* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CUI__CComposition__CCompositionAnimation* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CUI__CComposition__CCompositionAnimation* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CUI__CComposition__CCompositionAnimation* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* First)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CUI__CComposition__CCompositionAnimation* This,
        __x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CComposition__CCompositionAnimation** result);

        END_INTERFACE
    } __x_ABI_C__FIIterable_1___x_ABI_CWindows__CUI__CComposition__CCompositionAnimationVtbl;

    interface __x_ABI_C__FIIterable_1___x_ABI_CWindows__CUI__CComposition__CCompositionAnimation
    {
        CONST_VTBL struct __x_ABI_C__FIIterable_1___x_ABI_CWindows__CUI__CComposition__CCompositionAnimationVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIIterable_1___x_ABI_CWindows__CUI__CComposition__CCompositionAnimation_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CComposition__CCompositionColorGradientStop_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CComposition__CCompositionColorGradientStop_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CComposition__CCompositionColorGradientStop __x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CComposition__CCompositionColorGradientStop;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CComposition__CCompositionColorGradientStop;

    typedef struct __x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CComposition__CCompositionColorGradientStopVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CComposition__CCompositionColorGradientStop* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CComposition__CCompositionColorGradientStop* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CComposition__CCompositionColorGradientStop* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CComposition__CCompositionColorGradientStop* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CComposition__CCompositionColorGradientStop* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CComposition__CCompositionColorGradientStop* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Current)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CComposition__CCompositionColorGradientStop* This,
        __x_ABI_CWindows_CUI_CComposition_CICompositionColorGradientStop** result);
    HRESULT (STDMETHODCALLTYPE* get_HasCurrent)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CComposition__CCompositionColorGradientStop* This,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* MoveNext)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CComposition__CCompositionColorGradientStop* This,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CComposition__CCompositionColorGradientStop* This,
        UINT32 itemsLength,
        __x_ABI_CWindows_CUI_CComposition_CICompositionColorGradientStop** items,
        UINT32* result);

        END_INTERFACE
    } __x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CComposition__CCompositionColorGradientStopVtbl;

    interface __x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CComposition__CCompositionColorGradientStop
    {
        CONST_VTBL struct __x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CComposition__CCompositionColorGradientStopVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CComposition__CCompositionColorGradientStop_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIIterable_1___x_ABI_CWindows__CUI__CComposition__CCompositionColorGradientStop_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIIterable_1___x_ABI_CWindows__CUI__CComposition__CCompositionColorGradientStop_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIIterable_1___x_ABI_CWindows__CUI__CComposition__CCompositionColorGradientStop __x_ABI_C__FIIterable_1___x_ABI_CWindows__CUI__CComposition__CCompositionColorGradientStop;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIIterable_1___x_ABI_CWindows__CUI__CComposition__CCompositionColorGradientStop;

    typedef struct __x_ABI_C__FIIterable_1___x_ABI_CWindows__CUI__CComposition__CCompositionColorGradientStopVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CUI__CComposition__CCompositionColorGradientStop* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CUI__CComposition__CCompositionColorGradientStop* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CUI__CComposition__CCompositionColorGradientStop* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CUI__CComposition__CCompositionColorGradientStop* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CUI__CComposition__CCompositionColorGradientStop* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CUI__CComposition__CCompositionColorGradientStop* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* First)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CUI__CComposition__CCompositionColorGradientStop* This,
        __x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CComposition__CCompositionColorGradientStop** result);

        END_INTERFACE
    } __x_ABI_C__FIIterable_1___x_ABI_CWindows__CUI__CComposition__CCompositionColorGradientStopVtbl;

    interface __x_ABI_C__FIIterable_1___x_ABI_CWindows__CUI__CComposition__CCompositionColorGradientStop
    {
        CONST_VTBL struct __x_ABI_C__FIIterable_1___x_ABI_CWindows__CUI__CComposition__CCompositionColorGradientStopVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIIterable_1___x_ABI_CWindows__CUI__CComposition__CCompositionColorGradientStop_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CComposition__CCompositionProjectedShadowCaster_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CComposition__CCompositionProjectedShadowCaster_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CComposition__CCompositionProjectedShadowCaster __x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CComposition__CCompositionProjectedShadowCaster;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CComposition__CCompositionProjectedShadowCaster;

    typedef struct __x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CComposition__CCompositionProjectedShadowCasterVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CComposition__CCompositionProjectedShadowCaster* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CComposition__CCompositionProjectedShadowCaster* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CComposition__CCompositionProjectedShadowCaster* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CComposition__CCompositionProjectedShadowCaster* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CComposition__CCompositionProjectedShadowCaster* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CComposition__CCompositionProjectedShadowCaster* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Current)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CComposition__CCompositionProjectedShadowCaster* This,
        __x_ABI_CWindows_CUI_CComposition_CICompositionProjectedShadowCaster** result);
    HRESULT (STDMETHODCALLTYPE* get_HasCurrent)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CComposition__CCompositionProjectedShadowCaster* This,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* MoveNext)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CComposition__CCompositionProjectedShadowCaster* This,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CComposition__CCompositionProjectedShadowCaster* This,
        UINT32 itemsLength,
        __x_ABI_CWindows_CUI_CComposition_CICompositionProjectedShadowCaster** items,
        UINT32* result);

        END_INTERFACE
    } __x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CComposition__CCompositionProjectedShadowCasterVtbl;

    interface __x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CComposition__CCompositionProjectedShadowCaster
    {
        CONST_VTBL struct __x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CComposition__CCompositionProjectedShadowCasterVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CComposition__CCompositionProjectedShadowCaster_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIIterable_1___x_ABI_CWindows__CUI__CComposition__CCompositionProjectedShadowCaster_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIIterable_1___x_ABI_CWindows__CUI__CComposition__CCompositionProjectedShadowCaster_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIIterable_1___x_ABI_CWindows__CUI__CComposition__CCompositionProjectedShadowCaster __x_ABI_C__FIIterable_1___x_ABI_CWindows__CUI__CComposition__CCompositionProjectedShadowCaster;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIIterable_1___x_ABI_CWindows__CUI__CComposition__CCompositionProjectedShadowCaster;

    typedef struct __x_ABI_C__FIIterable_1___x_ABI_CWindows__CUI__CComposition__CCompositionProjectedShadowCasterVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CUI__CComposition__CCompositionProjectedShadowCaster* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CUI__CComposition__CCompositionProjectedShadowCaster* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CUI__CComposition__CCompositionProjectedShadowCaster* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CUI__CComposition__CCompositionProjectedShadowCaster* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CUI__CComposition__CCompositionProjectedShadowCaster* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CUI__CComposition__CCompositionProjectedShadowCaster* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* First)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CUI__CComposition__CCompositionProjectedShadowCaster* This,
        __x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CComposition__CCompositionProjectedShadowCaster** result);

        END_INTERFACE
    } __x_ABI_C__FIIterable_1___x_ABI_CWindows__CUI__CComposition__CCompositionProjectedShadowCasterVtbl;

    interface __x_ABI_C__FIIterable_1___x_ABI_CWindows__CUI__CComposition__CCompositionProjectedShadowCaster
    {
        CONST_VTBL struct __x_ABI_C__FIIterable_1___x_ABI_CWindows__CUI__CComposition__CCompositionProjectedShadowCasterVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIIterable_1___x_ABI_CWindows__CUI__CComposition__CCompositionProjectedShadowCaster_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CComposition__CCompositionProjectedShadowReceiver_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CComposition__CCompositionProjectedShadowReceiver_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CComposition__CCompositionProjectedShadowReceiver __x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CComposition__CCompositionProjectedShadowReceiver;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CComposition__CCompositionProjectedShadowReceiver;

    typedef struct __x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CComposition__CCompositionProjectedShadowReceiverVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CComposition__CCompositionProjectedShadowReceiver* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CComposition__CCompositionProjectedShadowReceiver* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CComposition__CCompositionProjectedShadowReceiver* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CComposition__CCompositionProjectedShadowReceiver* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CComposition__CCompositionProjectedShadowReceiver* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CComposition__CCompositionProjectedShadowReceiver* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Current)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CComposition__CCompositionProjectedShadowReceiver* This,
        __x_ABI_CWindows_CUI_CComposition_CICompositionProjectedShadowReceiver** result);
    HRESULT (STDMETHODCALLTYPE* get_HasCurrent)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CComposition__CCompositionProjectedShadowReceiver* This,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* MoveNext)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CComposition__CCompositionProjectedShadowReceiver* This,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CComposition__CCompositionProjectedShadowReceiver* This,
        UINT32 itemsLength,
        __x_ABI_CWindows_CUI_CComposition_CICompositionProjectedShadowReceiver** items,
        UINT32* result);

        END_INTERFACE
    } __x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CComposition__CCompositionProjectedShadowReceiverVtbl;

    interface __x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CComposition__CCompositionProjectedShadowReceiver
    {
        CONST_VTBL struct __x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CComposition__CCompositionProjectedShadowReceiverVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CComposition__CCompositionProjectedShadowReceiver_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIIterable_1___x_ABI_CWindows__CUI__CComposition__CCompositionProjectedShadowReceiver_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIIterable_1___x_ABI_CWindows__CUI__CComposition__CCompositionProjectedShadowReceiver_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIIterable_1___x_ABI_CWindows__CUI__CComposition__CCompositionProjectedShadowReceiver __x_ABI_C__FIIterable_1___x_ABI_CWindows__CUI__CComposition__CCompositionProjectedShadowReceiver;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIIterable_1___x_ABI_CWindows__CUI__CComposition__CCompositionProjectedShadowReceiver;

    typedef struct __x_ABI_C__FIIterable_1___x_ABI_CWindows__CUI__CComposition__CCompositionProjectedShadowReceiverVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CUI__CComposition__CCompositionProjectedShadowReceiver* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CUI__CComposition__CCompositionProjectedShadowReceiver* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CUI__CComposition__CCompositionProjectedShadowReceiver* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CUI__CComposition__CCompositionProjectedShadowReceiver* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CUI__CComposition__CCompositionProjectedShadowReceiver* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CUI__CComposition__CCompositionProjectedShadowReceiver* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* First)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CUI__CComposition__CCompositionProjectedShadowReceiver* This,
        __x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CComposition__CCompositionProjectedShadowReceiver** result);

        END_INTERFACE
    } __x_ABI_C__FIIterable_1___x_ABI_CWindows__CUI__CComposition__CCompositionProjectedShadowReceiverVtbl;

    interface __x_ABI_C__FIIterable_1___x_ABI_CWindows__CUI__CComposition__CCompositionProjectedShadowReceiver
    {
        CONST_VTBL struct __x_ABI_C__FIIterable_1___x_ABI_CWindows__CUI__CComposition__CCompositionProjectedShadowReceiverVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIIterable_1___x_ABI_CWindows__CUI__CComposition__CCompositionProjectedShadowReceiver_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CComposition__CCompositionShape_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CComposition__CCompositionShape_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CComposition__CCompositionShape __x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CComposition__CCompositionShape;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CComposition__CCompositionShape;

    typedef struct __x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CComposition__CCompositionShapeVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CComposition__CCompositionShape* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CComposition__CCompositionShape* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CComposition__CCompositionShape* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CComposition__CCompositionShape* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CComposition__CCompositionShape* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CComposition__CCompositionShape* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Current)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CComposition__CCompositionShape* This,
        __x_ABI_CWindows_CUI_CComposition_CICompositionShape** result);
    HRESULT (STDMETHODCALLTYPE* get_HasCurrent)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CComposition__CCompositionShape* This,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* MoveNext)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CComposition__CCompositionShape* This,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CComposition__CCompositionShape* This,
        UINT32 itemsLength,
        __x_ABI_CWindows_CUI_CComposition_CICompositionShape** items,
        UINT32* result);

        END_INTERFACE
    } __x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CComposition__CCompositionShapeVtbl;

    interface __x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CComposition__CCompositionShape
    {
        CONST_VTBL struct __x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CComposition__CCompositionShapeVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CComposition__CCompositionShape_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIIterable_1___x_ABI_CWindows__CUI__CComposition__CCompositionShape_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIIterable_1___x_ABI_CWindows__CUI__CComposition__CCompositionShape_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIIterable_1___x_ABI_CWindows__CUI__CComposition__CCompositionShape __x_ABI_C__FIIterable_1___x_ABI_CWindows__CUI__CComposition__CCompositionShape;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIIterable_1___x_ABI_CWindows__CUI__CComposition__CCompositionShape;

    typedef struct __x_ABI_C__FIIterable_1___x_ABI_CWindows__CUI__CComposition__CCompositionShapeVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CUI__CComposition__CCompositionShape* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CUI__CComposition__CCompositionShape* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CUI__CComposition__CCompositionShape* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CUI__CComposition__CCompositionShape* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CUI__CComposition__CCompositionShape* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CUI__CComposition__CCompositionShape* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* First)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CUI__CComposition__CCompositionShape* This,
        __x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CComposition__CCompositionShape** result);

        END_INTERFACE
    } __x_ABI_C__FIIterable_1___x_ABI_CWindows__CUI__CComposition__CCompositionShapeVtbl;

    interface __x_ABI_C__FIIterable_1___x_ABI_CWindows__CUI__CComposition__CCompositionShape
    {
        CONST_VTBL struct __x_ABI_C__FIIterable_1___x_ABI_CWindows__CUI__CComposition__CCompositionShapeVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIIterable_1___x_ABI_CWindows__CUI__CComposition__CCompositionShape_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CComposition__CVisual_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CComposition__CVisual_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CComposition__CVisual __x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CComposition__CVisual;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CComposition__CVisual;

    typedef struct __x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CComposition__CVisualVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CComposition__CVisual* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CComposition__CVisual* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CComposition__CVisual* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CComposition__CVisual* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CComposition__CVisual* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CComposition__CVisual* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Current)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CComposition__CVisual* This,
        __x_ABI_CWindows_CUI_CComposition_CIVisual** result);
    HRESULT (STDMETHODCALLTYPE* get_HasCurrent)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CComposition__CVisual* This,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* MoveNext)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CComposition__CVisual* This,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CComposition__CVisual* This,
        UINT32 itemsLength,
        __x_ABI_CWindows_CUI_CComposition_CIVisual** items,
        UINT32* result);

        END_INTERFACE
    } __x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CComposition__CVisualVtbl;

    interface __x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CComposition__CVisual
    {
        CONST_VTBL struct __x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CComposition__CVisualVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CComposition__CVisual_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIIterable_1___x_ABI_CWindows__CUI__CComposition__CVisual_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIIterable_1___x_ABI_CWindows__CUI__CComposition__CVisual_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIIterable_1___x_ABI_CWindows__CUI__CComposition__CVisual __x_ABI_C__FIIterable_1___x_ABI_CWindows__CUI__CComposition__CVisual;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIIterable_1___x_ABI_CWindows__CUI__CComposition__CVisual;

    typedef struct __x_ABI_C__FIIterable_1___x_ABI_CWindows__CUI__CComposition__CVisualVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CUI__CComposition__CVisual* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CUI__CComposition__CVisual* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CUI__CComposition__CVisual* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CUI__CComposition__CVisual* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CUI__CComposition__CVisual* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CUI__CComposition__CVisual* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* First)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CUI__CComposition__CVisual* This,
        __x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CComposition__CVisual** result);

        END_INTERFACE
    } __x_ABI_C__FIIterable_1___x_ABI_CWindows__CUI__CComposition__CVisualVtbl;

    interface __x_ABI_C__FIIterable_1___x_ABI_CWindows__CUI__CComposition__CVisual
    {
        CONST_VTBL struct __x_ABI_C__FIIterable_1___x_ABI_CWindows__CUI__CComposition__CVisualVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIIterable_1___x_ABI_CWindows__CUI__CComposition__CVisual_INTERFACE_DEFINED__
    
typedef interface __x_ABI_C__FIMapView_2_HSTRING_HSTRING __x_ABI_C__FIMapView_2_HSTRING_HSTRING;

#if !defined(____x_ABI_C__FIMapView_2_HSTRING_HSTRING_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIMapView_2_HSTRING_HSTRING_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIMapView_2_HSTRING_HSTRING __x_ABI_C__FIMapView_2_HSTRING_HSTRING;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIMapView_2_HSTRING_HSTRING;

    typedef struct __x_ABI_C__FIMapView_2_HSTRING_HSTRINGVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIMapView_2_HSTRING_HSTRING* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIMapView_2_HSTRING_HSTRING* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIMapView_2_HSTRING_HSTRING* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIMapView_2_HSTRING_HSTRING* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIMapView_2_HSTRING_HSTRING* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIMapView_2_HSTRING_HSTRING* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* Lookup)(__x_ABI_C__FIMapView_2_HSTRING_HSTRING* This,
        HSTRING key,
        HSTRING* result);
    HRESULT (STDMETHODCALLTYPE* get_Size)(__x_ABI_C__FIMapView_2_HSTRING_HSTRING* This,
        UINT32* result);
    HRESULT (STDMETHODCALLTYPE* HasKey)(__x_ABI_C__FIMapView_2_HSTRING_HSTRING* This,
        HSTRING key,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* Split)(__x_ABI_C__FIMapView_2_HSTRING_HSTRING* This,
        __x_ABI_C__FIMapView_2_HSTRING_HSTRING** first,
        __x_ABI_C__FIMapView_2_HSTRING_HSTRING** second);

        END_INTERFACE
    } __x_ABI_C__FIMapView_2_HSTRING_HSTRINGVtbl;

    interface __x_ABI_C__FIMapView_2_HSTRING_HSTRING
    {
        CONST_VTBL struct __x_ABI_C__FIMapView_2_HSTRING_HSTRINGVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIMapView_2_HSTRING_HSTRING_INTERFACE_DEFINED__
    
typedef interface __x_ABI_C__FIMapView_2_HSTRING___x_ABI_CWindows__CUI__CComposition__CICompositionAnimationBase __x_ABI_C__FIMapView_2_HSTRING___x_ABI_CWindows__CUI__CComposition__CICompositionAnimationBase;

#if !defined(____x_ABI_C__FIMapView_2_HSTRING___x_ABI_CWindows__CUI__CComposition__CICompositionAnimationBase_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIMapView_2_HSTRING___x_ABI_CWindows__CUI__CComposition__CICompositionAnimationBase_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIMapView_2_HSTRING___x_ABI_CWindows__CUI__CComposition__CICompositionAnimationBase __x_ABI_C__FIMapView_2_HSTRING___x_ABI_CWindows__CUI__CComposition__CICompositionAnimationBase;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIMapView_2_HSTRING___x_ABI_CWindows__CUI__CComposition__CICompositionAnimationBase;

    typedef struct __x_ABI_C__FIMapView_2_HSTRING___x_ABI_CWindows__CUI__CComposition__CICompositionAnimationBaseVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIMapView_2_HSTRING___x_ABI_CWindows__CUI__CComposition__CICompositionAnimationBase* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIMapView_2_HSTRING___x_ABI_CWindows__CUI__CComposition__CICompositionAnimationBase* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIMapView_2_HSTRING___x_ABI_CWindows__CUI__CComposition__CICompositionAnimationBase* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIMapView_2_HSTRING___x_ABI_CWindows__CUI__CComposition__CICompositionAnimationBase* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIMapView_2_HSTRING___x_ABI_CWindows__CUI__CComposition__CICompositionAnimationBase* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIMapView_2_HSTRING___x_ABI_CWindows__CUI__CComposition__CICompositionAnimationBase* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* Lookup)(__x_ABI_C__FIMapView_2_HSTRING___x_ABI_CWindows__CUI__CComposition__CICompositionAnimationBase* This,
        HSTRING key,
        __x_ABI_CWindows_CUI_CComposition_CICompositionAnimationBase** result);
    HRESULT (STDMETHODCALLTYPE* get_Size)(__x_ABI_C__FIMapView_2_HSTRING___x_ABI_CWindows__CUI__CComposition__CICompositionAnimationBase* This,
        UINT32* result);
    HRESULT (STDMETHODCALLTYPE* HasKey)(__x_ABI_C__FIMapView_2_HSTRING___x_ABI_CWindows__CUI__CComposition__CICompositionAnimationBase* This,
        HSTRING key,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* Split)(__x_ABI_C__FIMapView_2_HSTRING___x_ABI_CWindows__CUI__CComposition__CICompositionAnimationBase* This,
        __x_ABI_C__FIMapView_2_HSTRING___x_ABI_CWindows__CUI__CComposition__CICompositionAnimationBase** first,
        __x_ABI_C__FIMapView_2_HSTRING___x_ABI_CWindows__CUI__CComposition__CICompositionAnimationBase** second);

        END_INTERFACE
    } __x_ABI_C__FIMapView_2_HSTRING___x_ABI_CWindows__CUI__CComposition__CICompositionAnimationBaseVtbl;

    interface __x_ABI_C__FIMapView_2_HSTRING___x_ABI_CWindows__CUI__CComposition__CICompositionAnimationBase
    {
        CONST_VTBL struct __x_ABI_C__FIMapView_2_HSTRING___x_ABI_CWindows__CUI__CComposition__CICompositionAnimationBaseVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIMapView_2_HSTRING___x_ABI_CWindows__CUI__CComposition__CICompositionAnimationBase_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIMap_2_HSTRING_HSTRING_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIMap_2_HSTRING_HSTRING_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIMap_2_HSTRING_HSTRING __x_ABI_C__FIMap_2_HSTRING_HSTRING;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIMap_2_HSTRING_HSTRING;

    typedef struct __x_ABI_C__FIMap_2_HSTRING_HSTRINGVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIMap_2_HSTRING_HSTRING* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIMap_2_HSTRING_HSTRING* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIMap_2_HSTRING_HSTRING* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIMap_2_HSTRING_HSTRING* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIMap_2_HSTRING_HSTRING* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIMap_2_HSTRING_HSTRING* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* Lookup)(__x_ABI_C__FIMap_2_HSTRING_HSTRING* This,
        HSTRING key,
        HSTRING* result);
    HRESULT (STDMETHODCALLTYPE* get_Size)(__x_ABI_C__FIMap_2_HSTRING_HSTRING* This,
        UINT32* result);
    HRESULT (STDMETHODCALLTYPE* HasKey)(__x_ABI_C__FIMap_2_HSTRING_HSTRING* This,
        HSTRING key,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* GetView)(__x_ABI_C__FIMap_2_HSTRING_HSTRING* This,
        __x_ABI_C__FIMapView_2_HSTRING_HSTRING** result);
    HRESULT (STDMETHODCALLTYPE* Insert)(__x_ABI_C__FIMap_2_HSTRING_HSTRING* This,
        HSTRING key,
        HSTRING value,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* Remove)(__x_ABI_C__FIMap_2_HSTRING_HSTRING* This,
        HSTRING key);
    HRESULT (STDMETHODCALLTYPE* Clear)(__x_ABI_C__FIMap_2_HSTRING_HSTRING* This);

        END_INTERFACE
    } __x_ABI_C__FIMap_2_HSTRING_HSTRINGVtbl;

    interface __x_ABI_C__FIMap_2_HSTRING_HSTRING
    {
        CONST_VTBL struct __x_ABI_C__FIMap_2_HSTRING_HSTRINGVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIMap_2_HSTRING_HSTRING_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIMap_2_HSTRING___x_ABI_CWindows__CUI__CComposition__CICompositionAnimationBase_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIMap_2_HSTRING___x_ABI_CWindows__CUI__CComposition__CICompositionAnimationBase_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIMap_2_HSTRING___x_ABI_CWindows__CUI__CComposition__CICompositionAnimationBase __x_ABI_C__FIMap_2_HSTRING___x_ABI_CWindows__CUI__CComposition__CICompositionAnimationBase;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIMap_2_HSTRING___x_ABI_CWindows__CUI__CComposition__CICompositionAnimationBase;

    typedef struct __x_ABI_C__FIMap_2_HSTRING___x_ABI_CWindows__CUI__CComposition__CICompositionAnimationBaseVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIMap_2_HSTRING___x_ABI_CWindows__CUI__CComposition__CICompositionAnimationBase* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIMap_2_HSTRING___x_ABI_CWindows__CUI__CComposition__CICompositionAnimationBase* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIMap_2_HSTRING___x_ABI_CWindows__CUI__CComposition__CICompositionAnimationBase* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIMap_2_HSTRING___x_ABI_CWindows__CUI__CComposition__CICompositionAnimationBase* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIMap_2_HSTRING___x_ABI_CWindows__CUI__CComposition__CICompositionAnimationBase* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIMap_2_HSTRING___x_ABI_CWindows__CUI__CComposition__CICompositionAnimationBase* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* Lookup)(__x_ABI_C__FIMap_2_HSTRING___x_ABI_CWindows__CUI__CComposition__CICompositionAnimationBase* This,
        HSTRING key,
        __x_ABI_CWindows_CUI_CComposition_CICompositionAnimationBase** result);
    HRESULT (STDMETHODCALLTYPE* get_Size)(__x_ABI_C__FIMap_2_HSTRING___x_ABI_CWindows__CUI__CComposition__CICompositionAnimationBase* This,
        UINT32* result);
    HRESULT (STDMETHODCALLTYPE* HasKey)(__x_ABI_C__FIMap_2_HSTRING___x_ABI_CWindows__CUI__CComposition__CICompositionAnimationBase* This,
        HSTRING key,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* GetView)(__x_ABI_C__FIMap_2_HSTRING___x_ABI_CWindows__CUI__CComposition__CICompositionAnimationBase* This,
        __x_ABI_C__FIMapView_2_HSTRING___x_ABI_CWindows__CUI__CComposition__CICompositionAnimationBase** result);
    HRESULT (STDMETHODCALLTYPE* Insert)(__x_ABI_C__FIMap_2_HSTRING___x_ABI_CWindows__CUI__CComposition__CICompositionAnimationBase* This,
        HSTRING key,
        __x_ABI_CWindows_CUI_CComposition_CICompositionAnimationBase* value,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* Remove)(__x_ABI_C__FIMap_2_HSTRING___x_ABI_CWindows__CUI__CComposition__CICompositionAnimationBase* This,
        HSTRING key);
    HRESULT (STDMETHODCALLTYPE* Clear)(__x_ABI_C__FIMap_2_HSTRING___x_ABI_CWindows__CUI__CComposition__CICompositionAnimationBase* This);

        END_INTERFACE
    } __x_ABI_C__FIMap_2_HSTRING___x_ABI_CWindows__CUI__CComposition__CICompositionAnimationBaseVtbl;

    interface __x_ABI_C__FIMap_2_HSTRING___x_ABI_CWindows__CUI__CComposition__CICompositionAnimationBase
    {
        CONST_VTBL struct __x_ABI_C__FIMap_2_HSTRING___x_ABI_CWindows__CUI__CComposition__CICompositionAnimationBaseVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIMap_2_HSTRING___x_ABI_CWindows__CUI__CComposition__CICompositionAnimationBase_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIVectorView_1_float_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIVectorView_1_float_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIVectorView_1_float __x_ABI_C__FIVectorView_1_float;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIVectorView_1_float;

    typedef struct __x_ABI_C__FIVectorView_1_floatVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIVectorView_1_float* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIVectorView_1_float* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIVectorView_1_float* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIVectorView_1_float* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIVectorView_1_float* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIVectorView_1_float* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* GetAt)(__x_ABI_C__FIVectorView_1_float* This,
        UINT32 index,
        FLOAT* result);
    HRESULT (STDMETHODCALLTYPE* get_Size)(__x_ABI_C__FIVectorView_1_float* This,
        UINT32* result);
    HRESULT (STDMETHODCALLTYPE* IndexOf)(__x_ABI_C__FIVectorView_1_float* This,
        FLOAT value,
        UINT32* index,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__x_ABI_C__FIVectorView_1_float* This,
        UINT32 startIndex,
        UINT32 itemsLength,
        FLOAT* items,
        UINT32* result);

        END_INTERFACE
    } __x_ABI_C__FIVectorView_1_floatVtbl;

    interface __x_ABI_C__FIVectorView_1_float
    {
        CONST_VTBL struct __x_ABI_C__FIVectorView_1_floatVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIVectorView_1_float_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CComposition__CCompositionColorGradientStop_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CComposition__CCompositionColorGradientStop_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CComposition__CCompositionColorGradientStop __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CComposition__CCompositionColorGradientStop;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CComposition__CCompositionColorGradientStop;

    typedef struct __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CComposition__CCompositionColorGradientStopVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CComposition__CCompositionColorGradientStop* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CComposition__CCompositionColorGradientStop* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CComposition__CCompositionColorGradientStop* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CComposition__CCompositionColorGradientStop* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CComposition__CCompositionColorGradientStop* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CComposition__CCompositionColorGradientStop* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* GetAt)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CComposition__CCompositionColorGradientStop* This,
        UINT32 index,
        __x_ABI_CWindows_CUI_CComposition_CICompositionColorGradientStop** result);
    HRESULT (STDMETHODCALLTYPE* get_Size)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CComposition__CCompositionColorGradientStop* This,
        UINT32* result);
    HRESULT (STDMETHODCALLTYPE* IndexOf)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CComposition__CCompositionColorGradientStop* This,
        __x_ABI_CWindows_CUI_CComposition_CICompositionColorGradientStop* value,
        UINT32* index,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CComposition__CCompositionColorGradientStop* This,
        UINT32 startIndex,
        UINT32 itemsLength,
        __x_ABI_CWindows_CUI_CComposition_CICompositionColorGradientStop** items,
        UINT32* result);

        END_INTERFACE
    } __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CComposition__CCompositionColorGradientStopVtbl;

    interface __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CComposition__CCompositionColorGradientStop
    {
        CONST_VTBL struct __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CComposition__CCompositionColorGradientStopVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CComposition__CCompositionColorGradientStop_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CComposition__CCompositionShape_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CComposition__CCompositionShape_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CComposition__CCompositionShape __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CComposition__CCompositionShape;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CComposition__CCompositionShape;

    typedef struct __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CComposition__CCompositionShapeVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CComposition__CCompositionShape* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CComposition__CCompositionShape* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CComposition__CCompositionShape* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CComposition__CCompositionShape* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CComposition__CCompositionShape* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CComposition__CCompositionShape* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* GetAt)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CComposition__CCompositionShape* This,
        UINT32 index,
        __x_ABI_CWindows_CUI_CComposition_CICompositionShape** result);
    HRESULT (STDMETHODCALLTYPE* get_Size)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CComposition__CCompositionShape* This,
        UINT32* result);
    HRESULT (STDMETHODCALLTYPE* IndexOf)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CComposition__CCompositionShape* This,
        __x_ABI_CWindows_CUI_CComposition_CICompositionShape* value,
        UINT32* index,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CComposition__CCompositionShape* This,
        UINT32 startIndex,
        UINT32 itemsLength,
        __x_ABI_CWindows_CUI_CComposition_CICompositionShape** items,
        UINT32* result);

        END_INTERFACE
    } __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CComposition__CCompositionShapeVtbl;

    interface __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CComposition__CCompositionShape
    {
        CONST_VTBL struct __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CComposition__CCompositionShapeVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CComposition__CCompositionShape_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIVector_1_float_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIVector_1_float_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIVector_1_float __x_ABI_C__FIVector_1_float;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIVector_1_float;

    typedef struct __x_ABI_C__FIVector_1_floatVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIVector_1_float* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIVector_1_float* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIVector_1_float* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIVector_1_float* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIVector_1_float* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIVector_1_float* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* GetAt)(__x_ABI_C__FIVector_1_float* This,
        UINT32 index,
        FLOAT* result);
    HRESULT (STDMETHODCALLTYPE* get_Size)(__x_ABI_C__FIVector_1_float* This,
        UINT32* result);
    HRESULT (STDMETHODCALLTYPE* GetView)(__x_ABI_C__FIVector_1_float* This,
        __x_ABI_C__FIVectorView_1_float** result);
    HRESULT (STDMETHODCALLTYPE* IndexOf)(__x_ABI_C__FIVector_1_float* This,
        FLOAT value,
        UINT32* index,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* SetAt)(__x_ABI_C__FIVector_1_float* This,
        UINT32 index,
        FLOAT value);
    HRESULT (STDMETHODCALLTYPE* InsertAt)(__x_ABI_C__FIVector_1_float* This,
        UINT32 index,
        FLOAT value);
    HRESULT (STDMETHODCALLTYPE* RemoveAt)(__x_ABI_C__FIVector_1_float* This,
        UINT32 index);
    HRESULT (STDMETHODCALLTYPE* Append)(__x_ABI_C__FIVector_1_float* This,
        FLOAT value);
    HRESULT (STDMETHODCALLTYPE* RemoveAtEnd)(__x_ABI_C__FIVector_1_float* This);
    HRESULT (STDMETHODCALLTYPE* Clear)(__x_ABI_C__FIVector_1_float* This);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__x_ABI_C__FIVector_1_float* This,
        UINT32 startIndex,
        UINT32 itemsLength,
        FLOAT* items,
        UINT32* result);
    HRESULT (STDMETHODCALLTYPE* ReplaceAll)(__x_ABI_C__FIVector_1_float* This,
        UINT32 itemsLength,
        FLOAT* items);

        END_INTERFACE
    } __x_ABI_C__FIVector_1_floatVtbl;

    interface __x_ABI_C__FIVector_1_float
    {
        CONST_VTBL struct __x_ABI_C__FIVector_1_floatVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIVector_1_float_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CComposition__CCompositionColorGradientStop_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CComposition__CCompositionColorGradientStop_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CComposition__CCompositionColorGradientStop __x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CComposition__CCompositionColorGradientStop;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CComposition__CCompositionColorGradientStop;

    typedef struct __x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CComposition__CCompositionColorGradientStopVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CComposition__CCompositionColorGradientStop* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CComposition__CCompositionColorGradientStop* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CComposition__CCompositionColorGradientStop* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CComposition__CCompositionColorGradientStop* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CComposition__CCompositionColorGradientStop* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CComposition__CCompositionColorGradientStop* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* GetAt)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CComposition__CCompositionColorGradientStop* This,
        UINT32 index,
        __x_ABI_CWindows_CUI_CComposition_CICompositionColorGradientStop** result);
    HRESULT (STDMETHODCALLTYPE* get_Size)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CComposition__CCompositionColorGradientStop* This,
        UINT32* result);
    HRESULT (STDMETHODCALLTYPE* GetView)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CComposition__CCompositionColorGradientStop* This,
        __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CComposition__CCompositionColorGradientStop** result);
    HRESULT (STDMETHODCALLTYPE* IndexOf)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CComposition__CCompositionColorGradientStop* This,
        __x_ABI_CWindows_CUI_CComposition_CICompositionColorGradientStop* value,
        UINT32* index,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* SetAt)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CComposition__CCompositionColorGradientStop* This,
        UINT32 index,
        __x_ABI_CWindows_CUI_CComposition_CICompositionColorGradientStop* value);
    HRESULT (STDMETHODCALLTYPE* InsertAt)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CComposition__CCompositionColorGradientStop* This,
        UINT32 index,
        __x_ABI_CWindows_CUI_CComposition_CICompositionColorGradientStop* value);
    HRESULT (STDMETHODCALLTYPE* RemoveAt)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CComposition__CCompositionColorGradientStop* This,
        UINT32 index);
    HRESULT (STDMETHODCALLTYPE* Append)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CComposition__CCompositionColorGradientStop* This,
        __x_ABI_CWindows_CUI_CComposition_CICompositionColorGradientStop* value);
    HRESULT (STDMETHODCALLTYPE* RemoveAtEnd)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CComposition__CCompositionColorGradientStop* This);
    HRESULT (STDMETHODCALLTYPE* Clear)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CComposition__CCompositionColorGradientStop* This);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CComposition__CCompositionColorGradientStop* This,
        UINT32 startIndex,
        UINT32 itemsLength,
        __x_ABI_CWindows_CUI_CComposition_CICompositionColorGradientStop** items,
        UINT32* result);
    HRESULT (STDMETHODCALLTYPE* ReplaceAll)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CComposition__CCompositionColorGradientStop* This,
        UINT32 itemsLength,
        __x_ABI_CWindows_CUI_CComposition_CICompositionColorGradientStop** items);

        END_INTERFACE
    } __x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CComposition__CCompositionColorGradientStopVtbl;

    interface __x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CComposition__CCompositionColorGradientStop
    {
        CONST_VTBL struct __x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CComposition__CCompositionColorGradientStopVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CComposition__CCompositionColorGradientStop_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CComposition__CCompositionShape_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CComposition__CCompositionShape_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CComposition__CCompositionShape __x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CComposition__CCompositionShape;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CComposition__CCompositionShape;

    typedef struct __x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CComposition__CCompositionShapeVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CComposition__CCompositionShape* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CComposition__CCompositionShape* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CComposition__CCompositionShape* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CComposition__CCompositionShape* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CComposition__CCompositionShape* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CComposition__CCompositionShape* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* GetAt)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CComposition__CCompositionShape* This,
        UINT32 index,
        __x_ABI_CWindows_CUI_CComposition_CICompositionShape** result);
    HRESULT (STDMETHODCALLTYPE* get_Size)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CComposition__CCompositionShape* This,
        UINT32* result);
    HRESULT (STDMETHODCALLTYPE* GetView)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CComposition__CCompositionShape* This,
        __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CComposition__CCompositionShape** result);
    HRESULT (STDMETHODCALLTYPE* IndexOf)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CComposition__CCompositionShape* This,
        __x_ABI_CWindows_CUI_CComposition_CICompositionShape* value,
        UINT32* index,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* SetAt)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CComposition__CCompositionShape* This,
        UINT32 index,
        __x_ABI_CWindows_CUI_CComposition_CICompositionShape* value);
    HRESULT (STDMETHODCALLTYPE* InsertAt)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CComposition__CCompositionShape* This,
        UINT32 index,
        __x_ABI_CWindows_CUI_CComposition_CICompositionShape* value);
    HRESULT (STDMETHODCALLTYPE* RemoveAt)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CComposition__CCompositionShape* This,
        UINT32 index);
    HRESULT (STDMETHODCALLTYPE* Append)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CComposition__CCompositionShape* This,
        __x_ABI_CWindows_CUI_CComposition_CICompositionShape* value);
    HRESULT (STDMETHODCALLTYPE* RemoveAtEnd)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CComposition__CCompositionShape* This);
    HRESULT (STDMETHODCALLTYPE* Clear)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CComposition__CCompositionShape* This);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CComposition__CCompositionShape* This,
        UINT32 startIndex,
        UINT32 itemsLength,
        __x_ABI_CWindows_CUI_CComposition_CICompositionShape** items,
        UINT32* result);
    HRESULT (STDMETHODCALLTYPE* ReplaceAll)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CComposition__CCompositionShape* This,
        UINT32 itemsLength,
        __x_ABI_CWindows_CUI_CComposition_CICompositionShape** items);

        END_INTERFACE
    } __x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CComposition__CCompositionShapeVtbl;

    interface __x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CComposition__CCompositionShape
    {
        CONST_VTBL struct __x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CComposition__CCompositionShapeVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CComposition__CCompositionShape_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIReference_1_float_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIReference_1_float_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIReference_1_float __x_ABI_C__FIReference_1_float;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIReference_1_float;

    typedef struct __x_ABI_C__FIReference_1_floatVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIReference_1_float* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIReference_1_float* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIReference_1_float* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIReference_1_float* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIReference_1_float* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIReference_1_float* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Value)(__x_ABI_C__FIReference_1_float* This,
        FLOAT* result);

        END_INTERFACE
    } __x_ABI_C__FIReference_1_floatVtbl;

    interface __x_ABI_C__FIReference_1_float
    {
        CONST_VTBL struct __x_ABI_C__FIReference_1_floatVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIReference_1_float_INTERFACE_DEFINED__
    
typedef struct __x_ABI_CWindows_CFoundation_CNumerics_CVector2 __x_ABI_CWindows_CFoundation_CNumerics_CVector2;

#if !defined(____x_ABI_C__FIReference_1___x_ABI_CWindows__CFoundation__CNumerics__CVector2_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIReference_1___x_ABI_CWindows__CFoundation__CNumerics__CVector2_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIReference_1___x_ABI_CWindows__CFoundation__CNumerics__CVector2 __x_ABI_C__FIReference_1___x_ABI_CWindows__CFoundation__CNumerics__CVector2;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIReference_1___x_ABI_CWindows__CFoundation__CNumerics__CVector2;

    typedef struct __x_ABI_C__FIReference_1___x_ABI_CWindows__CFoundation__CNumerics__CVector2Vtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIReference_1___x_ABI_CWindows__CFoundation__CNumerics__CVector2* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIReference_1___x_ABI_CWindows__CFoundation__CNumerics__CVector2* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIReference_1___x_ABI_CWindows__CFoundation__CNumerics__CVector2* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIReference_1___x_ABI_CWindows__CFoundation__CNumerics__CVector2* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIReference_1___x_ABI_CWindows__CFoundation__CNumerics__CVector2* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIReference_1___x_ABI_CWindows__CFoundation__CNumerics__CVector2* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Value)(__x_ABI_C__FIReference_1___x_ABI_CWindows__CFoundation__CNumerics__CVector2* This,
        struct __x_ABI_CWindows_CFoundation_CNumerics_CVector2* result);

        END_INTERFACE
    } __x_ABI_C__FIReference_1___x_ABI_CWindows__CFoundation__CNumerics__CVector2Vtbl;

    interface __x_ABI_C__FIReference_1___x_ABI_CWindows__CFoundation__CNumerics__CVector2
    {
        CONST_VTBL struct __x_ABI_C__FIReference_1___x_ABI_CWindows__CFoundation__CNumerics__CVector2Vtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIReference_1___x_ABI_CWindows__CFoundation__CNumerics__CVector2_INTERFACE_DEFINED__
    
typedef struct __x_ABI_CWindows_CFoundation_CNumerics_CVector3 __x_ABI_CWindows_CFoundation_CNumerics_CVector3;

#if !defined(____x_ABI_C__FIReference_1___x_ABI_CWindows__CFoundation__CNumerics__CVector3_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIReference_1___x_ABI_CWindows__CFoundation__CNumerics__CVector3_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIReference_1___x_ABI_CWindows__CFoundation__CNumerics__CVector3 __x_ABI_C__FIReference_1___x_ABI_CWindows__CFoundation__CNumerics__CVector3;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIReference_1___x_ABI_CWindows__CFoundation__CNumerics__CVector3;

    typedef struct __x_ABI_C__FIReference_1___x_ABI_CWindows__CFoundation__CNumerics__CVector3Vtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIReference_1___x_ABI_CWindows__CFoundation__CNumerics__CVector3* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIReference_1___x_ABI_CWindows__CFoundation__CNumerics__CVector3* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIReference_1___x_ABI_CWindows__CFoundation__CNumerics__CVector3* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIReference_1___x_ABI_CWindows__CFoundation__CNumerics__CVector3* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIReference_1___x_ABI_CWindows__CFoundation__CNumerics__CVector3* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIReference_1___x_ABI_CWindows__CFoundation__CNumerics__CVector3* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Value)(__x_ABI_C__FIReference_1___x_ABI_CWindows__CFoundation__CNumerics__CVector3* This,
        struct __x_ABI_CWindows_CFoundation_CNumerics_CVector3* result);

        END_INTERFACE
    } __x_ABI_C__FIReference_1___x_ABI_CWindows__CFoundation__CNumerics__CVector3Vtbl;

    interface __x_ABI_C__FIReference_1___x_ABI_CWindows__CFoundation__CNumerics__CVector3
    {
        CONST_VTBL struct __x_ABI_C__FIReference_1___x_ABI_CWindows__CFoundation__CNumerics__CVector3Vtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIReference_1___x_ABI_CWindows__CFoundation__CNumerics__CVector3_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FITypedEventHandler_2_IInspectable___x_ABI_CWindows__CUI__CComposition__CCompositionBatchCompletedEventArgs_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FITypedEventHandler_2_IInspectable___x_ABI_CWindows__CUI__CComposition__CCompositionBatchCompletedEventArgs_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FITypedEventHandler_2_IInspectable___x_ABI_CWindows__CUI__CComposition__CCompositionBatchCompletedEventArgs __x_ABI_C__FITypedEventHandler_2_IInspectable___x_ABI_CWindows__CUI__CComposition__CCompositionBatchCompletedEventArgs;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FITypedEventHandler_2_IInspectable___x_ABI_CWindows__CUI__CComposition__CCompositionBatchCompletedEventArgs;

    typedef struct __x_ABI_C__FITypedEventHandler_2_IInspectable___x_ABI_CWindows__CUI__CComposition__CCompositionBatchCompletedEventArgsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FITypedEventHandler_2_IInspectable___x_ABI_CWindows__CUI__CComposition__CCompositionBatchCompletedEventArgs* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FITypedEventHandler_2_IInspectable___x_ABI_CWindows__CUI__CComposition__CCompositionBatchCompletedEventArgs* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FITypedEventHandler_2_IInspectable___x_ABI_CWindows__CUI__CComposition__CCompositionBatchCompletedEventArgs* This);
        HRESULT (STDMETHODCALLTYPE* Invoke)(__x_ABI_C__FITypedEventHandler_2_IInspectable___x_ABI_CWindows__CUI__CComposition__CCompositionBatchCompletedEventArgs* This,
        IInspectable* sender,
        __x_ABI_CWindows_CUI_CComposition_CICompositionBatchCompletedEventArgs* args);

        END_INTERFACE
    } __x_ABI_C__FITypedEventHandler_2_IInspectable___x_ABI_CWindows__CUI__CComposition__CCompositionBatchCompletedEventArgsVtbl;

    interface __x_ABI_C__FITypedEventHandler_2_IInspectable___x_ABI_CWindows__CUI__CComposition__CCompositionBatchCompletedEventArgs
    {
        CONST_VTBL struct __x_ABI_C__FITypedEventHandler_2_IInspectable___x_ABI_CWindows__CUI__CComposition__CCompositionBatchCompletedEventArgsVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FITypedEventHandler_2_IInspectable___x_ABI_CWindows__CUI__CComposition__CCompositionBatchCompletedEventArgs_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CComposition__CCompositionCapabilities_IInspectable_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CComposition__CCompositionCapabilities_IInspectable_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CComposition__CCompositionCapabilities_IInspectable __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CComposition__CCompositionCapabilities_IInspectable;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CComposition__CCompositionCapabilities_IInspectable;

    typedef struct __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CComposition__CCompositionCapabilities_IInspectableVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CComposition__CCompositionCapabilities_IInspectable* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CComposition__CCompositionCapabilities_IInspectable* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CComposition__CCompositionCapabilities_IInspectable* This);
        HRESULT (STDMETHODCALLTYPE* Invoke)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CComposition__CCompositionCapabilities_IInspectable* This,
        __x_ABI_CWindows_CUI_CComposition_CICompositionCapabilities* sender,
        IInspectable* args);

        END_INTERFACE
    } __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CComposition__CCompositionCapabilities_IInspectableVtbl;

    interface __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CComposition__CCompositionCapabilities_IInspectable
    {
        CONST_VTBL struct __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CComposition__CCompositionCapabilities_IInspectableVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CComposition__CCompositionCapabilities_IInspectable_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CComposition__CCompositionGraphicsDevice___x_ABI_CWindows__CUI__CComposition__CRenderingDeviceReplacedEventArgs_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CComposition__CCompositionGraphicsDevice___x_ABI_CWindows__CUI__CComposition__CRenderingDeviceReplacedEventArgs_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CComposition__CCompositionGraphicsDevice___x_ABI_CWindows__CUI__CComposition__CRenderingDeviceReplacedEventArgs __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CComposition__CCompositionGraphicsDevice___x_ABI_CWindows__CUI__CComposition__CRenderingDeviceReplacedEventArgs;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CComposition__CCompositionGraphicsDevice___x_ABI_CWindows__CUI__CComposition__CRenderingDeviceReplacedEventArgs;

    typedef struct __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CComposition__CCompositionGraphicsDevice___x_ABI_CWindows__CUI__CComposition__CRenderingDeviceReplacedEventArgsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CComposition__CCompositionGraphicsDevice___x_ABI_CWindows__CUI__CComposition__CRenderingDeviceReplacedEventArgs* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CComposition__CCompositionGraphicsDevice___x_ABI_CWindows__CUI__CComposition__CRenderingDeviceReplacedEventArgs* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CComposition__CCompositionGraphicsDevice___x_ABI_CWindows__CUI__CComposition__CRenderingDeviceReplacedEventArgs* This);
        HRESULT (STDMETHODCALLTYPE* Invoke)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CComposition__CCompositionGraphicsDevice___x_ABI_CWindows__CUI__CComposition__CRenderingDeviceReplacedEventArgs* This,
        __x_ABI_CWindows_CUI_CComposition_CICompositionGraphicsDevice* sender,
        __x_ABI_CWindows_CUI_CComposition_CIRenderingDeviceReplacedEventArgs* args);

        END_INTERFACE
    } __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CComposition__CCompositionGraphicsDevice___x_ABI_CWindows__CUI__CComposition__CRenderingDeviceReplacedEventArgsVtbl;

    interface __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CComposition__CCompositionGraphicsDevice___x_ABI_CWindows__CUI__CComposition__CRenderingDeviceReplacedEventArgs
    {
        CONST_VTBL struct __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CComposition__CCompositionGraphicsDevice___x_ABI_CWindows__CUI__CComposition__CRenderingDeviceReplacedEventArgsVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CComposition__CCompositionGraphicsDevice___x_ABI_CWindows__CUI__CComposition__CRenderingDeviceReplacedEventArgs_INTERFACE_DEFINED__
    
#ifndef ____x_ABI_CWindows_CFoundation_CIAsyncAction_FWD_DEFINED__
#define ____x_ABI_CWindows_CFoundation_CIAsyncAction_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CFoundation_CIAsyncAction __x_ABI_CWindows_CFoundation_CIAsyncAction;

#endif // ____x_ABI_CWindows_CFoundation_CIAsyncAction_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CFoundation_CIClosable_FWD_DEFINED__
#define ____x_ABI_CWindows_CFoundation_CIClosable_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CFoundation_CIClosable __x_ABI_CWindows_CFoundation_CIClosable;

#endif // ____x_ABI_CWindows_CFoundation_CIClosable_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CFoundation_CIPropertyValue_FWD_DEFINED__
#define ____x_ABI_CWindows_CFoundation_CIPropertyValue_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CFoundation_CIPropertyValue __x_ABI_CWindows_CFoundation_CIPropertyValue;

#endif // ____x_ABI_CWindows_CFoundation_CIPropertyValue_FWD_DEFINED__

typedef struct __x_ABI_CWindows_CFoundation_CNumerics_CMatrix3x2 __x_ABI_CWindows_CFoundation_CNumerics_CMatrix3x2;

typedef struct __x_ABI_CWindows_CFoundation_CNumerics_CMatrix4x4 __x_ABI_CWindows_CFoundation_CNumerics_CMatrix4x4;

typedef struct __x_ABI_CWindows_CFoundation_CNumerics_CQuaternion __x_ABI_CWindows_CFoundation_CNumerics_CQuaternion;

typedef struct __x_ABI_CWindows_CFoundation_CNumerics_CVector4 __x_ABI_CWindows_CFoundation_CNumerics_CVector4;

typedef struct __x_ABI_CWindows_CFoundation_CSize __x_ABI_CWindows_CFoundation_CSize;

typedef struct __x_ABI_CWindows_CFoundation_CTimeSpan __x_ABI_CWindows_CFoundation_CTimeSpan;

typedef enum __x_ABI_CWindows_CGraphics_CDirectX_CDirectXAlphaMode __x_ABI_CWindows_CGraphics_CDirectX_CDirectXAlphaMode;

typedef enum __x_ABI_CWindows_CGraphics_CDirectX_CDirectXPixelFormat __x_ABI_CWindows_CGraphics_CDirectX_CDirectXPixelFormat;

#ifndef ____x_ABI_CWindows_CGraphics_CEffects_CIGraphicsEffect_FWD_DEFINED__
#define ____x_ABI_CWindows_CGraphics_CEffects_CIGraphicsEffect_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CGraphics_CEffects_CIGraphicsEffect __x_ABI_CWindows_CGraphics_CEffects_CIGraphicsEffect;

#endif // ____x_ABI_CWindows_CGraphics_CEffects_CIGraphicsEffect_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CGraphics_CEffects_CIGraphicsEffectSource_FWD_DEFINED__
#define ____x_ABI_CWindows_CGraphics_CEffects_CIGraphicsEffectSource_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CGraphics_CEffects_CIGraphicsEffectSource __x_ABI_CWindows_CGraphics_CEffects_CIGraphicsEffectSource;

#endif // ____x_ABI_CWindows_CGraphics_CEffects_CIGraphicsEffectSource_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CGraphics_CIGeometrySource2D_FWD_DEFINED__
#define ____x_ABI_CWindows_CGraphics_CIGeometrySource2D_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CGraphics_CIGeometrySource2D __x_ABI_CWindows_CGraphics_CIGeometrySource2D;

#endif // ____x_ABI_CWindows_CGraphics_CIGeometrySource2D_FWD_DEFINED__

typedef struct __x_ABI_CWindows_CGraphics_CPointInt32 __x_ABI_CWindows_CGraphics_CPointInt32;

typedef struct __x_ABI_CWindows_CGraphics_CRectInt32 __x_ABI_CWindows_CGraphics_CRectInt32;

typedef struct __x_ABI_CWindows_CGraphics_CSizeInt32 __x_ABI_CWindows_CGraphics_CSizeInt32;

#ifndef ____x_ABI_CWindows_CSystem_CIDispatcherQueue_FWD_DEFINED__
#define ____x_ABI_CWindows_CSystem_CIDispatcherQueue_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CSystem_CIDispatcherQueue __x_ABI_CWindows_CSystem_CIDispatcherQueue;

#endif // ____x_ABI_CWindows_CSystem_CIDispatcherQueue_FWD_DEFINED__

typedef struct __x_ABI_CWindows_CUI_CColor __x_ABI_CWindows_CUI_CColor;

#ifndef ____x_ABI_CWindows_CUI_CCore_CICoreDispatcher_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CCore_CICoreDispatcher_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CCore_CICoreDispatcher __x_ABI_CWindows_CUI_CCore_CICoreDispatcher;

#endif // ____x_ABI_CWindows_CUI_CCore_CICoreDispatcher_FWD_DEFINED__

typedef enum __x_ABI_CWindows_CUI_CComposition_CAnimationControllerProgressBehavior __x_ABI_CWindows_CUI_CComposition_CAnimationControllerProgressBehavior;

typedef enum __x_ABI_CWindows_CUI_CComposition_CAnimationDelayBehavior __x_ABI_CWindows_CUI_CComposition_CAnimationDelayBehavior;

typedef enum __x_ABI_CWindows_CUI_CComposition_CAnimationDirection __x_ABI_CWindows_CUI_CComposition_CAnimationDirection;

typedef enum __x_ABI_CWindows_CUI_CComposition_CAnimationIterationBehavior __x_ABI_CWindows_CUI_CComposition_CAnimationIterationBehavior;

typedef enum __x_ABI_CWindows_CUI_CComposition_CAnimationPropertyAccessMode __x_ABI_CWindows_CUI_CComposition_CAnimationPropertyAccessMode;

typedef enum __x_ABI_CWindows_CUI_CComposition_CAnimationStopBehavior __x_ABI_CWindows_CUI_CComposition_CAnimationStopBehavior;

typedef enum __x_ABI_CWindows_CUI_CComposition_CCompositionBackfaceVisibility __x_ABI_CWindows_CUI_CComposition_CCompositionBackfaceVisibility;

typedef enum __x_ABI_CWindows_CUI_CComposition_CCompositionBatchTypes __x_ABI_CWindows_CUI_CComposition_CCompositionBatchTypes;

typedef enum __x_ABI_CWindows_CUI_CComposition_CCompositionBitmapInterpolationMode __x_ABI_CWindows_CUI_CComposition_CCompositionBitmapInterpolationMode;

typedef enum __x_ABI_CWindows_CUI_CComposition_CCompositionBorderMode __x_ABI_CWindows_CUI_CComposition_CCompositionBorderMode;

typedef enum __x_ABI_CWindows_CUI_CComposition_CCompositionColorSpace __x_ABI_CWindows_CUI_CComposition_CCompositionColorSpace;

typedef enum __x_ABI_CWindows_CUI_CComposition_CCompositionCompositeMode __x_ABI_CWindows_CUI_CComposition_CCompositionCompositeMode;

typedef enum __x_ABI_CWindows_CUI_CComposition_CCompositionDropShadowSourcePolicy __x_ABI_CWindows_CUI_CComposition_CCompositionDropShadowSourcePolicy;

typedef enum __x_ABI_CWindows_CUI_CComposition_CCompositionEffectFactoryLoadStatus __x_ABI_CWindows_CUI_CComposition_CCompositionEffectFactoryLoadStatus;

typedef enum __x_ABI_CWindows_CUI_CComposition_CCompositionGetValueStatus __x_ABI_CWindows_CUI_CComposition_CCompositionGetValueStatus;

typedef enum __x_ABI_CWindows_CUI_CComposition_CCompositionGradientExtendMode __x_ABI_CWindows_CUI_CComposition_CCompositionGradientExtendMode;

typedef enum __x_ABI_CWindows_CUI_CComposition_CCompositionMappingMode __x_ABI_CWindows_CUI_CComposition_CCompositionMappingMode;

typedef enum __x_ABI_CWindows_CUI_CComposition_CCompositionStretch __x_ABI_CWindows_CUI_CComposition_CCompositionStretch;

typedef enum __x_ABI_CWindows_CUI_CComposition_CCompositionStrokeCap __x_ABI_CWindows_CUI_CComposition_CCompositionStrokeCap;

typedef enum __x_ABI_CWindows_CUI_CComposition_CCompositionStrokeLineJoin __x_ABI_CWindows_CUI_CComposition_CCompositionStrokeLineJoin;

enum __x_ABI_CWindows_CUI_CComposition_CAnimationControllerProgressBehavior
    {
        __x_ABI_CWindows_CUI_CComposition_CAnimationControllerProgressBehavior_Default = 0,
    __x_ABI_CWindows_CUI_CComposition_CAnimationControllerProgressBehavior_IncludesDelayTime = 1,
};

enum __x_ABI_CWindows_CUI_CComposition_CAnimationDelayBehavior
    {
        __x_ABI_CWindows_CUI_CComposition_CAnimationDelayBehavior_SetInitialValueAfterDelay = 0,
    __x_ABI_CWindows_CUI_CComposition_CAnimationDelayBehavior_SetInitialValueBeforeDelay = 1,
};

enum __x_ABI_CWindows_CUI_CComposition_CAnimationDirection
    {
        __x_ABI_CWindows_CUI_CComposition_CAnimationDirection_Normal = 0,
    __x_ABI_CWindows_CUI_CComposition_CAnimationDirection_Reverse = 1,
    __x_ABI_CWindows_CUI_CComposition_CAnimationDirection_Alternate = 2,
    __x_ABI_CWindows_CUI_CComposition_CAnimationDirection_AlternateReverse = 3,
};

enum __x_ABI_CWindows_CUI_CComposition_CAnimationIterationBehavior
    {
        __x_ABI_CWindows_CUI_CComposition_CAnimationIterationBehavior_Count = 0,
    __x_ABI_CWindows_CUI_CComposition_CAnimationIterationBehavior_Forever = 1,
};

enum __x_ABI_CWindows_CUI_CComposition_CAnimationPropertyAccessMode
    {
        __x_ABI_CWindows_CUI_CComposition_CAnimationPropertyAccessMode_None = 0,
    __x_ABI_CWindows_CUI_CComposition_CAnimationPropertyAccessMode_ReadOnly = 1,
    __x_ABI_CWindows_CUI_CComposition_CAnimationPropertyAccessMode_WriteOnly = 2,
    __x_ABI_CWindows_CUI_CComposition_CAnimationPropertyAccessMode_ReadWrite = 3,
};

enum __x_ABI_CWindows_CUI_CComposition_CAnimationStopBehavior
    {
        __x_ABI_CWindows_CUI_CComposition_CAnimationStopBehavior_LeaveCurrentValue = 0,
    __x_ABI_CWindows_CUI_CComposition_CAnimationStopBehavior_SetToInitialValue = 1,
    __x_ABI_CWindows_CUI_CComposition_CAnimationStopBehavior_SetToFinalValue = 2,
};

enum __x_ABI_CWindows_CUI_CComposition_CCompositionBackfaceVisibility
    {
        __x_ABI_CWindows_CUI_CComposition_CCompositionBackfaceVisibility_Inherit = 0,
    __x_ABI_CWindows_CUI_CComposition_CCompositionBackfaceVisibility_Visible = 1,
    __x_ABI_CWindows_CUI_CComposition_CCompositionBackfaceVisibility_Hidden = 2,
};

enum __x_ABI_CWindows_CUI_CComposition_CCompositionBatchTypes
    {
        __x_ABI_CWindows_CUI_CComposition_CCompositionBatchTypes_None = 0,
    __x_ABI_CWindows_CUI_CComposition_CCompositionBatchTypes_Animation = 0x1,
    __x_ABI_CWindows_CUI_CComposition_CCompositionBatchTypes_Effect = 0x2,
    __x_ABI_CWindows_CUI_CComposition_CCompositionBatchTypes_InfiniteAnimation = 0x4,
    __x_ABI_CWindows_CUI_CComposition_CCompositionBatchTypes_AllAnimations = 0x5,
};

enum __x_ABI_CWindows_CUI_CComposition_CCompositionBitmapInterpolationMode
    {
        __x_ABI_CWindows_CUI_CComposition_CCompositionBitmapInterpolationMode_NearestNeighbor = 0,
    __x_ABI_CWindows_CUI_CComposition_CCompositionBitmapInterpolationMode_Linear = 1,
    __x_ABI_CWindows_CUI_CComposition_CCompositionBitmapInterpolationMode_MagLinearMinLinearMipLinear = 2,
    __x_ABI_CWindows_CUI_CComposition_CCompositionBitmapInterpolationMode_MagLinearMinLinearMipNearest = 3,
    __x_ABI_CWindows_CUI_CComposition_CCompositionBitmapInterpolationMode_MagLinearMinNearestMipLinear = 4,
    __x_ABI_CWindows_CUI_CComposition_CCompositionBitmapInterpolationMode_MagLinearMinNearestMipNearest = 5,
    __x_ABI_CWindows_CUI_CComposition_CCompositionBitmapInterpolationMode_MagNearestMinLinearMipLinear = 6,
    __x_ABI_CWindows_CUI_CComposition_CCompositionBitmapInterpolationMode_MagNearestMinLinearMipNearest = 7,
    __x_ABI_CWindows_CUI_CComposition_CCompositionBitmapInterpolationMode_MagNearestMinNearestMipLinear = 8,
    __x_ABI_CWindows_CUI_CComposition_CCompositionBitmapInterpolationMode_MagNearestMinNearestMipNearest = 9,
};

enum __x_ABI_CWindows_CUI_CComposition_CCompositionBorderMode
    {
        __x_ABI_CWindows_CUI_CComposition_CCompositionBorderMode_Inherit = 0,
    __x_ABI_CWindows_CUI_CComposition_CCompositionBorderMode_Soft = 1,
    __x_ABI_CWindows_CUI_CComposition_CCompositionBorderMode_Hard = 2,
};

enum __x_ABI_CWindows_CUI_CComposition_CCompositionColorSpace
    {
        __x_ABI_CWindows_CUI_CComposition_CCompositionColorSpace_Auto = 0,
    __x_ABI_CWindows_CUI_CComposition_CCompositionColorSpace_Hsl = 1,
    __x_ABI_CWindows_CUI_CComposition_CCompositionColorSpace_Rgb = 2,
    __x_ABI_CWindows_CUI_CComposition_CCompositionColorSpace_HslLinear = 3,
    __x_ABI_CWindows_CUI_CComposition_CCompositionColorSpace_RgbLinear = 4,
};

enum __x_ABI_CWindows_CUI_CComposition_CCompositionCompositeMode
    {
        __x_ABI_CWindows_CUI_CComposition_CCompositionCompositeMode_Inherit = 0,
    __x_ABI_CWindows_CUI_CComposition_CCompositionCompositeMode_SourceOver = 1,
    __x_ABI_CWindows_CUI_CComposition_CCompositionCompositeMode_DestinationInvert = 2,
    __x_ABI_CWindows_CUI_CComposition_CCompositionCompositeMode_MinBlend = 3,
};

enum __x_ABI_CWindows_CUI_CComposition_CCompositionDropShadowSourcePolicy
    {
        __x_ABI_CWindows_CUI_CComposition_CCompositionDropShadowSourcePolicy_Default = 0,
    __x_ABI_CWindows_CUI_CComposition_CCompositionDropShadowSourcePolicy_InheritFromVisualContent = 1,
};

enum __x_ABI_CWindows_CUI_CComposition_CCompositionEffectFactoryLoadStatus
    {
        __x_ABI_CWindows_CUI_CComposition_CCompositionEffectFactoryLoadStatus_Success = 0,
    __x_ABI_CWindows_CUI_CComposition_CCompositionEffectFactoryLoadStatus_EffectTooComplex = 1,
    __x_ABI_CWindows_CUI_CComposition_CCompositionEffectFactoryLoadStatus_Pending = 2,
    __x_ABI_CWindows_CUI_CComposition_CCompositionEffectFactoryLoadStatus_Other = -1,
};

enum __x_ABI_CWindows_CUI_CComposition_CCompositionGetValueStatus
    {
        __x_ABI_CWindows_CUI_CComposition_CCompositionGetValueStatus_Succeeded = 0,
    __x_ABI_CWindows_CUI_CComposition_CCompositionGetValueStatus_TypeMismatch = 1,
    __x_ABI_CWindows_CUI_CComposition_CCompositionGetValueStatus_NotFound = 2,
};

enum __x_ABI_CWindows_CUI_CComposition_CCompositionGradientExtendMode
    {
        __x_ABI_CWindows_CUI_CComposition_CCompositionGradientExtendMode_Clamp = 0,
    __x_ABI_CWindows_CUI_CComposition_CCompositionGradientExtendMode_Wrap = 1,
    __x_ABI_CWindows_CUI_CComposition_CCompositionGradientExtendMode_Mirror = 2,
};

enum __x_ABI_CWindows_CUI_CComposition_CCompositionMappingMode
    {
        __x_ABI_CWindows_CUI_CComposition_CCompositionMappingMode_Absolute = 0,
    __x_ABI_CWindows_CUI_CComposition_CCompositionMappingMode_Relative = 1,
};

enum __x_ABI_CWindows_CUI_CComposition_CCompositionStretch
    {
        __x_ABI_CWindows_CUI_CComposition_CCompositionStretch_None = 0,
    __x_ABI_CWindows_CUI_CComposition_CCompositionStretch_Fill = 1,
    __x_ABI_CWindows_CUI_CComposition_CCompositionStretch_Uniform = 2,
    __x_ABI_CWindows_CUI_CComposition_CCompositionStretch_UniformToFill = 3,
};

enum __x_ABI_CWindows_CUI_CComposition_CCompositionStrokeCap
    {
        __x_ABI_CWindows_CUI_CComposition_CCompositionStrokeCap_Flat = 0,
    __x_ABI_CWindows_CUI_CComposition_CCompositionStrokeCap_Square = 1,
    __x_ABI_CWindows_CUI_CComposition_CCompositionStrokeCap_Round = 2,
    __x_ABI_CWindows_CUI_CComposition_CCompositionStrokeCap_Triangle = 3,
};

enum __x_ABI_CWindows_CUI_CComposition_CCompositionStrokeLineJoin
    {
        __x_ABI_CWindows_CUI_CComposition_CCompositionStrokeLineJoin_Miter = 0,
    __x_ABI_CWindows_CUI_CComposition_CCompositionStrokeLineJoin_Bevel = 1,
    __x_ABI_CWindows_CUI_CComposition_CCompositionStrokeLineJoin_Round = 2,
    __x_ABI_CWindows_CUI_CComposition_CCompositionStrokeLineJoin_MiterOrBevel = 3,
};

#if !defined(____x_ABI_CWindows_CUI_CComposition_CIAmbientLight_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CComposition_CIAmbientLight_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CComposition_CIAmbientLightVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CComposition_CIAmbientLight* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CComposition_CIAmbientLight* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CComposition_CIAmbientLight* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CComposition_CIAmbientLight* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CComposition_CIAmbientLight* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CComposition_CIAmbientLight* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Color)(__x_ABI_CWindows_CUI_CComposition_CIAmbientLight* This,
        struct __x_ABI_CWindows_CUI_CColor* value);
    HRESULT (STDMETHODCALLTYPE* put_Color)(__x_ABI_CWindows_CUI_CComposition_CIAmbientLight* This,
        struct __x_ABI_CWindows_CUI_CColor value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CComposition_CIAmbientLightVtbl;

    interface __x_ABI_CWindows_CUI_CComposition_CIAmbientLight
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CComposition_CIAmbientLightVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CComposition_CIAmbientLight;
#endif /* !defined(____x_ABI_CWindows_CUI_CComposition_CIAmbientLight_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CComposition_CIAmbientLight2_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CComposition_CIAmbientLight2_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CComposition_CIAmbientLight2Vtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CComposition_CIAmbientLight2* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CComposition_CIAmbientLight2* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CComposition_CIAmbientLight2* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CComposition_CIAmbientLight2* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CComposition_CIAmbientLight2* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CComposition_CIAmbientLight2* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Intensity)(__x_ABI_CWindows_CUI_CComposition_CIAmbientLight2* This,
        FLOAT* value);
    HRESULT (STDMETHODCALLTYPE* put_Intensity)(__x_ABI_CWindows_CUI_CComposition_CIAmbientLight2* This,
        FLOAT value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CComposition_CIAmbientLight2Vtbl;

    interface __x_ABI_CWindows_CUI_CComposition_CIAmbientLight2
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CComposition_CIAmbientLight2Vtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CComposition_CIAmbientLight2;
#endif /* !defined(____x_ABI_CWindows_CUI_CComposition_CIAmbientLight2_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CComposition_CIAnimationController_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CComposition_CIAnimationController_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CComposition_CIAnimationControllerVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CComposition_CIAnimationController* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CComposition_CIAnimationController* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CComposition_CIAnimationController* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CComposition_CIAnimationController* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CComposition_CIAnimationController* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CComposition_CIAnimationController* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_PlaybackRate)(__x_ABI_CWindows_CUI_CComposition_CIAnimationController* This,
        FLOAT* value);
    HRESULT (STDMETHODCALLTYPE* put_PlaybackRate)(__x_ABI_CWindows_CUI_CComposition_CIAnimationController* This,
        FLOAT value);
    HRESULT (STDMETHODCALLTYPE* get_Progress)(__x_ABI_CWindows_CUI_CComposition_CIAnimationController* This,
        FLOAT* value);
    HRESULT (STDMETHODCALLTYPE* put_Progress)(__x_ABI_CWindows_CUI_CComposition_CIAnimationController* This,
        FLOAT value);
    HRESULT (STDMETHODCALLTYPE* get_ProgressBehavior)(__x_ABI_CWindows_CUI_CComposition_CIAnimationController* This,
        enum __x_ABI_CWindows_CUI_CComposition_CAnimationControllerProgressBehavior* value);
    HRESULT (STDMETHODCALLTYPE* put_ProgressBehavior)(__x_ABI_CWindows_CUI_CComposition_CIAnimationController* This,
        enum __x_ABI_CWindows_CUI_CComposition_CAnimationControllerProgressBehavior value);
    HRESULT (STDMETHODCALLTYPE* Pause)(__x_ABI_CWindows_CUI_CComposition_CIAnimationController* This);
    HRESULT (STDMETHODCALLTYPE* Resume)(__x_ABI_CWindows_CUI_CComposition_CIAnimationController* This);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CComposition_CIAnimationControllerVtbl;

    interface __x_ABI_CWindows_CUI_CComposition_CIAnimationController
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CComposition_CIAnimationControllerVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CComposition_CIAnimationController;
#endif /* !defined(____x_ABI_CWindows_CUI_CComposition_CIAnimationController_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CComposition_CIAnimationControllerStatics_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CComposition_CIAnimationControllerStatics_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CComposition_CIAnimationControllerStaticsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CComposition_CIAnimationControllerStatics* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CComposition_CIAnimationControllerStatics* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CComposition_CIAnimationControllerStatics* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CComposition_CIAnimationControllerStatics* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CComposition_CIAnimationControllerStatics* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CComposition_CIAnimationControllerStatics* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_MaxPlaybackRate)(__x_ABI_CWindows_CUI_CComposition_CIAnimationControllerStatics* This,
        FLOAT* value);
    HRESULT (STDMETHODCALLTYPE* get_MinPlaybackRate)(__x_ABI_CWindows_CUI_CComposition_CIAnimationControllerStatics* This,
        FLOAT* value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CComposition_CIAnimationControllerStaticsVtbl;

    interface __x_ABI_CWindows_CUI_CComposition_CIAnimationControllerStatics
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CComposition_CIAnimationControllerStaticsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CComposition_CIAnimationControllerStatics;
#endif /* !defined(____x_ABI_CWindows_CUI_CComposition_CIAnimationControllerStatics_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CComposition_CIAnimationObject_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CComposition_CIAnimationObject_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CComposition_CIAnimationObjectVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CComposition_CIAnimationObject* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CComposition_CIAnimationObject* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CComposition_CIAnimationObject* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CComposition_CIAnimationObject* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CComposition_CIAnimationObject* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CComposition_CIAnimationObject* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* PopulatePropertyInfo)(__x_ABI_CWindows_CUI_CComposition_CIAnimationObject* This,
        HSTRING propertyName,
        __x_ABI_CWindows_CUI_CComposition_CIAnimationPropertyInfo* propertyInfo);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CComposition_CIAnimationObjectVtbl;

    interface __x_ABI_CWindows_CUI_CComposition_CIAnimationObject
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CComposition_CIAnimationObjectVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CComposition_CIAnimationObject;
#endif /* !defined(____x_ABI_CWindows_CUI_CComposition_CIAnimationObject_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CComposition_CIAnimationPropertyInfo_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CComposition_CIAnimationPropertyInfo_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CComposition_CIAnimationPropertyInfoVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CComposition_CIAnimationPropertyInfo* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CComposition_CIAnimationPropertyInfo* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CComposition_CIAnimationPropertyInfo* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CComposition_CIAnimationPropertyInfo* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CComposition_CIAnimationPropertyInfo* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CComposition_CIAnimationPropertyInfo* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_AccessMode)(__x_ABI_CWindows_CUI_CComposition_CIAnimationPropertyInfo* This,
        enum __x_ABI_CWindows_CUI_CComposition_CAnimationPropertyAccessMode* value);
    HRESULT (STDMETHODCALLTYPE* put_AccessMode)(__x_ABI_CWindows_CUI_CComposition_CIAnimationPropertyInfo* This,
        enum __x_ABI_CWindows_CUI_CComposition_CAnimationPropertyAccessMode value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CComposition_CIAnimationPropertyInfoVtbl;

    interface __x_ABI_CWindows_CUI_CComposition_CIAnimationPropertyInfo
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CComposition_CIAnimationPropertyInfoVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CComposition_CIAnimationPropertyInfo;
#endif /* !defined(____x_ABI_CWindows_CUI_CComposition_CIAnimationPropertyInfo_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CComposition_CIBooleanKeyFrameAnimation_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CComposition_CIBooleanKeyFrameAnimation_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CComposition_CIBooleanKeyFrameAnimationVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CComposition_CIBooleanKeyFrameAnimation* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CComposition_CIBooleanKeyFrameAnimation* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CComposition_CIBooleanKeyFrameAnimation* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CComposition_CIBooleanKeyFrameAnimation* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CComposition_CIBooleanKeyFrameAnimation* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CComposition_CIBooleanKeyFrameAnimation* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* InsertKeyFrame)(__x_ABI_CWindows_CUI_CComposition_CIBooleanKeyFrameAnimation* This,
        FLOAT normalizedProgressKey,
        boolean value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CComposition_CIBooleanKeyFrameAnimationVtbl;

    interface __x_ABI_CWindows_CUI_CComposition_CIBooleanKeyFrameAnimation
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CComposition_CIBooleanKeyFrameAnimationVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CComposition_CIBooleanKeyFrameAnimation;
#endif /* !defined(____x_ABI_CWindows_CUI_CComposition_CIBooleanKeyFrameAnimation_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CComposition_CIBounceScalarNaturalMotionAnimation_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CComposition_CIBounceScalarNaturalMotionAnimation_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CComposition_CIBounceScalarNaturalMotionAnimationVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CComposition_CIBounceScalarNaturalMotionAnimation* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CComposition_CIBounceScalarNaturalMotionAnimation* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CComposition_CIBounceScalarNaturalMotionAnimation* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CComposition_CIBounceScalarNaturalMotionAnimation* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CComposition_CIBounceScalarNaturalMotionAnimation* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CComposition_CIBounceScalarNaturalMotionAnimation* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Acceleration)(__x_ABI_CWindows_CUI_CComposition_CIBounceScalarNaturalMotionAnimation* This,
        FLOAT* value);
    HRESULT (STDMETHODCALLTYPE* put_Acceleration)(__x_ABI_CWindows_CUI_CComposition_CIBounceScalarNaturalMotionAnimation* This,
        FLOAT value);
    HRESULT (STDMETHODCALLTYPE* get_Restitution)(__x_ABI_CWindows_CUI_CComposition_CIBounceScalarNaturalMotionAnimation* This,
        FLOAT* value);
    HRESULT (STDMETHODCALLTYPE* put_Restitution)(__x_ABI_CWindows_CUI_CComposition_CIBounceScalarNaturalMotionAnimation* This,
        FLOAT value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CComposition_CIBounceScalarNaturalMotionAnimationVtbl;

    interface __x_ABI_CWindows_CUI_CComposition_CIBounceScalarNaturalMotionAnimation
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CComposition_CIBounceScalarNaturalMotionAnimationVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CComposition_CIBounceScalarNaturalMotionAnimation;
#endif /* !defined(____x_ABI_CWindows_CUI_CComposition_CIBounceScalarNaturalMotionAnimation_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CComposition_CIBounceVector2NaturalMotionAnimation_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CComposition_CIBounceVector2NaturalMotionAnimation_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CComposition_CIBounceVector2NaturalMotionAnimationVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CComposition_CIBounceVector2NaturalMotionAnimation* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CComposition_CIBounceVector2NaturalMotionAnimation* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CComposition_CIBounceVector2NaturalMotionAnimation* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CComposition_CIBounceVector2NaturalMotionAnimation* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CComposition_CIBounceVector2NaturalMotionAnimation* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CComposition_CIBounceVector2NaturalMotionAnimation* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Acceleration)(__x_ABI_CWindows_CUI_CComposition_CIBounceVector2NaturalMotionAnimation* This,
        FLOAT* value);
    HRESULT (STDMETHODCALLTYPE* put_Acceleration)(__x_ABI_CWindows_CUI_CComposition_CIBounceVector2NaturalMotionAnimation* This,
        FLOAT value);
    HRESULT (STDMETHODCALLTYPE* get_Restitution)(__x_ABI_CWindows_CUI_CComposition_CIBounceVector2NaturalMotionAnimation* This,
        FLOAT* value);
    HRESULT (STDMETHODCALLTYPE* put_Restitution)(__x_ABI_CWindows_CUI_CComposition_CIBounceVector2NaturalMotionAnimation* This,
        FLOAT value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CComposition_CIBounceVector2NaturalMotionAnimationVtbl;

    interface __x_ABI_CWindows_CUI_CComposition_CIBounceVector2NaturalMotionAnimation
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CComposition_CIBounceVector2NaturalMotionAnimationVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CComposition_CIBounceVector2NaturalMotionAnimation;
#endif /* !defined(____x_ABI_CWindows_CUI_CComposition_CIBounceVector2NaturalMotionAnimation_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CComposition_CIBounceVector3NaturalMotionAnimation_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CComposition_CIBounceVector3NaturalMotionAnimation_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CComposition_CIBounceVector3NaturalMotionAnimationVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CComposition_CIBounceVector3NaturalMotionAnimation* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CComposition_CIBounceVector3NaturalMotionAnimation* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CComposition_CIBounceVector3NaturalMotionAnimation* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CComposition_CIBounceVector3NaturalMotionAnimation* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CComposition_CIBounceVector3NaturalMotionAnimation* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CComposition_CIBounceVector3NaturalMotionAnimation* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Acceleration)(__x_ABI_CWindows_CUI_CComposition_CIBounceVector3NaturalMotionAnimation* This,
        FLOAT* value);
    HRESULT (STDMETHODCALLTYPE* put_Acceleration)(__x_ABI_CWindows_CUI_CComposition_CIBounceVector3NaturalMotionAnimation* This,
        FLOAT value);
    HRESULT (STDMETHODCALLTYPE* get_Restitution)(__x_ABI_CWindows_CUI_CComposition_CIBounceVector3NaturalMotionAnimation* This,
        FLOAT* value);
    HRESULT (STDMETHODCALLTYPE* put_Restitution)(__x_ABI_CWindows_CUI_CComposition_CIBounceVector3NaturalMotionAnimation* This,
        FLOAT value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CComposition_CIBounceVector3NaturalMotionAnimationVtbl;

    interface __x_ABI_CWindows_CUI_CComposition_CIBounceVector3NaturalMotionAnimation
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CComposition_CIBounceVector3NaturalMotionAnimationVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CComposition_CIBounceVector3NaturalMotionAnimation;
#endif /* !defined(____x_ABI_CWindows_CUI_CComposition_CIBounceVector3NaturalMotionAnimation_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CComposition_CIColorKeyFrameAnimation_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CComposition_CIColorKeyFrameAnimation_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CComposition_CIColorKeyFrameAnimationVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CComposition_CIColorKeyFrameAnimation* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CComposition_CIColorKeyFrameAnimation* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CComposition_CIColorKeyFrameAnimation* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CComposition_CIColorKeyFrameAnimation* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CComposition_CIColorKeyFrameAnimation* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CComposition_CIColorKeyFrameAnimation* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_InterpolationColorSpace)(__x_ABI_CWindows_CUI_CComposition_CIColorKeyFrameAnimation* This,
        enum __x_ABI_CWindows_CUI_CComposition_CCompositionColorSpace* value);
    HRESULT (STDMETHODCALLTYPE* put_InterpolationColorSpace)(__x_ABI_CWindows_CUI_CComposition_CIColorKeyFrameAnimation* This,
        enum __x_ABI_CWindows_CUI_CComposition_CCompositionColorSpace value);
    HRESULT (STDMETHODCALLTYPE* InsertKeyFrame)(__x_ABI_CWindows_CUI_CComposition_CIColorKeyFrameAnimation* This,
        FLOAT normalizedProgressKey,
        struct __x_ABI_CWindows_CUI_CColor value);
    HRESULT (STDMETHODCALLTYPE* InsertKeyFrameWithEasingFunction)(__x_ABI_CWindows_CUI_CComposition_CIColorKeyFrameAnimation* This,
        FLOAT normalizedProgressKey,
        struct __x_ABI_CWindows_CUI_CColor value,
        __x_ABI_CWindows_CUI_CComposition_CICompositionEasingFunction* easingFunction);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CComposition_CIColorKeyFrameAnimationVtbl;

    interface __x_ABI_CWindows_CUI_CComposition_CIColorKeyFrameAnimation
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CComposition_CIColorKeyFrameAnimationVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CComposition_CIColorKeyFrameAnimation;
#endif /* !defined(____x_ABI_CWindows_CUI_CComposition_CIColorKeyFrameAnimation_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CComposition_CICompositionAnimation_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CComposition_CICompositionAnimation_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CComposition_CICompositionAnimationVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CComposition_CICompositionAnimation* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CComposition_CICompositionAnimation* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CComposition_CICompositionAnimation* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CComposition_CICompositionAnimation* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CComposition_CICompositionAnimation* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CComposition_CICompositionAnimation* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* ClearAllParameters)(__x_ABI_CWindows_CUI_CComposition_CICompositionAnimation* This);
    HRESULT (STDMETHODCALLTYPE* ClearParameter)(__x_ABI_CWindows_CUI_CComposition_CICompositionAnimation* This,
        HSTRING key);
    HRESULT (STDMETHODCALLTYPE* SetColorParameter)(__x_ABI_CWindows_CUI_CComposition_CICompositionAnimation* This,
        HSTRING key,
        struct __x_ABI_CWindows_CUI_CColor value);
    HRESULT (STDMETHODCALLTYPE* SetMatrix3x2Parameter)(__x_ABI_CWindows_CUI_CComposition_CICompositionAnimation* This,
        HSTRING key,
        struct __x_ABI_CWindows_CFoundation_CNumerics_CMatrix3x2 value);
    HRESULT (STDMETHODCALLTYPE* SetMatrix4x4Parameter)(__x_ABI_CWindows_CUI_CComposition_CICompositionAnimation* This,
        HSTRING key,
        struct __x_ABI_CWindows_CFoundation_CNumerics_CMatrix4x4 value);
    HRESULT (STDMETHODCALLTYPE* SetQuaternionParameter)(__x_ABI_CWindows_CUI_CComposition_CICompositionAnimation* This,
        HSTRING key,
        struct __x_ABI_CWindows_CFoundation_CNumerics_CQuaternion value);
    HRESULT (STDMETHODCALLTYPE* SetReferenceParameter)(__x_ABI_CWindows_CUI_CComposition_CICompositionAnimation* This,
        HSTRING key,
        __x_ABI_CWindows_CUI_CComposition_CICompositionObject* compositionObject);
    HRESULT (STDMETHODCALLTYPE* SetScalarParameter)(__x_ABI_CWindows_CUI_CComposition_CICompositionAnimation* This,
        HSTRING key,
        FLOAT value);
    HRESULT (STDMETHODCALLTYPE* SetVector2Parameter)(__x_ABI_CWindows_CUI_CComposition_CICompositionAnimation* This,
        HSTRING key,
        struct __x_ABI_CWindows_CFoundation_CNumerics_CVector2 value);
    HRESULT (STDMETHODCALLTYPE* SetVector3Parameter)(__x_ABI_CWindows_CUI_CComposition_CICompositionAnimation* This,
        HSTRING key,
        struct __x_ABI_CWindows_CFoundation_CNumerics_CVector3 value);
    HRESULT (STDMETHODCALLTYPE* SetVector4Parameter)(__x_ABI_CWindows_CUI_CComposition_CICompositionAnimation* This,
        HSTRING key,
        struct __x_ABI_CWindows_CFoundation_CNumerics_CVector4 value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CComposition_CICompositionAnimationVtbl;

    interface __x_ABI_CWindows_CUI_CComposition_CICompositionAnimation
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CComposition_CICompositionAnimationVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CComposition_CICompositionAnimation;
#endif /* !defined(____x_ABI_CWindows_CUI_CComposition_CICompositionAnimation_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CComposition_CICompositionAnimation2_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CComposition_CICompositionAnimation2_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CComposition_CICompositionAnimation2Vtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CComposition_CICompositionAnimation2* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CComposition_CICompositionAnimation2* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CComposition_CICompositionAnimation2* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CComposition_CICompositionAnimation2* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CComposition_CICompositionAnimation2* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CComposition_CICompositionAnimation2* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* SetBooleanParameter)(__x_ABI_CWindows_CUI_CComposition_CICompositionAnimation2* This,
        HSTRING key,
        boolean value);
    HRESULT (STDMETHODCALLTYPE* get_Target)(__x_ABI_CWindows_CUI_CComposition_CICompositionAnimation2* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* put_Target)(__x_ABI_CWindows_CUI_CComposition_CICompositionAnimation2* This,
        HSTRING value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CComposition_CICompositionAnimation2Vtbl;

    interface __x_ABI_CWindows_CUI_CComposition_CICompositionAnimation2
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CComposition_CICompositionAnimation2Vtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CComposition_CICompositionAnimation2;
#endif /* !defined(____x_ABI_CWindows_CUI_CComposition_CICompositionAnimation2_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CComposition_CICompositionAnimation3_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CComposition_CICompositionAnimation3_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CComposition_CICompositionAnimation3Vtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CComposition_CICompositionAnimation3* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CComposition_CICompositionAnimation3* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CComposition_CICompositionAnimation3* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CComposition_CICompositionAnimation3* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CComposition_CICompositionAnimation3* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CComposition_CICompositionAnimation3* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_InitialValueExpressions)(__x_ABI_CWindows_CUI_CComposition_CICompositionAnimation3* This,
        __x_ABI_C__FIMap_2_HSTRING_HSTRING** value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CComposition_CICompositionAnimation3Vtbl;

    interface __x_ABI_CWindows_CUI_CComposition_CICompositionAnimation3
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CComposition_CICompositionAnimation3Vtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CComposition_CICompositionAnimation3;
#endif /* !defined(____x_ABI_CWindows_CUI_CComposition_CICompositionAnimation3_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CComposition_CICompositionAnimation4_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CComposition_CICompositionAnimation4_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CComposition_CICompositionAnimation4Vtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CComposition_CICompositionAnimation4* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CComposition_CICompositionAnimation4* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CComposition_CICompositionAnimation4* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CComposition_CICompositionAnimation4* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CComposition_CICompositionAnimation4* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CComposition_CICompositionAnimation4* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* SetExpressionReferenceParameter)(__x_ABI_CWindows_CUI_CComposition_CICompositionAnimation4* This,
        HSTRING parameterName,
        __x_ABI_CWindows_CUI_CComposition_CIAnimationObject* source);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CComposition_CICompositionAnimation4Vtbl;

    interface __x_ABI_CWindows_CUI_CComposition_CICompositionAnimation4
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CComposition_CICompositionAnimation4Vtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CComposition_CICompositionAnimation4;
#endif /* !defined(____x_ABI_CWindows_CUI_CComposition_CICompositionAnimation4_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CComposition_CICompositionAnimationBase_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CComposition_CICompositionAnimationBase_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CComposition_CICompositionAnimationBaseVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CComposition_CICompositionAnimationBase* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CComposition_CICompositionAnimationBase* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CComposition_CICompositionAnimationBase* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CComposition_CICompositionAnimationBase* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CComposition_CICompositionAnimationBase* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CComposition_CICompositionAnimationBase* This,
            TrustLevel* trustLevel);
    
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CComposition_CICompositionAnimationBaseVtbl;

    interface __x_ABI_CWindows_CUI_CComposition_CICompositionAnimationBase
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CComposition_CICompositionAnimationBaseVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CComposition_CICompositionAnimationBase;
#endif /* !defined(____x_ABI_CWindows_CUI_CComposition_CICompositionAnimationBase_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CComposition_CICompositionAnimationFactory_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CComposition_CICompositionAnimationFactory_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CComposition_CICompositionAnimationFactoryVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CComposition_CICompositionAnimationFactory* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CComposition_CICompositionAnimationFactory* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CComposition_CICompositionAnimationFactory* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CComposition_CICompositionAnimationFactory* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CComposition_CICompositionAnimationFactory* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CComposition_CICompositionAnimationFactory* This,
            TrustLevel* trustLevel);
    
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CComposition_CICompositionAnimationFactoryVtbl;

    interface __x_ABI_CWindows_CUI_CComposition_CICompositionAnimationFactory
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CComposition_CICompositionAnimationFactoryVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CComposition_CICompositionAnimationFactory;
#endif /* !defined(____x_ABI_CWindows_CUI_CComposition_CICompositionAnimationFactory_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CComposition_CICompositionAnimationGroup_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CComposition_CICompositionAnimationGroup_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CComposition_CICompositionAnimationGroupVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CComposition_CICompositionAnimationGroup* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CComposition_CICompositionAnimationGroup* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CComposition_CICompositionAnimationGroup* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CComposition_CICompositionAnimationGroup* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CComposition_CICompositionAnimationGroup* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CComposition_CICompositionAnimationGroup* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Count)(__x_ABI_CWindows_CUI_CComposition_CICompositionAnimationGroup* This,
        INT32* value);
    HRESULT (STDMETHODCALLTYPE* Add)(__x_ABI_CWindows_CUI_CComposition_CICompositionAnimationGroup* This,
        __x_ABI_CWindows_CUI_CComposition_CICompositionAnimation* value);
    HRESULT (STDMETHODCALLTYPE* Remove)(__x_ABI_CWindows_CUI_CComposition_CICompositionAnimationGroup* This,
        __x_ABI_CWindows_CUI_CComposition_CICompositionAnimation* value);
    HRESULT (STDMETHODCALLTYPE* RemoveAll)(__x_ABI_CWindows_CUI_CComposition_CICompositionAnimationGroup* This);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CComposition_CICompositionAnimationGroupVtbl;

    interface __x_ABI_CWindows_CUI_CComposition_CICompositionAnimationGroup
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CComposition_CICompositionAnimationGroupVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CComposition_CICompositionAnimationGroup;
#endif /* !defined(____x_ABI_CWindows_CUI_CComposition_CICompositionAnimationGroup_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CComposition_CICompositionBackdropBrush_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CComposition_CICompositionBackdropBrush_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CComposition_CICompositionBackdropBrushVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CComposition_CICompositionBackdropBrush* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CComposition_CICompositionBackdropBrush* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CComposition_CICompositionBackdropBrush* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CComposition_CICompositionBackdropBrush* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CComposition_CICompositionBackdropBrush* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CComposition_CICompositionBackdropBrush* This,
            TrustLevel* trustLevel);
    
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CComposition_CICompositionBackdropBrushVtbl;

    interface __x_ABI_CWindows_CUI_CComposition_CICompositionBackdropBrush
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CComposition_CICompositionBackdropBrushVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CComposition_CICompositionBackdropBrush;
#endif /* !defined(____x_ABI_CWindows_CUI_CComposition_CICompositionBackdropBrush_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CComposition_CICompositionBatchCompletedEventArgs_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CComposition_CICompositionBatchCompletedEventArgs_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CComposition_CICompositionBatchCompletedEventArgsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CComposition_CICompositionBatchCompletedEventArgs* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CComposition_CICompositionBatchCompletedEventArgs* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CComposition_CICompositionBatchCompletedEventArgs* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CComposition_CICompositionBatchCompletedEventArgs* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CComposition_CICompositionBatchCompletedEventArgs* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CComposition_CICompositionBatchCompletedEventArgs* This,
            TrustLevel* trustLevel);
    
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CComposition_CICompositionBatchCompletedEventArgsVtbl;

    interface __x_ABI_CWindows_CUI_CComposition_CICompositionBatchCompletedEventArgs
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CComposition_CICompositionBatchCompletedEventArgsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CComposition_CICompositionBatchCompletedEventArgs;
#endif /* !defined(____x_ABI_CWindows_CUI_CComposition_CICompositionBatchCompletedEventArgs_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CComposition_CICompositionBrush_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CComposition_CICompositionBrush_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CComposition_CICompositionBrushVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CComposition_CICompositionBrush* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CComposition_CICompositionBrush* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CComposition_CICompositionBrush* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CComposition_CICompositionBrush* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CComposition_CICompositionBrush* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CComposition_CICompositionBrush* This,
            TrustLevel* trustLevel);
    
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CComposition_CICompositionBrushVtbl;

    interface __x_ABI_CWindows_CUI_CComposition_CICompositionBrush
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CComposition_CICompositionBrushVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CComposition_CICompositionBrush;
#endif /* !defined(____x_ABI_CWindows_CUI_CComposition_CICompositionBrush_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CComposition_CICompositionBrushFactory_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CComposition_CICompositionBrushFactory_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CComposition_CICompositionBrushFactoryVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CComposition_CICompositionBrushFactory* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CComposition_CICompositionBrushFactory* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CComposition_CICompositionBrushFactory* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CComposition_CICompositionBrushFactory* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CComposition_CICompositionBrushFactory* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CComposition_CICompositionBrushFactory* This,
            TrustLevel* trustLevel);
    
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CComposition_CICompositionBrushFactoryVtbl;

    interface __x_ABI_CWindows_CUI_CComposition_CICompositionBrushFactory
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CComposition_CICompositionBrushFactoryVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CComposition_CICompositionBrushFactory;
#endif /* !defined(____x_ABI_CWindows_CUI_CComposition_CICompositionBrushFactory_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CComposition_CICompositionCapabilities_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CComposition_CICompositionCapabilities_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CComposition_CICompositionCapabilitiesVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CComposition_CICompositionCapabilities* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CComposition_CICompositionCapabilities* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CComposition_CICompositionCapabilities* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CComposition_CICompositionCapabilities* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CComposition_CICompositionCapabilities* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CComposition_CICompositionCapabilities* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* AreEffectsSupported)(__x_ABI_CWindows_CUI_CComposition_CICompositionCapabilities* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* AreEffectsFast)(__x_ABI_CWindows_CUI_CComposition_CICompositionCapabilities* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* add_Changed)(__x_ABI_CWindows_CUI_CComposition_CICompositionCapabilities* This,
        __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CComposition__CCompositionCapabilities_IInspectable* handler,
        EventRegistrationToken* token);
    HRESULT (STDMETHODCALLTYPE* remove_Changed)(__x_ABI_CWindows_CUI_CComposition_CICompositionCapabilities* This,
        EventRegistrationToken token);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CComposition_CICompositionCapabilitiesVtbl;

    interface __x_ABI_CWindows_CUI_CComposition_CICompositionCapabilities
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CComposition_CICompositionCapabilitiesVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CComposition_CICompositionCapabilities;
#endif /* !defined(____x_ABI_CWindows_CUI_CComposition_CICompositionCapabilities_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CComposition_CICompositionCapabilitiesStatics_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CComposition_CICompositionCapabilitiesStatics_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CComposition_CICompositionCapabilitiesStaticsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CComposition_CICompositionCapabilitiesStatics* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CComposition_CICompositionCapabilitiesStatics* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CComposition_CICompositionCapabilitiesStatics* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CComposition_CICompositionCapabilitiesStatics* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CComposition_CICompositionCapabilitiesStatics* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CComposition_CICompositionCapabilitiesStatics* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* GetForCurrentView)(__x_ABI_CWindows_CUI_CComposition_CICompositionCapabilitiesStatics* This,
        __x_ABI_CWindows_CUI_CComposition_CICompositionCapabilities** current);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CComposition_CICompositionCapabilitiesStaticsVtbl;

    interface __x_ABI_CWindows_CUI_CComposition_CICompositionCapabilitiesStatics
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CComposition_CICompositionCapabilitiesStaticsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CComposition_CICompositionCapabilitiesStatics;
#endif /* !defined(____x_ABI_CWindows_CUI_CComposition_CICompositionCapabilitiesStatics_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CComposition_CICompositionClip_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CComposition_CICompositionClip_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CComposition_CICompositionClipVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CComposition_CICompositionClip* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CComposition_CICompositionClip* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CComposition_CICompositionClip* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CComposition_CICompositionClip* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CComposition_CICompositionClip* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CComposition_CICompositionClip* This,
            TrustLevel* trustLevel);
    
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CComposition_CICompositionClipVtbl;

    interface __x_ABI_CWindows_CUI_CComposition_CICompositionClip
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CComposition_CICompositionClipVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CComposition_CICompositionClip;
#endif /* !defined(____x_ABI_CWindows_CUI_CComposition_CICompositionClip_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CComposition_CICompositionClip2_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CComposition_CICompositionClip2_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CComposition_CICompositionClip2Vtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CComposition_CICompositionClip2* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CComposition_CICompositionClip2* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CComposition_CICompositionClip2* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CComposition_CICompositionClip2* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CComposition_CICompositionClip2* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CComposition_CICompositionClip2* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_AnchorPoint)(__x_ABI_CWindows_CUI_CComposition_CICompositionClip2* This,
        struct __x_ABI_CWindows_CFoundation_CNumerics_CVector2* value);
    HRESULT (STDMETHODCALLTYPE* put_AnchorPoint)(__x_ABI_CWindows_CUI_CComposition_CICompositionClip2* This,
        struct __x_ABI_CWindows_CFoundation_CNumerics_CVector2 value);
    HRESULT (STDMETHODCALLTYPE* get_CenterPoint)(__x_ABI_CWindows_CUI_CComposition_CICompositionClip2* This,
        struct __x_ABI_CWindows_CFoundation_CNumerics_CVector2* value);
    HRESULT (STDMETHODCALLTYPE* put_CenterPoint)(__x_ABI_CWindows_CUI_CComposition_CICompositionClip2* This,
        struct __x_ABI_CWindows_CFoundation_CNumerics_CVector2 value);
    HRESULT (STDMETHODCALLTYPE* get_Offset)(__x_ABI_CWindows_CUI_CComposition_CICompositionClip2* This,
        struct __x_ABI_CWindows_CFoundation_CNumerics_CVector2* value);
    HRESULT (STDMETHODCALLTYPE* put_Offset)(__x_ABI_CWindows_CUI_CComposition_CICompositionClip2* This,
        struct __x_ABI_CWindows_CFoundation_CNumerics_CVector2 value);
    HRESULT (STDMETHODCALLTYPE* get_RotationAngle)(__x_ABI_CWindows_CUI_CComposition_CICompositionClip2* This,
        FLOAT* value);
    HRESULT (STDMETHODCALLTYPE* put_RotationAngle)(__x_ABI_CWindows_CUI_CComposition_CICompositionClip2* This,
        FLOAT value);
    HRESULT (STDMETHODCALLTYPE* get_RotationAngleInDegrees)(__x_ABI_CWindows_CUI_CComposition_CICompositionClip2* This,
        FLOAT* value);
    HRESULT (STDMETHODCALLTYPE* put_RotationAngleInDegrees)(__x_ABI_CWindows_CUI_CComposition_CICompositionClip2* This,
        FLOAT value);
    HRESULT (STDMETHODCALLTYPE* get_Scale)(__x_ABI_CWindows_CUI_CComposition_CICompositionClip2* This,
        struct __x_ABI_CWindows_CFoundation_CNumerics_CVector2* value);
    HRESULT (STDMETHODCALLTYPE* put_Scale)(__x_ABI_CWindows_CUI_CComposition_CICompositionClip2* This,
        struct __x_ABI_CWindows_CFoundation_CNumerics_CVector2 value);
    HRESULT (STDMETHODCALLTYPE* get_TransformMatrix)(__x_ABI_CWindows_CUI_CComposition_CICompositionClip2* This,
        struct __x_ABI_CWindows_CFoundation_CNumerics_CMatrix3x2* value);
    HRESULT (STDMETHODCALLTYPE* put_TransformMatrix)(__x_ABI_CWindows_CUI_CComposition_CICompositionClip2* This,
        struct __x_ABI_CWindows_CFoundation_CNumerics_CMatrix3x2 value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CComposition_CICompositionClip2Vtbl;

    interface __x_ABI_CWindows_CUI_CComposition_CICompositionClip2
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CComposition_CICompositionClip2Vtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CComposition_CICompositionClip2;
#endif /* !defined(____x_ABI_CWindows_CUI_CComposition_CICompositionClip2_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CComposition_CICompositionClipFactory_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CComposition_CICompositionClipFactory_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CComposition_CICompositionClipFactoryVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CComposition_CICompositionClipFactory* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CComposition_CICompositionClipFactory* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CComposition_CICompositionClipFactory* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CComposition_CICompositionClipFactory* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CComposition_CICompositionClipFactory* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CComposition_CICompositionClipFactory* This,
            TrustLevel* trustLevel);
    
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CComposition_CICompositionClipFactoryVtbl;

    interface __x_ABI_CWindows_CUI_CComposition_CICompositionClipFactory
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CComposition_CICompositionClipFactoryVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CComposition_CICompositionClipFactory;
#endif /* !defined(____x_ABI_CWindows_CUI_CComposition_CICompositionClipFactory_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CComposition_CICompositionColorBrush_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CComposition_CICompositionColorBrush_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CComposition_CICompositionColorBrushVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CComposition_CICompositionColorBrush* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CComposition_CICompositionColorBrush* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CComposition_CICompositionColorBrush* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CComposition_CICompositionColorBrush* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CComposition_CICompositionColorBrush* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CComposition_CICompositionColorBrush* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Color)(__x_ABI_CWindows_CUI_CComposition_CICompositionColorBrush* This,
        struct __x_ABI_CWindows_CUI_CColor* value);
    HRESULT (STDMETHODCALLTYPE* put_Color)(__x_ABI_CWindows_CUI_CComposition_CICompositionColorBrush* This,
        struct __x_ABI_CWindows_CUI_CColor value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CComposition_CICompositionColorBrushVtbl;

    interface __x_ABI_CWindows_CUI_CComposition_CICompositionColorBrush
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CComposition_CICompositionColorBrushVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CComposition_CICompositionColorBrush;
#endif /* !defined(____x_ABI_CWindows_CUI_CComposition_CICompositionColorBrush_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CComposition_CICompositionColorGradientStop_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CComposition_CICompositionColorGradientStop_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CComposition_CICompositionColorGradientStopVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CComposition_CICompositionColorGradientStop* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CComposition_CICompositionColorGradientStop* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CComposition_CICompositionColorGradientStop* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CComposition_CICompositionColorGradientStop* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CComposition_CICompositionColorGradientStop* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CComposition_CICompositionColorGradientStop* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Color)(__x_ABI_CWindows_CUI_CComposition_CICompositionColorGradientStop* This,
        struct __x_ABI_CWindows_CUI_CColor* value);
    HRESULT (STDMETHODCALLTYPE* put_Color)(__x_ABI_CWindows_CUI_CComposition_CICompositionColorGradientStop* This,
        struct __x_ABI_CWindows_CUI_CColor value);
    HRESULT (STDMETHODCALLTYPE* get_Offset)(__x_ABI_CWindows_CUI_CComposition_CICompositionColorGradientStop* This,
        FLOAT* value);
    HRESULT (STDMETHODCALLTYPE* put_Offset)(__x_ABI_CWindows_CUI_CComposition_CICompositionColorGradientStop* This,
        FLOAT value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CComposition_CICompositionColorGradientStopVtbl;

    interface __x_ABI_CWindows_CUI_CComposition_CICompositionColorGradientStop
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CComposition_CICompositionColorGradientStopVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CComposition_CICompositionColorGradientStop;
#endif /* !defined(____x_ABI_CWindows_CUI_CComposition_CICompositionColorGradientStop_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CComposition_CICompositionColorGradientStopCollection_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CComposition_CICompositionColorGradientStopCollection_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CComposition_CICompositionColorGradientStopCollectionVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CComposition_CICompositionColorGradientStopCollection* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CComposition_CICompositionColorGradientStopCollection* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CComposition_CICompositionColorGradientStopCollection* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CComposition_CICompositionColorGradientStopCollection* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CComposition_CICompositionColorGradientStopCollection* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CComposition_CICompositionColorGradientStopCollection* This,
            TrustLevel* trustLevel);
    
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CComposition_CICompositionColorGradientStopCollectionVtbl;

    interface __x_ABI_CWindows_CUI_CComposition_CICompositionColorGradientStopCollection
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CComposition_CICompositionColorGradientStopCollectionVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CComposition_CICompositionColorGradientStopCollection;
#endif /* !defined(____x_ABI_CWindows_CUI_CComposition_CICompositionColorGradientStopCollection_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CComposition_CICompositionCommitBatch_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CComposition_CICompositionCommitBatch_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CComposition_CICompositionCommitBatchVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CComposition_CICompositionCommitBatch* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CComposition_CICompositionCommitBatch* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CComposition_CICompositionCommitBatch* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CComposition_CICompositionCommitBatch* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CComposition_CICompositionCommitBatch* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CComposition_CICompositionCommitBatch* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_IsActive)(__x_ABI_CWindows_CUI_CComposition_CICompositionCommitBatch* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* get_IsEnded)(__x_ABI_CWindows_CUI_CComposition_CICompositionCommitBatch* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* add_Completed)(__x_ABI_CWindows_CUI_CComposition_CICompositionCommitBatch* This,
        __x_ABI_C__FITypedEventHandler_2_IInspectable___x_ABI_CWindows__CUI__CComposition__CCompositionBatchCompletedEventArgs* handler,
        EventRegistrationToken* token);
    HRESULT (STDMETHODCALLTYPE* remove_Completed)(__x_ABI_CWindows_CUI_CComposition_CICompositionCommitBatch* This,
        EventRegistrationToken token);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CComposition_CICompositionCommitBatchVtbl;

    interface __x_ABI_CWindows_CUI_CComposition_CICompositionCommitBatch
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CComposition_CICompositionCommitBatchVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CComposition_CICompositionCommitBatch;
#endif /* !defined(____x_ABI_CWindows_CUI_CComposition_CICompositionCommitBatch_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CComposition_CICompositionContainerShape_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CComposition_CICompositionContainerShape_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CComposition_CICompositionContainerShapeVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CComposition_CICompositionContainerShape* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CComposition_CICompositionContainerShape* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CComposition_CICompositionContainerShape* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CComposition_CICompositionContainerShape* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CComposition_CICompositionContainerShape* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CComposition_CICompositionContainerShape* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Shapes)(__x_ABI_CWindows_CUI_CComposition_CICompositionContainerShape* This,
        __x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CComposition__CCompositionShape** value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CComposition_CICompositionContainerShapeVtbl;

    interface __x_ABI_CWindows_CUI_CComposition_CICompositionContainerShape
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CComposition_CICompositionContainerShapeVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CComposition_CICompositionContainerShape;
#endif /* !defined(____x_ABI_CWindows_CUI_CComposition_CICompositionContainerShape_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CComposition_CICompositionDrawingSurface_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CComposition_CICompositionDrawingSurface_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CComposition_CICompositionDrawingSurfaceVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CComposition_CICompositionDrawingSurface* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CComposition_CICompositionDrawingSurface* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CComposition_CICompositionDrawingSurface* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CComposition_CICompositionDrawingSurface* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CComposition_CICompositionDrawingSurface* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CComposition_CICompositionDrawingSurface* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_AlphaMode)(__x_ABI_CWindows_CUI_CComposition_CICompositionDrawingSurface* This,
        enum __x_ABI_CWindows_CGraphics_CDirectX_CDirectXAlphaMode* value);
    HRESULT (STDMETHODCALLTYPE* get_PixelFormat)(__x_ABI_CWindows_CUI_CComposition_CICompositionDrawingSurface* This,
        enum __x_ABI_CWindows_CGraphics_CDirectX_CDirectXPixelFormat* value);
    HRESULT (STDMETHODCALLTYPE* get_Size)(__x_ABI_CWindows_CUI_CComposition_CICompositionDrawingSurface* This,
        struct __x_ABI_CWindows_CFoundation_CSize* value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CComposition_CICompositionDrawingSurfaceVtbl;

    interface __x_ABI_CWindows_CUI_CComposition_CICompositionDrawingSurface
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CComposition_CICompositionDrawingSurfaceVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CComposition_CICompositionDrawingSurface;
#endif /* !defined(____x_ABI_CWindows_CUI_CComposition_CICompositionDrawingSurface_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CComposition_CICompositionDrawingSurface2_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CComposition_CICompositionDrawingSurface2_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CComposition_CICompositionDrawingSurface2Vtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CComposition_CICompositionDrawingSurface2* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CComposition_CICompositionDrawingSurface2* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CComposition_CICompositionDrawingSurface2* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CComposition_CICompositionDrawingSurface2* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CComposition_CICompositionDrawingSurface2* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CComposition_CICompositionDrawingSurface2* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_SizeInt32)(__x_ABI_CWindows_CUI_CComposition_CICompositionDrawingSurface2* This,
        struct __x_ABI_CWindows_CGraphics_CSizeInt32* value);
    HRESULT (STDMETHODCALLTYPE* Resize)(__x_ABI_CWindows_CUI_CComposition_CICompositionDrawingSurface2* This,
        struct __x_ABI_CWindows_CGraphics_CSizeInt32 sizePixels);
    HRESULT (STDMETHODCALLTYPE* Scroll)(__x_ABI_CWindows_CUI_CComposition_CICompositionDrawingSurface2* This,
        struct __x_ABI_CWindows_CGraphics_CPointInt32 offset);
    HRESULT (STDMETHODCALLTYPE* ScrollRect)(__x_ABI_CWindows_CUI_CComposition_CICompositionDrawingSurface2* This,
        struct __x_ABI_CWindows_CGraphics_CPointInt32 offset,
        struct __x_ABI_CWindows_CGraphics_CRectInt32 scrollRect);
    HRESULT (STDMETHODCALLTYPE* ScrollWithClip)(__x_ABI_CWindows_CUI_CComposition_CICompositionDrawingSurface2* This,
        struct __x_ABI_CWindows_CGraphics_CPointInt32 offset,
        struct __x_ABI_CWindows_CGraphics_CRectInt32 clipRect);
    HRESULT (STDMETHODCALLTYPE* ScrollRectWithClip)(__x_ABI_CWindows_CUI_CComposition_CICompositionDrawingSurface2* This,
        struct __x_ABI_CWindows_CGraphics_CPointInt32 offset,
        struct __x_ABI_CWindows_CGraphics_CRectInt32 clipRect,
        struct __x_ABI_CWindows_CGraphics_CRectInt32 scrollRect);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CComposition_CICompositionDrawingSurface2Vtbl;

    interface __x_ABI_CWindows_CUI_CComposition_CICompositionDrawingSurface2
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CComposition_CICompositionDrawingSurface2Vtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CComposition_CICompositionDrawingSurface2;
#endif /* !defined(____x_ABI_CWindows_CUI_CComposition_CICompositionDrawingSurface2_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CComposition_CICompositionDrawingSurfaceFactory_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CComposition_CICompositionDrawingSurfaceFactory_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CComposition_CICompositionDrawingSurfaceFactoryVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CComposition_CICompositionDrawingSurfaceFactory* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CComposition_CICompositionDrawingSurfaceFactory* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CComposition_CICompositionDrawingSurfaceFactory* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CComposition_CICompositionDrawingSurfaceFactory* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CComposition_CICompositionDrawingSurfaceFactory* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CComposition_CICompositionDrawingSurfaceFactory* This,
            TrustLevel* trustLevel);
    
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CComposition_CICompositionDrawingSurfaceFactoryVtbl;

    interface __x_ABI_CWindows_CUI_CComposition_CICompositionDrawingSurfaceFactory
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CComposition_CICompositionDrawingSurfaceFactoryVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CComposition_CICompositionDrawingSurfaceFactory;
#endif /* !defined(____x_ABI_CWindows_CUI_CComposition_CICompositionDrawingSurfaceFactory_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CComposition_CICompositionEasingFunction_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CComposition_CICompositionEasingFunction_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CComposition_CICompositionEasingFunctionVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CComposition_CICompositionEasingFunction* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CComposition_CICompositionEasingFunction* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CComposition_CICompositionEasingFunction* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CComposition_CICompositionEasingFunction* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CComposition_CICompositionEasingFunction* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CComposition_CICompositionEasingFunction* This,
            TrustLevel* trustLevel);
    
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CComposition_CICompositionEasingFunctionVtbl;

    interface __x_ABI_CWindows_CUI_CComposition_CICompositionEasingFunction
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CComposition_CICompositionEasingFunctionVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CComposition_CICompositionEasingFunction;
#endif /* !defined(____x_ABI_CWindows_CUI_CComposition_CICompositionEasingFunction_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CComposition_CICompositionEasingFunctionFactory_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CComposition_CICompositionEasingFunctionFactory_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CComposition_CICompositionEasingFunctionFactoryVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CComposition_CICompositionEasingFunctionFactory* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CComposition_CICompositionEasingFunctionFactory* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CComposition_CICompositionEasingFunctionFactory* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CComposition_CICompositionEasingFunctionFactory* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CComposition_CICompositionEasingFunctionFactory* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CComposition_CICompositionEasingFunctionFactory* This,
            TrustLevel* trustLevel);
    
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CComposition_CICompositionEasingFunctionFactoryVtbl;

    interface __x_ABI_CWindows_CUI_CComposition_CICompositionEasingFunctionFactory
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CComposition_CICompositionEasingFunctionFactoryVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CComposition_CICompositionEasingFunctionFactory;
#endif /* !defined(____x_ABI_CWindows_CUI_CComposition_CICompositionEasingFunctionFactory_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CComposition_CICompositionEffectBrush_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CComposition_CICompositionEffectBrush_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CComposition_CICompositionEffectBrushVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CComposition_CICompositionEffectBrush* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CComposition_CICompositionEffectBrush* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CComposition_CICompositionEffectBrush* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CComposition_CICompositionEffectBrush* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CComposition_CICompositionEffectBrush* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CComposition_CICompositionEffectBrush* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* GetSourceParameter)(__x_ABI_CWindows_CUI_CComposition_CICompositionEffectBrush* This,
        HSTRING name,
        __x_ABI_CWindows_CUI_CComposition_CICompositionBrush** result);
    HRESULT (STDMETHODCALLTYPE* SetSourceParameter)(__x_ABI_CWindows_CUI_CComposition_CICompositionEffectBrush* This,
        HSTRING name,
        __x_ABI_CWindows_CUI_CComposition_CICompositionBrush* source);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CComposition_CICompositionEffectBrushVtbl;

    interface __x_ABI_CWindows_CUI_CComposition_CICompositionEffectBrush
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CComposition_CICompositionEffectBrushVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CComposition_CICompositionEffectBrush;
#endif /* !defined(____x_ABI_CWindows_CUI_CComposition_CICompositionEffectBrush_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CComposition_CICompositionEffectFactory_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CComposition_CICompositionEffectFactory_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CComposition_CICompositionEffectFactoryVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CComposition_CICompositionEffectFactory* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CComposition_CICompositionEffectFactory* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CComposition_CICompositionEffectFactory* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CComposition_CICompositionEffectFactory* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CComposition_CICompositionEffectFactory* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CComposition_CICompositionEffectFactory* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* CreateBrush)(__x_ABI_CWindows_CUI_CComposition_CICompositionEffectFactory* This,
        __x_ABI_CWindows_CUI_CComposition_CICompositionEffectBrush** result);
    HRESULT (STDMETHODCALLTYPE* get_ExtendedError)(__x_ABI_CWindows_CUI_CComposition_CICompositionEffectFactory* This,
        HRESULT* value);
    HRESULT (STDMETHODCALLTYPE* get_LoadStatus)(__x_ABI_CWindows_CUI_CComposition_CICompositionEffectFactory* This,
        enum __x_ABI_CWindows_CUI_CComposition_CCompositionEffectFactoryLoadStatus* value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CComposition_CICompositionEffectFactoryVtbl;

    interface __x_ABI_CWindows_CUI_CComposition_CICompositionEffectFactory
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CComposition_CICompositionEffectFactoryVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CComposition_CICompositionEffectFactory;
#endif /* !defined(____x_ABI_CWindows_CUI_CComposition_CICompositionEffectFactory_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CComposition_CICompositionEffectSourceParameter_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CComposition_CICompositionEffectSourceParameter_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CComposition_CICompositionEffectSourceParameterVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CComposition_CICompositionEffectSourceParameter* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CComposition_CICompositionEffectSourceParameter* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CComposition_CICompositionEffectSourceParameter* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CComposition_CICompositionEffectSourceParameter* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CComposition_CICompositionEffectSourceParameter* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CComposition_CICompositionEffectSourceParameter* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Name)(__x_ABI_CWindows_CUI_CComposition_CICompositionEffectSourceParameter* This,
        HSTRING* value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CComposition_CICompositionEffectSourceParameterVtbl;

    interface __x_ABI_CWindows_CUI_CComposition_CICompositionEffectSourceParameter
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CComposition_CICompositionEffectSourceParameterVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CComposition_CICompositionEffectSourceParameter;
#endif /* !defined(____x_ABI_CWindows_CUI_CComposition_CICompositionEffectSourceParameter_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CComposition_CICompositionEffectSourceParameterFactory_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CComposition_CICompositionEffectSourceParameterFactory_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CComposition_CICompositionEffectSourceParameterFactoryVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CComposition_CICompositionEffectSourceParameterFactory* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CComposition_CICompositionEffectSourceParameterFactory* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CComposition_CICompositionEffectSourceParameterFactory* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CComposition_CICompositionEffectSourceParameterFactory* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CComposition_CICompositionEffectSourceParameterFactory* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CComposition_CICompositionEffectSourceParameterFactory* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* Create)(__x_ABI_CWindows_CUI_CComposition_CICompositionEffectSourceParameterFactory* This,
        HSTRING name,
        __x_ABI_CWindows_CUI_CComposition_CICompositionEffectSourceParameter** instance);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CComposition_CICompositionEffectSourceParameterFactoryVtbl;

    interface __x_ABI_CWindows_CUI_CComposition_CICompositionEffectSourceParameterFactory
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CComposition_CICompositionEffectSourceParameterFactoryVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CComposition_CICompositionEffectSourceParameterFactory;
#endif /* !defined(____x_ABI_CWindows_CUI_CComposition_CICompositionEffectSourceParameterFactory_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CComposition_CICompositionEllipseGeometry_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CComposition_CICompositionEllipseGeometry_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CComposition_CICompositionEllipseGeometryVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CComposition_CICompositionEllipseGeometry* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CComposition_CICompositionEllipseGeometry* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CComposition_CICompositionEllipseGeometry* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CComposition_CICompositionEllipseGeometry* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CComposition_CICompositionEllipseGeometry* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CComposition_CICompositionEllipseGeometry* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Center)(__x_ABI_CWindows_CUI_CComposition_CICompositionEllipseGeometry* This,
        struct __x_ABI_CWindows_CFoundation_CNumerics_CVector2* value);
    HRESULT (STDMETHODCALLTYPE* put_Center)(__x_ABI_CWindows_CUI_CComposition_CICompositionEllipseGeometry* This,
        struct __x_ABI_CWindows_CFoundation_CNumerics_CVector2 value);
    HRESULT (STDMETHODCALLTYPE* get_Radius)(__x_ABI_CWindows_CUI_CComposition_CICompositionEllipseGeometry* This,
        struct __x_ABI_CWindows_CFoundation_CNumerics_CVector2* value);
    HRESULT (STDMETHODCALLTYPE* put_Radius)(__x_ABI_CWindows_CUI_CComposition_CICompositionEllipseGeometry* This,
        struct __x_ABI_CWindows_CFoundation_CNumerics_CVector2 value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CComposition_CICompositionEllipseGeometryVtbl;

    interface __x_ABI_CWindows_CUI_CComposition_CICompositionEllipseGeometry
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CComposition_CICompositionEllipseGeometryVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CComposition_CICompositionEllipseGeometry;
#endif /* !defined(____x_ABI_CWindows_CUI_CComposition_CICompositionEllipseGeometry_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CComposition_CICompositionGeometricClip_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CComposition_CICompositionGeometricClip_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CComposition_CICompositionGeometricClipVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CComposition_CICompositionGeometricClip* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CComposition_CICompositionGeometricClip* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CComposition_CICompositionGeometricClip* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CComposition_CICompositionGeometricClip* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CComposition_CICompositionGeometricClip* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CComposition_CICompositionGeometricClip* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Geometry)(__x_ABI_CWindows_CUI_CComposition_CICompositionGeometricClip* This,
        __x_ABI_CWindows_CUI_CComposition_CICompositionGeometry** value);
    HRESULT (STDMETHODCALLTYPE* put_Geometry)(__x_ABI_CWindows_CUI_CComposition_CICompositionGeometricClip* This,
        __x_ABI_CWindows_CUI_CComposition_CICompositionGeometry* value);
    HRESULT (STDMETHODCALLTYPE* get_ViewBox)(__x_ABI_CWindows_CUI_CComposition_CICompositionGeometricClip* This,
        __x_ABI_CWindows_CUI_CComposition_CICompositionViewBox** value);
    HRESULT (STDMETHODCALLTYPE* put_ViewBox)(__x_ABI_CWindows_CUI_CComposition_CICompositionGeometricClip* This,
        __x_ABI_CWindows_CUI_CComposition_CICompositionViewBox* value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CComposition_CICompositionGeometricClipVtbl;

    interface __x_ABI_CWindows_CUI_CComposition_CICompositionGeometricClip
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CComposition_CICompositionGeometricClipVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CComposition_CICompositionGeometricClip;
#endif /* !defined(____x_ABI_CWindows_CUI_CComposition_CICompositionGeometricClip_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CComposition_CICompositionGeometry_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CComposition_CICompositionGeometry_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CComposition_CICompositionGeometryVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CComposition_CICompositionGeometry* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CComposition_CICompositionGeometry* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CComposition_CICompositionGeometry* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CComposition_CICompositionGeometry* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CComposition_CICompositionGeometry* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CComposition_CICompositionGeometry* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_TrimEnd)(__x_ABI_CWindows_CUI_CComposition_CICompositionGeometry* This,
        FLOAT* value);
    HRESULT (STDMETHODCALLTYPE* put_TrimEnd)(__x_ABI_CWindows_CUI_CComposition_CICompositionGeometry* This,
        FLOAT value);
    HRESULT (STDMETHODCALLTYPE* get_TrimOffset)(__x_ABI_CWindows_CUI_CComposition_CICompositionGeometry* This,
        FLOAT* value);
    HRESULT (STDMETHODCALLTYPE* put_TrimOffset)(__x_ABI_CWindows_CUI_CComposition_CICompositionGeometry* This,
        FLOAT value);
    HRESULT (STDMETHODCALLTYPE* get_TrimStart)(__x_ABI_CWindows_CUI_CComposition_CICompositionGeometry* This,
        FLOAT* value);
    HRESULT (STDMETHODCALLTYPE* put_TrimStart)(__x_ABI_CWindows_CUI_CComposition_CICompositionGeometry* This,
        FLOAT value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CComposition_CICompositionGeometryVtbl;

    interface __x_ABI_CWindows_CUI_CComposition_CICompositionGeometry
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CComposition_CICompositionGeometryVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CComposition_CICompositionGeometry;
#endif /* !defined(____x_ABI_CWindows_CUI_CComposition_CICompositionGeometry_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CComposition_CICompositionGeometryFactory_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CComposition_CICompositionGeometryFactory_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CComposition_CICompositionGeometryFactoryVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CComposition_CICompositionGeometryFactory* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CComposition_CICompositionGeometryFactory* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CComposition_CICompositionGeometryFactory* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CComposition_CICompositionGeometryFactory* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CComposition_CICompositionGeometryFactory* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CComposition_CICompositionGeometryFactory* This,
            TrustLevel* trustLevel);
    
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CComposition_CICompositionGeometryFactoryVtbl;

    interface __x_ABI_CWindows_CUI_CComposition_CICompositionGeometryFactory
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CComposition_CICompositionGeometryFactoryVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CComposition_CICompositionGeometryFactory;
#endif /* !defined(____x_ABI_CWindows_CUI_CComposition_CICompositionGeometryFactory_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CComposition_CICompositionGradientBrush_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CComposition_CICompositionGradientBrush_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CComposition_CICompositionGradientBrushVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CComposition_CICompositionGradientBrush* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CComposition_CICompositionGradientBrush* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CComposition_CICompositionGradientBrush* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CComposition_CICompositionGradientBrush* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CComposition_CICompositionGradientBrush* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CComposition_CICompositionGradientBrush* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_AnchorPoint)(__x_ABI_CWindows_CUI_CComposition_CICompositionGradientBrush* This,
        struct __x_ABI_CWindows_CFoundation_CNumerics_CVector2* value);
    HRESULT (STDMETHODCALLTYPE* put_AnchorPoint)(__x_ABI_CWindows_CUI_CComposition_CICompositionGradientBrush* This,
        struct __x_ABI_CWindows_CFoundation_CNumerics_CVector2 value);
    HRESULT (STDMETHODCALLTYPE* get_CenterPoint)(__x_ABI_CWindows_CUI_CComposition_CICompositionGradientBrush* This,
        struct __x_ABI_CWindows_CFoundation_CNumerics_CVector2* value);
    HRESULT (STDMETHODCALLTYPE* put_CenterPoint)(__x_ABI_CWindows_CUI_CComposition_CICompositionGradientBrush* This,
        struct __x_ABI_CWindows_CFoundation_CNumerics_CVector2 value);
    HRESULT (STDMETHODCALLTYPE* get_ColorStops)(__x_ABI_CWindows_CUI_CComposition_CICompositionGradientBrush* This,
        __x_ABI_CWindows_CUI_CComposition_CICompositionColorGradientStopCollection** value);
    HRESULT (STDMETHODCALLTYPE* get_ExtendMode)(__x_ABI_CWindows_CUI_CComposition_CICompositionGradientBrush* This,
        enum __x_ABI_CWindows_CUI_CComposition_CCompositionGradientExtendMode* value);
    HRESULT (STDMETHODCALLTYPE* put_ExtendMode)(__x_ABI_CWindows_CUI_CComposition_CICompositionGradientBrush* This,
        enum __x_ABI_CWindows_CUI_CComposition_CCompositionGradientExtendMode value);
    HRESULT (STDMETHODCALLTYPE* get_InterpolationSpace)(__x_ABI_CWindows_CUI_CComposition_CICompositionGradientBrush* This,
        enum __x_ABI_CWindows_CUI_CComposition_CCompositionColorSpace* value);
    HRESULT (STDMETHODCALLTYPE* put_InterpolationSpace)(__x_ABI_CWindows_CUI_CComposition_CICompositionGradientBrush* This,
        enum __x_ABI_CWindows_CUI_CComposition_CCompositionColorSpace value);
    HRESULT (STDMETHODCALLTYPE* get_Offset)(__x_ABI_CWindows_CUI_CComposition_CICompositionGradientBrush* This,
        struct __x_ABI_CWindows_CFoundation_CNumerics_CVector2* value);
    HRESULT (STDMETHODCALLTYPE* put_Offset)(__x_ABI_CWindows_CUI_CComposition_CICompositionGradientBrush* This,
        struct __x_ABI_CWindows_CFoundation_CNumerics_CVector2 value);
    HRESULT (STDMETHODCALLTYPE* get_RotationAngle)(__x_ABI_CWindows_CUI_CComposition_CICompositionGradientBrush* This,
        FLOAT* value);
    HRESULT (STDMETHODCALLTYPE* put_RotationAngle)(__x_ABI_CWindows_CUI_CComposition_CICompositionGradientBrush* This,
        FLOAT value);
    HRESULT (STDMETHODCALLTYPE* get_RotationAngleInDegrees)(__x_ABI_CWindows_CUI_CComposition_CICompositionGradientBrush* This,
        FLOAT* value);
    HRESULT (STDMETHODCALLTYPE* put_RotationAngleInDegrees)(__x_ABI_CWindows_CUI_CComposition_CICompositionGradientBrush* This,
        FLOAT value);
    HRESULT (STDMETHODCALLTYPE* get_Scale)(__x_ABI_CWindows_CUI_CComposition_CICompositionGradientBrush* This,
        struct __x_ABI_CWindows_CFoundation_CNumerics_CVector2* value);
    HRESULT (STDMETHODCALLTYPE* put_Scale)(__x_ABI_CWindows_CUI_CComposition_CICompositionGradientBrush* This,
        struct __x_ABI_CWindows_CFoundation_CNumerics_CVector2 value);
    HRESULT (STDMETHODCALLTYPE* get_TransformMatrix)(__x_ABI_CWindows_CUI_CComposition_CICompositionGradientBrush* This,
        struct __x_ABI_CWindows_CFoundation_CNumerics_CMatrix3x2* value);
    HRESULT (STDMETHODCALLTYPE* put_TransformMatrix)(__x_ABI_CWindows_CUI_CComposition_CICompositionGradientBrush* This,
        struct __x_ABI_CWindows_CFoundation_CNumerics_CMatrix3x2 value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CComposition_CICompositionGradientBrushVtbl;

    interface __x_ABI_CWindows_CUI_CComposition_CICompositionGradientBrush
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CComposition_CICompositionGradientBrushVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CComposition_CICompositionGradientBrush;
#endif /* !defined(____x_ABI_CWindows_CUI_CComposition_CICompositionGradientBrush_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CComposition_CICompositionGradientBrush2_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CComposition_CICompositionGradientBrush2_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CComposition_CICompositionGradientBrush2Vtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CComposition_CICompositionGradientBrush2* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CComposition_CICompositionGradientBrush2* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CComposition_CICompositionGradientBrush2* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CComposition_CICompositionGradientBrush2* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CComposition_CICompositionGradientBrush2* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CComposition_CICompositionGradientBrush2* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_MappingMode)(__x_ABI_CWindows_CUI_CComposition_CICompositionGradientBrush2* This,
        enum __x_ABI_CWindows_CUI_CComposition_CCompositionMappingMode* value);
    HRESULT (STDMETHODCALLTYPE* put_MappingMode)(__x_ABI_CWindows_CUI_CComposition_CICompositionGradientBrush2* This,
        enum __x_ABI_CWindows_CUI_CComposition_CCompositionMappingMode value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CComposition_CICompositionGradientBrush2Vtbl;

    interface __x_ABI_CWindows_CUI_CComposition_CICompositionGradientBrush2
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CComposition_CICompositionGradientBrush2Vtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CComposition_CICompositionGradientBrush2;
#endif /* !defined(____x_ABI_CWindows_CUI_CComposition_CICompositionGradientBrush2_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CComposition_CICompositionGradientBrushFactory_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CComposition_CICompositionGradientBrushFactory_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CComposition_CICompositionGradientBrushFactoryVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CComposition_CICompositionGradientBrushFactory* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CComposition_CICompositionGradientBrushFactory* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CComposition_CICompositionGradientBrushFactory* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CComposition_CICompositionGradientBrushFactory* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CComposition_CICompositionGradientBrushFactory* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CComposition_CICompositionGradientBrushFactory* This,
            TrustLevel* trustLevel);
    
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CComposition_CICompositionGradientBrushFactoryVtbl;

    interface __x_ABI_CWindows_CUI_CComposition_CICompositionGradientBrushFactory
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CComposition_CICompositionGradientBrushFactoryVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CComposition_CICompositionGradientBrushFactory;
#endif /* !defined(____x_ABI_CWindows_CUI_CComposition_CICompositionGradientBrushFactory_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CComposition_CICompositionGraphicsDevice_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CComposition_CICompositionGraphicsDevice_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CComposition_CICompositionGraphicsDeviceVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CComposition_CICompositionGraphicsDevice* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CComposition_CICompositionGraphicsDevice* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CComposition_CICompositionGraphicsDevice* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CComposition_CICompositionGraphicsDevice* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CComposition_CICompositionGraphicsDevice* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CComposition_CICompositionGraphicsDevice* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* CreateDrawingSurface)(__x_ABI_CWindows_CUI_CComposition_CICompositionGraphicsDevice* This,
        struct __x_ABI_CWindows_CFoundation_CSize sizePixels,
        enum __x_ABI_CWindows_CGraphics_CDirectX_CDirectXPixelFormat pixelFormat,
        enum __x_ABI_CWindows_CGraphics_CDirectX_CDirectXAlphaMode alphaMode,
        __x_ABI_CWindows_CUI_CComposition_CICompositionDrawingSurface** result);
    HRESULT (STDMETHODCALLTYPE* add_RenderingDeviceReplaced)(__x_ABI_CWindows_CUI_CComposition_CICompositionGraphicsDevice* This,
        __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CComposition__CCompositionGraphicsDevice___x_ABI_CWindows__CUI__CComposition__CRenderingDeviceReplacedEventArgs* handler,
        EventRegistrationToken* token);
    HRESULT (STDMETHODCALLTYPE* remove_RenderingDeviceReplaced)(__x_ABI_CWindows_CUI_CComposition_CICompositionGraphicsDevice* This,
        EventRegistrationToken token);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CComposition_CICompositionGraphicsDeviceVtbl;

    interface __x_ABI_CWindows_CUI_CComposition_CICompositionGraphicsDevice
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CComposition_CICompositionGraphicsDeviceVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CComposition_CICompositionGraphicsDevice;
#endif /* !defined(____x_ABI_CWindows_CUI_CComposition_CICompositionGraphicsDevice_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CComposition_CICompositionGraphicsDevice2_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CComposition_CICompositionGraphicsDevice2_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CComposition_CICompositionGraphicsDevice2Vtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CComposition_CICompositionGraphicsDevice2* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CComposition_CICompositionGraphicsDevice2* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CComposition_CICompositionGraphicsDevice2* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CComposition_CICompositionGraphicsDevice2* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CComposition_CICompositionGraphicsDevice2* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CComposition_CICompositionGraphicsDevice2* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* CreateDrawingSurface2)(__x_ABI_CWindows_CUI_CComposition_CICompositionGraphicsDevice2* This,
        struct __x_ABI_CWindows_CGraphics_CSizeInt32 sizePixels,
        enum __x_ABI_CWindows_CGraphics_CDirectX_CDirectXPixelFormat pixelFormat,
        enum __x_ABI_CWindows_CGraphics_CDirectX_CDirectXAlphaMode alphaMode,
        __x_ABI_CWindows_CUI_CComposition_CICompositionDrawingSurface** result);
    HRESULT (STDMETHODCALLTYPE* CreateVirtualDrawingSurface)(__x_ABI_CWindows_CUI_CComposition_CICompositionGraphicsDevice2* This,
        struct __x_ABI_CWindows_CGraphics_CSizeInt32 sizePixels,
        enum __x_ABI_CWindows_CGraphics_CDirectX_CDirectXPixelFormat pixelFormat,
        enum __x_ABI_CWindows_CGraphics_CDirectX_CDirectXAlphaMode alphaMode,
        __x_ABI_CWindows_CUI_CComposition_CICompositionVirtualDrawingSurface** result);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CComposition_CICompositionGraphicsDevice2Vtbl;

    interface __x_ABI_CWindows_CUI_CComposition_CICompositionGraphicsDevice2
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CComposition_CICompositionGraphicsDevice2Vtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CComposition_CICompositionGraphicsDevice2;
#endif /* !defined(____x_ABI_CWindows_CUI_CComposition_CICompositionGraphicsDevice2_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CComposition_CICompositionGraphicsDevice3_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CComposition_CICompositionGraphicsDevice3_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CComposition_CICompositionGraphicsDevice3Vtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CComposition_CICompositionGraphicsDevice3* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CComposition_CICompositionGraphicsDevice3* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CComposition_CICompositionGraphicsDevice3* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CComposition_CICompositionGraphicsDevice3* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CComposition_CICompositionGraphicsDevice3* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CComposition_CICompositionGraphicsDevice3* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* CreateMipmapSurface)(__x_ABI_CWindows_CUI_CComposition_CICompositionGraphicsDevice3* This,
        struct __x_ABI_CWindows_CGraphics_CSizeInt32 sizePixels,
        enum __x_ABI_CWindows_CGraphics_CDirectX_CDirectXPixelFormat pixelFormat,
        enum __x_ABI_CWindows_CGraphics_CDirectX_CDirectXAlphaMode alphaMode,
        __x_ABI_CWindows_CUI_CComposition_CICompositionMipmapSurface** result);
    HRESULT (STDMETHODCALLTYPE* Trim)(__x_ABI_CWindows_CUI_CComposition_CICompositionGraphicsDevice3* This);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CComposition_CICompositionGraphicsDevice3Vtbl;

    interface __x_ABI_CWindows_CUI_CComposition_CICompositionGraphicsDevice3
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CComposition_CICompositionGraphicsDevice3Vtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CComposition_CICompositionGraphicsDevice3;
#endif /* !defined(____x_ABI_CWindows_CUI_CComposition_CICompositionGraphicsDevice3_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CComposition_CICompositionLight_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CComposition_CICompositionLight_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CComposition_CICompositionLightVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CComposition_CICompositionLight* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CComposition_CICompositionLight* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CComposition_CICompositionLight* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CComposition_CICompositionLight* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CComposition_CICompositionLight* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CComposition_CICompositionLight* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Targets)(__x_ABI_CWindows_CUI_CComposition_CICompositionLight* This,
        __x_ABI_CWindows_CUI_CComposition_CIVisualUnorderedCollection** value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CComposition_CICompositionLightVtbl;

    interface __x_ABI_CWindows_CUI_CComposition_CICompositionLight
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CComposition_CICompositionLightVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CComposition_CICompositionLight;
#endif /* !defined(____x_ABI_CWindows_CUI_CComposition_CICompositionLight_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CComposition_CICompositionLight2_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CComposition_CICompositionLight2_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CComposition_CICompositionLight2Vtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CComposition_CICompositionLight2* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CComposition_CICompositionLight2* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CComposition_CICompositionLight2* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CComposition_CICompositionLight2* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CComposition_CICompositionLight2* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CComposition_CICompositionLight2* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_ExclusionsFromTargets)(__x_ABI_CWindows_CUI_CComposition_CICompositionLight2* This,
        __x_ABI_CWindows_CUI_CComposition_CIVisualUnorderedCollection** value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CComposition_CICompositionLight2Vtbl;

    interface __x_ABI_CWindows_CUI_CComposition_CICompositionLight2
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CComposition_CICompositionLight2Vtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CComposition_CICompositionLight2;
#endif /* !defined(____x_ABI_CWindows_CUI_CComposition_CICompositionLight2_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CComposition_CICompositionLight3_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CComposition_CICompositionLight3_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CComposition_CICompositionLight3Vtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CComposition_CICompositionLight3* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CComposition_CICompositionLight3* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CComposition_CICompositionLight3* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CComposition_CICompositionLight3* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CComposition_CICompositionLight3* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CComposition_CICompositionLight3* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_IsEnabled)(__x_ABI_CWindows_CUI_CComposition_CICompositionLight3* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* put_IsEnabled)(__x_ABI_CWindows_CUI_CComposition_CICompositionLight3* This,
        boolean value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CComposition_CICompositionLight3Vtbl;

    interface __x_ABI_CWindows_CUI_CComposition_CICompositionLight3
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CComposition_CICompositionLight3Vtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CComposition_CICompositionLight3;
#endif /* !defined(____x_ABI_CWindows_CUI_CComposition_CICompositionLight3_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CComposition_CICompositionLightFactory_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CComposition_CICompositionLightFactory_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CComposition_CICompositionLightFactoryVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CComposition_CICompositionLightFactory* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CComposition_CICompositionLightFactory* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CComposition_CICompositionLightFactory* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CComposition_CICompositionLightFactory* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CComposition_CICompositionLightFactory* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CComposition_CICompositionLightFactory* This,
            TrustLevel* trustLevel);
    
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CComposition_CICompositionLightFactoryVtbl;

    interface __x_ABI_CWindows_CUI_CComposition_CICompositionLightFactory
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CComposition_CICompositionLightFactoryVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CComposition_CICompositionLightFactory;
#endif /* !defined(____x_ABI_CWindows_CUI_CComposition_CICompositionLightFactory_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CComposition_CICompositionLineGeometry_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CComposition_CICompositionLineGeometry_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CComposition_CICompositionLineGeometryVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CComposition_CICompositionLineGeometry* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CComposition_CICompositionLineGeometry* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CComposition_CICompositionLineGeometry* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CComposition_CICompositionLineGeometry* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CComposition_CICompositionLineGeometry* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CComposition_CICompositionLineGeometry* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Start)(__x_ABI_CWindows_CUI_CComposition_CICompositionLineGeometry* This,
        struct __x_ABI_CWindows_CFoundation_CNumerics_CVector2* value);
    HRESULT (STDMETHODCALLTYPE* put_Start)(__x_ABI_CWindows_CUI_CComposition_CICompositionLineGeometry* This,
        struct __x_ABI_CWindows_CFoundation_CNumerics_CVector2 value);
    HRESULT (STDMETHODCALLTYPE* get_End)(__x_ABI_CWindows_CUI_CComposition_CICompositionLineGeometry* This,
        struct __x_ABI_CWindows_CFoundation_CNumerics_CVector2* value);
    HRESULT (STDMETHODCALLTYPE* put_End)(__x_ABI_CWindows_CUI_CComposition_CICompositionLineGeometry* This,
        struct __x_ABI_CWindows_CFoundation_CNumerics_CVector2 value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CComposition_CICompositionLineGeometryVtbl;

    interface __x_ABI_CWindows_CUI_CComposition_CICompositionLineGeometry
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CComposition_CICompositionLineGeometryVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CComposition_CICompositionLineGeometry;
#endif /* !defined(____x_ABI_CWindows_CUI_CComposition_CICompositionLineGeometry_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CComposition_CICompositionLinearGradientBrush_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CComposition_CICompositionLinearGradientBrush_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CComposition_CICompositionLinearGradientBrushVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CComposition_CICompositionLinearGradientBrush* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CComposition_CICompositionLinearGradientBrush* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CComposition_CICompositionLinearGradientBrush* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CComposition_CICompositionLinearGradientBrush* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CComposition_CICompositionLinearGradientBrush* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CComposition_CICompositionLinearGradientBrush* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_EndPoint)(__x_ABI_CWindows_CUI_CComposition_CICompositionLinearGradientBrush* This,
        struct __x_ABI_CWindows_CFoundation_CNumerics_CVector2* value);
    HRESULT (STDMETHODCALLTYPE* put_EndPoint)(__x_ABI_CWindows_CUI_CComposition_CICompositionLinearGradientBrush* This,
        struct __x_ABI_CWindows_CFoundation_CNumerics_CVector2 value);
    HRESULT (STDMETHODCALLTYPE* get_StartPoint)(__x_ABI_CWindows_CUI_CComposition_CICompositionLinearGradientBrush* This,
        struct __x_ABI_CWindows_CFoundation_CNumerics_CVector2* value);
    HRESULT (STDMETHODCALLTYPE* put_StartPoint)(__x_ABI_CWindows_CUI_CComposition_CICompositionLinearGradientBrush* This,
        struct __x_ABI_CWindows_CFoundation_CNumerics_CVector2 value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CComposition_CICompositionLinearGradientBrushVtbl;

    interface __x_ABI_CWindows_CUI_CComposition_CICompositionLinearGradientBrush
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CComposition_CICompositionLinearGradientBrushVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CComposition_CICompositionLinearGradientBrush;
#endif /* !defined(____x_ABI_CWindows_CUI_CComposition_CICompositionLinearGradientBrush_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CComposition_CICompositionMaskBrush_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CComposition_CICompositionMaskBrush_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CComposition_CICompositionMaskBrushVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CComposition_CICompositionMaskBrush* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CComposition_CICompositionMaskBrush* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CComposition_CICompositionMaskBrush* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CComposition_CICompositionMaskBrush* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CComposition_CICompositionMaskBrush* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CComposition_CICompositionMaskBrush* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Mask)(__x_ABI_CWindows_CUI_CComposition_CICompositionMaskBrush* This,
        __x_ABI_CWindows_CUI_CComposition_CICompositionBrush** value);
    HRESULT (STDMETHODCALLTYPE* put_Mask)(__x_ABI_CWindows_CUI_CComposition_CICompositionMaskBrush* This,
        __x_ABI_CWindows_CUI_CComposition_CICompositionBrush* value);
    HRESULT (STDMETHODCALLTYPE* get_Source)(__x_ABI_CWindows_CUI_CComposition_CICompositionMaskBrush* This,
        __x_ABI_CWindows_CUI_CComposition_CICompositionBrush** value);
    HRESULT (STDMETHODCALLTYPE* put_Source)(__x_ABI_CWindows_CUI_CComposition_CICompositionMaskBrush* This,
        __x_ABI_CWindows_CUI_CComposition_CICompositionBrush* value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CComposition_CICompositionMaskBrushVtbl;

    interface __x_ABI_CWindows_CUI_CComposition_CICompositionMaskBrush
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CComposition_CICompositionMaskBrushVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CComposition_CICompositionMaskBrush;
#endif /* !defined(____x_ABI_CWindows_CUI_CComposition_CICompositionMaskBrush_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CComposition_CICompositionMipmapSurface_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CComposition_CICompositionMipmapSurface_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CComposition_CICompositionMipmapSurfaceVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CComposition_CICompositionMipmapSurface* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CComposition_CICompositionMipmapSurface* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CComposition_CICompositionMipmapSurface* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CComposition_CICompositionMipmapSurface* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CComposition_CICompositionMipmapSurface* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CComposition_CICompositionMipmapSurface* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_LevelCount)(__x_ABI_CWindows_CUI_CComposition_CICompositionMipmapSurface* This,
        UINT32* value);
    HRESULT (STDMETHODCALLTYPE* get_AlphaMode)(__x_ABI_CWindows_CUI_CComposition_CICompositionMipmapSurface* This,
        enum __x_ABI_CWindows_CGraphics_CDirectX_CDirectXAlphaMode* value);
    HRESULT (STDMETHODCALLTYPE* get_PixelFormat)(__x_ABI_CWindows_CUI_CComposition_CICompositionMipmapSurface* This,
        enum __x_ABI_CWindows_CGraphics_CDirectX_CDirectXPixelFormat* value);
    HRESULT (STDMETHODCALLTYPE* get_SizeInt32)(__x_ABI_CWindows_CUI_CComposition_CICompositionMipmapSurface* This,
        struct __x_ABI_CWindows_CGraphics_CSizeInt32* value);
    HRESULT (STDMETHODCALLTYPE* GetDrawingSurfaceForLevel)(__x_ABI_CWindows_CUI_CComposition_CICompositionMipmapSurface* This,
        UINT32 level,
        __x_ABI_CWindows_CUI_CComposition_CICompositionDrawingSurface** result);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CComposition_CICompositionMipmapSurfaceVtbl;

    interface __x_ABI_CWindows_CUI_CComposition_CICompositionMipmapSurface
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CComposition_CICompositionMipmapSurfaceVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CComposition_CICompositionMipmapSurface;
#endif /* !defined(____x_ABI_CWindows_CUI_CComposition_CICompositionMipmapSurface_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CComposition_CICompositionNineGridBrush_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CComposition_CICompositionNineGridBrush_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CComposition_CICompositionNineGridBrushVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CComposition_CICompositionNineGridBrush* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CComposition_CICompositionNineGridBrush* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CComposition_CICompositionNineGridBrush* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CComposition_CICompositionNineGridBrush* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CComposition_CICompositionNineGridBrush* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CComposition_CICompositionNineGridBrush* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_BottomInset)(__x_ABI_CWindows_CUI_CComposition_CICompositionNineGridBrush* This,
        FLOAT* value);
    HRESULT (STDMETHODCALLTYPE* put_BottomInset)(__x_ABI_CWindows_CUI_CComposition_CICompositionNineGridBrush* This,
        FLOAT value);
    HRESULT (STDMETHODCALLTYPE* get_BottomInsetScale)(__x_ABI_CWindows_CUI_CComposition_CICompositionNineGridBrush* This,
        FLOAT* value);
    HRESULT (STDMETHODCALLTYPE* put_BottomInsetScale)(__x_ABI_CWindows_CUI_CComposition_CICompositionNineGridBrush* This,
        FLOAT value);
    HRESULT (STDMETHODCALLTYPE* get_IsCenterHollow)(__x_ABI_CWindows_CUI_CComposition_CICompositionNineGridBrush* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* put_IsCenterHollow)(__x_ABI_CWindows_CUI_CComposition_CICompositionNineGridBrush* This,
        boolean value);
    HRESULT (STDMETHODCALLTYPE* get_LeftInset)(__x_ABI_CWindows_CUI_CComposition_CICompositionNineGridBrush* This,
        FLOAT* value);
    HRESULT (STDMETHODCALLTYPE* put_LeftInset)(__x_ABI_CWindows_CUI_CComposition_CICompositionNineGridBrush* This,
        FLOAT value);
    HRESULT (STDMETHODCALLTYPE* get_LeftInsetScale)(__x_ABI_CWindows_CUI_CComposition_CICompositionNineGridBrush* This,
        FLOAT* value);
    HRESULT (STDMETHODCALLTYPE* put_LeftInsetScale)(__x_ABI_CWindows_CUI_CComposition_CICompositionNineGridBrush* This,
        FLOAT value);
    HRESULT (STDMETHODCALLTYPE* get_RightInset)(__x_ABI_CWindows_CUI_CComposition_CICompositionNineGridBrush* This,
        FLOAT* value);
    HRESULT (STDMETHODCALLTYPE* put_RightInset)(__x_ABI_CWindows_CUI_CComposition_CICompositionNineGridBrush* This,
        FLOAT value);
    HRESULT (STDMETHODCALLTYPE* get_RightInsetScale)(__x_ABI_CWindows_CUI_CComposition_CICompositionNineGridBrush* This,
        FLOAT* value);
    HRESULT (STDMETHODCALLTYPE* put_RightInsetScale)(__x_ABI_CWindows_CUI_CComposition_CICompositionNineGridBrush* This,
        FLOAT value);
    HRESULT (STDMETHODCALLTYPE* get_Source)(__x_ABI_CWindows_CUI_CComposition_CICompositionNineGridBrush* This,
        __x_ABI_CWindows_CUI_CComposition_CICompositionBrush** value);
    HRESULT (STDMETHODCALLTYPE* put_Source)(__x_ABI_CWindows_CUI_CComposition_CICompositionNineGridBrush* This,
        __x_ABI_CWindows_CUI_CComposition_CICompositionBrush* value);
    HRESULT (STDMETHODCALLTYPE* get_TopInset)(__x_ABI_CWindows_CUI_CComposition_CICompositionNineGridBrush* This,
        FLOAT* value);
    HRESULT (STDMETHODCALLTYPE* put_TopInset)(__x_ABI_CWindows_CUI_CComposition_CICompositionNineGridBrush* This,
        FLOAT value);
    HRESULT (STDMETHODCALLTYPE* get_TopInsetScale)(__x_ABI_CWindows_CUI_CComposition_CICompositionNineGridBrush* This,
        FLOAT* value);
    HRESULT (STDMETHODCALLTYPE* put_TopInsetScale)(__x_ABI_CWindows_CUI_CComposition_CICompositionNineGridBrush* This,
        FLOAT value);
    HRESULT (STDMETHODCALLTYPE* SetInsets)(__x_ABI_CWindows_CUI_CComposition_CICompositionNineGridBrush* This,
        FLOAT inset);
    HRESULT (STDMETHODCALLTYPE* SetInsetsWithValues)(__x_ABI_CWindows_CUI_CComposition_CICompositionNineGridBrush* This,
        FLOAT left,
        FLOAT top,
        FLOAT right,
        FLOAT bottom);
    HRESULT (STDMETHODCALLTYPE* SetInsetScales)(__x_ABI_CWindows_CUI_CComposition_CICompositionNineGridBrush* This,
        FLOAT scale);
    HRESULT (STDMETHODCALLTYPE* SetInsetScalesWithValues)(__x_ABI_CWindows_CUI_CComposition_CICompositionNineGridBrush* This,
        FLOAT left,
        FLOAT top,
        FLOAT right,
        FLOAT bottom);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CComposition_CICompositionNineGridBrushVtbl;

    interface __x_ABI_CWindows_CUI_CComposition_CICompositionNineGridBrush
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CComposition_CICompositionNineGridBrushVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CComposition_CICompositionNineGridBrush;
#endif /* !defined(____x_ABI_CWindows_CUI_CComposition_CICompositionNineGridBrush_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CComposition_CICompositionObject_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CComposition_CICompositionObject_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CComposition_CICompositionObjectVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CComposition_CICompositionObject* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CComposition_CICompositionObject* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CComposition_CICompositionObject* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CComposition_CICompositionObject* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CComposition_CICompositionObject* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CComposition_CICompositionObject* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Compositor)(__x_ABI_CWindows_CUI_CComposition_CICompositionObject* This,
        __x_ABI_CWindows_CUI_CComposition_CICompositor** value);
    HRESULT (STDMETHODCALLTYPE* get_Dispatcher)(__x_ABI_CWindows_CUI_CComposition_CICompositionObject* This,
        __x_ABI_CWindows_CUI_CCore_CICoreDispatcher** value);
    HRESULT (STDMETHODCALLTYPE* get_Properties)(__x_ABI_CWindows_CUI_CComposition_CICompositionObject* This,
        __x_ABI_CWindows_CUI_CComposition_CICompositionPropertySet** value);
    HRESULT (STDMETHODCALLTYPE* StartAnimation)(__x_ABI_CWindows_CUI_CComposition_CICompositionObject* This,
        HSTRING propertyName,
        __x_ABI_CWindows_CUI_CComposition_CICompositionAnimation* animation);
    HRESULT (STDMETHODCALLTYPE* StopAnimation)(__x_ABI_CWindows_CUI_CComposition_CICompositionObject* This,
        HSTRING propertyName);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CComposition_CICompositionObjectVtbl;

    interface __x_ABI_CWindows_CUI_CComposition_CICompositionObject
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CComposition_CICompositionObjectVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CComposition_CICompositionObject;
#endif /* !defined(____x_ABI_CWindows_CUI_CComposition_CICompositionObject_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CComposition_CICompositionObject2_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CComposition_CICompositionObject2_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CComposition_CICompositionObject2Vtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CComposition_CICompositionObject2* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CComposition_CICompositionObject2* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CComposition_CICompositionObject2* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CComposition_CICompositionObject2* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CComposition_CICompositionObject2* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CComposition_CICompositionObject2* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Comment)(__x_ABI_CWindows_CUI_CComposition_CICompositionObject2* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* put_Comment)(__x_ABI_CWindows_CUI_CComposition_CICompositionObject2* This,
        HSTRING value);
    HRESULT (STDMETHODCALLTYPE* get_ImplicitAnimations)(__x_ABI_CWindows_CUI_CComposition_CICompositionObject2* This,
        __x_ABI_CWindows_CUI_CComposition_CIImplicitAnimationCollection** value);
    HRESULT (STDMETHODCALLTYPE* put_ImplicitAnimations)(__x_ABI_CWindows_CUI_CComposition_CICompositionObject2* This,
        __x_ABI_CWindows_CUI_CComposition_CIImplicitAnimationCollection* value);
    HRESULT (STDMETHODCALLTYPE* StartAnimationGroup)(__x_ABI_CWindows_CUI_CComposition_CICompositionObject2* This,
        __x_ABI_CWindows_CUI_CComposition_CICompositionAnimationBase* value);
    HRESULT (STDMETHODCALLTYPE* StopAnimationGroup)(__x_ABI_CWindows_CUI_CComposition_CICompositionObject2* This,
        __x_ABI_CWindows_CUI_CComposition_CICompositionAnimationBase* value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CComposition_CICompositionObject2Vtbl;

    interface __x_ABI_CWindows_CUI_CComposition_CICompositionObject2
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CComposition_CICompositionObject2Vtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CComposition_CICompositionObject2;
#endif /* !defined(____x_ABI_CWindows_CUI_CComposition_CICompositionObject2_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CComposition_CICompositionObject3_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CComposition_CICompositionObject3_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CComposition_CICompositionObject3Vtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CComposition_CICompositionObject3* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CComposition_CICompositionObject3* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CComposition_CICompositionObject3* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CComposition_CICompositionObject3* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CComposition_CICompositionObject3* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CComposition_CICompositionObject3* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_DispatcherQueue)(__x_ABI_CWindows_CUI_CComposition_CICompositionObject3* This,
        __x_ABI_CWindows_CSystem_CIDispatcherQueue** value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CComposition_CICompositionObject3Vtbl;

    interface __x_ABI_CWindows_CUI_CComposition_CICompositionObject3
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CComposition_CICompositionObject3Vtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CComposition_CICompositionObject3;
#endif /* !defined(____x_ABI_CWindows_CUI_CComposition_CICompositionObject3_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CComposition_CICompositionObject4_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CComposition_CICompositionObject4_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CComposition_CICompositionObject4Vtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CComposition_CICompositionObject4* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CComposition_CICompositionObject4* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CComposition_CICompositionObject4* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CComposition_CICompositionObject4* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CComposition_CICompositionObject4* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CComposition_CICompositionObject4* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* TryGetAnimationController)(__x_ABI_CWindows_CUI_CComposition_CICompositionObject4* This,
        HSTRING propertyName,
        __x_ABI_CWindows_CUI_CComposition_CIAnimationController** result);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CComposition_CICompositionObject4Vtbl;

    interface __x_ABI_CWindows_CUI_CComposition_CICompositionObject4
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CComposition_CICompositionObject4Vtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CComposition_CICompositionObject4;
#endif /* !defined(____x_ABI_CWindows_CUI_CComposition_CICompositionObject4_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CComposition_CICompositionObjectFactory_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CComposition_CICompositionObjectFactory_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CComposition_CICompositionObjectFactoryVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CComposition_CICompositionObjectFactory* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CComposition_CICompositionObjectFactory* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CComposition_CICompositionObjectFactory* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CComposition_CICompositionObjectFactory* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CComposition_CICompositionObjectFactory* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CComposition_CICompositionObjectFactory* This,
            TrustLevel* trustLevel);
    
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CComposition_CICompositionObjectFactoryVtbl;

    interface __x_ABI_CWindows_CUI_CComposition_CICompositionObjectFactory
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CComposition_CICompositionObjectFactoryVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CComposition_CICompositionObjectFactory;
#endif /* !defined(____x_ABI_CWindows_CUI_CComposition_CICompositionObjectFactory_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CComposition_CICompositionObjectStatics_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CComposition_CICompositionObjectStatics_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CComposition_CICompositionObjectStaticsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CComposition_CICompositionObjectStatics* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CComposition_CICompositionObjectStatics* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CComposition_CICompositionObjectStatics* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CComposition_CICompositionObjectStatics* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CComposition_CICompositionObjectStatics* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CComposition_CICompositionObjectStatics* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* StartAnimationWithIAnimationObject)(__x_ABI_CWindows_CUI_CComposition_CICompositionObjectStatics* This,
        __x_ABI_CWindows_CUI_CComposition_CIAnimationObject* target,
        HSTRING propertyName,
        __x_ABI_CWindows_CUI_CComposition_CICompositionAnimation* animation);
    HRESULT (STDMETHODCALLTYPE* StartAnimationGroupWithIAnimationObject)(__x_ABI_CWindows_CUI_CComposition_CICompositionObjectStatics* This,
        __x_ABI_CWindows_CUI_CComposition_CIAnimationObject* target,
        __x_ABI_CWindows_CUI_CComposition_CICompositionAnimationBase* animation);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CComposition_CICompositionObjectStaticsVtbl;

    interface __x_ABI_CWindows_CUI_CComposition_CICompositionObjectStatics
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CComposition_CICompositionObjectStaticsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CComposition_CICompositionObjectStatics;
#endif /* !defined(____x_ABI_CWindows_CUI_CComposition_CICompositionObjectStatics_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CComposition_CICompositionPath_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CComposition_CICompositionPath_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CComposition_CICompositionPathVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CComposition_CICompositionPath* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CComposition_CICompositionPath* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CComposition_CICompositionPath* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CComposition_CICompositionPath* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CComposition_CICompositionPath* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CComposition_CICompositionPath* This,
            TrustLevel* trustLevel);
    
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CComposition_CICompositionPathVtbl;

    interface __x_ABI_CWindows_CUI_CComposition_CICompositionPath
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CComposition_CICompositionPathVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CComposition_CICompositionPath;
#endif /* !defined(____x_ABI_CWindows_CUI_CComposition_CICompositionPath_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CComposition_CICompositionPathFactory_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CComposition_CICompositionPathFactory_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CComposition_CICompositionPathFactoryVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CComposition_CICompositionPathFactory* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CComposition_CICompositionPathFactory* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CComposition_CICompositionPathFactory* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CComposition_CICompositionPathFactory* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CComposition_CICompositionPathFactory* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CComposition_CICompositionPathFactory* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* Create)(__x_ABI_CWindows_CUI_CComposition_CICompositionPathFactory* This,
        __x_ABI_CWindows_CGraphics_CIGeometrySource2D* source,
        __x_ABI_CWindows_CUI_CComposition_CICompositionPath** result);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CComposition_CICompositionPathFactoryVtbl;

    interface __x_ABI_CWindows_CUI_CComposition_CICompositionPathFactory
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CComposition_CICompositionPathFactoryVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CComposition_CICompositionPathFactory;
#endif /* !defined(____x_ABI_CWindows_CUI_CComposition_CICompositionPathFactory_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CComposition_CICompositionPathGeometry_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CComposition_CICompositionPathGeometry_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CComposition_CICompositionPathGeometryVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CComposition_CICompositionPathGeometry* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CComposition_CICompositionPathGeometry* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CComposition_CICompositionPathGeometry* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CComposition_CICompositionPathGeometry* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CComposition_CICompositionPathGeometry* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CComposition_CICompositionPathGeometry* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Path)(__x_ABI_CWindows_CUI_CComposition_CICompositionPathGeometry* This,
        __x_ABI_CWindows_CUI_CComposition_CICompositionPath** value);
    HRESULT (STDMETHODCALLTYPE* put_Path)(__x_ABI_CWindows_CUI_CComposition_CICompositionPathGeometry* This,
        __x_ABI_CWindows_CUI_CComposition_CICompositionPath* value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CComposition_CICompositionPathGeometryVtbl;

    interface __x_ABI_CWindows_CUI_CComposition_CICompositionPathGeometry
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CComposition_CICompositionPathGeometryVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CComposition_CICompositionPathGeometry;
#endif /* !defined(____x_ABI_CWindows_CUI_CComposition_CICompositionPathGeometry_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CComposition_CICompositionProjectedShadow_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CComposition_CICompositionProjectedShadow_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CComposition_CICompositionProjectedShadowVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CComposition_CICompositionProjectedShadow* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CComposition_CICompositionProjectedShadow* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CComposition_CICompositionProjectedShadow* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CComposition_CICompositionProjectedShadow* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CComposition_CICompositionProjectedShadow* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CComposition_CICompositionProjectedShadow* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_BlurRadiusMultiplier)(__x_ABI_CWindows_CUI_CComposition_CICompositionProjectedShadow* This,
        FLOAT* value);
    HRESULT (STDMETHODCALLTYPE* put_BlurRadiusMultiplier)(__x_ABI_CWindows_CUI_CComposition_CICompositionProjectedShadow* This,
        FLOAT value);
    HRESULT (STDMETHODCALLTYPE* get_Casters)(__x_ABI_CWindows_CUI_CComposition_CICompositionProjectedShadow* This,
        __x_ABI_CWindows_CUI_CComposition_CICompositionProjectedShadowCasterCollection** value);
    HRESULT (STDMETHODCALLTYPE* get_LightSource)(__x_ABI_CWindows_CUI_CComposition_CICompositionProjectedShadow* This,
        __x_ABI_CWindows_CUI_CComposition_CICompositionLight** value);
    HRESULT (STDMETHODCALLTYPE* put_LightSource)(__x_ABI_CWindows_CUI_CComposition_CICompositionProjectedShadow* This,
        __x_ABI_CWindows_CUI_CComposition_CICompositionLight* value);
    HRESULT (STDMETHODCALLTYPE* get_MaxBlurRadius)(__x_ABI_CWindows_CUI_CComposition_CICompositionProjectedShadow* This,
        FLOAT* value);
    HRESULT (STDMETHODCALLTYPE* put_MaxBlurRadius)(__x_ABI_CWindows_CUI_CComposition_CICompositionProjectedShadow* This,
        FLOAT value);
    HRESULT (STDMETHODCALLTYPE* get_MinBlurRadius)(__x_ABI_CWindows_CUI_CComposition_CICompositionProjectedShadow* This,
        FLOAT* value);
    HRESULT (STDMETHODCALLTYPE* put_MinBlurRadius)(__x_ABI_CWindows_CUI_CComposition_CICompositionProjectedShadow* This,
        FLOAT value);
    HRESULT (STDMETHODCALLTYPE* get_Receivers)(__x_ABI_CWindows_CUI_CComposition_CICompositionProjectedShadow* This,
        __x_ABI_CWindows_CUI_CComposition_CICompositionProjectedShadowReceiverUnorderedCollection** value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CComposition_CICompositionProjectedShadowVtbl;

    interface __x_ABI_CWindows_CUI_CComposition_CICompositionProjectedShadow
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CComposition_CICompositionProjectedShadowVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CComposition_CICompositionProjectedShadow;
#endif /* !defined(____x_ABI_CWindows_CUI_CComposition_CICompositionProjectedShadow_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CComposition_CICompositionProjectedShadowCaster_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CComposition_CICompositionProjectedShadowCaster_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CComposition_CICompositionProjectedShadowCasterVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CComposition_CICompositionProjectedShadowCaster* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CComposition_CICompositionProjectedShadowCaster* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CComposition_CICompositionProjectedShadowCaster* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CComposition_CICompositionProjectedShadowCaster* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CComposition_CICompositionProjectedShadowCaster* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CComposition_CICompositionProjectedShadowCaster* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Brush)(__x_ABI_CWindows_CUI_CComposition_CICompositionProjectedShadowCaster* This,
        __x_ABI_CWindows_CUI_CComposition_CICompositionBrush** value);
    HRESULT (STDMETHODCALLTYPE* put_Brush)(__x_ABI_CWindows_CUI_CComposition_CICompositionProjectedShadowCaster* This,
        __x_ABI_CWindows_CUI_CComposition_CICompositionBrush* value);
    HRESULT (STDMETHODCALLTYPE* get_CastingVisual)(__x_ABI_CWindows_CUI_CComposition_CICompositionProjectedShadowCaster* This,
        __x_ABI_CWindows_CUI_CComposition_CIVisual** value);
    HRESULT (STDMETHODCALLTYPE* put_CastingVisual)(__x_ABI_CWindows_CUI_CComposition_CICompositionProjectedShadowCaster* This,
        __x_ABI_CWindows_CUI_CComposition_CIVisual* value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CComposition_CICompositionProjectedShadowCasterVtbl;

    interface __x_ABI_CWindows_CUI_CComposition_CICompositionProjectedShadowCaster
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CComposition_CICompositionProjectedShadowCasterVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CComposition_CICompositionProjectedShadowCaster;
#endif /* !defined(____x_ABI_CWindows_CUI_CComposition_CICompositionProjectedShadowCaster_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CComposition_CICompositionProjectedShadowCasterCollection_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CComposition_CICompositionProjectedShadowCasterCollection_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CComposition_CICompositionProjectedShadowCasterCollectionVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CComposition_CICompositionProjectedShadowCasterCollection* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CComposition_CICompositionProjectedShadowCasterCollection* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CComposition_CICompositionProjectedShadowCasterCollection* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CComposition_CICompositionProjectedShadowCasterCollection* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CComposition_CICompositionProjectedShadowCasterCollection* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CComposition_CICompositionProjectedShadowCasterCollection* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Count)(__x_ABI_CWindows_CUI_CComposition_CICompositionProjectedShadowCasterCollection* This,
        INT32* value);
    HRESULT (STDMETHODCALLTYPE* InsertAbove)(__x_ABI_CWindows_CUI_CComposition_CICompositionProjectedShadowCasterCollection* This,
        __x_ABI_CWindows_CUI_CComposition_CICompositionProjectedShadowCaster* newCaster,
        __x_ABI_CWindows_CUI_CComposition_CICompositionProjectedShadowCaster* reference);
    HRESULT (STDMETHODCALLTYPE* InsertAtBottom)(__x_ABI_CWindows_CUI_CComposition_CICompositionProjectedShadowCasterCollection* This,
        __x_ABI_CWindows_CUI_CComposition_CICompositionProjectedShadowCaster* newCaster);
    HRESULT (STDMETHODCALLTYPE* InsertAtTop)(__x_ABI_CWindows_CUI_CComposition_CICompositionProjectedShadowCasterCollection* This,
        __x_ABI_CWindows_CUI_CComposition_CICompositionProjectedShadowCaster* newCaster);
    HRESULT (STDMETHODCALLTYPE* InsertBelow)(__x_ABI_CWindows_CUI_CComposition_CICompositionProjectedShadowCasterCollection* This,
        __x_ABI_CWindows_CUI_CComposition_CICompositionProjectedShadowCaster* newCaster,
        __x_ABI_CWindows_CUI_CComposition_CICompositionProjectedShadowCaster* reference);
    HRESULT (STDMETHODCALLTYPE* Remove)(__x_ABI_CWindows_CUI_CComposition_CICompositionProjectedShadowCasterCollection* This,
        __x_ABI_CWindows_CUI_CComposition_CICompositionProjectedShadowCaster* caster);
    HRESULT (STDMETHODCALLTYPE* RemoveAll)(__x_ABI_CWindows_CUI_CComposition_CICompositionProjectedShadowCasterCollection* This);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CComposition_CICompositionProjectedShadowCasterCollectionVtbl;

    interface __x_ABI_CWindows_CUI_CComposition_CICompositionProjectedShadowCasterCollection
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CComposition_CICompositionProjectedShadowCasterCollectionVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CComposition_CICompositionProjectedShadowCasterCollection;
#endif /* !defined(____x_ABI_CWindows_CUI_CComposition_CICompositionProjectedShadowCasterCollection_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CComposition_CICompositionProjectedShadowCasterCollectionStatics_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CComposition_CICompositionProjectedShadowCasterCollectionStatics_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CComposition_CICompositionProjectedShadowCasterCollectionStaticsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CComposition_CICompositionProjectedShadowCasterCollectionStatics* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CComposition_CICompositionProjectedShadowCasterCollectionStatics* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CComposition_CICompositionProjectedShadowCasterCollectionStatics* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CComposition_CICompositionProjectedShadowCasterCollectionStatics* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CComposition_CICompositionProjectedShadowCasterCollectionStatics* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CComposition_CICompositionProjectedShadowCasterCollectionStatics* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_MaxRespectedCasters)(__x_ABI_CWindows_CUI_CComposition_CICompositionProjectedShadowCasterCollectionStatics* This,
        INT32* value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CComposition_CICompositionProjectedShadowCasterCollectionStaticsVtbl;

    interface __x_ABI_CWindows_CUI_CComposition_CICompositionProjectedShadowCasterCollectionStatics
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CComposition_CICompositionProjectedShadowCasterCollectionStaticsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CComposition_CICompositionProjectedShadowCasterCollectionStatics;
#endif /* !defined(____x_ABI_CWindows_CUI_CComposition_CICompositionProjectedShadowCasterCollectionStatics_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CComposition_CICompositionProjectedShadowReceiver_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CComposition_CICompositionProjectedShadowReceiver_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CComposition_CICompositionProjectedShadowReceiverVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CComposition_CICompositionProjectedShadowReceiver* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CComposition_CICompositionProjectedShadowReceiver* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CComposition_CICompositionProjectedShadowReceiver* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CComposition_CICompositionProjectedShadowReceiver* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CComposition_CICompositionProjectedShadowReceiver* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CComposition_CICompositionProjectedShadowReceiver* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_ReceivingVisual)(__x_ABI_CWindows_CUI_CComposition_CICompositionProjectedShadowReceiver* This,
        __x_ABI_CWindows_CUI_CComposition_CIVisual** value);
    HRESULT (STDMETHODCALLTYPE* put_ReceivingVisual)(__x_ABI_CWindows_CUI_CComposition_CICompositionProjectedShadowReceiver* This,
        __x_ABI_CWindows_CUI_CComposition_CIVisual* value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CComposition_CICompositionProjectedShadowReceiverVtbl;

    interface __x_ABI_CWindows_CUI_CComposition_CICompositionProjectedShadowReceiver
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CComposition_CICompositionProjectedShadowReceiverVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CComposition_CICompositionProjectedShadowReceiver;
#endif /* !defined(____x_ABI_CWindows_CUI_CComposition_CICompositionProjectedShadowReceiver_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CComposition_CICompositionProjectedShadowReceiverUnorderedCollection_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CComposition_CICompositionProjectedShadowReceiverUnorderedCollection_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CComposition_CICompositionProjectedShadowReceiverUnorderedCollectionVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CComposition_CICompositionProjectedShadowReceiverUnorderedCollection* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CComposition_CICompositionProjectedShadowReceiverUnorderedCollection* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CComposition_CICompositionProjectedShadowReceiverUnorderedCollection* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CComposition_CICompositionProjectedShadowReceiverUnorderedCollection* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CComposition_CICompositionProjectedShadowReceiverUnorderedCollection* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CComposition_CICompositionProjectedShadowReceiverUnorderedCollection* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* Add)(__x_ABI_CWindows_CUI_CComposition_CICompositionProjectedShadowReceiverUnorderedCollection* This,
        __x_ABI_CWindows_CUI_CComposition_CICompositionProjectedShadowReceiver* value);
    HRESULT (STDMETHODCALLTYPE* get_Count)(__x_ABI_CWindows_CUI_CComposition_CICompositionProjectedShadowReceiverUnorderedCollection* This,
        INT32* value);
    HRESULT (STDMETHODCALLTYPE* Remove)(__x_ABI_CWindows_CUI_CComposition_CICompositionProjectedShadowReceiverUnorderedCollection* This,
        __x_ABI_CWindows_CUI_CComposition_CICompositionProjectedShadowReceiver* value);
    HRESULT (STDMETHODCALLTYPE* RemoveAll)(__x_ABI_CWindows_CUI_CComposition_CICompositionProjectedShadowReceiverUnorderedCollection* This);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CComposition_CICompositionProjectedShadowReceiverUnorderedCollectionVtbl;

    interface __x_ABI_CWindows_CUI_CComposition_CICompositionProjectedShadowReceiverUnorderedCollection
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CComposition_CICompositionProjectedShadowReceiverUnorderedCollectionVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CComposition_CICompositionProjectedShadowReceiverUnorderedCollection;
#endif /* !defined(____x_ABI_CWindows_CUI_CComposition_CICompositionProjectedShadowReceiverUnorderedCollection_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CComposition_CICompositionPropertySet_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CComposition_CICompositionPropertySet_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CComposition_CICompositionPropertySetVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CComposition_CICompositionPropertySet* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CComposition_CICompositionPropertySet* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CComposition_CICompositionPropertySet* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CComposition_CICompositionPropertySet* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CComposition_CICompositionPropertySet* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CComposition_CICompositionPropertySet* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* InsertColor)(__x_ABI_CWindows_CUI_CComposition_CICompositionPropertySet* This,
        HSTRING propertyName,
        struct __x_ABI_CWindows_CUI_CColor value);
    HRESULT (STDMETHODCALLTYPE* InsertMatrix3x2)(__x_ABI_CWindows_CUI_CComposition_CICompositionPropertySet* This,
        HSTRING propertyName,
        struct __x_ABI_CWindows_CFoundation_CNumerics_CMatrix3x2 value);
    HRESULT (STDMETHODCALLTYPE* InsertMatrix4x4)(__x_ABI_CWindows_CUI_CComposition_CICompositionPropertySet* This,
        HSTRING propertyName,
        struct __x_ABI_CWindows_CFoundation_CNumerics_CMatrix4x4 value);
    HRESULT (STDMETHODCALLTYPE* InsertQuaternion)(__x_ABI_CWindows_CUI_CComposition_CICompositionPropertySet* This,
        HSTRING propertyName,
        struct __x_ABI_CWindows_CFoundation_CNumerics_CQuaternion value);
    HRESULT (STDMETHODCALLTYPE* InsertScalar)(__x_ABI_CWindows_CUI_CComposition_CICompositionPropertySet* This,
        HSTRING propertyName,
        FLOAT value);
    HRESULT (STDMETHODCALLTYPE* InsertVector2)(__x_ABI_CWindows_CUI_CComposition_CICompositionPropertySet* This,
        HSTRING propertyName,
        struct __x_ABI_CWindows_CFoundation_CNumerics_CVector2 value);
    HRESULT (STDMETHODCALLTYPE* InsertVector3)(__x_ABI_CWindows_CUI_CComposition_CICompositionPropertySet* This,
        HSTRING propertyName,
        struct __x_ABI_CWindows_CFoundation_CNumerics_CVector3 value);
    HRESULT (STDMETHODCALLTYPE* InsertVector4)(__x_ABI_CWindows_CUI_CComposition_CICompositionPropertySet* This,
        HSTRING propertyName,
        struct __x_ABI_CWindows_CFoundation_CNumerics_CVector4 value);
    HRESULT (STDMETHODCALLTYPE* TryGetColor)(__x_ABI_CWindows_CUI_CComposition_CICompositionPropertySet* This,
        HSTRING propertyName,
        struct __x_ABI_CWindows_CUI_CColor* value,
        enum __x_ABI_CWindows_CUI_CComposition_CCompositionGetValueStatus* result);
    HRESULT (STDMETHODCALLTYPE* TryGetMatrix3x2)(__x_ABI_CWindows_CUI_CComposition_CICompositionPropertySet* This,
        HSTRING propertyName,
        struct __x_ABI_CWindows_CFoundation_CNumerics_CMatrix3x2* value,
        enum __x_ABI_CWindows_CUI_CComposition_CCompositionGetValueStatus* result);
    HRESULT (STDMETHODCALLTYPE* TryGetMatrix4x4)(__x_ABI_CWindows_CUI_CComposition_CICompositionPropertySet* This,
        HSTRING propertyName,
        struct __x_ABI_CWindows_CFoundation_CNumerics_CMatrix4x4* value,
        enum __x_ABI_CWindows_CUI_CComposition_CCompositionGetValueStatus* result);
    HRESULT (STDMETHODCALLTYPE* TryGetQuaternion)(__x_ABI_CWindows_CUI_CComposition_CICompositionPropertySet* This,
        HSTRING propertyName,
        struct __x_ABI_CWindows_CFoundation_CNumerics_CQuaternion* value,
        enum __x_ABI_CWindows_CUI_CComposition_CCompositionGetValueStatus* result);
    HRESULT (STDMETHODCALLTYPE* TryGetScalar)(__x_ABI_CWindows_CUI_CComposition_CICompositionPropertySet* This,
        HSTRING propertyName,
        FLOAT* value,
        enum __x_ABI_CWindows_CUI_CComposition_CCompositionGetValueStatus* result);
    HRESULT (STDMETHODCALLTYPE* TryGetVector2)(__x_ABI_CWindows_CUI_CComposition_CICompositionPropertySet* This,
        HSTRING propertyName,
        struct __x_ABI_CWindows_CFoundation_CNumerics_CVector2* value,
        enum __x_ABI_CWindows_CUI_CComposition_CCompositionGetValueStatus* result);
    HRESULT (STDMETHODCALLTYPE* TryGetVector3)(__x_ABI_CWindows_CUI_CComposition_CICompositionPropertySet* This,
        HSTRING propertyName,
        struct __x_ABI_CWindows_CFoundation_CNumerics_CVector3* value,
        enum __x_ABI_CWindows_CUI_CComposition_CCompositionGetValueStatus* result);
    HRESULT (STDMETHODCALLTYPE* TryGetVector4)(__x_ABI_CWindows_CUI_CComposition_CICompositionPropertySet* This,
        HSTRING propertyName,
        struct __x_ABI_CWindows_CFoundation_CNumerics_CVector4* value,
        enum __x_ABI_CWindows_CUI_CComposition_CCompositionGetValueStatus* result);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CComposition_CICompositionPropertySetVtbl;

    interface __x_ABI_CWindows_CUI_CComposition_CICompositionPropertySet
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CComposition_CICompositionPropertySetVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CComposition_CICompositionPropertySet;
#endif /* !defined(____x_ABI_CWindows_CUI_CComposition_CICompositionPropertySet_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CComposition_CICompositionPropertySet2_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CComposition_CICompositionPropertySet2_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CComposition_CICompositionPropertySet2Vtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CComposition_CICompositionPropertySet2* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CComposition_CICompositionPropertySet2* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CComposition_CICompositionPropertySet2* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CComposition_CICompositionPropertySet2* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CComposition_CICompositionPropertySet2* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CComposition_CICompositionPropertySet2* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* InsertBoolean)(__x_ABI_CWindows_CUI_CComposition_CICompositionPropertySet2* This,
        HSTRING propertyName,
        boolean value);
    HRESULT (STDMETHODCALLTYPE* TryGetBoolean)(__x_ABI_CWindows_CUI_CComposition_CICompositionPropertySet2* This,
        HSTRING propertyName,
        boolean* value,
        enum __x_ABI_CWindows_CUI_CComposition_CCompositionGetValueStatus* result);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CComposition_CICompositionPropertySet2Vtbl;

    interface __x_ABI_CWindows_CUI_CComposition_CICompositionPropertySet2
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CComposition_CICompositionPropertySet2Vtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CComposition_CICompositionPropertySet2;
#endif /* !defined(____x_ABI_CWindows_CUI_CComposition_CICompositionPropertySet2_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CComposition_CICompositionRadialGradientBrush_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CComposition_CICompositionRadialGradientBrush_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CComposition_CICompositionRadialGradientBrushVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CComposition_CICompositionRadialGradientBrush* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CComposition_CICompositionRadialGradientBrush* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CComposition_CICompositionRadialGradientBrush* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CComposition_CICompositionRadialGradientBrush* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CComposition_CICompositionRadialGradientBrush* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CComposition_CICompositionRadialGradientBrush* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_EllipseCenter)(__x_ABI_CWindows_CUI_CComposition_CICompositionRadialGradientBrush* This,
        struct __x_ABI_CWindows_CFoundation_CNumerics_CVector2* value);
    HRESULT (STDMETHODCALLTYPE* put_EllipseCenter)(__x_ABI_CWindows_CUI_CComposition_CICompositionRadialGradientBrush* This,
        struct __x_ABI_CWindows_CFoundation_CNumerics_CVector2 value);
    HRESULT (STDMETHODCALLTYPE* get_EllipseRadius)(__x_ABI_CWindows_CUI_CComposition_CICompositionRadialGradientBrush* This,
        struct __x_ABI_CWindows_CFoundation_CNumerics_CVector2* value);
    HRESULT (STDMETHODCALLTYPE* put_EllipseRadius)(__x_ABI_CWindows_CUI_CComposition_CICompositionRadialGradientBrush* This,
        struct __x_ABI_CWindows_CFoundation_CNumerics_CVector2 value);
    HRESULT (STDMETHODCALLTYPE* get_GradientOriginOffset)(__x_ABI_CWindows_CUI_CComposition_CICompositionRadialGradientBrush* This,
        struct __x_ABI_CWindows_CFoundation_CNumerics_CVector2* value);
    HRESULT (STDMETHODCALLTYPE* put_GradientOriginOffset)(__x_ABI_CWindows_CUI_CComposition_CICompositionRadialGradientBrush* This,
        struct __x_ABI_CWindows_CFoundation_CNumerics_CVector2 value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CComposition_CICompositionRadialGradientBrushVtbl;

    interface __x_ABI_CWindows_CUI_CComposition_CICompositionRadialGradientBrush
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CComposition_CICompositionRadialGradientBrushVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CComposition_CICompositionRadialGradientBrush;
#endif /* !defined(____x_ABI_CWindows_CUI_CComposition_CICompositionRadialGradientBrush_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CComposition_CICompositionRectangleGeometry_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CComposition_CICompositionRectangleGeometry_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CComposition_CICompositionRectangleGeometryVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CComposition_CICompositionRectangleGeometry* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CComposition_CICompositionRectangleGeometry* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CComposition_CICompositionRectangleGeometry* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CComposition_CICompositionRectangleGeometry* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CComposition_CICompositionRectangleGeometry* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CComposition_CICompositionRectangleGeometry* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Offset)(__x_ABI_CWindows_CUI_CComposition_CICompositionRectangleGeometry* This,
        struct __x_ABI_CWindows_CFoundation_CNumerics_CVector2* value);
    HRESULT (STDMETHODCALLTYPE* put_Offset)(__x_ABI_CWindows_CUI_CComposition_CICompositionRectangleGeometry* This,
        struct __x_ABI_CWindows_CFoundation_CNumerics_CVector2 value);
    HRESULT (STDMETHODCALLTYPE* get_Size)(__x_ABI_CWindows_CUI_CComposition_CICompositionRectangleGeometry* This,
        struct __x_ABI_CWindows_CFoundation_CNumerics_CVector2* value);
    HRESULT (STDMETHODCALLTYPE* put_Size)(__x_ABI_CWindows_CUI_CComposition_CICompositionRectangleGeometry* This,
        struct __x_ABI_CWindows_CFoundation_CNumerics_CVector2 value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CComposition_CICompositionRectangleGeometryVtbl;

    interface __x_ABI_CWindows_CUI_CComposition_CICompositionRectangleGeometry
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CComposition_CICompositionRectangleGeometryVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CComposition_CICompositionRectangleGeometry;
#endif /* !defined(____x_ABI_CWindows_CUI_CComposition_CICompositionRectangleGeometry_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CComposition_CICompositionRoundedRectangleGeometry_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CComposition_CICompositionRoundedRectangleGeometry_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CComposition_CICompositionRoundedRectangleGeometryVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CComposition_CICompositionRoundedRectangleGeometry* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CComposition_CICompositionRoundedRectangleGeometry* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CComposition_CICompositionRoundedRectangleGeometry* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CComposition_CICompositionRoundedRectangleGeometry* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CComposition_CICompositionRoundedRectangleGeometry* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CComposition_CICompositionRoundedRectangleGeometry* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_CornerRadius)(__x_ABI_CWindows_CUI_CComposition_CICompositionRoundedRectangleGeometry* This,
        struct __x_ABI_CWindows_CFoundation_CNumerics_CVector2* value);
    HRESULT (STDMETHODCALLTYPE* put_CornerRadius)(__x_ABI_CWindows_CUI_CComposition_CICompositionRoundedRectangleGeometry* This,
        struct __x_ABI_CWindows_CFoundation_CNumerics_CVector2 value);
    HRESULT (STDMETHODCALLTYPE* get_Offset)(__x_ABI_CWindows_CUI_CComposition_CICompositionRoundedRectangleGeometry* This,
        struct __x_ABI_CWindows_CFoundation_CNumerics_CVector2* value);
    HRESULT (STDMETHODCALLTYPE* put_Offset)(__x_ABI_CWindows_CUI_CComposition_CICompositionRoundedRectangleGeometry* This,
        struct __x_ABI_CWindows_CFoundation_CNumerics_CVector2 value);
    HRESULT (STDMETHODCALLTYPE* get_Size)(__x_ABI_CWindows_CUI_CComposition_CICompositionRoundedRectangleGeometry* This,
        struct __x_ABI_CWindows_CFoundation_CNumerics_CVector2* value);
    HRESULT (STDMETHODCALLTYPE* put_Size)(__x_ABI_CWindows_CUI_CComposition_CICompositionRoundedRectangleGeometry* This,
        struct __x_ABI_CWindows_CFoundation_CNumerics_CVector2 value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CComposition_CICompositionRoundedRectangleGeometryVtbl;

    interface __x_ABI_CWindows_CUI_CComposition_CICompositionRoundedRectangleGeometry
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CComposition_CICompositionRoundedRectangleGeometryVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CComposition_CICompositionRoundedRectangleGeometry;
#endif /* !defined(____x_ABI_CWindows_CUI_CComposition_CICompositionRoundedRectangleGeometry_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CComposition_CICompositionScopedBatch_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CComposition_CICompositionScopedBatch_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CComposition_CICompositionScopedBatchVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CComposition_CICompositionScopedBatch* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CComposition_CICompositionScopedBatch* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CComposition_CICompositionScopedBatch* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CComposition_CICompositionScopedBatch* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CComposition_CICompositionScopedBatch* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CComposition_CICompositionScopedBatch* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_IsActive)(__x_ABI_CWindows_CUI_CComposition_CICompositionScopedBatch* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* get_IsEnded)(__x_ABI_CWindows_CUI_CComposition_CICompositionScopedBatch* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* End)(__x_ABI_CWindows_CUI_CComposition_CICompositionScopedBatch* This);
    HRESULT (STDMETHODCALLTYPE* Resume)(__x_ABI_CWindows_CUI_CComposition_CICompositionScopedBatch* This);
    HRESULT (STDMETHODCALLTYPE* Suspend)(__x_ABI_CWindows_CUI_CComposition_CICompositionScopedBatch* This);
    HRESULT (STDMETHODCALLTYPE* add_Completed)(__x_ABI_CWindows_CUI_CComposition_CICompositionScopedBatch* This,
        __x_ABI_C__FITypedEventHandler_2_IInspectable___x_ABI_CWindows__CUI__CComposition__CCompositionBatchCompletedEventArgs* handler,
        EventRegistrationToken* token);
    HRESULT (STDMETHODCALLTYPE* remove_Completed)(__x_ABI_CWindows_CUI_CComposition_CICompositionScopedBatch* This,
        EventRegistrationToken token);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CComposition_CICompositionScopedBatchVtbl;

    interface __x_ABI_CWindows_CUI_CComposition_CICompositionScopedBatch
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CComposition_CICompositionScopedBatchVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CComposition_CICompositionScopedBatch;
#endif /* !defined(____x_ABI_CWindows_CUI_CComposition_CICompositionScopedBatch_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CComposition_CICompositionShadow_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CComposition_CICompositionShadow_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CComposition_CICompositionShadowVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CComposition_CICompositionShadow* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CComposition_CICompositionShadow* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CComposition_CICompositionShadow* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CComposition_CICompositionShadow* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CComposition_CICompositionShadow* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CComposition_CICompositionShadow* This,
            TrustLevel* trustLevel);
    
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CComposition_CICompositionShadowVtbl;

    interface __x_ABI_CWindows_CUI_CComposition_CICompositionShadow
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CComposition_CICompositionShadowVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CComposition_CICompositionShadow;
#endif /* !defined(____x_ABI_CWindows_CUI_CComposition_CICompositionShadow_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CComposition_CICompositionShadowFactory_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CComposition_CICompositionShadowFactory_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CComposition_CICompositionShadowFactoryVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CComposition_CICompositionShadowFactory* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CComposition_CICompositionShadowFactory* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CComposition_CICompositionShadowFactory* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CComposition_CICompositionShadowFactory* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CComposition_CICompositionShadowFactory* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CComposition_CICompositionShadowFactory* This,
            TrustLevel* trustLevel);
    
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CComposition_CICompositionShadowFactoryVtbl;

    interface __x_ABI_CWindows_CUI_CComposition_CICompositionShadowFactory
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CComposition_CICompositionShadowFactoryVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CComposition_CICompositionShadowFactory;
#endif /* !defined(____x_ABI_CWindows_CUI_CComposition_CICompositionShadowFactory_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CComposition_CICompositionShape_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CComposition_CICompositionShape_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CComposition_CICompositionShapeVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CComposition_CICompositionShape* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CComposition_CICompositionShape* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CComposition_CICompositionShape* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CComposition_CICompositionShape* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CComposition_CICompositionShape* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CComposition_CICompositionShape* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_CenterPoint)(__x_ABI_CWindows_CUI_CComposition_CICompositionShape* This,
        struct __x_ABI_CWindows_CFoundation_CNumerics_CVector2* value);
    HRESULT (STDMETHODCALLTYPE* put_CenterPoint)(__x_ABI_CWindows_CUI_CComposition_CICompositionShape* This,
        struct __x_ABI_CWindows_CFoundation_CNumerics_CVector2 value);
    HRESULT (STDMETHODCALLTYPE* get_Offset)(__x_ABI_CWindows_CUI_CComposition_CICompositionShape* This,
        struct __x_ABI_CWindows_CFoundation_CNumerics_CVector2* value);
    HRESULT (STDMETHODCALLTYPE* put_Offset)(__x_ABI_CWindows_CUI_CComposition_CICompositionShape* This,
        struct __x_ABI_CWindows_CFoundation_CNumerics_CVector2 value);
    HRESULT (STDMETHODCALLTYPE* get_RotationAngle)(__x_ABI_CWindows_CUI_CComposition_CICompositionShape* This,
        FLOAT* value);
    HRESULT (STDMETHODCALLTYPE* put_RotationAngle)(__x_ABI_CWindows_CUI_CComposition_CICompositionShape* This,
        FLOAT value);
    HRESULT (STDMETHODCALLTYPE* get_RotationAngleInDegrees)(__x_ABI_CWindows_CUI_CComposition_CICompositionShape* This,
        FLOAT* value);
    HRESULT (STDMETHODCALLTYPE* put_RotationAngleInDegrees)(__x_ABI_CWindows_CUI_CComposition_CICompositionShape* This,
        FLOAT value);
    HRESULT (STDMETHODCALLTYPE* get_Scale)(__x_ABI_CWindows_CUI_CComposition_CICompositionShape* This,
        struct __x_ABI_CWindows_CFoundation_CNumerics_CVector2* value);
    HRESULT (STDMETHODCALLTYPE* put_Scale)(__x_ABI_CWindows_CUI_CComposition_CICompositionShape* This,
        struct __x_ABI_CWindows_CFoundation_CNumerics_CVector2 value);
    HRESULT (STDMETHODCALLTYPE* get_TransformMatrix)(__x_ABI_CWindows_CUI_CComposition_CICompositionShape* This,
        struct __x_ABI_CWindows_CFoundation_CNumerics_CMatrix3x2* value);
    HRESULT (STDMETHODCALLTYPE* put_TransformMatrix)(__x_ABI_CWindows_CUI_CComposition_CICompositionShape* This,
        struct __x_ABI_CWindows_CFoundation_CNumerics_CMatrix3x2 value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CComposition_CICompositionShapeVtbl;

    interface __x_ABI_CWindows_CUI_CComposition_CICompositionShape
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CComposition_CICompositionShapeVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CComposition_CICompositionShape;
#endif /* !defined(____x_ABI_CWindows_CUI_CComposition_CICompositionShape_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CComposition_CICompositionShapeFactory_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CComposition_CICompositionShapeFactory_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CComposition_CICompositionShapeFactoryVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CComposition_CICompositionShapeFactory* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CComposition_CICompositionShapeFactory* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CComposition_CICompositionShapeFactory* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CComposition_CICompositionShapeFactory* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CComposition_CICompositionShapeFactory* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CComposition_CICompositionShapeFactory* This,
            TrustLevel* trustLevel);
    
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CComposition_CICompositionShapeFactoryVtbl;

    interface __x_ABI_CWindows_CUI_CComposition_CICompositionShapeFactory
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CComposition_CICompositionShapeFactoryVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CComposition_CICompositionShapeFactory;
#endif /* !defined(____x_ABI_CWindows_CUI_CComposition_CICompositionShapeFactory_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CComposition_CICompositionSpriteShape_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CComposition_CICompositionSpriteShape_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CComposition_CICompositionSpriteShapeVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CComposition_CICompositionSpriteShape* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CComposition_CICompositionSpriteShape* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CComposition_CICompositionSpriteShape* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CComposition_CICompositionSpriteShape* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CComposition_CICompositionSpriteShape* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CComposition_CICompositionSpriteShape* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_FillBrush)(__x_ABI_CWindows_CUI_CComposition_CICompositionSpriteShape* This,
        __x_ABI_CWindows_CUI_CComposition_CICompositionBrush** value);
    HRESULT (STDMETHODCALLTYPE* put_FillBrush)(__x_ABI_CWindows_CUI_CComposition_CICompositionSpriteShape* This,
        __x_ABI_CWindows_CUI_CComposition_CICompositionBrush* value);
    HRESULT (STDMETHODCALLTYPE* get_Geometry)(__x_ABI_CWindows_CUI_CComposition_CICompositionSpriteShape* This,
        __x_ABI_CWindows_CUI_CComposition_CICompositionGeometry** value);
    HRESULT (STDMETHODCALLTYPE* put_Geometry)(__x_ABI_CWindows_CUI_CComposition_CICompositionSpriteShape* This,
        __x_ABI_CWindows_CUI_CComposition_CICompositionGeometry* value);
    HRESULT (STDMETHODCALLTYPE* get_IsStrokeNonScaling)(__x_ABI_CWindows_CUI_CComposition_CICompositionSpriteShape* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* put_IsStrokeNonScaling)(__x_ABI_CWindows_CUI_CComposition_CICompositionSpriteShape* This,
        boolean value);
    HRESULT (STDMETHODCALLTYPE* get_StrokeBrush)(__x_ABI_CWindows_CUI_CComposition_CICompositionSpriteShape* This,
        __x_ABI_CWindows_CUI_CComposition_CICompositionBrush** value);
    HRESULT (STDMETHODCALLTYPE* put_StrokeBrush)(__x_ABI_CWindows_CUI_CComposition_CICompositionSpriteShape* This,
        __x_ABI_CWindows_CUI_CComposition_CICompositionBrush* value);
    HRESULT (STDMETHODCALLTYPE* get_StrokeDashArray)(__x_ABI_CWindows_CUI_CComposition_CICompositionSpriteShape* This,
        __x_ABI_C__FIVector_1_float** value);
    HRESULT (STDMETHODCALLTYPE* get_StrokeDashCap)(__x_ABI_CWindows_CUI_CComposition_CICompositionSpriteShape* This,
        enum __x_ABI_CWindows_CUI_CComposition_CCompositionStrokeCap* value);
    HRESULT (STDMETHODCALLTYPE* put_StrokeDashCap)(__x_ABI_CWindows_CUI_CComposition_CICompositionSpriteShape* This,
        enum __x_ABI_CWindows_CUI_CComposition_CCompositionStrokeCap value);
    HRESULT (STDMETHODCALLTYPE* get_StrokeDashOffset)(__x_ABI_CWindows_CUI_CComposition_CICompositionSpriteShape* This,
        FLOAT* value);
    HRESULT (STDMETHODCALLTYPE* put_StrokeDashOffset)(__x_ABI_CWindows_CUI_CComposition_CICompositionSpriteShape* This,
        FLOAT value);
    HRESULT (STDMETHODCALLTYPE* get_StrokeEndCap)(__x_ABI_CWindows_CUI_CComposition_CICompositionSpriteShape* This,
        enum __x_ABI_CWindows_CUI_CComposition_CCompositionStrokeCap* value);
    HRESULT (STDMETHODCALLTYPE* put_StrokeEndCap)(__x_ABI_CWindows_CUI_CComposition_CICompositionSpriteShape* This,
        enum __x_ABI_CWindows_CUI_CComposition_CCompositionStrokeCap value);
    HRESULT (STDMETHODCALLTYPE* get_StrokeLineJoin)(__x_ABI_CWindows_CUI_CComposition_CICompositionSpriteShape* This,
        enum __x_ABI_CWindows_CUI_CComposition_CCompositionStrokeLineJoin* value);
    HRESULT (STDMETHODCALLTYPE* put_StrokeLineJoin)(__x_ABI_CWindows_CUI_CComposition_CICompositionSpriteShape* This,
        enum __x_ABI_CWindows_CUI_CComposition_CCompositionStrokeLineJoin value);
    HRESULT (STDMETHODCALLTYPE* get_StrokeMiterLimit)(__x_ABI_CWindows_CUI_CComposition_CICompositionSpriteShape* This,
        FLOAT* value);
    HRESULT (STDMETHODCALLTYPE* put_StrokeMiterLimit)(__x_ABI_CWindows_CUI_CComposition_CICompositionSpriteShape* This,
        FLOAT value);
    HRESULT (STDMETHODCALLTYPE* get_StrokeStartCap)(__x_ABI_CWindows_CUI_CComposition_CICompositionSpriteShape* This,
        enum __x_ABI_CWindows_CUI_CComposition_CCompositionStrokeCap* value);
    HRESULT (STDMETHODCALLTYPE* put_StrokeStartCap)(__x_ABI_CWindows_CUI_CComposition_CICompositionSpriteShape* This,
        enum __x_ABI_CWindows_CUI_CComposition_CCompositionStrokeCap value);
    HRESULT (STDMETHODCALLTYPE* get_StrokeThickness)(__x_ABI_CWindows_CUI_CComposition_CICompositionSpriteShape* This,
        FLOAT* value);
    HRESULT (STDMETHODCALLTYPE* put_StrokeThickness)(__x_ABI_CWindows_CUI_CComposition_CICompositionSpriteShape* This,
        FLOAT value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CComposition_CICompositionSpriteShapeVtbl;

    interface __x_ABI_CWindows_CUI_CComposition_CICompositionSpriteShape
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CComposition_CICompositionSpriteShapeVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CComposition_CICompositionSpriteShape;
#endif /* !defined(____x_ABI_CWindows_CUI_CComposition_CICompositionSpriteShape_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CComposition_CICompositionSurface_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CComposition_CICompositionSurface_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CComposition_CICompositionSurfaceVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CComposition_CICompositionSurface* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CComposition_CICompositionSurface* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CComposition_CICompositionSurface* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CComposition_CICompositionSurface* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CComposition_CICompositionSurface* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CComposition_CICompositionSurface* This,
            TrustLevel* trustLevel);
    
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CComposition_CICompositionSurfaceVtbl;

    interface __x_ABI_CWindows_CUI_CComposition_CICompositionSurface
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CComposition_CICompositionSurfaceVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CComposition_CICompositionSurface;
#endif /* !defined(____x_ABI_CWindows_CUI_CComposition_CICompositionSurface_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CComposition_CICompositionSurfaceBrush_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CComposition_CICompositionSurfaceBrush_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CComposition_CICompositionSurfaceBrushVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CComposition_CICompositionSurfaceBrush* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CComposition_CICompositionSurfaceBrush* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CComposition_CICompositionSurfaceBrush* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CComposition_CICompositionSurfaceBrush* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CComposition_CICompositionSurfaceBrush* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CComposition_CICompositionSurfaceBrush* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_BitmapInterpolationMode)(__x_ABI_CWindows_CUI_CComposition_CICompositionSurfaceBrush* This,
        enum __x_ABI_CWindows_CUI_CComposition_CCompositionBitmapInterpolationMode* value);
    HRESULT (STDMETHODCALLTYPE* put_BitmapInterpolationMode)(__x_ABI_CWindows_CUI_CComposition_CICompositionSurfaceBrush* This,
        enum __x_ABI_CWindows_CUI_CComposition_CCompositionBitmapInterpolationMode value);
    HRESULT (STDMETHODCALLTYPE* get_HorizontalAlignmentRatio)(__x_ABI_CWindows_CUI_CComposition_CICompositionSurfaceBrush* This,
        FLOAT* value);
    HRESULT (STDMETHODCALLTYPE* put_HorizontalAlignmentRatio)(__x_ABI_CWindows_CUI_CComposition_CICompositionSurfaceBrush* This,
        FLOAT value);
    HRESULT (STDMETHODCALLTYPE* get_Stretch)(__x_ABI_CWindows_CUI_CComposition_CICompositionSurfaceBrush* This,
        enum __x_ABI_CWindows_CUI_CComposition_CCompositionStretch* value);
    HRESULT (STDMETHODCALLTYPE* put_Stretch)(__x_ABI_CWindows_CUI_CComposition_CICompositionSurfaceBrush* This,
        enum __x_ABI_CWindows_CUI_CComposition_CCompositionStretch value);
    HRESULT (STDMETHODCALLTYPE* get_Surface)(__x_ABI_CWindows_CUI_CComposition_CICompositionSurfaceBrush* This,
        __x_ABI_CWindows_CUI_CComposition_CICompositionSurface** value);
    HRESULT (STDMETHODCALLTYPE* put_Surface)(__x_ABI_CWindows_CUI_CComposition_CICompositionSurfaceBrush* This,
        __x_ABI_CWindows_CUI_CComposition_CICompositionSurface* value);
    HRESULT (STDMETHODCALLTYPE* get_VerticalAlignmentRatio)(__x_ABI_CWindows_CUI_CComposition_CICompositionSurfaceBrush* This,
        FLOAT* value);
    HRESULT (STDMETHODCALLTYPE* put_VerticalAlignmentRatio)(__x_ABI_CWindows_CUI_CComposition_CICompositionSurfaceBrush* This,
        FLOAT value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CComposition_CICompositionSurfaceBrushVtbl;

    interface __x_ABI_CWindows_CUI_CComposition_CICompositionSurfaceBrush
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CComposition_CICompositionSurfaceBrushVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CComposition_CICompositionSurfaceBrush;
#endif /* !defined(____x_ABI_CWindows_CUI_CComposition_CICompositionSurfaceBrush_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CComposition_CICompositionSurfaceBrush2_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CComposition_CICompositionSurfaceBrush2_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CComposition_CICompositionSurfaceBrush2Vtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CComposition_CICompositionSurfaceBrush2* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CComposition_CICompositionSurfaceBrush2* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CComposition_CICompositionSurfaceBrush2* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CComposition_CICompositionSurfaceBrush2* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CComposition_CICompositionSurfaceBrush2* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CComposition_CICompositionSurfaceBrush2* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_AnchorPoint)(__x_ABI_CWindows_CUI_CComposition_CICompositionSurfaceBrush2* This,
        struct __x_ABI_CWindows_CFoundation_CNumerics_CVector2* value);
    HRESULT (STDMETHODCALLTYPE* put_AnchorPoint)(__x_ABI_CWindows_CUI_CComposition_CICompositionSurfaceBrush2* This,
        struct __x_ABI_CWindows_CFoundation_CNumerics_CVector2 value);
    HRESULT (STDMETHODCALLTYPE* get_CenterPoint)(__x_ABI_CWindows_CUI_CComposition_CICompositionSurfaceBrush2* This,
        struct __x_ABI_CWindows_CFoundation_CNumerics_CVector2* value);
    HRESULT (STDMETHODCALLTYPE* put_CenterPoint)(__x_ABI_CWindows_CUI_CComposition_CICompositionSurfaceBrush2* This,
        struct __x_ABI_CWindows_CFoundation_CNumerics_CVector2 value);
    HRESULT (STDMETHODCALLTYPE* get_Offset)(__x_ABI_CWindows_CUI_CComposition_CICompositionSurfaceBrush2* This,
        struct __x_ABI_CWindows_CFoundation_CNumerics_CVector2* value);
    HRESULT (STDMETHODCALLTYPE* put_Offset)(__x_ABI_CWindows_CUI_CComposition_CICompositionSurfaceBrush2* This,
        struct __x_ABI_CWindows_CFoundation_CNumerics_CVector2 value);
    HRESULT (STDMETHODCALLTYPE* get_RotationAngle)(__x_ABI_CWindows_CUI_CComposition_CICompositionSurfaceBrush2* This,
        FLOAT* value);
    HRESULT (STDMETHODCALLTYPE* put_RotationAngle)(__x_ABI_CWindows_CUI_CComposition_CICompositionSurfaceBrush2* This,
        FLOAT value);
    HRESULT (STDMETHODCALLTYPE* get_RotationAngleInDegrees)(__x_ABI_CWindows_CUI_CComposition_CICompositionSurfaceBrush2* This,
        FLOAT* value);
    HRESULT (STDMETHODCALLTYPE* put_RotationAngleInDegrees)(__x_ABI_CWindows_CUI_CComposition_CICompositionSurfaceBrush2* This,
        FLOAT value);
    HRESULT (STDMETHODCALLTYPE* get_Scale)(__x_ABI_CWindows_CUI_CComposition_CICompositionSurfaceBrush2* This,
        struct __x_ABI_CWindows_CFoundation_CNumerics_CVector2* value);
    HRESULT (STDMETHODCALLTYPE* put_Scale)(__x_ABI_CWindows_CUI_CComposition_CICompositionSurfaceBrush2* This,
        struct __x_ABI_CWindows_CFoundation_CNumerics_CVector2 value);
    HRESULT (STDMETHODCALLTYPE* get_TransformMatrix)(__x_ABI_CWindows_CUI_CComposition_CICompositionSurfaceBrush2* This,
        struct __x_ABI_CWindows_CFoundation_CNumerics_CMatrix3x2* value);
    HRESULT (STDMETHODCALLTYPE* put_TransformMatrix)(__x_ABI_CWindows_CUI_CComposition_CICompositionSurfaceBrush2* This,
        struct __x_ABI_CWindows_CFoundation_CNumerics_CMatrix3x2 value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CComposition_CICompositionSurfaceBrush2Vtbl;

    interface __x_ABI_CWindows_CUI_CComposition_CICompositionSurfaceBrush2
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CComposition_CICompositionSurfaceBrush2Vtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CComposition_CICompositionSurfaceBrush2;
#endif /* !defined(____x_ABI_CWindows_CUI_CComposition_CICompositionSurfaceBrush2_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CComposition_CICompositionSurfaceBrush3_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CComposition_CICompositionSurfaceBrush3_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CComposition_CICompositionSurfaceBrush3Vtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CComposition_CICompositionSurfaceBrush3* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CComposition_CICompositionSurfaceBrush3* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CComposition_CICompositionSurfaceBrush3* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CComposition_CICompositionSurfaceBrush3* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CComposition_CICompositionSurfaceBrush3* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CComposition_CICompositionSurfaceBrush3* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_SnapToPixels)(__x_ABI_CWindows_CUI_CComposition_CICompositionSurfaceBrush3* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* put_SnapToPixels)(__x_ABI_CWindows_CUI_CComposition_CICompositionSurfaceBrush3* This,
        boolean value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CComposition_CICompositionSurfaceBrush3Vtbl;

    interface __x_ABI_CWindows_CUI_CComposition_CICompositionSurfaceBrush3
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CComposition_CICompositionSurfaceBrush3Vtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CComposition_CICompositionSurfaceBrush3;
#endif /* !defined(____x_ABI_CWindows_CUI_CComposition_CICompositionSurfaceBrush3_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CComposition_CICompositionTarget_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CComposition_CICompositionTarget_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CComposition_CICompositionTargetVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CComposition_CICompositionTarget* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CComposition_CICompositionTarget* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CComposition_CICompositionTarget* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CComposition_CICompositionTarget* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CComposition_CICompositionTarget* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CComposition_CICompositionTarget* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Root)(__x_ABI_CWindows_CUI_CComposition_CICompositionTarget* This,
        __x_ABI_CWindows_CUI_CComposition_CIVisual** value);
    HRESULT (STDMETHODCALLTYPE* put_Root)(__x_ABI_CWindows_CUI_CComposition_CICompositionTarget* This,
        __x_ABI_CWindows_CUI_CComposition_CIVisual* value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CComposition_CICompositionTargetVtbl;

    interface __x_ABI_CWindows_CUI_CComposition_CICompositionTarget
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CComposition_CICompositionTargetVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CComposition_CICompositionTarget;
#endif /* !defined(____x_ABI_CWindows_CUI_CComposition_CICompositionTarget_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CComposition_CICompositionTargetFactory_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CComposition_CICompositionTargetFactory_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CComposition_CICompositionTargetFactoryVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CComposition_CICompositionTargetFactory* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CComposition_CICompositionTargetFactory* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CComposition_CICompositionTargetFactory* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CComposition_CICompositionTargetFactory* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CComposition_CICompositionTargetFactory* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CComposition_CICompositionTargetFactory* This,
            TrustLevel* trustLevel);
    
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CComposition_CICompositionTargetFactoryVtbl;

    interface __x_ABI_CWindows_CUI_CComposition_CICompositionTargetFactory
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CComposition_CICompositionTargetFactoryVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CComposition_CICompositionTargetFactory;
#endif /* !defined(____x_ABI_CWindows_CUI_CComposition_CICompositionTargetFactory_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CComposition_CICompositionTransform_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CComposition_CICompositionTransform_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CComposition_CICompositionTransformVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CComposition_CICompositionTransform* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CComposition_CICompositionTransform* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CComposition_CICompositionTransform* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CComposition_CICompositionTransform* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CComposition_CICompositionTransform* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CComposition_CICompositionTransform* This,
            TrustLevel* trustLevel);
    
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CComposition_CICompositionTransformVtbl;

    interface __x_ABI_CWindows_CUI_CComposition_CICompositionTransform
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CComposition_CICompositionTransformVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CComposition_CICompositionTransform;
#endif /* !defined(____x_ABI_CWindows_CUI_CComposition_CICompositionTransform_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CComposition_CICompositionTransformFactory_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CComposition_CICompositionTransformFactory_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CComposition_CICompositionTransformFactoryVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CComposition_CICompositionTransformFactory* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CComposition_CICompositionTransformFactory* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CComposition_CICompositionTransformFactory* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CComposition_CICompositionTransformFactory* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CComposition_CICompositionTransformFactory* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CComposition_CICompositionTransformFactory* This,
            TrustLevel* trustLevel);
    
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CComposition_CICompositionTransformFactoryVtbl;

    interface __x_ABI_CWindows_CUI_CComposition_CICompositionTransformFactory
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CComposition_CICompositionTransformFactoryVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CComposition_CICompositionTransformFactory;
#endif /* !defined(____x_ABI_CWindows_CUI_CComposition_CICompositionTransformFactory_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CComposition_CICompositionViewBox_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CComposition_CICompositionViewBox_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CComposition_CICompositionViewBoxVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CComposition_CICompositionViewBox* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CComposition_CICompositionViewBox* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CComposition_CICompositionViewBox* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CComposition_CICompositionViewBox* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CComposition_CICompositionViewBox* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CComposition_CICompositionViewBox* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_HorizontalAlignmentRatio)(__x_ABI_CWindows_CUI_CComposition_CICompositionViewBox* This,
        FLOAT* value);
    HRESULT (STDMETHODCALLTYPE* put_HorizontalAlignmentRatio)(__x_ABI_CWindows_CUI_CComposition_CICompositionViewBox* This,
        FLOAT value);
    HRESULT (STDMETHODCALLTYPE* get_Offset)(__x_ABI_CWindows_CUI_CComposition_CICompositionViewBox* This,
        struct __x_ABI_CWindows_CFoundation_CNumerics_CVector2* value);
    HRESULT (STDMETHODCALLTYPE* put_Offset)(__x_ABI_CWindows_CUI_CComposition_CICompositionViewBox* This,
        struct __x_ABI_CWindows_CFoundation_CNumerics_CVector2 value);
    HRESULT (STDMETHODCALLTYPE* get_Size)(__x_ABI_CWindows_CUI_CComposition_CICompositionViewBox* This,
        struct __x_ABI_CWindows_CFoundation_CNumerics_CVector2* value);
    HRESULT (STDMETHODCALLTYPE* put_Size)(__x_ABI_CWindows_CUI_CComposition_CICompositionViewBox* This,
        struct __x_ABI_CWindows_CFoundation_CNumerics_CVector2 value);
    HRESULT (STDMETHODCALLTYPE* get_Stretch)(__x_ABI_CWindows_CUI_CComposition_CICompositionViewBox* This,
        enum __x_ABI_CWindows_CUI_CComposition_CCompositionStretch* value);
    HRESULT (STDMETHODCALLTYPE* put_Stretch)(__x_ABI_CWindows_CUI_CComposition_CICompositionViewBox* This,
        enum __x_ABI_CWindows_CUI_CComposition_CCompositionStretch value);
    HRESULT (STDMETHODCALLTYPE* get_VerticalAlignmentRatio)(__x_ABI_CWindows_CUI_CComposition_CICompositionViewBox* This,
        FLOAT* value);
    HRESULT (STDMETHODCALLTYPE* put_VerticalAlignmentRatio)(__x_ABI_CWindows_CUI_CComposition_CICompositionViewBox* This,
        FLOAT value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CComposition_CICompositionViewBoxVtbl;

    interface __x_ABI_CWindows_CUI_CComposition_CICompositionViewBox
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CComposition_CICompositionViewBoxVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CComposition_CICompositionViewBox;
#endif /* !defined(____x_ABI_CWindows_CUI_CComposition_CICompositionViewBox_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CComposition_CICompositionVirtualDrawingSurface_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CComposition_CICompositionVirtualDrawingSurface_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CComposition_CICompositionVirtualDrawingSurfaceVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CComposition_CICompositionVirtualDrawingSurface* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CComposition_CICompositionVirtualDrawingSurface* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CComposition_CICompositionVirtualDrawingSurface* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CComposition_CICompositionVirtualDrawingSurface* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CComposition_CICompositionVirtualDrawingSurface* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CComposition_CICompositionVirtualDrawingSurface* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* Trim)(__x_ABI_CWindows_CUI_CComposition_CICompositionVirtualDrawingSurface* This,
        UINT32 rectsLength,
        struct __x_ABI_CWindows_CGraphics_CRectInt32* rects);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CComposition_CICompositionVirtualDrawingSurfaceVtbl;

    interface __x_ABI_CWindows_CUI_CComposition_CICompositionVirtualDrawingSurface
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CComposition_CICompositionVirtualDrawingSurfaceVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CComposition_CICompositionVirtualDrawingSurface;
#endif /* !defined(____x_ABI_CWindows_CUI_CComposition_CICompositionVirtualDrawingSurface_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CComposition_CICompositionVirtualDrawingSurfaceFactory_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CComposition_CICompositionVirtualDrawingSurfaceFactory_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CComposition_CICompositionVirtualDrawingSurfaceFactoryVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CComposition_CICompositionVirtualDrawingSurfaceFactory* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CComposition_CICompositionVirtualDrawingSurfaceFactory* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CComposition_CICompositionVirtualDrawingSurfaceFactory* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CComposition_CICompositionVirtualDrawingSurfaceFactory* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CComposition_CICompositionVirtualDrawingSurfaceFactory* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CComposition_CICompositionVirtualDrawingSurfaceFactory* This,
            TrustLevel* trustLevel);
    
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CComposition_CICompositionVirtualDrawingSurfaceFactoryVtbl;

    interface __x_ABI_CWindows_CUI_CComposition_CICompositionVirtualDrawingSurfaceFactory
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CComposition_CICompositionVirtualDrawingSurfaceFactoryVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CComposition_CICompositionVirtualDrawingSurfaceFactory;
#endif /* !defined(____x_ABI_CWindows_CUI_CComposition_CICompositionVirtualDrawingSurfaceFactory_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CComposition_CICompositionVisualSurface_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CComposition_CICompositionVisualSurface_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CComposition_CICompositionVisualSurfaceVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CComposition_CICompositionVisualSurface* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CComposition_CICompositionVisualSurface* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CComposition_CICompositionVisualSurface* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CComposition_CICompositionVisualSurface* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CComposition_CICompositionVisualSurface* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CComposition_CICompositionVisualSurface* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_SourceVisual)(__x_ABI_CWindows_CUI_CComposition_CICompositionVisualSurface* This,
        __x_ABI_CWindows_CUI_CComposition_CIVisual** value);
    HRESULT (STDMETHODCALLTYPE* put_SourceVisual)(__x_ABI_CWindows_CUI_CComposition_CICompositionVisualSurface* This,
        __x_ABI_CWindows_CUI_CComposition_CIVisual* value);
    HRESULT (STDMETHODCALLTYPE* get_SourceOffset)(__x_ABI_CWindows_CUI_CComposition_CICompositionVisualSurface* This,
        struct __x_ABI_CWindows_CFoundation_CNumerics_CVector2* value);
    HRESULT (STDMETHODCALLTYPE* put_SourceOffset)(__x_ABI_CWindows_CUI_CComposition_CICompositionVisualSurface* This,
        struct __x_ABI_CWindows_CFoundation_CNumerics_CVector2 value);
    HRESULT (STDMETHODCALLTYPE* get_SourceSize)(__x_ABI_CWindows_CUI_CComposition_CICompositionVisualSurface* This,
        struct __x_ABI_CWindows_CFoundation_CNumerics_CVector2* value);
    HRESULT (STDMETHODCALLTYPE* put_SourceSize)(__x_ABI_CWindows_CUI_CComposition_CICompositionVisualSurface* This,
        struct __x_ABI_CWindows_CFoundation_CNumerics_CVector2 value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CComposition_CICompositionVisualSurfaceVtbl;

    interface __x_ABI_CWindows_CUI_CComposition_CICompositionVisualSurface
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CComposition_CICompositionVisualSurfaceVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CComposition_CICompositionVisualSurface;
#endif /* !defined(____x_ABI_CWindows_CUI_CComposition_CICompositionVisualSurface_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CComposition_CICompositor_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CComposition_CICompositor_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CComposition_CICompositorVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CComposition_CICompositor* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CComposition_CICompositor* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CComposition_CICompositor* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CComposition_CICompositor* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CComposition_CICompositor* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CComposition_CICompositor* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* CreateColorKeyFrameAnimation)(__x_ABI_CWindows_CUI_CComposition_CICompositor* This,
        __x_ABI_CWindows_CUI_CComposition_CIColorKeyFrameAnimation** result);
    HRESULT (STDMETHODCALLTYPE* CreateColorBrush)(__x_ABI_CWindows_CUI_CComposition_CICompositor* This,
        __x_ABI_CWindows_CUI_CComposition_CICompositionColorBrush** result);
    HRESULT (STDMETHODCALLTYPE* CreateColorBrushWithColor)(__x_ABI_CWindows_CUI_CComposition_CICompositor* This,
        struct __x_ABI_CWindows_CUI_CColor color,
        __x_ABI_CWindows_CUI_CComposition_CICompositionColorBrush** result);
    HRESULT (STDMETHODCALLTYPE* CreateContainerVisual)(__x_ABI_CWindows_CUI_CComposition_CICompositor* This,
        __x_ABI_CWindows_CUI_CComposition_CIContainerVisual** result);
    HRESULT (STDMETHODCALLTYPE* CreateCubicBezierEasingFunction)(__x_ABI_CWindows_CUI_CComposition_CICompositor* This,
        struct __x_ABI_CWindows_CFoundation_CNumerics_CVector2 controlPoint1,
        struct __x_ABI_CWindows_CFoundation_CNumerics_CVector2 controlPoint2,
        __x_ABI_CWindows_CUI_CComposition_CICubicBezierEasingFunction** result);
    HRESULT (STDMETHODCALLTYPE* CreateEffectFactory)(__x_ABI_CWindows_CUI_CComposition_CICompositor* This,
        __x_ABI_CWindows_CGraphics_CEffects_CIGraphicsEffect* graphicsEffect,
        __x_ABI_CWindows_CUI_CComposition_CICompositionEffectFactory** result);
    HRESULT (STDMETHODCALLTYPE* CreateEffectFactoryWithProperties)(__x_ABI_CWindows_CUI_CComposition_CICompositor* This,
        __x_ABI_CWindows_CGraphics_CEffects_CIGraphicsEffect* graphicsEffect,
        __x_ABI_C__FIIterable_1_HSTRING* animatableProperties,
        __x_ABI_CWindows_CUI_CComposition_CICompositionEffectFactory** result);
    HRESULT (STDMETHODCALLTYPE* CreateExpressionAnimation)(__x_ABI_CWindows_CUI_CComposition_CICompositor* This,
        __x_ABI_CWindows_CUI_CComposition_CIExpressionAnimation** result);
    HRESULT (STDMETHODCALLTYPE* CreateExpressionAnimationWithExpression)(__x_ABI_CWindows_CUI_CComposition_CICompositor* This,
        HSTRING expression,
        __x_ABI_CWindows_CUI_CComposition_CIExpressionAnimation** result);
    HRESULT (STDMETHODCALLTYPE* CreateInsetClip)(__x_ABI_CWindows_CUI_CComposition_CICompositor* This,
        __x_ABI_CWindows_CUI_CComposition_CIInsetClip** result);
    HRESULT (STDMETHODCALLTYPE* CreateInsetClipWithInsets)(__x_ABI_CWindows_CUI_CComposition_CICompositor* This,
        FLOAT leftInset,
        FLOAT topInset,
        FLOAT rightInset,
        FLOAT bottomInset,
        __x_ABI_CWindows_CUI_CComposition_CIInsetClip** result);
    HRESULT (STDMETHODCALLTYPE* CreateLinearEasingFunction)(__x_ABI_CWindows_CUI_CComposition_CICompositor* This,
        __x_ABI_CWindows_CUI_CComposition_CILinearEasingFunction** result);
    HRESULT (STDMETHODCALLTYPE* CreatePropertySet)(__x_ABI_CWindows_CUI_CComposition_CICompositor* This,
        __x_ABI_CWindows_CUI_CComposition_CICompositionPropertySet** result);
    HRESULT (STDMETHODCALLTYPE* CreateQuaternionKeyFrameAnimation)(__x_ABI_CWindows_CUI_CComposition_CICompositor* This,
        __x_ABI_CWindows_CUI_CComposition_CIQuaternionKeyFrameAnimation** result);
    HRESULT (STDMETHODCALLTYPE* CreateScalarKeyFrameAnimation)(__x_ABI_CWindows_CUI_CComposition_CICompositor* This,
        __x_ABI_CWindows_CUI_CComposition_CIScalarKeyFrameAnimation** result);
    HRESULT (STDMETHODCALLTYPE* CreateScopedBatch)(__x_ABI_CWindows_CUI_CComposition_CICompositor* This,
        enum __x_ABI_CWindows_CUI_CComposition_CCompositionBatchTypes batchType,
        __x_ABI_CWindows_CUI_CComposition_CICompositionScopedBatch** result);
    HRESULT (STDMETHODCALLTYPE* CreateSpriteVisual)(__x_ABI_CWindows_CUI_CComposition_CICompositor* This,
        __x_ABI_CWindows_CUI_CComposition_CISpriteVisual** result);
    HRESULT (STDMETHODCALLTYPE* CreateSurfaceBrush)(__x_ABI_CWindows_CUI_CComposition_CICompositor* This,
        __x_ABI_CWindows_CUI_CComposition_CICompositionSurfaceBrush** result);
    HRESULT (STDMETHODCALLTYPE* CreateSurfaceBrushWithSurface)(__x_ABI_CWindows_CUI_CComposition_CICompositor* This,
        __x_ABI_CWindows_CUI_CComposition_CICompositionSurface* surface,
        __x_ABI_CWindows_CUI_CComposition_CICompositionSurfaceBrush** result);
    HRESULT (STDMETHODCALLTYPE* CreateTargetForCurrentView)(__x_ABI_CWindows_CUI_CComposition_CICompositor* This,
        __x_ABI_CWindows_CUI_CComposition_CICompositionTarget** result);
    HRESULT (STDMETHODCALLTYPE* CreateVector2KeyFrameAnimation)(__x_ABI_CWindows_CUI_CComposition_CICompositor* This,
        __x_ABI_CWindows_CUI_CComposition_CIVector2KeyFrameAnimation** result);
    HRESULT (STDMETHODCALLTYPE* CreateVector3KeyFrameAnimation)(__x_ABI_CWindows_CUI_CComposition_CICompositor* This,
        __x_ABI_CWindows_CUI_CComposition_CIVector3KeyFrameAnimation** result);
    HRESULT (STDMETHODCALLTYPE* CreateVector4KeyFrameAnimation)(__x_ABI_CWindows_CUI_CComposition_CICompositor* This,
        __x_ABI_CWindows_CUI_CComposition_CIVector4KeyFrameAnimation** result);
    HRESULT (STDMETHODCALLTYPE* GetCommitBatch)(__x_ABI_CWindows_CUI_CComposition_CICompositor* This,
        enum __x_ABI_CWindows_CUI_CComposition_CCompositionBatchTypes batchType,
        __x_ABI_CWindows_CUI_CComposition_CICompositionCommitBatch** result);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CComposition_CICompositorVtbl;

    interface __x_ABI_CWindows_CUI_CComposition_CICompositor
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CComposition_CICompositorVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CComposition_CICompositor;
#endif /* !defined(____x_ABI_CWindows_CUI_CComposition_CICompositor_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CComposition_CICompositor2_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CComposition_CICompositor2_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CComposition_CICompositor2Vtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CComposition_CICompositor2* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CComposition_CICompositor2* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CComposition_CICompositor2* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CComposition_CICompositor2* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CComposition_CICompositor2* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CComposition_CICompositor2* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* CreateAmbientLight)(__x_ABI_CWindows_CUI_CComposition_CICompositor2* This,
        __x_ABI_CWindows_CUI_CComposition_CIAmbientLight** result);
    HRESULT (STDMETHODCALLTYPE* CreateAnimationGroup)(__x_ABI_CWindows_CUI_CComposition_CICompositor2* This,
        __x_ABI_CWindows_CUI_CComposition_CICompositionAnimationGroup** result);
    HRESULT (STDMETHODCALLTYPE* CreateBackdropBrush)(__x_ABI_CWindows_CUI_CComposition_CICompositor2* This,
        __x_ABI_CWindows_CUI_CComposition_CICompositionBackdropBrush** result);
    HRESULT (STDMETHODCALLTYPE* CreateDistantLight)(__x_ABI_CWindows_CUI_CComposition_CICompositor2* This,
        __x_ABI_CWindows_CUI_CComposition_CIDistantLight** result);
    HRESULT (STDMETHODCALLTYPE* CreateDropShadow)(__x_ABI_CWindows_CUI_CComposition_CICompositor2* This,
        __x_ABI_CWindows_CUI_CComposition_CIDropShadow** result);
    HRESULT (STDMETHODCALLTYPE* CreateImplicitAnimationCollection)(__x_ABI_CWindows_CUI_CComposition_CICompositor2* This,
        __x_ABI_CWindows_CUI_CComposition_CIImplicitAnimationCollection** result);
    HRESULT (STDMETHODCALLTYPE* CreateLayerVisual)(__x_ABI_CWindows_CUI_CComposition_CICompositor2* This,
        __x_ABI_CWindows_CUI_CComposition_CILayerVisual** result);
    HRESULT (STDMETHODCALLTYPE* CreateMaskBrush)(__x_ABI_CWindows_CUI_CComposition_CICompositor2* This,
        __x_ABI_CWindows_CUI_CComposition_CICompositionMaskBrush** result);
    HRESULT (STDMETHODCALLTYPE* CreateNineGridBrush)(__x_ABI_CWindows_CUI_CComposition_CICompositor2* This,
        __x_ABI_CWindows_CUI_CComposition_CICompositionNineGridBrush** result);
    HRESULT (STDMETHODCALLTYPE* CreatePointLight)(__x_ABI_CWindows_CUI_CComposition_CICompositor2* This,
        __x_ABI_CWindows_CUI_CComposition_CIPointLight** result);
    HRESULT (STDMETHODCALLTYPE* CreateSpotLight)(__x_ABI_CWindows_CUI_CComposition_CICompositor2* This,
        __x_ABI_CWindows_CUI_CComposition_CISpotLight** result);
    HRESULT (STDMETHODCALLTYPE* CreateStepEasingFunction)(__x_ABI_CWindows_CUI_CComposition_CICompositor2* This,
        __x_ABI_CWindows_CUI_CComposition_CIStepEasingFunction** result);
    HRESULT (STDMETHODCALLTYPE* CreateStepEasingFunctionWithStepCount)(__x_ABI_CWindows_CUI_CComposition_CICompositor2* This,
        INT32 stepCount,
        __x_ABI_CWindows_CUI_CComposition_CIStepEasingFunction** result);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CComposition_CICompositor2Vtbl;

    interface __x_ABI_CWindows_CUI_CComposition_CICompositor2
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CComposition_CICompositor2Vtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CComposition_CICompositor2;
#endif /* !defined(____x_ABI_CWindows_CUI_CComposition_CICompositor2_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CComposition_CICompositor3_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CComposition_CICompositor3_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CComposition_CICompositor3Vtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CComposition_CICompositor3* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CComposition_CICompositor3* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CComposition_CICompositor3* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CComposition_CICompositor3* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CComposition_CICompositor3* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CComposition_CICompositor3* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* CreateHostBackdropBrush)(__x_ABI_CWindows_CUI_CComposition_CICompositor3* This,
        __x_ABI_CWindows_CUI_CComposition_CICompositionBackdropBrush** result);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CComposition_CICompositor3Vtbl;

    interface __x_ABI_CWindows_CUI_CComposition_CICompositor3
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CComposition_CICompositor3Vtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CComposition_CICompositor3;
#endif /* !defined(____x_ABI_CWindows_CUI_CComposition_CICompositor3_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CComposition_CICompositor4_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CComposition_CICompositor4_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CComposition_CICompositor4Vtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CComposition_CICompositor4* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CComposition_CICompositor4* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CComposition_CICompositor4* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CComposition_CICompositor4* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CComposition_CICompositor4* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CComposition_CICompositor4* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* CreateColorGradientStop)(__x_ABI_CWindows_CUI_CComposition_CICompositor4* This,
        __x_ABI_CWindows_CUI_CComposition_CICompositionColorGradientStop** result);
    HRESULT (STDMETHODCALLTYPE* CreateColorGradientStopWithOffsetAndColor)(__x_ABI_CWindows_CUI_CComposition_CICompositor4* This,
        FLOAT offset,
        struct __x_ABI_CWindows_CUI_CColor color,
        __x_ABI_CWindows_CUI_CComposition_CICompositionColorGradientStop** result);
    HRESULT (STDMETHODCALLTYPE* CreateLinearGradientBrush)(__x_ABI_CWindows_CUI_CComposition_CICompositor4* This,
        __x_ABI_CWindows_CUI_CComposition_CICompositionLinearGradientBrush** result);
    HRESULT (STDMETHODCALLTYPE* CreateSpringScalarAnimation)(__x_ABI_CWindows_CUI_CComposition_CICompositor4* This,
        __x_ABI_CWindows_CUI_CComposition_CISpringScalarNaturalMotionAnimation** result);
    HRESULT (STDMETHODCALLTYPE* CreateSpringVector2Animation)(__x_ABI_CWindows_CUI_CComposition_CICompositor4* This,
        __x_ABI_CWindows_CUI_CComposition_CISpringVector2NaturalMotionAnimation** result);
    HRESULT (STDMETHODCALLTYPE* CreateSpringVector3Animation)(__x_ABI_CWindows_CUI_CComposition_CICompositor4* This,
        __x_ABI_CWindows_CUI_CComposition_CISpringVector3NaturalMotionAnimation** result);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CComposition_CICompositor4Vtbl;

    interface __x_ABI_CWindows_CUI_CComposition_CICompositor4
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CComposition_CICompositor4Vtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CComposition_CICompositor4;
#endif /* !defined(____x_ABI_CWindows_CUI_CComposition_CICompositor4_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CComposition_CICompositor5_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CComposition_CICompositor5_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CComposition_CICompositor5Vtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CComposition_CICompositor5* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CComposition_CICompositor5* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CComposition_CICompositor5* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CComposition_CICompositor5* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CComposition_CICompositor5* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CComposition_CICompositor5* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Comment)(__x_ABI_CWindows_CUI_CComposition_CICompositor5* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* put_Comment)(__x_ABI_CWindows_CUI_CComposition_CICompositor5* This,
        HSTRING value);
    HRESULT (STDMETHODCALLTYPE* get_GlobalPlaybackRate)(__x_ABI_CWindows_CUI_CComposition_CICompositor5* This,
        FLOAT* value);
    HRESULT (STDMETHODCALLTYPE* put_GlobalPlaybackRate)(__x_ABI_CWindows_CUI_CComposition_CICompositor5* This,
        FLOAT value);
    HRESULT (STDMETHODCALLTYPE* CreateBounceScalarAnimation)(__x_ABI_CWindows_CUI_CComposition_CICompositor5* This,
        __x_ABI_CWindows_CUI_CComposition_CIBounceScalarNaturalMotionAnimation** result);
    HRESULT (STDMETHODCALLTYPE* CreateBounceVector2Animation)(__x_ABI_CWindows_CUI_CComposition_CICompositor5* This,
        __x_ABI_CWindows_CUI_CComposition_CIBounceVector2NaturalMotionAnimation** result);
    HRESULT (STDMETHODCALLTYPE* CreateBounceVector3Animation)(__x_ABI_CWindows_CUI_CComposition_CICompositor5* This,
        __x_ABI_CWindows_CUI_CComposition_CIBounceVector3NaturalMotionAnimation** result);
    HRESULT (STDMETHODCALLTYPE* CreateContainerShape)(__x_ABI_CWindows_CUI_CComposition_CICompositor5* This,
        __x_ABI_CWindows_CUI_CComposition_CICompositionContainerShape** result);
    HRESULT (STDMETHODCALLTYPE* CreateEllipseGeometry)(__x_ABI_CWindows_CUI_CComposition_CICompositor5* This,
        __x_ABI_CWindows_CUI_CComposition_CICompositionEllipseGeometry** result);
    HRESULT (STDMETHODCALLTYPE* CreateLineGeometry)(__x_ABI_CWindows_CUI_CComposition_CICompositor5* This,
        __x_ABI_CWindows_CUI_CComposition_CICompositionLineGeometry** result);
    HRESULT (STDMETHODCALLTYPE* CreatePathGeometry)(__x_ABI_CWindows_CUI_CComposition_CICompositor5* This,
        __x_ABI_CWindows_CUI_CComposition_CICompositionPathGeometry** result);
    HRESULT (STDMETHODCALLTYPE* CreatePathGeometryWithPath)(__x_ABI_CWindows_CUI_CComposition_CICompositor5* This,
        __x_ABI_CWindows_CUI_CComposition_CICompositionPath* path,
        __x_ABI_CWindows_CUI_CComposition_CICompositionPathGeometry** result);
    HRESULT (STDMETHODCALLTYPE* CreatePathKeyFrameAnimation)(__x_ABI_CWindows_CUI_CComposition_CICompositor5* This,
        __x_ABI_CWindows_CUI_CComposition_CIPathKeyFrameAnimation** result);
    HRESULT (STDMETHODCALLTYPE* CreateRectangleGeometry)(__x_ABI_CWindows_CUI_CComposition_CICompositor5* This,
        __x_ABI_CWindows_CUI_CComposition_CICompositionRectangleGeometry** result);
    HRESULT (STDMETHODCALLTYPE* CreateRoundedRectangleGeometry)(__x_ABI_CWindows_CUI_CComposition_CICompositor5* This,
        __x_ABI_CWindows_CUI_CComposition_CICompositionRoundedRectangleGeometry** result);
    HRESULT (STDMETHODCALLTYPE* CreateShapeVisual)(__x_ABI_CWindows_CUI_CComposition_CICompositor5* This,
        __x_ABI_CWindows_CUI_CComposition_CIShapeVisual** result);
    HRESULT (STDMETHODCALLTYPE* CreateSpriteShape)(__x_ABI_CWindows_CUI_CComposition_CICompositor5* This,
        __x_ABI_CWindows_CUI_CComposition_CICompositionSpriteShape** result);
    HRESULT (STDMETHODCALLTYPE* CreateSpriteShapeWithGeometry)(__x_ABI_CWindows_CUI_CComposition_CICompositor5* This,
        __x_ABI_CWindows_CUI_CComposition_CICompositionGeometry* geometry,
        __x_ABI_CWindows_CUI_CComposition_CICompositionSpriteShape** result);
    HRESULT (STDMETHODCALLTYPE* CreateViewBox)(__x_ABI_CWindows_CUI_CComposition_CICompositor5* This,
        __x_ABI_CWindows_CUI_CComposition_CICompositionViewBox** result);
    HRESULT (STDMETHODCALLTYPE* RequestCommitAsync)(__x_ABI_CWindows_CUI_CComposition_CICompositor5* This,
        __x_ABI_CWindows_CFoundation_CIAsyncAction** action);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CComposition_CICompositor5Vtbl;

    interface __x_ABI_CWindows_CUI_CComposition_CICompositor5
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CComposition_CICompositor5Vtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CComposition_CICompositor5;
#endif /* !defined(____x_ABI_CWindows_CUI_CComposition_CICompositor5_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CComposition_CICompositor6_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CComposition_CICompositor6_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CComposition_CICompositor6Vtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CComposition_CICompositor6* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CComposition_CICompositor6* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CComposition_CICompositor6* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CComposition_CICompositor6* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CComposition_CICompositor6* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CComposition_CICompositor6* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* CreateGeometricClip)(__x_ABI_CWindows_CUI_CComposition_CICompositor6* This,
        __x_ABI_CWindows_CUI_CComposition_CICompositionGeometricClip** result);
    HRESULT (STDMETHODCALLTYPE* CreateGeometricClipWithGeometry)(__x_ABI_CWindows_CUI_CComposition_CICompositor6* This,
        __x_ABI_CWindows_CUI_CComposition_CICompositionGeometry* geometry,
        __x_ABI_CWindows_CUI_CComposition_CICompositionGeometricClip** result);
    HRESULT (STDMETHODCALLTYPE* CreateRedirectVisual)(__x_ABI_CWindows_CUI_CComposition_CICompositor6* This,
        __x_ABI_CWindows_CUI_CComposition_CIRedirectVisual** result);
    HRESULT (STDMETHODCALLTYPE* CreateRedirectVisualWithSourceVisual)(__x_ABI_CWindows_CUI_CComposition_CICompositor6* This,
        __x_ABI_CWindows_CUI_CComposition_CIVisual* source,
        __x_ABI_CWindows_CUI_CComposition_CIRedirectVisual** result);
    HRESULT (STDMETHODCALLTYPE* CreateBooleanKeyFrameAnimation)(__x_ABI_CWindows_CUI_CComposition_CICompositor6* This,
        __x_ABI_CWindows_CUI_CComposition_CIBooleanKeyFrameAnimation** result);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CComposition_CICompositor6Vtbl;

    interface __x_ABI_CWindows_CUI_CComposition_CICompositor6
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CComposition_CICompositor6Vtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CComposition_CICompositor6;
#endif /* !defined(____x_ABI_CWindows_CUI_CComposition_CICompositor6_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CComposition_CICompositorStatics_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CComposition_CICompositorStatics_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CComposition_CICompositorStaticsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CComposition_CICompositorStatics* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CComposition_CICompositorStatics* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CComposition_CICompositorStatics* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CComposition_CICompositorStatics* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CComposition_CICompositorStatics* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CComposition_CICompositorStatics* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_MaxGlobalPlaybackRate)(__x_ABI_CWindows_CUI_CComposition_CICompositorStatics* This,
        FLOAT* value);
    HRESULT (STDMETHODCALLTYPE* get_MinGlobalPlaybackRate)(__x_ABI_CWindows_CUI_CComposition_CICompositorStatics* This,
        FLOAT* value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CComposition_CICompositorStaticsVtbl;

    interface __x_ABI_CWindows_CUI_CComposition_CICompositorStatics
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CComposition_CICompositorStaticsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CComposition_CICompositorStatics;
#endif /* !defined(____x_ABI_CWindows_CUI_CComposition_CICompositorStatics_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CComposition_CICompositorWithProjectedShadow_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CComposition_CICompositorWithProjectedShadow_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CComposition_CICompositorWithProjectedShadowVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CComposition_CICompositorWithProjectedShadow* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CComposition_CICompositorWithProjectedShadow* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CComposition_CICompositorWithProjectedShadow* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CComposition_CICompositorWithProjectedShadow* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CComposition_CICompositorWithProjectedShadow* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CComposition_CICompositorWithProjectedShadow* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* CreateProjectedShadowCaster)(__x_ABI_CWindows_CUI_CComposition_CICompositorWithProjectedShadow* This,
        __x_ABI_CWindows_CUI_CComposition_CICompositionProjectedShadowCaster** result);
    HRESULT (STDMETHODCALLTYPE* CreateProjectedShadow)(__x_ABI_CWindows_CUI_CComposition_CICompositorWithProjectedShadow* This,
        __x_ABI_CWindows_CUI_CComposition_CICompositionProjectedShadow** result);
    HRESULT (STDMETHODCALLTYPE* CreateProjectedShadowReceiver)(__x_ABI_CWindows_CUI_CComposition_CICompositorWithProjectedShadow* This,
        __x_ABI_CWindows_CUI_CComposition_CICompositionProjectedShadowReceiver** result);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CComposition_CICompositorWithProjectedShadowVtbl;

    interface __x_ABI_CWindows_CUI_CComposition_CICompositorWithProjectedShadow
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CComposition_CICompositorWithProjectedShadowVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CComposition_CICompositorWithProjectedShadow;
#endif /* !defined(____x_ABI_CWindows_CUI_CComposition_CICompositorWithProjectedShadow_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CComposition_CICompositorWithRadialGradient_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CComposition_CICompositorWithRadialGradient_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CComposition_CICompositorWithRadialGradientVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CComposition_CICompositorWithRadialGradient* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CComposition_CICompositorWithRadialGradient* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CComposition_CICompositorWithRadialGradient* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CComposition_CICompositorWithRadialGradient* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CComposition_CICompositorWithRadialGradient* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CComposition_CICompositorWithRadialGradient* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* CreateRadialGradientBrush)(__x_ABI_CWindows_CUI_CComposition_CICompositorWithRadialGradient* This,
        __x_ABI_CWindows_CUI_CComposition_CICompositionRadialGradientBrush** result);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CComposition_CICompositorWithRadialGradientVtbl;

    interface __x_ABI_CWindows_CUI_CComposition_CICompositorWithRadialGradient
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CComposition_CICompositorWithRadialGradientVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CComposition_CICompositorWithRadialGradient;
#endif /* !defined(____x_ABI_CWindows_CUI_CComposition_CICompositorWithRadialGradient_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CComposition_CICompositorWithVisualSurface_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CComposition_CICompositorWithVisualSurface_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CComposition_CICompositorWithVisualSurfaceVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CComposition_CICompositorWithVisualSurface* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CComposition_CICompositorWithVisualSurface* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CComposition_CICompositorWithVisualSurface* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CComposition_CICompositorWithVisualSurface* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CComposition_CICompositorWithVisualSurface* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CComposition_CICompositorWithVisualSurface* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* CreateVisualSurface)(__x_ABI_CWindows_CUI_CComposition_CICompositorWithVisualSurface* This,
        __x_ABI_CWindows_CUI_CComposition_CICompositionVisualSurface** result);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CComposition_CICompositorWithVisualSurfaceVtbl;

    interface __x_ABI_CWindows_CUI_CComposition_CICompositorWithVisualSurface
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CComposition_CICompositorWithVisualSurfaceVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CComposition_CICompositorWithVisualSurface;
#endif /* !defined(____x_ABI_CWindows_CUI_CComposition_CICompositorWithVisualSurface_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CComposition_CIContainerVisual_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CComposition_CIContainerVisual_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CComposition_CIContainerVisualVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CComposition_CIContainerVisual* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CComposition_CIContainerVisual* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CComposition_CIContainerVisual* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CComposition_CIContainerVisual* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CComposition_CIContainerVisual* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CComposition_CIContainerVisual* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Children)(__x_ABI_CWindows_CUI_CComposition_CIContainerVisual* This,
        __x_ABI_CWindows_CUI_CComposition_CIVisualCollection** value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CComposition_CIContainerVisualVtbl;

    interface __x_ABI_CWindows_CUI_CComposition_CIContainerVisual
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CComposition_CIContainerVisualVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CComposition_CIContainerVisual;
#endif /* !defined(____x_ABI_CWindows_CUI_CComposition_CIContainerVisual_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CComposition_CIContainerVisualFactory_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CComposition_CIContainerVisualFactory_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CComposition_CIContainerVisualFactoryVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CComposition_CIContainerVisualFactory* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CComposition_CIContainerVisualFactory* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CComposition_CIContainerVisualFactory* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CComposition_CIContainerVisualFactory* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CComposition_CIContainerVisualFactory* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CComposition_CIContainerVisualFactory* This,
            TrustLevel* trustLevel);
    
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CComposition_CIContainerVisualFactoryVtbl;

    interface __x_ABI_CWindows_CUI_CComposition_CIContainerVisualFactory
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CComposition_CIContainerVisualFactoryVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CComposition_CIContainerVisualFactory;
#endif /* !defined(____x_ABI_CWindows_CUI_CComposition_CIContainerVisualFactory_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CComposition_CICubicBezierEasingFunction_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CComposition_CICubicBezierEasingFunction_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CComposition_CICubicBezierEasingFunctionVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CComposition_CICubicBezierEasingFunction* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CComposition_CICubicBezierEasingFunction* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CComposition_CICubicBezierEasingFunction* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CComposition_CICubicBezierEasingFunction* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CComposition_CICubicBezierEasingFunction* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CComposition_CICubicBezierEasingFunction* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_ControlPoint1)(__x_ABI_CWindows_CUI_CComposition_CICubicBezierEasingFunction* This,
        struct __x_ABI_CWindows_CFoundation_CNumerics_CVector2* value);
    HRESULT (STDMETHODCALLTYPE* get_ControlPoint2)(__x_ABI_CWindows_CUI_CComposition_CICubicBezierEasingFunction* This,
        struct __x_ABI_CWindows_CFoundation_CNumerics_CVector2* value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CComposition_CICubicBezierEasingFunctionVtbl;

    interface __x_ABI_CWindows_CUI_CComposition_CICubicBezierEasingFunction
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CComposition_CICubicBezierEasingFunctionVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CComposition_CICubicBezierEasingFunction;
#endif /* !defined(____x_ABI_CWindows_CUI_CComposition_CICubicBezierEasingFunction_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CComposition_CIDistantLight_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CComposition_CIDistantLight_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CComposition_CIDistantLightVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CComposition_CIDistantLight* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CComposition_CIDistantLight* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CComposition_CIDistantLight* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CComposition_CIDistantLight* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CComposition_CIDistantLight* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CComposition_CIDistantLight* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Color)(__x_ABI_CWindows_CUI_CComposition_CIDistantLight* This,
        struct __x_ABI_CWindows_CUI_CColor* value);
    HRESULT (STDMETHODCALLTYPE* put_Color)(__x_ABI_CWindows_CUI_CComposition_CIDistantLight* This,
        struct __x_ABI_CWindows_CUI_CColor value);
    HRESULT (STDMETHODCALLTYPE* get_CoordinateSpace)(__x_ABI_CWindows_CUI_CComposition_CIDistantLight* This,
        __x_ABI_CWindows_CUI_CComposition_CIVisual** value);
    HRESULT (STDMETHODCALLTYPE* put_CoordinateSpace)(__x_ABI_CWindows_CUI_CComposition_CIDistantLight* This,
        __x_ABI_CWindows_CUI_CComposition_CIVisual* value);
    HRESULT (STDMETHODCALLTYPE* get_Direction)(__x_ABI_CWindows_CUI_CComposition_CIDistantLight* This,
        struct __x_ABI_CWindows_CFoundation_CNumerics_CVector3* value);
    HRESULT (STDMETHODCALLTYPE* put_Direction)(__x_ABI_CWindows_CUI_CComposition_CIDistantLight* This,
        struct __x_ABI_CWindows_CFoundation_CNumerics_CVector3 value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CComposition_CIDistantLightVtbl;

    interface __x_ABI_CWindows_CUI_CComposition_CIDistantLight
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CComposition_CIDistantLightVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CComposition_CIDistantLight;
#endif /* !defined(____x_ABI_CWindows_CUI_CComposition_CIDistantLight_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CComposition_CIDistantLight2_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CComposition_CIDistantLight2_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CComposition_CIDistantLight2Vtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CComposition_CIDistantLight2* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CComposition_CIDistantLight2* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CComposition_CIDistantLight2* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CComposition_CIDistantLight2* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CComposition_CIDistantLight2* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CComposition_CIDistantLight2* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Intensity)(__x_ABI_CWindows_CUI_CComposition_CIDistantLight2* This,
        FLOAT* value);
    HRESULT (STDMETHODCALLTYPE* put_Intensity)(__x_ABI_CWindows_CUI_CComposition_CIDistantLight2* This,
        FLOAT value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CComposition_CIDistantLight2Vtbl;

    interface __x_ABI_CWindows_CUI_CComposition_CIDistantLight2
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CComposition_CIDistantLight2Vtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CComposition_CIDistantLight2;
#endif /* !defined(____x_ABI_CWindows_CUI_CComposition_CIDistantLight2_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CComposition_CIDropShadow_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CComposition_CIDropShadow_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CComposition_CIDropShadowVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CComposition_CIDropShadow* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CComposition_CIDropShadow* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CComposition_CIDropShadow* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CComposition_CIDropShadow* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CComposition_CIDropShadow* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CComposition_CIDropShadow* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_BlurRadius)(__x_ABI_CWindows_CUI_CComposition_CIDropShadow* This,
        FLOAT* value);
    HRESULT (STDMETHODCALLTYPE* put_BlurRadius)(__x_ABI_CWindows_CUI_CComposition_CIDropShadow* This,
        FLOAT value);
    HRESULT (STDMETHODCALLTYPE* get_Color)(__x_ABI_CWindows_CUI_CComposition_CIDropShadow* This,
        struct __x_ABI_CWindows_CUI_CColor* value);
    HRESULT (STDMETHODCALLTYPE* put_Color)(__x_ABI_CWindows_CUI_CComposition_CIDropShadow* This,
        struct __x_ABI_CWindows_CUI_CColor value);
    HRESULT (STDMETHODCALLTYPE* get_Mask)(__x_ABI_CWindows_CUI_CComposition_CIDropShadow* This,
        __x_ABI_CWindows_CUI_CComposition_CICompositionBrush** value);
    HRESULT (STDMETHODCALLTYPE* put_Mask)(__x_ABI_CWindows_CUI_CComposition_CIDropShadow* This,
        __x_ABI_CWindows_CUI_CComposition_CICompositionBrush* value);
    HRESULT (STDMETHODCALLTYPE* get_Offset)(__x_ABI_CWindows_CUI_CComposition_CIDropShadow* This,
        struct __x_ABI_CWindows_CFoundation_CNumerics_CVector3* value);
    HRESULT (STDMETHODCALLTYPE* put_Offset)(__x_ABI_CWindows_CUI_CComposition_CIDropShadow* This,
        struct __x_ABI_CWindows_CFoundation_CNumerics_CVector3 value);
    HRESULT (STDMETHODCALLTYPE* get_Opacity)(__x_ABI_CWindows_CUI_CComposition_CIDropShadow* This,
        FLOAT* value);
    HRESULT (STDMETHODCALLTYPE* put_Opacity)(__x_ABI_CWindows_CUI_CComposition_CIDropShadow* This,
        FLOAT value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CComposition_CIDropShadowVtbl;

    interface __x_ABI_CWindows_CUI_CComposition_CIDropShadow
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CComposition_CIDropShadowVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CComposition_CIDropShadow;
#endif /* !defined(____x_ABI_CWindows_CUI_CComposition_CIDropShadow_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CComposition_CIDropShadow2_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CComposition_CIDropShadow2_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CComposition_CIDropShadow2Vtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CComposition_CIDropShadow2* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CComposition_CIDropShadow2* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CComposition_CIDropShadow2* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CComposition_CIDropShadow2* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CComposition_CIDropShadow2* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CComposition_CIDropShadow2* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_SourcePolicy)(__x_ABI_CWindows_CUI_CComposition_CIDropShadow2* This,
        enum __x_ABI_CWindows_CUI_CComposition_CCompositionDropShadowSourcePolicy* value);
    HRESULT (STDMETHODCALLTYPE* put_SourcePolicy)(__x_ABI_CWindows_CUI_CComposition_CIDropShadow2* This,
        enum __x_ABI_CWindows_CUI_CComposition_CCompositionDropShadowSourcePolicy value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CComposition_CIDropShadow2Vtbl;

    interface __x_ABI_CWindows_CUI_CComposition_CIDropShadow2
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CComposition_CIDropShadow2Vtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CComposition_CIDropShadow2;
#endif /* !defined(____x_ABI_CWindows_CUI_CComposition_CIDropShadow2_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CComposition_CIExpressionAnimation_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CComposition_CIExpressionAnimation_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CComposition_CIExpressionAnimationVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CComposition_CIExpressionAnimation* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CComposition_CIExpressionAnimation* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CComposition_CIExpressionAnimation* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CComposition_CIExpressionAnimation* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CComposition_CIExpressionAnimation* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CComposition_CIExpressionAnimation* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Expression)(__x_ABI_CWindows_CUI_CComposition_CIExpressionAnimation* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* put_Expression)(__x_ABI_CWindows_CUI_CComposition_CIExpressionAnimation* This,
        HSTRING value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CComposition_CIExpressionAnimationVtbl;

    interface __x_ABI_CWindows_CUI_CComposition_CIExpressionAnimation
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CComposition_CIExpressionAnimationVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CComposition_CIExpressionAnimation;
#endif /* !defined(____x_ABI_CWindows_CUI_CComposition_CIExpressionAnimation_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CComposition_CIImplicitAnimationCollection_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CComposition_CIImplicitAnimationCollection_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CComposition_CIImplicitAnimationCollectionVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CComposition_CIImplicitAnimationCollection* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CComposition_CIImplicitAnimationCollection* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CComposition_CIImplicitAnimationCollection* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CComposition_CIImplicitAnimationCollection* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CComposition_CIImplicitAnimationCollection* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CComposition_CIImplicitAnimationCollection* This,
            TrustLevel* trustLevel);
    
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CComposition_CIImplicitAnimationCollectionVtbl;

    interface __x_ABI_CWindows_CUI_CComposition_CIImplicitAnimationCollection
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CComposition_CIImplicitAnimationCollectionVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CComposition_CIImplicitAnimationCollection;
#endif /* !defined(____x_ABI_CWindows_CUI_CComposition_CIImplicitAnimationCollection_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CComposition_CIInsetClip_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CComposition_CIInsetClip_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CComposition_CIInsetClipVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CComposition_CIInsetClip* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CComposition_CIInsetClip* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CComposition_CIInsetClip* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CComposition_CIInsetClip* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CComposition_CIInsetClip* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CComposition_CIInsetClip* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_BottomInset)(__x_ABI_CWindows_CUI_CComposition_CIInsetClip* This,
        FLOAT* value);
    HRESULT (STDMETHODCALLTYPE* put_BottomInset)(__x_ABI_CWindows_CUI_CComposition_CIInsetClip* This,
        FLOAT value);
    HRESULT (STDMETHODCALLTYPE* get_LeftInset)(__x_ABI_CWindows_CUI_CComposition_CIInsetClip* This,
        FLOAT* value);
    HRESULT (STDMETHODCALLTYPE* put_LeftInset)(__x_ABI_CWindows_CUI_CComposition_CIInsetClip* This,
        FLOAT value);
    HRESULT (STDMETHODCALLTYPE* get_RightInset)(__x_ABI_CWindows_CUI_CComposition_CIInsetClip* This,
        FLOAT* value);
    HRESULT (STDMETHODCALLTYPE* put_RightInset)(__x_ABI_CWindows_CUI_CComposition_CIInsetClip* This,
        FLOAT value);
    HRESULT (STDMETHODCALLTYPE* get_TopInset)(__x_ABI_CWindows_CUI_CComposition_CIInsetClip* This,
        FLOAT* value);
    HRESULT (STDMETHODCALLTYPE* put_TopInset)(__x_ABI_CWindows_CUI_CComposition_CIInsetClip* This,
        FLOAT value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CComposition_CIInsetClipVtbl;

    interface __x_ABI_CWindows_CUI_CComposition_CIInsetClip
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CComposition_CIInsetClipVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CComposition_CIInsetClip;
#endif /* !defined(____x_ABI_CWindows_CUI_CComposition_CIInsetClip_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CComposition_CIKeyFrameAnimation_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CComposition_CIKeyFrameAnimation_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CComposition_CIKeyFrameAnimationVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CComposition_CIKeyFrameAnimation* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CComposition_CIKeyFrameAnimation* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CComposition_CIKeyFrameAnimation* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CComposition_CIKeyFrameAnimation* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CComposition_CIKeyFrameAnimation* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CComposition_CIKeyFrameAnimation* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_DelayTime)(__x_ABI_CWindows_CUI_CComposition_CIKeyFrameAnimation* This,
        struct __x_ABI_CWindows_CFoundation_CTimeSpan* value);
    HRESULT (STDMETHODCALLTYPE* put_DelayTime)(__x_ABI_CWindows_CUI_CComposition_CIKeyFrameAnimation* This,
        struct __x_ABI_CWindows_CFoundation_CTimeSpan value);
    HRESULT (STDMETHODCALLTYPE* get_Duration)(__x_ABI_CWindows_CUI_CComposition_CIKeyFrameAnimation* This,
        struct __x_ABI_CWindows_CFoundation_CTimeSpan* value);
    HRESULT (STDMETHODCALLTYPE* put_Duration)(__x_ABI_CWindows_CUI_CComposition_CIKeyFrameAnimation* This,
        struct __x_ABI_CWindows_CFoundation_CTimeSpan value);
    HRESULT (STDMETHODCALLTYPE* get_IterationBehavior)(__x_ABI_CWindows_CUI_CComposition_CIKeyFrameAnimation* This,
        enum __x_ABI_CWindows_CUI_CComposition_CAnimationIterationBehavior* value);
    HRESULT (STDMETHODCALLTYPE* put_IterationBehavior)(__x_ABI_CWindows_CUI_CComposition_CIKeyFrameAnimation* This,
        enum __x_ABI_CWindows_CUI_CComposition_CAnimationIterationBehavior value);
    HRESULT (STDMETHODCALLTYPE* get_IterationCount)(__x_ABI_CWindows_CUI_CComposition_CIKeyFrameAnimation* This,
        INT32* value);
    HRESULT (STDMETHODCALLTYPE* put_IterationCount)(__x_ABI_CWindows_CUI_CComposition_CIKeyFrameAnimation* This,
        INT32 value);
    HRESULT (STDMETHODCALLTYPE* get_KeyFrameCount)(__x_ABI_CWindows_CUI_CComposition_CIKeyFrameAnimation* This,
        INT32* value);
    HRESULT (STDMETHODCALLTYPE* get_StopBehavior)(__x_ABI_CWindows_CUI_CComposition_CIKeyFrameAnimation* This,
        enum __x_ABI_CWindows_CUI_CComposition_CAnimationStopBehavior* value);
    HRESULT (STDMETHODCALLTYPE* put_StopBehavior)(__x_ABI_CWindows_CUI_CComposition_CIKeyFrameAnimation* This,
        enum __x_ABI_CWindows_CUI_CComposition_CAnimationStopBehavior value);
    HRESULT (STDMETHODCALLTYPE* InsertExpressionKeyFrame)(__x_ABI_CWindows_CUI_CComposition_CIKeyFrameAnimation* This,
        FLOAT normalizedProgressKey,
        HSTRING value);
    HRESULT (STDMETHODCALLTYPE* InsertExpressionKeyFrameWithEasingFunction)(__x_ABI_CWindows_CUI_CComposition_CIKeyFrameAnimation* This,
        FLOAT normalizedProgressKey,
        HSTRING value,
        __x_ABI_CWindows_CUI_CComposition_CICompositionEasingFunction* easingFunction);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CComposition_CIKeyFrameAnimationVtbl;

    interface __x_ABI_CWindows_CUI_CComposition_CIKeyFrameAnimation
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CComposition_CIKeyFrameAnimationVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CComposition_CIKeyFrameAnimation;
#endif /* !defined(____x_ABI_CWindows_CUI_CComposition_CIKeyFrameAnimation_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CComposition_CIKeyFrameAnimation2_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CComposition_CIKeyFrameAnimation2_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CComposition_CIKeyFrameAnimation2Vtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CComposition_CIKeyFrameAnimation2* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CComposition_CIKeyFrameAnimation2* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CComposition_CIKeyFrameAnimation2* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CComposition_CIKeyFrameAnimation2* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CComposition_CIKeyFrameAnimation2* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CComposition_CIKeyFrameAnimation2* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Direction)(__x_ABI_CWindows_CUI_CComposition_CIKeyFrameAnimation2* This,
        enum __x_ABI_CWindows_CUI_CComposition_CAnimationDirection* value);
    HRESULT (STDMETHODCALLTYPE* put_Direction)(__x_ABI_CWindows_CUI_CComposition_CIKeyFrameAnimation2* This,
        enum __x_ABI_CWindows_CUI_CComposition_CAnimationDirection value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CComposition_CIKeyFrameAnimation2Vtbl;

    interface __x_ABI_CWindows_CUI_CComposition_CIKeyFrameAnimation2
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CComposition_CIKeyFrameAnimation2Vtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CComposition_CIKeyFrameAnimation2;
#endif /* !defined(____x_ABI_CWindows_CUI_CComposition_CIKeyFrameAnimation2_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CComposition_CIKeyFrameAnimation3_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CComposition_CIKeyFrameAnimation3_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CComposition_CIKeyFrameAnimation3Vtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CComposition_CIKeyFrameAnimation3* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CComposition_CIKeyFrameAnimation3* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CComposition_CIKeyFrameAnimation3* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CComposition_CIKeyFrameAnimation3* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CComposition_CIKeyFrameAnimation3* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CComposition_CIKeyFrameAnimation3* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_DelayBehavior)(__x_ABI_CWindows_CUI_CComposition_CIKeyFrameAnimation3* This,
        enum __x_ABI_CWindows_CUI_CComposition_CAnimationDelayBehavior* value);
    HRESULT (STDMETHODCALLTYPE* put_DelayBehavior)(__x_ABI_CWindows_CUI_CComposition_CIKeyFrameAnimation3* This,
        enum __x_ABI_CWindows_CUI_CComposition_CAnimationDelayBehavior value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CComposition_CIKeyFrameAnimation3Vtbl;

    interface __x_ABI_CWindows_CUI_CComposition_CIKeyFrameAnimation3
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CComposition_CIKeyFrameAnimation3Vtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CComposition_CIKeyFrameAnimation3;
#endif /* !defined(____x_ABI_CWindows_CUI_CComposition_CIKeyFrameAnimation3_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CComposition_CIKeyFrameAnimationFactory_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CComposition_CIKeyFrameAnimationFactory_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CComposition_CIKeyFrameAnimationFactoryVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CComposition_CIKeyFrameAnimationFactory* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CComposition_CIKeyFrameAnimationFactory* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CComposition_CIKeyFrameAnimationFactory* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CComposition_CIKeyFrameAnimationFactory* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CComposition_CIKeyFrameAnimationFactory* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CComposition_CIKeyFrameAnimationFactory* This,
            TrustLevel* trustLevel);
    
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CComposition_CIKeyFrameAnimationFactoryVtbl;

    interface __x_ABI_CWindows_CUI_CComposition_CIKeyFrameAnimationFactory
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CComposition_CIKeyFrameAnimationFactoryVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CComposition_CIKeyFrameAnimationFactory;
#endif /* !defined(____x_ABI_CWindows_CUI_CComposition_CIKeyFrameAnimationFactory_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CComposition_CILayerVisual_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CComposition_CILayerVisual_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CComposition_CILayerVisualVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CComposition_CILayerVisual* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CComposition_CILayerVisual* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CComposition_CILayerVisual* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CComposition_CILayerVisual* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CComposition_CILayerVisual* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CComposition_CILayerVisual* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Effect)(__x_ABI_CWindows_CUI_CComposition_CILayerVisual* This,
        __x_ABI_CWindows_CUI_CComposition_CICompositionEffectBrush** value);
    HRESULT (STDMETHODCALLTYPE* put_Effect)(__x_ABI_CWindows_CUI_CComposition_CILayerVisual* This,
        __x_ABI_CWindows_CUI_CComposition_CICompositionEffectBrush* value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CComposition_CILayerVisualVtbl;

    interface __x_ABI_CWindows_CUI_CComposition_CILayerVisual
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CComposition_CILayerVisualVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CComposition_CILayerVisual;
#endif /* !defined(____x_ABI_CWindows_CUI_CComposition_CILayerVisual_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CComposition_CILayerVisual2_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CComposition_CILayerVisual2_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CComposition_CILayerVisual2Vtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CComposition_CILayerVisual2* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CComposition_CILayerVisual2* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CComposition_CILayerVisual2* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CComposition_CILayerVisual2* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CComposition_CILayerVisual2* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CComposition_CILayerVisual2* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Shadow)(__x_ABI_CWindows_CUI_CComposition_CILayerVisual2* This,
        __x_ABI_CWindows_CUI_CComposition_CICompositionShadow** value);
    HRESULT (STDMETHODCALLTYPE* put_Shadow)(__x_ABI_CWindows_CUI_CComposition_CILayerVisual2* This,
        __x_ABI_CWindows_CUI_CComposition_CICompositionShadow* value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CComposition_CILayerVisual2Vtbl;

    interface __x_ABI_CWindows_CUI_CComposition_CILayerVisual2
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CComposition_CILayerVisual2Vtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CComposition_CILayerVisual2;
#endif /* !defined(____x_ABI_CWindows_CUI_CComposition_CILayerVisual2_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CComposition_CILinearEasingFunction_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CComposition_CILinearEasingFunction_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CComposition_CILinearEasingFunctionVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CComposition_CILinearEasingFunction* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CComposition_CILinearEasingFunction* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CComposition_CILinearEasingFunction* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CComposition_CILinearEasingFunction* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CComposition_CILinearEasingFunction* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CComposition_CILinearEasingFunction* This,
            TrustLevel* trustLevel);
    
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CComposition_CILinearEasingFunctionVtbl;

    interface __x_ABI_CWindows_CUI_CComposition_CILinearEasingFunction
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CComposition_CILinearEasingFunctionVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CComposition_CILinearEasingFunction;
#endif /* !defined(____x_ABI_CWindows_CUI_CComposition_CILinearEasingFunction_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CComposition_CINaturalMotionAnimation_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CComposition_CINaturalMotionAnimation_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CComposition_CINaturalMotionAnimationVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CComposition_CINaturalMotionAnimation* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CComposition_CINaturalMotionAnimation* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CComposition_CINaturalMotionAnimation* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CComposition_CINaturalMotionAnimation* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CComposition_CINaturalMotionAnimation* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CComposition_CINaturalMotionAnimation* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_DelayBehavior)(__x_ABI_CWindows_CUI_CComposition_CINaturalMotionAnimation* This,
        enum __x_ABI_CWindows_CUI_CComposition_CAnimationDelayBehavior* value);
    HRESULT (STDMETHODCALLTYPE* put_DelayBehavior)(__x_ABI_CWindows_CUI_CComposition_CINaturalMotionAnimation* This,
        enum __x_ABI_CWindows_CUI_CComposition_CAnimationDelayBehavior value);
    HRESULT (STDMETHODCALLTYPE* get_DelayTime)(__x_ABI_CWindows_CUI_CComposition_CINaturalMotionAnimation* This,
        struct __x_ABI_CWindows_CFoundation_CTimeSpan* value);
    HRESULT (STDMETHODCALLTYPE* put_DelayTime)(__x_ABI_CWindows_CUI_CComposition_CINaturalMotionAnimation* This,
        struct __x_ABI_CWindows_CFoundation_CTimeSpan value);
    HRESULT (STDMETHODCALLTYPE* get_StopBehavior)(__x_ABI_CWindows_CUI_CComposition_CINaturalMotionAnimation* This,
        enum __x_ABI_CWindows_CUI_CComposition_CAnimationStopBehavior* value);
    HRESULT (STDMETHODCALLTYPE* put_StopBehavior)(__x_ABI_CWindows_CUI_CComposition_CINaturalMotionAnimation* This,
        enum __x_ABI_CWindows_CUI_CComposition_CAnimationStopBehavior value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CComposition_CINaturalMotionAnimationVtbl;

    interface __x_ABI_CWindows_CUI_CComposition_CINaturalMotionAnimation
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CComposition_CINaturalMotionAnimationVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CComposition_CINaturalMotionAnimation;
#endif /* !defined(____x_ABI_CWindows_CUI_CComposition_CINaturalMotionAnimation_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CComposition_CINaturalMotionAnimationFactory_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CComposition_CINaturalMotionAnimationFactory_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CComposition_CINaturalMotionAnimationFactoryVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CComposition_CINaturalMotionAnimationFactory* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CComposition_CINaturalMotionAnimationFactory* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CComposition_CINaturalMotionAnimationFactory* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CComposition_CINaturalMotionAnimationFactory* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CComposition_CINaturalMotionAnimationFactory* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CComposition_CINaturalMotionAnimationFactory* This,
            TrustLevel* trustLevel);
    
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CComposition_CINaturalMotionAnimationFactoryVtbl;

    interface __x_ABI_CWindows_CUI_CComposition_CINaturalMotionAnimationFactory
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CComposition_CINaturalMotionAnimationFactoryVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CComposition_CINaturalMotionAnimationFactory;
#endif /* !defined(____x_ABI_CWindows_CUI_CComposition_CINaturalMotionAnimationFactory_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CComposition_CIPathKeyFrameAnimation_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CComposition_CIPathKeyFrameAnimation_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CComposition_CIPathKeyFrameAnimationVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CComposition_CIPathKeyFrameAnimation* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CComposition_CIPathKeyFrameAnimation* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CComposition_CIPathKeyFrameAnimation* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CComposition_CIPathKeyFrameAnimation* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CComposition_CIPathKeyFrameAnimation* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CComposition_CIPathKeyFrameAnimation* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* InsertKeyFrame)(__x_ABI_CWindows_CUI_CComposition_CIPathKeyFrameAnimation* This,
        FLOAT normalizedProgressKey,
        __x_ABI_CWindows_CUI_CComposition_CICompositionPath* path);
    HRESULT (STDMETHODCALLTYPE* InsertKeyFrameWithEasingFunction)(__x_ABI_CWindows_CUI_CComposition_CIPathKeyFrameAnimation* This,
        FLOAT normalizedProgressKey,
        __x_ABI_CWindows_CUI_CComposition_CICompositionPath* path,
        __x_ABI_CWindows_CUI_CComposition_CICompositionEasingFunction* easingFunction);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CComposition_CIPathKeyFrameAnimationVtbl;

    interface __x_ABI_CWindows_CUI_CComposition_CIPathKeyFrameAnimation
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CComposition_CIPathKeyFrameAnimationVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CComposition_CIPathKeyFrameAnimation;
#endif /* !defined(____x_ABI_CWindows_CUI_CComposition_CIPathKeyFrameAnimation_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CComposition_CIPointLight_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CComposition_CIPointLight_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CComposition_CIPointLightVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CComposition_CIPointLight* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CComposition_CIPointLight* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CComposition_CIPointLight* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CComposition_CIPointLight* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CComposition_CIPointLight* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CComposition_CIPointLight* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Color)(__x_ABI_CWindows_CUI_CComposition_CIPointLight* This,
        struct __x_ABI_CWindows_CUI_CColor* value);
    HRESULT (STDMETHODCALLTYPE* put_Color)(__x_ABI_CWindows_CUI_CComposition_CIPointLight* This,
        struct __x_ABI_CWindows_CUI_CColor value);
    HRESULT (STDMETHODCALLTYPE* get_ConstantAttenuation)(__x_ABI_CWindows_CUI_CComposition_CIPointLight* This,
        FLOAT* value);
    HRESULT (STDMETHODCALLTYPE* put_ConstantAttenuation)(__x_ABI_CWindows_CUI_CComposition_CIPointLight* This,
        FLOAT value);
    HRESULT (STDMETHODCALLTYPE* get_CoordinateSpace)(__x_ABI_CWindows_CUI_CComposition_CIPointLight* This,
        __x_ABI_CWindows_CUI_CComposition_CIVisual** value);
    HRESULT (STDMETHODCALLTYPE* put_CoordinateSpace)(__x_ABI_CWindows_CUI_CComposition_CIPointLight* This,
        __x_ABI_CWindows_CUI_CComposition_CIVisual* value);
    HRESULT (STDMETHODCALLTYPE* get_LinearAttenuation)(__x_ABI_CWindows_CUI_CComposition_CIPointLight* This,
        FLOAT* value);
    HRESULT (STDMETHODCALLTYPE* put_LinearAttenuation)(__x_ABI_CWindows_CUI_CComposition_CIPointLight* This,
        FLOAT value);
    HRESULT (STDMETHODCALLTYPE* get_Offset)(__x_ABI_CWindows_CUI_CComposition_CIPointLight* This,
        struct __x_ABI_CWindows_CFoundation_CNumerics_CVector3* value);
    HRESULT (STDMETHODCALLTYPE* put_Offset)(__x_ABI_CWindows_CUI_CComposition_CIPointLight* This,
        struct __x_ABI_CWindows_CFoundation_CNumerics_CVector3 value);
    HRESULT (STDMETHODCALLTYPE* get_QuadraticAttenuation)(__x_ABI_CWindows_CUI_CComposition_CIPointLight* This,
        FLOAT* value);
    HRESULT (STDMETHODCALLTYPE* put_QuadraticAttenuation)(__x_ABI_CWindows_CUI_CComposition_CIPointLight* This,
        FLOAT value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CComposition_CIPointLightVtbl;

    interface __x_ABI_CWindows_CUI_CComposition_CIPointLight
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CComposition_CIPointLightVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CComposition_CIPointLight;
#endif /* !defined(____x_ABI_CWindows_CUI_CComposition_CIPointLight_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CComposition_CIPointLight2_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CComposition_CIPointLight2_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CComposition_CIPointLight2Vtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CComposition_CIPointLight2* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CComposition_CIPointLight2* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CComposition_CIPointLight2* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CComposition_CIPointLight2* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CComposition_CIPointLight2* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CComposition_CIPointLight2* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Intensity)(__x_ABI_CWindows_CUI_CComposition_CIPointLight2* This,
        FLOAT* value);
    HRESULT (STDMETHODCALLTYPE* put_Intensity)(__x_ABI_CWindows_CUI_CComposition_CIPointLight2* This,
        FLOAT value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CComposition_CIPointLight2Vtbl;

    interface __x_ABI_CWindows_CUI_CComposition_CIPointLight2
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CComposition_CIPointLight2Vtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CComposition_CIPointLight2;
#endif /* !defined(____x_ABI_CWindows_CUI_CComposition_CIPointLight2_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CComposition_CIPointLight3_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CComposition_CIPointLight3_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CComposition_CIPointLight3Vtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CComposition_CIPointLight3* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CComposition_CIPointLight3* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CComposition_CIPointLight3* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CComposition_CIPointLight3* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CComposition_CIPointLight3* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CComposition_CIPointLight3* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_MinAttenuationCutoff)(__x_ABI_CWindows_CUI_CComposition_CIPointLight3* This,
        FLOAT* value);
    HRESULT (STDMETHODCALLTYPE* put_MinAttenuationCutoff)(__x_ABI_CWindows_CUI_CComposition_CIPointLight3* This,
        FLOAT value);
    HRESULT (STDMETHODCALLTYPE* get_MaxAttenuationCutoff)(__x_ABI_CWindows_CUI_CComposition_CIPointLight3* This,
        FLOAT* value);
    HRESULT (STDMETHODCALLTYPE* put_MaxAttenuationCutoff)(__x_ABI_CWindows_CUI_CComposition_CIPointLight3* This,
        FLOAT value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CComposition_CIPointLight3Vtbl;

    interface __x_ABI_CWindows_CUI_CComposition_CIPointLight3
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CComposition_CIPointLight3Vtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CComposition_CIPointLight3;
#endif /* !defined(____x_ABI_CWindows_CUI_CComposition_CIPointLight3_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CComposition_CIQuaternionKeyFrameAnimation_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CComposition_CIQuaternionKeyFrameAnimation_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CComposition_CIQuaternionKeyFrameAnimationVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CComposition_CIQuaternionKeyFrameAnimation* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CComposition_CIQuaternionKeyFrameAnimation* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CComposition_CIQuaternionKeyFrameAnimation* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CComposition_CIQuaternionKeyFrameAnimation* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CComposition_CIQuaternionKeyFrameAnimation* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CComposition_CIQuaternionKeyFrameAnimation* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* InsertKeyFrame)(__x_ABI_CWindows_CUI_CComposition_CIQuaternionKeyFrameAnimation* This,
        FLOAT normalizedProgressKey,
        struct __x_ABI_CWindows_CFoundation_CNumerics_CQuaternion value);
    HRESULT (STDMETHODCALLTYPE* InsertKeyFrameWithEasingFunction)(__x_ABI_CWindows_CUI_CComposition_CIQuaternionKeyFrameAnimation* This,
        FLOAT normalizedProgressKey,
        struct __x_ABI_CWindows_CFoundation_CNumerics_CQuaternion value,
        __x_ABI_CWindows_CUI_CComposition_CICompositionEasingFunction* easingFunction);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CComposition_CIQuaternionKeyFrameAnimationVtbl;

    interface __x_ABI_CWindows_CUI_CComposition_CIQuaternionKeyFrameAnimation
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CComposition_CIQuaternionKeyFrameAnimationVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CComposition_CIQuaternionKeyFrameAnimation;
#endif /* !defined(____x_ABI_CWindows_CUI_CComposition_CIQuaternionKeyFrameAnimation_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CComposition_CIRedirectVisual_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CComposition_CIRedirectVisual_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CComposition_CIRedirectVisualVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CComposition_CIRedirectVisual* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CComposition_CIRedirectVisual* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CComposition_CIRedirectVisual* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CComposition_CIRedirectVisual* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CComposition_CIRedirectVisual* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CComposition_CIRedirectVisual* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Source)(__x_ABI_CWindows_CUI_CComposition_CIRedirectVisual* This,
        __x_ABI_CWindows_CUI_CComposition_CIVisual** value);
    HRESULT (STDMETHODCALLTYPE* put_Source)(__x_ABI_CWindows_CUI_CComposition_CIRedirectVisual* This,
        __x_ABI_CWindows_CUI_CComposition_CIVisual* value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CComposition_CIRedirectVisualVtbl;

    interface __x_ABI_CWindows_CUI_CComposition_CIRedirectVisual
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CComposition_CIRedirectVisualVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CComposition_CIRedirectVisual;
#endif /* !defined(____x_ABI_CWindows_CUI_CComposition_CIRedirectVisual_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CComposition_CIRenderingDeviceReplacedEventArgs_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CComposition_CIRenderingDeviceReplacedEventArgs_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CComposition_CIRenderingDeviceReplacedEventArgsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CComposition_CIRenderingDeviceReplacedEventArgs* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CComposition_CIRenderingDeviceReplacedEventArgs* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CComposition_CIRenderingDeviceReplacedEventArgs* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CComposition_CIRenderingDeviceReplacedEventArgs* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CComposition_CIRenderingDeviceReplacedEventArgs* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CComposition_CIRenderingDeviceReplacedEventArgs* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_GraphicsDevice)(__x_ABI_CWindows_CUI_CComposition_CIRenderingDeviceReplacedEventArgs* This,
        __x_ABI_CWindows_CUI_CComposition_CICompositionGraphicsDevice** value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CComposition_CIRenderingDeviceReplacedEventArgsVtbl;

    interface __x_ABI_CWindows_CUI_CComposition_CIRenderingDeviceReplacedEventArgs
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CComposition_CIRenderingDeviceReplacedEventArgsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CComposition_CIRenderingDeviceReplacedEventArgs;
#endif /* !defined(____x_ABI_CWindows_CUI_CComposition_CIRenderingDeviceReplacedEventArgs_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CComposition_CIScalarKeyFrameAnimation_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CComposition_CIScalarKeyFrameAnimation_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CComposition_CIScalarKeyFrameAnimationVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CComposition_CIScalarKeyFrameAnimation* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CComposition_CIScalarKeyFrameAnimation* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CComposition_CIScalarKeyFrameAnimation* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CComposition_CIScalarKeyFrameAnimation* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CComposition_CIScalarKeyFrameAnimation* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CComposition_CIScalarKeyFrameAnimation* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* InsertKeyFrame)(__x_ABI_CWindows_CUI_CComposition_CIScalarKeyFrameAnimation* This,
        FLOAT normalizedProgressKey,
        FLOAT value);
    HRESULT (STDMETHODCALLTYPE* InsertKeyFrameWithEasingFunction)(__x_ABI_CWindows_CUI_CComposition_CIScalarKeyFrameAnimation* This,
        FLOAT normalizedProgressKey,
        FLOAT value,
        __x_ABI_CWindows_CUI_CComposition_CICompositionEasingFunction* easingFunction);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CComposition_CIScalarKeyFrameAnimationVtbl;

    interface __x_ABI_CWindows_CUI_CComposition_CIScalarKeyFrameAnimation
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CComposition_CIScalarKeyFrameAnimationVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CComposition_CIScalarKeyFrameAnimation;
#endif /* !defined(____x_ABI_CWindows_CUI_CComposition_CIScalarKeyFrameAnimation_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CComposition_CIScalarNaturalMotionAnimation_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CComposition_CIScalarNaturalMotionAnimation_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CComposition_CIScalarNaturalMotionAnimationVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CComposition_CIScalarNaturalMotionAnimation* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CComposition_CIScalarNaturalMotionAnimation* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CComposition_CIScalarNaturalMotionAnimation* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CComposition_CIScalarNaturalMotionAnimation* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CComposition_CIScalarNaturalMotionAnimation* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CComposition_CIScalarNaturalMotionAnimation* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_FinalValue)(__x_ABI_CWindows_CUI_CComposition_CIScalarNaturalMotionAnimation* This,
        __x_ABI_C__FIReference_1_float** value);
    HRESULT (STDMETHODCALLTYPE* put_FinalValue)(__x_ABI_CWindows_CUI_CComposition_CIScalarNaturalMotionAnimation* This,
        __x_ABI_C__FIReference_1_float* value);
    HRESULT (STDMETHODCALLTYPE* get_InitialValue)(__x_ABI_CWindows_CUI_CComposition_CIScalarNaturalMotionAnimation* This,
        __x_ABI_C__FIReference_1_float** value);
    HRESULT (STDMETHODCALLTYPE* put_InitialValue)(__x_ABI_CWindows_CUI_CComposition_CIScalarNaturalMotionAnimation* This,
        __x_ABI_C__FIReference_1_float* value);
    HRESULT (STDMETHODCALLTYPE* get_InitialVelocity)(__x_ABI_CWindows_CUI_CComposition_CIScalarNaturalMotionAnimation* This,
        FLOAT* value);
    HRESULT (STDMETHODCALLTYPE* put_InitialVelocity)(__x_ABI_CWindows_CUI_CComposition_CIScalarNaturalMotionAnimation* This,
        FLOAT value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CComposition_CIScalarNaturalMotionAnimationVtbl;

    interface __x_ABI_CWindows_CUI_CComposition_CIScalarNaturalMotionAnimation
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CComposition_CIScalarNaturalMotionAnimationVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CComposition_CIScalarNaturalMotionAnimation;
#endif /* !defined(____x_ABI_CWindows_CUI_CComposition_CIScalarNaturalMotionAnimation_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CComposition_CIScalarNaturalMotionAnimationFactory_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CComposition_CIScalarNaturalMotionAnimationFactory_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CComposition_CIScalarNaturalMotionAnimationFactoryVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CComposition_CIScalarNaturalMotionAnimationFactory* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CComposition_CIScalarNaturalMotionAnimationFactory* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CComposition_CIScalarNaturalMotionAnimationFactory* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CComposition_CIScalarNaturalMotionAnimationFactory* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CComposition_CIScalarNaturalMotionAnimationFactory* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CComposition_CIScalarNaturalMotionAnimationFactory* This,
            TrustLevel* trustLevel);
    
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CComposition_CIScalarNaturalMotionAnimationFactoryVtbl;

    interface __x_ABI_CWindows_CUI_CComposition_CIScalarNaturalMotionAnimationFactory
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CComposition_CIScalarNaturalMotionAnimationFactoryVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CComposition_CIScalarNaturalMotionAnimationFactory;
#endif /* !defined(____x_ABI_CWindows_CUI_CComposition_CIScalarNaturalMotionAnimationFactory_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CComposition_CIShapeVisual_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CComposition_CIShapeVisual_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CComposition_CIShapeVisualVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CComposition_CIShapeVisual* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CComposition_CIShapeVisual* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CComposition_CIShapeVisual* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CComposition_CIShapeVisual* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CComposition_CIShapeVisual* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CComposition_CIShapeVisual* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Shapes)(__x_ABI_CWindows_CUI_CComposition_CIShapeVisual* This,
        __x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CComposition__CCompositionShape** value);
    HRESULT (STDMETHODCALLTYPE* get_ViewBox)(__x_ABI_CWindows_CUI_CComposition_CIShapeVisual* This,
        __x_ABI_CWindows_CUI_CComposition_CICompositionViewBox** value);
    HRESULT (STDMETHODCALLTYPE* put_ViewBox)(__x_ABI_CWindows_CUI_CComposition_CIShapeVisual* This,
        __x_ABI_CWindows_CUI_CComposition_CICompositionViewBox* value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CComposition_CIShapeVisualVtbl;

    interface __x_ABI_CWindows_CUI_CComposition_CIShapeVisual
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CComposition_CIShapeVisualVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CComposition_CIShapeVisual;
#endif /* !defined(____x_ABI_CWindows_CUI_CComposition_CIShapeVisual_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CComposition_CISpotLight_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CComposition_CISpotLight_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CComposition_CISpotLightVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CComposition_CISpotLight* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CComposition_CISpotLight* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CComposition_CISpotLight* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CComposition_CISpotLight* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CComposition_CISpotLight* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CComposition_CISpotLight* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_ConstantAttenuation)(__x_ABI_CWindows_CUI_CComposition_CISpotLight* This,
        FLOAT* value);
    HRESULT (STDMETHODCALLTYPE* put_ConstantAttenuation)(__x_ABI_CWindows_CUI_CComposition_CISpotLight* This,
        FLOAT value);
    HRESULT (STDMETHODCALLTYPE* get_CoordinateSpace)(__x_ABI_CWindows_CUI_CComposition_CISpotLight* This,
        __x_ABI_CWindows_CUI_CComposition_CIVisual** value);
    HRESULT (STDMETHODCALLTYPE* put_CoordinateSpace)(__x_ABI_CWindows_CUI_CComposition_CISpotLight* This,
        __x_ABI_CWindows_CUI_CComposition_CIVisual* value);
    HRESULT (STDMETHODCALLTYPE* get_Direction)(__x_ABI_CWindows_CUI_CComposition_CISpotLight* This,
        struct __x_ABI_CWindows_CFoundation_CNumerics_CVector3* value);
    HRESULT (STDMETHODCALLTYPE* put_Direction)(__x_ABI_CWindows_CUI_CComposition_CISpotLight* This,
        struct __x_ABI_CWindows_CFoundation_CNumerics_CVector3 value);
    HRESULT (STDMETHODCALLTYPE* get_InnerConeAngle)(__x_ABI_CWindows_CUI_CComposition_CISpotLight* This,
        FLOAT* value);
    HRESULT (STDMETHODCALLTYPE* put_InnerConeAngle)(__x_ABI_CWindows_CUI_CComposition_CISpotLight* This,
        FLOAT value);
    HRESULT (STDMETHODCALLTYPE* get_InnerConeAngleInDegrees)(__x_ABI_CWindows_CUI_CComposition_CISpotLight* This,
        FLOAT* value);
    HRESULT (STDMETHODCALLTYPE* put_InnerConeAngleInDegrees)(__x_ABI_CWindows_CUI_CComposition_CISpotLight* This,
        FLOAT value);
    HRESULT (STDMETHODCALLTYPE* get_InnerConeColor)(__x_ABI_CWindows_CUI_CComposition_CISpotLight* This,
        struct __x_ABI_CWindows_CUI_CColor* value);
    HRESULT (STDMETHODCALLTYPE* put_InnerConeColor)(__x_ABI_CWindows_CUI_CComposition_CISpotLight* This,
        struct __x_ABI_CWindows_CUI_CColor value);
    HRESULT (STDMETHODCALLTYPE* get_LinearAttenuation)(__x_ABI_CWindows_CUI_CComposition_CISpotLight* This,
        FLOAT* value);
    HRESULT (STDMETHODCALLTYPE* put_LinearAttenuation)(__x_ABI_CWindows_CUI_CComposition_CISpotLight* This,
        FLOAT value);
    HRESULT (STDMETHODCALLTYPE* get_Offset)(__x_ABI_CWindows_CUI_CComposition_CISpotLight* This,
        struct __x_ABI_CWindows_CFoundation_CNumerics_CVector3* value);
    HRESULT (STDMETHODCALLTYPE* put_Offset)(__x_ABI_CWindows_CUI_CComposition_CISpotLight* This,
        struct __x_ABI_CWindows_CFoundation_CNumerics_CVector3 value);
    HRESULT (STDMETHODCALLTYPE* get_OuterConeAngle)(__x_ABI_CWindows_CUI_CComposition_CISpotLight* This,
        FLOAT* value);
    HRESULT (STDMETHODCALLTYPE* put_OuterConeAngle)(__x_ABI_CWindows_CUI_CComposition_CISpotLight* This,
        FLOAT value);
    HRESULT (STDMETHODCALLTYPE* get_OuterConeAngleInDegrees)(__x_ABI_CWindows_CUI_CComposition_CISpotLight* This,
        FLOAT* value);
    HRESULT (STDMETHODCALLTYPE* put_OuterConeAngleInDegrees)(__x_ABI_CWindows_CUI_CComposition_CISpotLight* This,
        FLOAT value);
    HRESULT (STDMETHODCALLTYPE* get_OuterConeColor)(__x_ABI_CWindows_CUI_CComposition_CISpotLight* This,
        struct __x_ABI_CWindows_CUI_CColor* value);
    HRESULT (STDMETHODCALLTYPE* put_OuterConeColor)(__x_ABI_CWindows_CUI_CComposition_CISpotLight* This,
        struct __x_ABI_CWindows_CUI_CColor value);
    HRESULT (STDMETHODCALLTYPE* get_QuadraticAttenuation)(__x_ABI_CWindows_CUI_CComposition_CISpotLight* This,
        FLOAT* value);
    HRESULT (STDMETHODCALLTYPE* put_QuadraticAttenuation)(__x_ABI_CWindows_CUI_CComposition_CISpotLight* This,
        FLOAT value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CComposition_CISpotLightVtbl;

    interface __x_ABI_CWindows_CUI_CComposition_CISpotLight
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CComposition_CISpotLightVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CComposition_CISpotLight;
#endif /* !defined(____x_ABI_CWindows_CUI_CComposition_CISpotLight_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CComposition_CISpotLight2_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CComposition_CISpotLight2_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CComposition_CISpotLight2Vtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CComposition_CISpotLight2* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CComposition_CISpotLight2* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CComposition_CISpotLight2* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CComposition_CISpotLight2* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CComposition_CISpotLight2* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CComposition_CISpotLight2* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_InnerConeIntensity)(__x_ABI_CWindows_CUI_CComposition_CISpotLight2* This,
        FLOAT* value);
    HRESULT (STDMETHODCALLTYPE* put_InnerConeIntensity)(__x_ABI_CWindows_CUI_CComposition_CISpotLight2* This,
        FLOAT value);
    HRESULT (STDMETHODCALLTYPE* get_OuterConeIntensity)(__x_ABI_CWindows_CUI_CComposition_CISpotLight2* This,
        FLOAT* value);
    HRESULT (STDMETHODCALLTYPE* put_OuterConeIntensity)(__x_ABI_CWindows_CUI_CComposition_CISpotLight2* This,
        FLOAT value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CComposition_CISpotLight2Vtbl;

    interface __x_ABI_CWindows_CUI_CComposition_CISpotLight2
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CComposition_CISpotLight2Vtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CComposition_CISpotLight2;
#endif /* !defined(____x_ABI_CWindows_CUI_CComposition_CISpotLight2_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CComposition_CISpotLight3_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CComposition_CISpotLight3_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CComposition_CISpotLight3Vtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CComposition_CISpotLight3* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CComposition_CISpotLight3* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CComposition_CISpotLight3* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CComposition_CISpotLight3* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CComposition_CISpotLight3* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CComposition_CISpotLight3* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_MinAttenuationCutoff)(__x_ABI_CWindows_CUI_CComposition_CISpotLight3* This,
        FLOAT* value);
    HRESULT (STDMETHODCALLTYPE* put_MinAttenuationCutoff)(__x_ABI_CWindows_CUI_CComposition_CISpotLight3* This,
        FLOAT value);
    HRESULT (STDMETHODCALLTYPE* get_MaxAttenuationCutoff)(__x_ABI_CWindows_CUI_CComposition_CISpotLight3* This,
        FLOAT* value);
    HRESULT (STDMETHODCALLTYPE* put_MaxAttenuationCutoff)(__x_ABI_CWindows_CUI_CComposition_CISpotLight3* This,
        FLOAT value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CComposition_CISpotLight3Vtbl;

    interface __x_ABI_CWindows_CUI_CComposition_CISpotLight3
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CComposition_CISpotLight3Vtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CComposition_CISpotLight3;
#endif /* !defined(____x_ABI_CWindows_CUI_CComposition_CISpotLight3_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CComposition_CISpringScalarNaturalMotionAnimation_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CComposition_CISpringScalarNaturalMotionAnimation_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CComposition_CISpringScalarNaturalMotionAnimationVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CComposition_CISpringScalarNaturalMotionAnimation* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CComposition_CISpringScalarNaturalMotionAnimation* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CComposition_CISpringScalarNaturalMotionAnimation* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CComposition_CISpringScalarNaturalMotionAnimation* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CComposition_CISpringScalarNaturalMotionAnimation* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CComposition_CISpringScalarNaturalMotionAnimation* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_DampingRatio)(__x_ABI_CWindows_CUI_CComposition_CISpringScalarNaturalMotionAnimation* This,
        FLOAT* value);
    HRESULT (STDMETHODCALLTYPE* put_DampingRatio)(__x_ABI_CWindows_CUI_CComposition_CISpringScalarNaturalMotionAnimation* This,
        FLOAT value);
    HRESULT (STDMETHODCALLTYPE* get_Period)(__x_ABI_CWindows_CUI_CComposition_CISpringScalarNaturalMotionAnimation* This,
        struct __x_ABI_CWindows_CFoundation_CTimeSpan* value);
    HRESULT (STDMETHODCALLTYPE* put_Period)(__x_ABI_CWindows_CUI_CComposition_CISpringScalarNaturalMotionAnimation* This,
        struct __x_ABI_CWindows_CFoundation_CTimeSpan value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CComposition_CISpringScalarNaturalMotionAnimationVtbl;

    interface __x_ABI_CWindows_CUI_CComposition_CISpringScalarNaturalMotionAnimation
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CComposition_CISpringScalarNaturalMotionAnimationVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CComposition_CISpringScalarNaturalMotionAnimation;
#endif /* !defined(____x_ABI_CWindows_CUI_CComposition_CISpringScalarNaturalMotionAnimation_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CComposition_CISpringVector2NaturalMotionAnimation_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CComposition_CISpringVector2NaturalMotionAnimation_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CComposition_CISpringVector2NaturalMotionAnimationVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CComposition_CISpringVector2NaturalMotionAnimation* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CComposition_CISpringVector2NaturalMotionAnimation* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CComposition_CISpringVector2NaturalMotionAnimation* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CComposition_CISpringVector2NaturalMotionAnimation* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CComposition_CISpringVector2NaturalMotionAnimation* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CComposition_CISpringVector2NaturalMotionAnimation* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_DampingRatio)(__x_ABI_CWindows_CUI_CComposition_CISpringVector2NaturalMotionAnimation* This,
        FLOAT* value);
    HRESULT (STDMETHODCALLTYPE* put_DampingRatio)(__x_ABI_CWindows_CUI_CComposition_CISpringVector2NaturalMotionAnimation* This,
        FLOAT value);
    HRESULT (STDMETHODCALLTYPE* get_Period)(__x_ABI_CWindows_CUI_CComposition_CISpringVector2NaturalMotionAnimation* This,
        struct __x_ABI_CWindows_CFoundation_CTimeSpan* value);
    HRESULT (STDMETHODCALLTYPE* put_Period)(__x_ABI_CWindows_CUI_CComposition_CISpringVector2NaturalMotionAnimation* This,
        struct __x_ABI_CWindows_CFoundation_CTimeSpan value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CComposition_CISpringVector2NaturalMotionAnimationVtbl;

    interface __x_ABI_CWindows_CUI_CComposition_CISpringVector2NaturalMotionAnimation
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CComposition_CISpringVector2NaturalMotionAnimationVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CComposition_CISpringVector2NaturalMotionAnimation;
#endif /* !defined(____x_ABI_CWindows_CUI_CComposition_CISpringVector2NaturalMotionAnimation_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CComposition_CISpringVector3NaturalMotionAnimation_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CComposition_CISpringVector3NaturalMotionAnimation_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CComposition_CISpringVector3NaturalMotionAnimationVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CComposition_CISpringVector3NaturalMotionAnimation* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CComposition_CISpringVector3NaturalMotionAnimation* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CComposition_CISpringVector3NaturalMotionAnimation* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CComposition_CISpringVector3NaturalMotionAnimation* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CComposition_CISpringVector3NaturalMotionAnimation* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CComposition_CISpringVector3NaturalMotionAnimation* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_DampingRatio)(__x_ABI_CWindows_CUI_CComposition_CISpringVector3NaturalMotionAnimation* This,
        FLOAT* value);
    HRESULT (STDMETHODCALLTYPE* put_DampingRatio)(__x_ABI_CWindows_CUI_CComposition_CISpringVector3NaturalMotionAnimation* This,
        FLOAT value);
    HRESULT (STDMETHODCALLTYPE* get_Period)(__x_ABI_CWindows_CUI_CComposition_CISpringVector3NaturalMotionAnimation* This,
        struct __x_ABI_CWindows_CFoundation_CTimeSpan* value);
    HRESULT (STDMETHODCALLTYPE* put_Period)(__x_ABI_CWindows_CUI_CComposition_CISpringVector3NaturalMotionAnimation* This,
        struct __x_ABI_CWindows_CFoundation_CTimeSpan value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CComposition_CISpringVector3NaturalMotionAnimationVtbl;

    interface __x_ABI_CWindows_CUI_CComposition_CISpringVector3NaturalMotionAnimation
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CComposition_CISpringVector3NaturalMotionAnimationVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CComposition_CISpringVector3NaturalMotionAnimation;
#endif /* !defined(____x_ABI_CWindows_CUI_CComposition_CISpringVector3NaturalMotionAnimation_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CComposition_CISpriteVisual_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CComposition_CISpriteVisual_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CComposition_CISpriteVisualVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CComposition_CISpriteVisual* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CComposition_CISpriteVisual* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CComposition_CISpriteVisual* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CComposition_CISpriteVisual* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CComposition_CISpriteVisual* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CComposition_CISpriteVisual* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Brush)(__x_ABI_CWindows_CUI_CComposition_CISpriteVisual* This,
        __x_ABI_CWindows_CUI_CComposition_CICompositionBrush** value);
    HRESULT (STDMETHODCALLTYPE* put_Brush)(__x_ABI_CWindows_CUI_CComposition_CISpriteVisual* This,
        __x_ABI_CWindows_CUI_CComposition_CICompositionBrush* value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CComposition_CISpriteVisualVtbl;

    interface __x_ABI_CWindows_CUI_CComposition_CISpriteVisual
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CComposition_CISpriteVisualVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CComposition_CISpriteVisual;
#endif /* !defined(____x_ABI_CWindows_CUI_CComposition_CISpriteVisual_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CComposition_CISpriteVisual2_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CComposition_CISpriteVisual2_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CComposition_CISpriteVisual2Vtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CComposition_CISpriteVisual2* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CComposition_CISpriteVisual2* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CComposition_CISpriteVisual2* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CComposition_CISpriteVisual2* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CComposition_CISpriteVisual2* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CComposition_CISpriteVisual2* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Shadow)(__x_ABI_CWindows_CUI_CComposition_CISpriteVisual2* This,
        __x_ABI_CWindows_CUI_CComposition_CICompositionShadow** value);
    HRESULT (STDMETHODCALLTYPE* put_Shadow)(__x_ABI_CWindows_CUI_CComposition_CISpriteVisual2* This,
        __x_ABI_CWindows_CUI_CComposition_CICompositionShadow* value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CComposition_CISpriteVisual2Vtbl;

    interface __x_ABI_CWindows_CUI_CComposition_CISpriteVisual2
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CComposition_CISpriteVisual2Vtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CComposition_CISpriteVisual2;
#endif /* !defined(____x_ABI_CWindows_CUI_CComposition_CISpriteVisual2_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CComposition_CIStepEasingFunction_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CComposition_CIStepEasingFunction_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CComposition_CIStepEasingFunctionVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CComposition_CIStepEasingFunction* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CComposition_CIStepEasingFunction* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CComposition_CIStepEasingFunction* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CComposition_CIStepEasingFunction* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CComposition_CIStepEasingFunction* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CComposition_CIStepEasingFunction* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_FinalStep)(__x_ABI_CWindows_CUI_CComposition_CIStepEasingFunction* This,
        INT32* value);
    HRESULT (STDMETHODCALLTYPE* put_FinalStep)(__x_ABI_CWindows_CUI_CComposition_CIStepEasingFunction* This,
        INT32 value);
    HRESULT (STDMETHODCALLTYPE* get_InitialStep)(__x_ABI_CWindows_CUI_CComposition_CIStepEasingFunction* This,
        INT32* value);
    HRESULT (STDMETHODCALLTYPE* put_InitialStep)(__x_ABI_CWindows_CUI_CComposition_CIStepEasingFunction* This,
        INT32 value);
    HRESULT (STDMETHODCALLTYPE* get_IsFinalStepSingleFrame)(__x_ABI_CWindows_CUI_CComposition_CIStepEasingFunction* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* put_IsFinalStepSingleFrame)(__x_ABI_CWindows_CUI_CComposition_CIStepEasingFunction* This,
        boolean value);
    HRESULT (STDMETHODCALLTYPE* get_IsInitialStepSingleFrame)(__x_ABI_CWindows_CUI_CComposition_CIStepEasingFunction* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* put_IsInitialStepSingleFrame)(__x_ABI_CWindows_CUI_CComposition_CIStepEasingFunction* This,
        boolean value);
    HRESULT (STDMETHODCALLTYPE* get_StepCount)(__x_ABI_CWindows_CUI_CComposition_CIStepEasingFunction* This,
        INT32* value);
    HRESULT (STDMETHODCALLTYPE* put_StepCount)(__x_ABI_CWindows_CUI_CComposition_CIStepEasingFunction* This,
        INT32 value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CComposition_CIStepEasingFunctionVtbl;

    interface __x_ABI_CWindows_CUI_CComposition_CIStepEasingFunction
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CComposition_CIStepEasingFunctionVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CComposition_CIStepEasingFunction;
#endif /* !defined(____x_ABI_CWindows_CUI_CComposition_CIStepEasingFunction_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CComposition_CIVector2KeyFrameAnimation_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CComposition_CIVector2KeyFrameAnimation_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CComposition_CIVector2KeyFrameAnimationVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CComposition_CIVector2KeyFrameAnimation* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CComposition_CIVector2KeyFrameAnimation* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CComposition_CIVector2KeyFrameAnimation* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CComposition_CIVector2KeyFrameAnimation* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CComposition_CIVector2KeyFrameAnimation* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CComposition_CIVector2KeyFrameAnimation* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* InsertKeyFrame)(__x_ABI_CWindows_CUI_CComposition_CIVector2KeyFrameAnimation* This,
        FLOAT normalizedProgressKey,
        struct __x_ABI_CWindows_CFoundation_CNumerics_CVector2 value);
    HRESULT (STDMETHODCALLTYPE* InsertKeyFrameWithEasingFunction)(__x_ABI_CWindows_CUI_CComposition_CIVector2KeyFrameAnimation* This,
        FLOAT normalizedProgressKey,
        struct __x_ABI_CWindows_CFoundation_CNumerics_CVector2 value,
        __x_ABI_CWindows_CUI_CComposition_CICompositionEasingFunction* easingFunction);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CComposition_CIVector2KeyFrameAnimationVtbl;

    interface __x_ABI_CWindows_CUI_CComposition_CIVector2KeyFrameAnimation
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CComposition_CIVector2KeyFrameAnimationVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CComposition_CIVector2KeyFrameAnimation;
#endif /* !defined(____x_ABI_CWindows_CUI_CComposition_CIVector2KeyFrameAnimation_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CComposition_CIVector2NaturalMotionAnimation_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CComposition_CIVector2NaturalMotionAnimation_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CComposition_CIVector2NaturalMotionAnimationVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CComposition_CIVector2NaturalMotionAnimation* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CComposition_CIVector2NaturalMotionAnimation* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CComposition_CIVector2NaturalMotionAnimation* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CComposition_CIVector2NaturalMotionAnimation* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CComposition_CIVector2NaturalMotionAnimation* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CComposition_CIVector2NaturalMotionAnimation* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_FinalValue)(__x_ABI_CWindows_CUI_CComposition_CIVector2NaturalMotionAnimation* This,
        __x_ABI_C__FIReference_1___x_ABI_CWindows__CFoundation__CNumerics__CVector2** value);
    HRESULT (STDMETHODCALLTYPE* put_FinalValue)(__x_ABI_CWindows_CUI_CComposition_CIVector2NaturalMotionAnimation* This,
        __x_ABI_C__FIReference_1___x_ABI_CWindows__CFoundation__CNumerics__CVector2* value);
    HRESULT (STDMETHODCALLTYPE* get_InitialValue)(__x_ABI_CWindows_CUI_CComposition_CIVector2NaturalMotionAnimation* This,
        __x_ABI_C__FIReference_1___x_ABI_CWindows__CFoundation__CNumerics__CVector2** value);
    HRESULT (STDMETHODCALLTYPE* put_InitialValue)(__x_ABI_CWindows_CUI_CComposition_CIVector2NaturalMotionAnimation* This,
        __x_ABI_C__FIReference_1___x_ABI_CWindows__CFoundation__CNumerics__CVector2* value);
    HRESULT (STDMETHODCALLTYPE* get_InitialVelocity)(__x_ABI_CWindows_CUI_CComposition_CIVector2NaturalMotionAnimation* This,
        struct __x_ABI_CWindows_CFoundation_CNumerics_CVector2* value);
    HRESULT (STDMETHODCALLTYPE* put_InitialVelocity)(__x_ABI_CWindows_CUI_CComposition_CIVector2NaturalMotionAnimation* This,
        struct __x_ABI_CWindows_CFoundation_CNumerics_CVector2 value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CComposition_CIVector2NaturalMotionAnimationVtbl;

    interface __x_ABI_CWindows_CUI_CComposition_CIVector2NaturalMotionAnimation
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CComposition_CIVector2NaturalMotionAnimationVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CComposition_CIVector2NaturalMotionAnimation;
#endif /* !defined(____x_ABI_CWindows_CUI_CComposition_CIVector2NaturalMotionAnimation_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CComposition_CIVector2NaturalMotionAnimationFactory_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CComposition_CIVector2NaturalMotionAnimationFactory_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CComposition_CIVector2NaturalMotionAnimationFactoryVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CComposition_CIVector2NaturalMotionAnimationFactory* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CComposition_CIVector2NaturalMotionAnimationFactory* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CComposition_CIVector2NaturalMotionAnimationFactory* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CComposition_CIVector2NaturalMotionAnimationFactory* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CComposition_CIVector2NaturalMotionAnimationFactory* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CComposition_CIVector2NaturalMotionAnimationFactory* This,
            TrustLevel* trustLevel);
    
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CComposition_CIVector2NaturalMotionAnimationFactoryVtbl;

    interface __x_ABI_CWindows_CUI_CComposition_CIVector2NaturalMotionAnimationFactory
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CComposition_CIVector2NaturalMotionAnimationFactoryVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CComposition_CIVector2NaturalMotionAnimationFactory;
#endif /* !defined(____x_ABI_CWindows_CUI_CComposition_CIVector2NaturalMotionAnimationFactory_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CComposition_CIVector3KeyFrameAnimation_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CComposition_CIVector3KeyFrameAnimation_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CComposition_CIVector3KeyFrameAnimationVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CComposition_CIVector3KeyFrameAnimation* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CComposition_CIVector3KeyFrameAnimation* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CComposition_CIVector3KeyFrameAnimation* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CComposition_CIVector3KeyFrameAnimation* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CComposition_CIVector3KeyFrameAnimation* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CComposition_CIVector3KeyFrameAnimation* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* InsertKeyFrame)(__x_ABI_CWindows_CUI_CComposition_CIVector3KeyFrameAnimation* This,
        FLOAT normalizedProgressKey,
        struct __x_ABI_CWindows_CFoundation_CNumerics_CVector3 value);
    HRESULT (STDMETHODCALLTYPE* InsertKeyFrameWithEasingFunction)(__x_ABI_CWindows_CUI_CComposition_CIVector3KeyFrameAnimation* This,
        FLOAT normalizedProgressKey,
        struct __x_ABI_CWindows_CFoundation_CNumerics_CVector3 value,
        __x_ABI_CWindows_CUI_CComposition_CICompositionEasingFunction* easingFunction);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CComposition_CIVector3KeyFrameAnimationVtbl;

    interface __x_ABI_CWindows_CUI_CComposition_CIVector3KeyFrameAnimation
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CComposition_CIVector3KeyFrameAnimationVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CComposition_CIVector3KeyFrameAnimation;
#endif /* !defined(____x_ABI_CWindows_CUI_CComposition_CIVector3KeyFrameAnimation_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CComposition_CIVector3NaturalMotionAnimation_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CComposition_CIVector3NaturalMotionAnimation_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CComposition_CIVector3NaturalMotionAnimationVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CComposition_CIVector3NaturalMotionAnimation* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CComposition_CIVector3NaturalMotionAnimation* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CComposition_CIVector3NaturalMotionAnimation* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CComposition_CIVector3NaturalMotionAnimation* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CComposition_CIVector3NaturalMotionAnimation* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CComposition_CIVector3NaturalMotionAnimation* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_FinalValue)(__x_ABI_CWindows_CUI_CComposition_CIVector3NaturalMotionAnimation* This,
        __x_ABI_C__FIReference_1___x_ABI_CWindows__CFoundation__CNumerics__CVector3** value);
    HRESULT (STDMETHODCALLTYPE* put_FinalValue)(__x_ABI_CWindows_CUI_CComposition_CIVector3NaturalMotionAnimation* This,
        __x_ABI_C__FIReference_1___x_ABI_CWindows__CFoundation__CNumerics__CVector3* value);
    HRESULT (STDMETHODCALLTYPE* get_InitialValue)(__x_ABI_CWindows_CUI_CComposition_CIVector3NaturalMotionAnimation* This,
        __x_ABI_C__FIReference_1___x_ABI_CWindows__CFoundation__CNumerics__CVector3** value);
    HRESULT (STDMETHODCALLTYPE* put_InitialValue)(__x_ABI_CWindows_CUI_CComposition_CIVector3NaturalMotionAnimation* This,
        __x_ABI_C__FIReference_1___x_ABI_CWindows__CFoundation__CNumerics__CVector3* value);
    HRESULT (STDMETHODCALLTYPE* get_InitialVelocity)(__x_ABI_CWindows_CUI_CComposition_CIVector3NaturalMotionAnimation* This,
        struct __x_ABI_CWindows_CFoundation_CNumerics_CVector3* value);
    HRESULT (STDMETHODCALLTYPE* put_InitialVelocity)(__x_ABI_CWindows_CUI_CComposition_CIVector3NaturalMotionAnimation* This,
        struct __x_ABI_CWindows_CFoundation_CNumerics_CVector3 value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CComposition_CIVector3NaturalMotionAnimationVtbl;

    interface __x_ABI_CWindows_CUI_CComposition_CIVector3NaturalMotionAnimation
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CComposition_CIVector3NaturalMotionAnimationVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CComposition_CIVector3NaturalMotionAnimation;
#endif /* !defined(____x_ABI_CWindows_CUI_CComposition_CIVector3NaturalMotionAnimation_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CComposition_CIVector3NaturalMotionAnimationFactory_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CComposition_CIVector3NaturalMotionAnimationFactory_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CComposition_CIVector3NaturalMotionAnimationFactoryVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CComposition_CIVector3NaturalMotionAnimationFactory* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CComposition_CIVector3NaturalMotionAnimationFactory* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CComposition_CIVector3NaturalMotionAnimationFactory* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CComposition_CIVector3NaturalMotionAnimationFactory* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CComposition_CIVector3NaturalMotionAnimationFactory* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CComposition_CIVector3NaturalMotionAnimationFactory* This,
            TrustLevel* trustLevel);
    
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CComposition_CIVector3NaturalMotionAnimationFactoryVtbl;

    interface __x_ABI_CWindows_CUI_CComposition_CIVector3NaturalMotionAnimationFactory
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CComposition_CIVector3NaturalMotionAnimationFactoryVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CComposition_CIVector3NaturalMotionAnimationFactory;
#endif /* !defined(____x_ABI_CWindows_CUI_CComposition_CIVector3NaturalMotionAnimationFactory_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CComposition_CIVector4KeyFrameAnimation_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CComposition_CIVector4KeyFrameAnimation_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CComposition_CIVector4KeyFrameAnimationVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CComposition_CIVector4KeyFrameAnimation* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CComposition_CIVector4KeyFrameAnimation* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CComposition_CIVector4KeyFrameAnimation* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CComposition_CIVector4KeyFrameAnimation* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CComposition_CIVector4KeyFrameAnimation* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CComposition_CIVector4KeyFrameAnimation* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* InsertKeyFrame)(__x_ABI_CWindows_CUI_CComposition_CIVector4KeyFrameAnimation* This,
        FLOAT normalizedProgressKey,
        struct __x_ABI_CWindows_CFoundation_CNumerics_CVector4 value);
    HRESULT (STDMETHODCALLTYPE* InsertKeyFrameWithEasingFunction)(__x_ABI_CWindows_CUI_CComposition_CIVector4KeyFrameAnimation* This,
        FLOAT normalizedProgressKey,
        struct __x_ABI_CWindows_CFoundation_CNumerics_CVector4 value,
        __x_ABI_CWindows_CUI_CComposition_CICompositionEasingFunction* easingFunction);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CComposition_CIVector4KeyFrameAnimationVtbl;

    interface __x_ABI_CWindows_CUI_CComposition_CIVector4KeyFrameAnimation
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CComposition_CIVector4KeyFrameAnimationVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CComposition_CIVector4KeyFrameAnimation;
#endif /* !defined(____x_ABI_CWindows_CUI_CComposition_CIVector4KeyFrameAnimation_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CComposition_CIVisual_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CComposition_CIVisual_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CComposition_CIVisualVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CComposition_CIVisual* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CComposition_CIVisual* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CComposition_CIVisual* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CComposition_CIVisual* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CComposition_CIVisual* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CComposition_CIVisual* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_AnchorPoint)(__x_ABI_CWindows_CUI_CComposition_CIVisual* This,
        struct __x_ABI_CWindows_CFoundation_CNumerics_CVector2* value);
    HRESULT (STDMETHODCALLTYPE* put_AnchorPoint)(__x_ABI_CWindows_CUI_CComposition_CIVisual* This,
        struct __x_ABI_CWindows_CFoundation_CNumerics_CVector2 value);
    HRESULT (STDMETHODCALLTYPE* get_BackfaceVisibility)(__x_ABI_CWindows_CUI_CComposition_CIVisual* This,
        enum __x_ABI_CWindows_CUI_CComposition_CCompositionBackfaceVisibility* value);
    HRESULT (STDMETHODCALLTYPE* put_BackfaceVisibility)(__x_ABI_CWindows_CUI_CComposition_CIVisual* This,
        enum __x_ABI_CWindows_CUI_CComposition_CCompositionBackfaceVisibility value);
    HRESULT (STDMETHODCALLTYPE* get_BorderMode)(__x_ABI_CWindows_CUI_CComposition_CIVisual* This,
        enum __x_ABI_CWindows_CUI_CComposition_CCompositionBorderMode* value);
    HRESULT (STDMETHODCALLTYPE* put_BorderMode)(__x_ABI_CWindows_CUI_CComposition_CIVisual* This,
        enum __x_ABI_CWindows_CUI_CComposition_CCompositionBorderMode value);
    HRESULT (STDMETHODCALLTYPE* get_CenterPoint)(__x_ABI_CWindows_CUI_CComposition_CIVisual* This,
        struct __x_ABI_CWindows_CFoundation_CNumerics_CVector3* value);
    HRESULT (STDMETHODCALLTYPE* put_CenterPoint)(__x_ABI_CWindows_CUI_CComposition_CIVisual* This,
        struct __x_ABI_CWindows_CFoundation_CNumerics_CVector3 value);
    HRESULT (STDMETHODCALLTYPE* get_Clip)(__x_ABI_CWindows_CUI_CComposition_CIVisual* This,
        __x_ABI_CWindows_CUI_CComposition_CICompositionClip** value);
    HRESULT (STDMETHODCALLTYPE* put_Clip)(__x_ABI_CWindows_CUI_CComposition_CIVisual* This,
        __x_ABI_CWindows_CUI_CComposition_CICompositionClip* value);
    HRESULT (STDMETHODCALLTYPE* get_CompositeMode)(__x_ABI_CWindows_CUI_CComposition_CIVisual* This,
        enum __x_ABI_CWindows_CUI_CComposition_CCompositionCompositeMode* value);
    HRESULT (STDMETHODCALLTYPE* put_CompositeMode)(__x_ABI_CWindows_CUI_CComposition_CIVisual* This,
        enum __x_ABI_CWindows_CUI_CComposition_CCompositionCompositeMode value);
    HRESULT (STDMETHODCALLTYPE* get_IsVisible)(__x_ABI_CWindows_CUI_CComposition_CIVisual* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* put_IsVisible)(__x_ABI_CWindows_CUI_CComposition_CIVisual* This,
        boolean value);
    HRESULT (STDMETHODCALLTYPE* get_Offset)(__x_ABI_CWindows_CUI_CComposition_CIVisual* This,
        struct __x_ABI_CWindows_CFoundation_CNumerics_CVector3* value);
    HRESULT (STDMETHODCALLTYPE* put_Offset)(__x_ABI_CWindows_CUI_CComposition_CIVisual* This,
        struct __x_ABI_CWindows_CFoundation_CNumerics_CVector3 value);
    HRESULT (STDMETHODCALLTYPE* get_Opacity)(__x_ABI_CWindows_CUI_CComposition_CIVisual* This,
        FLOAT* value);
    HRESULT (STDMETHODCALLTYPE* put_Opacity)(__x_ABI_CWindows_CUI_CComposition_CIVisual* This,
        FLOAT value);
    HRESULT (STDMETHODCALLTYPE* get_Orientation)(__x_ABI_CWindows_CUI_CComposition_CIVisual* This,
        struct __x_ABI_CWindows_CFoundation_CNumerics_CQuaternion* value);
    HRESULT (STDMETHODCALLTYPE* put_Orientation)(__x_ABI_CWindows_CUI_CComposition_CIVisual* This,
        struct __x_ABI_CWindows_CFoundation_CNumerics_CQuaternion value);
    HRESULT (STDMETHODCALLTYPE* get_Parent)(__x_ABI_CWindows_CUI_CComposition_CIVisual* This,
        __x_ABI_CWindows_CUI_CComposition_CIContainerVisual** value);
    HRESULT (STDMETHODCALLTYPE* get_RotationAngle)(__x_ABI_CWindows_CUI_CComposition_CIVisual* This,
        FLOAT* value);
    HRESULT (STDMETHODCALLTYPE* put_RotationAngle)(__x_ABI_CWindows_CUI_CComposition_CIVisual* This,
        FLOAT value);
    HRESULT (STDMETHODCALLTYPE* get_RotationAngleInDegrees)(__x_ABI_CWindows_CUI_CComposition_CIVisual* This,
        FLOAT* value);
    HRESULT (STDMETHODCALLTYPE* put_RotationAngleInDegrees)(__x_ABI_CWindows_CUI_CComposition_CIVisual* This,
        FLOAT value);
    HRESULT (STDMETHODCALLTYPE* get_RotationAxis)(__x_ABI_CWindows_CUI_CComposition_CIVisual* This,
        struct __x_ABI_CWindows_CFoundation_CNumerics_CVector3* value);
    HRESULT (STDMETHODCALLTYPE* put_RotationAxis)(__x_ABI_CWindows_CUI_CComposition_CIVisual* This,
        struct __x_ABI_CWindows_CFoundation_CNumerics_CVector3 value);
    HRESULT (STDMETHODCALLTYPE* get_Scale)(__x_ABI_CWindows_CUI_CComposition_CIVisual* This,
        struct __x_ABI_CWindows_CFoundation_CNumerics_CVector3* value);
    HRESULT (STDMETHODCALLTYPE* put_Scale)(__x_ABI_CWindows_CUI_CComposition_CIVisual* This,
        struct __x_ABI_CWindows_CFoundation_CNumerics_CVector3 value);
    HRESULT (STDMETHODCALLTYPE* get_Size)(__x_ABI_CWindows_CUI_CComposition_CIVisual* This,
        struct __x_ABI_CWindows_CFoundation_CNumerics_CVector2* value);
    HRESULT (STDMETHODCALLTYPE* put_Size)(__x_ABI_CWindows_CUI_CComposition_CIVisual* This,
        struct __x_ABI_CWindows_CFoundation_CNumerics_CVector2 value);
    HRESULT (STDMETHODCALLTYPE* get_TransformMatrix)(__x_ABI_CWindows_CUI_CComposition_CIVisual* This,
        struct __x_ABI_CWindows_CFoundation_CNumerics_CMatrix4x4* value);
    HRESULT (STDMETHODCALLTYPE* put_TransformMatrix)(__x_ABI_CWindows_CUI_CComposition_CIVisual* This,
        struct __x_ABI_CWindows_CFoundation_CNumerics_CMatrix4x4 value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CComposition_CIVisualVtbl;

    interface __x_ABI_CWindows_CUI_CComposition_CIVisual
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CComposition_CIVisualVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CComposition_CIVisual;
#endif /* !defined(____x_ABI_CWindows_CUI_CComposition_CIVisual_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CComposition_CIVisual2_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CComposition_CIVisual2_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CComposition_CIVisual2Vtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CComposition_CIVisual2* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CComposition_CIVisual2* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CComposition_CIVisual2* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CComposition_CIVisual2* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CComposition_CIVisual2* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CComposition_CIVisual2* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_ParentForTransform)(__x_ABI_CWindows_CUI_CComposition_CIVisual2* This,
        __x_ABI_CWindows_CUI_CComposition_CIVisual** value);
    HRESULT (STDMETHODCALLTYPE* put_ParentForTransform)(__x_ABI_CWindows_CUI_CComposition_CIVisual2* This,
        __x_ABI_CWindows_CUI_CComposition_CIVisual* value);
    HRESULT (STDMETHODCALLTYPE* get_RelativeOffsetAdjustment)(__x_ABI_CWindows_CUI_CComposition_CIVisual2* This,
        struct __x_ABI_CWindows_CFoundation_CNumerics_CVector3* value);
    HRESULT (STDMETHODCALLTYPE* put_RelativeOffsetAdjustment)(__x_ABI_CWindows_CUI_CComposition_CIVisual2* This,
        struct __x_ABI_CWindows_CFoundation_CNumerics_CVector3 value);
    HRESULT (STDMETHODCALLTYPE* get_RelativeSizeAdjustment)(__x_ABI_CWindows_CUI_CComposition_CIVisual2* This,
        struct __x_ABI_CWindows_CFoundation_CNumerics_CVector2* value);
    HRESULT (STDMETHODCALLTYPE* put_RelativeSizeAdjustment)(__x_ABI_CWindows_CUI_CComposition_CIVisual2* This,
        struct __x_ABI_CWindows_CFoundation_CNumerics_CVector2 value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CComposition_CIVisual2Vtbl;

    interface __x_ABI_CWindows_CUI_CComposition_CIVisual2
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CComposition_CIVisual2Vtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CComposition_CIVisual2;
#endif /* !defined(____x_ABI_CWindows_CUI_CComposition_CIVisual2_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CComposition_CIVisualCollection_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CComposition_CIVisualCollection_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CComposition_CIVisualCollectionVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CComposition_CIVisualCollection* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CComposition_CIVisualCollection* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CComposition_CIVisualCollection* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CComposition_CIVisualCollection* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CComposition_CIVisualCollection* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CComposition_CIVisualCollection* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Count)(__x_ABI_CWindows_CUI_CComposition_CIVisualCollection* This,
        INT32* value);
    HRESULT (STDMETHODCALLTYPE* InsertAbove)(__x_ABI_CWindows_CUI_CComposition_CIVisualCollection* This,
        __x_ABI_CWindows_CUI_CComposition_CIVisual* newChild,
        __x_ABI_CWindows_CUI_CComposition_CIVisual* sibling);
    HRESULT (STDMETHODCALLTYPE* InsertAtBottom)(__x_ABI_CWindows_CUI_CComposition_CIVisualCollection* This,
        __x_ABI_CWindows_CUI_CComposition_CIVisual* newChild);
    HRESULT (STDMETHODCALLTYPE* InsertAtTop)(__x_ABI_CWindows_CUI_CComposition_CIVisualCollection* This,
        __x_ABI_CWindows_CUI_CComposition_CIVisual* newChild);
    HRESULT (STDMETHODCALLTYPE* InsertBelow)(__x_ABI_CWindows_CUI_CComposition_CIVisualCollection* This,
        __x_ABI_CWindows_CUI_CComposition_CIVisual* newChild,
        __x_ABI_CWindows_CUI_CComposition_CIVisual* sibling);
    HRESULT (STDMETHODCALLTYPE* Remove)(__x_ABI_CWindows_CUI_CComposition_CIVisualCollection* This,
        __x_ABI_CWindows_CUI_CComposition_CIVisual* child);
    HRESULT (STDMETHODCALLTYPE* RemoveAll)(__x_ABI_CWindows_CUI_CComposition_CIVisualCollection* This);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CComposition_CIVisualCollectionVtbl;

    interface __x_ABI_CWindows_CUI_CComposition_CIVisualCollection
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CComposition_CIVisualCollectionVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CComposition_CIVisualCollection;
#endif /* !defined(____x_ABI_CWindows_CUI_CComposition_CIVisualCollection_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CComposition_CIVisualElement_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CComposition_CIVisualElement_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CComposition_CIVisualElementVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CComposition_CIVisualElement* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CComposition_CIVisualElement* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CComposition_CIVisualElement* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CComposition_CIVisualElement* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CComposition_CIVisualElement* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CComposition_CIVisualElement* This,
            TrustLevel* trustLevel);
    
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CComposition_CIVisualElementVtbl;

    interface __x_ABI_CWindows_CUI_CComposition_CIVisualElement
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CComposition_CIVisualElementVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CComposition_CIVisualElement;
#endif /* !defined(____x_ABI_CWindows_CUI_CComposition_CIVisualElement_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CComposition_CIVisualFactory_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CComposition_CIVisualFactory_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CComposition_CIVisualFactoryVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CComposition_CIVisualFactory* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CComposition_CIVisualFactory* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CComposition_CIVisualFactory* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CComposition_CIVisualFactory* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CComposition_CIVisualFactory* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CComposition_CIVisualFactory* This,
            TrustLevel* trustLevel);
    
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CComposition_CIVisualFactoryVtbl;

    interface __x_ABI_CWindows_CUI_CComposition_CIVisualFactory
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CComposition_CIVisualFactoryVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CComposition_CIVisualFactory;
#endif /* !defined(____x_ABI_CWindows_CUI_CComposition_CIVisualFactory_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CComposition_CIVisualUnorderedCollection_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CComposition_CIVisualUnorderedCollection_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CComposition_CIVisualUnorderedCollectionVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CComposition_CIVisualUnorderedCollection* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CComposition_CIVisualUnorderedCollection* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CComposition_CIVisualUnorderedCollection* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CComposition_CIVisualUnorderedCollection* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CComposition_CIVisualUnorderedCollection* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CComposition_CIVisualUnorderedCollection* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Count)(__x_ABI_CWindows_CUI_CComposition_CIVisualUnorderedCollection* This,
        INT32* value);
    HRESULT (STDMETHODCALLTYPE* Add)(__x_ABI_CWindows_CUI_CComposition_CIVisualUnorderedCollection* This,
        __x_ABI_CWindows_CUI_CComposition_CIVisual* newVisual);
    HRESULT (STDMETHODCALLTYPE* Remove)(__x_ABI_CWindows_CUI_CComposition_CIVisualUnorderedCollection* This,
        __x_ABI_CWindows_CUI_CComposition_CIVisual* visual);
    HRESULT (STDMETHODCALLTYPE* RemoveAll)(__x_ABI_CWindows_CUI_CComposition_CIVisualUnorderedCollection* This);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CComposition_CIVisualUnorderedCollectionVtbl;

    interface __x_ABI_CWindows_CUI_CComposition_CIVisualUnorderedCollection
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CComposition_CIVisualUnorderedCollectionVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CComposition_CIVisualUnorderedCollection;
#endif /* !defined(____x_ABI_CWindows_CUI_CComposition_CIVisualUnorderedCollection_INTERFACE_DEFINED__) */
    
