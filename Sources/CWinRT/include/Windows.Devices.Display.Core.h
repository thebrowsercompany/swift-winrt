// WARNING: Please don't edit this file. It was generated by Swift/WinRT v0.0.1

#pragma once
// Header files for imported files
#include <inspectable.h>
#include <EventToken.h>
#include <windowscontracts.h>
#include "Windows.Foundation.h"
#include "Windows.Devices.Display.h"
#include "Windows.Foundation.Numerics.h"
#include "Windows.Graphics.h"
#include "Windows.Graphics.DirectX.h"
#include "Windows.Graphics.DirectX.Direct3D11.h"
#include "Windows.Storage.Streams.h"
// Importing Collections header
#include "Windows.Foundation.Collections.h"

/* Forward Declarations */
#ifndef ____x_ABI_CWindows_CDevices_CDisplay_CCore_CIDisplayAdapter_FWD_DEFINED__
#define ____x_ABI_CWindows_CDevices_CDisplay_CCore_CIDisplayAdapter_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CDevices_CDisplay_CCore_CIDisplayAdapter __x_ABI_CWindows_CDevices_CDisplay_CCore_CIDisplayAdapter;

#endif // ____x_ABI_CWindows_CDevices_CDisplay_CCore_CIDisplayAdapter_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CDevices_CDisplay_CCore_CIDisplayAdapterStatics_FWD_DEFINED__
#define ____x_ABI_CWindows_CDevices_CDisplay_CCore_CIDisplayAdapterStatics_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CDevices_CDisplay_CCore_CIDisplayAdapterStatics __x_ABI_CWindows_CDevices_CDisplay_CCore_CIDisplayAdapterStatics;

#endif // ____x_ABI_CWindows_CDevices_CDisplay_CCore_CIDisplayAdapterStatics_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CDevices_CDisplay_CCore_CIDisplayDevice_FWD_DEFINED__
#define ____x_ABI_CWindows_CDevices_CDisplay_CCore_CIDisplayDevice_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CDevices_CDisplay_CCore_CIDisplayDevice __x_ABI_CWindows_CDevices_CDisplay_CCore_CIDisplayDevice;

#endif // ____x_ABI_CWindows_CDevices_CDisplay_CCore_CIDisplayDevice_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CDevices_CDisplay_CCore_CIDisplayFence_FWD_DEFINED__
#define ____x_ABI_CWindows_CDevices_CDisplay_CCore_CIDisplayFence_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CDevices_CDisplay_CCore_CIDisplayFence __x_ABI_CWindows_CDevices_CDisplay_CCore_CIDisplayFence;

#endif // ____x_ABI_CWindows_CDevices_CDisplay_CCore_CIDisplayFence_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CDevices_CDisplay_CCore_CIDisplayManager_FWD_DEFINED__
#define ____x_ABI_CWindows_CDevices_CDisplay_CCore_CIDisplayManager_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CDevices_CDisplay_CCore_CIDisplayManager __x_ABI_CWindows_CDevices_CDisplay_CCore_CIDisplayManager;

#endif // ____x_ABI_CWindows_CDevices_CDisplay_CCore_CIDisplayManager_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CDevices_CDisplay_CCore_CIDisplayManagerChangedEventArgs_FWD_DEFINED__
#define ____x_ABI_CWindows_CDevices_CDisplay_CCore_CIDisplayManagerChangedEventArgs_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CDevices_CDisplay_CCore_CIDisplayManagerChangedEventArgs __x_ABI_CWindows_CDevices_CDisplay_CCore_CIDisplayManagerChangedEventArgs;

#endif // ____x_ABI_CWindows_CDevices_CDisplay_CCore_CIDisplayManagerChangedEventArgs_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CDevices_CDisplay_CCore_CIDisplayManagerDisabledEventArgs_FWD_DEFINED__
#define ____x_ABI_CWindows_CDevices_CDisplay_CCore_CIDisplayManagerDisabledEventArgs_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CDevices_CDisplay_CCore_CIDisplayManagerDisabledEventArgs __x_ABI_CWindows_CDevices_CDisplay_CCore_CIDisplayManagerDisabledEventArgs;

#endif // ____x_ABI_CWindows_CDevices_CDisplay_CCore_CIDisplayManagerDisabledEventArgs_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CDevices_CDisplay_CCore_CIDisplayManagerEnabledEventArgs_FWD_DEFINED__
#define ____x_ABI_CWindows_CDevices_CDisplay_CCore_CIDisplayManagerEnabledEventArgs_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CDevices_CDisplay_CCore_CIDisplayManagerEnabledEventArgs __x_ABI_CWindows_CDevices_CDisplay_CCore_CIDisplayManagerEnabledEventArgs;

#endif // ____x_ABI_CWindows_CDevices_CDisplay_CCore_CIDisplayManagerEnabledEventArgs_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CDevices_CDisplay_CCore_CIDisplayManagerPathsFailedOrInvalidatedEventArgs_FWD_DEFINED__
#define ____x_ABI_CWindows_CDevices_CDisplay_CCore_CIDisplayManagerPathsFailedOrInvalidatedEventArgs_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CDevices_CDisplay_CCore_CIDisplayManagerPathsFailedOrInvalidatedEventArgs __x_ABI_CWindows_CDevices_CDisplay_CCore_CIDisplayManagerPathsFailedOrInvalidatedEventArgs;

#endif // ____x_ABI_CWindows_CDevices_CDisplay_CCore_CIDisplayManagerPathsFailedOrInvalidatedEventArgs_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CDevices_CDisplay_CCore_CIDisplayManagerResultWithState_FWD_DEFINED__
#define ____x_ABI_CWindows_CDevices_CDisplay_CCore_CIDisplayManagerResultWithState_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CDevices_CDisplay_CCore_CIDisplayManagerResultWithState __x_ABI_CWindows_CDevices_CDisplay_CCore_CIDisplayManagerResultWithState;

#endif // ____x_ABI_CWindows_CDevices_CDisplay_CCore_CIDisplayManagerResultWithState_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CDevices_CDisplay_CCore_CIDisplayManagerStatics_FWD_DEFINED__
#define ____x_ABI_CWindows_CDevices_CDisplay_CCore_CIDisplayManagerStatics_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CDevices_CDisplay_CCore_CIDisplayManagerStatics __x_ABI_CWindows_CDevices_CDisplay_CCore_CIDisplayManagerStatics;

#endif // ____x_ABI_CWindows_CDevices_CDisplay_CCore_CIDisplayManagerStatics_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CDevices_CDisplay_CCore_CIDisplayModeInfo_FWD_DEFINED__
#define ____x_ABI_CWindows_CDevices_CDisplay_CCore_CIDisplayModeInfo_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CDevices_CDisplay_CCore_CIDisplayModeInfo __x_ABI_CWindows_CDevices_CDisplay_CCore_CIDisplayModeInfo;

#endif // ____x_ABI_CWindows_CDevices_CDisplay_CCore_CIDisplayModeInfo_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CDevices_CDisplay_CCore_CIDisplayPath_FWD_DEFINED__
#define ____x_ABI_CWindows_CDevices_CDisplay_CCore_CIDisplayPath_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CDevices_CDisplay_CCore_CIDisplayPath __x_ABI_CWindows_CDevices_CDisplay_CCore_CIDisplayPath;

#endif // ____x_ABI_CWindows_CDevices_CDisplay_CCore_CIDisplayPath_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CDevices_CDisplay_CCore_CIDisplayPrimaryDescription_FWD_DEFINED__
#define ____x_ABI_CWindows_CDevices_CDisplay_CCore_CIDisplayPrimaryDescription_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CDevices_CDisplay_CCore_CIDisplayPrimaryDescription __x_ABI_CWindows_CDevices_CDisplay_CCore_CIDisplayPrimaryDescription;

#endif // ____x_ABI_CWindows_CDevices_CDisplay_CCore_CIDisplayPrimaryDescription_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CDevices_CDisplay_CCore_CIDisplayPrimaryDescriptionFactory_FWD_DEFINED__
#define ____x_ABI_CWindows_CDevices_CDisplay_CCore_CIDisplayPrimaryDescriptionFactory_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CDevices_CDisplay_CCore_CIDisplayPrimaryDescriptionFactory __x_ABI_CWindows_CDevices_CDisplay_CCore_CIDisplayPrimaryDescriptionFactory;

#endif // ____x_ABI_CWindows_CDevices_CDisplay_CCore_CIDisplayPrimaryDescriptionFactory_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CDevices_CDisplay_CCore_CIDisplayPrimaryDescriptionStatics_FWD_DEFINED__
#define ____x_ABI_CWindows_CDevices_CDisplay_CCore_CIDisplayPrimaryDescriptionStatics_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CDevices_CDisplay_CCore_CIDisplayPrimaryDescriptionStatics __x_ABI_CWindows_CDevices_CDisplay_CCore_CIDisplayPrimaryDescriptionStatics;

#endif // ____x_ABI_CWindows_CDevices_CDisplay_CCore_CIDisplayPrimaryDescriptionStatics_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CDevices_CDisplay_CCore_CIDisplayScanout_FWD_DEFINED__
#define ____x_ABI_CWindows_CDevices_CDisplay_CCore_CIDisplayScanout_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CDevices_CDisplay_CCore_CIDisplayScanout __x_ABI_CWindows_CDevices_CDisplay_CCore_CIDisplayScanout;

#endif // ____x_ABI_CWindows_CDevices_CDisplay_CCore_CIDisplayScanout_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CDevices_CDisplay_CCore_CIDisplaySource_FWD_DEFINED__
#define ____x_ABI_CWindows_CDevices_CDisplay_CCore_CIDisplaySource_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CDevices_CDisplay_CCore_CIDisplaySource __x_ABI_CWindows_CDevices_CDisplay_CCore_CIDisplaySource;

#endif // ____x_ABI_CWindows_CDevices_CDisplay_CCore_CIDisplaySource_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CDevices_CDisplay_CCore_CIDisplayState_FWD_DEFINED__
#define ____x_ABI_CWindows_CDevices_CDisplay_CCore_CIDisplayState_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CDevices_CDisplay_CCore_CIDisplayState __x_ABI_CWindows_CDevices_CDisplay_CCore_CIDisplayState;

#endif // ____x_ABI_CWindows_CDevices_CDisplay_CCore_CIDisplayState_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CDevices_CDisplay_CCore_CIDisplayStateOperationResult_FWD_DEFINED__
#define ____x_ABI_CWindows_CDevices_CDisplay_CCore_CIDisplayStateOperationResult_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CDevices_CDisplay_CCore_CIDisplayStateOperationResult __x_ABI_CWindows_CDevices_CDisplay_CCore_CIDisplayStateOperationResult;

#endif // ____x_ABI_CWindows_CDevices_CDisplay_CCore_CIDisplayStateOperationResult_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CDevices_CDisplay_CCore_CIDisplaySurface_FWD_DEFINED__
#define ____x_ABI_CWindows_CDevices_CDisplay_CCore_CIDisplaySurface_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CDevices_CDisplay_CCore_CIDisplaySurface __x_ABI_CWindows_CDevices_CDisplay_CCore_CIDisplaySurface;

#endif // ____x_ABI_CWindows_CDevices_CDisplay_CCore_CIDisplaySurface_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CDevices_CDisplay_CCore_CIDisplayTarget_FWD_DEFINED__
#define ____x_ABI_CWindows_CDevices_CDisplay_CCore_CIDisplayTarget_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CDevices_CDisplay_CCore_CIDisplayTarget __x_ABI_CWindows_CDevices_CDisplay_CCore_CIDisplayTarget;

#endif // ____x_ABI_CWindows_CDevices_CDisplay_CCore_CIDisplayTarget_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CDevices_CDisplay_CCore_CIDisplayTask_FWD_DEFINED__
#define ____x_ABI_CWindows_CDevices_CDisplay_CCore_CIDisplayTask_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CDevices_CDisplay_CCore_CIDisplayTask __x_ABI_CWindows_CDevices_CDisplay_CCore_CIDisplayTask;

#endif // ____x_ABI_CWindows_CDevices_CDisplay_CCore_CIDisplayTask_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CDevices_CDisplay_CCore_CIDisplayTaskPool_FWD_DEFINED__
#define ____x_ABI_CWindows_CDevices_CDisplay_CCore_CIDisplayTaskPool_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CDevices_CDisplay_CCore_CIDisplayTaskPool __x_ABI_CWindows_CDevices_CDisplay_CCore_CIDisplayTaskPool;

#endif // ____x_ABI_CWindows_CDevices_CDisplay_CCore_CIDisplayTaskPool_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CDevices_CDisplay_CCore_CIDisplayView_FWD_DEFINED__
#define ____x_ABI_CWindows_CDevices_CDisplay_CCore_CIDisplayView_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CDevices_CDisplay_CCore_CIDisplayView __x_ABI_CWindows_CDevices_CDisplay_CCore_CIDisplayView;

#endif // ____x_ABI_CWindows_CDevices_CDisplay_CCore_CIDisplayView_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CDevices_CDisplay_CCore_CIDisplayWireFormat_FWD_DEFINED__
#define ____x_ABI_CWindows_CDevices_CDisplay_CCore_CIDisplayWireFormat_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CDevices_CDisplay_CCore_CIDisplayWireFormat __x_ABI_CWindows_CDevices_CDisplay_CCore_CIDisplayWireFormat;

#endif // ____x_ABI_CWindows_CDevices_CDisplay_CCore_CIDisplayWireFormat_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CDevices_CDisplay_CCore_CIDisplayWireFormatFactory_FWD_DEFINED__
#define ____x_ABI_CWindows_CDevices_CDisplay_CCore_CIDisplayWireFormatFactory_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CDevices_CDisplay_CCore_CIDisplayWireFormatFactory __x_ABI_CWindows_CDevices_CDisplay_CCore_CIDisplayWireFormatFactory;

#endif // ____x_ABI_CWindows_CDevices_CDisplay_CCore_CIDisplayWireFormatFactory_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CDevices_CDisplay_CCore_CIDisplayWireFormatStatics_FWD_DEFINED__
#define ____x_ABI_CWindows_CDevices_CDisplay_CCore_CIDisplayWireFormatStatics_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CDevices_CDisplay_CCore_CIDisplayWireFormatStatics __x_ABI_CWindows_CDevices_CDisplay_CCore_CIDisplayWireFormatStatics;

#endif // ____x_ABI_CWindows_CDevices_CDisplay_CCore_CIDisplayWireFormatStatics_FWD_DEFINED__

// Parameterized interface forward declarations (C)

// Collection interface definitions

#if !defined(____x_ABI_C__FIIterator_1___x_ABI_CWindows__CDevices__CDisplay__CCore__CDisplayAdapter_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIIterator_1___x_ABI_CWindows__CDevices__CDisplay__CCore__CDisplayAdapter_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIIterator_1___x_ABI_CWindows__CDevices__CDisplay__CCore__CDisplayAdapter __x_ABI_C__FIIterator_1___x_ABI_CWindows__CDevices__CDisplay__CCore__CDisplayAdapter;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIIterator_1___x_ABI_CWindows__CDevices__CDisplay__CCore__CDisplayAdapter;

    typedef struct __x_ABI_C__FIIterator_1___x_ABI_CWindows__CDevices__CDisplay__CCore__CDisplayAdapterVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CDevices__CDisplay__CCore__CDisplayAdapter* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CDevices__CDisplay__CCore__CDisplayAdapter* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CDevices__CDisplay__CCore__CDisplayAdapter* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CDevices__CDisplay__CCore__CDisplayAdapter* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CDevices__CDisplay__CCore__CDisplayAdapter* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CDevices__CDisplay__CCore__CDisplayAdapter* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Current)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CDevices__CDisplay__CCore__CDisplayAdapter* This,
        __x_ABI_CWindows_CDevices_CDisplay_CCore_CIDisplayAdapter** result);
    HRESULT (STDMETHODCALLTYPE* get_HasCurrent)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CDevices__CDisplay__CCore__CDisplayAdapter* This,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* MoveNext)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CDevices__CDisplay__CCore__CDisplayAdapter* This,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CDevices__CDisplay__CCore__CDisplayAdapter* This,
        UINT32 itemsLength,
        __x_ABI_CWindows_CDevices_CDisplay_CCore_CIDisplayAdapter** items,
        UINT32* result);

        END_INTERFACE
    } __x_ABI_C__FIIterator_1___x_ABI_CWindows__CDevices__CDisplay__CCore__CDisplayAdapterVtbl;

    interface __x_ABI_C__FIIterator_1___x_ABI_CWindows__CDevices__CDisplay__CCore__CDisplayAdapter
    {
        CONST_VTBL struct __x_ABI_C__FIIterator_1___x_ABI_CWindows__CDevices__CDisplay__CCore__CDisplayAdapterVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIIterator_1___x_ABI_CWindows__CDevices__CDisplay__CCore__CDisplayAdapter_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIIterable_1___x_ABI_CWindows__CDevices__CDisplay__CCore__CDisplayAdapter_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIIterable_1___x_ABI_CWindows__CDevices__CDisplay__CCore__CDisplayAdapter_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIIterable_1___x_ABI_CWindows__CDevices__CDisplay__CCore__CDisplayAdapter __x_ABI_C__FIIterable_1___x_ABI_CWindows__CDevices__CDisplay__CCore__CDisplayAdapter;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIIterable_1___x_ABI_CWindows__CDevices__CDisplay__CCore__CDisplayAdapter;

    typedef struct __x_ABI_C__FIIterable_1___x_ABI_CWindows__CDevices__CDisplay__CCore__CDisplayAdapterVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CDevices__CDisplay__CCore__CDisplayAdapter* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CDevices__CDisplay__CCore__CDisplayAdapter* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CDevices__CDisplay__CCore__CDisplayAdapter* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CDevices__CDisplay__CCore__CDisplayAdapter* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CDevices__CDisplay__CCore__CDisplayAdapter* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CDevices__CDisplay__CCore__CDisplayAdapter* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* First)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CDevices__CDisplay__CCore__CDisplayAdapter* This,
        __x_ABI_C__FIIterator_1___x_ABI_CWindows__CDevices__CDisplay__CCore__CDisplayAdapter** result);

        END_INTERFACE
    } __x_ABI_C__FIIterable_1___x_ABI_CWindows__CDevices__CDisplay__CCore__CDisplayAdapterVtbl;

    interface __x_ABI_C__FIIterable_1___x_ABI_CWindows__CDevices__CDisplay__CCore__CDisplayAdapter
    {
        CONST_VTBL struct __x_ABI_C__FIIterable_1___x_ABI_CWindows__CDevices__CDisplay__CCore__CDisplayAdapterVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIIterable_1___x_ABI_CWindows__CDevices__CDisplay__CCore__CDisplayAdapter_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIIterator_1___x_ABI_CWindows__CDevices__CDisplay__CCore__CDisplayModeInfo_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIIterator_1___x_ABI_CWindows__CDevices__CDisplay__CCore__CDisplayModeInfo_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIIterator_1___x_ABI_CWindows__CDevices__CDisplay__CCore__CDisplayModeInfo __x_ABI_C__FIIterator_1___x_ABI_CWindows__CDevices__CDisplay__CCore__CDisplayModeInfo;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIIterator_1___x_ABI_CWindows__CDevices__CDisplay__CCore__CDisplayModeInfo;

    typedef struct __x_ABI_C__FIIterator_1___x_ABI_CWindows__CDevices__CDisplay__CCore__CDisplayModeInfoVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CDevices__CDisplay__CCore__CDisplayModeInfo* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CDevices__CDisplay__CCore__CDisplayModeInfo* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CDevices__CDisplay__CCore__CDisplayModeInfo* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CDevices__CDisplay__CCore__CDisplayModeInfo* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CDevices__CDisplay__CCore__CDisplayModeInfo* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CDevices__CDisplay__CCore__CDisplayModeInfo* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Current)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CDevices__CDisplay__CCore__CDisplayModeInfo* This,
        __x_ABI_CWindows_CDevices_CDisplay_CCore_CIDisplayModeInfo** result);
    HRESULT (STDMETHODCALLTYPE* get_HasCurrent)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CDevices__CDisplay__CCore__CDisplayModeInfo* This,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* MoveNext)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CDevices__CDisplay__CCore__CDisplayModeInfo* This,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CDevices__CDisplay__CCore__CDisplayModeInfo* This,
        UINT32 itemsLength,
        __x_ABI_CWindows_CDevices_CDisplay_CCore_CIDisplayModeInfo** items,
        UINT32* result);

        END_INTERFACE
    } __x_ABI_C__FIIterator_1___x_ABI_CWindows__CDevices__CDisplay__CCore__CDisplayModeInfoVtbl;

    interface __x_ABI_C__FIIterator_1___x_ABI_CWindows__CDevices__CDisplay__CCore__CDisplayModeInfo
    {
        CONST_VTBL struct __x_ABI_C__FIIterator_1___x_ABI_CWindows__CDevices__CDisplay__CCore__CDisplayModeInfoVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIIterator_1___x_ABI_CWindows__CDevices__CDisplay__CCore__CDisplayModeInfo_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIIterable_1___x_ABI_CWindows__CDevices__CDisplay__CCore__CDisplayModeInfo_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIIterable_1___x_ABI_CWindows__CDevices__CDisplay__CCore__CDisplayModeInfo_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIIterable_1___x_ABI_CWindows__CDevices__CDisplay__CCore__CDisplayModeInfo __x_ABI_C__FIIterable_1___x_ABI_CWindows__CDevices__CDisplay__CCore__CDisplayModeInfo;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIIterable_1___x_ABI_CWindows__CDevices__CDisplay__CCore__CDisplayModeInfo;

    typedef struct __x_ABI_C__FIIterable_1___x_ABI_CWindows__CDevices__CDisplay__CCore__CDisplayModeInfoVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CDevices__CDisplay__CCore__CDisplayModeInfo* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CDevices__CDisplay__CCore__CDisplayModeInfo* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CDevices__CDisplay__CCore__CDisplayModeInfo* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CDevices__CDisplay__CCore__CDisplayModeInfo* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CDevices__CDisplay__CCore__CDisplayModeInfo* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CDevices__CDisplay__CCore__CDisplayModeInfo* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* First)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CDevices__CDisplay__CCore__CDisplayModeInfo* This,
        __x_ABI_C__FIIterator_1___x_ABI_CWindows__CDevices__CDisplay__CCore__CDisplayModeInfo** result);

        END_INTERFACE
    } __x_ABI_C__FIIterable_1___x_ABI_CWindows__CDevices__CDisplay__CCore__CDisplayModeInfoVtbl;

    interface __x_ABI_C__FIIterable_1___x_ABI_CWindows__CDevices__CDisplay__CCore__CDisplayModeInfo
    {
        CONST_VTBL struct __x_ABI_C__FIIterable_1___x_ABI_CWindows__CDevices__CDisplay__CCore__CDisplayModeInfoVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIIterable_1___x_ABI_CWindows__CDevices__CDisplay__CCore__CDisplayModeInfo_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIIterator_1___x_ABI_CWindows__CDevices__CDisplay__CCore__CDisplayPath_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIIterator_1___x_ABI_CWindows__CDevices__CDisplay__CCore__CDisplayPath_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIIterator_1___x_ABI_CWindows__CDevices__CDisplay__CCore__CDisplayPath __x_ABI_C__FIIterator_1___x_ABI_CWindows__CDevices__CDisplay__CCore__CDisplayPath;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIIterator_1___x_ABI_CWindows__CDevices__CDisplay__CCore__CDisplayPath;

    typedef struct __x_ABI_C__FIIterator_1___x_ABI_CWindows__CDevices__CDisplay__CCore__CDisplayPathVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CDevices__CDisplay__CCore__CDisplayPath* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CDevices__CDisplay__CCore__CDisplayPath* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CDevices__CDisplay__CCore__CDisplayPath* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CDevices__CDisplay__CCore__CDisplayPath* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CDevices__CDisplay__CCore__CDisplayPath* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CDevices__CDisplay__CCore__CDisplayPath* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Current)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CDevices__CDisplay__CCore__CDisplayPath* This,
        __x_ABI_CWindows_CDevices_CDisplay_CCore_CIDisplayPath** result);
    HRESULT (STDMETHODCALLTYPE* get_HasCurrent)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CDevices__CDisplay__CCore__CDisplayPath* This,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* MoveNext)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CDevices__CDisplay__CCore__CDisplayPath* This,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CDevices__CDisplay__CCore__CDisplayPath* This,
        UINT32 itemsLength,
        __x_ABI_CWindows_CDevices_CDisplay_CCore_CIDisplayPath** items,
        UINT32* result);

        END_INTERFACE
    } __x_ABI_C__FIIterator_1___x_ABI_CWindows__CDevices__CDisplay__CCore__CDisplayPathVtbl;

    interface __x_ABI_C__FIIterator_1___x_ABI_CWindows__CDevices__CDisplay__CCore__CDisplayPath
    {
        CONST_VTBL struct __x_ABI_C__FIIterator_1___x_ABI_CWindows__CDevices__CDisplay__CCore__CDisplayPathVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIIterator_1___x_ABI_CWindows__CDevices__CDisplay__CCore__CDisplayPath_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIIterable_1___x_ABI_CWindows__CDevices__CDisplay__CCore__CDisplayPath_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIIterable_1___x_ABI_CWindows__CDevices__CDisplay__CCore__CDisplayPath_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIIterable_1___x_ABI_CWindows__CDevices__CDisplay__CCore__CDisplayPath __x_ABI_C__FIIterable_1___x_ABI_CWindows__CDevices__CDisplay__CCore__CDisplayPath;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIIterable_1___x_ABI_CWindows__CDevices__CDisplay__CCore__CDisplayPath;

    typedef struct __x_ABI_C__FIIterable_1___x_ABI_CWindows__CDevices__CDisplay__CCore__CDisplayPathVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CDevices__CDisplay__CCore__CDisplayPath* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CDevices__CDisplay__CCore__CDisplayPath* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CDevices__CDisplay__CCore__CDisplayPath* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CDevices__CDisplay__CCore__CDisplayPath* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CDevices__CDisplay__CCore__CDisplayPath* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CDevices__CDisplay__CCore__CDisplayPath* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* First)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CDevices__CDisplay__CCore__CDisplayPath* This,
        __x_ABI_C__FIIterator_1___x_ABI_CWindows__CDevices__CDisplay__CCore__CDisplayPath** result);

        END_INTERFACE
    } __x_ABI_C__FIIterable_1___x_ABI_CWindows__CDevices__CDisplay__CCore__CDisplayPathVtbl;

    interface __x_ABI_C__FIIterable_1___x_ABI_CWindows__CDevices__CDisplay__CCore__CDisplayPath
    {
        CONST_VTBL struct __x_ABI_C__FIIterable_1___x_ABI_CWindows__CDevices__CDisplay__CCore__CDisplayPathVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIIterable_1___x_ABI_CWindows__CDevices__CDisplay__CCore__CDisplayPath_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIIterator_1___x_ABI_CWindows__CDevices__CDisplay__CCore__CDisplayTarget_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIIterator_1___x_ABI_CWindows__CDevices__CDisplay__CCore__CDisplayTarget_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIIterator_1___x_ABI_CWindows__CDevices__CDisplay__CCore__CDisplayTarget __x_ABI_C__FIIterator_1___x_ABI_CWindows__CDevices__CDisplay__CCore__CDisplayTarget;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIIterator_1___x_ABI_CWindows__CDevices__CDisplay__CCore__CDisplayTarget;

    typedef struct __x_ABI_C__FIIterator_1___x_ABI_CWindows__CDevices__CDisplay__CCore__CDisplayTargetVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CDevices__CDisplay__CCore__CDisplayTarget* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CDevices__CDisplay__CCore__CDisplayTarget* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CDevices__CDisplay__CCore__CDisplayTarget* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CDevices__CDisplay__CCore__CDisplayTarget* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CDevices__CDisplay__CCore__CDisplayTarget* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CDevices__CDisplay__CCore__CDisplayTarget* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Current)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CDevices__CDisplay__CCore__CDisplayTarget* This,
        __x_ABI_CWindows_CDevices_CDisplay_CCore_CIDisplayTarget** result);
    HRESULT (STDMETHODCALLTYPE* get_HasCurrent)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CDevices__CDisplay__CCore__CDisplayTarget* This,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* MoveNext)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CDevices__CDisplay__CCore__CDisplayTarget* This,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CDevices__CDisplay__CCore__CDisplayTarget* This,
        UINT32 itemsLength,
        __x_ABI_CWindows_CDevices_CDisplay_CCore_CIDisplayTarget** items,
        UINT32* result);

        END_INTERFACE
    } __x_ABI_C__FIIterator_1___x_ABI_CWindows__CDevices__CDisplay__CCore__CDisplayTargetVtbl;

    interface __x_ABI_C__FIIterator_1___x_ABI_CWindows__CDevices__CDisplay__CCore__CDisplayTarget
    {
        CONST_VTBL struct __x_ABI_C__FIIterator_1___x_ABI_CWindows__CDevices__CDisplay__CCore__CDisplayTargetVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIIterator_1___x_ABI_CWindows__CDevices__CDisplay__CCore__CDisplayTarget_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIIterable_1___x_ABI_CWindows__CDevices__CDisplay__CCore__CDisplayTarget_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIIterable_1___x_ABI_CWindows__CDevices__CDisplay__CCore__CDisplayTarget_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIIterable_1___x_ABI_CWindows__CDevices__CDisplay__CCore__CDisplayTarget __x_ABI_C__FIIterable_1___x_ABI_CWindows__CDevices__CDisplay__CCore__CDisplayTarget;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIIterable_1___x_ABI_CWindows__CDevices__CDisplay__CCore__CDisplayTarget;

    typedef struct __x_ABI_C__FIIterable_1___x_ABI_CWindows__CDevices__CDisplay__CCore__CDisplayTargetVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CDevices__CDisplay__CCore__CDisplayTarget* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CDevices__CDisplay__CCore__CDisplayTarget* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CDevices__CDisplay__CCore__CDisplayTarget* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CDevices__CDisplay__CCore__CDisplayTarget* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CDevices__CDisplay__CCore__CDisplayTarget* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CDevices__CDisplay__CCore__CDisplayTarget* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* First)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CDevices__CDisplay__CCore__CDisplayTarget* This,
        __x_ABI_C__FIIterator_1___x_ABI_CWindows__CDevices__CDisplay__CCore__CDisplayTarget** result);

        END_INTERFACE
    } __x_ABI_C__FIIterable_1___x_ABI_CWindows__CDevices__CDisplay__CCore__CDisplayTargetVtbl;

    interface __x_ABI_C__FIIterable_1___x_ABI_CWindows__CDevices__CDisplay__CCore__CDisplayTarget
    {
        CONST_VTBL struct __x_ABI_C__FIIterable_1___x_ABI_CWindows__CDevices__CDisplay__CCore__CDisplayTargetVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIIterable_1___x_ABI_CWindows__CDevices__CDisplay__CCore__CDisplayTarget_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIIterator_1___x_ABI_CWindows__CDevices__CDisplay__CCore__CDisplayView_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIIterator_1___x_ABI_CWindows__CDevices__CDisplay__CCore__CDisplayView_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIIterator_1___x_ABI_CWindows__CDevices__CDisplay__CCore__CDisplayView __x_ABI_C__FIIterator_1___x_ABI_CWindows__CDevices__CDisplay__CCore__CDisplayView;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIIterator_1___x_ABI_CWindows__CDevices__CDisplay__CCore__CDisplayView;

    typedef struct __x_ABI_C__FIIterator_1___x_ABI_CWindows__CDevices__CDisplay__CCore__CDisplayViewVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CDevices__CDisplay__CCore__CDisplayView* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CDevices__CDisplay__CCore__CDisplayView* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CDevices__CDisplay__CCore__CDisplayView* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CDevices__CDisplay__CCore__CDisplayView* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CDevices__CDisplay__CCore__CDisplayView* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CDevices__CDisplay__CCore__CDisplayView* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Current)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CDevices__CDisplay__CCore__CDisplayView* This,
        __x_ABI_CWindows_CDevices_CDisplay_CCore_CIDisplayView** result);
    HRESULT (STDMETHODCALLTYPE* get_HasCurrent)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CDevices__CDisplay__CCore__CDisplayView* This,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* MoveNext)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CDevices__CDisplay__CCore__CDisplayView* This,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CDevices__CDisplay__CCore__CDisplayView* This,
        UINT32 itemsLength,
        __x_ABI_CWindows_CDevices_CDisplay_CCore_CIDisplayView** items,
        UINT32* result);

        END_INTERFACE
    } __x_ABI_C__FIIterator_1___x_ABI_CWindows__CDevices__CDisplay__CCore__CDisplayViewVtbl;

    interface __x_ABI_C__FIIterator_1___x_ABI_CWindows__CDevices__CDisplay__CCore__CDisplayView
    {
        CONST_VTBL struct __x_ABI_C__FIIterator_1___x_ABI_CWindows__CDevices__CDisplay__CCore__CDisplayViewVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIIterator_1___x_ABI_CWindows__CDevices__CDisplay__CCore__CDisplayView_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIIterable_1___x_ABI_CWindows__CDevices__CDisplay__CCore__CDisplayView_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIIterable_1___x_ABI_CWindows__CDevices__CDisplay__CCore__CDisplayView_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIIterable_1___x_ABI_CWindows__CDevices__CDisplay__CCore__CDisplayView __x_ABI_C__FIIterable_1___x_ABI_CWindows__CDevices__CDisplay__CCore__CDisplayView;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIIterable_1___x_ABI_CWindows__CDevices__CDisplay__CCore__CDisplayView;

    typedef struct __x_ABI_C__FIIterable_1___x_ABI_CWindows__CDevices__CDisplay__CCore__CDisplayViewVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CDevices__CDisplay__CCore__CDisplayView* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CDevices__CDisplay__CCore__CDisplayView* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CDevices__CDisplay__CCore__CDisplayView* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CDevices__CDisplay__CCore__CDisplayView* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CDevices__CDisplay__CCore__CDisplayView* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CDevices__CDisplay__CCore__CDisplayView* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* First)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CDevices__CDisplay__CCore__CDisplayView* This,
        __x_ABI_C__FIIterator_1___x_ABI_CWindows__CDevices__CDisplay__CCore__CDisplayView** result);

        END_INTERFACE
    } __x_ABI_C__FIIterable_1___x_ABI_CWindows__CDevices__CDisplay__CCore__CDisplayViewVtbl;

    interface __x_ABI_C__FIIterable_1___x_ABI_CWindows__CDevices__CDisplay__CCore__CDisplayView
    {
        CONST_VTBL struct __x_ABI_C__FIIterable_1___x_ABI_CWindows__CDevices__CDisplay__CCore__CDisplayViewVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIIterable_1___x_ABI_CWindows__CDevices__CDisplay__CCore__CDisplayView_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIKeyValuePair_2_GUID_IInspectable_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIKeyValuePair_2_GUID_IInspectable_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIKeyValuePair_2_GUID_IInspectable __x_ABI_C__FIKeyValuePair_2_GUID_IInspectable;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIKeyValuePair_2_GUID_IInspectable;

    typedef struct __x_ABI_C__FIKeyValuePair_2_GUID_IInspectableVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIKeyValuePair_2_GUID_IInspectable* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIKeyValuePair_2_GUID_IInspectable* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIKeyValuePair_2_GUID_IInspectable* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIKeyValuePair_2_GUID_IInspectable* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIKeyValuePair_2_GUID_IInspectable* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIKeyValuePair_2_GUID_IInspectable* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Key)(__x_ABI_C__FIKeyValuePair_2_GUID_IInspectable* This,
        GUID* result);
    HRESULT (STDMETHODCALLTYPE* get_Value)(__x_ABI_C__FIKeyValuePair_2_GUID_IInspectable* This,
        IInspectable** result);

        END_INTERFACE
    } __x_ABI_C__FIKeyValuePair_2_GUID_IInspectableVtbl;

    interface __x_ABI_C__FIKeyValuePair_2_GUID_IInspectable
    {
        CONST_VTBL struct __x_ABI_C__FIKeyValuePair_2_GUID_IInspectableVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIKeyValuePair_2_GUID_IInspectable_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2_GUID_IInspectable_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2_GUID_IInspectable_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2_GUID_IInspectable __x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2_GUID_IInspectable;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2_GUID_IInspectable;

    typedef struct __x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2_GUID_IInspectableVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2_GUID_IInspectable* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2_GUID_IInspectable* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2_GUID_IInspectable* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2_GUID_IInspectable* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2_GUID_IInspectable* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2_GUID_IInspectable* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Current)(__x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2_GUID_IInspectable* This,
        __x_ABI_C__FIKeyValuePair_2_GUID_IInspectable** result);
    HRESULT (STDMETHODCALLTYPE* get_HasCurrent)(__x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2_GUID_IInspectable* This,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* MoveNext)(__x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2_GUID_IInspectable* This,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2_GUID_IInspectable* This,
        UINT32 itemsLength,
        __x_ABI_C__FIKeyValuePair_2_GUID_IInspectable** items,
        UINT32* result);

        END_INTERFACE
    } __x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2_GUID_IInspectableVtbl;

    interface __x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2_GUID_IInspectable
    {
        CONST_VTBL struct __x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2_GUID_IInspectableVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2_GUID_IInspectable_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIIterable_1___x_ABI_C__FIKeyValuePair_2_GUID_IInspectable_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIIterable_1___x_ABI_C__FIKeyValuePair_2_GUID_IInspectable_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIIterable_1___x_ABI_C__FIKeyValuePair_2_GUID_IInspectable __x_ABI_C__FIIterable_1___x_ABI_C__FIKeyValuePair_2_GUID_IInspectable;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIIterable_1___x_ABI_C__FIKeyValuePair_2_GUID_IInspectable;

    typedef struct __x_ABI_C__FIIterable_1___x_ABI_C__FIKeyValuePair_2_GUID_IInspectableVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIIterable_1___x_ABI_C__FIKeyValuePair_2_GUID_IInspectable* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIIterable_1___x_ABI_C__FIKeyValuePair_2_GUID_IInspectable* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIIterable_1___x_ABI_C__FIKeyValuePair_2_GUID_IInspectable* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIIterable_1___x_ABI_C__FIKeyValuePair_2_GUID_IInspectable* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIIterable_1___x_ABI_C__FIKeyValuePair_2_GUID_IInspectable* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIIterable_1___x_ABI_C__FIKeyValuePair_2_GUID_IInspectable* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* First)(__x_ABI_C__FIIterable_1___x_ABI_C__FIKeyValuePair_2_GUID_IInspectable* This,
        __x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2_GUID_IInspectable** result);

        END_INTERFACE
    } __x_ABI_C__FIIterable_1___x_ABI_C__FIKeyValuePair_2_GUID_IInspectableVtbl;

    interface __x_ABI_C__FIIterable_1___x_ABI_C__FIKeyValuePair_2_GUID_IInspectable
    {
        CONST_VTBL struct __x_ABI_C__FIIterable_1___x_ABI_C__FIKeyValuePair_2_GUID_IInspectableVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIIterable_1___x_ABI_C__FIKeyValuePair_2_GUID_IInspectable_INTERFACE_DEFINED__
    
typedef interface __x_ABI_C__FIMapView_2_GUID_IInspectable __x_ABI_C__FIMapView_2_GUID_IInspectable;

#if !defined(____x_ABI_C__FIMapView_2_GUID_IInspectable_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIMapView_2_GUID_IInspectable_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIMapView_2_GUID_IInspectable __x_ABI_C__FIMapView_2_GUID_IInspectable;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIMapView_2_GUID_IInspectable;

    typedef struct __x_ABI_C__FIMapView_2_GUID_IInspectableVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIMapView_2_GUID_IInspectable* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIMapView_2_GUID_IInspectable* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIMapView_2_GUID_IInspectable* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIMapView_2_GUID_IInspectable* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIMapView_2_GUID_IInspectable* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIMapView_2_GUID_IInspectable* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* Lookup)(__x_ABI_C__FIMapView_2_GUID_IInspectable* This,
        GUID key,
        IInspectable** result);
    HRESULT (STDMETHODCALLTYPE* get_Size)(__x_ABI_C__FIMapView_2_GUID_IInspectable* This,
        UINT32* result);
    HRESULT (STDMETHODCALLTYPE* HasKey)(__x_ABI_C__FIMapView_2_GUID_IInspectable* This,
        GUID key,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* Split)(__x_ABI_C__FIMapView_2_GUID_IInspectable* This,
        __x_ABI_C__FIMapView_2_GUID_IInspectable** first,
        __x_ABI_C__FIMapView_2_GUID_IInspectable** second);

        END_INTERFACE
    } __x_ABI_C__FIMapView_2_GUID_IInspectableVtbl;

    interface __x_ABI_C__FIMapView_2_GUID_IInspectable
    {
        CONST_VTBL struct __x_ABI_C__FIMapView_2_GUID_IInspectableVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIMapView_2_GUID_IInspectable_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIMap_2_GUID_IInspectable_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIMap_2_GUID_IInspectable_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIMap_2_GUID_IInspectable __x_ABI_C__FIMap_2_GUID_IInspectable;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIMap_2_GUID_IInspectable;

    typedef struct __x_ABI_C__FIMap_2_GUID_IInspectableVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIMap_2_GUID_IInspectable* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIMap_2_GUID_IInspectable* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIMap_2_GUID_IInspectable* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIMap_2_GUID_IInspectable* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIMap_2_GUID_IInspectable* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIMap_2_GUID_IInspectable* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* Lookup)(__x_ABI_C__FIMap_2_GUID_IInspectable* This,
        GUID key,
        IInspectable** result);
    HRESULT (STDMETHODCALLTYPE* get_Size)(__x_ABI_C__FIMap_2_GUID_IInspectable* This,
        UINT32* result);
    HRESULT (STDMETHODCALLTYPE* HasKey)(__x_ABI_C__FIMap_2_GUID_IInspectable* This,
        GUID key,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* GetView)(__x_ABI_C__FIMap_2_GUID_IInspectable* This,
        __x_ABI_C__FIMapView_2_GUID_IInspectable** result);
    HRESULT (STDMETHODCALLTYPE* Insert)(__x_ABI_C__FIMap_2_GUID_IInspectable* This,
        GUID key,
        IInspectable* value,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* Remove)(__x_ABI_C__FIMap_2_GUID_IInspectable* This,
        GUID key);
    HRESULT (STDMETHODCALLTYPE* Clear)(__x_ABI_C__FIMap_2_GUID_IInspectable* This);

        END_INTERFACE
    } __x_ABI_C__FIMap_2_GUID_IInspectableVtbl;

    interface __x_ABI_C__FIMap_2_GUID_IInspectable
    {
        CONST_VTBL struct __x_ABI_C__FIMap_2_GUID_IInspectableVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIMap_2_GUID_IInspectable_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIVectorView_1___x_ABI_CWindows__CDevices__CDisplay__CCore__CDisplayAdapter_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIVectorView_1___x_ABI_CWindows__CDevices__CDisplay__CCore__CDisplayAdapter_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CDevices__CDisplay__CCore__CDisplayAdapter __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CDevices__CDisplay__CCore__CDisplayAdapter;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CDevices__CDisplay__CCore__CDisplayAdapter;

    typedef struct __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CDevices__CDisplay__CCore__CDisplayAdapterVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CDevices__CDisplay__CCore__CDisplayAdapter* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CDevices__CDisplay__CCore__CDisplayAdapter* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CDevices__CDisplay__CCore__CDisplayAdapter* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CDevices__CDisplay__CCore__CDisplayAdapter* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CDevices__CDisplay__CCore__CDisplayAdapter* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CDevices__CDisplay__CCore__CDisplayAdapter* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* GetAt)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CDevices__CDisplay__CCore__CDisplayAdapter* This,
        UINT32 index,
        __x_ABI_CWindows_CDevices_CDisplay_CCore_CIDisplayAdapter** result);
    HRESULT (STDMETHODCALLTYPE* get_Size)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CDevices__CDisplay__CCore__CDisplayAdapter* This,
        UINT32* result);
    HRESULT (STDMETHODCALLTYPE* IndexOf)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CDevices__CDisplay__CCore__CDisplayAdapter* This,
        __x_ABI_CWindows_CDevices_CDisplay_CCore_CIDisplayAdapter* value,
        UINT32* index,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CDevices__CDisplay__CCore__CDisplayAdapter* This,
        UINT32 startIndex,
        UINT32 itemsLength,
        __x_ABI_CWindows_CDevices_CDisplay_CCore_CIDisplayAdapter** items,
        UINT32* result);

        END_INTERFACE
    } __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CDevices__CDisplay__CCore__CDisplayAdapterVtbl;

    interface __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CDevices__CDisplay__CCore__CDisplayAdapter
    {
        CONST_VTBL struct __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CDevices__CDisplay__CCore__CDisplayAdapterVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIVectorView_1___x_ABI_CWindows__CDevices__CDisplay__CCore__CDisplayAdapter_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIVectorView_1___x_ABI_CWindows__CDevices__CDisplay__CCore__CDisplayModeInfo_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIVectorView_1___x_ABI_CWindows__CDevices__CDisplay__CCore__CDisplayModeInfo_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CDevices__CDisplay__CCore__CDisplayModeInfo __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CDevices__CDisplay__CCore__CDisplayModeInfo;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CDevices__CDisplay__CCore__CDisplayModeInfo;

    typedef struct __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CDevices__CDisplay__CCore__CDisplayModeInfoVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CDevices__CDisplay__CCore__CDisplayModeInfo* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CDevices__CDisplay__CCore__CDisplayModeInfo* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CDevices__CDisplay__CCore__CDisplayModeInfo* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CDevices__CDisplay__CCore__CDisplayModeInfo* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CDevices__CDisplay__CCore__CDisplayModeInfo* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CDevices__CDisplay__CCore__CDisplayModeInfo* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* GetAt)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CDevices__CDisplay__CCore__CDisplayModeInfo* This,
        UINT32 index,
        __x_ABI_CWindows_CDevices_CDisplay_CCore_CIDisplayModeInfo** result);
    HRESULT (STDMETHODCALLTYPE* get_Size)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CDevices__CDisplay__CCore__CDisplayModeInfo* This,
        UINT32* result);
    HRESULT (STDMETHODCALLTYPE* IndexOf)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CDevices__CDisplay__CCore__CDisplayModeInfo* This,
        __x_ABI_CWindows_CDevices_CDisplay_CCore_CIDisplayModeInfo* value,
        UINT32* index,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CDevices__CDisplay__CCore__CDisplayModeInfo* This,
        UINT32 startIndex,
        UINT32 itemsLength,
        __x_ABI_CWindows_CDevices_CDisplay_CCore_CIDisplayModeInfo** items,
        UINT32* result);

        END_INTERFACE
    } __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CDevices__CDisplay__CCore__CDisplayModeInfoVtbl;

    interface __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CDevices__CDisplay__CCore__CDisplayModeInfo
    {
        CONST_VTBL struct __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CDevices__CDisplay__CCore__CDisplayModeInfoVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIVectorView_1___x_ABI_CWindows__CDevices__CDisplay__CCore__CDisplayModeInfo_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIVectorView_1___x_ABI_CWindows__CDevices__CDisplay__CCore__CDisplayPath_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIVectorView_1___x_ABI_CWindows__CDevices__CDisplay__CCore__CDisplayPath_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CDevices__CDisplay__CCore__CDisplayPath __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CDevices__CDisplay__CCore__CDisplayPath;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CDevices__CDisplay__CCore__CDisplayPath;

    typedef struct __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CDevices__CDisplay__CCore__CDisplayPathVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CDevices__CDisplay__CCore__CDisplayPath* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CDevices__CDisplay__CCore__CDisplayPath* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CDevices__CDisplay__CCore__CDisplayPath* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CDevices__CDisplay__CCore__CDisplayPath* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CDevices__CDisplay__CCore__CDisplayPath* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CDevices__CDisplay__CCore__CDisplayPath* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* GetAt)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CDevices__CDisplay__CCore__CDisplayPath* This,
        UINT32 index,
        __x_ABI_CWindows_CDevices_CDisplay_CCore_CIDisplayPath** result);
    HRESULT (STDMETHODCALLTYPE* get_Size)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CDevices__CDisplay__CCore__CDisplayPath* This,
        UINT32* result);
    HRESULT (STDMETHODCALLTYPE* IndexOf)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CDevices__CDisplay__CCore__CDisplayPath* This,
        __x_ABI_CWindows_CDevices_CDisplay_CCore_CIDisplayPath* value,
        UINT32* index,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CDevices__CDisplay__CCore__CDisplayPath* This,
        UINT32 startIndex,
        UINT32 itemsLength,
        __x_ABI_CWindows_CDevices_CDisplay_CCore_CIDisplayPath** items,
        UINT32* result);

        END_INTERFACE
    } __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CDevices__CDisplay__CCore__CDisplayPathVtbl;

    interface __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CDevices__CDisplay__CCore__CDisplayPath
    {
        CONST_VTBL struct __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CDevices__CDisplay__CCore__CDisplayPathVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIVectorView_1___x_ABI_CWindows__CDevices__CDisplay__CCore__CDisplayPath_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIVectorView_1___x_ABI_CWindows__CDevices__CDisplay__CCore__CDisplayTarget_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIVectorView_1___x_ABI_CWindows__CDevices__CDisplay__CCore__CDisplayTarget_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CDevices__CDisplay__CCore__CDisplayTarget __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CDevices__CDisplay__CCore__CDisplayTarget;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CDevices__CDisplay__CCore__CDisplayTarget;

    typedef struct __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CDevices__CDisplay__CCore__CDisplayTargetVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CDevices__CDisplay__CCore__CDisplayTarget* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CDevices__CDisplay__CCore__CDisplayTarget* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CDevices__CDisplay__CCore__CDisplayTarget* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CDevices__CDisplay__CCore__CDisplayTarget* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CDevices__CDisplay__CCore__CDisplayTarget* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CDevices__CDisplay__CCore__CDisplayTarget* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* GetAt)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CDevices__CDisplay__CCore__CDisplayTarget* This,
        UINT32 index,
        __x_ABI_CWindows_CDevices_CDisplay_CCore_CIDisplayTarget** result);
    HRESULT (STDMETHODCALLTYPE* get_Size)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CDevices__CDisplay__CCore__CDisplayTarget* This,
        UINT32* result);
    HRESULT (STDMETHODCALLTYPE* IndexOf)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CDevices__CDisplay__CCore__CDisplayTarget* This,
        __x_ABI_CWindows_CDevices_CDisplay_CCore_CIDisplayTarget* value,
        UINT32* index,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CDevices__CDisplay__CCore__CDisplayTarget* This,
        UINT32 startIndex,
        UINT32 itemsLength,
        __x_ABI_CWindows_CDevices_CDisplay_CCore_CIDisplayTarget** items,
        UINT32* result);

        END_INTERFACE
    } __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CDevices__CDisplay__CCore__CDisplayTargetVtbl;

    interface __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CDevices__CDisplay__CCore__CDisplayTarget
    {
        CONST_VTBL struct __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CDevices__CDisplay__CCore__CDisplayTargetVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIVectorView_1___x_ABI_CWindows__CDevices__CDisplay__CCore__CDisplayTarget_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIVectorView_1___x_ABI_CWindows__CDevices__CDisplay__CCore__CDisplayView_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIVectorView_1___x_ABI_CWindows__CDevices__CDisplay__CCore__CDisplayView_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CDevices__CDisplay__CCore__CDisplayView __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CDevices__CDisplay__CCore__CDisplayView;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CDevices__CDisplay__CCore__CDisplayView;

    typedef struct __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CDevices__CDisplay__CCore__CDisplayViewVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CDevices__CDisplay__CCore__CDisplayView* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CDevices__CDisplay__CCore__CDisplayView* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CDevices__CDisplay__CCore__CDisplayView* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CDevices__CDisplay__CCore__CDisplayView* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CDevices__CDisplay__CCore__CDisplayView* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CDevices__CDisplay__CCore__CDisplayView* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* GetAt)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CDevices__CDisplay__CCore__CDisplayView* This,
        UINT32 index,
        __x_ABI_CWindows_CDevices_CDisplay_CCore_CIDisplayView** result);
    HRESULT (STDMETHODCALLTYPE* get_Size)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CDevices__CDisplay__CCore__CDisplayView* This,
        UINT32* result);
    HRESULT (STDMETHODCALLTYPE* IndexOf)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CDevices__CDisplay__CCore__CDisplayView* This,
        __x_ABI_CWindows_CDevices_CDisplay_CCore_CIDisplayView* value,
        UINT32* index,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CDevices__CDisplay__CCore__CDisplayView* This,
        UINT32 startIndex,
        UINT32 itemsLength,
        __x_ABI_CWindows_CDevices_CDisplay_CCore_CIDisplayView** items,
        UINT32* result);

        END_INTERFACE
    } __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CDevices__CDisplay__CCore__CDisplayViewVtbl;

    interface __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CDevices__CDisplay__CCore__CDisplayView
    {
        CONST_VTBL struct __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CDevices__CDisplay__CCore__CDisplayViewVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIVectorView_1___x_ABI_CWindows__CDevices__CDisplay__CCore__CDisplayView_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIReference_1_boolean_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIReference_1_boolean_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIReference_1_boolean __x_ABI_C__FIReference_1_boolean;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIReference_1_boolean;

    typedef struct __x_ABI_C__FIReference_1_booleanVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIReference_1_boolean* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIReference_1_boolean* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIReference_1_boolean* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIReference_1_boolean* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIReference_1_boolean* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIReference_1_boolean* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Value)(__x_ABI_C__FIReference_1_boolean* This,
        boolean* result);

        END_INTERFACE
    } __x_ABI_C__FIReference_1_booleanVtbl;

    interface __x_ABI_C__FIReference_1_boolean
    {
        CONST_VTBL struct __x_ABI_C__FIReference_1_booleanVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIReference_1_boolean_INTERFACE_DEFINED__
    
typedef struct __x_ABI_CWindows_CDevices_CDisplay_CCore_CDisplayPresentationRate __x_ABI_CWindows_CDevices_CDisplay_CCore_CDisplayPresentationRate;

#if !defined(____x_ABI_C__FIReference_1___x_ABI_CWindows__CDevices__CDisplay__CCore__CDisplayPresentationRate_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIReference_1___x_ABI_CWindows__CDevices__CDisplay__CCore__CDisplayPresentationRate_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIReference_1___x_ABI_CWindows__CDevices__CDisplay__CCore__CDisplayPresentationRate __x_ABI_C__FIReference_1___x_ABI_CWindows__CDevices__CDisplay__CCore__CDisplayPresentationRate;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIReference_1___x_ABI_CWindows__CDevices__CDisplay__CCore__CDisplayPresentationRate;

    typedef struct __x_ABI_C__FIReference_1___x_ABI_CWindows__CDevices__CDisplay__CCore__CDisplayPresentationRateVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIReference_1___x_ABI_CWindows__CDevices__CDisplay__CCore__CDisplayPresentationRate* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIReference_1___x_ABI_CWindows__CDevices__CDisplay__CCore__CDisplayPresentationRate* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIReference_1___x_ABI_CWindows__CDevices__CDisplay__CCore__CDisplayPresentationRate* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIReference_1___x_ABI_CWindows__CDevices__CDisplay__CCore__CDisplayPresentationRate* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIReference_1___x_ABI_CWindows__CDevices__CDisplay__CCore__CDisplayPresentationRate* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIReference_1___x_ABI_CWindows__CDevices__CDisplay__CCore__CDisplayPresentationRate* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Value)(__x_ABI_C__FIReference_1___x_ABI_CWindows__CDevices__CDisplay__CCore__CDisplayPresentationRate* This,
        struct __x_ABI_CWindows_CDevices_CDisplay_CCore_CDisplayPresentationRate* result);

        END_INTERFACE
    } __x_ABI_C__FIReference_1___x_ABI_CWindows__CDevices__CDisplay__CCore__CDisplayPresentationRateVtbl;

    interface __x_ABI_C__FIReference_1___x_ABI_CWindows__CDevices__CDisplay__CCore__CDisplayPresentationRate
    {
        CONST_VTBL struct __x_ABI_C__FIReference_1___x_ABI_CWindows__CDevices__CDisplay__CCore__CDisplayPresentationRateVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIReference_1___x_ABI_CWindows__CDevices__CDisplay__CCore__CDisplayPresentationRate_INTERFACE_DEFINED__
    
typedef struct __x_ABI_CWindows_CGraphics_CSizeInt32 __x_ABI_CWindows_CGraphics_CSizeInt32;

#if !defined(____x_ABI_C__FIReference_1___x_ABI_CWindows__CGraphics__CSizeInt32_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIReference_1___x_ABI_CWindows__CGraphics__CSizeInt32_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIReference_1___x_ABI_CWindows__CGraphics__CSizeInt32 __x_ABI_C__FIReference_1___x_ABI_CWindows__CGraphics__CSizeInt32;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIReference_1___x_ABI_CWindows__CGraphics__CSizeInt32;

    typedef struct __x_ABI_C__FIReference_1___x_ABI_CWindows__CGraphics__CSizeInt32Vtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIReference_1___x_ABI_CWindows__CGraphics__CSizeInt32* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIReference_1___x_ABI_CWindows__CGraphics__CSizeInt32* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIReference_1___x_ABI_CWindows__CGraphics__CSizeInt32* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIReference_1___x_ABI_CWindows__CGraphics__CSizeInt32* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIReference_1___x_ABI_CWindows__CGraphics__CSizeInt32* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIReference_1___x_ABI_CWindows__CGraphics__CSizeInt32* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Value)(__x_ABI_C__FIReference_1___x_ABI_CWindows__CGraphics__CSizeInt32* This,
        struct __x_ABI_CWindows_CGraphics_CSizeInt32* result);

        END_INTERFACE
    } __x_ABI_C__FIReference_1___x_ABI_CWindows__CGraphics__CSizeInt32Vtbl;

    interface __x_ABI_C__FIReference_1___x_ABI_CWindows__CGraphics__CSizeInt32
    {
        CONST_VTBL struct __x_ABI_C__FIReference_1___x_ABI_CWindows__CGraphics__CSizeInt32Vtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIReference_1___x_ABI_CWindows__CGraphics__CSizeInt32_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CDevices__CDisplay__CCore__CDisplayManager___x_ABI_CWindows__CDevices__CDisplay__CCore__CDisplayManagerChangedEventArgs_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CDevices__CDisplay__CCore__CDisplayManager___x_ABI_CWindows__CDevices__CDisplay__CCore__CDisplayManagerChangedEventArgs_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CDevices__CDisplay__CCore__CDisplayManager___x_ABI_CWindows__CDevices__CDisplay__CCore__CDisplayManagerChangedEventArgs __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CDevices__CDisplay__CCore__CDisplayManager___x_ABI_CWindows__CDevices__CDisplay__CCore__CDisplayManagerChangedEventArgs;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CDevices__CDisplay__CCore__CDisplayManager___x_ABI_CWindows__CDevices__CDisplay__CCore__CDisplayManagerChangedEventArgs;

    typedef struct __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CDevices__CDisplay__CCore__CDisplayManager___x_ABI_CWindows__CDevices__CDisplay__CCore__CDisplayManagerChangedEventArgsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CDevices__CDisplay__CCore__CDisplayManager___x_ABI_CWindows__CDevices__CDisplay__CCore__CDisplayManagerChangedEventArgs* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CDevices__CDisplay__CCore__CDisplayManager___x_ABI_CWindows__CDevices__CDisplay__CCore__CDisplayManagerChangedEventArgs* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CDevices__CDisplay__CCore__CDisplayManager___x_ABI_CWindows__CDevices__CDisplay__CCore__CDisplayManagerChangedEventArgs* This);
        HRESULT (STDMETHODCALLTYPE* Invoke)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CDevices__CDisplay__CCore__CDisplayManager___x_ABI_CWindows__CDevices__CDisplay__CCore__CDisplayManagerChangedEventArgs* This,
        __x_ABI_CWindows_CDevices_CDisplay_CCore_CIDisplayManager* sender,
        __x_ABI_CWindows_CDevices_CDisplay_CCore_CIDisplayManagerChangedEventArgs* args);

        END_INTERFACE
    } __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CDevices__CDisplay__CCore__CDisplayManager___x_ABI_CWindows__CDevices__CDisplay__CCore__CDisplayManagerChangedEventArgsVtbl;

    interface __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CDevices__CDisplay__CCore__CDisplayManager___x_ABI_CWindows__CDevices__CDisplay__CCore__CDisplayManagerChangedEventArgs
    {
        CONST_VTBL struct __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CDevices__CDisplay__CCore__CDisplayManager___x_ABI_CWindows__CDevices__CDisplay__CCore__CDisplayManagerChangedEventArgsVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CDevices__CDisplay__CCore__CDisplayManager___x_ABI_CWindows__CDevices__CDisplay__CCore__CDisplayManagerChangedEventArgs_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CDevices__CDisplay__CCore__CDisplayManager___x_ABI_CWindows__CDevices__CDisplay__CCore__CDisplayManagerDisabledEventArgs_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CDevices__CDisplay__CCore__CDisplayManager___x_ABI_CWindows__CDevices__CDisplay__CCore__CDisplayManagerDisabledEventArgs_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CDevices__CDisplay__CCore__CDisplayManager___x_ABI_CWindows__CDevices__CDisplay__CCore__CDisplayManagerDisabledEventArgs __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CDevices__CDisplay__CCore__CDisplayManager___x_ABI_CWindows__CDevices__CDisplay__CCore__CDisplayManagerDisabledEventArgs;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CDevices__CDisplay__CCore__CDisplayManager___x_ABI_CWindows__CDevices__CDisplay__CCore__CDisplayManagerDisabledEventArgs;

    typedef struct __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CDevices__CDisplay__CCore__CDisplayManager___x_ABI_CWindows__CDevices__CDisplay__CCore__CDisplayManagerDisabledEventArgsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CDevices__CDisplay__CCore__CDisplayManager___x_ABI_CWindows__CDevices__CDisplay__CCore__CDisplayManagerDisabledEventArgs* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CDevices__CDisplay__CCore__CDisplayManager___x_ABI_CWindows__CDevices__CDisplay__CCore__CDisplayManagerDisabledEventArgs* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CDevices__CDisplay__CCore__CDisplayManager___x_ABI_CWindows__CDevices__CDisplay__CCore__CDisplayManagerDisabledEventArgs* This);
        HRESULT (STDMETHODCALLTYPE* Invoke)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CDevices__CDisplay__CCore__CDisplayManager___x_ABI_CWindows__CDevices__CDisplay__CCore__CDisplayManagerDisabledEventArgs* This,
        __x_ABI_CWindows_CDevices_CDisplay_CCore_CIDisplayManager* sender,
        __x_ABI_CWindows_CDevices_CDisplay_CCore_CIDisplayManagerDisabledEventArgs* args);

        END_INTERFACE
    } __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CDevices__CDisplay__CCore__CDisplayManager___x_ABI_CWindows__CDevices__CDisplay__CCore__CDisplayManagerDisabledEventArgsVtbl;

    interface __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CDevices__CDisplay__CCore__CDisplayManager___x_ABI_CWindows__CDevices__CDisplay__CCore__CDisplayManagerDisabledEventArgs
    {
        CONST_VTBL struct __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CDevices__CDisplay__CCore__CDisplayManager___x_ABI_CWindows__CDevices__CDisplay__CCore__CDisplayManagerDisabledEventArgsVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CDevices__CDisplay__CCore__CDisplayManager___x_ABI_CWindows__CDevices__CDisplay__CCore__CDisplayManagerDisabledEventArgs_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CDevices__CDisplay__CCore__CDisplayManager___x_ABI_CWindows__CDevices__CDisplay__CCore__CDisplayManagerEnabledEventArgs_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CDevices__CDisplay__CCore__CDisplayManager___x_ABI_CWindows__CDevices__CDisplay__CCore__CDisplayManagerEnabledEventArgs_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CDevices__CDisplay__CCore__CDisplayManager___x_ABI_CWindows__CDevices__CDisplay__CCore__CDisplayManagerEnabledEventArgs __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CDevices__CDisplay__CCore__CDisplayManager___x_ABI_CWindows__CDevices__CDisplay__CCore__CDisplayManagerEnabledEventArgs;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CDevices__CDisplay__CCore__CDisplayManager___x_ABI_CWindows__CDevices__CDisplay__CCore__CDisplayManagerEnabledEventArgs;

    typedef struct __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CDevices__CDisplay__CCore__CDisplayManager___x_ABI_CWindows__CDevices__CDisplay__CCore__CDisplayManagerEnabledEventArgsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CDevices__CDisplay__CCore__CDisplayManager___x_ABI_CWindows__CDevices__CDisplay__CCore__CDisplayManagerEnabledEventArgs* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CDevices__CDisplay__CCore__CDisplayManager___x_ABI_CWindows__CDevices__CDisplay__CCore__CDisplayManagerEnabledEventArgs* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CDevices__CDisplay__CCore__CDisplayManager___x_ABI_CWindows__CDevices__CDisplay__CCore__CDisplayManagerEnabledEventArgs* This);
        HRESULT (STDMETHODCALLTYPE* Invoke)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CDevices__CDisplay__CCore__CDisplayManager___x_ABI_CWindows__CDevices__CDisplay__CCore__CDisplayManagerEnabledEventArgs* This,
        __x_ABI_CWindows_CDevices_CDisplay_CCore_CIDisplayManager* sender,
        __x_ABI_CWindows_CDevices_CDisplay_CCore_CIDisplayManagerEnabledEventArgs* args);

        END_INTERFACE
    } __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CDevices__CDisplay__CCore__CDisplayManager___x_ABI_CWindows__CDevices__CDisplay__CCore__CDisplayManagerEnabledEventArgsVtbl;

    interface __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CDevices__CDisplay__CCore__CDisplayManager___x_ABI_CWindows__CDevices__CDisplay__CCore__CDisplayManagerEnabledEventArgs
    {
        CONST_VTBL struct __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CDevices__CDisplay__CCore__CDisplayManager___x_ABI_CWindows__CDevices__CDisplay__CCore__CDisplayManagerEnabledEventArgsVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CDevices__CDisplay__CCore__CDisplayManager___x_ABI_CWindows__CDevices__CDisplay__CCore__CDisplayManagerEnabledEventArgs_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CDevices__CDisplay__CCore__CDisplayManager___x_ABI_CWindows__CDevices__CDisplay__CCore__CDisplayManagerPathsFailedOrInvalidatedEventArgs_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CDevices__CDisplay__CCore__CDisplayManager___x_ABI_CWindows__CDevices__CDisplay__CCore__CDisplayManagerPathsFailedOrInvalidatedEventArgs_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CDevices__CDisplay__CCore__CDisplayManager___x_ABI_CWindows__CDevices__CDisplay__CCore__CDisplayManagerPathsFailedOrInvalidatedEventArgs __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CDevices__CDisplay__CCore__CDisplayManager___x_ABI_CWindows__CDevices__CDisplay__CCore__CDisplayManagerPathsFailedOrInvalidatedEventArgs;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CDevices__CDisplay__CCore__CDisplayManager___x_ABI_CWindows__CDevices__CDisplay__CCore__CDisplayManagerPathsFailedOrInvalidatedEventArgs;

    typedef struct __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CDevices__CDisplay__CCore__CDisplayManager___x_ABI_CWindows__CDevices__CDisplay__CCore__CDisplayManagerPathsFailedOrInvalidatedEventArgsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CDevices__CDisplay__CCore__CDisplayManager___x_ABI_CWindows__CDevices__CDisplay__CCore__CDisplayManagerPathsFailedOrInvalidatedEventArgs* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CDevices__CDisplay__CCore__CDisplayManager___x_ABI_CWindows__CDevices__CDisplay__CCore__CDisplayManagerPathsFailedOrInvalidatedEventArgs* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CDevices__CDisplay__CCore__CDisplayManager___x_ABI_CWindows__CDevices__CDisplay__CCore__CDisplayManagerPathsFailedOrInvalidatedEventArgs* This);
        HRESULT (STDMETHODCALLTYPE* Invoke)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CDevices__CDisplay__CCore__CDisplayManager___x_ABI_CWindows__CDevices__CDisplay__CCore__CDisplayManagerPathsFailedOrInvalidatedEventArgs* This,
        __x_ABI_CWindows_CDevices_CDisplay_CCore_CIDisplayManager* sender,
        __x_ABI_CWindows_CDevices_CDisplay_CCore_CIDisplayManagerPathsFailedOrInvalidatedEventArgs* args);

        END_INTERFACE
    } __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CDevices__CDisplay__CCore__CDisplayManager___x_ABI_CWindows__CDevices__CDisplay__CCore__CDisplayManagerPathsFailedOrInvalidatedEventArgsVtbl;

    interface __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CDevices__CDisplay__CCore__CDisplayManager___x_ABI_CWindows__CDevices__CDisplay__CCore__CDisplayManagerPathsFailedOrInvalidatedEventArgs
    {
        CONST_VTBL struct __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CDevices__CDisplay__CCore__CDisplayManager___x_ABI_CWindows__CDevices__CDisplay__CCore__CDisplayManagerPathsFailedOrInvalidatedEventArgsVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CDevices__CDisplay__CCore__CDisplayManager___x_ABI_CWindows__CDevices__CDisplay__CCore__CDisplayManagerPathsFailedOrInvalidatedEventArgs_INTERFACE_DEFINED__
    
#ifndef ____x_ABI_CWindows_CDevices_CDisplay_CIDisplayMonitor_FWD_DEFINED__
#define ____x_ABI_CWindows_CDevices_CDisplay_CIDisplayMonitor_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CDevices_CDisplay_CIDisplayMonitor __x_ABI_CWindows_CDevices_CDisplay_CIDisplayMonitor;

#endif // ____x_ABI_CWindows_CDevices_CDisplay_CIDisplayMonitor_FWD_DEFINED__

typedef enum __x_ABI_CWindows_CDevices_CDisplay_CDisplayMonitorUsageKind __x_ABI_CWindows_CDevices_CDisplay_CDisplayMonitorUsageKind;

#ifndef ____x_ABI_CWindows_CFoundation_CIDeferral_FWD_DEFINED__
#define ____x_ABI_CWindows_CFoundation_CIDeferral_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CFoundation_CIDeferral __x_ABI_CWindows_CFoundation_CIDeferral;

#endif // ____x_ABI_CWindows_CFoundation_CIDeferral_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CFoundation_CIClosable_FWD_DEFINED__
#define ____x_ABI_CWindows_CFoundation_CIClosable_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CFoundation_CIClosable __x_ABI_CWindows_CFoundation_CIClosable;

#endif // ____x_ABI_CWindows_CFoundation_CIClosable_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CFoundation_CIPropertyValue_FWD_DEFINED__
#define ____x_ABI_CWindows_CFoundation_CIPropertyValue_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CFoundation_CIPropertyValue __x_ABI_CWindows_CFoundation_CIPropertyValue;

#endif // ____x_ABI_CWindows_CFoundation_CIPropertyValue_FWD_DEFINED__

typedef struct __x_ABI_CWindows_CFoundation_CNumerics_CRational __x_ABI_CWindows_CFoundation_CNumerics_CRational;

typedef struct __x_ABI_CWindows_CFoundation_CTimeSpan __x_ABI_CWindows_CFoundation_CTimeSpan;

typedef struct __x_ABI_CWindows_CGraphics_CDirectX_CDirect3D11_CDirect3DMultisampleDescription __x_ABI_CWindows_CGraphics_CDirectX_CDirect3D11_CDirect3DMultisampleDescription;

typedef enum __x_ABI_CWindows_CGraphics_CDirectX_CDirectXColorSpace __x_ABI_CWindows_CGraphics_CDirectX_CDirectXColorSpace;

typedef enum __x_ABI_CWindows_CGraphics_CDirectX_CDirectXPixelFormat __x_ABI_CWindows_CGraphics_CDirectX_CDirectXPixelFormat;

typedef struct __x_ABI_CWindows_CGraphics_CDisplayAdapterId __x_ABI_CWindows_CGraphics_CDisplayAdapterId;

#ifndef ____x_ABI_CWindows_CStorage_CStreams_CIBuffer_FWD_DEFINED__
#define ____x_ABI_CWindows_CStorage_CStreams_CIBuffer_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CStorage_CStreams_CIBuffer __x_ABI_CWindows_CStorage_CStreams_CIBuffer;

#endif // ____x_ABI_CWindows_CStorage_CStreams_CIBuffer_FWD_DEFINED__

typedef enum __x_ABI_CWindows_CDevices_CDisplay_CCore_CDisplayBitsPerChannel __x_ABI_CWindows_CDevices_CDisplay_CCore_CDisplayBitsPerChannel;

typedef enum __x_ABI_CWindows_CDevices_CDisplay_CCore_CDisplayDeviceCapability __x_ABI_CWindows_CDevices_CDisplay_CCore_CDisplayDeviceCapability;

typedef enum __x_ABI_CWindows_CDevices_CDisplay_CCore_CDisplayManagerOptions __x_ABI_CWindows_CDevices_CDisplay_CCore_CDisplayManagerOptions;

typedef enum __x_ABI_CWindows_CDevices_CDisplay_CCore_CDisplayManagerResult __x_ABI_CWindows_CDevices_CDisplay_CCore_CDisplayManagerResult;

typedef enum __x_ABI_CWindows_CDevices_CDisplay_CCore_CDisplayModeQueryOptions __x_ABI_CWindows_CDevices_CDisplay_CCore_CDisplayModeQueryOptions;

typedef enum __x_ABI_CWindows_CDevices_CDisplay_CCore_CDisplayPathScaling __x_ABI_CWindows_CDevices_CDisplay_CCore_CDisplayPathScaling;

typedef enum __x_ABI_CWindows_CDevices_CDisplay_CCore_CDisplayPathStatus __x_ABI_CWindows_CDevices_CDisplay_CCore_CDisplayPathStatus;

typedef enum __x_ABI_CWindows_CDevices_CDisplay_CCore_CDisplayRotation __x_ABI_CWindows_CDevices_CDisplay_CCore_CDisplayRotation;

typedef enum __x_ABI_CWindows_CDevices_CDisplay_CCore_CDisplayStateApplyOptions __x_ABI_CWindows_CDevices_CDisplay_CCore_CDisplayStateApplyOptions;

typedef enum __x_ABI_CWindows_CDevices_CDisplay_CCore_CDisplayStateFunctionalizeOptions __x_ABI_CWindows_CDevices_CDisplay_CCore_CDisplayStateFunctionalizeOptions;

typedef enum __x_ABI_CWindows_CDevices_CDisplay_CCore_CDisplayStateOperationStatus __x_ABI_CWindows_CDevices_CDisplay_CCore_CDisplayStateOperationStatus;

typedef enum __x_ABI_CWindows_CDevices_CDisplay_CCore_CDisplayTargetPersistence __x_ABI_CWindows_CDevices_CDisplay_CCore_CDisplayTargetPersistence;

typedef enum __x_ABI_CWindows_CDevices_CDisplay_CCore_CDisplayWireFormatColorSpace __x_ABI_CWindows_CDevices_CDisplay_CCore_CDisplayWireFormatColorSpace;

typedef enum __x_ABI_CWindows_CDevices_CDisplay_CCore_CDisplayWireFormatEotf __x_ABI_CWindows_CDevices_CDisplay_CCore_CDisplayWireFormatEotf;

typedef enum __x_ABI_CWindows_CDevices_CDisplay_CCore_CDisplayWireFormatHdrMetadata __x_ABI_CWindows_CDevices_CDisplay_CCore_CDisplayWireFormatHdrMetadata;

typedef enum __x_ABI_CWindows_CDevices_CDisplay_CCore_CDisplayWireFormatPixelEncoding __x_ABI_CWindows_CDevices_CDisplay_CCore_CDisplayWireFormatPixelEncoding;

enum __x_ABI_CWindows_CDevices_CDisplay_CCore_CDisplayBitsPerChannel
    {
        __x_ABI_CWindows_CDevices_CDisplay_CCore_CDisplayBitsPerChannel_None = 0,
    __x_ABI_CWindows_CDevices_CDisplay_CCore_CDisplayBitsPerChannel_Bpc6 = 0x1,
    __x_ABI_CWindows_CDevices_CDisplay_CCore_CDisplayBitsPerChannel_Bpc8 = 0x2,
    __x_ABI_CWindows_CDevices_CDisplay_CCore_CDisplayBitsPerChannel_Bpc10 = 0x4,
    __x_ABI_CWindows_CDevices_CDisplay_CCore_CDisplayBitsPerChannel_Bpc12 = 0x8,
    __x_ABI_CWindows_CDevices_CDisplay_CCore_CDisplayBitsPerChannel_Bpc14 = 0x10,
    __x_ABI_CWindows_CDevices_CDisplay_CCore_CDisplayBitsPerChannel_Bpc16 = 0x20,
};

enum __x_ABI_CWindows_CDevices_CDisplay_CCore_CDisplayDeviceCapability
    {
        __x_ABI_CWindows_CDevices_CDisplay_CCore_CDisplayDeviceCapability_FlipOverride = 0,
};

enum __x_ABI_CWindows_CDevices_CDisplay_CCore_CDisplayManagerOptions
    {
        __x_ABI_CWindows_CDevices_CDisplay_CCore_CDisplayManagerOptions_None = 0,
    __x_ABI_CWindows_CDevices_CDisplay_CCore_CDisplayManagerOptions_EnforceSourceOwnership = 0x1,
};

enum __x_ABI_CWindows_CDevices_CDisplay_CCore_CDisplayManagerResult
    {
        __x_ABI_CWindows_CDevices_CDisplay_CCore_CDisplayManagerResult_Success = 0,
    __x_ABI_CWindows_CDevices_CDisplay_CCore_CDisplayManagerResult_UnknownFailure = 1,
    __x_ABI_CWindows_CDevices_CDisplay_CCore_CDisplayManagerResult_TargetAccessDenied = 2,
    __x_ABI_CWindows_CDevices_CDisplay_CCore_CDisplayManagerResult_TargetStale = 3,
    __x_ABI_CWindows_CDevices_CDisplay_CCore_CDisplayManagerResult_RemoteSessionNotSupported = 4,
};

enum __x_ABI_CWindows_CDevices_CDisplay_CCore_CDisplayModeQueryOptions
    {
        __x_ABI_CWindows_CDevices_CDisplay_CCore_CDisplayModeQueryOptions_None = 0,
    __x_ABI_CWindows_CDevices_CDisplay_CCore_CDisplayModeQueryOptions_OnlyPreferredResolution = 0x1,
};

enum __x_ABI_CWindows_CDevices_CDisplay_CCore_CDisplayPathScaling
    {
        __x_ABI_CWindows_CDevices_CDisplay_CCore_CDisplayPathScaling_Identity = 0,
    __x_ABI_CWindows_CDevices_CDisplay_CCore_CDisplayPathScaling_Centered = 1,
    __x_ABI_CWindows_CDevices_CDisplay_CCore_CDisplayPathScaling_Stretched = 2,
    __x_ABI_CWindows_CDevices_CDisplay_CCore_CDisplayPathScaling_AspectRatioStretched = 3,
    __x_ABI_CWindows_CDevices_CDisplay_CCore_CDisplayPathScaling_Custom = 4,
    __x_ABI_CWindows_CDevices_CDisplay_CCore_CDisplayPathScaling_DriverPreferred = 5,
};

enum __x_ABI_CWindows_CDevices_CDisplay_CCore_CDisplayPathStatus
    {
        __x_ABI_CWindows_CDevices_CDisplay_CCore_CDisplayPathStatus_Unknown = 0,
    __x_ABI_CWindows_CDevices_CDisplay_CCore_CDisplayPathStatus_Succeeded = 1,
    __x_ABI_CWindows_CDevices_CDisplay_CCore_CDisplayPathStatus_Pending = 2,
    __x_ABI_CWindows_CDevices_CDisplay_CCore_CDisplayPathStatus_Failed = 3,
    __x_ABI_CWindows_CDevices_CDisplay_CCore_CDisplayPathStatus_FailedAsync = 4,
    __x_ABI_CWindows_CDevices_CDisplay_CCore_CDisplayPathStatus_InvalidatedAsync = 5,
};

enum __x_ABI_CWindows_CDevices_CDisplay_CCore_CDisplayRotation
    {
        __x_ABI_CWindows_CDevices_CDisplay_CCore_CDisplayRotation_None = 0,
    __x_ABI_CWindows_CDevices_CDisplay_CCore_CDisplayRotation_Clockwise90Degrees = 1,
    __x_ABI_CWindows_CDevices_CDisplay_CCore_CDisplayRotation_Clockwise180Degrees = 2,
    __x_ABI_CWindows_CDevices_CDisplay_CCore_CDisplayRotation_Clockwise270Degrees = 3,
};

enum __x_ABI_CWindows_CDevices_CDisplay_CCore_CDisplayStateApplyOptions
    {
        __x_ABI_CWindows_CDevices_CDisplay_CCore_CDisplayStateApplyOptions_None = 0,
    __x_ABI_CWindows_CDevices_CDisplay_CCore_CDisplayStateApplyOptions_FailIfStateChanged = 0x1,
    __x_ABI_CWindows_CDevices_CDisplay_CCore_CDisplayStateApplyOptions_ForceReapply = 0x2,
    __x_ABI_CWindows_CDevices_CDisplay_CCore_CDisplayStateApplyOptions_ForceModeEnumeration = 0x4,
};

enum __x_ABI_CWindows_CDevices_CDisplay_CCore_CDisplayStateFunctionalizeOptions
    {
        __x_ABI_CWindows_CDevices_CDisplay_CCore_CDisplayStateFunctionalizeOptions_None = 0,
    __x_ABI_CWindows_CDevices_CDisplay_CCore_CDisplayStateFunctionalizeOptions_FailIfStateChanged = 0x1,
    __x_ABI_CWindows_CDevices_CDisplay_CCore_CDisplayStateFunctionalizeOptions_ValidateTopologyOnly = 0x2,
};

enum __x_ABI_CWindows_CDevices_CDisplay_CCore_CDisplayStateOperationStatus
    {
        __x_ABI_CWindows_CDevices_CDisplay_CCore_CDisplayStateOperationStatus_Success = 0,
    __x_ABI_CWindows_CDevices_CDisplay_CCore_CDisplayStateOperationStatus_PartialFailure = 1,
    __x_ABI_CWindows_CDevices_CDisplay_CCore_CDisplayStateOperationStatus_UnknownFailure = 2,
    __x_ABI_CWindows_CDevices_CDisplay_CCore_CDisplayStateOperationStatus_TargetOwnershipLost = 3,
    __x_ABI_CWindows_CDevices_CDisplay_CCore_CDisplayStateOperationStatus_SystemStateChanged = 4,
    __x_ABI_CWindows_CDevices_CDisplay_CCore_CDisplayStateOperationStatus_TooManyPathsForAdapter = 5,
    __x_ABI_CWindows_CDevices_CDisplay_CCore_CDisplayStateOperationStatus_ModesNotSupported = 6,
    __x_ABI_CWindows_CDevices_CDisplay_CCore_CDisplayStateOperationStatus_RemoteSessionNotSupported = 7,
};

enum __x_ABI_CWindows_CDevices_CDisplay_CCore_CDisplayTargetPersistence
    {
        __x_ABI_CWindows_CDevices_CDisplay_CCore_CDisplayTargetPersistence_None = 0,
    __x_ABI_CWindows_CDevices_CDisplay_CCore_CDisplayTargetPersistence_BootPersisted = 1,
    __x_ABI_CWindows_CDevices_CDisplay_CCore_CDisplayTargetPersistence_TemporaryPersisted = 2,
    __x_ABI_CWindows_CDevices_CDisplay_CCore_CDisplayTargetPersistence_PathPersisted = 3,
};

enum __x_ABI_CWindows_CDevices_CDisplay_CCore_CDisplayTaskSignalKind
    {
        __x_ABI_CWindows_CDevices_CDisplay_CCore_CDisplayTaskSignalKind_OnPresentFlipAway = 0,
};

enum __x_ABI_CWindows_CDevices_CDisplay_CCore_CDisplayWireFormatColorSpace
    {
        __x_ABI_CWindows_CDevices_CDisplay_CCore_CDisplayWireFormatColorSpace_BT709 = 0,
    __x_ABI_CWindows_CDevices_CDisplay_CCore_CDisplayWireFormatColorSpace_BT2020 = 1,
    __x_ABI_CWindows_CDevices_CDisplay_CCore_CDisplayWireFormatColorSpace_ProfileDefinedWideColorGamut = 2,
};

enum __x_ABI_CWindows_CDevices_CDisplay_CCore_CDisplayWireFormatEotf
    {
        __x_ABI_CWindows_CDevices_CDisplay_CCore_CDisplayWireFormatEotf_Sdr = 0,
    __x_ABI_CWindows_CDevices_CDisplay_CCore_CDisplayWireFormatEotf_HdrSmpte2084 = 1,
};

enum __x_ABI_CWindows_CDevices_CDisplay_CCore_CDisplayWireFormatHdrMetadata
    {
        __x_ABI_CWindows_CDevices_CDisplay_CCore_CDisplayWireFormatHdrMetadata_None = 0,
    __x_ABI_CWindows_CDevices_CDisplay_CCore_CDisplayWireFormatHdrMetadata_Hdr10 = 1,
    __x_ABI_CWindows_CDevices_CDisplay_CCore_CDisplayWireFormatHdrMetadata_Hdr10Plus = 2,
    __x_ABI_CWindows_CDevices_CDisplay_CCore_CDisplayWireFormatHdrMetadata_DolbyVisionLowLatency = 3,
};

enum __x_ABI_CWindows_CDevices_CDisplay_CCore_CDisplayWireFormatPixelEncoding
    {
        __x_ABI_CWindows_CDevices_CDisplay_CCore_CDisplayWireFormatPixelEncoding_Rgb444 = 0,
    __x_ABI_CWindows_CDevices_CDisplay_CCore_CDisplayWireFormatPixelEncoding_Ycc444 = 1,
    __x_ABI_CWindows_CDevices_CDisplay_CCore_CDisplayWireFormatPixelEncoding_Ycc422 = 2,
    __x_ABI_CWindows_CDevices_CDisplay_CCore_CDisplayWireFormatPixelEncoding_Ycc420 = 3,
    __x_ABI_CWindows_CDevices_CDisplay_CCore_CDisplayWireFormatPixelEncoding_Intensity = 4,
};

struct __x_ABI_CWindows_CDevices_CDisplay_CCore_CDisplayPresentationRate
    {
        struct __x_ABI_CWindows_CFoundation_CNumerics_CRational VerticalSyncRate;
    INT32 VerticalSyncsPerPresentation;
};

#if !defined(____x_ABI_CWindows_CDevices_CDisplay_CCore_CIDisplayAdapter_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CDevices_CDisplay_CCore_CIDisplayAdapter_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CDevices_CDisplay_CCore_CIDisplayAdapterVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CDevices_CDisplay_CCore_CIDisplayAdapter* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CDevices_CDisplay_CCore_CIDisplayAdapter* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CDevices_CDisplay_CCore_CIDisplayAdapter* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CDevices_CDisplay_CCore_CIDisplayAdapter* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CDevices_CDisplay_CCore_CIDisplayAdapter* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CDevices_CDisplay_CCore_CIDisplayAdapter* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Id)(__x_ABI_CWindows_CDevices_CDisplay_CCore_CIDisplayAdapter* This,
        struct __x_ABI_CWindows_CGraphics_CDisplayAdapterId* value);
    HRESULT (STDMETHODCALLTYPE* get_DeviceInterfacePath)(__x_ABI_CWindows_CDevices_CDisplay_CCore_CIDisplayAdapter* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* get_SourceCount)(__x_ABI_CWindows_CDevices_CDisplay_CCore_CIDisplayAdapter* This,
        UINT32* value);
    HRESULT (STDMETHODCALLTYPE* get_PciVendorId)(__x_ABI_CWindows_CDevices_CDisplay_CCore_CIDisplayAdapter* This,
        UINT32* value);
    HRESULT (STDMETHODCALLTYPE* get_PciDeviceId)(__x_ABI_CWindows_CDevices_CDisplay_CCore_CIDisplayAdapter* This,
        UINT32* value);
    HRESULT (STDMETHODCALLTYPE* get_PciSubSystemId)(__x_ABI_CWindows_CDevices_CDisplay_CCore_CIDisplayAdapter* This,
        UINT32* value);
    HRESULT (STDMETHODCALLTYPE* get_PciRevision)(__x_ABI_CWindows_CDevices_CDisplay_CCore_CIDisplayAdapter* This,
        UINT32* value);
    HRESULT (STDMETHODCALLTYPE* get_Properties)(__x_ABI_CWindows_CDevices_CDisplay_CCore_CIDisplayAdapter* This,
        __x_ABI_C__FIMapView_2_GUID_IInspectable** value);

        END_INTERFACE
    } __x_ABI_CWindows_CDevices_CDisplay_CCore_CIDisplayAdapterVtbl;

    interface __x_ABI_CWindows_CDevices_CDisplay_CCore_CIDisplayAdapter
    {
        CONST_VTBL struct __x_ABI_CWindows_CDevices_CDisplay_CCore_CIDisplayAdapterVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CDevices_CDisplay_CCore_CIDisplayAdapter;
#endif /* !defined(____x_ABI_CWindows_CDevices_CDisplay_CCore_CIDisplayAdapter_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CDevices_CDisplay_CCore_CIDisplayAdapterStatics_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CDevices_CDisplay_CCore_CIDisplayAdapterStatics_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CDevices_CDisplay_CCore_CIDisplayAdapterStaticsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CDevices_CDisplay_CCore_CIDisplayAdapterStatics* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CDevices_CDisplay_CCore_CIDisplayAdapterStatics* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CDevices_CDisplay_CCore_CIDisplayAdapterStatics* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CDevices_CDisplay_CCore_CIDisplayAdapterStatics* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CDevices_CDisplay_CCore_CIDisplayAdapterStatics* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CDevices_CDisplay_CCore_CIDisplayAdapterStatics* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* FromId)(__x_ABI_CWindows_CDevices_CDisplay_CCore_CIDisplayAdapterStatics* This,
        struct __x_ABI_CWindows_CGraphics_CDisplayAdapterId id,
        __x_ABI_CWindows_CDevices_CDisplay_CCore_CIDisplayAdapter** result);

        END_INTERFACE
    } __x_ABI_CWindows_CDevices_CDisplay_CCore_CIDisplayAdapterStaticsVtbl;

    interface __x_ABI_CWindows_CDevices_CDisplay_CCore_CIDisplayAdapterStatics
    {
        CONST_VTBL struct __x_ABI_CWindows_CDevices_CDisplay_CCore_CIDisplayAdapterStaticsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CDevices_CDisplay_CCore_CIDisplayAdapterStatics;
#endif /* !defined(____x_ABI_CWindows_CDevices_CDisplay_CCore_CIDisplayAdapterStatics_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CDevices_CDisplay_CCore_CIDisplayDevice_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CDevices_CDisplay_CCore_CIDisplayDevice_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CDevices_CDisplay_CCore_CIDisplayDeviceVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CDevices_CDisplay_CCore_CIDisplayDevice* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CDevices_CDisplay_CCore_CIDisplayDevice* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CDevices_CDisplay_CCore_CIDisplayDevice* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CDevices_CDisplay_CCore_CIDisplayDevice* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CDevices_CDisplay_CCore_CIDisplayDevice* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CDevices_CDisplay_CCore_CIDisplayDevice* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* CreateScanoutSource)(__x_ABI_CWindows_CDevices_CDisplay_CCore_CIDisplayDevice* This,
        __x_ABI_CWindows_CDevices_CDisplay_CCore_CIDisplayTarget* target,
        __x_ABI_CWindows_CDevices_CDisplay_CCore_CIDisplaySource** result);
    HRESULT (STDMETHODCALLTYPE* CreatePrimary)(__x_ABI_CWindows_CDevices_CDisplay_CCore_CIDisplayDevice* This,
        __x_ABI_CWindows_CDevices_CDisplay_CCore_CIDisplayTarget* target,
        __x_ABI_CWindows_CDevices_CDisplay_CCore_CIDisplayPrimaryDescription* desc,
        __x_ABI_CWindows_CDevices_CDisplay_CCore_CIDisplaySurface** result);
    HRESULT (STDMETHODCALLTYPE* CreateTaskPool)(__x_ABI_CWindows_CDevices_CDisplay_CCore_CIDisplayDevice* This,
        __x_ABI_CWindows_CDevices_CDisplay_CCore_CIDisplayTaskPool** result);
    HRESULT (STDMETHODCALLTYPE* CreatePeriodicFence)(__x_ABI_CWindows_CDevices_CDisplay_CCore_CIDisplayDevice* This,
        __x_ABI_CWindows_CDevices_CDisplay_CCore_CIDisplayTarget* target,
        struct __x_ABI_CWindows_CFoundation_CTimeSpan offsetFromVBlank,
        __x_ABI_CWindows_CDevices_CDisplay_CCore_CIDisplayFence** result);
    HRESULT (STDMETHODCALLTYPE* WaitForVBlank)(__x_ABI_CWindows_CDevices_CDisplay_CCore_CIDisplayDevice* This,
        __x_ABI_CWindows_CDevices_CDisplay_CCore_CIDisplaySource* source);
    HRESULT (STDMETHODCALLTYPE* CreateSimpleScanout)(__x_ABI_CWindows_CDevices_CDisplay_CCore_CIDisplayDevice* This,
        __x_ABI_CWindows_CDevices_CDisplay_CCore_CIDisplaySource* pSource,
        __x_ABI_CWindows_CDevices_CDisplay_CCore_CIDisplaySurface* pSurface,
        UINT32 SubResourceIndex,
        UINT32 SyncInterval,
        __x_ABI_CWindows_CDevices_CDisplay_CCore_CIDisplayScanout** result);
    HRESULT (STDMETHODCALLTYPE* IsCapabilitySupported)(__x_ABI_CWindows_CDevices_CDisplay_CCore_CIDisplayDevice* This,
        enum __x_ABI_CWindows_CDevices_CDisplay_CCore_CDisplayDeviceCapability capability,
        boolean* result);

        END_INTERFACE
    } __x_ABI_CWindows_CDevices_CDisplay_CCore_CIDisplayDeviceVtbl;

    interface __x_ABI_CWindows_CDevices_CDisplay_CCore_CIDisplayDevice
    {
        CONST_VTBL struct __x_ABI_CWindows_CDevices_CDisplay_CCore_CIDisplayDeviceVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CDevices_CDisplay_CCore_CIDisplayDevice;
#endif /* !defined(____x_ABI_CWindows_CDevices_CDisplay_CCore_CIDisplayDevice_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CDevices_CDisplay_CCore_CIDisplayFence_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CDevices_CDisplay_CCore_CIDisplayFence_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CDevices_CDisplay_CCore_CIDisplayFenceVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CDevices_CDisplay_CCore_CIDisplayFence* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CDevices_CDisplay_CCore_CIDisplayFence* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CDevices_CDisplay_CCore_CIDisplayFence* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CDevices_CDisplay_CCore_CIDisplayFence* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CDevices_CDisplay_CCore_CIDisplayFence* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CDevices_CDisplay_CCore_CIDisplayFence* This,
            TrustLevel* trustLevel);
    
        END_INTERFACE
    } __x_ABI_CWindows_CDevices_CDisplay_CCore_CIDisplayFenceVtbl;

    interface __x_ABI_CWindows_CDevices_CDisplay_CCore_CIDisplayFence
    {
        CONST_VTBL struct __x_ABI_CWindows_CDevices_CDisplay_CCore_CIDisplayFenceVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CDevices_CDisplay_CCore_CIDisplayFence;
#endif /* !defined(____x_ABI_CWindows_CDevices_CDisplay_CCore_CIDisplayFence_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CDevices_CDisplay_CCore_CIDisplayManager_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CDevices_CDisplay_CCore_CIDisplayManager_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CDevices_CDisplay_CCore_CIDisplayManagerVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CDevices_CDisplay_CCore_CIDisplayManager* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CDevices_CDisplay_CCore_CIDisplayManager* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CDevices_CDisplay_CCore_CIDisplayManager* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CDevices_CDisplay_CCore_CIDisplayManager* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CDevices_CDisplay_CCore_CIDisplayManager* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CDevices_CDisplay_CCore_CIDisplayManager* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* GetCurrentTargets)(__x_ABI_CWindows_CDevices_CDisplay_CCore_CIDisplayManager* This,
        __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CDevices__CDisplay__CCore__CDisplayTarget** result);
    HRESULT (STDMETHODCALLTYPE* GetCurrentAdapters)(__x_ABI_CWindows_CDevices_CDisplay_CCore_CIDisplayManager* This,
        __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CDevices__CDisplay__CCore__CDisplayAdapter** result);
    HRESULT (STDMETHODCALLTYPE* TryAcquireTarget)(__x_ABI_CWindows_CDevices_CDisplay_CCore_CIDisplayManager* This,
        __x_ABI_CWindows_CDevices_CDisplay_CCore_CIDisplayTarget* target,
        enum __x_ABI_CWindows_CDevices_CDisplay_CCore_CDisplayManagerResult* result);
    HRESULT (STDMETHODCALLTYPE* ReleaseTarget)(__x_ABI_CWindows_CDevices_CDisplay_CCore_CIDisplayManager* This,
        __x_ABI_CWindows_CDevices_CDisplay_CCore_CIDisplayTarget* target);
    HRESULT (STDMETHODCALLTYPE* TryReadCurrentStateForAllTargets)(__x_ABI_CWindows_CDevices_CDisplay_CCore_CIDisplayManager* This,
        __x_ABI_CWindows_CDevices_CDisplay_CCore_CIDisplayManagerResultWithState** result);
    HRESULT (STDMETHODCALLTYPE* TryAcquireTargetsAndReadCurrentState)(__x_ABI_CWindows_CDevices_CDisplay_CCore_CIDisplayManager* This,
        __x_ABI_C__FIIterable_1___x_ABI_CWindows__CDevices__CDisplay__CCore__CDisplayTarget* targets,
        __x_ABI_CWindows_CDevices_CDisplay_CCore_CIDisplayManagerResultWithState** result);
    HRESULT (STDMETHODCALLTYPE* TryAcquireTargetsAndCreateEmptyState)(__x_ABI_CWindows_CDevices_CDisplay_CCore_CIDisplayManager* This,
        __x_ABI_C__FIIterable_1___x_ABI_CWindows__CDevices__CDisplay__CCore__CDisplayTarget* targets,
        __x_ABI_CWindows_CDevices_CDisplay_CCore_CIDisplayManagerResultWithState** result);
    HRESULT (STDMETHODCALLTYPE* TryAcquireTargetsAndCreateSubstate)(__x_ABI_CWindows_CDevices_CDisplay_CCore_CIDisplayManager* This,
        __x_ABI_CWindows_CDevices_CDisplay_CCore_CIDisplayState* existingState,
        __x_ABI_C__FIIterable_1___x_ABI_CWindows__CDevices__CDisplay__CCore__CDisplayTarget* targets,
        __x_ABI_CWindows_CDevices_CDisplay_CCore_CIDisplayManagerResultWithState** result);
    HRESULT (STDMETHODCALLTYPE* CreateDisplayDevice)(__x_ABI_CWindows_CDevices_CDisplay_CCore_CIDisplayManager* This,
        __x_ABI_CWindows_CDevices_CDisplay_CCore_CIDisplayAdapter* adapter,
        __x_ABI_CWindows_CDevices_CDisplay_CCore_CIDisplayDevice** result);
    HRESULT (STDMETHODCALLTYPE* add_Enabled)(__x_ABI_CWindows_CDevices_CDisplay_CCore_CIDisplayManager* This,
        __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CDevices__CDisplay__CCore__CDisplayManager___x_ABI_CWindows__CDevices__CDisplay__CCore__CDisplayManagerEnabledEventArgs* handler,
        EventRegistrationToken* token);
    HRESULT (STDMETHODCALLTYPE* remove_Enabled)(__x_ABI_CWindows_CDevices_CDisplay_CCore_CIDisplayManager* This,
        EventRegistrationToken token);
    HRESULT (STDMETHODCALLTYPE* add_Disabled)(__x_ABI_CWindows_CDevices_CDisplay_CCore_CIDisplayManager* This,
        __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CDevices__CDisplay__CCore__CDisplayManager___x_ABI_CWindows__CDevices__CDisplay__CCore__CDisplayManagerDisabledEventArgs* handler,
        EventRegistrationToken* token);
    HRESULT (STDMETHODCALLTYPE* remove_Disabled)(__x_ABI_CWindows_CDevices_CDisplay_CCore_CIDisplayManager* This,
        EventRegistrationToken token);
    HRESULT (STDMETHODCALLTYPE* add_Changed)(__x_ABI_CWindows_CDevices_CDisplay_CCore_CIDisplayManager* This,
        __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CDevices__CDisplay__CCore__CDisplayManager___x_ABI_CWindows__CDevices__CDisplay__CCore__CDisplayManagerChangedEventArgs* handler,
        EventRegistrationToken* token);
    HRESULT (STDMETHODCALLTYPE* remove_Changed)(__x_ABI_CWindows_CDevices_CDisplay_CCore_CIDisplayManager* This,
        EventRegistrationToken token);
    HRESULT (STDMETHODCALLTYPE* add_PathsFailedOrInvalidated)(__x_ABI_CWindows_CDevices_CDisplay_CCore_CIDisplayManager* This,
        __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CDevices__CDisplay__CCore__CDisplayManager___x_ABI_CWindows__CDevices__CDisplay__CCore__CDisplayManagerPathsFailedOrInvalidatedEventArgs* handler,
        EventRegistrationToken* token);
    HRESULT (STDMETHODCALLTYPE* remove_PathsFailedOrInvalidated)(__x_ABI_CWindows_CDevices_CDisplay_CCore_CIDisplayManager* This,
        EventRegistrationToken token);
    HRESULT (STDMETHODCALLTYPE* Start)(__x_ABI_CWindows_CDevices_CDisplay_CCore_CIDisplayManager* This);
    HRESULT (STDMETHODCALLTYPE* Stop)(__x_ABI_CWindows_CDevices_CDisplay_CCore_CIDisplayManager* This);

        END_INTERFACE
    } __x_ABI_CWindows_CDevices_CDisplay_CCore_CIDisplayManagerVtbl;

    interface __x_ABI_CWindows_CDevices_CDisplay_CCore_CIDisplayManager
    {
        CONST_VTBL struct __x_ABI_CWindows_CDevices_CDisplay_CCore_CIDisplayManagerVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CDevices_CDisplay_CCore_CIDisplayManager;
#endif /* !defined(____x_ABI_CWindows_CDevices_CDisplay_CCore_CIDisplayManager_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CDevices_CDisplay_CCore_CIDisplayManagerChangedEventArgs_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CDevices_CDisplay_CCore_CIDisplayManagerChangedEventArgs_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CDevices_CDisplay_CCore_CIDisplayManagerChangedEventArgsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CDevices_CDisplay_CCore_CIDisplayManagerChangedEventArgs* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CDevices_CDisplay_CCore_CIDisplayManagerChangedEventArgs* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CDevices_CDisplay_CCore_CIDisplayManagerChangedEventArgs* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CDevices_CDisplay_CCore_CIDisplayManagerChangedEventArgs* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CDevices_CDisplay_CCore_CIDisplayManagerChangedEventArgs* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CDevices_CDisplay_CCore_CIDisplayManagerChangedEventArgs* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Handled)(__x_ABI_CWindows_CDevices_CDisplay_CCore_CIDisplayManagerChangedEventArgs* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* put_Handled)(__x_ABI_CWindows_CDevices_CDisplay_CCore_CIDisplayManagerChangedEventArgs* This,
        boolean value);
    HRESULT (STDMETHODCALLTYPE* GetDeferral)(__x_ABI_CWindows_CDevices_CDisplay_CCore_CIDisplayManagerChangedEventArgs* This,
        __x_ABI_CWindows_CFoundation_CIDeferral** result);

        END_INTERFACE
    } __x_ABI_CWindows_CDevices_CDisplay_CCore_CIDisplayManagerChangedEventArgsVtbl;

    interface __x_ABI_CWindows_CDevices_CDisplay_CCore_CIDisplayManagerChangedEventArgs
    {
        CONST_VTBL struct __x_ABI_CWindows_CDevices_CDisplay_CCore_CIDisplayManagerChangedEventArgsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CDevices_CDisplay_CCore_CIDisplayManagerChangedEventArgs;
#endif /* !defined(____x_ABI_CWindows_CDevices_CDisplay_CCore_CIDisplayManagerChangedEventArgs_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CDevices_CDisplay_CCore_CIDisplayManagerDisabledEventArgs_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CDevices_CDisplay_CCore_CIDisplayManagerDisabledEventArgs_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CDevices_CDisplay_CCore_CIDisplayManagerDisabledEventArgsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CDevices_CDisplay_CCore_CIDisplayManagerDisabledEventArgs* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CDevices_CDisplay_CCore_CIDisplayManagerDisabledEventArgs* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CDevices_CDisplay_CCore_CIDisplayManagerDisabledEventArgs* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CDevices_CDisplay_CCore_CIDisplayManagerDisabledEventArgs* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CDevices_CDisplay_CCore_CIDisplayManagerDisabledEventArgs* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CDevices_CDisplay_CCore_CIDisplayManagerDisabledEventArgs* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Handled)(__x_ABI_CWindows_CDevices_CDisplay_CCore_CIDisplayManagerDisabledEventArgs* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* put_Handled)(__x_ABI_CWindows_CDevices_CDisplay_CCore_CIDisplayManagerDisabledEventArgs* This,
        boolean value);
    HRESULT (STDMETHODCALLTYPE* GetDeferral)(__x_ABI_CWindows_CDevices_CDisplay_CCore_CIDisplayManagerDisabledEventArgs* This,
        __x_ABI_CWindows_CFoundation_CIDeferral** result);

        END_INTERFACE
    } __x_ABI_CWindows_CDevices_CDisplay_CCore_CIDisplayManagerDisabledEventArgsVtbl;

    interface __x_ABI_CWindows_CDevices_CDisplay_CCore_CIDisplayManagerDisabledEventArgs
    {
        CONST_VTBL struct __x_ABI_CWindows_CDevices_CDisplay_CCore_CIDisplayManagerDisabledEventArgsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CDevices_CDisplay_CCore_CIDisplayManagerDisabledEventArgs;
#endif /* !defined(____x_ABI_CWindows_CDevices_CDisplay_CCore_CIDisplayManagerDisabledEventArgs_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CDevices_CDisplay_CCore_CIDisplayManagerEnabledEventArgs_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CDevices_CDisplay_CCore_CIDisplayManagerEnabledEventArgs_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CDevices_CDisplay_CCore_CIDisplayManagerEnabledEventArgsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CDevices_CDisplay_CCore_CIDisplayManagerEnabledEventArgs* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CDevices_CDisplay_CCore_CIDisplayManagerEnabledEventArgs* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CDevices_CDisplay_CCore_CIDisplayManagerEnabledEventArgs* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CDevices_CDisplay_CCore_CIDisplayManagerEnabledEventArgs* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CDevices_CDisplay_CCore_CIDisplayManagerEnabledEventArgs* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CDevices_CDisplay_CCore_CIDisplayManagerEnabledEventArgs* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Handled)(__x_ABI_CWindows_CDevices_CDisplay_CCore_CIDisplayManagerEnabledEventArgs* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* put_Handled)(__x_ABI_CWindows_CDevices_CDisplay_CCore_CIDisplayManagerEnabledEventArgs* This,
        boolean value);
    HRESULT (STDMETHODCALLTYPE* GetDeferral)(__x_ABI_CWindows_CDevices_CDisplay_CCore_CIDisplayManagerEnabledEventArgs* This,
        __x_ABI_CWindows_CFoundation_CIDeferral** result);

        END_INTERFACE
    } __x_ABI_CWindows_CDevices_CDisplay_CCore_CIDisplayManagerEnabledEventArgsVtbl;

    interface __x_ABI_CWindows_CDevices_CDisplay_CCore_CIDisplayManagerEnabledEventArgs
    {
        CONST_VTBL struct __x_ABI_CWindows_CDevices_CDisplay_CCore_CIDisplayManagerEnabledEventArgsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CDevices_CDisplay_CCore_CIDisplayManagerEnabledEventArgs;
#endif /* !defined(____x_ABI_CWindows_CDevices_CDisplay_CCore_CIDisplayManagerEnabledEventArgs_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CDevices_CDisplay_CCore_CIDisplayManagerPathsFailedOrInvalidatedEventArgs_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CDevices_CDisplay_CCore_CIDisplayManagerPathsFailedOrInvalidatedEventArgs_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CDevices_CDisplay_CCore_CIDisplayManagerPathsFailedOrInvalidatedEventArgsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CDevices_CDisplay_CCore_CIDisplayManagerPathsFailedOrInvalidatedEventArgs* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CDevices_CDisplay_CCore_CIDisplayManagerPathsFailedOrInvalidatedEventArgs* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CDevices_CDisplay_CCore_CIDisplayManagerPathsFailedOrInvalidatedEventArgs* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CDevices_CDisplay_CCore_CIDisplayManagerPathsFailedOrInvalidatedEventArgs* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CDevices_CDisplay_CCore_CIDisplayManagerPathsFailedOrInvalidatedEventArgs* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CDevices_CDisplay_CCore_CIDisplayManagerPathsFailedOrInvalidatedEventArgs* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Handled)(__x_ABI_CWindows_CDevices_CDisplay_CCore_CIDisplayManagerPathsFailedOrInvalidatedEventArgs* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* put_Handled)(__x_ABI_CWindows_CDevices_CDisplay_CCore_CIDisplayManagerPathsFailedOrInvalidatedEventArgs* This,
        boolean value);
    HRESULT (STDMETHODCALLTYPE* GetDeferral)(__x_ABI_CWindows_CDevices_CDisplay_CCore_CIDisplayManagerPathsFailedOrInvalidatedEventArgs* This,
        __x_ABI_CWindows_CFoundation_CIDeferral** result);

        END_INTERFACE
    } __x_ABI_CWindows_CDevices_CDisplay_CCore_CIDisplayManagerPathsFailedOrInvalidatedEventArgsVtbl;

    interface __x_ABI_CWindows_CDevices_CDisplay_CCore_CIDisplayManagerPathsFailedOrInvalidatedEventArgs
    {
        CONST_VTBL struct __x_ABI_CWindows_CDevices_CDisplay_CCore_CIDisplayManagerPathsFailedOrInvalidatedEventArgsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CDevices_CDisplay_CCore_CIDisplayManagerPathsFailedOrInvalidatedEventArgs;
#endif /* !defined(____x_ABI_CWindows_CDevices_CDisplay_CCore_CIDisplayManagerPathsFailedOrInvalidatedEventArgs_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CDevices_CDisplay_CCore_CIDisplayManagerResultWithState_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CDevices_CDisplay_CCore_CIDisplayManagerResultWithState_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CDevices_CDisplay_CCore_CIDisplayManagerResultWithStateVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CDevices_CDisplay_CCore_CIDisplayManagerResultWithState* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CDevices_CDisplay_CCore_CIDisplayManagerResultWithState* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CDevices_CDisplay_CCore_CIDisplayManagerResultWithState* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CDevices_CDisplay_CCore_CIDisplayManagerResultWithState* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CDevices_CDisplay_CCore_CIDisplayManagerResultWithState* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CDevices_CDisplay_CCore_CIDisplayManagerResultWithState* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_ErrorCode)(__x_ABI_CWindows_CDevices_CDisplay_CCore_CIDisplayManagerResultWithState* This,
        enum __x_ABI_CWindows_CDevices_CDisplay_CCore_CDisplayManagerResult* value);
    HRESULT (STDMETHODCALLTYPE* get_ExtendedErrorCode)(__x_ABI_CWindows_CDevices_CDisplay_CCore_CIDisplayManagerResultWithState* This,
        HRESULT* value);
    HRESULT (STDMETHODCALLTYPE* get_State)(__x_ABI_CWindows_CDevices_CDisplay_CCore_CIDisplayManagerResultWithState* This,
        __x_ABI_CWindows_CDevices_CDisplay_CCore_CIDisplayState** value);

        END_INTERFACE
    } __x_ABI_CWindows_CDevices_CDisplay_CCore_CIDisplayManagerResultWithStateVtbl;

    interface __x_ABI_CWindows_CDevices_CDisplay_CCore_CIDisplayManagerResultWithState
    {
        CONST_VTBL struct __x_ABI_CWindows_CDevices_CDisplay_CCore_CIDisplayManagerResultWithStateVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CDevices_CDisplay_CCore_CIDisplayManagerResultWithState;
#endif /* !defined(____x_ABI_CWindows_CDevices_CDisplay_CCore_CIDisplayManagerResultWithState_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CDevices_CDisplay_CCore_CIDisplayManagerStatics_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CDevices_CDisplay_CCore_CIDisplayManagerStatics_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CDevices_CDisplay_CCore_CIDisplayManagerStaticsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CDevices_CDisplay_CCore_CIDisplayManagerStatics* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CDevices_CDisplay_CCore_CIDisplayManagerStatics* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CDevices_CDisplay_CCore_CIDisplayManagerStatics* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CDevices_CDisplay_CCore_CIDisplayManagerStatics* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CDevices_CDisplay_CCore_CIDisplayManagerStatics* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CDevices_CDisplay_CCore_CIDisplayManagerStatics* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* Create)(__x_ABI_CWindows_CDevices_CDisplay_CCore_CIDisplayManagerStatics* This,
        enum __x_ABI_CWindows_CDevices_CDisplay_CCore_CDisplayManagerOptions options,
        __x_ABI_CWindows_CDevices_CDisplay_CCore_CIDisplayManager** result);

        END_INTERFACE
    } __x_ABI_CWindows_CDevices_CDisplay_CCore_CIDisplayManagerStaticsVtbl;

    interface __x_ABI_CWindows_CDevices_CDisplay_CCore_CIDisplayManagerStatics
    {
        CONST_VTBL struct __x_ABI_CWindows_CDevices_CDisplay_CCore_CIDisplayManagerStaticsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CDevices_CDisplay_CCore_CIDisplayManagerStatics;
#endif /* !defined(____x_ABI_CWindows_CDevices_CDisplay_CCore_CIDisplayManagerStatics_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CDevices_CDisplay_CCore_CIDisplayModeInfo_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CDevices_CDisplay_CCore_CIDisplayModeInfo_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CDevices_CDisplay_CCore_CIDisplayModeInfoVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CDevices_CDisplay_CCore_CIDisplayModeInfo* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CDevices_CDisplay_CCore_CIDisplayModeInfo* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CDevices_CDisplay_CCore_CIDisplayModeInfo* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CDevices_CDisplay_CCore_CIDisplayModeInfo* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CDevices_CDisplay_CCore_CIDisplayModeInfo* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CDevices_CDisplay_CCore_CIDisplayModeInfo* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_SourceResolution)(__x_ABI_CWindows_CDevices_CDisplay_CCore_CIDisplayModeInfo* This,
        struct __x_ABI_CWindows_CGraphics_CSizeInt32* value);
    HRESULT (STDMETHODCALLTYPE* get_IsStereo)(__x_ABI_CWindows_CDevices_CDisplay_CCore_CIDisplayModeInfo* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* get_SourcePixelFormat)(__x_ABI_CWindows_CDevices_CDisplay_CCore_CIDisplayModeInfo* This,
        enum __x_ABI_CWindows_CGraphics_CDirectX_CDirectXPixelFormat* value);
    HRESULT (STDMETHODCALLTYPE* get_TargetResolution)(__x_ABI_CWindows_CDevices_CDisplay_CCore_CIDisplayModeInfo* This,
        struct __x_ABI_CWindows_CGraphics_CSizeInt32* value);
    HRESULT (STDMETHODCALLTYPE* get_PresentationRate)(__x_ABI_CWindows_CDevices_CDisplay_CCore_CIDisplayModeInfo* This,
        struct __x_ABI_CWindows_CDevices_CDisplay_CCore_CDisplayPresentationRate* value);
    HRESULT (STDMETHODCALLTYPE* get_IsInterlaced)(__x_ABI_CWindows_CDevices_CDisplay_CCore_CIDisplayModeInfo* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* GetWireFormatSupportedBitsPerChannel)(__x_ABI_CWindows_CDevices_CDisplay_CCore_CIDisplayModeInfo* This,
        enum __x_ABI_CWindows_CDevices_CDisplay_CCore_CDisplayWireFormatPixelEncoding encoding,
        enum __x_ABI_CWindows_CDevices_CDisplay_CCore_CDisplayBitsPerChannel* result);
    HRESULT (STDMETHODCALLTYPE* IsWireFormatSupported)(__x_ABI_CWindows_CDevices_CDisplay_CCore_CIDisplayModeInfo* This,
        __x_ABI_CWindows_CDevices_CDisplay_CCore_CIDisplayWireFormat* wireFormat,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* get_Properties)(__x_ABI_CWindows_CDevices_CDisplay_CCore_CIDisplayModeInfo* This,
        __x_ABI_C__FIMapView_2_GUID_IInspectable** value);

        END_INTERFACE
    } __x_ABI_CWindows_CDevices_CDisplay_CCore_CIDisplayModeInfoVtbl;

    interface __x_ABI_CWindows_CDevices_CDisplay_CCore_CIDisplayModeInfo
    {
        CONST_VTBL struct __x_ABI_CWindows_CDevices_CDisplay_CCore_CIDisplayModeInfoVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CDevices_CDisplay_CCore_CIDisplayModeInfo;
#endif /* !defined(____x_ABI_CWindows_CDevices_CDisplay_CCore_CIDisplayModeInfo_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CDevices_CDisplay_CCore_CIDisplayPath_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CDevices_CDisplay_CCore_CIDisplayPath_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CDevices_CDisplay_CCore_CIDisplayPathVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CDevices_CDisplay_CCore_CIDisplayPath* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CDevices_CDisplay_CCore_CIDisplayPath* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CDevices_CDisplay_CCore_CIDisplayPath* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CDevices_CDisplay_CCore_CIDisplayPath* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CDevices_CDisplay_CCore_CIDisplayPath* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CDevices_CDisplay_CCore_CIDisplayPath* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_View)(__x_ABI_CWindows_CDevices_CDisplay_CCore_CIDisplayPath* This,
        __x_ABI_CWindows_CDevices_CDisplay_CCore_CIDisplayView** value);
    HRESULT (STDMETHODCALLTYPE* get_Target)(__x_ABI_CWindows_CDevices_CDisplay_CCore_CIDisplayPath* This,
        __x_ABI_CWindows_CDevices_CDisplay_CCore_CIDisplayTarget** value);
    HRESULT (STDMETHODCALLTYPE* get_Status)(__x_ABI_CWindows_CDevices_CDisplay_CCore_CIDisplayPath* This,
        enum __x_ABI_CWindows_CDevices_CDisplay_CCore_CDisplayPathStatus* value);
    HRESULT (STDMETHODCALLTYPE* get_SourceResolution)(__x_ABI_CWindows_CDevices_CDisplay_CCore_CIDisplayPath* This,
        __x_ABI_C__FIReference_1___x_ABI_CWindows__CGraphics__CSizeInt32** value);
    HRESULT (STDMETHODCALLTYPE* put_SourceResolution)(__x_ABI_CWindows_CDevices_CDisplay_CCore_CIDisplayPath* This,
        __x_ABI_C__FIReference_1___x_ABI_CWindows__CGraphics__CSizeInt32* value);
    HRESULT (STDMETHODCALLTYPE* get_SourcePixelFormat)(__x_ABI_CWindows_CDevices_CDisplay_CCore_CIDisplayPath* This,
        enum __x_ABI_CWindows_CGraphics_CDirectX_CDirectXPixelFormat* value);
    HRESULT (STDMETHODCALLTYPE* put_SourcePixelFormat)(__x_ABI_CWindows_CDevices_CDisplay_CCore_CIDisplayPath* This,
        enum __x_ABI_CWindows_CGraphics_CDirectX_CDirectXPixelFormat value);
    HRESULT (STDMETHODCALLTYPE* get_IsStereo)(__x_ABI_CWindows_CDevices_CDisplay_CCore_CIDisplayPath* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* put_IsStereo)(__x_ABI_CWindows_CDevices_CDisplay_CCore_CIDisplayPath* This,
        boolean value);
    HRESULT (STDMETHODCALLTYPE* get_TargetResolution)(__x_ABI_CWindows_CDevices_CDisplay_CCore_CIDisplayPath* This,
        __x_ABI_C__FIReference_1___x_ABI_CWindows__CGraphics__CSizeInt32** value);
    HRESULT (STDMETHODCALLTYPE* put_TargetResolution)(__x_ABI_CWindows_CDevices_CDisplay_CCore_CIDisplayPath* This,
        __x_ABI_C__FIReference_1___x_ABI_CWindows__CGraphics__CSizeInt32* value);
    HRESULT (STDMETHODCALLTYPE* get_PresentationRate)(__x_ABI_CWindows_CDevices_CDisplay_CCore_CIDisplayPath* This,
        __x_ABI_C__FIReference_1___x_ABI_CWindows__CDevices__CDisplay__CCore__CDisplayPresentationRate** value);
    HRESULT (STDMETHODCALLTYPE* put_PresentationRate)(__x_ABI_CWindows_CDevices_CDisplay_CCore_CIDisplayPath* This,
        __x_ABI_C__FIReference_1___x_ABI_CWindows__CDevices__CDisplay__CCore__CDisplayPresentationRate* value);
    HRESULT (STDMETHODCALLTYPE* get_IsInterlaced)(__x_ABI_CWindows_CDevices_CDisplay_CCore_CIDisplayPath* This,
        __x_ABI_C__FIReference_1_boolean** value);
    HRESULT (STDMETHODCALLTYPE* put_IsInterlaced)(__x_ABI_CWindows_CDevices_CDisplay_CCore_CIDisplayPath* This,
        __x_ABI_C__FIReference_1_boolean* value);
    HRESULT (STDMETHODCALLTYPE* get_WireFormat)(__x_ABI_CWindows_CDevices_CDisplay_CCore_CIDisplayPath* This,
        __x_ABI_CWindows_CDevices_CDisplay_CCore_CIDisplayWireFormat** value);
    HRESULT (STDMETHODCALLTYPE* put_WireFormat)(__x_ABI_CWindows_CDevices_CDisplay_CCore_CIDisplayPath* This,
        __x_ABI_CWindows_CDevices_CDisplay_CCore_CIDisplayWireFormat* value);
    HRESULT (STDMETHODCALLTYPE* get_Rotation)(__x_ABI_CWindows_CDevices_CDisplay_CCore_CIDisplayPath* This,
        enum __x_ABI_CWindows_CDevices_CDisplay_CCore_CDisplayRotation* value);
    HRESULT (STDMETHODCALLTYPE* put_Rotation)(__x_ABI_CWindows_CDevices_CDisplay_CCore_CIDisplayPath* This,
        enum __x_ABI_CWindows_CDevices_CDisplay_CCore_CDisplayRotation value);
    HRESULT (STDMETHODCALLTYPE* get_Scaling)(__x_ABI_CWindows_CDevices_CDisplay_CCore_CIDisplayPath* This,
        enum __x_ABI_CWindows_CDevices_CDisplay_CCore_CDisplayPathScaling* value);
    HRESULT (STDMETHODCALLTYPE* put_Scaling)(__x_ABI_CWindows_CDevices_CDisplay_CCore_CIDisplayPath* This,
        enum __x_ABI_CWindows_CDevices_CDisplay_CCore_CDisplayPathScaling value);
    HRESULT (STDMETHODCALLTYPE* FindModes)(__x_ABI_CWindows_CDevices_CDisplay_CCore_CIDisplayPath* This,
        enum __x_ABI_CWindows_CDevices_CDisplay_CCore_CDisplayModeQueryOptions flags,
        __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CDevices__CDisplay__CCore__CDisplayModeInfo** result);
    HRESULT (STDMETHODCALLTYPE* ApplyPropertiesFromMode)(__x_ABI_CWindows_CDevices_CDisplay_CCore_CIDisplayPath* This,
        __x_ABI_CWindows_CDevices_CDisplay_CCore_CIDisplayModeInfo* modeResult);
    HRESULT (STDMETHODCALLTYPE* get_Properties)(__x_ABI_CWindows_CDevices_CDisplay_CCore_CIDisplayPath* This,
        __x_ABI_C__FIMap_2_GUID_IInspectable** value);

        END_INTERFACE
    } __x_ABI_CWindows_CDevices_CDisplay_CCore_CIDisplayPathVtbl;

    interface __x_ABI_CWindows_CDevices_CDisplay_CCore_CIDisplayPath
    {
        CONST_VTBL struct __x_ABI_CWindows_CDevices_CDisplay_CCore_CIDisplayPathVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CDevices_CDisplay_CCore_CIDisplayPath;
#endif /* !defined(____x_ABI_CWindows_CDevices_CDisplay_CCore_CIDisplayPath_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CDevices_CDisplay_CCore_CIDisplayPrimaryDescription_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CDevices_CDisplay_CCore_CIDisplayPrimaryDescription_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CDevices_CDisplay_CCore_CIDisplayPrimaryDescriptionVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CDevices_CDisplay_CCore_CIDisplayPrimaryDescription* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CDevices_CDisplay_CCore_CIDisplayPrimaryDescription* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CDevices_CDisplay_CCore_CIDisplayPrimaryDescription* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CDevices_CDisplay_CCore_CIDisplayPrimaryDescription* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CDevices_CDisplay_CCore_CIDisplayPrimaryDescription* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CDevices_CDisplay_CCore_CIDisplayPrimaryDescription* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Width)(__x_ABI_CWindows_CDevices_CDisplay_CCore_CIDisplayPrimaryDescription* This,
        UINT32* value);
    HRESULT (STDMETHODCALLTYPE* get_Height)(__x_ABI_CWindows_CDevices_CDisplay_CCore_CIDisplayPrimaryDescription* This,
        UINT32* value);
    HRESULT (STDMETHODCALLTYPE* get_Format)(__x_ABI_CWindows_CDevices_CDisplay_CCore_CIDisplayPrimaryDescription* This,
        enum __x_ABI_CWindows_CGraphics_CDirectX_CDirectXPixelFormat* value);
    HRESULT (STDMETHODCALLTYPE* get_ColorSpace)(__x_ABI_CWindows_CDevices_CDisplay_CCore_CIDisplayPrimaryDescription* This,
        enum __x_ABI_CWindows_CGraphics_CDirectX_CDirectXColorSpace* value);
    HRESULT (STDMETHODCALLTYPE* get_IsStereo)(__x_ABI_CWindows_CDevices_CDisplay_CCore_CIDisplayPrimaryDescription* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* get_MultisampleDescription)(__x_ABI_CWindows_CDevices_CDisplay_CCore_CIDisplayPrimaryDescription* This,
        struct __x_ABI_CWindows_CGraphics_CDirectX_CDirect3D11_CDirect3DMultisampleDescription* value);
    HRESULT (STDMETHODCALLTYPE* get_Properties)(__x_ABI_CWindows_CDevices_CDisplay_CCore_CIDisplayPrimaryDescription* This,
        __x_ABI_C__FIMapView_2_GUID_IInspectable** value);

        END_INTERFACE
    } __x_ABI_CWindows_CDevices_CDisplay_CCore_CIDisplayPrimaryDescriptionVtbl;

    interface __x_ABI_CWindows_CDevices_CDisplay_CCore_CIDisplayPrimaryDescription
    {
        CONST_VTBL struct __x_ABI_CWindows_CDevices_CDisplay_CCore_CIDisplayPrimaryDescriptionVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CDevices_CDisplay_CCore_CIDisplayPrimaryDescription;
#endif /* !defined(____x_ABI_CWindows_CDevices_CDisplay_CCore_CIDisplayPrimaryDescription_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CDevices_CDisplay_CCore_CIDisplayPrimaryDescriptionFactory_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CDevices_CDisplay_CCore_CIDisplayPrimaryDescriptionFactory_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CDevices_CDisplay_CCore_CIDisplayPrimaryDescriptionFactoryVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CDevices_CDisplay_CCore_CIDisplayPrimaryDescriptionFactory* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CDevices_CDisplay_CCore_CIDisplayPrimaryDescriptionFactory* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CDevices_CDisplay_CCore_CIDisplayPrimaryDescriptionFactory* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CDevices_CDisplay_CCore_CIDisplayPrimaryDescriptionFactory* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CDevices_CDisplay_CCore_CIDisplayPrimaryDescriptionFactory* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CDevices_CDisplay_CCore_CIDisplayPrimaryDescriptionFactory* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* CreateInstance)(__x_ABI_CWindows_CDevices_CDisplay_CCore_CIDisplayPrimaryDescriptionFactory* This,
        UINT32 width,
        UINT32 height,
        enum __x_ABI_CWindows_CGraphics_CDirectX_CDirectXPixelFormat pixelFormat,
        enum __x_ABI_CWindows_CGraphics_CDirectX_CDirectXColorSpace colorSpace,
        boolean isStereo,
        struct __x_ABI_CWindows_CGraphics_CDirectX_CDirect3D11_CDirect3DMultisampleDescription multisampleDescription,
        __x_ABI_CWindows_CDevices_CDisplay_CCore_CIDisplayPrimaryDescription** value);

        END_INTERFACE
    } __x_ABI_CWindows_CDevices_CDisplay_CCore_CIDisplayPrimaryDescriptionFactoryVtbl;

    interface __x_ABI_CWindows_CDevices_CDisplay_CCore_CIDisplayPrimaryDescriptionFactory
    {
        CONST_VTBL struct __x_ABI_CWindows_CDevices_CDisplay_CCore_CIDisplayPrimaryDescriptionFactoryVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CDevices_CDisplay_CCore_CIDisplayPrimaryDescriptionFactory;
#endif /* !defined(____x_ABI_CWindows_CDevices_CDisplay_CCore_CIDisplayPrimaryDescriptionFactory_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CDevices_CDisplay_CCore_CIDisplayPrimaryDescriptionStatics_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CDevices_CDisplay_CCore_CIDisplayPrimaryDescriptionStatics_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CDevices_CDisplay_CCore_CIDisplayPrimaryDescriptionStaticsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CDevices_CDisplay_CCore_CIDisplayPrimaryDescriptionStatics* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CDevices_CDisplay_CCore_CIDisplayPrimaryDescriptionStatics* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CDevices_CDisplay_CCore_CIDisplayPrimaryDescriptionStatics* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CDevices_CDisplay_CCore_CIDisplayPrimaryDescriptionStatics* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CDevices_CDisplay_CCore_CIDisplayPrimaryDescriptionStatics* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CDevices_CDisplay_CCore_CIDisplayPrimaryDescriptionStatics* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* CreateWithProperties)(__x_ABI_CWindows_CDevices_CDisplay_CCore_CIDisplayPrimaryDescriptionStatics* This,
        __x_ABI_C__FIIterable_1___x_ABI_C__FIKeyValuePair_2_GUID_IInspectable* extraProperties,
        UINT32 width,
        UINT32 height,
        enum __x_ABI_CWindows_CGraphics_CDirectX_CDirectXPixelFormat pixelFormat,
        enum __x_ABI_CWindows_CGraphics_CDirectX_CDirectXColorSpace colorSpace,
        boolean isStereo,
        struct __x_ABI_CWindows_CGraphics_CDirectX_CDirect3D11_CDirect3DMultisampleDescription multisampleDescription,
        __x_ABI_CWindows_CDevices_CDisplay_CCore_CIDisplayPrimaryDescription** result);

        END_INTERFACE
    } __x_ABI_CWindows_CDevices_CDisplay_CCore_CIDisplayPrimaryDescriptionStaticsVtbl;

    interface __x_ABI_CWindows_CDevices_CDisplay_CCore_CIDisplayPrimaryDescriptionStatics
    {
        CONST_VTBL struct __x_ABI_CWindows_CDevices_CDisplay_CCore_CIDisplayPrimaryDescriptionStaticsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CDevices_CDisplay_CCore_CIDisplayPrimaryDescriptionStatics;
#endif /* !defined(____x_ABI_CWindows_CDevices_CDisplay_CCore_CIDisplayPrimaryDescriptionStatics_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CDevices_CDisplay_CCore_CIDisplayScanout_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CDevices_CDisplay_CCore_CIDisplayScanout_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CDevices_CDisplay_CCore_CIDisplayScanoutVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CDevices_CDisplay_CCore_CIDisplayScanout* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CDevices_CDisplay_CCore_CIDisplayScanout* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CDevices_CDisplay_CCore_CIDisplayScanout* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CDevices_CDisplay_CCore_CIDisplayScanout* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CDevices_CDisplay_CCore_CIDisplayScanout* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CDevices_CDisplay_CCore_CIDisplayScanout* This,
            TrustLevel* trustLevel);
    
        END_INTERFACE
    } __x_ABI_CWindows_CDevices_CDisplay_CCore_CIDisplayScanoutVtbl;

    interface __x_ABI_CWindows_CDevices_CDisplay_CCore_CIDisplayScanout
    {
        CONST_VTBL struct __x_ABI_CWindows_CDevices_CDisplay_CCore_CIDisplayScanoutVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CDevices_CDisplay_CCore_CIDisplayScanout;
#endif /* !defined(____x_ABI_CWindows_CDevices_CDisplay_CCore_CIDisplayScanout_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CDevices_CDisplay_CCore_CIDisplaySource_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CDevices_CDisplay_CCore_CIDisplaySource_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CDevices_CDisplay_CCore_CIDisplaySourceVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CDevices_CDisplay_CCore_CIDisplaySource* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CDevices_CDisplay_CCore_CIDisplaySource* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CDevices_CDisplay_CCore_CIDisplaySource* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CDevices_CDisplay_CCore_CIDisplaySource* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CDevices_CDisplay_CCore_CIDisplaySource* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CDevices_CDisplay_CCore_CIDisplaySource* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_AdapterId)(__x_ABI_CWindows_CDevices_CDisplay_CCore_CIDisplaySource* This,
        struct __x_ABI_CWindows_CGraphics_CDisplayAdapterId* value);
    HRESULT (STDMETHODCALLTYPE* get_SourceId)(__x_ABI_CWindows_CDevices_CDisplay_CCore_CIDisplaySource* This,
        UINT32* value);
    HRESULT (STDMETHODCALLTYPE* GetMetadata)(__x_ABI_CWindows_CDevices_CDisplay_CCore_CIDisplaySource* This,
        GUID Key,
        __x_ABI_CWindows_CStorage_CStreams_CIBuffer** result);

        END_INTERFACE
    } __x_ABI_CWindows_CDevices_CDisplay_CCore_CIDisplaySourceVtbl;

    interface __x_ABI_CWindows_CDevices_CDisplay_CCore_CIDisplaySource
    {
        CONST_VTBL struct __x_ABI_CWindows_CDevices_CDisplay_CCore_CIDisplaySourceVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CDevices_CDisplay_CCore_CIDisplaySource;
#endif /* !defined(____x_ABI_CWindows_CDevices_CDisplay_CCore_CIDisplaySource_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CDevices_CDisplay_CCore_CIDisplayState_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CDevices_CDisplay_CCore_CIDisplayState_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CDevices_CDisplay_CCore_CIDisplayStateVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CDevices_CDisplay_CCore_CIDisplayState* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CDevices_CDisplay_CCore_CIDisplayState* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CDevices_CDisplay_CCore_CIDisplayState* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CDevices_CDisplay_CCore_CIDisplayState* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CDevices_CDisplay_CCore_CIDisplayState* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CDevices_CDisplay_CCore_CIDisplayState* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_IsReadOnly)(__x_ABI_CWindows_CDevices_CDisplay_CCore_CIDisplayState* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* get_IsStale)(__x_ABI_CWindows_CDevices_CDisplay_CCore_CIDisplayState* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* get_Targets)(__x_ABI_CWindows_CDevices_CDisplay_CCore_CIDisplayState* This,
        __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CDevices__CDisplay__CCore__CDisplayTarget** value);
    HRESULT (STDMETHODCALLTYPE* get_Views)(__x_ABI_CWindows_CDevices_CDisplay_CCore_CIDisplayState* This,
        __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CDevices__CDisplay__CCore__CDisplayView** value);
    HRESULT (STDMETHODCALLTYPE* get_Properties)(__x_ABI_CWindows_CDevices_CDisplay_CCore_CIDisplayState* This,
        __x_ABI_C__FIMap_2_GUID_IInspectable** value);
    HRESULT (STDMETHODCALLTYPE* ConnectTarget)(__x_ABI_CWindows_CDevices_CDisplay_CCore_CIDisplayState* This,
        __x_ABI_CWindows_CDevices_CDisplay_CCore_CIDisplayTarget* target,
        __x_ABI_CWindows_CDevices_CDisplay_CCore_CIDisplayPath** result);
    HRESULT (STDMETHODCALLTYPE* ConnectTargetToView)(__x_ABI_CWindows_CDevices_CDisplay_CCore_CIDisplayState* This,
        __x_ABI_CWindows_CDevices_CDisplay_CCore_CIDisplayTarget* target,
        __x_ABI_CWindows_CDevices_CDisplay_CCore_CIDisplayView* view,
        __x_ABI_CWindows_CDevices_CDisplay_CCore_CIDisplayPath** result);
    HRESULT (STDMETHODCALLTYPE* CanConnectTargetToView)(__x_ABI_CWindows_CDevices_CDisplay_CCore_CIDisplayState* This,
        __x_ABI_CWindows_CDevices_CDisplay_CCore_CIDisplayTarget* target,
        __x_ABI_CWindows_CDevices_CDisplay_CCore_CIDisplayView* view,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* GetViewForTarget)(__x_ABI_CWindows_CDevices_CDisplay_CCore_CIDisplayState* This,
        __x_ABI_CWindows_CDevices_CDisplay_CCore_CIDisplayTarget* target,
        __x_ABI_CWindows_CDevices_CDisplay_CCore_CIDisplayView** result);
    HRESULT (STDMETHODCALLTYPE* GetPathForTarget)(__x_ABI_CWindows_CDevices_CDisplay_CCore_CIDisplayState* This,
        __x_ABI_CWindows_CDevices_CDisplay_CCore_CIDisplayTarget* target,
        __x_ABI_CWindows_CDevices_CDisplay_CCore_CIDisplayPath** result);
    HRESULT (STDMETHODCALLTYPE* DisconnectTarget)(__x_ABI_CWindows_CDevices_CDisplay_CCore_CIDisplayState* This,
        __x_ABI_CWindows_CDevices_CDisplay_CCore_CIDisplayTarget* target);
    HRESULT (STDMETHODCALLTYPE* TryFunctionalize)(__x_ABI_CWindows_CDevices_CDisplay_CCore_CIDisplayState* This,
        enum __x_ABI_CWindows_CDevices_CDisplay_CCore_CDisplayStateFunctionalizeOptions options,
        __x_ABI_CWindows_CDevices_CDisplay_CCore_CIDisplayStateOperationResult** result);
    HRESULT (STDMETHODCALLTYPE* TryApply)(__x_ABI_CWindows_CDevices_CDisplay_CCore_CIDisplayState* This,
        enum __x_ABI_CWindows_CDevices_CDisplay_CCore_CDisplayStateApplyOptions options,
        __x_ABI_CWindows_CDevices_CDisplay_CCore_CIDisplayStateOperationResult** result);
    HRESULT (STDMETHODCALLTYPE* Clone)(__x_ABI_CWindows_CDevices_CDisplay_CCore_CIDisplayState* This,
        __x_ABI_CWindows_CDevices_CDisplay_CCore_CIDisplayState** result);

        END_INTERFACE
    } __x_ABI_CWindows_CDevices_CDisplay_CCore_CIDisplayStateVtbl;

    interface __x_ABI_CWindows_CDevices_CDisplay_CCore_CIDisplayState
    {
        CONST_VTBL struct __x_ABI_CWindows_CDevices_CDisplay_CCore_CIDisplayStateVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CDevices_CDisplay_CCore_CIDisplayState;
#endif /* !defined(____x_ABI_CWindows_CDevices_CDisplay_CCore_CIDisplayState_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CDevices_CDisplay_CCore_CIDisplayStateOperationResult_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CDevices_CDisplay_CCore_CIDisplayStateOperationResult_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CDevices_CDisplay_CCore_CIDisplayStateOperationResultVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CDevices_CDisplay_CCore_CIDisplayStateOperationResult* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CDevices_CDisplay_CCore_CIDisplayStateOperationResult* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CDevices_CDisplay_CCore_CIDisplayStateOperationResult* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CDevices_CDisplay_CCore_CIDisplayStateOperationResult* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CDevices_CDisplay_CCore_CIDisplayStateOperationResult* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CDevices_CDisplay_CCore_CIDisplayStateOperationResult* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Status)(__x_ABI_CWindows_CDevices_CDisplay_CCore_CIDisplayStateOperationResult* This,
        enum __x_ABI_CWindows_CDevices_CDisplay_CCore_CDisplayStateOperationStatus* value);
    HRESULT (STDMETHODCALLTYPE* get_ExtendedErrorCode)(__x_ABI_CWindows_CDevices_CDisplay_CCore_CIDisplayStateOperationResult* This,
        HRESULT* value);

        END_INTERFACE
    } __x_ABI_CWindows_CDevices_CDisplay_CCore_CIDisplayStateOperationResultVtbl;

    interface __x_ABI_CWindows_CDevices_CDisplay_CCore_CIDisplayStateOperationResult
    {
        CONST_VTBL struct __x_ABI_CWindows_CDevices_CDisplay_CCore_CIDisplayStateOperationResultVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CDevices_CDisplay_CCore_CIDisplayStateOperationResult;
#endif /* !defined(____x_ABI_CWindows_CDevices_CDisplay_CCore_CIDisplayStateOperationResult_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CDevices_CDisplay_CCore_CIDisplaySurface_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CDevices_CDisplay_CCore_CIDisplaySurface_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CDevices_CDisplay_CCore_CIDisplaySurfaceVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CDevices_CDisplay_CCore_CIDisplaySurface* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CDevices_CDisplay_CCore_CIDisplaySurface* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CDevices_CDisplay_CCore_CIDisplaySurface* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CDevices_CDisplay_CCore_CIDisplaySurface* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CDevices_CDisplay_CCore_CIDisplaySurface* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CDevices_CDisplay_CCore_CIDisplaySurface* This,
            TrustLevel* trustLevel);
    
        END_INTERFACE
    } __x_ABI_CWindows_CDevices_CDisplay_CCore_CIDisplaySurfaceVtbl;

    interface __x_ABI_CWindows_CDevices_CDisplay_CCore_CIDisplaySurface
    {
        CONST_VTBL struct __x_ABI_CWindows_CDevices_CDisplay_CCore_CIDisplaySurfaceVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CDevices_CDisplay_CCore_CIDisplaySurface;
#endif /* !defined(____x_ABI_CWindows_CDevices_CDisplay_CCore_CIDisplaySurface_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CDevices_CDisplay_CCore_CIDisplayTarget_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CDevices_CDisplay_CCore_CIDisplayTarget_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CDevices_CDisplay_CCore_CIDisplayTargetVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CDevices_CDisplay_CCore_CIDisplayTarget* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CDevices_CDisplay_CCore_CIDisplayTarget* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CDevices_CDisplay_CCore_CIDisplayTarget* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CDevices_CDisplay_CCore_CIDisplayTarget* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CDevices_CDisplay_CCore_CIDisplayTarget* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CDevices_CDisplay_CCore_CIDisplayTarget* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Adapter)(__x_ABI_CWindows_CDevices_CDisplay_CCore_CIDisplayTarget* This,
        __x_ABI_CWindows_CDevices_CDisplay_CCore_CIDisplayAdapter** value);
    HRESULT (STDMETHODCALLTYPE* get_DeviceInterfacePath)(__x_ABI_CWindows_CDevices_CDisplay_CCore_CIDisplayTarget* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* get_AdapterRelativeId)(__x_ABI_CWindows_CDevices_CDisplay_CCore_CIDisplayTarget* This,
        UINT32* value);
    HRESULT (STDMETHODCALLTYPE* get_IsConnected)(__x_ABI_CWindows_CDevices_CDisplay_CCore_CIDisplayTarget* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* get_IsVirtualModeEnabled)(__x_ABI_CWindows_CDevices_CDisplay_CCore_CIDisplayTarget* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* get_IsVirtualTopologyEnabled)(__x_ABI_CWindows_CDevices_CDisplay_CCore_CIDisplayTarget* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* get_UsageKind)(__x_ABI_CWindows_CDevices_CDisplay_CCore_CIDisplayTarget* This,
        enum __x_ABI_CWindows_CDevices_CDisplay_CDisplayMonitorUsageKind* value);
    HRESULT (STDMETHODCALLTYPE* get_MonitorPersistence)(__x_ABI_CWindows_CDevices_CDisplay_CCore_CIDisplayTarget* This,
        enum __x_ABI_CWindows_CDevices_CDisplay_CCore_CDisplayTargetPersistence* value);
    HRESULT (STDMETHODCALLTYPE* get_StableMonitorId)(__x_ABI_CWindows_CDevices_CDisplay_CCore_CIDisplayTarget* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* TryGetMonitor)(__x_ABI_CWindows_CDevices_CDisplay_CCore_CIDisplayTarget* This,
        __x_ABI_CWindows_CDevices_CDisplay_CIDisplayMonitor** result);
    HRESULT (STDMETHODCALLTYPE* get_Properties)(__x_ABI_CWindows_CDevices_CDisplay_CCore_CIDisplayTarget* This,
        __x_ABI_C__FIMapView_2_GUID_IInspectable** value);
    HRESULT (STDMETHODCALLTYPE* get_IsStale)(__x_ABI_CWindows_CDevices_CDisplay_CCore_CIDisplayTarget* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* IsSame)(__x_ABI_CWindows_CDevices_CDisplay_CCore_CIDisplayTarget* This,
        __x_ABI_CWindows_CDevices_CDisplay_CCore_CIDisplayTarget* otherTarget,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* IsEqual)(__x_ABI_CWindows_CDevices_CDisplay_CCore_CIDisplayTarget* This,
        __x_ABI_CWindows_CDevices_CDisplay_CCore_CIDisplayTarget* otherTarget,
        boolean* result);

        END_INTERFACE
    } __x_ABI_CWindows_CDevices_CDisplay_CCore_CIDisplayTargetVtbl;

    interface __x_ABI_CWindows_CDevices_CDisplay_CCore_CIDisplayTarget
    {
        CONST_VTBL struct __x_ABI_CWindows_CDevices_CDisplay_CCore_CIDisplayTargetVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CDevices_CDisplay_CCore_CIDisplayTarget;
#endif /* !defined(____x_ABI_CWindows_CDevices_CDisplay_CCore_CIDisplayTarget_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CDevices_CDisplay_CCore_CIDisplayTask_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CDevices_CDisplay_CCore_CIDisplayTask_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CDevices_CDisplay_CCore_CIDisplayTaskVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CDevices_CDisplay_CCore_CIDisplayTask* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CDevices_CDisplay_CCore_CIDisplayTask* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CDevices_CDisplay_CCore_CIDisplayTask* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CDevices_CDisplay_CCore_CIDisplayTask* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CDevices_CDisplay_CCore_CIDisplayTask* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CDevices_CDisplay_CCore_CIDisplayTask* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* SetScanout)(__x_ABI_CWindows_CDevices_CDisplay_CCore_CIDisplayTask* This,
        __x_ABI_CWindows_CDevices_CDisplay_CCore_CIDisplayScanout* scanout);
    HRESULT (STDMETHODCALLTYPE* SetWait)(__x_ABI_CWindows_CDevices_CDisplay_CCore_CIDisplayTask* This,
        __x_ABI_CWindows_CDevices_CDisplay_CCore_CIDisplayFence* readyFence,
        UINT64 readyFenceValue);

        END_INTERFACE
    } __x_ABI_CWindows_CDevices_CDisplay_CCore_CIDisplayTaskVtbl;

    interface __x_ABI_CWindows_CDevices_CDisplay_CCore_CIDisplayTask
    {
        CONST_VTBL struct __x_ABI_CWindows_CDevices_CDisplay_CCore_CIDisplayTaskVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CDevices_CDisplay_CCore_CIDisplayTask;
#endif /* !defined(____x_ABI_CWindows_CDevices_CDisplay_CCore_CIDisplayTask_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CDevices_CDisplay_CCore_CIDisplayTaskPool_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CDevices_CDisplay_CCore_CIDisplayTaskPool_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CDevices_CDisplay_CCore_CIDisplayTaskPoolVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CDevices_CDisplay_CCore_CIDisplayTaskPool* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CDevices_CDisplay_CCore_CIDisplayTaskPool* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CDevices_CDisplay_CCore_CIDisplayTaskPool* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CDevices_CDisplay_CCore_CIDisplayTaskPool* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CDevices_CDisplay_CCore_CIDisplayTaskPool* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CDevices_CDisplay_CCore_CIDisplayTaskPool* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* CreateTask)(__x_ABI_CWindows_CDevices_CDisplay_CCore_CIDisplayTaskPool* This,
        __x_ABI_CWindows_CDevices_CDisplay_CCore_CIDisplayTask** result);
    HRESULT (STDMETHODCALLTYPE* ExecuteTask)(__x_ABI_CWindows_CDevices_CDisplay_CCore_CIDisplayTaskPool* This,
        __x_ABI_CWindows_CDevices_CDisplay_CCore_CIDisplayTask* task);

        END_INTERFACE
    } __x_ABI_CWindows_CDevices_CDisplay_CCore_CIDisplayTaskPoolVtbl;

    interface __x_ABI_CWindows_CDevices_CDisplay_CCore_CIDisplayTaskPool
    {
        CONST_VTBL struct __x_ABI_CWindows_CDevices_CDisplay_CCore_CIDisplayTaskPoolVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CDevices_CDisplay_CCore_CIDisplayTaskPool;
#endif /* !defined(____x_ABI_CWindows_CDevices_CDisplay_CCore_CIDisplayTaskPool_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CDevices_CDisplay_CCore_CIDisplayView_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CDevices_CDisplay_CCore_CIDisplayView_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CDevices_CDisplay_CCore_CIDisplayViewVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CDevices_CDisplay_CCore_CIDisplayView* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CDevices_CDisplay_CCore_CIDisplayView* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CDevices_CDisplay_CCore_CIDisplayView* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CDevices_CDisplay_CCore_CIDisplayView* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CDevices_CDisplay_CCore_CIDisplayView* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CDevices_CDisplay_CCore_CIDisplayView* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Paths)(__x_ABI_CWindows_CDevices_CDisplay_CCore_CIDisplayView* This,
        __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CDevices__CDisplay__CCore__CDisplayPath** value);
    HRESULT (STDMETHODCALLTYPE* get_ContentResolution)(__x_ABI_CWindows_CDevices_CDisplay_CCore_CIDisplayView* This,
        __x_ABI_C__FIReference_1___x_ABI_CWindows__CGraphics__CSizeInt32** value);
    HRESULT (STDMETHODCALLTYPE* put_ContentResolution)(__x_ABI_CWindows_CDevices_CDisplay_CCore_CIDisplayView* This,
        __x_ABI_C__FIReference_1___x_ABI_CWindows__CGraphics__CSizeInt32* value);
    HRESULT (STDMETHODCALLTYPE* SetPrimaryPath)(__x_ABI_CWindows_CDevices_CDisplay_CCore_CIDisplayView* This,
        __x_ABI_CWindows_CDevices_CDisplay_CCore_CIDisplayPath* path);
    HRESULT (STDMETHODCALLTYPE* get_Properties)(__x_ABI_CWindows_CDevices_CDisplay_CCore_CIDisplayView* This,
        __x_ABI_C__FIMap_2_GUID_IInspectable** value);

        END_INTERFACE
    } __x_ABI_CWindows_CDevices_CDisplay_CCore_CIDisplayViewVtbl;

    interface __x_ABI_CWindows_CDevices_CDisplay_CCore_CIDisplayView
    {
        CONST_VTBL struct __x_ABI_CWindows_CDevices_CDisplay_CCore_CIDisplayViewVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CDevices_CDisplay_CCore_CIDisplayView;
#endif /* !defined(____x_ABI_CWindows_CDevices_CDisplay_CCore_CIDisplayView_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CDevices_CDisplay_CCore_CIDisplayWireFormat_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CDevices_CDisplay_CCore_CIDisplayWireFormat_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CDevices_CDisplay_CCore_CIDisplayWireFormatVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CDevices_CDisplay_CCore_CIDisplayWireFormat* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CDevices_CDisplay_CCore_CIDisplayWireFormat* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CDevices_CDisplay_CCore_CIDisplayWireFormat* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CDevices_CDisplay_CCore_CIDisplayWireFormat* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CDevices_CDisplay_CCore_CIDisplayWireFormat* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CDevices_CDisplay_CCore_CIDisplayWireFormat* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_PixelEncoding)(__x_ABI_CWindows_CDevices_CDisplay_CCore_CIDisplayWireFormat* This,
        enum __x_ABI_CWindows_CDevices_CDisplay_CCore_CDisplayWireFormatPixelEncoding* value);
    HRESULT (STDMETHODCALLTYPE* get_BitsPerChannel)(__x_ABI_CWindows_CDevices_CDisplay_CCore_CIDisplayWireFormat* This,
        INT32* value);
    HRESULT (STDMETHODCALLTYPE* get_ColorSpace)(__x_ABI_CWindows_CDevices_CDisplay_CCore_CIDisplayWireFormat* This,
        enum __x_ABI_CWindows_CDevices_CDisplay_CCore_CDisplayWireFormatColorSpace* value);
    HRESULT (STDMETHODCALLTYPE* get_Eotf)(__x_ABI_CWindows_CDevices_CDisplay_CCore_CIDisplayWireFormat* This,
        enum __x_ABI_CWindows_CDevices_CDisplay_CCore_CDisplayWireFormatEotf* value);
    HRESULT (STDMETHODCALLTYPE* get_HdrMetadata)(__x_ABI_CWindows_CDevices_CDisplay_CCore_CIDisplayWireFormat* This,
        enum __x_ABI_CWindows_CDevices_CDisplay_CCore_CDisplayWireFormatHdrMetadata* value);
    HRESULT (STDMETHODCALLTYPE* get_Properties)(__x_ABI_CWindows_CDevices_CDisplay_CCore_CIDisplayWireFormat* This,
        __x_ABI_C__FIMapView_2_GUID_IInspectable** value);

        END_INTERFACE
    } __x_ABI_CWindows_CDevices_CDisplay_CCore_CIDisplayWireFormatVtbl;

    interface __x_ABI_CWindows_CDevices_CDisplay_CCore_CIDisplayWireFormat
    {
        CONST_VTBL struct __x_ABI_CWindows_CDevices_CDisplay_CCore_CIDisplayWireFormatVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CDevices_CDisplay_CCore_CIDisplayWireFormat;
#endif /* !defined(____x_ABI_CWindows_CDevices_CDisplay_CCore_CIDisplayWireFormat_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CDevices_CDisplay_CCore_CIDisplayWireFormatFactory_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CDevices_CDisplay_CCore_CIDisplayWireFormatFactory_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CDevices_CDisplay_CCore_CIDisplayWireFormatFactoryVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CDevices_CDisplay_CCore_CIDisplayWireFormatFactory* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CDevices_CDisplay_CCore_CIDisplayWireFormatFactory* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CDevices_CDisplay_CCore_CIDisplayWireFormatFactory* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CDevices_CDisplay_CCore_CIDisplayWireFormatFactory* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CDevices_CDisplay_CCore_CIDisplayWireFormatFactory* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CDevices_CDisplay_CCore_CIDisplayWireFormatFactory* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* CreateInstance)(__x_ABI_CWindows_CDevices_CDisplay_CCore_CIDisplayWireFormatFactory* This,
        enum __x_ABI_CWindows_CDevices_CDisplay_CCore_CDisplayWireFormatPixelEncoding pixelEncoding,
        INT32 bitsPerChannel,
        enum __x_ABI_CWindows_CDevices_CDisplay_CCore_CDisplayWireFormatColorSpace colorSpace,
        enum __x_ABI_CWindows_CDevices_CDisplay_CCore_CDisplayWireFormatEotf eotf,
        enum __x_ABI_CWindows_CDevices_CDisplay_CCore_CDisplayWireFormatHdrMetadata hdrMetadata,
        __x_ABI_CWindows_CDevices_CDisplay_CCore_CIDisplayWireFormat** value);

        END_INTERFACE
    } __x_ABI_CWindows_CDevices_CDisplay_CCore_CIDisplayWireFormatFactoryVtbl;

    interface __x_ABI_CWindows_CDevices_CDisplay_CCore_CIDisplayWireFormatFactory
    {
        CONST_VTBL struct __x_ABI_CWindows_CDevices_CDisplay_CCore_CIDisplayWireFormatFactoryVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CDevices_CDisplay_CCore_CIDisplayWireFormatFactory;
#endif /* !defined(____x_ABI_CWindows_CDevices_CDisplay_CCore_CIDisplayWireFormatFactory_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CDevices_CDisplay_CCore_CIDisplayWireFormatStatics_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CDevices_CDisplay_CCore_CIDisplayWireFormatStatics_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CDevices_CDisplay_CCore_CIDisplayWireFormatStaticsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CDevices_CDisplay_CCore_CIDisplayWireFormatStatics* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CDevices_CDisplay_CCore_CIDisplayWireFormatStatics* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CDevices_CDisplay_CCore_CIDisplayWireFormatStatics* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CDevices_CDisplay_CCore_CIDisplayWireFormatStatics* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CDevices_CDisplay_CCore_CIDisplayWireFormatStatics* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CDevices_CDisplay_CCore_CIDisplayWireFormatStatics* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* CreateWithProperties)(__x_ABI_CWindows_CDevices_CDisplay_CCore_CIDisplayWireFormatStatics* This,
        __x_ABI_C__FIIterable_1___x_ABI_C__FIKeyValuePair_2_GUID_IInspectable* extraProperties,
        enum __x_ABI_CWindows_CDevices_CDisplay_CCore_CDisplayWireFormatPixelEncoding pixelEncoding,
        INT32 bitsPerChannel,
        enum __x_ABI_CWindows_CDevices_CDisplay_CCore_CDisplayWireFormatColorSpace colorSpace,
        enum __x_ABI_CWindows_CDevices_CDisplay_CCore_CDisplayWireFormatEotf eotf,
        enum __x_ABI_CWindows_CDevices_CDisplay_CCore_CDisplayWireFormatHdrMetadata hdrMetadata,
        __x_ABI_CWindows_CDevices_CDisplay_CCore_CIDisplayWireFormat** result);

        END_INTERFACE
    } __x_ABI_CWindows_CDevices_CDisplay_CCore_CIDisplayWireFormatStaticsVtbl;

    interface __x_ABI_CWindows_CDevices_CDisplay_CCore_CIDisplayWireFormatStatics
    {
        CONST_VTBL struct __x_ABI_CWindows_CDevices_CDisplay_CCore_CIDisplayWireFormatStaticsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CDevices_CDisplay_CCore_CIDisplayWireFormatStatics;
#endif /* !defined(____x_ABI_CWindows_CDevices_CDisplay_CCore_CIDisplayWireFormatStatics_INTERFACE_DEFINED__) */
    
