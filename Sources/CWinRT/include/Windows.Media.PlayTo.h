// WARNING: Please don't edit this file. It was generated by Swift/WinRT v0.0.1

#pragma once
// Header files for imported files
#include <inspectable.h>
#include <EventToken.h>
#include <windowscontracts.h>
#include "Windows.Foundation.h"
#include "Windows.Storage.Streams.h"
// Importing Collections header
#include "Windows.Foundation.Collections.h"

/* Forward Declarations */
#ifndef ____x_ABI_CWindows_CMedia_CPlayTo_CICurrentTimeChangeRequestedEventArgs_FWD_DEFINED__
#define ____x_ABI_CWindows_CMedia_CPlayTo_CICurrentTimeChangeRequestedEventArgs_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CMedia_CPlayTo_CICurrentTimeChangeRequestedEventArgs __x_ABI_CWindows_CMedia_CPlayTo_CICurrentTimeChangeRequestedEventArgs;

#endif // ____x_ABI_CWindows_CMedia_CPlayTo_CICurrentTimeChangeRequestedEventArgs_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CMedia_CPlayTo_CIMuteChangeRequestedEventArgs_FWD_DEFINED__
#define ____x_ABI_CWindows_CMedia_CPlayTo_CIMuteChangeRequestedEventArgs_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CMedia_CPlayTo_CIMuteChangeRequestedEventArgs __x_ABI_CWindows_CMedia_CPlayTo_CIMuteChangeRequestedEventArgs;

#endif // ____x_ABI_CWindows_CMedia_CPlayTo_CIMuteChangeRequestedEventArgs_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CMedia_CPlayTo_CIPlayToConnection_FWD_DEFINED__
#define ____x_ABI_CWindows_CMedia_CPlayTo_CIPlayToConnection_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CMedia_CPlayTo_CIPlayToConnection __x_ABI_CWindows_CMedia_CPlayTo_CIPlayToConnection;

#endif // ____x_ABI_CWindows_CMedia_CPlayTo_CIPlayToConnection_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CMedia_CPlayTo_CIPlayToConnectionErrorEventArgs_FWD_DEFINED__
#define ____x_ABI_CWindows_CMedia_CPlayTo_CIPlayToConnectionErrorEventArgs_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CMedia_CPlayTo_CIPlayToConnectionErrorEventArgs __x_ABI_CWindows_CMedia_CPlayTo_CIPlayToConnectionErrorEventArgs;

#endif // ____x_ABI_CWindows_CMedia_CPlayTo_CIPlayToConnectionErrorEventArgs_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CMedia_CPlayTo_CIPlayToConnectionStateChangedEventArgs_FWD_DEFINED__
#define ____x_ABI_CWindows_CMedia_CPlayTo_CIPlayToConnectionStateChangedEventArgs_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CMedia_CPlayTo_CIPlayToConnectionStateChangedEventArgs __x_ABI_CWindows_CMedia_CPlayTo_CIPlayToConnectionStateChangedEventArgs;

#endif // ____x_ABI_CWindows_CMedia_CPlayTo_CIPlayToConnectionStateChangedEventArgs_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CMedia_CPlayTo_CIPlayToConnectionTransferredEventArgs_FWD_DEFINED__
#define ____x_ABI_CWindows_CMedia_CPlayTo_CIPlayToConnectionTransferredEventArgs_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CMedia_CPlayTo_CIPlayToConnectionTransferredEventArgs __x_ABI_CWindows_CMedia_CPlayTo_CIPlayToConnectionTransferredEventArgs;

#endif // ____x_ABI_CWindows_CMedia_CPlayTo_CIPlayToConnectionTransferredEventArgs_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CMedia_CPlayTo_CIPlayToManager_FWD_DEFINED__
#define ____x_ABI_CWindows_CMedia_CPlayTo_CIPlayToManager_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CMedia_CPlayTo_CIPlayToManager __x_ABI_CWindows_CMedia_CPlayTo_CIPlayToManager;

#endif // ____x_ABI_CWindows_CMedia_CPlayTo_CIPlayToManager_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CMedia_CPlayTo_CIPlayToManagerStatics_FWD_DEFINED__
#define ____x_ABI_CWindows_CMedia_CPlayTo_CIPlayToManagerStatics_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CMedia_CPlayTo_CIPlayToManagerStatics __x_ABI_CWindows_CMedia_CPlayTo_CIPlayToManagerStatics;

#endif // ____x_ABI_CWindows_CMedia_CPlayTo_CIPlayToManagerStatics_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CMedia_CPlayTo_CIPlayToReceiver_FWD_DEFINED__
#define ____x_ABI_CWindows_CMedia_CPlayTo_CIPlayToReceiver_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CMedia_CPlayTo_CIPlayToReceiver __x_ABI_CWindows_CMedia_CPlayTo_CIPlayToReceiver;

#endif // ____x_ABI_CWindows_CMedia_CPlayTo_CIPlayToReceiver_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CMedia_CPlayTo_CIPlayToSource_FWD_DEFINED__
#define ____x_ABI_CWindows_CMedia_CPlayTo_CIPlayToSource_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CMedia_CPlayTo_CIPlayToSource __x_ABI_CWindows_CMedia_CPlayTo_CIPlayToSource;

#endif // ____x_ABI_CWindows_CMedia_CPlayTo_CIPlayToSource_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CMedia_CPlayTo_CIPlayToSourceDeferral_FWD_DEFINED__
#define ____x_ABI_CWindows_CMedia_CPlayTo_CIPlayToSourceDeferral_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CMedia_CPlayTo_CIPlayToSourceDeferral __x_ABI_CWindows_CMedia_CPlayTo_CIPlayToSourceDeferral;

#endif // ____x_ABI_CWindows_CMedia_CPlayTo_CIPlayToSourceDeferral_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CMedia_CPlayTo_CIPlayToSourceRequest_FWD_DEFINED__
#define ____x_ABI_CWindows_CMedia_CPlayTo_CIPlayToSourceRequest_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CMedia_CPlayTo_CIPlayToSourceRequest __x_ABI_CWindows_CMedia_CPlayTo_CIPlayToSourceRequest;

#endif // ____x_ABI_CWindows_CMedia_CPlayTo_CIPlayToSourceRequest_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CMedia_CPlayTo_CIPlayToSourceRequestedEventArgs_FWD_DEFINED__
#define ____x_ABI_CWindows_CMedia_CPlayTo_CIPlayToSourceRequestedEventArgs_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CMedia_CPlayTo_CIPlayToSourceRequestedEventArgs __x_ABI_CWindows_CMedia_CPlayTo_CIPlayToSourceRequestedEventArgs;

#endif // ____x_ABI_CWindows_CMedia_CPlayTo_CIPlayToSourceRequestedEventArgs_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CMedia_CPlayTo_CIPlayToSourceSelectedEventArgs_FWD_DEFINED__
#define ____x_ABI_CWindows_CMedia_CPlayTo_CIPlayToSourceSelectedEventArgs_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CMedia_CPlayTo_CIPlayToSourceSelectedEventArgs __x_ABI_CWindows_CMedia_CPlayTo_CIPlayToSourceSelectedEventArgs;

#endif // ____x_ABI_CWindows_CMedia_CPlayTo_CIPlayToSourceSelectedEventArgs_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CMedia_CPlayTo_CIPlayToSourceWithPreferredSourceUri_FWD_DEFINED__
#define ____x_ABI_CWindows_CMedia_CPlayTo_CIPlayToSourceWithPreferredSourceUri_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CMedia_CPlayTo_CIPlayToSourceWithPreferredSourceUri __x_ABI_CWindows_CMedia_CPlayTo_CIPlayToSourceWithPreferredSourceUri;

#endif // ____x_ABI_CWindows_CMedia_CPlayTo_CIPlayToSourceWithPreferredSourceUri_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CMedia_CPlayTo_CIPlaybackRateChangeRequestedEventArgs_FWD_DEFINED__
#define ____x_ABI_CWindows_CMedia_CPlayTo_CIPlaybackRateChangeRequestedEventArgs_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CMedia_CPlayTo_CIPlaybackRateChangeRequestedEventArgs __x_ABI_CWindows_CMedia_CPlayTo_CIPlaybackRateChangeRequestedEventArgs;

#endif // ____x_ABI_CWindows_CMedia_CPlayTo_CIPlaybackRateChangeRequestedEventArgs_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CMedia_CPlayTo_CISourceChangeRequestedEventArgs_FWD_DEFINED__
#define ____x_ABI_CWindows_CMedia_CPlayTo_CISourceChangeRequestedEventArgs_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CMedia_CPlayTo_CISourceChangeRequestedEventArgs __x_ABI_CWindows_CMedia_CPlayTo_CISourceChangeRequestedEventArgs;

#endif // ____x_ABI_CWindows_CMedia_CPlayTo_CISourceChangeRequestedEventArgs_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CMedia_CPlayTo_CIVolumeChangeRequestedEventArgs_FWD_DEFINED__
#define ____x_ABI_CWindows_CMedia_CPlayTo_CIVolumeChangeRequestedEventArgs_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CMedia_CPlayTo_CIVolumeChangeRequestedEventArgs __x_ABI_CWindows_CMedia_CPlayTo_CIVolumeChangeRequestedEventArgs;

#endif // ____x_ABI_CWindows_CMedia_CPlayTo_CIVolumeChangeRequestedEventArgs_FWD_DEFINED__

// Parameterized interface forward declarations (C)

// Collection interface definitions

#if !defined(____x_ABI_C__FIKeyValuePair_2_HSTRING_IInspectable_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIKeyValuePair_2_HSTRING_IInspectable_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIKeyValuePair_2_HSTRING_IInspectable __x_ABI_C__FIKeyValuePair_2_HSTRING_IInspectable;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIKeyValuePair_2_HSTRING_IInspectable;

    typedef struct __x_ABI_C__FIKeyValuePair_2_HSTRING_IInspectableVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIKeyValuePair_2_HSTRING_IInspectable* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIKeyValuePair_2_HSTRING_IInspectable* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIKeyValuePair_2_HSTRING_IInspectable* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIKeyValuePair_2_HSTRING_IInspectable* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIKeyValuePair_2_HSTRING_IInspectable* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIKeyValuePair_2_HSTRING_IInspectable* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Key)(__x_ABI_C__FIKeyValuePair_2_HSTRING_IInspectable* This,
        HSTRING* result);
    HRESULT (STDMETHODCALLTYPE* get_Value)(__x_ABI_C__FIKeyValuePair_2_HSTRING_IInspectable* This,
        IInspectable** result);

        END_INTERFACE
    } __x_ABI_C__FIKeyValuePair_2_HSTRING_IInspectableVtbl;

    interface __x_ABI_C__FIKeyValuePair_2_HSTRING_IInspectable
    {
        CONST_VTBL struct __x_ABI_C__FIKeyValuePair_2_HSTRING_IInspectableVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIKeyValuePair_2_HSTRING_IInspectable_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2_HSTRING_IInspectable_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2_HSTRING_IInspectable_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2_HSTRING_IInspectable __x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2_HSTRING_IInspectable;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2_HSTRING_IInspectable;

    typedef struct __x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2_HSTRING_IInspectableVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2_HSTRING_IInspectable* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2_HSTRING_IInspectable* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2_HSTRING_IInspectable* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2_HSTRING_IInspectable* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2_HSTRING_IInspectable* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2_HSTRING_IInspectable* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Current)(__x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2_HSTRING_IInspectable* This,
        __x_ABI_C__FIKeyValuePair_2_HSTRING_IInspectable** result);
    HRESULT (STDMETHODCALLTYPE* get_HasCurrent)(__x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2_HSTRING_IInspectable* This,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* MoveNext)(__x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2_HSTRING_IInspectable* This,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2_HSTRING_IInspectable* This,
        UINT32 itemsLength,
        __x_ABI_C__FIKeyValuePair_2_HSTRING_IInspectable** items,
        UINT32* result);

        END_INTERFACE
    } __x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2_HSTRING_IInspectableVtbl;

    interface __x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2_HSTRING_IInspectable
    {
        CONST_VTBL struct __x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2_HSTRING_IInspectableVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2_HSTRING_IInspectable_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIIterable_1___x_ABI_C__FIKeyValuePair_2_HSTRING_IInspectable_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIIterable_1___x_ABI_C__FIKeyValuePair_2_HSTRING_IInspectable_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIIterable_1___x_ABI_C__FIKeyValuePair_2_HSTRING_IInspectable __x_ABI_C__FIIterable_1___x_ABI_C__FIKeyValuePair_2_HSTRING_IInspectable;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIIterable_1___x_ABI_C__FIKeyValuePair_2_HSTRING_IInspectable;

    typedef struct __x_ABI_C__FIIterable_1___x_ABI_C__FIKeyValuePair_2_HSTRING_IInspectableVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIIterable_1___x_ABI_C__FIKeyValuePair_2_HSTRING_IInspectable* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIIterable_1___x_ABI_C__FIKeyValuePair_2_HSTRING_IInspectable* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIIterable_1___x_ABI_C__FIKeyValuePair_2_HSTRING_IInspectable* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIIterable_1___x_ABI_C__FIKeyValuePair_2_HSTRING_IInspectable* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIIterable_1___x_ABI_C__FIKeyValuePair_2_HSTRING_IInspectable* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIIterable_1___x_ABI_C__FIKeyValuePair_2_HSTRING_IInspectable* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* First)(__x_ABI_C__FIIterable_1___x_ABI_C__FIKeyValuePair_2_HSTRING_IInspectable* This,
        __x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2_HSTRING_IInspectable** result);

        END_INTERFACE
    } __x_ABI_C__FIIterable_1___x_ABI_C__FIKeyValuePair_2_HSTRING_IInspectableVtbl;

    interface __x_ABI_C__FIIterable_1___x_ABI_C__FIKeyValuePair_2_HSTRING_IInspectable
    {
        CONST_VTBL struct __x_ABI_C__FIIterable_1___x_ABI_C__FIKeyValuePair_2_HSTRING_IInspectableVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIIterable_1___x_ABI_C__FIKeyValuePair_2_HSTRING_IInspectable_INTERFACE_DEFINED__
    
typedef interface __x_ABI_C__FIMapView_2_HSTRING_IInspectable __x_ABI_C__FIMapView_2_HSTRING_IInspectable;

#if !defined(____x_ABI_C__FIMapView_2_HSTRING_IInspectable_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIMapView_2_HSTRING_IInspectable_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIMapView_2_HSTRING_IInspectable __x_ABI_C__FIMapView_2_HSTRING_IInspectable;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIMapView_2_HSTRING_IInspectable;

    typedef struct __x_ABI_C__FIMapView_2_HSTRING_IInspectableVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIMapView_2_HSTRING_IInspectable* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIMapView_2_HSTRING_IInspectable* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIMapView_2_HSTRING_IInspectable* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIMapView_2_HSTRING_IInspectable* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIMapView_2_HSTRING_IInspectable* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIMapView_2_HSTRING_IInspectable* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* Lookup)(__x_ABI_C__FIMapView_2_HSTRING_IInspectable* This,
        HSTRING key,
        IInspectable** result);
    HRESULT (STDMETHODCALLTYPE* get_Size)(__x_ABI_C__FIMapView_2_HSTRING_IInspectable* This,
        UINT32* result);
    HRESULT (STDMETHODCALLTYPE* HasKey)(__x_ABI_C__FIMapView_2_HSTRING_IInspectable* This,
        HSTRING key,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* Split)(__x_ABI_C__FIMapView_2_HSTRING_IInspectable* This,
        __x_ABI_C__FIMapView_2_HSTRING_IInspectable** first,
        __x_ABI_C__FIMapView_2_HSTRING_IInspectable** second);

        END_INTERFACE
    } __x_ABI_C__FIMapView_2_HSTRING_IInspectableVtbl;

    interface __x_ABI_C__FIMapView_2_HSTRING_IInspectable
    {
        CONST_VTBL struct __x_ABI_C__FIMapView_2_HSTRING_IInspectableVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIMapView_2_HSTRING_IInspectable_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIReference_1_UINT32_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIReference_1_UINT32_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIReference_1_UINT32 __x_ABI_C__FIReference_1_UINT32;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIReference_1_UINT32;

    typedef struct __x_ABI_C__FIReference_1_UINT32Vtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIReference_1_UINT32* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIReference_1_UINT32* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIReference_1_UINT32* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIReference_1_UINT32* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIReference_1_UINT32* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIReference_1_UINT32* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Value)(__x_ABI_C__FIReference_1_UINT32* This,
        UINT32* result);

        END_INTERFACE
    } __x_ABI_C__FIReference_1_UINT32Vtbl;

    interface __x_ABI_C__FIReference_1_UINT32
    {
        CONST_VTBL struct __x_ABI_C__FIReference_1_UINT32Vtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIReference_1_UINT32_INTERFACE_DEFINED__
    
typedef struct __x_ABI_CWindows_CFoundation_CDateTime __x_ABI_CWindows_CFoundation_CDateTime;

#if !defined(____x_ABI_C__FIReference_1___x_ABI_CWindows__CFoundation__CDateTime_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIReference_1___x_ABI_CWindows__CFoundation__CDateTime_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIReference_1___x_ABI_CWindows__CFoundation__CDateTime __x_ABI_C__FIReference_1___x_ABI_CWindows__CFoundation__CDateTime;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIReference_1___x_ABI_CWindows__CFoundation__CDateTime;

    typedef struct __x_ABI_C__FIReference_1___x_ABI_CWindows__CFoundation__CDateTimeVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIReference_1___x_ABI_CWindows__CFoundation__CDateTime* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIReference_1___x_ABI_CWindows__CFoundation__CDateTime* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIReference_1___x_ABI_CWindows__CFoundation__CDateTime* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIReference_1___x_ABI_CWindows__CFoundation__CDateTime* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIReference_1___x_ABI_CWindows__CFoundation__CDateTime* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIReference_1___x_ABI_CWindows__CFoundation__CDateTime* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Value)(__x_ABI_C__FIReference_1___x_ABI_CWindows__CFoundation__CDateTime* This,
        struct __x_ABI_CWindows_CFoundation_CDateTime* result);

        END_INTERFACE
    } __x_ABI_C__FIReference_1___x_ABI_CWindows__CFoundation__CDateTimeVtbl;

    interface __x_ABI_C__FIReference_1___x_ABI_CWindows__CFoundation__CDateTime
    {
        CONST_VTBL struct __x_ABI_C__FIReference_1___x_ABI_CWindows__CFoundation__CDateTimeVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIReference_1___x_ABI_CWindows__CFoundation__CDateTime_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CPlayTo__CPlayToConnection___x_ABI_CWindows__CMedia__CPlayTo__CPlayToConnectionErrorEventArgs_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CPlayTo__CPlayToConnection___x_ABI_CWindows__CMedia__CPlayTo__CPlayToConnectionErrorEventArgs_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CPlayTo__CPlayToConnection___x_ABI_CWindows__CMedia__CPlayTo__CPlayToConnectionErrorEventArgs __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CPlayTo__CPlayToConnection___x_ABI_CWindows__CMedia__CPlayTo__CPlayToConnectionErrorEventArgs;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CPlayTo__CPlayToConnection___x_ABI_CWindows__CMedia__CPlayTo__CPlayToConnectionErrorEventArgs;

    typedef struct __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CPlayTo__CPlayToConnection___x_ABI_CWindows__CMedia__CPlayTo__CPlayToConnectionErrorEventArgsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CPlayTo__CPlayToConnection___x_ABI_CWindows__CMedia__CPlayTo__CPlayToConnectionErrorEventArgs* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CPlayTo__CPlayToConnection___x_ABI_CWindows__CMedia__CPlayTo__CPlayToConnectionErrorEventArgs* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CPlayTo__CPlayToConnection___x_ABI_CWindows__CMedia__CPlayTo__CPlayToConnectionErrorEventArgs* This);
        HRESULT (STDMETHODCALLTYPE* Invoke)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CPlayTo__CPlayToConnection___x_ABI_CWindows__CMedia__CPlayTo__CPlayToConnectionErrorEventArgs* This,
        __x_ABI_CWindows_CMedia_CPlayTo_CIPlayToConnection* sender,
        __x_ABI_CWindows_CMedia_CPlayTo_CIPlayToConnectionErrorEventArgs* args);

        END_INTERFACE
    } __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CPlayTo__CPlayToConnection___x_ABI_CWindows__CMedia__CPlayTo__CPlayToConnectionErrorEventArgsVtbl;

    interface __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CPlayTo__CPlayToConnection___x_ABI_CWindows__CMedia__CPlayTo__CPlayToConnectionErrorEventArgs
    {
        CONST_VTBL struct __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CPlayTo__CPlayToConnection___x_ABI_CWindows__CMedia__CPlayTo__CPlayToConnectionErrorEventArgsVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CPlayTo__CPlayToConnection___x_ABI_CWindows__CMedia__CPlayTo__CPlayToConnectionErrorEventArgs_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CPlayTo__CPlayToConnection___x_ABI_CWindows__CMedia__CPlayTo__CPlayToConnectionStateChangedEventArgs_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CPlayTo__CPlayToConnection___x_ABI_CWindows__CMedia__CPlayTo__CPlayToConnectionStateChangedEventArgs_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CPlayTo__CPlayToConnection___x_ABI_CWindows__CMedia__CPlayTo__CPlayToConnectionStateChangedEventArgs __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CPlayTo__CPlayToConnection___x_ABI_CWindows__CMedia__CPlayTo__CPlayToConnectionStateChangedEventArgs;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CPlayTo__CPlayToConnection___x_ABI_CWindows__CMedia__CPlayTo__CPlayToConnectionStateChangedEventArgs;

    typedef struct __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CPlayTo__CPlayToConnection___x_ABI_CWindows__CMedia__CPlayTo__CPlayToConnectionStateChangedEventArgsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CPlayTo__CPlayToConnection___x_ABI_CWindows__CMedia__CPlayTo__CPlayToConnectionStateChangedEventArgs* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CPlayTo__CPlayToConnection___x_ABI_CWindows__CMedia__CPlayTo__CPlayToConnectionStateChangedEventArgs* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CPlayTo__CPlayToConnection___x_ABI_CWindows__CMedia__CPlayTo__CPlayToConnectionStateChangedEventArgs* This);
        HRESULT (STDMETHODCALLTYPE* Invoke)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CPlayTo__CPlayToConnection___x_ABI_CWindows__CMedia__CPlayTo__CPlayToConnectionStateChangedEventArgs* This,
        __x_ABI_CWindows_CMedia_CPlayTo_CIPlayToConnection* sender,
        __x_ABI_CWindows_CMedia_CPlayTo_CIPlayToConnectionStateChangedEventArgs* args);

        END_INTERFACE
    } __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CPlayTo__CPlayToConnection___x_ABI_CWindows__CMedia__CPlayTo__CPlayToConnectionStateChangedEventArgsVtbl;

    interface __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CPlayTo__CPlayToConnection___x_ABI_CWindows__CMedia__CPlayTo__CPlayToConnectionStateChangedEventArgs
    {
        CONST_VTBL struct __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CPlayTo__CPlayToConnection___x_ABI_CWindows__CMedia__CPlayTo__CPlayToConnectionStateChangedEventArgsVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CPlayTo__CPlayToConnection___x_ABI_CWindows__CMedia__CPlayTo__CPlayToConnectionStateChangedEventArgs_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CPlayTo__CPlayToConnection___x_ABI_CWindows__CMedia__CPlayTo__CPlayToConnectionTransferredEventArgs_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CPlayTo__CPlayToConnection___x_ABI_CWindows__CMedia__CPlayTo__CPlayToConnectionTransferredEventArgs_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CPlayTo__CPlayToConnection___x_ABI_CWindows__CMedia__CPlayTo__CPlayToConnectionTransferredEventArgs __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CPlayTo__CPlayToConnection___x_ABI_CWindows__CMedia__CPlayTo__CPlayToConnectionTransferredEventArgs;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CPlayTo__CPlayToConnection___x_ABI_CWindows__CMedia__CPlayTo__CPlayToConnectionTransferredEventArgs;

    typedef struct __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CPlayTo__CPlayToConnection___x_ABI_CWindows__CMedia__CPlayTo__CPlayToConnectionTransferredEventArgsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CPlayTo__CPlayToConnection___x_ABI_CWindows__CMedia__CPlayTo__CPlayToConnectionTransferredEventArgs* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CPlayTo__CPlayToConnection___x_ABI_CWindows__CMedia__CPlayTo__CPlayToConnectionTransferredEventArgs* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CPlayTo__CPlayToConnection___x_ABI_CWindows__CMedia__CPlayTo__CPlayToConnectionTransferredEventArgs* This);
        HRESULT (STDMETHODCALLTYPE* Invoke)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CPlayTo__CPlayToConnection___x_ABI_CWindows__CMedia__CPlayTo__CPlayToConnectionTransferredEventArgs* This,
        __x_ABI_CWindows_CMedia_CPlayTo_CIPlayToConnection* sender,
        __x_ABI_CWindows_CMedia_CPlayTo_CIPlayToConnectionTransferredEventArgs* args);

        END_INTERFACE
    } __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CPlayTo__CPlayToConnection___x_ABI_CWindows__CMedia__CPlayTo__CPlayToConnectionTransferredEventArgsVtbl;

    interface __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CPlayTo__CPlayToConnection___x_ABI_CWindows__CMedia__CPlayTo__CPlayToConnectionTransferredEventArgs
    {
        CONST_VTBL struct __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CPlayTo__CPlayToConnection___x_ABI_CWindows__CMedia__CPlayTo__CPlayToConnectionTransferredEventArgsVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CPlayTo__CPlayToConnection___x_ABI_CWindows__CMedia__CPlayTo__CPlayToConnectionTransferredEventArgs_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CPlayTo__CPlayToManager___x_ABI_CWindows__CMedia__CPlayTo__CPlayToSourceRequestedEventArgs_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CPlayTo__CPlayToManager___x_ABI_CWindows__CMedia__CPlayTo__CPlayToSourceRequestedEventArgs_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CPlayTo__CPlayToManager___x_ABI_CWindows__CMedia__CPlayTo__CPlayToSourceRequestedEventArgs __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CPlayTo__CPlayToManager___x_ABI_CWindows__CMedia__CPlayTo__CPlayToSourceRequestedEventArgs;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CPlayTo__CPlayToManager___x_ABI_CWindows__CMedia__CPlayTo__CPlayToSourceRequestedEventArgs;

    typedef struct __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CPlayTo__CPlayToManager___x_ABI_CWindows__CMedia__CPlayTo__CPlayToSourceRequestedEventArgsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CPlayTo__CPlayToManager___x_ABI_CWindows__CMedia__CPlayTo__CPlayToSourceRequestedEventArgs* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CPlayTo__CPlayToManager___x_ABI_CWindows__CMedia__CPlayTo__CPlayToSourceRequestedEventArgs* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CPlayTo__CPlayToManager___x_ABI_CWindows__CMedia__CPlayTo__CPlayToSourceRequestedEventArgs* This);
        HRESULT (STDMETHODCALLTYPE* Invoke)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CPlayTo__CPlayToManager___x_ABI_CWindows__CMedia__CPlayTo__CPlayToSourceRequestedEventArgs* This,
        __x_ABI_CWindows_CMedia_CPlayTo_CIPlayToManager* sender,
        __x_ABI_CWindows_CMedia_CPlayTo_CIPlayToSourceRequestedEventArgs* args);

        END_INTERFACE
    } __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CPlayTo__CPlayToManager___x_ABI_CWindows__CMedia__CPlayTo__CPlayToSourceRequestedEventArgsVtbl;

    interface __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CPlayTo__CPlayToManager___x_ABI_CWindows__CMedia__CPlayTo__CPlayToSourceRequestedEventArgs
    {
        CONST_VTBL struct __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CPlayTo__CPlayToManager___x_ABI_CWindows__CMedia__CPlayTo__CPlayToSourceRequestedEventArgsVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CPlayTo__CPlayToManager___x_ABI_CWindows__CMedia__CPlayTo__CPlayToSourceRequestedEventArgs_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CPlayTo__CPlayToManager___x_ABI_CWindows__CMedia__CPlayTo__CPlayToSourceSelectedEventArgs_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CPlayTo__CPlayToManager___x_ABI_CWindows__CMedia__CPlayTo__CPlayToSourceSelectedEventArgs_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CPlayTo__CPlayToManager___x_ABI_CWindows__CMedia__CPlayTo__CPlayToSourceSelectedEventArgs __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CPlayTo__CPlayToManager___x_ABI_CWindows__CMedia__CPlayTo__CPlayToSourceSelectedEventArgs;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CPlayTo__CPlayToManager___x_ABI_CWindows__CMedia__CPlayTo__CPlayToSourceSelectedEventArgs;

    typedef struct __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CPlayTo__CPlayToManager___x_ABI_CWindows__CMedia__CPlayTo__CPlayToSourceSelectedEventArgsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CPlayTo__CPlayToManager___x_ABI_CWindows__CMedia__CPlayTo__CPlayToSourceSelectedEventArgs* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CPlayTo__CPlayToManager___x_ABI_CWindows__CMedia__CPlayTo__CPlayToSourceSelectedEventArgs* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CPlayTo__CPlayToManager___x_ABI_CWindows__CMedia__CPlayTo__CPlayToSourceSelectedEventArgs* This);
        HRESULT (STDMETHODCALLTYPE* Invoke)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CPlayTo__CPlayToManager___x_ABI_CWindows__CMedia__CPlayTo__CPlayToSourceSelectedEventArgs* This,
        __x_ABI_CWindows_CMedia_CPlayTo_CIPlayToManager* sender,
        __x_ABI_CWindows_CMedia_CPlayTo_CIPlayToSourceSelectedEventArgs* args);

        END_INTERFACE
    } __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CPlayTo__CPlayToManager___x_ABI_CWindows__CMedia__CPlayTo__CPlayToSourceSelectedEventArgsVtbl;

    interface __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CPlayTo__CPlayToManager___x_ABI_CWindows__CMedia__CPlayTo__CPlayToSourceSelectedEventArgs
    {
        CONST_VTBL struct __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CPlayTo__CPlayToManager___x_ABI_CWindows__CMedia__CPlayTo__CPlayToSourceSelectedEventArgsVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CPlayTo__CPlayToManager___x_ABI_CWindows__CMedia__CPlayTo__CPlayToSourceSelectedEventArgs_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CPlayTo__CPlayToReceiver_IInspectable_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CPlayTo__CPlayToReceiver_IInspectable_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CPlayTo__CPlayToReceiver_IInspectable __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CPlayTo__CPlayToReceiver_IInspectable;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CPlayTo__CPlayToReceiver_IInspectable;

    typedef struct __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CPlayTo__CPlayToReceiver_IInspectableVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CPlayTo__CPlayToReceiver_IInspectable* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CPlayTo__CPlayToReceiver_IInspectable* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CPlayTo__CPlayToReceiver_IInspectable* This);
        HRESULT (STDMETHODCALLTYPE* Invoke)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CPlayTo__CPlayToReceiver_IInspectable* This,
        __x_ABI_CWindows_CMedia_CPlayTo_CIPlayToReceiver* sender,
        IInspectable* args);

        END_INTERFACE
    } __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CPlayTo__CPlayToReceiver_IInspectableVtbl;

    interface __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CPlayTo__CPlayToReceiver_IInspectable
    {
        CONST_VTBL struct __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CPlayTo__CPlayToReceiver_IInspectableVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CPlayTo__CPlayToReceiver_IInspectable_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CPlayTo__CPlayToReceiver___x_ABI_CWindows__CMedia__CPlayTo__CCurrentTimeChangeRequestedEventArgs_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CPlayTo__CPlayToReceiver___x_ABI_CWindows__CMedia__CPlayTo__CCurrentTimeChangeRequestedEventArgs_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CPlayTo__CPlayToReceiver___x_ABI_CWindows__CMedia__CPlayTo__CCurrentTimeChangeRequestedEventArgs __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CPlayTo__CPlayToReceiver___x_ABI_CWindows__CMedia__CPlayTo__CCurrentTimeChangeRequestedEventArgs;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CPlayTo__CPlayToReceiver___x_ABI_CWindows__CMedia__CPlayTo__CCurrentTimeChangeRequestedEventArgs;

    typedef struct __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CPlayTo__CPlayToReceiver___x_ABI_CWindows__CMedia__CPlayTo__CCurrentTimeChangeRequestedEventArgsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CPlayTo__CPlayToReceiver___x_ABI_CWindows__CMedia__CPlayTo__CCurrentTimeChangeRequestedEventArgs* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CPlayTo__CPlayToReceiver___x_ABI_CWindows__CMedia__CPlayTo__CCurrentTimeChangeRequestedEventArgs* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CPlayTo__CPlayToReceiver___x_ABI_CWindows__CMedia__CPlayTo__CCurrentTimeChangeRequestedEventArgs* This);
        HRESULT (STDMETHODCALLTYPE* Invoke)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CPlayTo__CPlayToReceiver___x_ABI_CWindows__CMedia__CPlayTo__CCurrentTimeChangeRequestedEventArgs* This,
        __x_ABI_CWindows_CMedia_CPlayTo_CIPlayToReceiver* sender,
        __x_ABI_CWindows_CMedia_CPlayTo_CICurrentTimeChangeRequestedEventArgs* args);

        END_INTERFACE
    } __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CPlayTo__CPlayToReceiver___x_ABI_CWindows__CMedia__CPlayTo__CCurrentTimeChangeRequestedEventArgsVtbl;

    interface __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CPlayTo__CPlayToReceiver___x_ABI_CWindows__CMedia__CPlayTo__CCurrentTimeChangeRequestedEventArgs
    {
        CONST_VTBL struct __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CPlayTo__CPlayToReceiver___x_ABI_CWindows__CMedia__CPlayTo__CCurrentTimeChangeRequestedEventArgsVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CPlayTo__CPlayToReceiver___x_ABI_CWindows__CMedia__CPlayTo__CCurrentTimeChangeRequestedEventArgs_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CPlayTo__CPlayToReceiver___x_ABI_CWindows__CMedia__CPlayTo__CMuteChangeRequestedEventArgs_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CPlayTo__CPlayToReceiver___x_ABI_CWindows__CMedia__CPlayTo__CMuteChangeRequestedEventArgs_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CPlayTo__CPlayToReceiver___x_ABI_CWindows__CMedia__CPlayTo__CMuteChangeRequestedEventArgs __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CPlayTo__CPlayToReceiver___x_ABI_CWindows__CMedia__CPlayTo__CMuteChangeRequestedEventArgs;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CPlayTo__CPlayToReceiver___x_ABI_CWindows__CMedia__CPlayTo__CMuteChangeRequestedEventArgs;

    typedef struct __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CPlayTo__CPlayToReceiver___x_ABI_CWindows__CMedia__CPlayTo__CMuteChangeRequestedEventArgsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CPlayTo__CPlayToReceiver___x_ABI_CWindows__CMedia__CPlayTo__CMuteChangeRequestedEventArgs* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CPlayTo__CPlayToReceiver___x_ABI_CWindows__CMedia__CPlayTo__CMuteChangeRequestedEventArgs* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CPlayTo__CPlayToReceiver___x_ABI_CWindows__CMedia__CPlayTo__CMuteChangeRequestedEventArgs* This);
        HRESULT (STDMETHODCALLTYPE* Invoke)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CPlayTo__CPlayToReceiver___x_ABI_CWindows__CMedia__CPlayTo__CMuteChangeRequestedEventArgs* This,
        __x_ABI_CWindows_CMedia_CPlayTo_CIPlayToReceiver* sender,
        __x_ABI_CWindows_CMedia_CPlayTo_CIMuteChangeRequestedEventArgs* args);

        END_INTERFACE
    } __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CPlayTo__CPlayToReceiver___x_ABI_CWindows__CMedia__CPlayTo__CMuteChangeRequestedEventArgsVtbl;

    interface __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CPlayTo__CPlayToReceiver___x_ABI_CWindows__CMedia__CPlayTo__CMuteChangeRequestedEventArgs
    {
        CONST_VTBL struct __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CPlayTo__CPlayToReceiver___x_ABI_CWindows__CMedia__CPlayTo__CMuteChangeRequestedEventArgsVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CPlayTo__CPlayToReceiver___x_ABI_CWindows__CMedia__CPlayTo__CMuteChangeRequestedEventArgs_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CPlayTo__CPlayToReceiver___x_ABI_CWindows__CMedia__CPlayTo__CPlaybackRateChangeRequestedEventArgs_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CPlayTo__CPlayToReceiver___x_ABI_CWindows__CMedia__CPlayTo__CPlaybackRateChangeRequestedEventArgs_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CPlayTo__CPlayToReceiver___x_ABI_CWindows__CMedia__CPlayTo__CPlaybackRateChangeRequestedEventArgs __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CPlayTo__CPlayToReceiver___x_ABI_CWindows__CMedia__CPlayTo__CPlaybackRateChangeRequestedEventArgs;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CPlayTo__CPlayToReceiver___x_ABI_CWindows__CMedia__CPlayTo__CPlaybackRateChangeRequestedEventArgs;

    typedef struct __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CPlayTo__CPlayToReceiver___x_ABI_CWindows__CMedia__CPlayTo__CPlaybackRateChangeRequestedEventArgsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CPlayTo__CPlayToReceiver___x_ABI_CWindows__CMedia__CPlayTo__CPlaybackRateChangeRequestedEventArgs* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CPlayTo__CPlayToReceiver___x_ABI_CWindows__CMedia__CPlayTo__CPlaybackRateChangeRequestedEventArgs* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CPlayTo__CPlayToReceiver___x_ABI_CWindows__CMedia__CPlayTo__CPlaybackRateChangeRequestedEventArgs* This);
        HRESULT (STDMETHODCALLTYPE* Invoke)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CPlayTo__CPlayToReceiver___x_ABI_CWindows__CMedia__CPlayTo__CPlaybackRateChangeRequestedEventArgs* This,
        __x_ABI_CWindows_CMedia_CPlayTo_CIPlayToReceiver* sender,
        __x_ABI_CWindows_CMedia_CPlayTo_CIPlaybackRateChangeRequestedEventArgs* args);

        END_INTERFACE
    } __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CPlayTo__CPlayToReceiver___x_ABI_CWindows__CMedia__CPlayTo__CPlaybackRateChangeRequestedEventArgsVtbl;

    interface __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CPlayTo__CPlayToReceiver___x_ABI_CWindows__CMedia__CPlayTo__CPlaybackRateChangeRequestedEventArgs
    {
        CONST_VTBL struct __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CPlayTo__CPlayToReceiver___x_ABI_CWindows__CMedia__CPlayTo__CPlaybackRateChangeRequestedEventArgsVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CPlayTo__CPlayToReceiver___x_ABI_CWindows__CMedia__CPlayTo__CPlaybackRateChangeRequestedEventArgs_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CPlayTo__CPlayToReceiver___x_ABI_CWindows__CMedia__CPlayTo__CSourceChangeRequestedEventArgs_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CPlayTo__CPlayToReceiver___x_ABI_CWindows__CMedia__CPlayTo__CSourceChangeRequestedEventArgs_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CPlayTo__CPlayToReceiver___x_ABI_CWindows__CMedia__CPlayTo__CSourceChangeRequestedEventArgs __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CPlayTo__CPlayToReceiver___x_ABI_CWindows__CMedia__CPlayTo__CSourceChangeRequestedEventArgs;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CPlayTo__CPlayToReceiver___x_ABI_CWindows__CMedia__CPlayTo__CSourceChangeRequestedEventArgs;

    typedef struct __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CPlayTo__CPlayToReceiver___x_ABI_CWindows__CMedia__CPlayTo__CSourceChangeRequestedEventArgsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CPlayTo__CPlayToReceiver___x_ABI_CWindows__CMedia__CPlayTo__CSourceChangeRequestedEventArgs* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CPlayTo__CPlayToReceiver___x_ABI_CWindows__CMedia__CPlayTo__CSourceChangeRequestedEventArgs* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CPlayTo__CPlayToReceiver___x_ABI_CWindows__CMedia__CPlayTo__CSourceChangeRequestedEventArgs* This);
        HRESULT (STDMETHODCALLTYPE* Invoke)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CPlayTo__CPlayToReceiver___x_ABI_CWindows__CMedia__CPlayTo__CSourceChangeRequestedEventArgs* This,
        __x_ABI_CWindows_CMedia_CPlayTo_CIPlayToReceiver* sender,
        __x_ABI_CWindows_CMedia_CPlayTo_CISourceChangeRequestedEventArgs* args);

        END_INTERFACE
    } __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CPlayTo__CPlayToReceiver___x_ABI_CWindows__CMedia__CPlayTo__CSourceChangeRequestedEventArgsVtbl;

    interface __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CPlayTo__CPlayToReceiver___x_ABI_CWindows__CMedia__CPlayTo__CSourceChangeRequestedEventArgs
    {
        CONST_VTBL struct __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CPlayTo__CPlayToReceiver___x_ABI_CWindows__CMedia__CPlayTo__CSourceChangeRequestedEventArgsVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CPlayTo__CPlayToReceiver___x_ABI_CWindows__CMedia__CPlayTo__CSourceChangeRequestedEventArgs_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CPlayTo__CPlayToReceiver___x_ABI_CWindows__CMedia__CPlayTo__CVolumeChangeRequestedEventArgs_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CPlayTo__CPlayToReceiver___x_ABI_CWindows__CMedia__CPlayTo__CVolumeChangeRequestedEventArgs_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CPlayTo__CPlayToReceiver___x_ABI_CWindows__CMedia__CPlayTo__CVolumeChangeRequestedEventArgs __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CPlayTo__CPlayToReceiver___x_ABI_CWindows__CMedia__CPlayTo__CVolumeChangeRequestedEventArgs;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CPlayTo__CPlayToReceiver___x_ABI_CWindows__CMedia__CPlayTo__CVolumeChangeRequestedEventArgs;

    typedef struct __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CPlayTo__CPlayToReceiver___x_ABI_CWindows__CMedia__CPlayTo__CVolumeChangeRequestedEventArgsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CPlayTo__CPlayToReceiver___x_ABI_CWindows__CMedia__CPlayTo__CVolumeChangeRequestedEventArgs* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CPlayTo__CPlayToReceiver___x_ABI_CWindows__CMedia__CPlayTo__CVolumeChangeRequestedEventArgs* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CPlayTo__CPlayToReceiver___x_ABI_CWindows__CMedia__CPlayTo__CVolumeChangeRequestedEventArgs* This);
        HRESULT (STDMETHODCALLTYPE* Invoke)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CPlayTo__CPlayToReceiver___x_ABI_CWindows__CMedia__CPlayTo__CVolumeChangeRequestedEventArgs* This,
        __x_ABI_CWindows_CMedia_CPlayTo_CIPlayToReceiver* sender,
        __x_ABI_CWindows_CMedia_CPlayTo_CIVolumeChangeRequestedEventArgs* args);

        END_INTERFACE
    } __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CPlayTo__CPlayToReceiver___x_ABI_CWindows__CMedia__CPlayTo__CVolumeChangeRequestedEventArgsVtbl;

    interface __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CPlayTo__CPlayToReceiver___x_ABI_CWindows__CMedia__CPlayTo__CVolumeChangeRequestedEventArgs
    {
        CONST_VTBL struct __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CPlayTo__CPlayToReceiver___x_ABI_CWindows__CMedia__CPlayTo__CVolumeChangeRequestedEventArgsVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CPlayTo__CPlayToReceiver___x_ABI_CWindows__CMedia__CPlayTo__CVolumeChangeRequestedEventArgs_INTERFACE_DEFINED__
    
#ifndef ____x_ABI_CWindows_CFoundation_CCollections_CIPropertySet_FWD_DEFINED__
#define ____x_ABI_CWindows_CFoundation_CCollections_CIPropertySet_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CFoundation_CCollections_CIPropertySet __x_ABI_CWindows_CFoundation_CCollections_CIPropertySet;

#endif // ____x_ABI_CWindows_CFoundation_CCollections_CIPropertySet_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CFoundation_CIAsyncAction_FWD_DEFINED__
#define ____x_ABI_CWindows_CFoundation_CIAsyncAction_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CFoundation_CIAsyncAction __x_ABI_CWindows_CFoundation_CIAsyncAction;

#endif // ____x_ABI_CWindows_CFoundation_CIAsyncAction_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CFoundation_CIPropertyValue_FWD_DEFINED__
#define ____x_ABI_CWindows_CFoundation_CIPropertyValue_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CFoundation_CIPropertyValue __x_ABI_CWindows_CFoundation_CIPropertyValue;

#endif // ____x_ABI_CWindows_CFoundation_CIPropertyValue_FWD_DEFINED__

typedef struct __x_ABI_CWindows_CFoundation_CTimeSpan __x_ABI_CWindows_CFoundation_CTimeSpan;

#ifndef ____x_ABI_CWindows_CFoundation_CIUriRuntimeClass_FWD_DEFINED__
#define ____x_ABI_CWindows_CFoundation_CIUriRuntimeClass_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CFoundation_CIUriRuntimeClass __x_ABI_CWindows_CFoundation_CIUriRuntimeClass;

#endif // ____x_ABI_CWindows_CFoundation_CIUriRuntimeClass_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CStorage_CStreams_CIRandomAccessStreamReference_FWD_DEFINED__
#define ____x_ABI_CWindows_CStorage_CStreams_CIRandomAccessStreamReference_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CStorage_CStreams_CIRandomAccessStreamReference __x_ABI_CWindows_CStorage_CStreams_CIRandomAccessStreamReference;

#endif // ____x_ABI_CWindows_CStorage_CStreams_CIRandomAccessStreamReference_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CStorage_CStreams_CIRandomAccessStreamWithContentType_FWD_DEFINED__
#define ____x_ABI_CWindows_CStorage_CStreams_CIRandomAccessStreamWithContentType_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CStorage_CStreams_CIRandomAccessStreamWithContentType __x_ABI_CWindows_CStorage_CStreams_CIRandomAccessStreamWithContentType;

#endif // ____x_ABI_CWindows_CStorage_CStreams_CIRandomAccessStreamWithContentType_FWD_DEFINED__

typedef enum __x_ABI_CWindows_CMedia_CPlayTo_CPlayToConnectionError __x_ABI_CWindows_CMedia_CPlayTo_CPlayToConnectionError;

typedef enum __x_ABI_CWindows_CMedia_CPlayTo_CPlayToConnectionState __x_ABI_CWindows_CMedia_CPlayTo_CPlayToConnectionState;

enum __x_ABI_CWindows_CMedia_CPlayTo_CPlayToConnectionError
    {
        __x_ABI_CWindows_CMedia_CPlayTo_CPlayToConnectionError_None = 0,
    __x_ABI_CWindows_CMedia_CPlayTo_CPlayToConnectionError_DeviceNotResponding = 1,
    __x_ABI_CWindows_CMedia_CPlayTo_CPlayToConnectionError_DeviceError = 2,
    __x_ABI_CWindows_CMedia_CPlayTo_CPlayToConnectionError_DeviceLocked = 3,
    __x_ABI_CWindows_CMedia_CPlayTo_CPlayToConnectionError_ProtectedPlaybackFailed = 4,
};

enum __x_ABI_CWindows_CMedia_CPlayTo_CPlayToConnectionState
    {
        __x_ABI_CWindows_CMedia_CPlayTo_CPlayToConnectionState_Disconnected = 0,
    __x_ABI_CWindows_CMedia_CPlayTo_CPlayToConnectionState_Connected = 1,
    __x_ABI_CWindows_CMedia_CPlayTo_CPlayToConnectionState_Rendering = 2,
};

#if !defined(____x_ABI_CWindows_CMedia_CPlayTo_CICurrentTimeChangeRequestedEventArgs_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CMedia_CPlayTo_CICurrentTimeChangeRequestedEventArgs_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CMedia_CPlayTo_CICurrentTimeChangeRequestedEventArgsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CMedia_CPlayTo_CICurrentTimeChangeRequestedEventArgs* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CMedia_CPlayTo_CICurrentTimeChangeRequestedEventArgs* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CMedia_CPlayTo_CICurrentTimeChangeRequestedEventArgs* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CMedia_CPlayTo_CICurrentTimeChangeRequestedEventArgs* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CMedia_CPlayTo_CICurrentTimeChangeRequestedEventArgs* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CMedia_CPlayTo_CICurrentTimeChangeRequestedEventArgs* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Time)(__x_ABI_CWindows_CMedia_CPlayTo_CICurrentTimeChangeRequestedEventArgs* This,
        struct __x_ABI_CWindows_CFoundation_CTimeSpan* value);

        END_INTERFACE
    } __x_ABI_CWindows_CMedia_CPlayTo_CICurrentTimeChangeRequestedEventArgsVtbl;

    interface __x_ABI_CWindows_CMedia_CPlayTo_CICurrentTimeChangeRequestedEventArgs
    {
        CONST_VTBL struct __x_ABI_CWindows_CMedia_CPlayTo_CICurrentTimeChangeRequestedEventArgsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CMedia_CPlayTo_CICurrentTimeChangeRequestedEventArgs;
#endif /* !defined(____x_ABI_CWindows_CMedia_CPlayTo_CICurrentTimeChangeRequestedEventArgs_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CMedia_CPlayTo_CIMuteChangeRequestedEventArgs_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CMedia_CPlayTo_CIMuteChangeRequestedEventArgs_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CMedia_CPlayTo_CIMuteChangeRequestedEventArgsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CMedia_CPlayTo_CIMuteChangeRequestedEventArgs* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CMedia_CPlayTo_CIMuteChangeRequestedEventArgs* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CMedia_CPlayTo_CIMuteChangeRequestedEventArgs* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CMedia_CPlayTo_CIMuteChangeRequestedEventArgs* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CMedia_CPlayTo_CIMuteChangeRequestedEventArgs* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CMedia_CPlayTo_CIMuteChangeRequestedEventArgs* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Mute)(__x_ABI_CWindows_CMedia_CPlayTo_CIMuteChangeRequestedEventArgs* This,
        boolean* value);

        END_INTERFACE
    } __x_ABI_CWindows_CMedia_CPlayTo_CIMuteChangeRequestedEventArgsVtbl;

    interface __x_ABI_CWindows_CMedia_CPlayTo_CIMuteChangeRequestedEventArgs
    {
        CONST_VTBL struct __x_ABI_CWindows_CMedia_CPlayTo_CIMuteChangeRequestedEventArgsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CMedia_CPlayTo_CIMuteChangeRequestedEventArgs;
#endif /* !defined(____x_ABI_CWindows_CMedia_CPlayTo_CIMuteChangeRequestedEventArgs_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CMedia_CPlayTo_CIPlayToConnection_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CMedia_CPlayTo_CIPlayToConnection_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CMedia_CPlayTo_CIPlayToConnectionVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CMedia_CPlayTo_CIPlayToConnection* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CMedia_CPlayTo_CIPlayToConnection* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CMedia_CPlayTo_CIPlayToConnection* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CMedia_CPlayTo_CIPlayToConnection* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CMedia_CPlayTo_CIPlayToConnection* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CMedia_CPlayTo_CIPlayToConnection* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_State)(__x_ABI_CWindows_CMedia_CPlayTo_CIPlayToConnection* This,
        enum __x_ABI_CWindows_CMedia_CPlayTo_CPlayToConnectionState* value);
    HRESULT (STDMETHODCALLTYPE* add_StateChanged)(__x_ABI_CWindows_CMedia_CPlayTo_CIPlayToConnection* This,
        __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CPlayTo__CPlayToConnection___x_ABI_CWindows__CMedia__CPlayTo__CPlayToConnectionStateChangedEventArgs* handler,
        EventRegistrationToken* token);
    HRESULT (STDMETHODCALLTYPE* remove_StateChanged)(__x_ABI_CWindows_CMedia_CPlayTo_CIPlayToConnection* This,
        EventRegistrationToken token);
    HRESULT (STDMETHODCALLTYPE* add_Transferred)(__x_ABI_CWindows_CMedia_CPlayTo_CIPlayToConnection* This,
        __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CPlayTo__CPlayToConnection___x_ABI_CWindows__CMedia__CPlayTo__CPlayToConnectionTransferredEventArgs* handler,
        EventRegistrationToken* token);
    HRESULT (STDMETHODCALLTYPE* remove_Transferred)(__x_ABI_CWindows_CMedia_CPlayTo_CIPlayToConnection* This,
        EventRegistrationToken token);
    HRESULT (STDMETHODCALLTYPE* add_Error)(__x_ABI_CWindows_CMedia_CPlayTo_CIPlayToConnection* This,
        __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CPlayTo__CPlayToConnection___x_ABI_CWindows__CMedia__CPlayTo__CPlayToConnectionErrorEventArgs* handler,
        EventRegistrationToken* token);
    HRESULT (STDMETHODCALLTYPE* remove_Error)(__x_ABI_CWindows_CMedia_CPlayTo_CIPlayToConnection* This,
        EventRegistrationToken token);

        END_INTERFACE
    } __x_ABI_CWindows_CMedia_CPlayTo_CIPlayToConnectionVtbl;

    interface __x_ABI_CWindows_CMedia_CPlayTo_CIPlayToConnection
    {
        CONST_VTBL struct __x_ABI_CWindows_CMedia_CPlayTo_CIPlayToConnectionVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CMedia_CPlayTo_CIPlayToConnection;
#endif /* !defined(____x_ABI_CWindows_CMedia_CPlayTo_CIPlayToConnection_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CMedia_CPlayTo_CIPlayToConnectionErrorEventArgs_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CMedia_CPlayTo_CIPlayToConnectionErrorEventArgs_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CMedia_CPlayTo_CIPlayToConnectionErrorEventArgsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CMedia_CPlayTo_CIPlayToConnectionErrorEventArgs* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CMedia_CPlayTo_CIPlayToConnectionErrorEventArgs* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CMedia_CPlayTo_CIPlayToConnectionErrorEventArgs* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CMedia_CPlayTo_CIPlayToConnectionErrorEventArgs* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CMedia_CPlayTo_CIPlayToConnectionErrorEventArgs* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CMedia_CPlayTo_CIPlayToConnectionErrorEventArgs* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Code)(__x_ABI_CWindows_CMedia_CPlayTo_CIPlayToConnectionErrorEventArgs* This,
        enum __x_ABI_CWindows_CMedia_CPlayTo_CPlayToConnectionError* value);
    HRESULT (STDMETHODCALLTYPE* get_Message)(__x_ABI_CWindows_CMedia_CPlayTo_CIPlayToConnectionErrorEventArgs* This,
        HSTRING* value);

        END_INTERFACE
    } __x_ABI_CWindows_CMedia_CPlayTo_CIPlayToConnectionErrorEventArgsVtbl;

    interface __x_ABI_CWindows_CMedia_CPlayTo_CIPlayToConnectionErrorEventArgs
    {
        CONST_VTBL struct __x_ABI_CWindows_CMedia_CPlayTo_CIPlayToConnectionErrorEventArgsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CMedia_CPlayTo_CIPlayToConnectionErrorEventArgs;
#endif /* !defined(____x_ABI_CWindows_CMedia_CPlayTo_CIPlayToConnectionErrorEventArgs_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CMedia_CPlayTo_CIPlayToConnectionStateChangedEventArgs_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CMedia_CPlayTo_CIPlayToConnectionStateChangedEventArgs_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CMedia_CPlayTo_CIPlayToConnectionStateChangedEventArgsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CMedia_CPlayTo_CIPlayToConnectionStateChangedEventArgs* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CMedia_CPlayTo_CIPlayToConnectionStateChangedEventArgs* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CMedia_CPlayTo_CIPlayToConnectionStateChangedEventArgs* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CMedia_CPlayTo_CIPlayToConnectionStateChangedEventArgs* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CMedia_CPlayTo_CIPlayToConnectionStateChangedEventArgs* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CMedia_CPlayTo_CIPlayToConnectionStateChangedEventArgs* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_PreviousState)(__x_ABI_CWindows_CMedia_CPlayTo_CIPlayToConnectionStateChangedEventArgs* This,
        enum __x_ABI_CWindows_CMedia_CPlayTo_CPlayToConnectionState* value);
    HRESULT (STDMETHODCALLTYPE* get_CurrentState)(__x_ABI_CWindows_CMedia_CPlayTo_CIPlayToConnectionStateChangedEventArgs* This,
        enum __x_ABI_CWindows_CMedia_CPlayTo_CPlayToConnectionState* value);

        END_INTERFACE
    } __x_ABI_CWindows_CMedia_CPlayTo_CIPlayToConnectionStateChangedEventArgsVtbl;

    interface __x_ABI_CWindows_CMedia_CPlayTo_CIPlayToConnectionStateChangedEventArgs
    {
        CONST_VTBL struct __x_ABI_CWindows_CMedia_CPlayTo_CIPlayToConnectionStateChangedEventArgsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CMedia_CPlayTo_CIPlayToConnectionStateChangedEventArgs;
#endif /* !defined(____x_ABI_CWindows_CMedia_CPlayTo_CIPlayToConnectionStateChangedEventArgs_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CMedia_CPlayTo_CIPlayToConnectionTransferredEventArgs_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CMedia_CPlayTo_CIPlayToConnectionTransferredEventArgs_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CMedia_CPlayTo_CIPlayToConnectionTransferredEventArgsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CMedia_CPlayTo_CIPlayToConnectionTransferredEventArgs* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CMedia_CPlayTo_CIPlayToConnectionTransferredEventArgs* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CMedia_CPlayTo_CIPlayToConnectionTransferredEventArgs* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CMedia_CPlayTo_CIPlayToConnectionTransferredEventArgs* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CMedia_CPlayTo_CIPlayToConnectionTransferredEventArgs* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CMedia_CPlayTo_CIPlayToConnectionTransferredEventArgs* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_PreviousSource)(__x_ABI_CWindows_CMedia_CPlayTo_CIPlayToConnectionTransferredEventArgs* This,
        __x_ABI_CWindows_CMedia_CPlayTo_CIPlayToSource** value);
    HRESULT (STDMETHODCALLTYPE* get_CurrentSource)(__x_ABI_CWindows_CMedia_CPlayTo_CIPlayToConnectionTransferredEventArgs* This,
        __x_ABI_CWindows_CMedia_CPlayTo_CIPlayToSource** value);

        END_INTERFACE
    } __x_ABI_CWindows_CMedia_CPlayTo_CIPlayToConnectionTransferredEventArgsVtbl;

    interface __x_ABI_CWindows_CMedia_CPlayTo_CIPlayToConnectionTransferredEventArgs
    {
        CONST_VTBL struct __x_ABI_CWindows_CMedia_CPlayTo_CIPlayToConnectionTransferredEventArgsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CMedia_CPlayTo_CIPlayToConnectionTransferredEventArgs;
#endif /* !defined(____x_ABI_CWindows_CMedia_CPlayTo_CIPlayToConnectionTransferredEventArgs_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CMedia_CPlayTo_CIPlayToManager_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CMedia_CPlayTo_CIPlayToManager_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CMedia_CPlayTo_CIPlayToManagerVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CMedia_CPlayTo_CIPlayToManager* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CMedia_CPlayTo_CIPlayToManager* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CMedia_CPlayTo_CIPlayToManager* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CMedia_CPlayTo_CIPlayToManager* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CMedia_CPlayTo_CIPlayToManager* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CMedia_CPlayTo_CIPlayToManager* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* add_SourceRequested)(__x_ABI_CWindows_CMedia_CPlayTo_CIPlayToManager* This,
        __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CPlayTo__CPlayToManager___x_ABI_CWindows__CMedia__CPlayTo__CPlayToSourceRequestedEventArgs* handler,
        EventRegistrationToken* token);
    HRESULT (STDMETHODCALLTYPE* remove_SourceRequested)(__x_ABI_CWindows_CMedia_CPlayTo_CIPlayToManager* This,
        EventRegistrationToken token);
    HRESULT (STDMETHODCALLTYPE* add_SourceSelected)(__x_ABI_CWindows_CMedia_CPlayTo_CIPlayToManager* This,
        __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CPlayTo__CPlayToManager___x_ABI_CWindows__CMedia__CPlayTo__CPlayToSourceSelectedEventArgs* handler,
        EventRegistrationToken* token);
    HRESULT (STDMETHODCALLTYPE* remove_SourceSelected)(__x_ABI_CWindows_CMedia_CPlayTo_CIPlayToManager* This,
        EventRegistrationToken token);
    HRESULT (STDMETHODCALLTYPE* put_DefaultSourceSelection)(__x_ABI_CWindows_CMedia_CPlayTo_CIPlayToManager* This,
        boolean value);
    HRESULT (STDMETHODCALLTYPE* get_DefaultSourceSelection)(__x_ABI_CWindows_CMedia_CPlayTo_CIPlayToManager* This,
        boolean* value);

        END_INTERFACE
    } __x_ABI_CWindows_CMedia_CPlayTo_CIPlayToManagerVtbl;

    interface __x_ABI_CWindows_CMedia_CPlayTo_CIPlayToManager
    {
        CONST_VTBL struct __x_ABI_CWindows_CMedia_CPlayTo_CIPlayToManagerVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CMedia_CPlayTo_CIPlayToManager;
#endif /* !defined(____x_ABI_CWindows_CMedia_CPlayTo_CIPlayToManager_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CMedia_CPlayTo_CIPlayToManagerStatics_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CMedia_CPlayTo_CIPlayToManagerStatics_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CMedia_CPlayTo_CIPlayToManagerStaticsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CMedia_CPlayTo_CIPlayToManagerStatics* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CMedia_CPlayTo_CIPlayToManagerStatics* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CMedia_CPlayTo_CIPlayToManagerStatics* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CMedia_CPlayTo_CIPlayToManagerStatics* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CMedia_CPlayTo_CIPlayToManagerStatics* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CMedia_CPlayTo_CIPlayToManagerStatics* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* GetForCurrentView)(__x_ABI_CWindows_CMedia_CPlayTo_CIPlayToManagerStatics* This,
        __x_ABI_CWindows_CMedia_CPlayTo_CIPlayToManager** playToManager);
    HRESULT (STDMETHODCALLTYPE* ShowPlayToUI)(__x_ABI_CWindows_CMedia_CPlayTo_CIPlayToManagerStatics* This);

        END_INTERFACE
    } __x_ABI_CWindows_CMedia_CPlayTo_CIPlayToManagerStaticsVtbl;

    interface __x_ABI_CWindows_CMedia_CPlayTo_CIPlayToManagerStatics
    {
        CONST_VTBL struct __x_ABI_CWindows_CMedia_CPlayTo_CIPlayToManagerStaticsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CMedia_CPlayTo_CIPlayToManagerStatics;
#endif /* !defined(____x_ABI_CWindows_CMedia_CPlayTo_CIPlayToManagerStatics_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CMedia_CPlayTo_CIPlayToReceiver_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CMedia_CPlayTo_CIPlayToReceiver_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CMedia_CPlayTo_CIPlayToReceiverVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CMedia_CPlayTo_CIPlayToReceiver* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CMedia_CPlayTo_CIPlayToReceiver* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CMedia_CPlayTo_CIPlayToReceiver* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CMedia_CPlayTo_CIPlayToReceiver* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CMedia_CPlayTo_CIPlayToReceiver* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CMedia_CPlayTo_CIPlayToReceiver* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* add_PlayRequested)(__x_ABI_CWindows_CMedia_CPlayTo_CIPlayToReceiver* This,
        __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CPlayTo__CPlayToReceiver_IInspectable* handler,
        EventRegistrationToken* token);
    HRESULT (STDMETHODCALLTYPE* remove_PlayRequested)(__x_ABI_CWindows_CMedia_CPlayTo_CIPlayToReceiver* This,
        EventRegistrationToken token);
    HRESULT (STDMETHODCALLTYPE* add_PauseRequested)(__x_ABI_CWindows_CMedia_CPlayTo_CIPlayToReceiver* This,
        __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CPlayTo__CPlayToReceiver_IInspectable* handler,
        EventRegistrationToken* token);
    HRESULT (STDMETHODCALLTYPE* remove_PauseRequested)(__x_ABI_CWindows_CMedia_CPlayTo_CIPlayToReceiver* This,
        EventRegistrationToken token);
    HRESULT (STDMETHODCALLTYPE* add_SourceChangeRequested)(__x_ABI_CWindows_CMedia_CPlayTo_CIPlayToReceiver* This,
        __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CPlayTo__CPlayToReceiver___x_ABI_CWindows__CMedia__CPlayTo__CSourceChangeRequestedEventArgs* handler,
        EventRegistrationToken* token);
    HRESULT (STDMETHODCALLTYPE* remove_SourceChangeRequested)(__x_ABI_CWindows_CMedia_CPlayTo_CIPlayToReceiver* This,
        EventRegistrationToken token);
    HRESULT (STDMETHODCALLTYPE* add_PlaybackRateChangeRequested)(__x_ABI_CWindows_CMedia_CPlayTo_CIPlayToReceiver* This,
        __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CPlayTo__CPlayToReceiver___x_ABI_CWindows__CMedia__CPlayTo__CPlaybackRateChangeRequestedEventArgs* handler,
        EventRegistrationToken* token);
    HRESULT (STDMETHODCALLTYPE* remove_PlaybackRateChangeRequested)(__x_ABI_CWindows_CMedia_CPlayTo_CIPlayToReceiver* This,
        EventRegistrationToken token);
    HRESULT (STDMETHODCALLTYPE* add_CurrentTimeChangeRequested)(__x_ABI_CWindows_CMedia_CPlayTo_CIPlayToReceiver* This,
        __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CPlayTo__CPlayToReceiver___x_ABI_CWindows__CMedia__CPlayTo__CCurrentTimeChangeRequestedEventArgs* handler,
        EventRegistrationToken* token);
    HRESULT (STDMETHODCALLTYPE* remove_CurrentTimeChangeRequested)(__x_ABI_CWindows_CMedia_CPlayTo_CIPlayToReceiver* This,
        EventRegistrationToken token);
    HRESULT (STDMETHODCALLTYPE* add_MuteChangeRequested)(__x_ABI_CWindows_CMedia_CPlayTo_CIPlayToReceiver* This,
        __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CPlayTo__CPlayToReceiver___x_ABI_CWindows__CMedia__CPlayTo__CMuteChangeRequestedEventArgs* handler,
        EventRegistrationToken* token);
    HRESULT (STDMETHODCALLTYPE* remove_MuteChangeRequested)(__x_ABI_CWindows_CMedia_CPlayTo_CIPlayToReceiver* This,
        EventRegistrationToken token);
    HRESULT (STDMETHODCALLTYPE* add_VolumeChangeRequested)(__x_ABI_CWindows_CMedia_CPlayTo_CIPlayToReceiver* This,
        __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CPlayTo__CPlayToReceiver___x_ABI_CWindows__CMedia__CPlayTo__CVolumeChangeRequestedEventArgs* handler,
        EventRegistrationToken* token);
    HRESULT (STDMETHODCALLTYPE* remove_VolumeChangeRequested)(__x_ABI_CWindows_CMedia_CPlayTo_CIPlayToReceiver* This,
        EventRegistrationToken token);
    HRESULT (STDMETHODCALLTYPE* add_TimeUpdateRequested)(__x_ABI_CWindows_CMedia_CPlayTo_CIPlayToReceiver* This,
        __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CPlayTo__CPlayToReceiver_IInspectable* handler,
        EventRegistrationToken* token);
    HRESULT (STDMETHODCALLTYPE* remove_TimeUpdateRequested)(__x_ABI_CWindows_CMedia_CPlayTo_CIPlayToReceiver* This,
        EventRegistrationToken token);
    HRESULT (STDMETHODCALLTYPE* add_StopRequested)(__x_ABI_CWindows_CMedia_CPlayTo_CIPlayToReceiver* This,
        __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CPlayTo__CPlayToReceiver_IInspectable* handler,
        EventRegistrationToken* token);
    HRESULT (STDMETHODCALLTYPE* remove_StopRequested)(__x_ABI_CWindows_CMedia_CPlayTo_CIPlayToReceiver* This,
        EventRegistrationToken token);
    HRESULT (STDMETHODCALLTYPE* NotifyVolumeChange)(__x_ABI_CWindows_CMedia_CPlayTo_CIPlayToReceiver* This,
        DOUBLE volume,
        boolean mute);
    HRESULT (STDMETHODCALLTYPE* NotifyRateChange)(__x_ABI_CWindows_CMedia_CPlayTo_CIPlayToReceiver* This,
        DOUBLE rate);
    HRESULT (STDMETHODCALLTYPE* NotifyLoadedMetadata)(__x_ABI_CWindows_CMedia_CPlayTo_CIPlayToReceiver* This);
    HRESULT (STDMETHODCALLTYPE* NotifyTimeUpdate)(__x_ABI_CWindows_CMedia_CPlayTo_CIPlayToReceiver* This,
        struct __x_ABI_CWindows_CFoundation_CTimeSpan currentTime);
    HRESULT (STDMETHODCALLTYPE* NotifyDurationChange)(__x_ABI_CWindows_CMedia_CPlayTo_CIPlayToReceiver* This,
        struct __x_ABI_CWindows_CFoundation_CTimeSpan duration);
    HRESULT (STDMETHODCALLTYPE* NotifySeeking)(__x_ABI_CWindows_CMedia_CPlayTo_CIPlayToReceiver* This);
    HRESULT (STDMETHODCALLTYPE* NotifySeeked)(__x_ABI_CWindows_CMedia_CPlayTo_CIPlayToReceiver* This);
    HRESULT (STDMETHODCALLTYPE* NotifyPaused)(__x_ABI_CWindows_CMedia_CPlayTo_CIPlayToReceiver* This);
    HRESULT (STDMETHODCALLTYPE* NotifyPlaying)(__x_ABI_CWindows_CMedia_CPlayTo_CIPlayToReceiver* This);
    HRESULT (STDMETHODCALLTYPE* NotifyEnded)(__x_ABI_CWindows_CMedia_CPlayTo_CIPlayToReceiver* This);
    HRESULT (STDMETHODCALLTYPE* NotifyError)(__x_ABI_CWindows_CMedia_CPlayTo_CIPlayToReceiver* This);
    HRESULT (STDMETHODCALLTYPE* NotifyStopped)(__x_ABI_CWindows_CMedia_CPlayTo_CIPlayToReceiver* This);
    HRESULT (STDMETHODCALLTYPE* get_FriendlyName)(__x_ABI_CWindows_CMedia_CPlayTo_CIPlayToReceiver* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* put_FriendlyName)(__x_ABI_CWindows_CMedia_CPlayTo_CIPlayToReceiver* This,
        HSTRING value);
    HRESULT (STDMETHODCALLTYPE* put_SupportsImage)(__x_ABI_CWindows_CMedia_CPlayTo_CIPlayToReceiver* This,
        boolean value);
    HRESULT (STDMETHODCALLTYPE* get_SupportsImage)(__x_ABI_CWindows_CMedia_CPlayTo_CIPlayToReceiver* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* put_SupportsAudio)(__x_ABI_CWindows_CMedia_CPlayTo_CIPlayToReceiver* This,
        boolean value);
    HRESULT (STDMETHODCALLTYPE* get_SupportsAudio)(__x_ABI_CWindows_CMedia_CPlayTo_CIPlayToReceiver* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* put_SupportsVideo)(__x_ABI_CWindows_CMedia_CPlayTo_CIPlayToReceiver* This,
        boolean value);
    HRESULT (STDMETHODCALLTYPE* get_SupportsVideo)(__x_ABI_CWindows_CMedia_CPlayTo_CIPlayToReceiver* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* get_Properties)(__x_ABI_CWindows_CMedia_CPlayTo_CIPlayToReceiver* This,
        __x_ABI_CWindows_CFoundation_CCollections_CIPropertySet** value);
    HRESULT (STDMETHODCALLTYPE* StartAsync)(__x_ABI_CWindows_CMedia_CPlayTo_CIPlayToReceiver* This,
        __x_ABI_CWindows_CFoundation_CIAsyncAction** action);
    HRESULT (STDMETHODCALLTYPE* StopAsync)(__x_ABI_CWindows_CMedia_CPlayTo_CIPlayToReceiver* This,
        __x_ABI_CWindows_CFoundation_CIAsyncAction** action);

        END_INTERFACE
    } __x_ABI_CWindows_CMedia_CPlayTo_CIPlayToReceiverVtbl;

    interface __x_ABI_CWindows_CMedia_CPlayTo_CIPlayToReceiver
    {
        CONST_VTBL struct __x_ABI_CWindows_CMedia_CPlayTo_CIPlayToReceiverVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CMedia_CPlayTo_CIPlayToReceiver;
#endif /* !defined(____x_ABI_CWindows_CMedia_CPlayTo_CIPlayToReceiver_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CMedia_CPlayTo_CIPlayToSource_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CMedia_CPlayTo_CIPlayToSource_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CMedia_CPlayTo_CIPlayToSourceVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CMedia_CPlayTo_CIPlayToSource* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CMedia_CPlayTo_CIPlayToSource* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CMedia_CPlayTo_CIPlayToSource* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CMedia_CPlayTo_CIPlayToSource* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CMedia_CPlayTo_CIPlayToSource* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CMedia_CPlayTo_CIPlayToSource* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Connection)(__x_ABI_CWindows_CMedia_CPlayTo_CIPlayToSource* This,
        __x_ABI_CWindows_CMedia_CPlayTo_CIPlayToConnection** value);
    HRESULT (STDMETHODCALLTYPE* get_Next)(__x_ABI_CWindows_CMedia_CPlayTo_CIPlayToSource* This,
        __x_ABI_CWindows_CMedia_CPlayTo_CIPlayToSource** value);
    HRESULT (STDMETHODCALLTYPE* put_Next)(__x_ABI_CWindows_CMedia_CPlayTo_CIPlayToSource* This,
        __x_ABI_CWindows_CMedia_CPlayTo_CIPlayToSource* value);
    HRESULT (STDMETHODCALLTYPE* PlayNext)(__x_ABI_CWindows_CMedia_CPlayTo_CIPlayToSource* This);

        END_INTERFACE
    } __x_ABI_CWindows_CMedia_CPlayTo_CIPlayToSourceVtbl;

    interface __x_ABI_CWindows_CMedia_CPlayTo_CIPlayToSource
    {
        CONST_VTBL struct __x_ABI_CWindows_CMedia_CPlayTo_CIPlayToSourceVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CMedia_CPlayTo_CIPlayToSource;
#endif /* !defined(____x_ABI_CWindows_CMedia_CPlayTo_CIPlayToSource_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CMedia_CPlayTo_CIPlayToSourceDeferral_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CMedia_CPlayTo_CIPlayToSourceDeferral_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CMedia_CPlayTo_CIPlayToSourceDeferralVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CMedia_CPlayTo_CIPlayToSourceDeferral* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CMedia_CPlayTo_CIPlayToSourceDeferral* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CMedia_CPlayTo_CIPlayToSourceDeferral* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CMedia_CPlayTo_CIPlayToSourceDeferral* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CMedia_CPlayTo_CIPlayToSourceDeferral* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CMedia_CPlayTo_CIPlayToSourceDeferral* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* Complete)(__x_ABI_CWindows_CMedia_CPlayTo_CIPlayToSourceDeferral* This);

        END_INTERFACE
    } __x_ABI_CWindows_CMedia_CPlayTo_CIPlayToSourceDeferralVtbl;

    interface __x_ABI_CWindows_CMedia_CPlayTo_CIPlayToSourceDeferral
    {
        CONST_VTBL struct __x_ABI_CWindows_CMedia_CPlayTo_CIPlayToSourceDeferralVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CMedia_CPlayTo_CIPlayToSourceDeferral;
#endif /* !defined(____x_ABI_CWindows_CMedia_CPlayTo_CIPlayToSourceDeferral_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CMedia_CPlayTo_CIPlayToSourceRequest_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CMedia_CPlayTo_CIPlayToSourceRequest_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CMedia_CPlayTo_CIPlayToSourceRequestVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CMedia_CPlayTo_CIPlayToSourceRequest* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CMedia_CPlayTo_CIPlayToSourceRequest* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CMedia_CPlayTo_CIPlayToSourceRequest* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CMedia_CPlayTo_CIPlayToSourceRequest* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CMedia_CPlayTo_CIPlayToSourceRequest* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CMedia_CPlayTo_CIPlayToSourceRequest* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Deadline)(__x_ABI_CWindows_CMedia_CPlayTo_CIPlayToSourceRequest* This,
        struct __x_ABI_CWindows_CFoundation_CDateTime* value);
    HRESULT (STDMETHODCALLTYPE* DisplayErrorString)(__x_ABI_CWindows_CMedia_CPlayTo_CIPlayToSourceRequest* This,
        HSTRING errorString);
    HRESULT (STDMETHODCALLTYPE* GetDeferral)(__x_ABI_CWindows_CMedia_CPlayTo_CIPlayToSourceRequest* This,
        __x_ABI_CWindows_CMedia_CPlayTo_CIPlayToSourceDeferral** deferral);
    HRESULT (STDMETHODCALLTYPE* SetSource)(__x_ABI_CWindows_CMedia_CPlayTo_CIPlayToSourceRequest* This,
        __x_ABI_CWindows_CMedia_CPlayTo_CIPlayToSource* value);

        END_INTERFACE
    } __x_ABI_CWindows_CMedia_CPlayTo_CIPlayToSourceRequestVtbl;

    interface __x_ABI_CWindows_CMedia_CPlayTo_CIPlayToSourceRequest
    {
        CONST_VTBL struct __x_ABI_CWindows_CMedia_CPlayTo_CIPlayToSourceRequestVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CMedia_CPlayTo_CIPlayToSourceRequest;
#endif /* !defined(____x_ABI_CWindows_CMedia_CPlayTo_CIPlayToSourceRequest_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CMedia_CPlayTo_CIPlayToSourceRequestedEventArgs_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CMedia_CPlayTo_CIPlayToSourceRequestedEventArgs_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CMedia_CPlayTo_CIPlayToSourceRequestedEventArgsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CMedia_CPlayTo_CIPlayToSourceRequestedEventArgs* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CMedia_CPlayTo_CIPlayToSourceRequestedEventArgs* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CMedia_CPlayTo_CIPlayToSourceRequestedEventArgs* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CMedia_CPlayTo_CIPlayToSourceRequestedEventArgs* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CMedia_CPlayTo_CIPlayToSourceRequestedEventArgs* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CMedia_CPlayTo_CIPlayToSourceRequestedEventArgs* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_SourceRequest)(__x_ABI_CWindows_CMedia_CPlayTo_CIPlayToSourceRequestedEventArgs* This,
        __x_ABI_CWindows_CMedia_CPlayTo_CIPlayToSourceRequest** value);

        END_INTERFACE
    } __x_ABI_CWindows_CMedia_CPlayTo_CIPlayToSourceRequestedEventArgsVtbl;

    interface __x_ABI_CWindows_CMedia_CPlayTo_CIPlayToSourceRequestedEventArgs
    {
        CONST_VTBL struct __x_ABI_CWindows_CMedia_CPlayTo_CIPlayToSourceRequestedEventArgsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CMedia_CPlayTo_CIPlayToSourceRequestedEventArgs;
#endif /* !defined(____x_ABI_CWindows_CMedia_CPlayTo_CIPlayToSourceRequestedEventArgs_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CMedia_CPlayTo_CIPlayToSourceSelectedEventArgs_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CMedia_CPlayTo_CIPlayToSourceSelectedEventArgs_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CMedia_CPlayTo_CIPlayToSourceSelectedEventArgsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CMedia_CPlayTo_CIPlayToSourceSelectedEventArgs* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CMedia_CPlayTo_CIPlayToSourceSelectedEventArgs* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CMedia_CPlayTo_CIPlayToSourceSelectedEventArgs* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CMedia_CPlayTo_CIPlayToSourceSelectedEventArgs* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CMedia_CPlayTo_CIPlayToSourceSelectedEventArgs* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CMedia_CPlayTo_CIPlayToSourceSelectedEventArgs* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_FriendlyName)(__x_ABI_CWindows_CMedia_CPlayTo_CIPlayToSourceSelectedEventArgs* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* get_Icon)(__x_ABI_CWindows_CMedia_CPlayTo_CIPlayToSourceSelectedEventArgs* This,
        __x_ABI_CWindows_CStorage_CStreams_CIRandomAccessStreamWithContentType** value);
    HRESULT (STDMETHODCALLTYPE* get_SupportsImage)(__x_ABI_CWindows_CMedia_CPlayTo_CIPlayToSourceSelectedEventArgs* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* get_SupportsAudio)(__x_ABI_CWindows_CMedia_CPlayTo_CIPlayToSourceSelectedEventArgs* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* get_SupportsVideo)(__x_ABI_CWindows_CMedia_CPlayTo_CIPlayToSourceSelectedEventArgs* This,
        boolean* value);

        END_INTERFACE
    } __x_ABI_CWindows_CMedia_CPlayTo_CIPlayToSourceSelectedEventArgsVtbl;

    interface __x_ABI_CWindows_CMedia_CPlayTo_CIPlayToSourceSelectedEventArgs
    {
        CONST_VTBL struct __x_ABI_CWindows_CMedia_CPlayTo_CIPlayToSourceSelectedEventArgsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CMedia_CPlayTo_CIPlayToSourceSelectedEventArgs;
#endif /* !defined(____x_ABI_CWindows_CMedia_CPlayTo_CIPlayToSourceSelectedEventArgs_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CMedia_CPlayTo_CIPlayToSourceWithPreferredSourceUri_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CMedia_CPlayTo_CIPlayToSourceWithPreferredSourceUri_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CMedia_CPlayTo_CIPlayToSourceWithPreferredSourceUriVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CMedia_CPlayTo_CIPlayToSourceWithPreferredSourceUri* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CMedia_CPlayTo_CIPlayToSourceWithPreferredSourceUri* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CMedia_CPlayTo_CIPlayToSourceWithPreferredSourceUri* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CMedia_CPlayTo_CIPlayToSourceWithPreferredSourceUri* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CMedia_CPlayTo_CIPlayToSourceWithPreferredSourceUri* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CMedia_CPlayTo_CIPlayToSourceWithPreferredSourceUri* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_PreferredSourceUri)(__x_ABI_CWindows_CMedia_CPlayTo_CIPlayToSourceWithPreferredSourceUri* This,
        __x_ABI_CWindows_CFoundation_CIUriRuntimeClass** value);
    HRESULT (STDMETHODCALLTYPE* put_PreferredSourceUri)(__x_ABI_CWindows_CMedia_CPlayTo_CIPlayToSourceWithPreferredSourceUri* This,
        __x_ABI_CWindows_CFoundation_CIUriRuntimeClass* value);

        END_INTERFACE
    } __x_ABI_CWindows_CMedia_CPlayTo_CIPlayToSourceWithPreferredSourceUriVtbl;

    interface __x_ABI_CWindows_CMedia_CPlayTo_CIPlayToSourceWithPreferredSourceUri
    {
        CONST_VTBL struct __x_ABI_CWindows_CMedia_CPlayTo_CIPlayToSourceWithPreferredSourceUriVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CMedia_CPlayTo_CIPlayToSourceWithPreferredSourceUri;
#endif /* !defined(____x_ABI_CWindows_CMedia_CPlayTo_CIPlayToSourceWithPreferredSourceUri_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CMedia_CPlayTo_CIPlaybackRateChangeRequestedEventArgs_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CMedia_CPlayTo_CIPlaybackRateChangeRequestedEventArgs_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CMedia_CPlayTo_CIPlaybackRateChangeRequestedEventArgsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CMedia_CPlayTo_CIPlaybackRateChangeRequestedEventArgs* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CMedia_CPlayTo_CIPlaybackRateChangeRequestedEventArgs* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CMedia_CPlayTo_CIPlaybackRateChangeRequestedEventArgs* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CMedia_CPlayTo_CIPlaybackRateChangeRequestedEventArgs* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CMedia_CPlayTo_CIPlaybackRateChangeRequestedEventArgs* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CMedia_CPlayTo_CIPlaybackRateChangeRequestedEventArgs* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Rate)(__x_ABI_CWindows_CMedia_CPlayTo_CIPlaybackRateChangeRequestedEventArgs* This,
        DOUBLE* value);

        END_INTERFACE
    } __x_ABI_CWindows_CMedia_CPlayTo_CIPlaybackRateChangeRequestedEventArgsVtbl;

    interface __x_ABI_CWindows_CMedia_CPlayTo_CIPlaybackRateChangeRequestedEventArgs
    {
        CONST_VTBL struct __x_ABI_CWindows_CMedia_CPlayTo_CIPlaybackRateChangeRequestedEventArgsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CMedia_CPlayTo_CIPlaybackRateChangeRequestedEventArgs;
#endif /* !defined(____x_ABI_CWindows_CMedia_CPlayTo_CIPlaybackRateChangeRequestedEventArgs_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CMedia_CPlayTo_CISourceChangeRequestedEventArgs_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CMedia_CPlayTo_CISourceChangeRequestedEventArgs_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CMedia_CPlayTo_CISourceChangeRequestedEventArgsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CMedia_CPlayTo_CISourceChangeRequestedEventArgs* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CMedia_CPlayTo_CISourceChangeRequestedEventArgs* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CMedia_CPlayTo_CISourceChangeRequestedEventArgs* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CMedia_CPlayTo_CISourceChangeRequestedEventArgs* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CMedia_CPlayTo_CISourceChangeRequestedEventArgs* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CMedia_CPlayTo_CISourceChangeRequestedEventArgs* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Stream)(__x_ABI_CWindows_CMedia_CPlayTo_CISourceChangeRequestedEventArgs* This,
        __x_ABI_CWindows_CStorage_CStreams_CIRandomAccessStreamWithContentType** value);
    HRESULT (STDMETHODCALLTYPE* get_Title)(__x_ABI_CWindows_CMedia_CPlayTo_CISourceChangeRequestedEventArgs* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* get_Author)(__x_ABI_CWindows_CMedia_CPlayTo_CISourceChangeRequestedEventArgs* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* get_Album)(__x_ABI_CWindows_CMedia_CPlayTo_CISourceChangeRequestedEventArgs* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* get_Genre)(__x_ABI_CWindows_CMedia_CPlayTo_CISourceChangeRequestedEventArgs* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* get_Description)(__x_ABI_CWindows_CMedia_CPlayTo_CISourceChangeRequestedEventArgs* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* get_Date)(__x_ABI_CWindows_CMedia_CPlayTo_CISourceChangeRequestedEventArgs* This,
        __x_ABI_C__FIReference_1___x_ABI_CWindows__CFoundation__CDateTime** value);
    HRESULT (STDMETHODCALLTYPE* get_Thumbnail)(__x_ABI_CWindows_CMedia_CPlayTo_CISourceChangeRequestedEventArgs* This,
        __x_ABI_CWindows_CStorage_CStreams_CIRandomAccessStreamReference** value);
    HRESULT (STDMETHODCALLTYPE* get_Rating)(__x_ABI_CWindows_CMedia_CPlayTo_CISourceChangeRequestedEventArgs* This,
        __x_ABI_C__FIReference_1_UINT32** value);
    HRESULT (STDMETHODCALLTYPE* get_Properties)(__x_ABI_CWindows_CMedia_CPlayTo_CISourceChangeRequestedEventArgs* This,
        __x_ABI_C__FIMapView_2_HSTRING_IInspectable** value);

        END_INTERFACE
    } __x_ABI_CWindows_CMedia_CPlayTo_CISourceChangeRequestedEventArgsVtbl;

    interface __x_ABI_CWindows_CMedia_CPlayTo_CISourceChangeRequestedEventArgs
    {
        CONST_VTBL struct __x_ABI_CWindows_CMedia_CPlayTo_CISourceChangeRequestedEventArgsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CMedia_CPlayTo_CISourceChangeRequestedEventArgs;
#endif /* !defined(____x_ABI_CWindows_CMedia_CPlayTo_CISourceChangeRequestedEventArgs_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CMedia_CPlayTo_CIVolumeChangeRequestedEventArgs_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CMedia_CPlayTo_CIVolumeChangeRequestedEventArgs_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CMedia_CPlayTo_CIVolumeChangeRequestedEventArgsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CMedia_CPlayTo_CIVolumeChangeRequestedEventArgs* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CMedia_CPlayTo_CIVolumeChangeRequestedEventArgs* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CMedia_CPlayTo_CIVolumeChangeRequestedEventArgs* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CMedia_CPlayTo_CIVolumeChangeRequestedEventArgs* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CMedia_CPlayTo_CIVolumeChangeRequestedEventArgs* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CMedia_CPlayTo_CIVolumeChangeRequestedEventArgs* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Volume)(__x_ABI_CWindows_CMedia_CPlayTo_CIVolumeChangeRequestedEventArgs* This,
        DOUBLE* value);

        END_INTERFACE
    } __x_ABI_CWindows_CMedia_CPlayTo_CIVolumeChangeRequestedEventArgsVtbl;

    interface __x_ABI_CWindows_CMedia_CPlayTo_CIVolumeChangeRequestedEventArgs
    {
        CONST_VTBL struct __x_ABI_CWindows_CMedia_CPlayTo_CIVolumeChangeRequestedEventArgsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CMedia_CPlayTo_CIVolumeChangeRequestedEventArgs;
#endif /* !defined(____x_ABI_CWindows_CMedia_CPlayTo_CIVolumeChangeRequestedEventArgs_INTERFACE_DEFINED__) */
    
