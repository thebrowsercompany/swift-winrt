// WARNING: Please don't edit this file. It was generated by Swift/WinRT v0.0.1

#pragma once
// Header files for imported files
#include <inspectable.h>
#include <EventToken.h>
#include <windowscontracts.h>
#include "Windows.Foundation.h"
#include "Windows.Media.h"
#include "Windows.Storage.Streams.h"
// Importing Collections header
#include "Windows.Foundation.Collections.h"

/* Forward Declarations */
#ifndef ____x_ABI_CWindows_CMedia_CControl_CICurrentSessionChangedEventArgs_FWD_DEFINED__
#define ____x_ABI_CWindows_CMedia_CControl_CICurrentSessionChangedEventArgs_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CMedia_CControl_CICurrentSessionChangedEventArgs __x_ABI_CWindows_CMedia_CControl_CICurrentSessionChangedEventArgs;

#endif // ____x_ABI_CWindows_CMedia_CControl_CICurrentSessionChangedEventArgs_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CMedia_CControl_CIGlobalSystemMediaTransportControlsSession_FWD_DEFINED__
#define ____x_ABI_CWindows_CMedia_CControl_CIGlobalSystemMediaTransportControlsSession_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CMedia_CControl_CIGlobalSystemMediaTransportControlsSession __x_ABI_CWindows_CMedia_CControl_CIGlobalSystemMediaTransportControlsSession;

#endif // ____x_ABI_CWindows_CMedia_CControl_CIGlobalSystemMediaTransportControlsSession_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CMedia_CControl_CIGlobalSystemMediaTransportControlsSessionManager_FWD_DEFINED__
#define ____x_ABI_CWindows_CMedia_CControl_CIGlobalSystemMediaTransportControlsSessionManager_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CMedia_CControl_CIGlobalSystemMediaTransportControlsSessionManager __x_ABI_CWindows_CMedia_CControl_CIGlobalSystemMediaTransportControlsSessionManager;

#endif // ____x_ABI_CWindows_CMedia_CControl_CIGlobalSystemMediaTransportControlsSessionManager_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CMedia_CControl_CIGlobalSystemMediaTransportControlsSessionManagerStatics_FWD_DEFINED__
#define ____x_ABI_CWindows_CMedia_CControl_CIGlobalSystemMediaTransportControlsSessionManagerStatics_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CMedia_CControl_CIGlobalSystemMediaTransportControlsSessionManagerStatics __x_ABI_CWindows_CMedia_CControl_CIGlobalSystemMediaTransportControlsSessionManagerStatics;

#endif // ____x_ABI_CWindows_CMedia_CControl_CIGlobalSystemMediaTransportControlsSessionManagerStatics_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CMedia_CControl_CIGlobalSystemMediaTransportControlsSessionMediaProperties_FWD_DEFINED__
#define ____x_ABI_CWindows_CMedia_CControl_CIGlobalSystemMediaTransportControlsSessionMediaProperties_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CMedia_CControl_CIGlobalSystemMediaTransportControlsSessionMediaProperties __x_ABI_CWindows_CMedia_CControl_CIGlobalSystemMediaTransportControlsSessionMediaProperties;

#endif // ____x_ABI_CWindows_CMedia_CControl_CIGlobalSystemMediaTransportControlsSessionMediaProperties_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CMedia_CControl_CIGlobalSystemMediaTransportControlsSessionPlaybackControls_FWD_DEFINED__
#define ____x_ABI_CWindows_CMedia_CControl_CIGlobalSystemMediaTransportControlsSessionPlaybackControls_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CMedia_CControl_CIGlobalSystemMediaTransportControlsSessionPlaybackControls __x_ABI_CWindows_CMedia_CControl_CIGlobalSystemMediaTransportControlsSessionPlaybackControls;

#endif // ____x_ABI_CWindows_CMedia_CControl_CIGlobalSystemMediaTransportControlsSessionPlaybackControls_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CMedia_CControl_CIGlobalSystemMediaTransportControlsSessionPlaybackInfo_FWD_DEFINED__
#define ____x_ABI_CWindows_CMedia_CControl_CIGlobalSystemMediaTransportControlsSessionPlaybackInfo_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CMedia_CControl_CIGlobalSystemMediaTransportControlsSessionPlaybackInfo __x_ABI_CWindows_CMedia_CControl_CIGlobalSystemMediaTransportControlsSessionPlaybackInfo;

#endif // ____x_ABI_CWindows_CMedia_CControl_CIGlobalSystemMediaTransportControlsSessionPlaybackInfo_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CMedia_CControl_CIGlobalSystemMediaTransportControlsSessionTimelineProperties_FWD_DEFINED__
#define ____x_ABI_CWindows_CMedia_CControl_CIGlobalSystemMediaTransportControlsSessionTimelineProperties_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CMedia_CControl_CIGlobalSystemMediaTransportControlsSessionTimelineProperties __x_ABI_CWindows_CMedia_CControl_CIGlobalSystemMediaTransportControlsSessionTimelineProperties;

#endif // ____x_ABI_CWindows_CMedia_CControl_CIGlobalSystemMediaTransportControlsSessionTimelineProperties_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CMedia_CControl_CIMediaPropertiesChangedEventArgs_FWD_DEFINED__
#define ____x_ABI_CWindows_CMedia_CControl_CIMediaPropertiesChangedEventArgs_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CMedia_CControl_CIMediaPropertiesChangedEventArgs __x_ABI_CWindows_CMedia_CControl_CIMediaPropertiesChangedEventArgs;

#endif // ____x_ABI_CWindows_CMedia_CControl_CIMediaPropertiesChangedEventArgs_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CMedia_CControl_CIPlaybackInfoChangedEventArgs_FWD_DEFINED__
#define ____x_ABI_CWindows_CMedia_CControl_CIPlaybackInfoChangedEventArgs_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CMedia_CControl_CIPlaybackInfoChangedEventArgs __x_ABI_CWindows_CMedia_CControl_CIPlaybackInfoChangedEventArgs;

#endif // ____x_ABI_CWindows_CMedia_CControl_CIPlaybackInfoChangedEventArgs_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CMedia_CControl_CISessionsChangedEventArgs_FWD_DEFINED__
#define ____x_ABI_CWindows_CMedia_CControl_CISessionsChangedEventArgs_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CMedia_CControl_CISessionsChangedEventArgs __x_ABI_CWindows_CMedia_CControl_CISessionsChangedEventArgs;

#endif // ____x_ABI_CWindows_CMedia_CControl_CISessionsChangedEventArgs_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CMedia_CControl_CITimelinePropertiesChangedEventArgs_FWD_DEFINED__
#define ____x_ABI_CWindows_CMedia_CControl_CITimelinePropertiesChangedEventArgs_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CMedia_CControl_CITimelinePropertiesChangedEventArgs __x_ABI_CWindows_CMedia_CControl_CITimelinePropertiesChangedEventArgs;

#endif // ____x_ABI_CWindows_CMedia_CControl_CITimelinePropertiesChangedEventArgs_FWD_DEFINED__

// Parameterized interface forward declarations (C)

// Collection interface definitions

typedef interface __x_ABI_C__FIAsyncOperationCompletedHandler_1_boolean __x_ABI_C__FIAsyncOperationCompletedHandler_1_boolean;

#if !defined(____x_ABI_C__FIAsyncOperation_1_boolean_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIAsyncOperation_1_boolean_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIAsyncOperation_1_boolean __x_ABI_C__FIAsyncOperation_1_boolean;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIAsyncOperation_1_boolean;

    typedef struct __x_ABI_C__FIAsyncOperation_1_booleanVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIAsyncOperation_1_boolean* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIAsyncOperation_1_boolean* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIAsyncOperation_1_boolean* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIAsyncOperation_1_boolean* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIAsyncOperation_1_boolean* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIAsyncOperation_1_boolean* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* put_Completed)(__x_ABI_C__FIAsyncOperation_1_boolean* This,
        __x_ABI_C__FIAsyncOperationCompletedHandler_1_boolean* handler);
    HRESULT (STDMETHODCALLTYPE* get_Completed)(__x_ABI_C__FIAsyncOperation_1_boolean* This,
        __x_ABI_C__FIAsyncOperationCompletedHandler_1_boolean** result);
    HRESULT (STDMETHODCALLTYPE* GetResults)(__x_ABI_C__FIAsyncOperation_1_boolean* This,
        boolean* result);

        END_INTERFACE
    } __x_ABI_C__FIAsyncOperation_1_booleanVtbl;

    interface __x_ABI_C__FIAsyncOperation_1_boolean
    {
        CONST_VTBL struct __x_ABI_C__FIAsyncOperation_1_booleanVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIAsyncOperation_1_boolean_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIAsyncOperationCompletedHandler_1_boolean_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIAsyncOperationCompletedHandler_1_boolean_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIAsyncOperationCompletedHandler_1_boolean __x_ABI_C__FIAsyncOperationCompletedHandler_1_boolean;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIAsyncOperationCompletedHandler_1_boolean;

    typedef struct __x_ABI_C__FIAsyncOperationCompletedHandler_1_booleanVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIAsyncOperationCompletedHandler_1_boolean* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIAsyncOperationCompletedHandler_1_boolean* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIAsyncOperationCompletedHandler_1_boolean* This);
        HRESULT (STDMETHODCALLTYPE* Invoke)(__x_ABI_C__FIAsyncOperationCompletedHandler_1_boolean* This,
        __x_ABI_C__FIAsyncOperation_1_boolean* asyncInfo,
        enum __x_ABI_CWindows_CFoundation_CAsyncStatus asyncStatus);

        END_INTERFACE
    } __x_ABI_C__FIAsyncOperationCompletedHandler_1_booleanVtbl;

    interface __x_ABI_C__FIAsyncOperationCompletedHandler_1_boolean
    {
        CONST_VTBL struct __x_ABI_C__FIAsyncOperationCompletedHandler_1_booleanVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIAsyncOperationCompletedHandler_1_boolean_INTERFACE_DEFINED__
    
typedef interface __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CMedia__CControl__CGlobalSystemMediaTransportControlsSessionManager __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CMedia__CControl__CGlobalSystemMediaTransportControlsSessionManager;

#if !defined(____x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CMedia__CControl__CGlobalSystemMediaTransportControlsSessionManager_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CMedia__CControl__CGlobalSystemMediaTransportControlsSessionManager_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CMedia__CControl__CGlobalSystemMediaTransportControlsSessionManager __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CMedia__CControl__CGlobalSystemMediaTransportControlsSessionManager;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CMedia__CControl__CGlobalSystemMediaTransportControlsSessionManager;

    typedef struct __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CMedia__CControl__CGlobalSystemMediaTransportControlsSessionManagerVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CMedia__CControl__CGlobalSystemMediaTransportControlsSessionManager* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CMedia__CControl__CGlobalSystemMediaTransportControlsSessionManager* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CMedia__CControl__CGlobalSystemMediaTransportControlsSessionManager* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CMedia__CControl__CGlobalSystemMediaTransportControlsSessionManager* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CMedia__CControl__CGlobalSystemMediaTransportControlsSessionManager* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CMedia__CControl__CGlobalSystemMediaTransportControlsSessionManager* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* put_Completed)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CMedia__CControl__CGlobalSystemMediaTransportControlsSessionManager* This,
        __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CMedia__CControl__CGlobalSystemMediaTransportControlsSessionManager* handler);
    HRESULT (STDMETHODCALLTYPE* get_Completed)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CMedia__CControl__CGlobalSystemMediaTransportControlsSessionManager* This,
        __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CMedia__CControl__CGlobalSystemMediaTransportControlsSessionManager** result);
    HRESULT (STDMETHODCALLTYPE* GetResults)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CMedia__CControl__CGlobalSystemMediaTransportControlsSessionManager* This,
        __x_ABI_CWindows_CMedia_CControl_CIGlobalSystemMediaTransportControlsSessionManager** result);

        END_INTERFACE
    } __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CMedia__CControl__CGlobalSystemMediaTransportControlsSessionManagerVtbl;

    interface __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CMedia__CControl__CGlobalSystemMediaTransportControlsSessionManager
    {
        CONST_VTBL struct __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CMedia__CControl__CGlobalSystemMediaTransportControlsSessionManagerVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CMedia__CControl__CGlobalSystemMediaTransportControlsSessionManager_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CMedia__CControl__CGlobalSystemMediaTransportControlsSessionManager_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CMedia__CControl__CGlobalSystemMediaTransportControlsSessionManager_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CMedia__CControl__CGlobalSystemMediaTransportControlsSessionManager __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CMedia__CControl__CGlobalSystemMediaTransportControlsSessionManager;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CMedia__CControl__CGlobalSystemMediaTransportControlsSessionManager;

    typedef struct __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CMedia__CControl__CGlobalSystemMediaTransportControlsSessionManagerVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CMedia__CControl__CGlobalSystemMediaTransportControlsSessionManager* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CMedia__CControl__CGlobalSystemMediaTransportControlsSessionManager* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CMedia__CControl__CGlobalSystemMediaTransportControlsSessionManager* This);
        HRESULT (STDMETHODCALLTYPE* Invoke)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CMedia__CControl__CGlobalSystemMediaTransportControlsSessionManager* This,
        __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CMedia__CControl__CGlobalSystemMediaTransportControlsSessionManager* asyncInfo,
        enum __x_ABI_CWindows_CFoundation_CAsyncStatus asyncStatus);

        END_INTERFACE
    } __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CMedia__CControl__CGlobalSystemMediaTransportControlsSessionManagerVtbl;

    interface __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CMedia__CControl__CGlobalSystemMediaTransportControlsSessionManager
    {
        CONST_VTBL struct __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CMedia__CControl__CGlobalSystemMediaTransportControlsSessionManagerVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CMedia__CControl__CGlobalSystemMediaTransportControlsSessionManager_INTERFACE_DEFINED__
    
typedef interface __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CMedia__CControl__CGlobalSystemMediaTransportControlsSessionMediaProperties __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CMedia__CControl__CGlobalSystemMediaTransportControlsSessionMediaProperties;

#if !defined(____x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CMedia__CControl__CGlobalSystemMediaTransportControlsSessionMediaProperties_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CMedia__CControl__CGlobalSystemMediaTransportControlsSessionMediaProperties_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CMedia__CControl__CGlobalSystemMediaTransportControlsSessionMediaProperties __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CMedia__CControl__CGlobalSystemMediaTransportControlsSessionMediaProperties;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CMedia__CControl__CGlobalSystemMediaTransportControlsSessionMediaProperties;

    typedef struct __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CMedia__CControl__CGlobalSystemMediaTransportControlsSessionMediaPropertiesVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CMedia__CControl__CGlobalSystemMediaTransportControlsSessionMediaProperties* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CMedia__CControl__CGlobalSystemMediaTransportControlsSessionMediaProperties* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CMedia__CControl__CGlobalSystemMediaTransportControlsSessionMediaProperties* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CMedia__CControl__CGlobalSystemMediaTransportControlsSessionMediaProperties* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CMedia__CControl__CGlobalSystemMediaTransportControlsSessionMediaProperties* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CMedia__CControl__CGlobalSystemMediaTransportControlsSessionMediaProperties* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* put_Completed)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CMedia__CControl__CGlobalSystemMediaTransportControlsSessionMediaProperties* This,
        __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CMedia__CControl__CGlobalSystemMediaTransportControlsSessionMediaProperties* handler);
    HRESULT (STDMETHODCALLTYPE* get_Completed)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CMedia__CControl__CGlobalSystemMediaTransportControlsSessionMediaProperties* This,
        __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CMedia__CControl__CGlobalSystemMediaTransportControlsSessionMediaProperties** result);
    HRESULT (STDMETHODCALLTYPE* GetResults)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CMedia__CControl__CGlobalSystemMediaTransportControlsSessionMediaProperties* This,
        __x_ABI_CWindows_CMedia_CControl_CIGlobalSystemMediaTransportControlsSessionMediaProperties** result);

        END_INTERFACE
    } __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CMedia__CControl__CGlobalSystemMediaTransportControlsSessionMediaPropertiesVtbl;

    interface __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CMedia__CControl__CGlobalSystemMediaTransportControlsSessionMediaProperties
    {
        CONST_VTBL struct __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CMedia__CControl__CGlobalSystemMediaTransportControlsSessionMediaPropertiesVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CMedia__CControl__CGlobalSystemMediaTransportControlsSessionMediaProperties_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CMedia__CControl__CGlobalSystemMediaTransportControlsSessionMediaProperties_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CMedia__CControl__CGlobalSystemMediaTransportControlsSessionMediaProperties_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CMedia__CControl__CGlobalSystemMediaTransportControlsSessionMediaProperties __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CMedia__CControl__CGlobalSystemMediaTransportControlsSessionMediaProperties;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CMedia__CControl__CGlobalSystemMediaTransportControlsSessionMediaProperties;

    typedef struct __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CMedia__CControl__CGlobalSystemMediaTransportControlsSessionMediaPropertiesVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CMedia__CControl__CGlobalSystemMediaTransportControlsSessionMediaProperties* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CMedia__CControl__CGlobalSystemMediaTransportControlsSessionMediaProperties* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CMedia__CControl__CGlobalSystemMediaTransportControlsSessionMediaProperties* This);
        HRESULT (STDMETHODCALLTYPE* Invoke)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CMedia__CControl__CGlobalSystemMediaTransportControlsSessionMediaProperties* This,
        __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CMedia__CControl__CGlobalSystemMediaTransportControlsSessionMediaProperties* asyncInfo,
        enum __x_ABI_CWindows_CFoundation_CAsyncStatus asyncStatus);

        END_INTERFACE
    } __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CMedia__CControl__CGlobalSystemMediaTransportControlsSessionMediaPropertiesVtbl;

    interface __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CMedia__CControl__CGlobalSystemMediaTransportControlsSessionMediaProperties
    {
        CONST_VTBL struct __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CMedia__CControl__CGlobalSystemMediaTransportControlsSessionMediaPropertiesVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CMedia__CControl__CGlobalSystemMediaTransportControlsSessionMediaProperties_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIIterator_1_HSTRING_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIIterator_1_HSTRING_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIIterator_1_HSTRING __x_ABI_C__FIIterator_1_HSTRING;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIIterator_1_HSTRING;

    typedef struct __x_ABI_C__FIIterator_1_HSTRINGVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIIterator_1_HSTRING* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIIterator_1_HSTRING* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIIterator_1_HSTRING* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIIterator_1_HSTRING* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIIterator_1_HSTRING* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIIterator_1_HSTRING* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Current)(__x_ABI_C__FIIterator_1_HSTRING* This,
        HSTRING* result);
    HRESULT (STDMETHODCALLTYPE* get_HasCurrent)(__x_ABI_C__FIIterator_1_HSTRING* This,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* MoveNext)(__x_ABI_C__FIIterator_1_HSTRING* This,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__x_ABI_C__FIIterator_1_HSTRING* This,
        UINT32 itemsLength,
        HSTRING* items,
        UINT32* result);

        END_INTERFACE
    } __x_ABI_C__FIIterator_1_HSTRINGVtbl;

    interface __x_ABI_C__FIIterator_1_HSTRING
    {
        CONST_VTBL struct __x_ABI_C__FIIterator_1_HSTRINGVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIIterator_1_HSTRING_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIIterable_1_HSTRING_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIIterable_1_HSTRING_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIIterable_1_HSTRING __x_ABI_C__FIIterable_1_HSTRING;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIIterable_1_HSTRING;

    typedef struct __x_ABI_C__FIIterable_1_HSTRINGVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIIterable_1_HSTRING* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIIterable_1_HSTRING* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIIterable_1_HSTRING* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIIterable_1_HSTRING* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIIterable_1_HSTRING* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIIterable_1_HSTRING* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* First)(__x_ABI_C__FIIterable_1_HSTRING* This,
        __x_ABI_C__FIIterator_1_HSTRING** result);

        END_INTERFACE
    } __x_ABI_C__FIIterable_1_HSTRINGVtbl;

    interface __x_ABI_C__FIIterable_1_HSTRING
    {
        CONST_VTBL struct __x_ABI_C__FIIterable_1_HSTRINGVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIIterable_1_HSTRING_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIIterator_1___x_ABI_CWindows__CMedia__CControl__CGlobalSystemMediaTransportControlsSession_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIIterator_1___x_ABI_CWindows__CMedia__CControl__CGlobalSystemMediaTransportControlsSession_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIIterator_1___x_ABI_CWindows__CMedia__CControl__CGlobalSystemMediaTransportControlsSession __x_ABI_C__FIIterator_1___x_ABI_CWindows__CMedia__CControl__CGlobalSystemMediaTransportControlsSession;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIIterator_1___x_ABI_CWindows__CMedia__CControl__CGlobalSystemMediaTransportControlsSession;

    typedef struct __x_ABI_C__FIIterator_1___x_ABI_CWindows__CMedia__CControl__CGlobalSystemMediaTransportControlsSessionVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CMedia__CControl__CGlobalSystemMediaTransportControlsSession* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CMedia__CControl__CGlobalSystemMediaTransportControlsSession* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CMedia__CControl__CGlobalSystemMediaTransportControlsSession* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CMedia__CControl__CGlobalSystemMediaTransportControlsSession* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CMedia__CControl__CGlobalSystemMediaTransportControlsSession* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CMedia__CControl__CGlobalSystemMediaTransportControlsSession* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Current)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CMedia__CControl__CGlobalSystemMediaTransportControlsSession* This,
        __x_ABI_CWindows_CMedia_CControl_CIGlobalSystemMediaTransportControlsSession** result);
    HRESULT (STDMETHODCALLTYPE* get_HasCurrent)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CMedia__CControl__CGlobalSystemMediaTransportControlsSession* This,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* MoveNext)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CMedia__CControl__CGlobalSystemMediaTransportControlsSession* This,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CMedia__CControl__CGlobalSystemMediaTransportControlsSession* This,
        UINT32 itemsLength,
        __x_ABI_CWindows_CMedia_CControl_CIGlobalSystemMediaTransportControlsSession** items,
        UINT32* result);

        END_INTERFACE
    } __x_ABI_C__FIIterator_1___x_ABI_CWindows__CMedia__CControl__CGlobalSystemMediaTransportControlsSessionVtbl;

    interface __x_ABI_C__FIIterator_1___x_ABI_CWindows__CMedia__CControl__CGlobalSystemMediaTransportControlsSession
    {
        CONST_VTBL struct __x_ABI_C__FIIterator_1___x_ABI_CWindows__CMedia__CControl__CGlobalSystemMediaTransportControlsSessionVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIIterator_1___x_ABI_CWindows__CMedia__CControl__CGlobalSystemMediaTransportControlsSession_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIIterable_1___x_ABI_CWindows__CMedia__CControl__CGlobalSystemMediaTransportControlsSession_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIIterable_1___x_ABI_CWindows__CMedia__CControl__CGlobalSystemMediaTransportControlsSession_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIIterable_1___x_ABI_CWindows__CMedia__CControl__CGlobalSystemMediaTransportControlsSession __x_ABI_C__FIIterable_1___x_ABI_CWindows__CMedia__CControl__CGlobalSystemMediaTransportControlsSession;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIIterable_1___x_ABI_CWindows__CMedia__CControl__CGlobalSystemMediaTransportControlsSession;

    typedef struct __x_ABI_C__FIIterable_1___x_ABI_CWindows__CMedia__CControl__CGlobalSystemMediaTransportControlsSessionVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CMedia__CControl__CGlobalSystemMediaTransportControlsSession* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CMedia__CControl__CGlobalSystemMediaTransportControlsSession* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CMedia__CControl__CGlobalSystemMediaTransportControlsSession* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CMedia__CControl__CGlobalSystemMediaTransportControlsSession* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CMedia__CControl__CGlobalSystemMediaTransportControlsSession* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CMedia__CControl__CGlobalSystemMediaTransportControlsSession* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* First)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CMedia__CControl__CGlobalSystemMediaTransportControlsSession* This,
        __x_ABI_C__FIIterator_1___x_ABI_CWindows__CMedia__CControl__CGlobalSystemMediaTransportControlsSession** result);

        END_INTERFACE
    } __x_ABI_C__FIIterable_1___x_ABI_CWindows__CMedia__CControl__CGlobalSystemMediaTransportControlsSessionVtbl;

    interface __x_ABI_C__FIIterable_1___x_ABI_CWindows__CMedia__CControl__CGlobalSystemMediaTransportControlsSession
    {
        CONST_VTBL struct __x_ABI_C__FIIterable_1___x_ABI_CWindows__CMedia__CControl__CGlobalSystemMediaTransportControlsSessionVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIIterable_1___x_ABI_CWindows__CMedia__CControl__CGlobalSystemMediaTransportControlsSession_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIVectorView_1_HSTRING_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIVectorView_1_HSTRING_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIVectorView_1_HSTRING __x_ABI_C__FIVectorView_1_HSTRING;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIVectorView_1_HSTRING;

    typedef struct __x_ABI_C__FIVectorView_1_HSTRINGVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIVectorView_1_HSTRING* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIVectorView_1_HSTRING* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIVectorView_1_HSTRING* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIVectorView_1_HSTRING* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIVectorView_1_HSTRING* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIVectorView_1_HSTRING* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* GetAt)(__x_ABI_C__FIVectorView_1_HSTRING* This,
        UINT32 index,
        HSTRING* result);
    HRESULT (STDMETHODCALLTYPE* get_Size)(__x_ABI_C__FIVectorView_1_HSTRING* This,
        UINT32* result);
    HRESULT (STDMETHODCALLTYPE* IndexOf)(__x_ABI_C__FIVectorView_1_HSTRING* This,
        HSTRING value,
        UINT32* index,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__x_ABI_C__FIVectorView_1_HSTRING* This,
        UINT32 startIndex,
        UINT32 itemsLength,
        HSTRING* items,
        UINT32* result);

        END_INTERFACE
    } __x_ABI_C__FIVectorView_1_HSTRINGVtbl;

    interface __x_ABI_C__FIVectorView_1_HSTRING
    {
        CONST_VTBL struct __x_ABI_C__FIVectorView_1_HSTRINGVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIVectorView_1_HSTRING_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIVectorView_1___x_ABI_CWindows__CMedia__CControl__CGlobalSystemMediaTransportControlsSession_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIVectorView_1___x_ABI_CWindows__CMedia__CControl__CGlobalSystemMediaTransportControlsSession_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CMedia__CControl__CGlobalSystemMediaTransportControlsSession __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CMedia__CControl__CGlobalSystemMediaTransportControlsSession;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CMedia__CControl__CGlobalSystemMediaTransportControlsSession;

    typedef struct __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CMedia__CControl__CGlobalSystemMediaTransportControlsSessionVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CMedia__CControl__CGlobalSystemMediaTransportControlsSession* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CMedia__CControl__CGlobalSystemMediaTransportControlsSession* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CMedia__CControl__CGlobalSystemMediaTransportControlsSession* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CMedia__CControl__CGlobalSystemMediaTransportControlsSession* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CMedia__CControl__CGlobalSystemMediaTransportControlsSession* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CMedia__CControl__CGlobalSystemMediaTransportControlsSession* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* GetAt)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CMedia__CControl__CGlobalSystemMediaTransportControlsSession* This,
        UINT32 index,
        __x_ABI_CWindows_CMedia_CControl_CIGlobalSystemMediaTransportControlsSession** result);
    HRESULT (STDMETHODCALLTYPE* get_Size)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CMedia__CControl__CGlobalSystemMediaTransportControlsSession* This,
        UINT32* result);
    HRESULT (STDMETHODCALLTYPE* IndexOf)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CMedia__CControl__CGlobalSystemMediaTransportControlsSession* This,
        __x_ABI_CWindows_CMedia_CControl_CIGlobalSystemMediaTransportControlsSession* value,
        UINT32* index,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CMedia__CControl__CGlobalSystemMediaTransportControlsSession* This,
        UINT32 startIndex,
        UINT32 itemsLength,
        __x_ABI_CWindows_CMedia_CControl_CIGlobalSystemMediaTransportControlsSession** items,
        UINT32* result);

        END_INTERFACE
    } __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CMedia__CControl__CGlobalSystemMediaTransportControlsSessionVtbl;

    interface __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CMedia__CControl__CGlobalSystemMediaTransportControlsSession
    {
        CONST_VTBL struct __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CMedia__CControl__CGlobalSystemMediaTransportControlsSessionVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIVectorView_1___x_ABI_CWindows__CMedia__CControl__CGlobalSystemMediaTransportControlsSession_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIReference_1_boolean_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIReference_1_boolean_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIReference_1_boolean __x_ABI_C__FIReference_1_boolean;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIReference_1_boolean;

    typedef struct __x_ABI_C__FIReference_1_booleanVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIReference_1_boolean* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIReference_1_boolean* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIReference_1_boolean* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIReference_1_boolean* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIReference_1_boolean* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIReference_1_boolean* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Value)(__x_ABI_C__FIReference_1_boolean* This,
        boolean* result);

        END_INTERFACE
    } __x_ABI_C__FIReference_1_booleanVtbl;

    interface __x_ABI_C__FIReference_1_boolean
    {
        CONST_VTBL struct __x_ABI_C__FIReference_1_booleanVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIReference_1_boolean_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIReference_1_double_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIReference_1_double_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIReference_1_double __x_ABI_C__FIReference_1_double;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIReference_1_double;

    typedef struct __x_ABI_C__FIReference_1_doubleVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIReference_1_double* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIReference_1_double* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIReference_1_double* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIReference_1_double* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIReference_1_double* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIReference_1_double* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Value)(__x_ABI_C__FIReference_1_double* This,
        DOUBLE* result);

        END_INTERFACE
    } __x_ABI_C__FIReference_1_doubleVtbl;

    interface __x_ABI_C__FIReference_1_double
    {
        CONST_VTBL struct __x_ABI_C__FIReference_1_doubleVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIReference_1_double_INTERFACE_DEFINED__
    
typedef enum __x_ABI_CWindows_CMedia_CMediaPlaybackAutoRepeatMode __x_ABI_CWindows_CMedia_CMediaPlaybackAutoRepeatMode;

#if !defined(____x_ABI_C__FIReference_1___x_ABI_CWindows__CMedia__CMediaPlaybackAutoRepeatMode_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIReference_1___x_ABI_CWindows__CMedia__CMediaPlaybackAutoRepeatMode_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIReference_1___x_ABI_CWindows__CMedia__CMediaPlaybackAutoRepeatMode __x_ABI_C__FIReference_1___x_ABI_CWindows__CMedia__CMediaPlaybackAutoRepeatMode;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIReference_1___x_ABI_CWindows__CMedia__CMediaPlaybackAutoRepeatMode;

    typedef struct __x_ABI_C__FIReference_1___x_ABI_CWindows__CMedia__CMediaPlaybackAutoRepeatModeVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIReference_1___x_ABI_CWindows__CMedia__CMediaPlaybackAutoRepeatMode* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIReference_1___x_ABI_CWindows__CMedia__CMediaPlaybackAutoRepeatMode* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIReference_1___x_ABI_CWindows__CMedia__CMediaPlaybackAutoRepeatMode* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIReference_1___x_ABI_CWindows__CMedia__CMediaPlaybackAutoRepeatMode* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIReference_1___x_ABI_CWindows__CMedia__CMediaPlaybackAutoRepeatMode* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIReference_1___x_ABI_CWindows__CMedia__CMediaPlaybackAutoRepeatMode* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Value)(__x_ABI_C__FIReference_1___x_ABI_CWindows__CMedia__CMediaPlaybackAutoRepeatMode* This,
        enum __x_ABI_CWindows_CMedia_CMediaPlaybackAutoRepeatMode* result);

        END_INTERFACE
    } __x_ABI_C__FIReference_1___x_ABI_CWindows__CMedia__CMediaPlaybackAutoRepeatModeVtbl;

    interface __x_ABI_C__FIReference_1___x_ABI_CWindows__CMedia__CMediaPlaybackAutoRepeatMode
    {
        CONST_VTBL struct __x_ABI_C__FIReference_1___x_ABI_CWindows__CMedia__CMediaPlaybackAutoRepeatModeVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIReference_1___x_ABI_CWindows__CMedia__CMediaPlaybackAutoRepeatMode_INTERFACE_DEFINED__
    
typedef enum __x_ABI_CWindows_CMedia_CMediaPlaybackType __x_ABI_CWindows_CMedia_CMediaPlaybackType;

#if !defined(____x_ABI_C__FIReference_1___x_ABI_CWindows__CMedia__CMediaPlaybackType_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIReference_1___x_ABI_CWindows__CMedia__CMediaPlaybackType_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIReference_1___x_ABI_CWindows__CMedia__CMediaPlaybackType __x_ABI_C__FIReference_1___x_ABI_CWindows__CMedia__CMediaPlaybackType;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIReference_1___x_ABI_CWindows__CMedia__CMediaPlaybackType;

    typedef struct __x_ABI_C__FIReference_1___x_ABI_CWindows__CMedia__CMediaPlaybackTypeVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIReference_1___x_ABI_CWindows__CMedia__CMediaPlaybackType* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIReference_1___x_ABI_CWindows__CMedia__CMediaPlaybackType* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIReference_1___x_ABI_CWindows__CMedia__CMediaPlaybackType* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIReference_1___x_ABI_CWindows__CMedia__CMediaPlaybackType* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIReference_1___x_ABI_CWindows__CMedia__CMediaPlaybackType* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIReference_1___x_ABI_CWindows__CMedia__CMediaPlaybackType* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Value)(__x_ABI_C__FIReference_1___x_ABI_CWindows__CMedia__CMediaPlaybackType* This,
        enum __x_ABI_CWindows_CMedia_CMediaPlaybackType* result);

        END_INTERFACE
    } __x_ABI_C__FIReference_1___x_ABI_CWindows__CMedia__CMediaPlaybackTypeVtbl;

    interface __x_ABI_C__FIReference_1___x_ABI_CWindows__CMedia__CMediaPlaybackType
    {
        CONST_VTBL struct __x_ABI_C__FIReference_1___x_ABI_CWindows__CMedia__CMediaPlaybackTypeVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIReference_1___x_ABI_CWindows__CMedia__CMediaPlaybackType_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CControl__CGlobalSystemMediaTransportControlsSession___x_ABI_CWindows__CMedia__CControl__CMediaPropertiesChangedEventArgs_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CControl__CGlobalSystemMediaTransportControlsSession___x_ABI_CWindows__CMedia__CControl__CMediaPropertiesChangedEventArgs_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CControl__CGlobalSystemMediaTransportControlsSession___x_ABI_CWindows__CMedia__CControl__CMediaPropertiesChangedEventArgs __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CControl__CGlobalSystemMediaTransportControlsSession___x_ABI_CWindows__CMedia__CControl__CMediaPropertiesChangedEventArgs;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CControl__CGlobalSystemMediaTransportControlsSession___x_ABI_CWindows__CMedia__CControl__CMediaPropertiesChangedEventArgs;

    typedef struct __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CControl__CGlobalSystemMediaTransportControlsSession___x_ABI_CWindows__CMedia__CControl__CMediaPropertiesChangedEventArgsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CControl__CGlobalSystemMediaTransportControlsSession___x_ABI_CWindows__CMedia__CControl__CMediaPropertiesChangedEventArgs* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CControl__CGlobalSystemMediaTransportControlsSession___x_ABI_CWindows__CMedia__CControl__CMediaPropertiesChangedEventArgs* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CControl__CGlobalSystemMediaTransportControlsSession___x_ABI_CWindows__CMedia__CControl__CMediaPropertiesChangedEventArgs* This);
        HRESULT (STDMETHODCALLTYPE* Invoke)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CControl__CGlobalSystemMediaTransportControlsSession___x_ABI_CWindows__CMedia__CControl__CMediaPropertiesChangedEventArgs* This,
        __x_ABI_CWindows_CMedia_CControl_CIGlobalSystemMediaTransportControlsSession* sender,
        __x_ABI_CWindows_CMedia_CControl_CIMediaPropertiesChangedEventArgs* args);

        END_INTERFACE
    } __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CControl__CGlobalSystemMediaTransportControlsSession___x_ABI_CWindows__CMedia__CControl__CMediaPropertiesChangedEventArgsVtbl;

    interface __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CControl__CGlobalSystemMediaTransportControlsSession___x_ABI_CWindows__CMedia__CControl__CMediaPropertiesChangedEventArgs
    {
        CONST_VTBL struct __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CControl__CGlobalSystemMediaTransportControlsSession___x_ABI_CWindows__CMedia__CControl__CMediaPropertiesChangedEventArgsVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CControl__CGlobalSystemMediaTransportControlsSession___x_ABI_CWindows__CMedia__CControl__CMediaPropertiesChangedEventArgs_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CControl__CGlobalSystemMediaTransportControlsSession___x_ABI_CWindows__CMedia__CControl__CPlaybackInfoChangedEventArgs_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CControl__CGlobalSystemMediaTransportControlsSession___x_ABI_CWindows__CMedia__CControl__CPlaybackInfoChangedEventArgs_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CControl__CGlobalSystemMediaTransportControlsSession___x_ABI_CWindows__CMedia__CControl__CPlaybackInfoChangedEventArgs __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CControl__CGlobalSystemMediaTransportControlsSession___x_ABI_CWindows__CMedia__CControl__CPlaybackInfoChangedEventArgs;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CControl__CGlobalSystemMediaTransportControlsSession___x_ABI_CWindows__CMedia__CControl__CPlaybackInfoChangedEventArgs;

    typedef struct __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CControl__CGlobalSystemMediaTransportControlsSession___x_ABI_CWindows__CMedia__CControl__CPlaybackInfoChangedEventArgsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CControl__CGlobalSystemMediaTransportControlsSession___x_ABI_CWindows__CMedia__CControl__CPlaybackInfoChangedEventArgs* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CControl__CGlobalSystemMediaTransportControlsSession___x_ABI_CWindows__CMedia__CControl__CPlaybackInfoChangedEventArgs* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CControl__CGlobalSystemMediaTransportControlsSession___x_ABI_CWindows__CMedia__CControl__CPlaybackInfoChangedEventArgs* This);
        HRESULT (STDMETHODCALLTYPE* Invoke)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CControl__CGlobalSystemMediaTransportControlsSession___x_ABI_CWindows__CMedia__CControl__CPlaybackInfoChangedEventArgs* This,
        __x_ABI_CWindows_CMedia_CControl_CIGlobalSystemMediaTransportControlsSession* sender,
        __x_ABI_CWindows_CMedia_CControl_CIPlaybackInfoChangedEventArgs* args);

        END_INTERFACE
    } __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CControl__CGlobalSystemMediaTransportControlsSession___x_ABI_CWindows__CMedia__CControl__CPlaybackInfoChangedEventArgsVtbl;

    interface __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CControl__CGlobalSystemMediaTransportControlsSession___x_ABI_CWindows__CMedia__CControl__CPlaybackInfoChangedEventArgs
    {
        CONST_VTBL struct __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CControl__CGlobalSystemMediaTransportControlsSession___x_ABI_CWindows__CMedia__CControl__CPlaybackInfoChangedEventArgsVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CControl__CGlobalSystemMediaTransportControlsSession___x_ABI_CWindows__CMedia__CControl__CPlaybackInfoChangedEventArgs_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CControl__CGlobalSystemMediaTransportControlsSession___x_ABI_CWindows__CMedia__CControl__CTimelinePropertiesChangedEventArgs_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CControl__CGlobalSystemMediaTransportControlsSession___x_ABI_CWindows__CMedia__CControl__CTimelinePropertiesChangedEventArgs_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CControl__CGlobalSystemMediaTransportControlsSession___x_ABI_CWindows__CMedia__CControl__CTimelinePropertiesChangedEventArgs __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CControl__CGlobalSystemMediaTransportControlsSession___x_ABI_CWindows__CMedia__CControl__CTimelinePropertiesChangedEventArgs;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CControl__CGlobalSystemMediaTransportControlsSession___x_ABI_CWindows__CMedia__CControl__CTimelinePropertiesChangedEventArgs;

    typedef struct __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CControl__CGlobalSystemMediaTransportControlsSession___x_ABI_CWindows__CMedia__CControl__CTimelinePropertiesChangedEventArgsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CControl__CGlobalSystemMediaTransportControlsSession___x_ABI_CWindows__CMedia__CControl__CTimelinePropertiesChangedEventArgs* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CControl__CGlobalSystemMediaTransportControlsSession___x_ABI_CWindows__CMedia__CControl__CTimelinePropertiesChangedEventArgs* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CControl__CGlobalSystemMediaTransportControlsSession___x_ABI_CWindows__CMedia__CControl__CTimelinePropertiesChangedEventArgs* This);
        HRESULT (STDMETHODCALLTYPE* Invoke)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CControl__CGlobalSystemMediaTransportControlsSession___x_ABI_CWindows__CMedia__CControl__CTimelinePropertiesChangedEventArgs* This,
        __x_ABI_CWindows_CMedia_CControl_CIGlobalSystemMediaTransportControlsSession* sender,
        __x_ABI_CWindows_CMedia_CControl_CITimelinePropertiesChangedEventArgs* args);

        END_INTERFACE
    } __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CControl__CGlobalSystemMediaTransportControlsSession___x_ABI_CWindows__CMedia__CControl__CTimelinePropertiesChangedEventArgsVtbl;

    interface __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CControl__CGlobalSystemMediaTransportControlsSession___x_ABI_CWindows__CMedia__CControl__CTimelinePropertiesChangedEventArgs
    {
        CONST_VTBL struct __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CControl__CGlobalSystemMediaTransportControlsSession___x_ABI_CWindows__CMedia__CControl__CTimelinePropertiesChangedEventArgsVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CControl__CGlobalSystemMediaTransportControlsSession___x_ABI_CWindows__CMedia__CControl__CTimelinePropertiesChangedEventArgs_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CControl__CGlobalSystemMediaTransportControlsSessionManager___x_ABI_CWindows__CMedia__CControl__CCurrentSessionChangedEventArgs_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CControl__CGlobalSystemMediaTransportControlsSessionManager___x_ABI_CWindows__CMedia__CControl__CCurrentSessionChangedEventArgs_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CControl__CGlobalSystemMediaTransportControlsSessionManager___x_ABI_CWindows__CMedia__CControl__CCurrentSessionChangedEventArgs __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CControl__CGlobalSystemMediaTransportControlsSessionManager___x_ABI_CWindows__CMedia__CControl__CCurrentSessionChangedEventArgs;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CControl__CGlobalSystemMediaTransportControlsSessionManager___x_ABI_CWindows__CMedia__CControl__CCurrentSessionChangedEventArgs;

    typedef struct __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CControl__CGlobalSystemMediaTransportControlsSessionManager___x_ABI_CWindows__CMedia__CControl__CCurrentSessionChangedEventArgsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CControl__CGlobalSystemMediaTransportControlsSessionManager___x_ABI_CWindows__CMedia__CControl__CCurrentSessionChangedEventArgs* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CControl__CGlobalSystemMediaTransportControlsSessionManager___x_ABI_CWindows__CMedia__CControl__CCurrentSessionChangedEventArgs* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CControl__CGlobalSystemMediaTransportControlsSessionManager___x_ABI_CWindows__CMedia__CControl__CCurrentSessionChangedEventArgs* This);
        HRESULT (STDMETHODCALLTYPE* Invoke)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CControl__CGlobalSystemMediaTransportControlsSessionManager___x_ABI_CWindows__CMedia__CControl__CCurrentSessionChangedEventArgs* This,
        __x_ABI_CWindows_CMedia_CControl_CIGlobalSystemMediaTransportControlsSessionManager* sender,
        __x_ABI_CWindows_CMedia_CControl_CICurrentSessionChangedEventArgs* args);

        END_INTERFACE
    } __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CControl__CGlobalSystemMediaTransportControlsSessionManager___x_ABI_CWindows__CMedia__CControl__CCurrentSessionChangedEventArgsVtbl;

    interface __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CControl__CGlobalSystemMediaTransportControlsSessionManager___x_ABI_CWindows__CMedia__CControl__CCurrentSessionChangedEventArgs
    {
        CONST_VTBL struct __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CControl__CGlobalSystemMediaTransportControlsSessionManager___x_ABI_CWindows__CMedia__CControl__CCurrentSessionChangedEventArgsVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CControl__CGlobalSystemMediaTransportControlsSessionManager___x_ABI_CWindows__CMedia__CControl__CCurrentSessionChangedEventArgs_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CControl__CGlobalSystemMediaTransportControlsSessionManager___x_ABI_CWindows__CMedia__CControl__CSessionsChangedEventArgs_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CControl__CGlobalSystemMediaTransportControlsSessionManager___x_ABI_CWindows__CMedia__CControl__CSessionsChangedEventArgs_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CControl__CGlobalSystemMediaTransportControlsSessionManager___x_ABI_CWindows__CMedia__CControl__CSessionsChangedEventArgs __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CControl__CGlobalSystemMediaTransportControlsSessionManager___x_ABI_CWindows__CMedia__CControl__CSessionsChangedEventArgs;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CControl__CGlobalSystemMediaTransportControlsSessionManager___x_ABI_CWindows__CMedia__CControl__CSessionsChangedEventArgs;

    typedef struct __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CControl__CGlobalSystemMediaTransportControlsSessionManager___x_ABI_CWindows__CMedia__CControl__CSessionsChangedEventArgsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CControl__CGlobalSystemMediaTransportControlsSessionManager___x_ABI_CWindows__CMedia__CControl__CSessionsChangedEventArgs* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CControl__CGlobalSystemMediaTransportControlsSessionManager___x_ABI_CWindows__CMedia__CControl__CSessionsChangedEventArgs* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CControl__CGlobalSystemMediaTransportControlsSessionManager___x_ABI_CWindows__CMedia__CControl__CSessionsChangedEventArgs* This);
        HRESULT (STDMETHODCALLTYPE* Invoke)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CControl__CGlobalSystemMediaTransportControlsSessionManager___x_ABI_CWindows__CMedia__CControl__CSessionsChangedEventArgs* This,
        __x_ABI_CWindows_CMedia_CControl_CIGlobalSystemMediaTransportControlsSessionManager* sender,
        __x_ABI_CWindows_CMedia_CControl_CISessionsChangedEventArgs* args);

        END_INTERFACE
    } __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CControl__CGlobalSystemMediaTransportControlsSessionManager___x_ABI_CWindows__CMedia__CControl__CSessionsChangedEventArgsVtbl;

    interface __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CControl__CGlobalSystemMediaTransportControlsSessionManager___x_ABI_CWindows__CMedia__CControl__CSessionsChangedEventArgs
    {
        CONST_VTBL struct __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CControl__CGlobalSystemMediaTransportControlsSessionManager___x_ABI_CWindows__CMedia__CControl__CSessionsChangedEventArgsVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CControl__CGlobalSystemMediaTransportControlsSessionManager___x_ABI_CWindows__CMedia__CControl__CSessionsChangedEventArgs_INTERFACE_DEFINED__
    
typedef enum __x_ABI_CWindows_CFoundation_CAsyncStatus __x_ABI_CWindows_CFoundation_CAsyncStatus;

typedef struct __x_ABI_CWindows_CFoundation_CDateTime __x_ABI_CWindows_CFoundation_CDateTime;

#ifndef ____x_ABI_CWindows_CFoundation_CIAsyncInfo_FWD_DEFINED__
#define ____x_ABI_CWindows_CFoundation_CIAsyncInfo_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CFoundation_CIAsyncInfo __x_ABI_CWindows_CFoundation_CIAsyncInfo;

#endif // ____x_ABI_CWindows_CFoundation_CIAsyncInfo_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CFoundation_CIPropertyValue_FWD_DEFINED__
#define ____x_ABI_CWindows_CFoundation_CIPropertyValue_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CFoundation_CIPropertyValue __x_ABI_CWindows_CFoundation_CIPropertyValue;

#endif // ____x_ABI_CWindows_CFoundation_CIPropertyValue_FWD_DEFINED__

typedef struct __x_ABI_CWindows_CFoundation_CTimeSpan __x_ABI_CWindows_CFoundation_CTimeSpan;

#ifndef ____x_ABI_CWindows_CStorage_CStreams_CIRandomAccessStreamReference_FWD_DEFINED__
#define ____x_ABI_CWindows_CStorage_CStreams_CIRandomAccessStreamReference_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CStorage_CStreams_CIRandomAccessStreamReference __x_ABI_CWindows_CStorage_CStreams_CIRandomAccessStreamReference;

#endif // ____x_ABI_CWindows_CStorage_CStreams_CIRandomAccessStreamReference_FWD_DEFINED__

typedef enum __x_ABI_CWindows_CMedia_CControl_CGlobalSystemMediaTransportControlsSessionPlaybackStatus __x_ABI_CWindows_CMedia_CControl_CGlobalSystemMediaTransportControlsSessionPlaybackStatus;

enum __x_ABI_CWindows_CMedia_CControl_CGlobalSystemMediaTransportControlsSessionPlaybackStatus
    {
        __x_ABI_CWindows_CMedia_CControl_CGlobalSystemMediaTransportControlsSessionPlaybackStatus_Closed = 0,
    __x_ABI_CWindows_CMedia_CControl_CGlobalSystemMediaTransportControlsSessionPlaybackStatus_Opened = 1,
    __x_ABI_CWindows_CMedia_CControl_CGlobalSystemMediaTransportControlsSessionPlaybackStatus_Changing = 2,
    __x_ABI_CWindows_CMedia_CControl_CGlobalSystemMediaTransportControlsSessionPlaybackStatus_Stopped = 3,
    __x_ABI_CWindows_CMedia_CControl_CGlobalSystemMediaTransportControlsSessionPlaybackStatus_Playing = 4,
    __x_ABI_CWindows_CMedia_CControl_CGlobalSystemMediaTransportControlsSessionPlaybackStatus_Paused = 5,
};

#if !defined(____x_ABI_CWindows_CMedia_CControl_CICurrentSessionChangedEventArgs_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CMedia_CControl_CICurrentSessionChangedEventArgs_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CMedia_CControl_CICurrentSessionChangedEventArgsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CMedia_CControl_CICurrentSessionChangedEventArgs* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CMedia_CControl_CICurrentSessionChangedEventArgs* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CMedia_CControl_CICurrentSessionChangedEventArgs* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CMedia_CControl_CICurrentSessionChangedEventArgs* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CMedia_CControl_CICurrentSessionChangedEventArgs* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CMedia_CControl_CICurrentSessionChangedEventArgs* This,
            TrustLevel* trustLevel);
    
        END_INTERFACE
    } __x_ABI_CWindows_CMedia_CControl_CICurrentSessionChangedEventArgsVtbl;

    interface __x_ABI_CWindows_CMedia_CControl_CICurrentSessionChangedEventArgs
    {
        CONST_VTBL struct __x_ABI_CWindows_CMedia_CControl_CICurrentSessionChangedEventArgsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CMedia_CControl_CICurrentSessionChangedEventArgs;
#endif /* !defined(____x_ABI_CWindows_CMedia_CControl_CICurrentSessionChangedEventArgs_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CMedia_CControl_CIGlobalSystemMediaTransportControlsSession_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CMedia_CControl_CIGlobalSystemMediaTransportControlsSession_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CMedia_CControl_CIGlobalSystemMediaTransportControlsSessionVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CMedia_CControl_CIGlobalSystemMediaTransportControlsSession* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CMedia_CControl_CIGlobalSystemMediaTransportControlsSession* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CMedia_CControl_CIGlobalSystemMediaTransportControlsSession* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CMedia_CControl_CIGlobalSystemMediaTransportControlsSession* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CMedia_CControl_CIGlobalSystemMediaTransportControlsSession* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CMedia_CControl_CIGlobalSystemMediaTransportControlsSession* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_SourceAppUserModelId)(__x_ABI_CWindows_CMedia_CControl_CIGlobalSystemMediaTransportControlsSession* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* TryGetMediaPropertiesAsync)(__x_ABI_CWindows_CMedia_CControl_CIGlobalSystemMediaTransportControlsSession* This,
        __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CMedia__CControl__CGlobalSystemMediaTransportControlsSessionMediaProperties** operation);
    HRESULT (STDMETHODCALLTYPE* GetTimelineProperties)(__x_ABI_CWindows_CMedia_CControl_CIGlobalSystemMediaTransportControlsSession* This,
        __x_ABI_CWindows_CMedia_CControl_CIGlobalSystemMediaTransportControlsSessionTimelineProperties** result);
    HRESULT (STDMETHODCALLTYPE* GetPlaybackInfo)(__x_ABI_CWindows_CMedia_CControl_CIGlobalSystemMediaTransportControlsSession* This,
        __x_ABI_CWindows_CMedia_CControl_CIGlobalSystemMediaTransportControlsSessionPlaybackInfo** result);
    HRESULT (STDMETHODCALLTYPE* TryPlayAsync)(__x_ABI_CWindows_CMedia_CControl_CIGlobalSystemMediaTransportControlsSession* This,
        __x_ABI_C__FIAsyncOperation_1_boolean** operation);
    HRESULT (STDMETHODCALLTYPE* TryPauseAsync)(__x_ABI_CWindows_CMedia_CControl_CIGlobalSystemMediaTransportControlsSession* This,
        __x_ABI_C__FIAsyncOperation_1_boolean** operation);
    HRESULT (STDMETHODCALLTYPE* TryStopAsync)(__x_ABI_CWindows_CMedia_CControl_CIGlobalSystemMediaTransportControlsSession* This,
        __x_ABI_C__FIAsyncOperation_1_boolean** operation);
    HRESULT (STDMETHODCALLTYPE* TryRecordAsync)(__x_ABI_CWindows_CMedia_CControl_CIGlobalSystemMediaTransportControlsSession* This,
        __x_ABI_C__FIAsyncOperation_1_boolean** operation);
    HRESULT (STDMETHODCALLTYPE* TryFastForwardAsync)(__x_ABI_CWindows_CMedia_CControl_CIGlobalSystemMediaTransportControlsSession* This,
        __x_ABI_C__FIAsyncOperation_1_boolean** operation);
    HRESULT (STDMETHODCALLTYPE* TryRewindAsync)(__x_ABI_CWindows_CMedia_CControl_CIGlobalSystemMediaTransportControlsSession* This,
        __x_ABI_C__FIAsyncOperation_1_boolean** operation);
    HRESULT (STDMETHODCALLTYPE* TrySkipNextAsync)(__x_ABI_CWindows_CMedia_CControl_CIGlobalSystemMediaTransportControlsSession* This,
        __x_ABI_C__FIAsyncOperation_1_boolean** operation);
    HRESULT (STDMETHODCALLTYPE* TrySkipPreviousAsync)(__x_ABI_CWindows_CMedia_CControl_CIGlobalSystemMediaTransportControlsSession* This,
        __x_ABI_C__FIAsyncOperation_1_boolean** operation);
    HRESULT (STDMETHODCALLTYPE* TryChangeChannelUpAsync)(__x_ABI_CWindows_CMedia_CControl_CIGlobalSystemMediaTransportControlsSession* This,
        __x_ABI_C__FIAsyncOperation_1_boolean** operation);
    HRESULT (STDMETHODCALLTYPE* TryChangeChannelDownAsync)(__x_ABI_CWindows_CMedia_CControl_CIGlobalSystemMediaTransportControlsSession* This,
        __x_ABI_C__FIAsyncOperation_1_boolean** operation);
    HRESULT (STDMETHODCALLTYPE* TryTogglePlayPauseAsync)(__x_ABI_CWindows_CMedia_CControl_CIGlobalSystemMediaTransportControlsSession* This,
        __x_ABI_C__FIAsyncOperation_1_boolean** operation);
    HRESULT (STDMETHODCALLTYPE* TryChangeAutoRepeatModeAsync)(__x_ABI_CWindows_CMedia_CControl_CIGlobalSystemMediaTransportControlsSession* This,
        enum __x_ABI_CWindows_CMedia_CMediaPlaybackAutoRepeatMode requestedAutoRepeatMode,
        __x_ABI_C__FIAsyncOperation_1_boolean** operation);
    HRESULT (STDMETHODCALLTYPE* TryChangePlaybackRateAsync)(__x_ABI_CWindows_CMedia_CControl_CIGlobalSystemMediaTransportControlsSession* This,
        DOUBLE requestedPlaybackRate,
        __x_ABI_C__FIAsyncOperation_1_boolean** operation);
    HRESULT (STDMETHODCALLTYPE* TryChangeShuffleActiveAsync)(__x_ABI_CWindows_CMedia_CControl_CIGlobalSystemMediaTransportControlsSession* This,
        boolean requestedShuffleState,
        __x_ABI_C__FIAsyncOperation_1_boolean** operation);
    HRESULT (STDMETHODCALLTYPE* TryChangePlaybackPositionAsync)(__x_ABI_CWindows_CMedia_CControl_CIGlobalSystemMediaTransportControlsSession* This,
        INT64 requestedPlaybackPosition,
        __x_ABI_C__FIAsyncOperation_1_boolean** operation);
    HRESULT (STDMETHODCALLTYPE* add_TimelinePropertiesChanged)(__x_ABI_CWindows_CMedia_CControl_CIGlobalSystemMediaTransportControlsSession* This,
        __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CControl__CGlobalSystemMediaTransportControlsSession___x_ABI_CWindows__CMedia__CControl__CTimelinePropertiesChangedEventArgs* handler,
        EventRegistrationToken* token);
    HRESULT (STDMETHODCALLTYPE* remove_TimelinePropertiesChanged)(__x_ABI_CWindows_CMedia_CControl_CIGlobalSystemMediaTransportControlsSession* This,
        EventRegistrationToken token);
    HRESULT (STDMETHODCALLTYPE* add_PlaybackInfoChanged)(__x_ABI_CWindows_CMedia_CControl_CIGlobalSystemMediaTransportControlsSession* This,
        __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CControl__CGlobalSystemMediaTransportControlsSession___x_ABI_CWindows__CMedia__CControl__CPlaybackInfoChangedEventArgs* handler,
        EventRegistrationToken* token);
    HRESULT (STDMETHODCALLTYPE* remove_PlaybackInfoChanged)(__x_ABI_CWindows_CMedia_CControl_CIGlobalSystemMediaTransportControlsSession* This,
        EventRegistrationToken token);
    HRESULT (STDMETHODCALLTYPE* add_MediaPropertiesChanged)(__x_ABI_CWindows_CMedia_CControl_CIGlobalSystemMediaTransportControlsSession* This,
        __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CControl__CGlobalSystemMediaTransportControlsSession___x_ABI_CWindows__CMedia__CControl__CMediaPropertiesChangedEventArgs* handler,
        EventRegistrationToken* token);
    HRESULT (STDMETHODCALLTYPE* remove_MediaPropertiesChanged)(__x_ABI_CWindows_CMedia_CControl_CIGlobalSystemMediaTransportControlsSession* This,
        EventRegistrationToken token);

        END_INTERFACE
    } __x_ABI_CWindows_CMedia_CControl_CIGlobalSystemMediaTransportControlsSessionVtbl;

    interface __x_ABI_CWindows_CMedia_CControl_CIGlobalSystemMediaTransportControlsSession
    {
        CONST_VTBL struct __x_ABI_CWindows_CMedia_CControl_CIGlobalSystemMediaTransportControlsSessionVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CMedia_CControl_CIGlobalSystemMediaTransportControlsSession;
#endif /* !defined(____x_ABI_CWindows_CMedia_CControl_CIGlobalSystemMediaTransportControlsSession_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CMedia_CControl_CIGlobalSystemMediaTransportControlsSessionManager_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CMedia_CControl_CIGlobalSystemMediaTransportControlsSessionManager_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CMedia_CControl_CIGlobalSystemMediaTransportControlsSessionManagerVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CMedia_CControl_CIGlobalSystemMediaTransportControlsSessionManager* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CMedia_CControl_CIGlobalSystemMediaTransportControlsSessionManager* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CMedia_CControl_CIGlobalSystemMediaTransportControlsSessionManager* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CMedia_CControl_CIGlobalSystemMediaTransportControlsSessionManager* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CMedia_CControl_CIGlobalSystemMediaTransportControlsSessionManager* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CMedia_CControl_CIGlobalSystemMediaTransportControlsSessionManager* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* GetCurrentSession)(__x_ABI_CWindows_CMedia_CControl_CIGlobalSystemMediaTransportControlsSessionManager* This,
        __x_ABI_CWindows_CMedia_CControl_CIGlobalSystemMediaTransportControlsSession** result);
    HRESULT (STDMETHODCALLTYPE* GetSessions)(__x_ABI_CWindows_CMedia_CControl_CIGlobalSystemMediaTransportControlsSessionManager* This,
        __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CMedia__CControl__CGlobalSystemMediaTransportControlsSession** result);
    HRESULT (STDMETHODCALLTYPE* add_CurrentSessionChanged)(__x_ABI_CWindows_CMedia_CControl_CIGlobalSystemMediaTransportControlsSessionManager* This,
        __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CControl__CGlobalSystemMediaTransportControlsSessionManager___x_ABI_CWindows__CMedia__CControl__CCurrentSessionChangedEventArgs* handler,
        EventRegistrationToken* token);
    HRESULT (STDMETHODCALLTYPE* remove_CurrentSessionChanged)(__x_ABI_CWindows_CMedia_CControl_CIGlobalSystemMediaTransportControlsSessionManager* This,
        EventRegistrationToken token);
    HRESULT (STDMETHODCALLTYPE* add_SessionsChanged)(__x_ABI_CWindows_CMedia_CControl_CIGlobalSystemMediaTransportControlsSessionManager* This,
        __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CControl__CGlobalSystemMediaTransportControlsSessionManager___x_ABI_CWindows__CMedia__CControl__CSessionsChangedEventArgs* handler,
        EventRegistrationToken* token);
    HRESULT (STDMETHODCALLTYPE* remove_SessionsChanged)(__x_ABI_CWindows_CMedia_CControl_CIGlobalSystemMediaTransportControlsSessionManager* This,
        EventRegistrationToken token);

        END_INTERFACE
    } __x_ABI_CWindows_CMedia_CControl_CIGlobalSystemMediaTransportControlsSessionManagerVtbl;

    interface __x_ABI_CWindows_CMedia_CControl_CIGlobalSystemMediaTransportControlsSessionManager
    {
        CONST_VTBL struct __x_ABI_CWindows_CMedia_CControl_CIGlobalSystemMediaTransportControlsSessionManagerVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CMedia_CControl_CIGlobalSystemMediaTransportControlsSessionManager;
#endif /* !defined(____x_ABI_CWindows_CMedia_CControl_CIGlobalSystemMediaTransportControlsSessionManager_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CMedia_CControl_CIGlobalSystemMediaTransportControlsSessionManagerStatics_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CMedia_CControl_CIGlobalSystemMediaTransportControlsSessionManagerStatics_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CMedia_CControl_CIGlobalSystemMediaTransportControlsSessionManagerStaticsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CMedia_CControl_CIGlobalSystemMediaTransportControlsSessionManagerStatics* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CMedia_CControl_CIGlobalSystemMediaTransportControlsSessionManagerStatics* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CMedia_CControl_CIGlobalSystemMediaTransportControlsSessionManagerStatics* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CMedia_CControl_CIGlobalSystemMediaTransportControlsSessionManagerStatics* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CMedia_CControl_CIGlobalSystemMediaTransportControlsSessionManagerStatics* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CMedia_CControl_CIGlobalSystemMediaTransportControlsSessionManagerStatics* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* RequestAsync)(__x_ABI_CWindows_CMedia_CControl_CIGlobalSystemMediaTransportControlsSessionManagerStatics* This,
        __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CMedia__CControl__CGlobalSystemMediaTransportControlsSessionManager** operation);

        END_INTERFACE
    } __x_ABI_CWindows_CMedia_CControl_CIGlobalSystemMediaTransportControlsSessionManagerStaticsVtbl;

    interface __x_ABI_CWindows_CMedia_CControl_CIGlobalSystemMediaTransportControlsSessionManagerStatics
    {
        CONST_VTBL struct __x_ABI_CWindows_CMedia_CControl_CIGlobalSystemMediaTransportControlsSessionManagerStaticsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CMedia_CControl_CIGlobalSystemMediaTransportControlsSessionManagerStatics;
#endif /* !defined(____x_ABI_CWindows_CMedia_CControl_CIGlobalSystemMediaTransportControlsSessionManagerStatics_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CMedia_CControl_CIGlobalSystemMediaTransportControlsSessionMediaProperties_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CMedia_CControl_CIGlobalSystemMediaTransportControlsSessionMediaProperties_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CMedia_CControl_CIGlobalSystemMediaTransportControlsSessionMediaPropertiesVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CMedia_CControl_CIGlobalSystemMediaTransportControlsSessionMediaProperties* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CMedia_CControl_CIGlobalSystemMediaTransportControlsSessionMediaProperties* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CMedia_CControl_CIGlobalSystemMediaTransportControlsSessionMediaProperties* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CMedia_CControl_CIGlobalSystemMediaTransportControlsSessionMediaProperties* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CMedia_CControl_CIGlobalSystemMediaTransportControlsSessionMediaProperties* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CMedia_CControl_CIGlobalSystemMediaTransportControlsSessionMediaProperties* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Title)(__x_ABI_CWindows_CMedia_CControl_CIGlobalSystemMediaTransportControlsSessionMediaProperties* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* get_Subtitle)(__x_ABI_CWindows_CMedia_CControl_CIGlobalSystemMediaTransportControlsSessionMediaProperties* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* get_AlbumArtist)(__x_ABI_CWindows_CMedia_CControl_CIGlobalSystemMediaTransportControlsSessionMediaProperties* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* get_Artist)(__x_ABI_CWindows_CMedia_CControl_CIGlobalSystemMediaTransportControlsSessionMediaProperties* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* get_AlbumTitle)(__x_ABI_CWindows_CMedia_CControl_CIGlobalSystemMediaTransportControlsSessionMediaProperties* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* get_TrackNumber)(__x_ABI_CWindows_CMedia_CControl_CIGlobalSystemMediaTransportControlsSessionMediaProperties* This,
        INT32* value);
    HRESULT (STDMETHODCALLTYPE* get_Genres)(__x_ABI_CWindows_CMedia_CControl_CIGlobalSystemMediaTransportControlsSessionMediaProperties* This,
        __x_ABI_C__FIVectorView_1_HSTRING** value);
    HRESULT (STDMETHODCALLTYPE* get_AlbumTrackCount)(__x_ABI_CWindows_CMedia_CControl_CIGlobalSystemMediaTransportControlsSessionMediaProperties* This,
        INT32* value);
    HRESULT (STDMETHODCALLTYPE* get_PlaybackType)(__x_ABI_CWindows_CMedia_CControl_CIGlobalSystemMediaTransportControlsSessionMediaProperties* This,
        __x_ABI_C__FIReference_1___x_ABI_CWindows__CMedia__CMediaPlaybackType** value);
    HRESULT (STDMETHODCALLTYPE* get_Thumbnail)(__x_ABI_CWindows_CMedia_CControl_CIGlobalSystemMediaTransportControlsSessionMediaProperties* This,
        __x_ABI_CWindows_CStorage_CStreams_CIRandomAccessStreamReference** value);

        END_INTERFACE
    } __x_ABI_CWindows_CMedia_CControl_CIGlobalSystemMediaTransportControlsSessionMediaPropertiesVtbl;

    interface __x_ABI_CWindows_CMedia_CControl_CIGlobalSystemMediaTransportControlsSessionMediaProperties
    {
        CONST_VTBL struct __x_ABI_CWindows_CMedia_CControl_CIGlobalSystemMediaTransportControlsSessionMediaPropertiesVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CMedia_CControl_CIGlobalSystemMediaTransportControlsSessionMediaProperties;
#endif /* !defined(____x_ABI_CWindows_CMedia_CControl_CIGlobalSystemMediaTransportControlsSessionMediaProperties_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CMedia_CControl_CIGlobalSystemMediaTransportControlsSessionPlaybackControls_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CMedia_CControl_CIGlobalSystemMediaTransportControlsSessionPlaybackControls_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CMedia_CControl_CIGlobalSystemMediaTransportControlsSessionPlaybackControlsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CMedia_CControl_CIGlobalSystemMediaTransportControlsSessionPlaybackControls* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CMedia_CControl_CIGlobalSystemMediaTransportControlsSessionPlaybackControls* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CMedia_CControl_CIGlobalSystemMediaTransportControlsSessionPlaybackControls* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CMedia_CControl_CIGlobalSystemMediaTransportControlsSessionPlaybackControls* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CMedia_CControl_CIGlobalSystemMediaTransportControlsSessionPlaybackControls* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CMedia_CControl_CIGlobalSystemMediaTransportControlsSessionPlaybackControls* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_IsPlayEnabled)(__x_ABI_CWindows_CMedia_CControl_CIGlobalSystemMediaTransportControlsSessionPlaybackControls* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* get_IsPauseEnabled)(__x_ABI_CWindows_CMedia_CControl_CIGlobalSystemMediaTransportControlsSessionPlaybackControls* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* get_IsStopEnabled)(__x_ABI_CWindows_CMedia_CControl_CIGlobalSystemMediaTransportControlsSessionPlaybackControls* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* get_IsRecordEnabled)(__x_ABI_CWindows_CMedia_CControl_CIGlobalSystemMediaTransportControlsSessionPlaybackControls* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* get_IsFastForwardEnabled)(__x_ABI_CWindows_CMedia_CControl_CIGlobalSystemMediaTransportControlsSessionPlaybackControls* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* get_IsRewindEnabled)(__x_ABI_CWindows_CMedia_CControl_CIGlobalSystemMediaTransportControlsSessionPlaybackControls* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* get_IsNextEnabled)(__x_ABI_CWindows_CMedia_CControl_CIGlobalSystemMediaTransportControlsSessionPlaybackControls* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* get_IsPreviousEnabled)(__x_ABI_CWindows_CMedia_CControl_CIGlobalSystemMediaTransportControlsSessionPlaybackControls* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* get_IsChannelUpEnabled)(__x_ABI_CWindows_CMedia_CControl_CIGlobalSystemMediaTransportControlsSessionPlaybackControls* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* get_IsChannelDownEnabled)(__x_ABI_CWindows_CMedia_CControl_CIGlobalSystemMediaTransportControlsSessionPlaybackControls* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* get_IsPlayPauseToggleEnabled)(__x_ABI_CWindows_CMedia_CControl_CIGlobalSystemMediaTransportControlsSessionPlaybackControls* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* get_IsShuffleEnabled)(__x_ABI_CWindows_CMedia_CControl_CIGlobalSystemMediaTransportControlsSessionPlaybackControls* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* get_IsRepeatEnabled)(__x_ABI_CWindows_CMedia_CControl_CIGlobalSystemMediaTransportControlsSessionPlaybackControls* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* get_IsPlaybackRateEnabled)(__x_ABI_CWindows_CMedia_CControl_CIGlobalSystemMediaTransportControlsSessionPlaybackControls* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* get_IsPlaybackPositionEnabled)(__x_ABI_CWindows_CMedia_CControl_CIGlobalSystemMediaTransportControlsSessionPlaybackControls* This,
        boolean* value);

        END_INTERFACE
    } __x_ABI_CWindows_CMedia_CControl_CIGlobalSystemMediaTransportControlsSessionPlaybackControlsVtbl;

    interface __x_ABI_CWindows_CMedia_CControl_CIGlobalSystemMediaTransportControlsSessionPlaybackControls
    {
        CONST_VTBL struct __x_ABI_CWindows_CMedia_CControl_CIGlobalSystemMediaTransportControlsSessionPlaybackControlsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CMedia_CControl_CIGlobalSystemMediaTransportControlsSessionPlaybackControls;
#endif /* !defined(____x_ABI_CWindows_CMedia_CControl_CIGlobalSystemMediaTransportControlsSessionPlaybackControls_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CMedia_CControl_CIGlobalSystemMediaTransportControlsSessionPlaybackInfo_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CMedia_CControl_CIGlobalSystemMediaTransportControlsSessionPlaybackInfo_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CMedia_CControl_CIGlobalSystemMediaTransportControlsSessionPlaybackInfoVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CMedia_CControl_CIGlobalSystemMediaTransportControlsSessionPlaybackInfo* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CMedia_CControl_CIGlobalSystemMediaTransportControlsSessionPlaybackInfo* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CMedia_CControl_CIGlobalSystemMediaTransportControlsSessionPlaybackInfo* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CMedia_CControl_CIGlobalSystemMediaTransportControlsSessionPlaybackInfo* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CMedia_CControl_CIGlobalSystemMediaTransportControlsSessionPlaybackInfo* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CMedia_CControl_CIGlobalSystemMediaTransportControlsSessionPlaybackInfo* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Controls)(__x_ABI_CWindows_CMedia_CControl_CIGlobalSystemMediaTransportControlsSessionPlaybackInfo* This,
        __x_ABI_CWindows_CMedia_CControl_CIGlobalSystemMediaTransportControlsSessionPlaybackControls** value);
    HRESULT (STDMETHODCALLTYPE* get_PlaybackStatus)(__x_ABI_CWindows_CMedia_CControl_CIGlobalSystemMediaTransportControlsSessionPlaybackInfo* This,
        enum __x_ABI_CWindows_CMedia_CControl_CGlobalSystemMediaTransportControlsSessionPlaybackStatus* value);
    HRESULT (STDMETHODCALLTYPE* get_PlaybackType)(__x_ABI_CWindows_CMedia_CControl_CIGlobalSystemMediaTransportControlsSessionPlaybackInfo* This,
        __x_ABI_C__FIReference_1___x_ABI_CWindows__CMedia__CMediaPlaybackType** value);
    HRESULT (STDMETHODCALLTYPE* get_AutoRepeatMode)(__x_ABI_CWindows_CMedia_CControl_CIGlobalSystemMediaTransportControlsSessionPlaybackInfo* This,
        __x_ABI_C__FIReference_1___x_ABI_CWindows__CMedia__CMediaPlaybackAutoRepeatMode** value);
    HRESULT (STDMETHODCALLTYPE* get_PlaybackRate)(__x_ABI_CWindows_CMedia_CControl_CIGlobalSystemMediaTransportControlsSessionPlaybackInfo* This,
        __x_ABI_C__FIReference_1_double** value);
    HRESULT (STDMETHODCALLTYPE* get_IsShuffleActive)(__x_ABI_CWindows_CMedia_CControl_CIGlobalSystemMediaTransportControlsSessionPlaybackInfo* This,
        __x_ABI_C__FIReference_1_boolean** value);

        END_INTERFACE
    } __x_ABI_CWindows_CMedia_CControl_CIGlobalSystemMediaTransportControlsSessionPlaybackInfoVtbl;

    interface __x_ABI_CWindows_CMedia_CControl_CIGlobalSystemMediaTransportControlsSessionPlaybackInfo
    {
        CONST_VTBL struct __x_ABI_CWindows_CMedia_CControl_CIGlobalSystemMediaTransportControlsSessionPlaybackInfoVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CMedia_CControl_CIGlobalSystemMediaTransportControlsSessionPlaybackInfo;
#endif /* !defined(____x_ABI_CWindows_CMedia_CControl_CIGlobalSystemMediaTransportControlsSessionPlaybackInfo_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CMedia_CControl_CIGlobalSystemMediaTransportControlsSessionTimelineProperties_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CMedia_CControl_CIGlobalSystemMediaTransportControlsSessionTimelineProperties_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CMedia_CControl_CIGlobalSystemMediaTransportControlsSessionTimelinePropertiesVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CMedia_CControl_CIGlobalSystemMediaTransportControlsSessionTimelineProperties* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CMedia_CControl_CIGlobalSystemMediaTransportControlsSessionTimelineProperties* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CMedia_CControl_CIGlobalSystemMediaTransportControlsSessionTimelineProperties* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CMedia_CControl_CIGlobalSystemMediaTransportControlsSessionTimelineProperties* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CMedia_CControl_CIGlobalSystemMediaTransportControlsSessionTimelineProperties* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CMedia_CControl_CIGlobalSystemMediaTransportControlsSessionTimelineProperties* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_StartTime)(__x_ABI_CWindows_CMedia_CControl_CIGlobalSystemMediaTransportControlsSessionTimelineProperties* This,
        struct __x_ABI_CWindows_CFoundation_CTimeSpan* value);
    HRESULT (STDMETHODCALLTYPE* get_EndTime)(__x_ABI_CWindows_CMedia_CControl_CIGlobalSystemMediaTransportControlsSessionTimelineProperties* This,
        struct __x_ABI_CWindows_CFoundation_CTimeSpan* value);
    HRESULT (STDMETHODCALLTYPE* get_MinSeekTime)(__x_ABI_CWindows_CMedia_CControl_CIGlobalSystemMediaTransportControlsSessionTimelineProperties* This,
        struct __x_ABI_CWindows_CFoundation_CTimeSpan* value);
    HRESULT (STDMETHODCALLTYPE* get_MaxSeekTime)(__x_ABI_CWindows_CMedia_CControl_CIGlobalSystemMediaTransportControlsSessionTimelineProperties* This,
        struct __x_ABI_CWindows_CFoundation_CTimeSpan* value);
    HRESULT (STDMETHODCALLTYPE* get_Position)(__x_ABI_CWindows_CMedia_CControl_CIGlobalSystemMediaTransportControlsSessionTimelineProperties* This,
        struct __x_ABI_CWindows_CFoundation_CTimeSpan* value);
    HRESULT (STDMETHODCALLTYPE* get_LastUpdatedTime)(__x_ABI_CWindows_CMedia_CControl_CIGlobalSystemMediaTransportControlsSessionTimelineProperties* This,
        struct __x_ABI_CWindows_CFoundation_CDateTime* value);

        END_INTERFACE
    } __x_ABI_CWindows_CMedia_CControl_CIGlobalSystemMediaTransportControlsSessionTimelinePropertiesVtbl;

    interface __x_ABI_CWindows_CMedia_CControl_CIGlobalSystemMediaTransportControlsSessionTimelineProperties
    {
        CONST_VTBL struct __x_ABI_CWindows_CMedia_CControl_CIGlobalSystemMediaTransportControlsSessionTimelinePropertiesVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CMedia_CControl_CIGlobalSystemMediaTransportControlsSessionTimelineProperties;
#endif /* !defined(____x_ABI_CWindows_CMedia_CControl_CIGlobalSystemMediaTransportControlsSessionTimelineProperties_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CMedia_CControl_CIMediaPropertiesChangedEventArgs_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CMedia_CControl_CIMediaPropertiesChangedEventArgs_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CMedia_CControl_CIMediaPropertiesChangedEventArgsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CMedia_CControl_CIMediaPropertiesChangedEventArgs* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CMedia_CControl_CIMediaPropertiesChangedEventArgs* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CMedia_CControl_CIMediaPropertiesChangedEventArgs* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CMedia_CControl_CIMediaPropertiesChangedEventArgs* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CMedia_CControl_CIMediaPropertiesChangedEventArgs* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CMedia_CControl_CIMediaPropertiesChangedEventArgs* This,
            TrustLevel* trustLevel);
    
        END_INTERFACE
    } __x_ABI_CWindows_CMedia_CControl_CIMediaPropertiesChangedEventArgsVtbl;

    interface __x_ABI_CWindows_CMedia_CControl_CIMediaPropertiesChangedEventArgs
    {
        CONST_VTBL struct __x_ABI_CWindows_CMedia_CControl_CIMediaPropertiesChangedEventArgsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CMedia_CControl_CIMediaPropertiesChangedEventArgs;
#endif /* !defined(____x_ABI_CWindows_CMedia_CControl_CIMediaPropertiesChangedEventArgs_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CMedia_CControl_CIPlaybackInfoChangedEventArgs_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CMedia_CControl_CIPlaybackInfoChangedEventArgs_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CMedia_CControl_CIPlaybackInfoChangedEventArgsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CMedia_CControl_CIPlaybackInfoChangedEventArgs* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CMedia_CControl_CIPlaybackInfoChangedEventArgs* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CMedia_CControl_CIPlaybackInfoChangedEventArgs* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CMedia_CControl_CIPlaybackInfoChangedEventArgs* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CMedia_CControl_CIPlaybackInfoChangedEventArgs* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CMedia_CControl_CIPlaybackInfoChangedEventArgs* This,
            TrustLevel* trustLevel);
    
        END_INTERFACE
    } __x_ABI_CWindows_CMedia_CControl_CIPlaybackInfoChangedEventArgsVtbl;

    interface __x_ABI_CWindows_CMedia_CControl_CIPlaybackInfoChangedEventArgs
    {
        CONST_VTBL struct __x_ABI_CWindows_CMedia_CControl_CIPlaybackInfoChangedEventArgsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CMedia_CControl_CIPlaybackInfoChangedEventArgs;
#endif /* !defined(____x_ABI_CWindows_CMedia_CControl_CIPlaybackInfoChangedEventArgs_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CMedia_CControl_CISessionsChangedEventArgs_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CMedia_CControl_CISessionsChangedEventArgs_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CMedia_CControl_CISessionsChangedEventArgsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CMedia_CControl_CISessionsChangedEventArgs* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CMedia_CControl_CISessionsChangedEventArgs* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CMedia_CControl_CISessionsChangedEventArgs* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CMedia_CControl_CISessionsChangedEventArgs* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CMedia_CControl_CISessionsChangedEventArgs* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CMedia_CControl_CISessionsChangedEventArgs* This,
            TrustLevel* trustLevel);
    
        END_INTERFACE
    } __x_ABI_CWindows_CMedia_CControl_CISessionsChangedEventArgsVtbl;

    interface __x_ABI_CWindows_CMedia_CControl_CISessionsChangedEventArgs
    {
        CONST_VTBL struct __x_ABI_CWindows_CMedia_CControl_CISessionsChangedEventArgsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CMedia_CControl_CISessionsChangedEventArgs;
#endif /* !defined(____x_ABI_CWindows_CMedia_CControl_CISessionsChangedEventArgs_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CMedia_CControl_CITimelinePropertiesChangedEventArgs_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CMedia_CControl_CITimelinePropertiesChangedEventArgs_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CMedia_CControl_CITimelinePropertiesChangedEventArgsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CMedia_CControl_CITimelinePropertiesChangedEventArgs* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CMedia_CControl_CITimelinePropertiesChangedEventArgs* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CMedia_CControl_CITimelinePropertiesChangedEventArgs* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CMedia_CControl_CITimelinePropertiesChangedEventArgs* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CMedia_CControl_CITimelinePropertiesChangedEventArgs* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CMedia_CControl_CITimelinePropertiesChangedEventArgs* This,
            TrustLevel* trustLevel);
    
        END_INTERFACE
    } __x_ABI_CWindows_CMedia_CControl_CITimelinePropertiesChangedEventArgsVtbl;

    interface __x_ABI_CWindows_CMedia_CControl_CITimelinePropertiesChangedEventArgs
    {
        CONST_VTBL struct __x_ABI_CWindows_CMedia_CControl_CITimelinePropertiesChangedEventArgsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CMedia_CControl_CITimelinePropertiesChangedEventArgs;
#endif /* !defined(____x_ABI_CWindows_CMedia_CControl_CITimelinePropertiesChangedEventArgs_INTERFACE_DEFINED__) */
    
