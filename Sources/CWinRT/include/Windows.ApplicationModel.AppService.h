// WARNING: Please don't edit this file. It was generated by Swift/WinRT v0.0.1

#pragma once
// Header files for imported files
#include <inspectable.h>
#include <EventToken.h>
#include <windowscontracts.h>
#include "Windows.Foundation.h"
#include "Windows.ApplicationModel.h"
#include "Windows.System.h"
#include "Windows.System.RemoteSystems.h"
// Importing Collections header
#include "Windows.Foundation.Collections.h"

/* Forward Declarations */
#ifndef ____x_ABI_CWindows_CApplicationModel_CAppService_CIAppServiceCatalogStatics_FWD_DEFINED__
#define ____x_ABI_CWindows_CApplicationModel_CAppService_CIAppServiceCatalogStatics_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CApplicationModel_CAppService_CIAppServiceCatalogStatics __x_ABI_CWindows_CApplicationModel_CAppService_CIAppServiceCatalogStatics;

#endif // ____x_ABI_CWindows_CApplicationModel_CAppService_CIAppServiceCatalogStatics_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CApplicationModel_CAppService_CIAppServiceClosedEventArgs_FWD_DEFINED__
#define ____x_ABI_CWindows_CApplicationModel_CAppService_CIAppServiceClosedEventArgs_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CApplicationModel_CAppService_CIAppServiceClosedEventArgs __x_ABI_CWindows_CApplicationModel_CAppService_CIAppServiceClosedEventArgs;

#endif // ____x_ABI_CWindows_CApplicationModel_CAppService_CIAppServiceClosedEventArgs_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CApplicationModel_CAppService_CIAppServiceConnection_FWD_DEFINED__
#define ____x_ABI_CWindows_CApplicationModel_CAppService_CIAppServiceConnection_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CApplicationModel_CAppService_CIAppServiceConnection __x_ABI_CWindows_CApplicationModel_CAppService_CIAppServiceConnection;

#endif // ____x_ABI_CWindows_CApplicationModel_CAppService_CIAppServiceConnection_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CApplicationModel_CAppService_CIAppServiceConnection2_FWD_DEFINED__
#define ____x_ABI_CWindows_CApplicationModel_CAppService_CIAppServiceConnection2_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CApplicationModel_CAppService_CIAppServiceConnection2 __x_ABI_CWindows_CApplicationModel_CAppService_CIAppServiceConnection2;

#endif // ____x_ABI_CWindows_CApplicationModel_CAppService_CIAppServiceConnection2_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CApplicationModel_CAppService_CIAppServiceConnectionStatics_FWD_DEFINED__
#define ____x_ABI_CWindows_CApplicationModel_CAppService_CIAppServiceConnectionStatics_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CApplicationModel_CAppService_CIAppServiceConnectionStatics __x_ABI_CWindows_CApplicationModel_CAppService_CIAppServiceConnectionStatics;

#endif // ____x_ABI_CWindows_CApplicationModel_CAppService_CIAppServiceConnectionStatics_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CApplicationModel_CAppService_CIAppServiceDeferral_FWD_DEFINED__
#define ____x_ABI_CWindows_CApplicationModel_CAppService_CIAppServiceDeferral_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CApplicationModel_CAppService_CIAppServiceDeferral __x_ABI_CWindows_CApplicationModel_CAppService_CIAppServiceDeferral;

#endif // ____x_ABI_CWindows_CApplicationModel_CAppService_CIAppServiceDeferral_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CApplicationModel_CAppService_CIAppServiceRequest_FWD_DEFINED__
#define ____x_ABI_CWindows_CApplicationModel_CAppService_CIAppServiceRequest_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CApplicationModel_CAppService_CIAppServiceRequest __x_ABI_CWindows_CApplicationModel_CAppService_CIAppServiceRequest;

#endif // ____x_ABI_CWindows_CApplicationModel_CAppService_CIAppServiceRequest_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CApplicationModel_CAppService_CIAppServiceRequestReceivedEventArgs_FWD_DEFINED__
#define ____x_ABI_CWindows_CApplicationModel_CAppService_CIAppServiceRequestReceivedEventArgs_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CApplicationModel_CAppService_CIAppServiceRequestReceivedEventArgs __x_ABI_CWindows_CApplicationModel_CAppService_CIAppServiceRequestReceivedEventArgs;

#endif // ____x_ABI_CWindows_CApplicationModel_CAppService_CIAppServiceRequestReceivedEventArgs_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CApplicationModel_CAppService_CIAppServiceResponse_FWD_DEFINED__
#define ____x_ABI_CWindows_CApplicationModel_CAppService_CIAppServiceResponse_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CApplicationModel_CAppService_CIAppServiceResponse __x_ABI_CWindows_CApplicationModel_CAppService_CIAppServiceResponse;

#endif // ____x_ABI_CWindows_CApplicationModel_CAppService_CIAppServiceResponse_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CApplicationModel_CAppService_CIAppServiceTriggerDetails_FWD_DEFINED__
#define ____x_ABI_CWindows_CApplicationModel_CAppService_CIAppServiceTriggerDetails_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CApplicationModel_CAppService_CIAppServiceTriggerDetails __x_ABI_CWindows_CApplicationModel_CAppService_CIAppServiceTriggerDetails;

#endif // ____x_ABI_CWindows_CApplicationModel_CAppService_CIAppServiceTriggerDetails_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CApplicationModel_CAppService_CIAppServiceTriggerDetails2_FWD_DEFINED__
#define ____x_ABI_CWindows_CApplicationModel_CAppService_CIAppServiceTriggerDetails2_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CApplicationModel_CAppService_CIAppServiceTriggerDetails2 __x_ABI_CWindows_CApplicationModel_CAppService_CIAppServiceTriggerDetails2;

#endif // ____x_ABI_CWindows_CApplicationModel_CAppService_CIAppServiceTriggerDetails2_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CApplicationModel_CAppService_CIAppServiceTriggerDetails3_FWD_DEFINED__
#define ____x_ABI_CWindows_CApplicationModel_CAppService_CIAppServiceTriggerDetails3_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CApplicationModel_CAppService_CIAppServiceTriggerDetails3 __x_ABI_CWindows_CApplicationModel_CAppService_CIAppServiceTriggerDetails3;

#endif // ____x_ABI_CWindows_CApplicationModel_CAppService_CIAppServiceTriggerDetails3_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CApplicationModel_CAppService_CIAppServiceTriggerDetails4_FWD_DEFINED__
#define ____x_ABI_CWindows_CApplicationModel_CAppService_CIAppServiceTriggerDetails4_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CApplicationModel_CAppService_CIAppServiceTriggerDetails4 __x_ABI_CWindows_CApplicationModel_CAppService_CIAppServiceTriggerDetails4;

#endif // ____x_ABI_CWindows_CApplicationModel_CAppService_CIAppServiceTriggerDetails4_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CApplicationModel_CAppService_CIStatelessAppServiceResponse_FWD_DEFINED__
#define ____x_ABI_CWindows_CApplicationModel_CAppService_CIStatelessAppServiceResponse_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CApplicationModel_CAppService_CIStatelessAppServiceResponse __x_ABI_CWindows_CApplicationModel_CAppService_CIStatelessAppServiceResponse;

#endif // ____x_ABI_CWindows_CApplicationModel_CAppService_CIStatelessAppServiceResponse_FWD_DEFINED__

// Parameterized interface forward declarations (C)

// Collection interface definitions

typedef interface __x_ABI_C__FIAsyncOperationCompletedHandler_1_boolean __x_ABI_C__FIAsyncOperationCompletedHandler_1_boolean;

#if !defined(____x_ABI_C__FIAsyncOperation_1_boolean_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIAsyncOperation_1_boolean_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIAsyncOperation_1_boolean __x_ABI_C__FIAsyncOperation_1_boolean;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIAsyncOperation_1_boolean;

    typedef struct __x_ABI_C__FIAsyncOperation_1_booleanVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIAsyncOperation_1_boolean* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIAsyncOperation_1_boolean* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIAsyncOperation_1_boolean* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIAsyncOperation_1_boolean* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIAsyncOperation_1_boolean* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIAsyncOperation_1_boolean* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* put_Completed)(__x_ABI_C__FIAsyncOperation_1_boolean* This,
        __x_ABI_C__FIAsyncOperationCompletedHandler_1_boolean* handler);
    HRESULT (STDMETHODCALLTYPE* get_Completed)(__x_ABI_C__FIAsyncOperation_1_boolean* This,
        __x_ABI_C__FIAsyncOperationCompletedHandler_1_boolean** result);
    HRESULT (STDMETHODCALLTYPE* GetResults)(__x_ABI_C__FIAsyncOperation_1_boolean* This,
        boolean* result);

        END_INTERFACE
    } __x_ABI_C__FIAsyncOperation_1_booleanVtbl;

    interface __x_ABI_C__FIAsyncOperation_1_boolean
    {
        CONST_VTBL struct __x_ABI_C__FIAsyncOperation_1_booleanVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIAsyncOperation_1_boolean_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIAsyncOperationCompletedHandler_1_boolean_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIAsyncOperationCompletedHandler_1_boolean_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIAsyncOperationCompletedHandler_1_boolean __x_ABI_C__FIAsyncOperationCompletedHandler_1_boolean;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIAsyncOperationCompletedHandler_1_boolean;

    typedef struct __x_ABI_C__FIAsyncOperationCompletedHandler_1_booleanVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIAsyncOperationCompletedHandler_1_boolean* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIAsyncOperationCompletedHandler_1_boolean* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIAsyncOperationCompletedHandler_1_boolean* This);
        HRESULT (STDMETHODCALLTYPE* Invoke)(__x_ABI_C__FIAsyncOperationCompletedHandler_1_boolean* This,
        __x_ABI_C__FIAsyncOperation_1_boolean* asyncInfo,
        enum __x_ABI_CWindows_CFoundation_CAsyncStatus asyncStatus);

        END_INTERFACE
    } __x_ABI_C__FIAsyncOperationCompletedHandler_1_booleanVtbl;

    interface __x_ABI_C__FIAsyncOperationCompletedHandler_1_boolean
    {
        CONST_VTBL struct __x_ABI_C__FIAsyncOperationCompletedHandler_1_booleanVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIAsyncOperationCompletedHandler_1_boolean_INTERFACE_DEFINED__
    
typedef enum __x_ABI_CWindows_CApplicationModel_CAppService_CAppServiceConnectionStatus __x_ABI_CWindows_CApplicationModel_CAppService_CAppServiceConnectionStatus;

typedef interface __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CAppService__CAppServiceConnectionStatus __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CAppService__CAppServiceConnectionStatus;

#if !defined(____x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CAppService__CAppServiceConnectionStatus_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CAppService__CAppServiceConnectionStatus_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CAppService__CAppServiceConnectionStatus __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CAppService__CAppServiceConnectionStatus;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CAppService__CAppServiceConnectionStatus;

    typedef struct __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CAppService__CAppServiceConnectionStatusVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CAppService__CAppServiceConnectionStatus* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CAppService__CAppServiceConnectionStatus* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CAppService__CAppServiceConnectionStatus* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CAppService__CAppServiceConnectionStatus* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CAppService__CAppServiceConnectionStatus* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CAppService__CAppServiceConnectionStatus* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* put_Completed)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CAppService__CAppServiceConnectionStatus* This,
        __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CAppService__CAppServiceConnectionStatus* handler);
    HRESULT (STDMETHODCALLTYPE* get_Completed)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CAppService__CAppServiceConnectionStatus* This,
        __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CAppService__CAppServiceConnectionStatus** result);
    HRESULT (STDMETHODCALLTYPE* GetResults)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CAppService__CAppServiceConnectionStatus* This,
        enum __x_ABI_CWindows_CApplicationModel_CAppService_CAppServiceConnectionStatus* result);

        END_INTERFACE
    } __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CAppService__CAppServiceConnectionStatusVtbl;

    interface __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CAppService__CAppServiceConnectionStatus
    {
        CONST_VTBL struct __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CAppService__CAppServiceConnectionStatusVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CAppService__CAppServiceConnectionStatus_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CAppService__CAppServiceConnectionStatus_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CAppService__CAppServiceConnectionStatus_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CAppService__CAppServiceConnectionStatus __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CAppService__CAppServiceConnectionStatus;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CAppService__CAppServiceConnectionStatus;

    typedef struct __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CAppService__CAppServiceConnectionStatusVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CAppService__CAppServiceConnectionStatus* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CAppService__CAppServiceConnectionStatus* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CAppService__CAppServiceConnectionStatus* This);
        HRESULT (STDMETHODCALLTYPE* Invoke)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CAppService__CAppServiceConnectionStatus* This,
        __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CAppService__CAppServiceConnectionStatus* asyncInfo,
        enum __x_ABI_CWindows_CFoundation_CAsyncStatus asyncStatus);

        END_INTERFACE
    } __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CAppService__CAppServiceConnectionStatusVtbl;

    interface __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CAppService__CAppServiceConnectionStatus
    {
        CONST_VTBL struct __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CAppService__CAppServiceConnectionStatusVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CAppService__CAppServiceConnectionStatus_INTERFACE_DEFINED__
    
typedef interface __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CAppService__CAppServiceResponse __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CAppService__CAppServiceResponse;

#if !defined(____x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CAppService__CAppServiceResponse_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CAppService__CAppServiceResponse_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CAppService__CAppServiceResponse __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CAppService__CAppServiceResponse;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CAppService__CAppServiceResponse;

    typedef struct __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CAppService__CAppServiceResponseVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CAppService__CAppServiceResponse* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CAppService__CAppServiceResponse* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CAppService__CAppServiceResponse* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CAppService__CAppServiceResponse* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CAppService__CAppServiceResponse* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CAppService__CAppServiceResponse* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* put_Completed)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CAppService__CAppServiceResponse* This,
        __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CAppService__CAppServiceResponse* handler);
    HRESULT (STDMETHODCALLTYPE* get_Completed)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CAppService__CAppServiceResponse* This,
        __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CAppService__CAppServiceResponse** result);
    HRESULT (STDMETHODCALLTYPE* GetResults)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CAppService__CAppServiceResponse* This,
        __x_ABI_CWindows_CApplicationModel_CAppService_CIAppServiceResponse** result);

        END_INTERFACE
    } __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CAppService__CAppServiceResponseVtbl;

    interface __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CAppService__CAppServiceResponse
    {
        CONST_VTBL struct __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CAppService__CAppServiceResponseVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CAppService__CAppServiceResponse_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CAppService__CAppServiceResponse_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CAppService__CAppServiceResponse_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CAppService__CAppServiceResponse __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CAppService__CAppServiceResponse;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CAppService__CAppServiceResponse;

    typedef struct __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CAppService__CAppServiceResponseVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CAppService__CAppServiceResponse* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CAppService__CAppServiceResponse* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CAppService__CAppServiceResponse* This);
        HRESULT (STDMETHODCALLTYPE* Invoke)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CAppService__CAppServiceResponse* This,
        __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CAppService__CAppServiceResponse* asyncInfo,
        enum __x_ABI_CWindows_CFoundation_CAsyncStatus asyncStatus);

        END_INTERFACE
    } __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CAppService__CAppServiceResponseVtbl;

    interface __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CAppService__CAppServiceResponse
    {
        CONST_VTBL struct __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CAppService__CAppServiceResponseVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CAppService__CAppServiceResponse_INTERFACE_DEFINED__
    
typedef enum __x_ABI_CWindows_CApplicationModel_CAppService_CAppServiceResponseStatus __x_ABI_CWindows_CApplicationModel_CAppService_CAppServiceResponseStatus;

typedef interface __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CAppService__CAppServiceResponseStatus __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CAppService__CAppServiceResponseStatus;

#if !defined(____x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CAppService__CAppServiceResponseStatus_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CAppService__CAppServiceResponseStatus_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CAppService__CAppServiceResponseStatus __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CAppService__CAppServiceResponseStatus;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CAppService__CAppServiceResponseStatus;

    typedef struct __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CAppService__CAppServiceResponseStatusVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CAppService__CAppServiceResponseStatus* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CAppService__CAppServiceResponseStatus* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CAppService__CAppServiceResponseStatus* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CAppService__CAppServiceResponseStatus* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CAppService__CAppServiceResponseStatus* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CAppService__CAppServiceResponseStatus* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* put_Completed)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CAppService__CAppServiceResponseStatus* This,
        __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CAppService__CAppServiceResponseStatus* handler);
    HRESULT (STDMETHODCALLTYPE* get_Completed)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CAppService__CAppServiceResponseStatus* This,
        __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CAppService__CAppServiceResponseStatus** result);
    HRESULT (STDMETHODCALLTYPE* GetResults)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CAppService__CAppServiceResponseStatus* This,
        enum __x_ABI_CWindows_CApplicationModel_CAppService_CAppServiceResponseStatus* result);

        END_INTERFACE
    } __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CAppService__CAppServiceResponseStatusVtbl;

    interface __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CAppService__CAppServiceResponseStatus
    {
        CONST_VTBL struct __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CAppService__CAppServiceResponseStatusVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CAppService__CAppServiceResponseStatus_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CAppService__CAppServiceResponseStatus_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CAppService__CAppServiceResponseStatus_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CAppService__CAppServiceResponseStatus __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CAppService__CAppServiceResponseStatus;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CAppService__CAppServiceResponseStatus;

    typedef struct __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CAppService__CAppServiceResponseStatusVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CAppService__CAppServiceResponseStatus* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CAppService__CAppServiceResponseStatus* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CAppService__CAppServiceResponseStatus* This);
        HRESULT (STDMETHODCALLTYPE* Invoke)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CAppService__CAppServiceResponseStatus* This,
        __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CAppService__CAppServiceResponseStatus* asyncInfo,
        enum __x_ABI_CWindows_CFoundation_CAsyncStatus asyncStatus);

        END_INTERFACE
    } __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CAppService__CAppServiceResponseStatusVtbl;

    interface __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CAppService__CAppServiceResponseStatus
    {
        CONST_VTBL struct __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CAppService__CAppServiceResponseStatusVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CAppService__CAppServiceResponseStatus_INTERFACE_DEFINED__
    
typedef interface __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CAppService__CStatelessAppServiceResponse __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CAppService__CStatelessAppServiceResponse;

#if !defined(____x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CAppService__CStatelessAppServiceResponse_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CAppService__CStatelessAppServiceResponse_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CAppService__CStatelessAppServiceResponse __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CAppService__CStatelessAppServiceResponse;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CAppService__CStatelessAppServiceResponse;

    typedef struct __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CAppService__CStatelessAppServiceResponseVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CAppService__CStatelessAppServiceResponse* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CAppService__CStatelessAppServiceResponse* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CAppService__CStatelessAppServiceResponse* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CAppService__CStatelessAppServiceResponse* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CAppService__CStatelessAppServiceResponse* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CAppService__CStatelessAppServiceResponse* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* put_Completed)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CAppService__CStatelessAppServiceResponse* This,
        __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CAppService__CStatelessAppServiceResponse* handler);
    HRESULT (STDMETHODCALLTYPE* get_Completed)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CAppService__CStatelessAppServiceResponse* This,
        __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CAppService__CStatelessAppServiceResponse** result);
    HRESULT (STDMETHODCALLTYPE* GetResults)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CAppService__CStatelessAppServiceResponse* This,
        __x_ABI_CWindows_CApplicationModel_CAppService_CIStatelessAppServiceResponse** result);

        END_INTERFACE
    } __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CAppService__CStatelessAppServiceResponseVtbl;

    interface __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CAppService__CStatelessAppServiceResponse
    {
        CONST_VTBL struct __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CAppService__CStatelessAppServiceResponseVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CAppService__CStatelessAppServiceResponse_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CAppService__CStatelessAppServiceResponse_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CAppService__CStatelessAppServiceResponse_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CAppService__CStatelessAppServiceResponse __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CAppService__CStatelessAppServiceResponse;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CAppService__CStatelessAppServiceResponse;

    typedef struct __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CAppService__CStatelessAppServiceResponseVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CAppService__CStatelessAppServiceResponse* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CAppService__CStatelessAppServiceResponse* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CAppService__CStatelessAppServiceResponse* This);
        HRESULT (STDMETHODCALLTYPE* Invoke)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CAppService__CStatelessAppServiceResponse* This,
        __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CAppService__CStatelessAppServiceResponse* asyncInfo,
        enum __x_ABI_CWindows_CFoundation_CAsyncStatus asyncStatus);

        END_INTERFACE
    } __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CAppService__CStatelessAppServiceResponseVtbl;

    interface __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CAppService__CStatelessAppServiceResponse
    {
        CONST_VTBL struct __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CAppService__CStatelessAppServiceResponseVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CAppService__CStatelessAppServiceResponse_INTERFACE_DEFINED__
    
#ifndef ____x_ABI_CWindows_CApplicationModel_CIAppInfo_FWD_DEFINED__
#define ____x_ABI_CWindows_CApplicationModel_CIAppInfo_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CApplicationModel_CIAppInfo __x_ABI_CWindows_CApplicationModel_CIAppInfo;

#endif // ____x_ABI_CWindows_CApplicationModel_CIAppInfo_FWD_DEFINED__

#if !defined(____x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CAppInfo_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CAppInfo_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CAppInfo __x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CAppInfo;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CAppInfo;

    typedef struct __x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CAppInfoVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CAppInfo* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CAppInfo* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CAppInfo* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CAppInfo* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CAppInfo* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CAppInfo* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Current)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CAppInfo* This,
        __x_ABI_CWindows_CApplicationModel_CIAppInfo** result);
    HRESULT (STDMETHODCALLTYPE* get_HasCurrent)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CAppInfo* This,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* MoveNext)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CAppInfo* This,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CAppInfo* This,
        UINT32 itemsLength,
        __x_ABI_CWindows_CApplicationModel_CIAppInfo** items,
        UINT32* result);

        END_INTERFACE
    } __x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CAppInfoVtbl;

    interface __x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CAppInfo
    {
        CONST_VTBL struct __x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CAppInfoVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CAppInfo_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CAppInfo_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CAppInfo_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CAppInfo __x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CAppInfo;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CAppInfo;

    typedef struct __x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CAppInfoVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CAppInfo* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CAppInfo* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CAppInfo* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CAppInfo* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CAppInfo* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CAppInfo* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* First)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CAppInfo* This,
        __x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CAppInfo** result);

        END_INTERFACE
    } __x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CAppInfoVtbl;

    interface __x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CAppInfo
    {
        CONST_VTBL struct __x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CAppInfoVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CAppInfo_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CAppInfo_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CAppInfo_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CAppInfo __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CAppInfo;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CAppInfo;

    typedef struct __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CAppInfoVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CAppInfo* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CAppInfo* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CAppInfo* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CAppInfo* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CAppInfo* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CAppInfo* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* GetAt)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CAppInfo* This,
        UINT32 index,
        __x_ABI_CWindows_CApplicationModel_CIAppInfo** result);
    HRESULT (STDMETHODCALLTYPE* get_Size)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CAppInfo* This,
        UINT32* result);
    HRESULT (STDMETHODCALLTYPE* IndexOf)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CAppInfo* This,
        __x_ABI_CWindows_CApplicationModel_CIAppInfo* value,
        UINT32* index,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CAppInfo* This,
        UINT32 startIndex,
        UINT32 itemsLength,
        __x_ABI_CWindows_CApplicationModel_CIAppInfo** items,
        UINT32* result);

        END_INTERFACE
    } __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CAppInfoVtbl;

    interface __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CAppInfo
    {
        CONST_VTBL struct __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CAppInfoVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CAppInfo_INTERFACE_DEFINED__
    
typedef interface __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CAppInfo __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CAppInfo;

#if !defined(____x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CAppInfo_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CAppInfo_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CAppInfo __x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CAppInfo;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CAppInfo;

    typedef struct __x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CAppInfoVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CAppInfo* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CAppInfo* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CAppInfo* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CAppInfo* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CAppInfo* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CAppInfo* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* put_Completed)(__x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CAppInfo* This,
        __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CAppInfo* handler);
    HRESULT (STDMETHODCALLTYPE* get_Completed)(__x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CAppInfo* This,
        __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CAppInfo** result);
    HRESULT (STDMETHODCALLTYPE* GetResults)(__x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CAppInfo* This,
        __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CAppInfo** result);

        END_INTERFACE
    } __x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CAppInfoVtbl;

    interface __x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CAppInfo
    {
        CONST_VTBL struct __x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CAppInfoVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CAppInfo_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CAppInfo_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CAppInfo_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CAppInfo __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CAppInfo;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CAppInfo;

    typedef struct __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CAppInfoVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CAppInfo* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CAppInfo* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CAppInfo* This);
        HRESULT (STDMETHODCALLTYPE* Invoke)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CAppInfo* This,
        __x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CAppInfo* asyncInfo,
        enum __x_ABI_CWindows_CFoundation_CAsyncStatus asyncStatus);

        END_INTERFACE
    } __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CAppInfoVtbl;

    interface __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CAppInfo
    {
        CONST_VTBL struct __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CAppInfoVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CAppInfo_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CApplicationModel__CAppService__CAppServiceConnection___x_ABI_CWindows__CApplicationModel__CAppService__CAppServiceClosedEventArgs_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CApplicationModel__CAppService__CAppServiceConnection___x_ABI_CWindows__CApplicationModel__CAppService__CAppServiceClosedEventArgs_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CApplicationModel__CAppService__CAppServiceConnection___x_ABI_CWindows__CApplicationModel__CAppService__CAppServiceClosedEventArgs __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CApplicationModel__CAppService__CAppServiceConnection___x_ABI_CWindows__CApplicationModel__CAppService__CAppServiceClosedEventArgs;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CApplicationModel__CAppService__CAppServiceConnection___x_ABI_CWindows__CApplicationModel__CAppService__CAppServiceClosedEventArgs;

    typedef struct __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CApplicationModel__CAppService__CAppServiceConnection___x_ABI_CWindows__CApplicationModel__CAppService__CAppServiceClosedEventArgsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CApplicationModel__CAppService__CAppServiceConnection___x_ABI_CWindows__CApplicationModel__CAppService__CAppServiceClosedEventArgs* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CApplicationModel__CAppService__CAppServiceConnection___x_ABI_CWindows__CApplicationModel__CAppService__CAppServiceClosedEventArgs* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CApplicationModel__CAppService__CAppServiceConnection___x_ABI_CWindows__CApplicationModel__CAppService__CAppServiceClosedEventArgs* This);
        HRESULT (STDMETHODCALLTYPE* Invoke)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CApplicationModel__CAppService__CAppServiceConnection___x_ABI_CWindows__CApplicationModel__CAppService__CAppServiceClosedEventArgs* This,
        __x_ABI_CWindows_CApplicationModel_CAppService_CIAppServiceConnection* sender,
        __x_ABI_CWindows_CApplicationModel_CAppService_CIAppServiceClosedEventArgs* args);

        END_INTERFACE
    } __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CApplicationModel__CAppService__CAppServiceConnection___x_ABI_CWindows__CApplicationModel__CAppService__CAppServiceClosedEventArgsVtbl;

    interface __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CApplicationModel__CAppService__CAppServiceConnection___x_ABI_CWindows__CApplicationModel__CAppService__CAppServiceClosedEventArgs
    {
        CONST_VTBL struct __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CApplicationModel__CAppService__CAppServiceConnection___x_ABI_CWindows__CApplicationModel__CAppService__CAppServiceClosedEventArgsVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CApplicationModel__CAppService__CAppServiceConnection___x_ABI_CWindows__CApplicationModel__CAppService__CAppServiceClosedEventArgs_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CApplicationModel__CAppService__CAppServiceConnection___x_ABI_CWindows__CApplicationModel__CAppService__CAppServiceRequestReceivedEventArgs_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CApplicationModel__CAppService__CAppServiceConnection___x_ABI_CWindows__CApplicationModel__CAppService__CAppServiceRequestReceivedEventArgs_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CApplicationModel__CAppService__CAppServiceConnection___x_ABI_CWindows__CApplicationModel__CAppService__CAppServiceRequestReceivedEventArgs __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CApplicationModel__CAppService__CAppServiceConnection___x_ABI_CWindows__CApplicationModel__CAppService__CAppServiceRequestReceivedEventArgs;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CApplicationModel__CAppService__CAppServiceConnection___x_ABI_CWindows__CApplicationModel__CAppService__CAppServiceRequestReceivedEventArgs;

    typedef struct __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CApplicationModel__CAppService__CAppServiceConnection___x_ABI_CWindows__CApplicationModel__CAppService__CAppServiceRequestReceivedEventArgsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CApplicationModel__CAppService__CAppServiceConnection___x_ABI_CWindows__CApplicationModel__CAppService__CAppServiceRequestReceivedEventArgs* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CApplicationModel__CAppService__CAppServiceConnection___x_ABI_CWindows__CApplicationModel__CAppService__CAppServiceRequestReceivedEventArgs* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CApplicationModel__CAppService__CAppServiceConnection___x_ABI_CWindows__CApplicationModel__CAppService__CAppServiceRequestReceivedEventArgs* This);
        HRESULT (STDMETHODCALLTYPE* Invoke)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CApplicationModel__CAppService__CAppServiceConnection___x_ABI_CWindows__CApplicationModel__CAppService__CAppServiceRequestReceivedEventArgs* This,
        __x_ABI_CWindows_CApplicationModel_CAppService_CIAppServiceConnection* sender,
        __x_ABI_CWindows_CApplicationModel_CAppService_CIAppServiceRequestReceivedEventArgs* args);

        END_INTERFACE
    } __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CApplicationModel__CAppService__CAppServiceConnection___x_ABI_CWindows__CApplicationModel__CAppService__CAppServiceRequestReceivedEventArgsVtbl;

    interface __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CApplicationModel__CAppService__CAppServiceConnection___x_ABI_CWindows__CApplicationModel__CAppService__CAppServiceRequestReceivedEventArgs
    {
        CONST_VTBL struct __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CApplicationModel__CAppService__CAppServiceConnection___x_ABI_CWindows__CApplicationModel__CAppService__CAppServiceRequestReceivedEventArgsVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CApplicationModel__CAppService__CAppServiceConnection___x_ABI_CWindows__CApplicationModel__CAppService__CAppServiceRequestReceivedEventArgs_INTERFACE_DEFINED__
    
typedef enum __x_ABI_CWindows_CFoundation_CAsyncStatus __x_ABI_CWindows_CFoundation_CAsyncStatus;

#ifndef ____x_ABI_CWindows_CFoundation_CCollections_CIPropertySet_FWD_DEFINED__
#define ____x_ABI_CWindows_CFoundation_CCollections_CIPropertySet_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CFoundation_CCollections_CIPropertySet __x_ABI_CWindows_CFoundation_CCollections_CIPropertySet;

#endif // ____x_ABI_CWindows_CFoundation_CCollections_CIPropertySet_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CFoundation_CIAsyncInfo_FWD_DEFINED__
#define ____x_ABI_CWindows_CFoundation_CIAsyncInfo_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CFoundation_CIAsyncInfo __x_ABI_CWindows_CFoundation_CIAsyncInfo;

#endif // ____x_ABI_CWindows_CFoundation_CIAsyncInfo_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CFoundation_CIClosable_FWD_DEFINED__
#define ____x_ABI_CWindows_CFoundation_CIClosable_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CFoundation_CIClosable __x_ABI_CWindows_CFoundation_CIClosable;

#endif // ____x_ABI_CWindows_CFoundation_CIClosable_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemConnectionRequest_FWD_DEFINED__
#define ____x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemConnectionRequest_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemConnectionRequest __x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemConnectionRequest;

#endif // ____x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemConnectionRequest_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CSystem_CIUser_FWD_DEFINED__
#define ____x_ABI_CWindows_CSystem_CIUser_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CSystem_CIUser __x_ABI_CWindows_CSystem_CIUser;

#endif // ____x_ABI_CWindows_CSystem_CIUser_FWD_DEFINED__

typedef enum __x_ABI_CWindows_CApplicationModel_CAppService_CAppServiceClosedStatus __x_ABI_CWindows_CApplicationModel_CAppService_CAppServiceClosedStatus;

typedef enum __x_ABI_CWindows_CApplicationModel_CAppService_CStatelessAppServiceResponseStatus __x_ABI_CWindows_CApplicationModel_CAppService_CStatelessAppServiceResponseStatus;

enum __x_ABI_CWindows_CApplicationModel_CAppService_CAppServiceClosedStatus
    {
        __x_ABI_CWindows_CApplicationModel_CAppService_CAppServiceClosedStatus_Completed = 0,
    __x_ABI_CWindows_CApplicationModel_CAppService_CAppServiceClosedStatus_Canceled = 1,
    __x_ABI_CWindows_CApplicationModel_CAppService_CAppServiceClosedStatus_ResourceLimitsExceeded = 2,
    __x_ABI_CWindows_CApplicationModel_CAppService_CAppServiceClosedStatus_Unknown = 3,
};

enum __x_ABI_CWindows_CApplicationModel_CAppService_CAppServiceConnectionStatus
    {
        __x_ABI_CWindows_CApplicationModel_CAppService_CAppServiceConnectionStatus_Success = 0,
    __x_ABI_CWindows_CApplicationModel_CAppService_CAppServiceConnectionStatus_AppNotInstalled = 1,
    __x_ABI_CWindows_CApplicationModel_CAppService_CAppServiceConnectionStatus_AppUnavailable = 2,
    __x_ABI_CWindows_CApplicationModel_CAppService_CAppServiceConnectionStatus_AppServiceUnavailable = 3,
    __x_ABI_CWindows_CApplicationModel_CAppService_CAppServiceConnectionStatus_Unknown = 4,
    __x_ABI_CWindows_CApplicationModel_CAppService_CAppServiceConnectionStatus_RemoteSystemUnavailable = 5,
    __x_ABI_CWindows_CApplicationModel_CAppService_CAppServiceConnectionStatus_RemoteSystemNotSupportedByApp = 6,
    __x_ABI_CWindows_CApplicationModel_CAppService_CAppServiceConnectionStatus_NotAuthorized = 7,
};

enum __x_ABI_CWindows_CApplicationModel_CAppService_CAppServiceResponseStatus
    {
        __x_ABI_CWindows_CApplicationModel_CAppService_CAppServiceResponseStatus_Success = 0,
    __x_ABI_CWindows_CApplicationModel_CAppService_CAppServiceResponseStatus_Failure = 1,
    __x_ABI_CWindows_CApplicationModel_CAppService_CAppServiceResponseStatus_ResourceLimitsExceeded = 2,
    __x_ABI_CWindows_CApplicationModel_CAppService_CAppServiceResponseStatus_Unknown = 3,
    __x_ABI_CWindows_CApplicationModel_CAppService_CAppServiceResponseStatus_RemoteSystemUnavailable = 4,
    __x_ABI_CWindows_CApplicationModel_CAppService_CAppServiceResponseStatus_MessageSizeTooLarge = 5,
};

enum __x_ABI_CWindows_CApplicationModel_CAppService_CStatelessAppServiceResponseStatus
    {
        __x_ABI_CWindows_CApplicationModel_CAppService_CStatelessAppServiceResponseStatus_Success = 0,
    __x_ABI_CWindows_CApplicationModel_CAppService_CStatelessAppServiceResponseStatus_AppNotInstalled = 1,
    __x_ABI_CWindows_CApplicationModel_CAppService_CStatelessAppServiceResponseStatus_AppUnavailable = 2,
    __x_ABI_CWindows_CApplicationModel_CAppService_CStatelessAppServiceResponseStatus_AppServiceUnavailable = 3,
    __x_ABI_CWindows_CApplicationModel_CAppService_CStatelessAppServiceResponseStatus_RemoteSystemUnavailable = 4,
    __x_ABI_CWindows_CApplicationModel_CAppService_CStatelessAppServiceResponseStatus_RemoteSystemNotSupportedByApp = 5,
    __x_ABI_CWindows_CApplicationModel_CAppService_CStatelessAppServiceResponseStatus_NotAuthorized = 6,
    __x_ABI_CWindows_CApplicationModel_CAppService_CStatelessAppServiceResponseStatus_ResourceLimitsExceeded = 7,
    __x_ABI_CWindows_CApplicationModel_CAppService_CStatelessAppServiceResponseStatus_MessageSizeTooLarge = 8,
    __x_ABI_CWindows_CApplicationModel_CAppService_CStatelessAppServiceResponseStatus_Failure = 9,
    __x_ABI_CWindows_CApplicationModel_CAppService_CStatelessAppServiceResponseStatus_Unknown = 10,
};

#if !defined(____x_ABI_CWindows_CApplicationModel_CAppService_CIAppServiceCatalogStatics_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CApplicationModel_CAppService_CIAppServiceCatalogStatics_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CApplicationModel_CAppService_CIAppServiceCatalogStaticsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CApplicationModel_CAppService_CIAppServiceCatalogStatics* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CApplicationModel_CAppService_CIAppServiceCatalogStatics* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CApplicationModel_CAppService_CIAppServiceCatalogStatics* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CApplicationModel_CAppService_CIAppServiceCatalogStatics* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CApplicationModel_CAppService_CIAppServiceCatalogStatics* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CApplicationModel_CAppService_CIAppServiceCatalogStatics* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* FindAppServiceProvidersAsync)(__x_ABI_CWindows_CApplicationModel_CAppService_CIAppServiceCatalogStatics* This,
        HSTRING appServiceName,
        __x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CAppInfo** operation);

        END_INTERFACE
    } __x_ABI_CWindows_CApplicationModel_CAppService_CIAppServiceCatalogStaticsVtbl;

    interface __x_ABI_CWindows_CApplicationModel_CAppService_CIAppServiceCatalogStatics
    {
        CONST_VTBL struct __x_ABI_CWindows_CApplicationModel_CAppService_CIAppServiceCatalogStaticsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CApplicationModel_CAppService_CIAppServiceCatalogStatics;
#endif /* !defined(____x_ABI_CWindows_CApplicationModel_CAppService_CIAppServiceCatalogStatics_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CApplicationModel_CAppService_CIAppServiceClosedEventArgs_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CApplicationModel_CAppService_CIAppServiceClosedEventArgs_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CApplicationModel_CAppService_CIAppServiceClosedEventArgsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CApplicationModel_CAppService_CIAppServiceClosedEventArgs* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CApplicationModel_CAppService_CIAppServiceClosedEventArgs* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CApplicationModel_CAppService_CIAppServiceClosedEventArgs* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CApplicationModel_CAppService_CIAppServiceClosedEventArgs* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CApplicationModel_CAppService_CIAppServiceClosedEventArgs* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CApplicationModel_CAppService_CIAppServiceClosedEventArgs* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Status)(__x_ABI_CWindows_CApplicationModel_CAppService_CIAppServiceClosedEventArgs* This,
        enum __x_ABI_CWindows_CApplicationModel_CAppService_CAppServiceClosedStatus* value);

        END_INTERFACE
    } __x_ABI_CWindows_CApplicationModel_CAppService_CIAppServiceClosedEventArgsVtbl;

    interface __x_ABI_CWindows_CApplicationModel_CAppService_CIAppServiceClosedEventArgs
    {
        CONST_VTBL struct __x_ABI_CWindows_CApplicationModel_CAppService_CIAppServiceClosedEventArgsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CApplicationModel_CAppService_CIAppServiceClosedEventArgs;
#endif /* !defined(____x_ABI_CWindows_CApplicationModel_CAppService_CIAppServiceClosedEventArgs_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CApplicationModel_CAppService_CIAppServiceConnection_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CApplicationModel_CAppService_CIAppServiceConnection_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CApplicationModel_CAppService_CIAppServiceConnectionVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CApplicationModel_CAppService_CIAppServiceConnection* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CApplicationModel_CAppService_CIAppServiceConnection* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CApplicationModel_CAppService_CIAppServiceConnection* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CApplicationModel_CAppService_CIAppServiceConnection* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CApplicationModel_CAppService_CIAppServiceConnection* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CApplicationModel_CAppService_CIAppServiceConnection* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_AppServiceName)(__x_ABI_CWindows_CApplicationModel_CAppService_CIAppServiceConnection* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* put_AppServiceName)(__x_ABI_CWindows_CApplicationModel_CAppService_CIAppServiceConnection* This,
        HSTRING value);
    HRESULT (STDMETHODCALLTYPE* get_PackageFamilyName)(__x_ABI_CWindows_CApplicationModel_CAppService_CIAppServiceConnection* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* put_PackageFamilyName)(__x_ABI_CWindows_CApplicationModel_CAppService_CIAppServiceConnection* This,
        HSTRING value);
    HRESULT (STDMETHODCALLTYPE* OpenAsync)(__x_ABI_CWindows_CApplicationModel_CAppService_CIAppServiceConnection* This,
        __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CAppService__CAppServiceConnectionStatus** operation);
    HRESULT (STDMETHODCALLTYPE* SendMessageAsync)(__x_ABI_CWindows_CApplicationModel_CAppService_CIAppServiceConnection* This,
        __x_ABI_CWindows_CFoundation_CCollections_CIPropertySet* message,
        __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CAppService__CAppServiceResponse** operation);
    HRESULT (STDMETHODCALLTYPE* add_RequestReceived)(__x_ABI_CWindows_CApplicationModel_CAppService_CIAppServiceConnection* This,
        __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CApplicationModel__CAppService__CAppServiceConnection___x_ABI_CWindows__CApplicationModel__CAppService__CAppServiceRequestReceivedEventArgs* handler,
        EventRegistrationToken* token);
    HRESULT (STDMETHODCALLTYPE* remove_RequestReceived)(__x_ABI_CWindows_CApplicationModel_CAppService_CIAppServiceConnection* This,
        EventRegistrationToken token);
    HRESULT (STDMETHODCALLTYPE* add_ServiceClosed)(__x_ABI_CWindows_CApplicationModel_CAppService_CIAppServiceConnection* This,
        __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CApplicationModel__CAppService__CAppServiceConnection___x_ABI_CWindows__CApplicationModel__CAppService__CAppServiceClosedEventArgs* handler,
        EventRegistrationToken* token);
    HRESULT (STDMETHODCALLTYPE* remove_ServiceClosed)(__x_ABI_CWindows_CApplicationModel_CAppService_CIAppServiceConnection* This,
        EventRegistrationToken token);

        END_INTERFACE
    } __x_ABI_CWindows_CApplicationModel_CAppService_CIAppServiceConnectionVtbl;

    interface __x_ABI_CWindows_CApplicationModel_CAppService_CIAppServiceConnection
    {
        CONST_VTBL struct __x_ABI_CWindows_CApplicationModel_CAppService_CIAppServiceConnectionVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CApplicationModel_CAppService_CIAppServiceConnection;
#endif /* !defined(____x_ABI_CWindows_CApplicationModel_CAppService_CIAppServiceConnection_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CApplicationModel_CAppService_CIAppServiceConnection2_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CApplicationModel_CAppService_CIAppServiceConnection2_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CApplicationModel_CAppService_CIAppServiceConnection2Vtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CApplicationModel_CAppService_CIAppServiceConnection2* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CApplicationModel_CAppService_CIAppServiceConnection2* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CApplicationModel_CAppService_CIAppServiceConnection2* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CApplicationModel_CAppService_CIAppServiceConnection2* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CApplicationModel_CAppService_CIAppServiceConnection2* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CApplicationModel_CAppService_CIAppServiceConnection2* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* OpenRemoteAsync)(__x_ABI_CWindows_CApplicationModel_CAppService_CIAppServiceConnection2* This,
        __x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemConnectionRequest* remoteSystemConnectionRequest,
        __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CAppService__CAppServiceConnectionStatus** operation);
    HRESULT (STDMETHODCALLTYPE* get_User)(__x_ABI_CWindows_CApplicationModel_CAppService_CIAppServiceConnection2* This,
        __x_ABI_CWindows_CSystem_CIUser** value);
    HRESULT (STDMETHODCALLTYPE* put_User)(__x_ABI_CWindows_CApplicationModel_CAppService_CIAppServiceConnection2* This,
        __x_ABI_CWindows_CSystem_CIUser* value);

        END_INTERFACE
    } __x_ABI_CWindows_CApplicationModel_CAppService_CIAppServiceConnection2Vtbl;

    interface __x_ABI_CWindows_CApplicationModel_CAppService_CIAppServiceConnection2
    {
        CONST_VTBL struct __x_ABI_CWindows_CApplicationModel_CAppService_CIAppServiceConnection2Vtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CApplicationModel_CAppService_CIAppServiceConnection2;
#endif /* !defined(____x_ABI_CWindows_CApplicationModel_CAppService_CIAppServiceConnection2_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CApplicationModel_CAppService_CIAppServiceConnectionStatics_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CApplicationModel_CAppService_CIAppServiceConnectionStatics_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CApplicationModel_CAppService_CIAppServiceConnectionStaticsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CApplicationModel_CAppService_CIAppServiceConnectionStatics* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CApplicationModel_CAppService_CIAppServiceConnectionStatics* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CApplicationModel_CAppService_CIAppServiceConnectionStatics* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CApplicationModel_CAppService_CIAppServiceConnectionStatics* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CApplicationModel_CAppService_CIAppServiceConnectionStatics* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CApplicationModel_CAppService_CIAppServiceConnectionStatics* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* SendStatelessMessageAsync)(__x_ABI_CWindows_CApplicationModel_CAppService_CIAppServiceConnectionStatics* This,
        __x_ABI_CWindows_CApplicationModel_CAppService_CIAppServiceConnection* connection,
        __x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemConnectionRequest* connectionRequest,
        __x_ABI_CWindows_CFoundation_CCollections_CIPropertySet* message,
        __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CAppService__CStatelessAppServiceResponse** operation);

        END_INTERFACE
    } __x_ABI_CWindows_CApplicationModel_CAppService_CIAppServiceConnectionStaticsVtbl;

    interface __x_ABI_CWindows_CApplicationModel_CAppService_CIAppServiceConnectionStatics
    {
        CONST_VTBL struct __x_ABI_CWindows_CApplicationModel_CAppService_CIAppServiceConnectionStaticsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CApplicationModel_CAppService_CIAppServiceConnectionStatics;
#endif /* !defined(____x_ABI_CWindows_CApplicationModel_CAppService_CIAppServiceConnectionStatics_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CApplicationModel_CAppService_CIAppServiceDeferral_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CApplicationModel_CAppService_CIAppServiceDeferral_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CApplicationModel_CAppService_CIAppServiceDeferralVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CApplicationModel_CAppService_CIAppServiceDeferral* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CApplicationModel_CAppService_CIAppServiceDeferral* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CApplicationModel_CAppService_CIAppServiceDeferral* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CApplicationModel_CAppService_CIAppServiceDeferral* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CApplicationModel_CAppService_CIAppServiceDeferral* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CApplicationModel_CAppService_CIAppServiceDeferral* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* Complete)(__x_ABI_CWindows_CApplicationModel_CAppService_CIAppServiceDeferral* This);

        END_INTERFACE
    } __x_ABI_CWindows_CApplicationModel_CAppService_CIAppServiceDeferralVtbl;

    interface __x_ABI_CWindows_CApplicationModel_CAppService_CIAppServiceDeferral
    {
        CONST_VTBL struct __x_ABI_CWindows_CApplicationModel_CAppService_CIAppServiceDeferralVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CApplicationModel_CAppService_CIAppServiceDeferral;
#endif /* !defined(____x_ABI_CWindows_CApplicationModel_CAppService_CIAppServiceDeferral_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CApplicationModel_CAppService_CIAppServiceRequest_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CApplicationModel_CAppService_CIAppServiceRequest_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CApplicationModel_CAppService_CIAppServiceRequestVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CApplicationModel_CAppService_CIAppServiceRequest* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CApplicationModel_CAppService_CIAppServiceRequest* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CApplicationModel_CAppService_CIAppServiceRequest* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CApplicationModel_CAppService_CIAppServiceRequest* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CApplicationModel_CAppService_CIAppServiceRequest* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CApplicationModel_CAppService_CIAppServiceRequest* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Message)(__x_ABI_CWindows_CApplicationModel_CAppService_CIAppServiceRequest* This,
        __x_ABI_CWindows_CFoundation_CCollections_CIPropertySet** value);
    HRESULT (STDMETHODCALLTYPE* SendResponseAsync)(__x_ABI_CWindows_CApplicationModel_CAppService_CIAppServiceRequest* This,
        __x_ABI_CWindows_CFoundation_CCollections_CIPropertySet* message,
        __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CAppService__CAppServiceResponseStatus** operation);

        END_INTERFACE
    } __x_ABI_CWindows_CApplicationModel_CAppService_CIAppServiceRequestVtbl;

    interface __x_ABI_CWindows_CApplicationModel_CAppService_CIAppServiceRequest
    {
        CONST_VTBL struct __x_ABI_CWindows_CApplicationModel_CAppService_CIAppServiceRequestVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CApplicationModel_CAppService_CIAppServiceRequest;
#endif /* !defined(____x_ABI_CWindows_CApplicationModel_CAppService_CIAppServiceRequest_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CApplicationModel_CAppService_CIAppServiceRequestReceivedEventArgs_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CApplicationModel_CAppService_CIAppServiceRequestReceivedEventArgs_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CApplicationModel_CAppService_CIAppServiceRequestReceivedEventArgsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CApplicationModel_CAppService_CIAppServiceRequestReceivedEventArgs* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CApplicationModel_CAppService_CIAppServiceRequestReceivedEventArgs* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CApplicationModel_CAppService_CIAppServiceRequestReceivedEventArgs* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CApplicationModel_CAppService_CIAppServiceRequestReceivedEventArgs* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CApplicationModel_CAppService_CIAppServiceRequestReceivedEventArgs* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CApplicationModel_CAppService_CIAppServiceRequestReceivedEventArgs* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Request)(__x_ABI_CWindows_CApplicationModel_CAppService_CIAppServiceRequestReceivedEventArgs* This,
        __x_ABI_CWindows_CApplicationModel_CAppService_CIAppServiceRequest** value);
    HRESULT (STDMETHODCALLTYPE* GetDeferral)(__x_ABI_CWindows_CApplicationModel_CAppService_CIAppServiceRequestReceivedEventArgs* This,
        __x_ABI_CWindows_CApplicationModel_CAppService_CIAppServiceDeferral** result);

        END_INTERFACE
    } __x_ABI_CWindows_CApplicationModel_CAppService_CIAppServiceRequestReceivedEventArgsVtbl;

    interface __x_ABI_CWindows_CApplicationModel_CAppService_CIAppServiceRequestReceivedEventArgs
    {
        CONST_VTBL struct __x_ABI_CWindows_CApplicationModel_CAppService_CIAppServiceRequestReceivedEventArgsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CApplicationModel_CAppService_CIAppServiceRequestReceivedEventArgs;
#endif /* !defined(____x_ABI_CWindows_CApplicationModel_CAppService_CIAppServiceRequestReceivedEventArgs_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CApplicationModel_CAppService_CIAppServiceResponse_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CApplicationModel_CAppService_CIAppServiceResponse_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CApplicationModel_CAppService_CIAppServiceResponseVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CApplicationModel_CAppService_CIAppServiceResponse* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CApplicationModel_CAppService_CIAppServiceResponse* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CApplicationModel_CAppService_CIAppServiceResponse* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CApplicationModel_CAppService_CIAppServiceResponse* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CApplicationModel_CAppService_CIAppServiceResponse* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CApplicationModel_CAppService_CIAppServiceResponse* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Message)(__x_ABI_CWindows_CApplicationModel_CAppService_CIAppServiceResponse* This,
        __x_ABI_CWindows_CFoundation_CCollections_CIPropertySet** value);
    HRESULT (STDMETHODCALLTYPE* get_Status)(__x_ABI_CWindows_CApplicationModel_CAppService_CIAppServiceResponse* This,
        enum __x_ABI_CWindows_CApplicationModel_CAppService_CAppServiceResponseStatus* value);

        END_INTERFACE
    } __x_ABI_CWindows_CApplicationModel_CAppService_CIAppServiceResponseVtbl;

    interface __x_ABI_CWindows_CApplicationModel_CAppService_CIAppServiceResponse
    {
        CONST_VTBL struct __x_ABI_CWindows_CApplicationModel_CAppService_CIAppServiceResponseVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CApplicationModel_CAppService_CIAppServiceResponse;
#endif /* !defined(____x_ABI_CWindows_CApplicationModel_CAppService_CIAppServiceResponse_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CApplicationModel_CAppService_CIAppServiceTriggerDetails_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CApplicationModel_CAppService_CIAppServiceTriggerDetails_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CApplicationModel_CAppService_CIAppServiceTriggerDetailsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CApplicationModel_CAppService_CIAppServiceTriggerDetails* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CApplicationModel_CAppService_CIAppServiceTriggerDetails* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CApplicationModel_CAppService_CIAppServiceTriggerDetails* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CApplicationModel_CAppService_CIAppServiceTriggerDetails* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CApplicationModel_CAppService_CIAppServiceTriggerDetails* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CApplicationModel_CAppService_CIAppServiceTriggerDetails* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Name)(__x_ABI_CWindows_CApplicationModel_CAppService_CIAppServiceTriggerDetails* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* get_CallerPackageFamilyName)(__x_ABI_CWindows_CApplicationModel_CAppService_CIAppServiceTriggerDetails* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* get_AppServiceConnection)(__x_ABI_CWindows_CApplicationModel_CAppService_CIAppServiceTriggerDetails* This,
        __x_ABI_CWindows_CApplicationModel_CAppService_CIAppServiceConnection** value);

        END_INTERFACE
    } __x_ABI_CWindows_CApplicationModel_CAppService_CIAppServiceTriggerDetailsVtbl;

    interface __x_ABI_CWindows_CApplicationModel_CAppService_CIAppServiceTriggerDetails
    {
        CONST_VTBL struct __x_ABI_CWindows_CApplicationModel_CAppService_CIAppServiceTriggerDetailsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CApplicationModel_CAppService_CIAppServiceTriggerDetails;
#endif /* !defined(____x_ABI_CWindows_CApplicationModel_CAppService_CIAppServiceTriggerDetails_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CApplicationModel_CAppService_CIAppServiceTriggerDetails2_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CApplicationModel_CAppService_CIAppServiceTriggerDetails2_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CApplicationModel_CAppService_CIAppServiceTriggerDetails2Vtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CApplicationModel_CAppService_CIAppServiceTriggerDetails2* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CApplicationModel_CAppService_CIAppServiceTriggerDetails2* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CApplicationModel_CAppService_CIAppServiceTriggerDetails2* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CApplicationModel_CAppService_CIAppServiceTriggerDetails2* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CApplicationModel_CAppService_CIAppServiceTriggerDetails2* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CApplicationModel_CAppService_CIAppServiceTriggerDetails2* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_IsRemoteSystemConnection)(__x_ABI_CWindows_CApplicationModel_CAppService_CIAppServiceTriggerDetails2* This,
        boolean* value);

        END_INTERFACE
    } __x_ABI_CWindows_CApplicationModel_CAppService_CIAppServiceTriggerDetails2Vtbl;

    interface __x_ABI_CWindows_CApplicationModel_CAppService_CIAppServiceTriggerDetails2
    {
        CONST_VTBL struct __x_ABI_CWindows_CApplicationModel_CAppService_CIAppServiceTriggerDetails2Vtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CApplicationModel_CAppService_CIAppServiceTriggerDetails2;
#endif /* !defined(____x_ABI_CWindows_CApplicationModel_CAppService_CIAppServiceTriggerDetails2_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CApplicationModel_CAppService_CIAppServiceTriggerDetails3_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CApplicationModel_CAppService_CIAppServiceTriggerDetails3_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CApplicationModel_CAppService_CIAppServiceTriggerDetails3Vtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CApplicationModel_CAppService_CIAppServiceTriggerDetails3* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CApplicationModel_CAppService_CIAppServiceTriggerDetails3* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CApplicationModel_CAppService_CIAppServiceTriggerDetails3* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CApplicationModel_CAppService_CIAppServiceTriggerDetails3* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CApplicationModel_CAppService_CIAppServiceTriggerDetails3* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CApplicationModel_CAppService_CIAppServiceTriggerDetails3* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* CheckCallerForCapabilityAsync)(__x_ABI_CWindows_CApplicationModel_CAppService_CIAppServiceTriggerDetails3* This,
        HSTRING capabilityName,
        __x_ABI_C__FIAsyncOperation_1_boolean** operation);

        END_INTERFACE
    } __x_ABI_CWindows_CApplicationModel_CAppService_CIAppServiceTriggerDetails3Vtbl;

    interface __x_ABI_CWindows_CApplicationModel_CAppService_CIAppServiceTriggerDetails3
    {
        CONST_VTBL struct __x_ABI_CWindows_CApplicationModel_CAppService_CIAppServiceTriggerDetails3Vtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CApplicationModel_CAppService_CIAppServiceTriggerDetails3;
#endif /* !defined(____x_ABI_CWindows_CApplicationModel_CAppService_CIAppServiceTriggerDetails3_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CApplicationModel_CAppService_CIAppServiceTriggerDetails4_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CApplicationModel_CAppService_CIAppServiceTriggerDetails4_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CApplicationModel_CAppService_CIAppServiceTriggerDetails4Vtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CApplicationModel_CAppService_CIAppServiceTriggerDetails4* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CApplicationModel_CAppService_CIAppServiceTriggerDetails4* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CApplicationModel_CAppService_CIAppServiceTriggerDetails4* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CApplicationModel_CAppService_CIAppServiceTriggerDetails4* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CApplicationModel_CAppService_CIAppServiceTriggerDetails4* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CApplicationModel_CAppService_CIAppServiceTriggerDetails4* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_CallerRemoteConnectionToken)(__x_ABI_CWindows_CApplicationModel_CAppService_CIAppServiceTriggerDetails4* This,
        HSTRING* value);

        END_INTERFACE
    } __x_ABI_CWindows_CApplicationModel_CAppService_CIAppServiceTriggerDetails4Vtbl;

    interface __x_ABI_CWindows_CApplicationModel_CAppService_CIAppServiceTriggerDetails4
    {
        CONST_VTBL struct __x_ABI_CWindows_CApplicationModel_CAppService_CIAppServiceTriggerDetails4Vtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CApplicationModel_CAppService_CIAppServiceTriggerDetails4;
#endif /* !defined(____x_ABI_CWindows_CApplicationModel_CAppService_CIAppServiceTriggerDetails4_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CApplicationModel_CAppService_CIStatelessAppServiceResponse_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CApplicationModel_CAppService_CIStatelessAppServiceResponse_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CApplicationModel_CAppService_CIStatelessAppServiceResponseVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CApplicationModel_CAppService_CIStatelessAppServiceResponse* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CApplicationModel_CAppService_CIStatelessAppServiceResponse* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CApplicationModel_CAppService_CIStatelessAppServiceResponse* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CApplicationModel_CAppService_CIStatelessAppServiceResponse* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CApplicationModel_CAppService_CIStatelessAppServiceResponse* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CApplicationModel_CAppService_CIStatelessAppServiceResponse* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Message)(__x_ABI_CWindows_CApplicationModel_CAppService_CIStatelessAppServiceResponse* This,
        __x_ABI_CWindows_CFoundation_CCollections_CIPropertySet** value);
    HRESULT (STDMETHODCALLTYPE* get_Status)(__x_ABI_CWindows_CApplicationModel_CAppService_CIStatelessAppServiceResponse* This,
        enum __x_ABI_CWindows_CApplicationModel_CAppService_CStatelessAppServiceResponseStatus* value);

        END_INTERFACE
    } __x_ABI_CWindows_CApplicationModel_CAppService_CIStatelessAppServiceResponseVtbl;

    interface __x_ABI_CWindows_CApplicationModel_CAppService_CIStatelessAppServiceResponse
    {
        CONST_VTBL struct __x_ABI_CWindows_CApplicationModel_CAppService_CIStatelessAppServiceResponseVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CApplicationModel_CAppService_CIStatelessAppServiceResponse;
#endif /* !defined(____x_ABI_CWindows_CApplicationModel_CAppService_CIStatelessAppServiceResponse_INTERFACE_DEFINED__) */
    
