// WARNING: Please don't edit this file. It was generated by Swift/WinRT v0.0.1

#pragma once
// Header files for imported files
#include <inspectable.h>
#include <EventToken.h>
#include <windowscontracts.h>
#include "Windows.Foundation.h"
// Importing Collections header
#include "Windows.Foundation.Collections.h"

/* Forward Declarations */
#ifndef ____x_ABI_CWindows_CEmbedded_CDeviceLockdown_CIDeviceLockdownProfileInformation_FWD_DEFINED__
#define ____x_ABI_CWindows_CEmbedded_CDeviceLockdown_CIDeviceLockdownProfileInformation_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CEmbedded_CDeviceLockdown_CIDeviceLockdownProfileInformation __x_ABI_CWindows_CEmbedded_CDeviceLockdown_CIDeviceLockdownProfileInformation;

#endif // ____x_ABI_CWindows_CEmbedded_CDeviceLockdown_CIDeviceLockdownProfileInformation_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CEmbedded_CDeviceLockdown_CIDeviceLockdownProfileStatics_FWD_DEFINED__
#define ____x_ABI_CWindows_CEmbedded_CDeviceLockdown_CIDeviceLockdownProfileStatics_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CEmbedded_CDeviceLockdown_CIDeviceLockdownProfileStatics __x_ABI_CWindows_CEmbedded_CDeviceLockdown_CIDeviceLockdownProfileStatics;

#endif // ____x_ABI_CWindows_CEmbedded_CDeviceLockdown_CIDeviceLockdownProfileStatics_FWD_DEFINED__

// Parameterized interface forward declarations (C)

// Collection interface definitions

#if !defined(____x_ABI_C__FIIterator_1_GUID_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIIterator_1_GUID_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIIterator_1_GUID __x_ABI_C__FIIterator_1_GUID;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIIterator_1_GUID;

    typedef struct __x_ABI_C__FIIterator_1_GUIDVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIIterator_1_GUID* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIIterator_1_GUID* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIIterator_1_GUID* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIIterator_1_GUID* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIIterator_1_GUID* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIIterator_1_GUID* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Current)(__x_ABI_C__FIIterator_1_GUID* This,
        GUID* result);
    HRESULT (STDMETHODCALLTYPE* get_HasCurrent)(__x_ABI_C__FIIterator_1_GUID* This,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* MoveNext)(__x_ABI_C__FIIterator_1_GUID* This,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__x_ABI_C__FIIterator_1_GUID* This,
        UINT32 itemsLength,
        GUID* items,
        UINT32* result);

        END_INTERFACE
    } __x_ABI_C__FIIterator_1_GUIDVtbl;

    interface __x_ABI_C__FIIterator_1_GUID
    {
        CONST_VTBL struct __x_ABI_C__FIIterator_1_GUIDVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIIterator_1_GUID_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIIterable_1_GUID_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIIterable_1_GUID_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIIterable_1_GUID __x_ABI_C__FIIterable_1_GUID;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIIterable_1_GUID;

    typedef struct __x_ABI_C__FIIterable_1_GUIDVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIIterable_1_GUID* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIIterable_1_GUID* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIIterable_1_GUID* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIIterable_1_GUID* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIIterable_1_GUID* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIIterable_1_GUID* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* First)(__x_ABI_C__FIIterable_1_GUID* This,
        __x_ABI_C__FIIterator_1_GUID** result);

        END_INTERFACE
    } __x_ABI_C__FIIterable_1_GUIDVtbl;

    interface __x_ABI_C__FIIterable_1_GUID
    {
        CONST_VTBL struct __x_ABI_C__FIIterable_1_GUIDVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIIterable_1_GUID_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIVectorView_1_GUID_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIVectorView_1_GUID_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIVectorView_1_GUID __x_ABI_C__FIVectorView_1_GUID;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIVectorView_1_GUID;

    typedef struct __x_ABI_C__FIVectorView_1_GUIDVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIVectorView_1_GUID* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIVectorView_1_GUID* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIVectorView_1_GUID* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIVectorView_1_GUID* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIVectorView_1_GUID* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIVectorView_1_GUID* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* GetAt)(__x_ABI_C__FIVectorView_1_GUID* This,
        UINT32 index,
        GUID* result);
    HRESULT (STDMETHODCALLTYPE* get_Size)(__x_ABI_C__FIVectorView_1_GUID* This,
        UINT32* result);
    HRESULT (STDMETHODCALLTYPE* IndexOf)(__x_ABI_C__FIVectorView_1_GUID* This,
        GUID value,
        UINT32* index,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__x_ABI_C__FIVectorView_1_GUID* This,
        UINT32 startIndex,
        UINT32 itemsLength,
        GUID* items,
        UINT32* result);

        END_INTERFACE
    } __x_ABI_C__FIVectorView_1_GUIDVtbl;

    interface __x_ABI_C__FIVectorView_1_GUID
    {
        CONST_VTBL struct __x_ABI_C__FIVectorView_1_GUIDVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIVectorView_1_GUID_INTERFACE_DEFINED__
    
#ifndef ____x_ABI_CWindows_CFoundation_CIAsyncAction_FWD_DEFINED__
#define ____x_ABI_CWindows_CFoundation_CIAsyncAction_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CFoundation_CIAsyncAction __x_ABI_CWindows_CFoundation_CIAsyncAction;

#endif // ____x_ABI_CWindows_CFoundation_CIAsyncAction_FWD_DEFINED__

#if !defined(____x_ABI_CWindows_CEmbedded_CDeviceLockdown_CIDeviceLockdownProfileInformation_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CEmbedded_CDeviceLockdown_CIDeviceLockdownProfileInformation_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CEmbedded_CDeviceLockdown_CIDeviceLockdownProfileInformationVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CEmbedded_CDeviceLockdown_CIDeviceLockdownProfileInformation* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CEmbedded_CDeviceLockdown_CIDeviceLockdownProfileInformation* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CEmbedded_CDeviceLockdown_CIDeviceLockdownProfileInformation* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CEmbedded_CDeviceLockdown_CIDeviceLockdownProfileInformation* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CEmbedded_CDeviceLockdown_CIDeviceLockdownProfileInformation* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CEmbedded_CDeviceLockdown_CIDeviceLockdownProfileInformation* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Name)(__x_ABI_CWindows_CEmbedded_CDeviceLockdown_CIDeviceLockdownProfileInformation* This,
        HSTRING* phProfileName);

        END_INTERFACE
    } __x_ABI_CWindows_CEmbedded_CDeviceLockdown_CIDeviceLockdownProfileInformationVtbl;

    interface __x_ABI_CWindows_CEmbedded_CDeviceLockdown_CIDeviceLockdownProfileInformation
    {
        CONST_VTBL struct __x_ABI_CWindows_CEmbedded_CDeviceLockdown_CIDeviceLockdownProfileInformationVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CEmbedded_CDeviceLockdown_CIDeviceLockdownProfileInformation;
#endif /* !defined(____x_ABI_CWindows_CEmbedded_CDeviceLockdown_CIDeviceLockdownProfileInformation_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CEmbedded_CDeviceLockdown_CIDeviceLockdownProfileStatics_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CEmbedded_CDeviceLockdown_CIDeviceLockdownProfileStatics_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CEmbedded_CDeviceLockdown_CIDeviceLockdownProfileStaticsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CEmbedded_CDeviceLockdown_CIDeviceLockdownProfileStatics* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CEmbedded_CDeviceLockdown_CIDeviceLockdownProfileStatics* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CEmbedded_CDeviceLockdown_CIDeviceLockdownProfileStatics* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CEmbedded_CDeviceLockdown_CIDeviceLockdownProfileStatics* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CEmbedded_CDeviceLockdown_CIDeviceLockdownProfileStatics* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CEmbedded_CDeviceLockdown_CIDeviceLockdownProfileStatics* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* GetSupportedLockdownProfiles)(__x_ABI_CWindows_CEmbedded_CDeviceLockdown_CIDeviceLockdownProfileStatics* This,
        __x_ABI_C__FIVectorView_1_GUID** ppProfileIDs);
    HRESULT (STDMETHODCALLTYPE* GetCurrentLockdownProfile)(__x_ABI_CWindows_CEmbedded_CDeviceLockdown_CIDeviceLockdownProfileStatics* This,
        GUID* pProfileID);
    HRESULT (STDMETHODCALLTYPE* ApplyLockdownProfileAsync)(__x_ABI_CWindows_CEmbedded_CDeviceLockdown_CIDeviceLockdownProfileStatics* This,
        GUID profileID,
        __x_ABI_CWindows_CFoundation_CIAsyncAction** ppWaitableOperation);
    HRESULT (STDMETHODCALLTYPE* GetLockdownProfileInformation)(__x_ABI_CWindows_CEmbedded_CDeviceLockdown_CIDeviceLockdownProfileStatics* This,
        GUID profileID,
        __x_ABI_CWindows_CEmbedded_CDeviceLockdown_CIDeviceLockdownProfileInformation** ppInformation);

        END_INTERFACE
    } __x_ABI_CWindows_CEmbedded_CDeviceLockdown_CIDeviceLockdownProfileStaticsVtbl;

    interface __x_ABI_CWindows_CEmbedded_CDeviceLockdown_CIDeviceLockdownProfileStatics
    {
        CONST_VTBL struct __x_ABI_CWindows_CEmbedded_CDeviceLockdown_CIDeviceLockdownProfileStaticsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CEmbedded_CDeviceLockdown_CIDeviceLockdownProfileStatics;
#endif /* !defined(____x_ABI_CWindows_CEmbedded_CDeviceLockdown_CIDeviceLockdownProfileStatics_INTERFACE_DEFINED__) */
    
