// WARNING: Please don't edit this file. It was generated by Swift/WinRT v0.0.1

#pragma once
// Header files for imported files
#include <inspectable.h>
#include <EventToken.h>
#include <windowscontracts.h>
#include "Windows.Foundation.h"
#include "Windows.Devices.h"
#include "Windows.Devices.Pwm.Provider.h"
// Importing Collections header
#include "Windows.Foundation.Collections.h"

/* Forward Declarations */
#ifndef ____x_ABI_CWindows_CDevices_CPwm_CIPwmController_FWD_DEFINED__
#define ____x_ABI_CWindows_CDevices_CPwm_CIPwmController_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CDevices_CPwm_CIPwmController __x_ABI_CWindows_CDevices_CPwm_CIPwmController;

#endif // ____x_ABI_CWindows_CDevices_CPwm_CIPwmController_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CDevices_CPwm_CIPwmControllerStatics_FWD_DEFINED__
#define ____x_ABI_CWindows_CDevices_CPwm_CIPwmControllerStatics_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CDevices_CPwm_CIPwmControllerStatics __x_ABI_CWindows_CDevices_CPwm_CIPwmControllerStatics;

#endif // ____x_ABI_CWindows_CDevices_CPwm_CIPwmControllerStatics_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CDevices_CPwm_CIPwmControllerStatics2_FWD_DEFINED__
#define ____x_ABI_CWindows_CDevices_CPwm_CIPwmControllerStatics2_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CDevices_CPwm_CIPwmControllerStatics2 __x_ABI_CWindows_CDevices_CPwm_CIPwmControllerStatics2;

#endif // ____x_ABI_CWindows_CDevices_CPwm_CIPwmControllerStatics2_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CDevices_CPwm_CIPwmControllerStatics3_FWD_DEFINED__
#define ____x_ABI_CWindows_CDevices_CPwm_CIPwmControllerStatics3_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CDevices_CPwm_CIPwmControllerStatics3 __x_ABI_CWindows_CDevices_CPwm_CIPwmControllerStatics3;

#endif // ____x_ABI_CWindows_CDevices_CPwm_CIPwmControllerStatics3_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CDevices_CPwm_CIPwmPin_FWD_DEFINED__
#define ____x_ABI_CWindows_CDevices_CPwm_CIPwmPin_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CDevices_CPwm_CIPwmPin __x_ABI_CWindows_CDevices_CPwm_CIPwmPin;

#endif // ____x_ABI_CWindows_CDevices_CPwm_CIPwmPin_FWD_DEFINED__

// Parameterized interface forward declarations (C)

// Collection interface definitions

typedef interface __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CDevices__CPwm__CPwmController __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CDevices__CPwm__CPwmController;

#if !defined(____x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CDevices__CPwm__CPwmController_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CDevices__CPwm__CPwmController_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CDevices__CPwm__CPwmController __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CDevices__CPwm__CPwmController;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CDevices__CPwm__CPwmController;

    typedef struct __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CDevices__CPwm__CPwmControllerVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CDevices__CPwm__CPwmController* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CDevices__CPwm__CPwmController* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CDevices__CPwm__CPwmController* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CDevices__CPwm__CPwmController* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CDevices__CPwm__CPwmController* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CDevices__CPwm__CPwmController* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* put_Completed)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CDevices__CPwm__CPwmController* This,
        __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CDevices__CPwm__CPwmController* handler);
    HRESULT (STDMETHODCALLTYPE* get_Completed)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CDevices__CPwm__CPwmController* This,
        __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CDevices__CPwm__CPwmController** result);
    HRESULT (STDMETHODCALLTYPE* GetResults)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CDevices__CPwm__CPwmController* This,
        __x_ABI_CWindows_CDevices_CPwm_CIPwmController** result);

        END_INTERFACE
    } __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CDevices__CPwm__CPwmControllerVtbl;

    interface __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CDevices__CPwm__CPwmController
    {
        CONST_VTBL struct __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CDevices__CPwm__CPwmControllerVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CDevices__CPwm__CPwmController_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CDevices__CPwm__CPwmController_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CDevices__CPwm__CPwmController_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CDevices__CPwm__CPwmController __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CDevices__CPwm__CPwmController;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CDevices__CPwm__CPwmController;

    typedef struct __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CDevices__CPwm__CPwmControllerVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CDevices__CPwm__CPwmController* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CDevices__CPwm__CPwmController* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CDevices__CPwm__CPwmController* This);
        HRESULT (STDMETHODCALLTYPE* Invoke)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CDevices__CPwm__CPwmController* This,
        __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CDevices__CPwm__CPwmController* asyncInfo,
        enum __x_ABI_CWindows_CFoundation_CAsyncStatus asyncStatus);

        END_INTERFACE
    } __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CDevices__CPwm__CPwmControllerVtbl;

    interface __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CDevices__CPwm__CPwmController
    {
        CONST_VTBL struct __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CDevices__CPwm__CPwmControllerVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CDevices__CPwm__CPwmController_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIIterator_1___x_ABI_CWindows__CDevices__CPwm__CPwmController_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIIterator_1___x_ABI_CWindows__CDevices__CPwm__CPwmController_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIIterator_1___x_ABI_CWindows__CDevices__CPwm__CPwmController __x_ABI_C__FIIterator_1___x_ABI_CWindows__CDevices__CPwm__CPwmController;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIIterator_1___x_ABI_CWindows__CDevices__CPwm__CPwmController;

    typedef struct __x_ABI_C__FIIterator_1___x_ABI_CWindows__CDevices__CPwm__CPwmControllerVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CDevices__CPwm__CPwmController* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CDevices__CPwm__CPwmController* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CDevices__CPwm__CPwmController* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CDevices__CPwm__CPwmController* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CDevices__CPwm__CPwmController* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CDevices__CPwm__CPwmController* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Current)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CDevices__CPwm__CPwmController* This,
        __x_ABI_CWindows_CDevices_CPwm_CIPwmController** result);
    HRESULT (STDMETHODCALLTYPE* get_HasCurrent)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CDevices__CPwm__CPwmController* This,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* MoveNext)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CDevices__CPwm__CPwmController* This,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CDevices__CPwm__CPwmController* This,
        UINT32 itemsLength,
        __x_ABI_CWindows_CDevices_CPwm_CIPwmController** items,
        UINT32* result);

        END_INTERFACE
    } __x_ABI_C__FIIterator_1___x_ABI_CWindows__CDevices__CPwm__CPwmControllerVtbl;

    interface __x_ABI_C__FIIterator_1___x_ABI_CWindows__CDevices__CPwm__CPwmController
    {
        CONST_VTBL struct __x_ABI_C__FIIterator_1___x_ABI_CWindows__CDevices__CPwm__CPwmControllerVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIIterator_1___x_ABI_CWindows__CDevices__CPwm__CPwmController_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIIterable_1___x_ABI_CWindows__CDevices__CPwm__CPwmController_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIIterable_1___x_ABI_CWindows__CDevices__CPwm__CPwmController_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIIterable_1___x_ABI_CWindows__CDevices__CPwm__CPwmController __x_ABI_C__FIIterable_1___x_ABI_CWindows__CDevices__CPwm__CPwmController;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIIterable_1___x_ABI_CWindows__CDevices__CPwm__CPwmController;

    typedef struct __x_ABI_C__FIIterable_1___x_ABI_CWindows__CDevices__CPwm__CPwmControllerVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CDevices__CPwm__CPwmController* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CDevices__CPwm__CPwmController* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CDevices__CPwm__CPwmController* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CDevices__CPwm__CPwmController* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CDevices__CPwm__CPwmController* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CDevices__CPwm__CPwmController* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* First)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CDevices__CPwm__CPwmController* This,
        __x_ABI_C__FIIterator_1___x_ABI_CWindows__CDevices__CPwm__CPwmController** result);

        END_INTERFACE
    } __x_ABI_C__FIIterable_1___x_ABI_CWindows__CDevices__CPwm__CPwmControllerVtbl;

    interface __x_ABI_C__FIIterable_1___x_ABI_CWindows__CDevices__CPwm__CPwmController
    {
        CONST_VTBL struct __x_ABI_C__FIIterable_1___x_ABI_CWindows__CDevices__CPwm__CPwmControllerVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIIterable_1___x_ABI_CWindows__CDevices__CPwm__CPwmController_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIVectorView_1___x_ABI_CWindows__CDevices__CPwm__CPwmController_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIVectorView_1___x_ABI_CWindows__CDevices__CPwm__CPwmController_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CDevices__CPwm__CPwmController __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CDevices__CPwm__CPwmController;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CDevices__CPwm__CPwmController;

    typedef struct __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CDevices__CPwm__CPwmControllerVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CDevices__CPwm__CPwmController* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CDevices__CPwm__CPwmController* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CDevices__CPwm__CPwmController* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CDevices__CPwm__CPwmController* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CDevices__CPwm__CPwmController* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CDevices__CPwm__CPwmController* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* GetAt)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CDevices__CPwm__CPwmController* This,
        UINT32 index,
        __x_ABI_CWindows_CDevices_CPwm_CIPwmController** result);
    HRESULT (STDMETHODCALLTYPE* get_Size)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CDevices__CPwm__CPwmController* This,
        UINT32* result);
    HRESULT (STDMETHODCALLTYPE* IndexOf)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CDevices__CPwm__CPwmController* This,
        __x_ABI_CWindows_CDevices_CPwm_CIPwmController* value,
        UINT32* index,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CDevices__CPwm__CPwmController* This,
        UINT32 startIndex,
        UINT32 itemsLength,
        __x_ABI_CWindows_CDevices_CPwm_CIPwmController** items,
        UINT32* result);

        END_INTERFACE
    } __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CDevices__CPwm__CPwmControllerVtbl;

    interface __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CDevices__CPwm__CPwmController
    {
        CONST_VTBL struct __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CDevices__CPwm__CPwmControllerVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIVectorView_1___x_ABI_CWindows__CDevices__CPwm__CPwmController_INTERFACE_DEFINED__
    
typedef interface __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CDevices__CPwm__CPwmController __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CDevices__CPwm__CPwmController;

#if !defined(____x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CDevices__CPwm__CPwmController_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CDevices__CPwm__CPwmController_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CDevices__CPwm__CPwmController __x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CDevices__CPwm__CPwmController;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CDevices__CPwm__CPwmController;

    typedef struct __x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CDevices__CPwm__CPwmControllerVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CDevices__CPwm__CPwmController* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CDevices__CPwm__CPwmController* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CDevices__CPwm__CPwmController* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CDevices__CPwm__CPwmController* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CDevices__CPwm__CPwmController* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CDevices__CPwm__CPwmController* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* put_Completed)(__x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CDevices__CPwm__CPwmController* This,
        __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CDevices__CPwm__CPwmController* handler);
    HRESULT (STDMETHODCALLTYPE* get_Completed)(__x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CDevices__CPwm__CPwmController* This,
        __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CDevices__CPwm__CPwmController** result);
    HRESULT (STDMETHODCALLTYPE* GetResults)(__x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CDevices__CPwm__CPwmController* This,
        __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CDevices__CPwm__CPwmController** result);

        END_INTERFACE
    } __x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CDevices__CPwm__CPwmControllerVtbl;

    interface __x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CDevices__CPwm__CPwmController
    {
        CONST_VTBL struct __x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CDevices__CPwm__CPwmControllerVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CDevices__CPwm__CPwmController_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CDevices__CPwm__CPwmController_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CDevices__CPwm__CPwmController_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CDevices__CPwm__CPwmController __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CDevices__CPwm__CPwmController;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CDevices__CPwm__CPwmController;

    typedef struct __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CDevices__CPwm__CPwmControllerVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CDevices__CPwm__CPwmController* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CDevices__CPwm__CPwmController* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CDevices__CPwm__CPwmController* This);
        HRESULT (STDMETHODCALLTYPE* Invoke)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CDevices__CPwm__CPwmController* This,
        __x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CDevices__CPwm__CPwmController* asyncInfo,
        enum __x_ABI_CWindows_CFoundation_CAsyncStatus asyncStatus);

        END_INTERFACE
    } __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CDevices__CPwm__CPwmControllerVtbl;

    interface __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CDevices__CPwm__CPwmController
    {
        CONST_VTBL struct __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CDevices__CPwm__CPwmControllerVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CDevices__CPwm__CPwmController_INTERFACE_DEFINED__
    
#ifndef ____x_ABI_CWindows_CDevices_CPwm_CProvider_CIPwmProvider_FWD_DEFINED__
#define ____x_ABI_CWindows_CDevices_CPwm_CProvider_CIPwmProvider_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CDevices_CPwm_CProvider_CIPwmProvider __x_ABI_CWindows_CDevices_CPwm_CProvider_CIPwmProvider;

#endif // ____x_ABI_CWindows_CDevices_CPwm_CProvider_CIPwmProvider_FWD_DEFINED__

typedef enum __x_ABI_CWindows_CFoundation_CAsyncStatus __x_ABI_CWindows_CFoundation_CAsyncStatus;

#ifndef ____x_ABI_CWindows_CFoundation_CIAsyncInfo_FWD_DEFINED__
#define ____x_ABI_CWindows_CFoundation_CIAsyncInfo_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CFoundation_CIAsyncInfo __x_ABI_CWindows_CFoundation_CIAsyncInfo;

#endif // ____x_ABI_CWindows_CFoundation_CIAsyncInfo_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CFoundation_CIClosable_FWD_DEFINED__
#define ____x_ABI_CWindows_CFoundation_CIClosable_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CFoundation_CIClosable __x_ABI_CWindows_CFoundation_CIClosable;

#endif // ____x_ABI_CWindows_CFoundation_CIClosable_FWD_DEFINED__

typedef enum __x_ABI_CWindows_CDevices_CPwm_CPwmPulsePolarity __x_ABI_CWindows_CDevices_CPwm_CPwmPulsePolarity;

enum __x_ABI_CWindows_CDevices_CPwm_CPwmPulsePolarity
    {
        __x_ABI_CWindows_CDevices_CPwm_CPwmPulsePolarity_ActiveHigh = 0,
    __x_ABI_CWindows_CDevices_CPwm_CPwmPulsePolarity_ActiveLow = 1,
};

#if !defined(____x_ABI_CWindows_CDevices_CPwm_CIPwmController_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CDevices_CPwm_CIPwmController_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CDevices_CPwm_CIPwmControllerVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CDevices_CPwm_CIPwmController* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CDevices_CPwm_CIPwmController* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CDevices_CPwm_CIPwmController* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CDevices_CPwm_CIPwmController* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CDevices_CPwm_CIPwmController* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CDevices_CPwm_CIPwmController* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_PinCount)(__x_ABI_CWindows_CDevices_CPwm_CIPwmController* This,
        INT32* value);
    HRESULT (STDMETHODCALLTYPE* get_ActualFrequency)(__x_ABI_CWindows_CDevices_CPwm_CIPwmController* This,
        DOUBLE* value);
    HRESULT (STDMETHODCALLTYPE* SetDesiredFrequency)(__x_ABI_CWindows_CDevices_CPwm_CIPwmController* This,
        DOUBLE desiredFrequency,
        DOUBLE* result);
    HRESULT (STDMETHODCALLTYPE* get_MinFrequency)(__x_ABI_CWindows_CDevices_CPwm_CIPwmController* This,
        DOUBLE* value);
    HRESULT (STDMETHODCALLTYPE* get_MaxFrequency)(__x_ABI_CWindows_CDevices_CPwm_CIPwmController* This,
        DOUBLE* value);
    HRESULT (STDMETHODCALLTYPE* OpenPin)(__x_ABI_CWindows_CDevices_CPwm_CIPwmController* This,
        INT32 pinNumber,
        __x_ABI_CWindows_CDevices_CPwm_CIPwmPin** pin);

        END_INTERFACE
    } __x_ABI_CWindows_CDevices_CPwm_CIPwmControllerVtbl;

    interface __x_ABI_CWindows_CDevices_CPwm_CIPwmController
    {
        CONST_VTBL struct __x_ABI_CWindows_CDevices_CPwm_CIPwmControllerVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CDevices_CPwm_CIPwmController;
#endif /* !defined(____x_ABI_CWindows_CDevices_CPwm_CIPwmController_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CDevices_CPwm_CIPwmControllerStatics_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CDevices_CPwm_CIPwmControllerStatics_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CDevices_CPwm_CIPwmControllerStaticsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CDevices_CPwm_CIPwmControllerStatics* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CDevices_CPwm_CIPwmControllerStatics* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CDevices_CPwm_CIPwmControllerStatics* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CDevices_CPwm_CIPwmControllerStatics* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CDevices_CPwm_CIPwmControllerStatics* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CDevices_CPwm_CIPwmControllerStatics* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* GetControllersAsync)(__x_ABI_CWindows_CDevices_CPwm_CIPwmControllerStatics* This,
        __x_ABI_CWindows_CDevices_CPwm_CProvider_CIPwmProvider* provider,
        __x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CDevices__CPwm__CPwmController** operation);

        END_INTERFACE
    } __x_ABI_CWindows_CDevices_CPwm_CIPwmControllerStaticsVtbl;

    interface __x_ABI_CWindows_CDevices_CPwm_CIPwmControllerStatics
    {
        CONST_VTBL struct __x_ABI_CWindows_CDevices_CPwm_CIPwmControllerStaticsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CDevices_CPwm_CIPwmControllerStatics;
#endif /* !defined(____x_ABI_CWindows_CDevices_CPwm_CIPwmControllerStatics_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CDevices_CPwm_CIPwmControllerStatics2_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CDevices_CPwm_CIPwmControllerStatics2_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CDevices_CPwm_CIPwmControllerStatics2Vtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CDevices_CPwm_CIPwmControllerStatics2* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CDevices_CPwm_CIPwmControllerStatics2* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CDevices_CPwm_CIPwmControllerStatics2* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CDevices_CPwm_CIPwmControllerStatics2* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CDevices_CPwm_CIPwmControllerStatics2* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CDevices_CPwm_CIPwmControllerStatics2* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* GetDefaultAsync)(__x_ABI_CWindows_CDevices_CPwm_CIPwmControllerStatics2* This,
        __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CDevices__CPwm__CPwmController** operation);

        END_INTERFACE
    } __x_ABI_CWindows_CDevices_CPwm_CIPwmControllerStatics2Vtbl;

    interface __x_ABI_CWindows_CDevices_CPwm_CIPwmControllerStatics2
    {
        CONST_VTBL struct __x_ABI_CWindows_CDevices_CPwm_CIPwmControllerStatics2Vtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CDevices_CPwm_CIPwmControllerStatics2;
#endif /* !defined(____x_ABI_CWindows_CDevices_CPwm_CIPwmControllerStatics2_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CDevices_CPwm_CIPwmControllerStatics3_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CDevices_CPwm_CIPwmControllerStatics3_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CDevices_CPwm_CIPwmControllerStatics3Vtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CDevices_CPwm_CIPwmControllerStatics3* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CDevices_CPwm_CIPwmControllerStatics3* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CDevices_CPwm_CIPwmControllerStatics3* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CDevices_CPwm_CIPwmControllerStatics3* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CDevices_CPwm_CIPwmControllerStatics3* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CDevices_CPwm_CIPwmControllerStatics3* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* GetDeviceSelector)(__x_ABI_CWindows_CDevices_CPwm_CIPwmControllerStatics3* This,
        HSTRING* result);
    HRESULT (STDMETHODCALLTYPE* GetDeviceSelectorFromFriendlyName)(__x_ABI_CWindows_CDevices_CPwm_CIPwmControllerStatics3* This,
        HSTRING friendlyName,
        HSTRING* result);
    HRESULT (STDMETHODCALLTYPE* FromIdAsync)(__x_ABI_CWindows_CDevices_CPwm_CIPwmControllerStatics3* This,
        HSTRING deviceId,
        __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CDevices__CPwm__CPwmController** operation);

        END_INTERFACE
    } __x_ABI_CWindows_CDevices_CPwm_CIPwmControllerStatics3Vtbl;

    interface __x_ABI_CWindows_CDevices_CPwm_CIPwmControllerStatics3
    {
        CONST_VTBL struct __x_ABI_CWindows_CDevices_CPwm_CIPwmControllerStatics3Vtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CDevices_CPwm_CIPwmControllerStatics3;
#endif /* !defined(____x_ABI_CWindows_CDevices_CPwm_CIPwmControllerStatics3_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CDevices_CPwm_CIPwmPin_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CDevices_CPwm_CIPwmPin_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CDevices_CPwm_CIPwmPinVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CDevices_CPwm_CIPwmPin* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CDevices_CPwm_CIPwmPin* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CDevices_CPwm_CIPwmPin* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CDevices_CPwm_CIPwmPin* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CDevices_CPwm_CIPwmPin* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CDevices_CPwm_CIPwmPin* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Controller)(__x_ABI_CWindows_CDevices_CPwm_CIPwmPin* This,
        __x_ABI_CWindows_CDevices_CPwm_CIPwmController** value);
    HRESULT (STDMETHODCALLTYPE* GetActiveDutyCyclePercentage)(__x_ABI_CWindows_CDevices_CPwm_CIPwmPin* This,
        DOUBLE* result);
    HRESULT (STDMETHODCALLTYPE* SetActiveDutyCyclePercentage)(__x_ABI_CWindows_CDevices_CPwm_CIPwmPin* This,
        DOUBLE dutyCyclePercentage);
    HRESULT (STDMETHODCALLTYPE* get_Polarity)(__x_ABI_CWindows_CDevices_CPwm_CIPwmPin* This,
        enum __x_ABI_CWindows_CDevices_CPwm_CPwmPulsePolarity* value);
    HRESULT (STDMETHODCALLTYPE* put_Polarity)(__x_ABI_CWindows_CDevices_CPwm_CIPwmPin* This,
        enum __x_ABI_CWindows_CDevices_CPwm_CPwmPulsePolarity value);
    HRESULT (STDMETHODCALLTYPE* Start)(__x_ABI_CWindows_CDevices_CPwm_CIPwmPin* This);
    HRESULT (STDMETHODCALLTYPE* Stop)(__x_ABI_CWindows_CDevices_CPwm_CIPwmPin* This);
    HRESULT (STDMETHODCALLTYPE* get_IsStarted)(__x_ABI_CWindows_CDevices_CPwm_CIPwmPin* This,
        boolean* value);

        END_INTERFACE
    } __x_ABI_CWindows_CDevices_CPwm_CIPwmPinVtbl;

    interface __x_ABI_CWindows_CDevices_CPwm_CIPwmPin
    {
        CONST_VTBL struct __x_ABI_CWindows_CDevices_CPwm_CIPwmPinVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CDevices_CPwm_CIPwmPin;
#endif /* !defined(____x_ABI_CWindows_CDevices_CPwm_CIPwmPin_INTERFACE_DEFINED__) */
    
