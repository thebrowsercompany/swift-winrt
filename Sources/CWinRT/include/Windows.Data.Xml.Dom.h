// WARNING: Please don't edit this file. It was generated by Swift/WinRT v0.0.1

#pragma once
// Header files for imported files
#include <inspectable.h>
#include <EventToken.h>
#include <windowscontracts.h>
#include "Windows.Foundation.h"
#include "Windows.Storage.h"
#include "Windows.Storage.Streams.h"
// Importing Collections header
#include "Windows.Foundation.Collections.h"

/* Forward Declarations */
#ifndef ____x_ABI_CWindows_CData_CXml_CDom_CIDtdEntity_FWD_DEFINED__
#define ____x_ABI_CWindows_CData_CXml_CDom_CIDtdEntity_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CData_CXml_CDom_CIDtdEntity __x_ABI_CWindows_CData_CXml_CDom_CIDtdEntity;

#endif // ____x_ABI_CWindows_CData_CXml_CDom_CIDtdEntity_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CData_CXml_CDom_CIDtdNotation_FWD_DEFINED__
#define ____x_ABI_CWindows_CData_CXml_CDom_CIDtdNotation_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CData_CXml_CDom_CIDtdNotation __x_ABI_CWindows_CData_CXml_CDom_CIDtdNotation;

#endif // ____x_ABI_CWindows_CData_CXml_CDom_CIDtdNotation_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CData_CXml_CDom_CIXmlAttribute_FWD_DEFINED__
#define ____x_ABI_CWindows_CData_CXml_CDom_CIXmlAttribute_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CData_CXml_CDom_CIXmlAttribute __x_ABI_CWindows_CData_CXml_CDom_CIXmlAttribute;

#endif // ____x_ABI_CWindows_CData_CXml_CDom_CIXmlAttribute_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CData_CXml_CDom_CIXmlCDataSection_FWD_DEFINED__
#define ____x_ABI_CWindows_CData_CXml_CDom_CIXmlCDataSection_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CData_CXml_CDom_CIXmlCDataSection __x_ABI_CWindows_CData_CXml_CDom_CIXmlCDataSection;

#endif // ____x_ABI_CWindows_CData_CXml_CDom_CIXmlCDataSection_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CData_CXml_CDom_CIXmlCharacterData_FWD_DEFINED__
#define ____x_ABI_CWindows_CData_CXml_CDom_CIXmlCharacterData_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CData_CXml_CDom_CIXmlCharacterData __x_ABI_CWindows_CData_CXml_CDom_CIXmlCharacterData;

#endif // ____x_ABI_CWindows_CData_CXml_CDom_CIXmlCharacterData_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CData_CXml_CDom_CIXmlComment_FWD_DEFINED__
#define ____x_ABI_CWindows_CData_CXml_CDom_CIXmlComment_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CData_CXml_CDom_CIXmlComment __x_ABI_CWindows_CData_CXml_CDom_CIXmlComment;

#endif // ____x_ABI_CWindows_CData_CXml_CDom_CIXmlComment_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CData_CXml_CDom_CIXmlDocument_FWD_DEFINED__
#define ____x_ABI_CWindows_CData_CXml_CDom_CIXmlDocument_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CData_CXml_CDom_CIXmlDocument __x_ABI_CWindows_CData_CXml_CDom_CIXmlDocument;

#endif // ____x_ABI_CWindows_CData_CXml_CDom_CIXmlDocument_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CData_CXml_CDom_CIXmlDocumentFragment_FWD_DEFINED__
#define ____x_ABI_CWindows_CData_CXml_CDom_CIXmlDocumentFragment_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CData_CXml_CDom_CIXmlDocumentFragment __x_ABI_CWindows_CData_CXml_CDom_CIXmlDocumentFragment;

#endif // ____x_ABI_CWindows_CData_CXml_CDom_CIXmlDocumentFragment_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CData_CXml_CDom_CIXmlDocumentIO_FWD_DEFINED__
#define ____x_ABI_CWindows_CData_CXml_CDom_CIXmlDocumentIO_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CData_CXml_CDom_CIXmlDocumentIO __x_ABI_CWindows_CData_CXml_CDom_CIXmlDocumentIO;

#endif // ____x_ABI_CWindows_CData_CXml_CDom_CIXmlDocumentIO_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CData_CXml_CDom_CIXmlDocumentIO2_FWD_DEFINED__
#define ____x_ABI_CWindows_CData_CXml_CDom_CIXmlDocumentIO2_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CData_CXml_CDom_CIXmlDocumentIO2 __x_ABI_CWindows_CData_CXml_CDom_CIXmlDocumentIO2;

#endif // ____x_ABI_CWindows_CData_CXml_CDom_CIXmlDocumentIO2_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CData_CXml_CDom_CIXmlDocumentStatics_FWD_DEFINED__
#define ____x_ABI_CWindows_CData_CXml_CDom_CIXmlDocumentStatics_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CData_CXml_CDom_CIXmlDocumentStatics __x_ABI_CWindows_CData_CXml_CDom_CIXmlDocumentStatics;

#endif // ____x_ABI_CWindows_CData_CXml_CDom_CIXmlDocumentStatics_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CData_CXml_CDom_CIXmlDocumentType_FWD_DEFINED__
#define ____x_ABI_CWindows_CData_CXml_CDom_CIXmlDocumentType_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CData_CXml_CDom_CIXmlDocumentType __x_ABI_CWindows_CData_CXml_CDom_CIXmlDocumentType;

#endif // ____x_ABI_CWindows_CData_CXml_CDom_CIXmlDocumentType_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CData_CXml_CDom_CIXmlDomImplementation_FWD_DEFINED__
#define ____x_ABI_CWindows_CData_CXml_CDom_CIXmlDomImplementation_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CData_CXml_CDom_CIXmlDomImplementation __x_ABI_CWindows_CData_CXml_CDom_CIXmlDomImplementation;

#endif // ____x_ABI_CWindows_CData_CXml_CDom_CIXmlDomImplementation_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CData_CXml_CDom_CIXmlElement_FWD_DEFINED__
#define ____x_ABI_CWindows_CData_CXml_CDom_CIXmlElement_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CData_CXml_CDom_CIXmlElement __x_ABI_CWindows_CData_CXml_CDom_CIXmlElement;

#endif // ____x_ABI_CWindows_CData_CXml_CDom_CIXmlElement_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CData_CXml_CDom_CIXmlEntityReference_FWD_DEFINED__
#define ____x_ABI_CWindows_CData_CXml_CDom_CIXmlEntityReference_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CData_CXml_CDom_CIXmlEntityReference __x_ABI_CWindows_CData_CXml_CDom_CIXmlEntityReference;

#endif // ____x_ABI_CWindows_CData_CXml_CDom_CIXmlEntityReference_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CData_CXml_CDom_CIXmlLoadSettings_FWD_DEFINED__
#define ____x_ABI_CWindows_CData_CXml_CDom_CIXmlLoadSettings_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CData_CXml_CDom_CIXmlLoadSettings __x_ABI_CWindows_CData_CXml_CDom_CIXmlLoadSettings;

#endif // ____x_ABI_CWindows_CData_CXml_CDom_CIXmlLoadSettings_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CData_CXml_CDom_CIXmlNamedNodeMap_FWD_DEFINED__
#define ____x_ABI_CWindows_CData_CXml_CDom_CIXmlNamedNodeMap_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CData_CXml_CDom_CIXmlNamedNodeMap __x_ABI_CWindows_CData_CXml_CDom_CIXmlNamedNodeMap;

#endif // ____x_ABI_CWindows_CData_CXml_CDom_CIXmlNamedNodeMap_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CData_CXml_CDom_CIXmlNode_FWD_DEFINED__
#define ____x_ABI_CWindows_CData_CXml_CDom_CIXmlNode_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CData_CXml_CDom_CIXmlNode __x_ABI_CWindows_CData_CXml_CDom_CIXmlNode;

#endif // ____x_ABI_CWindows_CData_CXml_CDom_CIXmlNode_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CData_CXml_CDom_CIXmlNodeList_FWD_DEFINED__
#define ____x_ABI_CWindows_CData_CXml_CDom_CIXmlNodeList_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CData_CXml_CDom_CIXmlNodeList __x_ABI_CWindows_CData_CXml_CDom_CIXmlNodeList;

#endif // ____x_ABI_CWindows_CData_CXml_CDom_CIXmlNodeList_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CData_CXml_CDom_CIXmlNodeSelector_FWD_DEFINED__
#define ____x_ABI_CWindows_CData_CXml_CDom_CIXmlNodeSelector_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CData_CXml_CDom_CIXmlNodeSelector __x_ABI_CWindows_CData_CXml_CDom_CIXmlNodeSelector;

#endif // ____x_ABI_CWindows_CData_CXml_CDom_CIXmlNodeSelector_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CData_CXml_CDom_CIXmlNodeSerializer_FWD_DEFINED__
#define ____x_ABI_CWindows_CData_CXml_CDom_CIXmlNodeSerializer_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CData_CXml_CDom_CIXmlNodeSerializer __x_ABI_CWindows_CData_CXml_CDom_CIXmlNodeSerializer;

#endif // ____x_ABI_CWindows_CData_CXml_CDom_CIXmlNodeSerializer_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CData_CXml_CDom_CIXmlProcessingInstruction_FWD_DEFINED__
#define ____x_ABI_CWindows_CData_CXml_CDom_CIXmlProcessingInstruction_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CData_CXml_CDom_CIXmlProcessingInstruction __x_ABI_CWindows_CData_CXml_CDom_CIXmlProcessingInstruction;

#endif // ____x_ABI_CWindows_CData_CXml_CDom_CIXmlProcessingInstruction_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CData_CXml_CDom_CIXmlText_FWD_DEFINED__
#define ____x_ABI_CWindows_CData_CXml_CDom_CIXmlText_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CData_CXml_CDom_CIXmlText __x_ABI_CWindows_CData_CXml_CDom_CIXmlText;

#endif // ____x_ABI_CWindows_CData_CXml_CDom_CIXmlText_FWD_DEFINED__

// Parameterized interface forward declarations (C)

// Collection interface definitions

typedef interface __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CData__CXml__CDom__CXmlDocument __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CData__CXml__CDom__CXmlDocument;

#if !defined(____x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CData__CXml__CDom__CXmlDocument_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CData__CXml__CDom__CXmlDocument_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CData__CXml__CDom__CXmlDocument __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CData__CXml__CDom__CXmlDocument;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CData__CXml__CDom__CXmlDocument;

    typedef struct __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CData__CXml__CDom__CXmlDocumentVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CData__CXml__CDom__CXmlDocument* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CData__CXml__CDom__CXmlDocument* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CData__CXml__CDom__CXmlDocument* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CData__CXml__CDom__CXmlDocument* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CData__CXml__CDom__CXmlDocument* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CData__CXml__CDom__CXmlDocument* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* put_Completed)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CData__CXml__CDom__CXmlDocument* This,
        __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CData__CXml__CDom__CXmlDocument* handler);
    HRESULT (STDMETHODCALLTYPE* get_Completed)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CData__CXml__CDom__CXmlDocument* This,
        __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CData__CXml__CDom__CXmlDocument** result);
    HRESULT (STDMETHODCALLTYPE* GetResults)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CData__CXml__CDom__CXmlDocument* This,
        __x_ABI_CWindows_CData_CXml_CDom_CIXmlDocument** result);

        END_INTERFACE
    } __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CData__CXml__CDom__CXmlDocumentVtbl;

    interface __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CData__CXml__CDom__CXmlDocument
    {
        CONST_VTBL struct __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CData__CXml__CDom__CXmlDocumentVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CData__CXml__CDom__CXmlDocument_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CData__CXml__CDom__CXmlDocument_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CData__CXml__CDom__CXmlDocument_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CData__CXml__CDom__CXmlDocument __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CData__CXml__CDom__CXmlDocument;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CData__CXml__CDom__CXmlDocument;

    typedef struct __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CData__CXml__CDom__CXmlDocumentVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CData__CXml__CDom__CXmlDocument* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CData__CXml__CDom__CXmlDocument* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CData__CXml__CDom__CXmlDocument* This);
        HRESULT (STDMETHODCALLTYPE* Invoke)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CData__CXml__CDom__CXmlDocument* This,
        __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CData__CXml__CDom__CXmlDocument* asyncInfo,
        enum __x_ABI_CWindows_CFoundation_CAsyncStatus asyncStatus);

        END_INTERFACE
    } __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CData__CXml__CDom__CXmlDocumentVtbl;

    interface __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CData__CXml__CDom__CXmlDocument
    {
        CONST_VTBL struct __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CData__CXml__CDom__CXmlDocumentVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CData__CXml__CDom__CXmlDocument_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIIterator_1___x_ABI_CWindows__CData__CXml__CDom__CIXmlNode_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIIterator_1___x_ABI_CWindows__CData__CXml__CDom__CIXmlNode_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIIterator_1___x_ABI_CWindows__CData__CXml__CDom__CIXmlNode __x_ABI_C__FIIterator_1___x_ABI_CWindows__CData__CXml__CDom__CIXmlNode;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIIterator_1___x_ABI_CWindows__CData__CXml__CDom__CIXmlNode;

    typedef struct __x_ABI_C__FIIterator_1___x_ABI_CWindows__CData__CXml__CDom__CIXmlNodeVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CData__CXml__CDom__CIXmlNode* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CData__CXml__CDom__CIXmlNode* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CData__CXml__CDom__CIXmlNode* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CData__CXml__CDom__CIXmlNode* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CData__CXml__CDom__CIXmlNode* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CData__CXml__CDom__CIXmlNode* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Current)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CData__CXml__CDom__CIXmlNode* This,
        __x_ABI_CWindows_CData_CXml_CDom_CIXmlNode** result);
    HRESULT (STDMETHODCALLTYPE* get_HasCurrent)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CData__CXml__CDom__CIXmlNode* This,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* MoveNext)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CData__CXml__CDom__CIXmlNode* This,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CData__CXml__CDom__CIXmlNode* This,
        UINT32 itemsLength,
        __x_ABI_CWindows_CData_CXml_CDom_CIXmlNode** items,
        UINT32* result);

        END_INTERFACE
    } __x_ABI_C__FIIterator_1___x_ABI_CWindows__CData__CXml__CDom__CIXmlNodeVtbl;

    interface __x_ABI_C__FIIterator_1___x_ABI_CWindows__CData__CXml__CDom__CIXmlNode
    {
        CONST_VTBL struct __x_ABI_C__FIIterator_1___x_ABI_CWindows__CData__CXml__CDom__CIXmlNodeVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIIterator_1___x_ABI_CWindows__CData__CXml__CDom__CIXmlNode_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIIterable_1___x_ABI_CWindows__CData__CXml__CDom__CIXmlNode_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIIterable_1___x_ABI_CWindows__CData__CXml__CDom__CIXmlNode_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIIterable_1___x_ABI_CWindows__CData__CXml__CDom__CIXmlNode __x_ABI_C__FIIterable_1___x_ABI_CWindows__CData__CXml__CDom__CIXmlNode;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIIterable_1___x_ABI_CWindows__CData__CXml__CDom__CIXmlNode;

    typedef struct __x_ABI_C__FIIterable_1___x_ABI_CWindows__CData__CXml__CDom__CIXmlNodeVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CData__CXml__CDom__CIXmlNode* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CData__CXml__CDom__CIXmlNode* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CData__CXml__CDom__CIXmlNode* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CData__CXml__CDom__CIXmlNode* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CData__CXml__CDom__CIXmlNode* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CData__CXml__CDom__CIXmlNode* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* First)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CData__CXml__CDom__CIXmlNode* This,
        __x_ABI_C__FIIterator_1___x_ABI_CWindows__CData__CXml__CDom__CIXmlNode** result);

        END_INTERFACE
    } __x_ABI_C__FIIterable_1___x_ABI_CWindows__CData__CXml__CDom__CIXmlNodeVtbl;

    interface __x_ABI_C__FIIterable_1___x_ABI_CWindows__CData__CXml__CDom__CIXmlNode
    {
        CONST_VTBL struct __x_ABI_C__FIIterable_1___x_ABI_CWindows__CData__CXml__CDom__CIXmlNodeVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIIterable_1___x_ABI_CWindows__CData__CXml__CDom__CIXmlNode_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIVectorView_1___x_ABI_CWindows__CData__CXml__CDom__CIXmlNode_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIVectorView_1___x_ABI_CWindows__CData__CXml__CDom__CIXmlNode_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CData__CXml__CDom__CIXmlNode __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CData__CXml__CDom__CIXmlNode;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CData__CXml__CDom__CIXmlNode;

    typedef struct __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CData__CXml__CDom__CIXmlNodeVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CData__CXml__CDom__CIXmlNode* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CData__CXml__CDom__CIXmlNode* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CData__CXml__CDom__CIXmlNode* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CData__CXml__CDom__CIXmlNode* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CData__CXml__CDom__CIXmlNode* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CData__CXml__CDom__CIXmlNode* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* GetAt)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CData__CXml__CDom__CIXmlNode* This,
        UINT32 index,
        __x_ABI_CWindows_CData_CXml_CDom_CIXmlNode** result);
    HRESULT (STDMETHODCALLTYPE* get_Size)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CData__CXml__CDom__CIXmlNode* This,
        UINT32* result);
    HRESULT (STDMETHODCALLTYPE* IndexOf)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CData__CXml__CDom__CIXmlNode* This,
        __x_ABI_CWindows_CData_CXml_CDom_CIXmlNode* value,
        UINT32* index,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CData__CXml__CDom__CIXmlNode* This,
        UINT32 startIndex,
        UINT32 itemsLength,
        __x_ABI_CWindows_CData_CXml_CDom_CIXmlNode** items,
        UINT32* result);

        END_INTERFACE
    } __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CData__CXml__CDom__CIXmlNodeVtbl;

    interface __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CData__CXml__CDom__CIXmlNode
    {
        CONST_VTBL struct __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CData__CXml__CDom__CIXmlNodeVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIVectorView_1___x_ABI_CWindows__CData__CXml__CDom__CIXmlNode_INTERFACE_DEFINED__
    
typedef enum __x_ABI_CWindows_CFoundation_CAsyncStatus __x_ABI_CWindows_CFoundation_CAsyncStatus;

#ifndef ____x_ABI_CWindows_CFoundation_CIAsyncAction_FWD_DEFINED__
#define ____x_ABI_CWindows_CFoundation_CIAsyncAction_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CFoundation_CIAsyncAction __x_ABI_CWindows_CFoundation_CIAsyncAction;

#endif // ____x_ABI_CWindows_CFoundation_CIAsyncAction_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CFoundation_CIAsyncInfo_FWD_DEFINED__
#define ____x_ABI_CWindows_CFoundation_CIAsyncInfo_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CFoundation_CIAsyncInfo __x_ABI_CWindows_CFoundation_CIAsyncInfo;

#endif // ____x_ABI_CWindows_CFoundation_CIAsyncInfo_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CFoundation_CIUriRuntimeClass_FWD_DEFINED__
#define ____x_ABI_CWindows_CFoundation_CIUriRuntimeClass_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CFoundation_CIUriRuntimeClass __x_ABI_CWindows_CFoundation_CIUriRuntimeClass;

#endif // ____x_ABI_CWindows_CFoundation_CIUriRuntimeClass_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CStorage_CIStorageFile_FWD_DEFINED__
#define ____x_ABI_CWindows_CStorage_CIStorageFile_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CStorage_CIStorageFile __x_ABI_CWindows_CStorage_CIStorageFile;

#endif // ____x_ABI_CWindows_CStorage_CIStorageFile_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CStorage_CStreams_CIBuffer_FWD_DEFINED__
#define ____x_ABI_CWindows_CStorage_CStreams_CIBuffer_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CStorage_CStreams_CIBuffer __x_ABI_CWindows_CStorage_CStreams_CIBuffer;

#endif // ____x_ABI_CWindows_CStorage_CStreams_CIBuffer_FWD_DEFINED__

typedef enum __x_ABI_CWindows_CData_CXml_CDom_CNodeType __x_ABI_CWindows_CData_CXml_CDom_CNodeType;

enum __x_ABI_CWindows_CData_CXml_CDom_CNodeType
    {
        __x_ABI_CWindows_CData_CXml_CDom_CNodeType_Invalid = 0,
    __x_ABI_CWindows_CData_CXml_CDom_CNodeType_ElementNode = 1,
    __x_ABI_CWindows_CData_CXml_CDom_CNodeType_AttributeNode = 2,
    __x_ABI_CWindows_CData_CXml_CDom_CNodeType_TextNode = 3,
    __x_ABI_CWindows_CData_CXml_CDom_CNodeType_DataSectionNode = 4,
    __x_ABI_CWindows_CData_CXml_CDom_CNodeType_EntityReferenceNode = 5,
    __x_ABI_CWindows_CData_CXml_CDom_CNodeType_EntityNode = 6,
    __x_ABI_CWindows_CData_CXml_CDom_CNodeType_ProcessingInstructionNode = 7,
    __x_ABI_CWindows_CData_CXml_CDom_CNodeType_CommentNode = 8,
    __x_ABI_CWindows_CData_CXml_CDom_CNodeType_DocumentNode = 9,
    __x_ABI_CWindows_CData_CXml_CDom_CNodeType_DocumentTypeNode = 10,
    __x_ABI_CWindows_CData_CXml_CDom_CNodeType_DocumentFragmentNode = 11,
    __x_ABI_CWindows_CData_CXml_CDom_CNodeType_NotationNode = 12,
};

#if !defined(____x_ABI_CWindows_CData_CXml_CDom_CIDtdEntity_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CData_CXml_CDom_CIDtdEntity_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CData_CXml_CDom_CIDtdEntityVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CData_CXml_CDom_CIDtdEntity* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CData_CXml_CDom_CIDtdEntity* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CData_CXml_CDom_CIDtdEntity* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CData_CXml_CDom_CIDtdEntity* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CData_CXml_CDom_CIDtdEntity* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CData_CXml_CDom_CIDtdEntity* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_PublicId)(__x_ABI_CWindows_CData_CXml_CDom_CIDtdEntity* This,
        IInspectable** value);
    HRESULT (STDMETHODCALLTYPE* get_SystemId)(__x_ABI_CWindows_CData_CXml_CDom_CIDtdEntity* This,
        IInspectable** value);
    HRESULT (STDMETHODCALLTYPE* get_NotationName)(__x_ABI_CWindows_CData_CXml_CDom_CIDtdEntity* This,
        IInspectable** value);

        END_INTERFACE
    } __x_ABI_CWindows_CData_CXml_CDom_CIDtdEntityVtbl;

    interface __x_ABI_CWindows_CData_CXml_CDom_CIDtdEntity
    {
        CONST_VTBL struct __x_ABI_CWindows_CData_CXml_CDom_CIDtdEntityVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CData_CXml_CDom_CIDtdEntity;
#endif /* !defined(____x_ABI_CWindows_CData_CXml_CDom_CIDtdEntity_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CData_CXml_CDom_CIDtdNotation_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CData_CXml_CDom_CIDtdNotation_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CData_CXml_CDom_CIDtdNotationVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CData_CXml_CDom_CIDtdNotation* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CData_CXml_CDom_CIDtdNotation* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CData_CXml_CDom_CIDtdNotation* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CData_CXml_CDom_CIDtdNotation* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CData_CXml_CDom_CIDtdNotation* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CData_CXml_CDom_CIDtdNotation* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_PublicId)(__x_ABI_CWindows_CData_CXml_CDom_CIDtdNotation* This,
        IInspectable** value);
    HRESULT (STDMETHODCALLTYPE* get_SystemId)(__x_ABI_CWindows_CData_CXml_CDom_CIDtdNotation* This,
        IInspectable** value);

        END_INTERFACE
    } __x_ABI_CWindows_CData_CXml_CDom_CIDtdNotationVtbl;

    interface __x_ABI_CWindows_CData_CXml_CDom_CIDtdNotation
    {
        CONST_VTBL struct __x_ABI_CWindows_CData_CXml_CDom_CIDtdNotationVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CData_CXml_CDom_CIDtdNotation;
#endif /* !defined(____x_ABI_CWindows_CData_CXml_CDom_CIDtdNotation_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CData_CXml_CDom_CIXmlAttribute_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CData_CXml_CDom_CIXmlAttribute_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CData_CXml_CDom_CIXmlAttributeVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CData_CXml_CDom_CIXmlAttribute* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CData_CXml_CDom_CIXmlAttribute* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CData_CXml_CDom_CIXmlAttribute* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CData_CXml_CDom_CIXmlAttribute* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CData_CXml_CDom_CIXmlAttribute* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CData_CXml_CDom_CIXmlAttribute* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Name)(__x_ABI_CWindows_CData_CXml_CDom_CIXmlAttribute* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* get_Specified)(__x_ABI_CWindows_CData_CXml_CDom_CIXmlAttribute* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* get_Value)(__x_ABI_CWindows_CData_CXml_CDom_CIXmlAttribute* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* put_Value)(__x_ABI_CWindows_CData_CXml_CDom_CIXmlAttribute* This,
        HSTRING value);

        END_INTERFACE
    } __x_ABI_CWindows_CData_CXml_CDom_CIXmlAttributeVtbl;

    interface __x_ABI_CWindows_CData_CXml_CDom_CIXmlAttribute
    {
        CONST_VTBL struct __x_ABI_CWindows_CData_CXml_CDom_CIXmlAttributeVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CData_CXml_CDom_CIXmlAttribute;
#endif /* !defined(____x_ABI_CWindows_CData_CXml_CDom_CIXmlAttribute_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CData_CXml_CDom_CIXmlCDataSection_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CData_CXml_CDom_CIXmlCDataSection_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CData_CXml_CDom_CIXmlCDataSectionVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CData_CXml_CDom_CIXmlCDataSection* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CData_CXml_CDom_CIXmlCDataSection* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CData_CXml_CDom_CIXmlCDataSection* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CData_CXml_CDom_CIXmlCDataSection* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CData_CXml_CDom_CIXmlCDataSection* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CData_CXml_CDom_CIXmlCDataSection* This,
            TrustLevel* trustLevel);
    
        END_INTERFACE
    } __x_ABI_CWindows_CData_CXml_CDom_CIXmlCDataSectionVtbl;

    interface __x_ABI_CWindows_CData_CXml_CDom_CIXmlCDataSection
    {
        CONST_VTBL struct __x_ABI_CWindows_CData_CXml_CDom_CIXmlCDataSectionVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CData_CXml_CDom_CIXmlCDataSection;
#endif /* !defined(____x_ABI_CWindows_CData_CXml_CDom_CIXmlCDataSection_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CData_CXml_CDom_CIXmlCharacterData_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CData_CXml_CDom_CIXmlCharacterData_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CData_CXml_CDom_CIXmlCharacterDataVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CData_CXml_CDom_CIXmlCharacterData* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CData_CXml_CDom_CIXmlCharacterData* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CData_CXml_CDom_CIXmlCharacterData* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CData_CXml_CDom_CIXmlCharacterData* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CData_CXml_CDom_CIXmlCharacterData* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CData_CXml_CDom_CIXmlCharacterData* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Data)(__x_ABI_CWindows_CData_CXml_CDom_CIXmlCharacterData* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* put_Data)(__x_ABI_CWindows_CData_CXml_CDom_CIXmlCharacterData* This,
        HSTRING value);
    HRESULT (STDMETHODCALLTYPE* get_Length)(__x_ABI_CWindows_CData_CXml_CDom_CIXmlCharacterData* This,
        UINT32* value);
    HRESULT (STDMETHODCALLTYPE* SubstringData)(__x_ABI_CWindows_CData_CXml_CDom_CIXmlCharacterData* This,
        UINT32 offset,
        UINT32 count,
        HSTRING* data);
    HRESULT (STDMETHODCALLTYPE* AppendData)(__x_ABI_CWindows_CData_CXml_CDom_CIXmlCharacterData* This,
        HSTRING data);
    HRESULT (STDMETHODCALLTYPE* InsertData)(__x_ABI_CWindows_CData_CXml_CDom_CIXmlCharacterData* This,
        UINT32 offset,
        HSTRING data);
    HRESULT (STDMETHODCALLTYPE* DeleteData)(__x_ABI_CWindows_CData_CXml_CDom_CIXmlCharacterData* This,
        UINT32 offset,
        UINT32 count);
    HRESULT (STDMETHODCALLTYPE* ReplaceData)(__x_ABI_CWindows_CData_CXml_CDom_CIXmlCharacterData* This,
        UINT32 offset,
        UINT32 count,
        HSTRING data);

        END_INTERFACE
    } __x_ABI_CWindows_CData_CXml_CDom_CIXmlCharacterDataVtbl;

    interface __x_ABI_CWindows_CData_CXml_CDom_CIXmlCharacterData
    {
        CONST_VTBL struct __x_ABI_CWindows_CData_CXml_CDom_CIXmlCharacterDataVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CData_CXml_CDom_CIXmlCharacterData;
#endif /* !defined(____x_ABI_CWindows_CData_CXml_CDom_CIXmlCharacterData_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CData_CXml_CDom_CIXmlComment_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CData_CXml_CDom_CIXmlComment_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CData_CXml_CDom_CIXmlCommentVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CData_CXml_CDom_CIXmlComment* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CData_CXml_CDom_CIXmlComment* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CData_CXml_CDom_CIXmlComment* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CData_CXml_CDom_CIXmlComment* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CData_CXml_CDom_CIXmlComment* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CData_CXml_CDom_CIXmlComment* This,
            TrustLevel* trustLevel);
    
        END_INTERFACE
    } __x_ABI_CWindows_CData_CXml_CDom_CIXmlCommentVtbl;

    interface __x_ABI_CWindows_CData_CXml_CDom_CIXmlComment
    {
        CONST_VTBL struct __x_ABI_CWindows_CData_CXml_CDom_CIXmlCommentVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CData_CXml_CDom_CIXmlComment;
#endif /* !defined(____x_ABI_CWindows_CData_CXml_CDom_CIXmlComment_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CData_CXml_CDom_CIXmlDocument_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CData_CXml_CDom_CIXmlDocument_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CData_CXml_CDom_CIXmlDocumentVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CData_CXml_CDom_CIXmlDocument* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CData_CXml_CDom_CIXmlDocument* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CData_CXml_CDom_CIXmlDocument* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CData_CXml_CDom_CIXmlDocument* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CData_CXml_CDom_CIXmlDocument* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CData_CXml_CDom_CIXmlDocument* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Doctype)(__x_ABI_CWindows_CData_CXml_CDom_CIXmlDocument* This,
        __x_ABI_CWindows_CData_CXml_CDom_CIXmlDocumentType** value);
    HRESULT (STDMETHODCALLTYPE* get_Implementation)(__x_ABI_CWindows_CData_CXml_CDom_CIXmlDocument* This,
        __x_ABI_CWindows_CData_CXml_CDom_CIXmlDomImplementation** value);
    HRESULT (STDMETHODCALLTYPE* get_DocumentElement)(__x_ABI_CWindows_CData_CXml_CDom_CIXmlDocument* This,
        __x_ABI_CWindows_CData_CXml_CDom_CIXmlElement** value);
    HRESULT (STDMETHODCALLTYPE* CreateElement)(__x_ABI_CWindows_CData_CXml_CDom_CIXmlDocument* This,
        HSTRING tagName,
        __x_ABI_CWindows_CData_CXml_CDom_CIXmlElement** newElement);
    HRESULT (STDMETHODCALLTYPE* CreateDocumentFragment)(__x_ABI_CWindows_CData_CXml_CDom_CIXmlDocument* This,
        __x_ABI_CWindows_CData_CXml_CDom_CIXmlDocumentFragment** newDocumentFragment);
    HRESULT (STDMETHODCALLTYPE* CreateTextNode)(__x_ABI_CWindows_CData_CXml_CDom_CIXmlDocument* This,
        HSTRING data,
        __x_ABI_CWindows_CData_CXml_CDom_CIXmlText** newTextNode);
    HRESULT (STDMETHODCALLTYPE* CreateComment)(__x_ABI_CWindows_CData_CXml_CDom_CIXmlDocument* This,
        HSTRING data,
        __x_ABI_CWindows_CData_CXml_CDom_CIXmlComment** newComment);
    HRESULT (STDMETHODCALLTYPE* CreateProcessingInstruction)(__x_ABI_CWindows_CData_CXml_CDom_CIXmlDocument* This,
        HSTRING target,
        HSTRING data,
        __x_ABI_CWindows_CData_CXml_CDom_CIXmlProcessingInstruction** newProcessingInstruction);
    HRESULT (STDMETHODCALLTYPE* CreateAttribute)(__x_ABI_CWindows_CData_CXml_CDom_CIXmlDocument* This,
        HSTRING name,
        __x_ABI_CWindows_CData_CXml_CDom_CIXmlAttribute** newAttribute);
    HRESULT (STDMETHODCALLTYPE* CreateEntityReference)(__x_ABI_CWindows_CData_CXml_CDom_CIXmlDocument* This,
        HSTRING name,
        __x_ABI_CWindows_CData_CXml_CDom_CIXmlEntityReference** newEntityReference);
    HRESULT (STDMETHODCALLTYPE* GetElementsByTagName)(__x_ABI_CWindows_CData_CXml_CDom_CIXmlDocument* This,
        HSTRING tagName,
        __x_ABI_CWindows_CData_CXml_CDom_CIXmlNodeList** elements);
    HRESULT (STDMETHODCALLTYPE* CreateCDataSection)(__x_ABI_CWindows_CData_CXml_CDom_CIXmlDocument* This,
        HSTRING data,
        __x_ABI_CWindows_CData_CXml_CDom_CIXmlCDataSection** newCDataSection);
    HRESULT (STDMETHODCALLTYPE* get_DocumentUri)(__x_ABI_CWindows_CData_CXml_CDom_CIXmlDocument* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* CreateAttributeNS)(__x_ABI_CWindows_CData_CXml_CDom_CIXmlDocument* This,
        IInspectable* namespaceUri,
        HSTRING qualifiedName,
        __x_ABI_CWindows_CData_CXml_CDom_CIXmlAttribute** newAttribute);
    HRESULT (STDMETHODCALLTYPE* CreateElementNS)(__x_ABI_CWindows_CData_CXml_CDom_CIXmlDocument* This,
        IInspectable* namespaceUri,
        HSTRING qualifiedName,
        __x_ABI_CWindows_CData_CXml_CDom_CIXmlElement** newElement);
    HRESULT (STDMETHODCALLTYPE* GetElementById)(__x_ABI_CWindows_CData_CXml_CDom_CIXmlDocument* This,
        HSTRING elementId,
        __x_ABI_CWindows_CData_CXml_CDom_CIXmlElement** element);
    HRESULT (STDMETHODCALLTYPE* ImportNode)(__x_ABI_CWindows_CData_CXml_CDom_CIXmlDocument* This,
        __x_ABI_CWindows_CData_CXml_CDom_CIXmlNode* node,
        boolean deep,
        __x_ABI_CWindows_CData_CXml_CDom_CIXmlNode** newNode);

        END_INTERFACE
    } __x_ABI_CWindows_CData_CXml_CDom_CIXmlDocumentVtbl;

    interface __x_ABI_CWindows_CData_CXml_CDom_CIXmlDocument
    {
        CONST_VTBL struct __x_ABI_CWindows_CData_CXml_CDom_CIXmlDocumentVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CData_CXml_CDom_CIXmlDocument;
#endif /* !defined(____x_ABI_CWindows_CData_CXml_CDom_CIXmlDocument_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CData_CXml_CDom_CIXmlDocumentFragment_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CData_CXml_CDom_CIXmlDocumentFragment_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CData_CXml_CDom_CIXmlDocumentFragmentVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CData_CXml_CDom_CIXmlDocumentFragment* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CData_CXml_CDom_CIXmlDocumentFragment* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CData_CXml_CDom_CIXmlDocumentFragment* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CData_CXml_CDom_CIXmlDocumentFragment* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CData_CXml_CDom_CIXmlDocumentFragment* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CData_CXml_CDom_CIXmlDocumentFragment* This,
            TrustLevel* trustLevel);
    
        END_INTERFACE
    } __x_ABI_CWindows_CData_CXml_CDom_CIXmlDocumentFragmentVtbl;

    interface __x_ABI_CWindows_CData_CXml_CDom_CIXmlDocumentFragment
    {
        CONST_VTBL struct __x_ABI_CWindows_CData_CXml_CDom_CIXmlDocumentFragmentVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CData_CXml_CDom_CIXmlDocumentFragment;
#endif /* !defined(____x_ABI_CWindows_CData_CXml_CDom_CIXmlDocumentFragment_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CData_CXml_CDom_CIXmlDocumentIO_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CData_CXml_CDom_CIXmlDocumentIO_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CData_CXml_CDom_CIXmlDocumentIOVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CData_CXml_CDom_CIXmlDocumentIO* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CData_CXml_CDom_CIXmlDocumentIO* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CData_CXml_CDom_CIXmlDocumentIO* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CData_CXml_CDom_CIXmlDocumentIO* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CData_CXml_CDom_CIXmlDocumentIO* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CData_CXml_CDom_CIXmlDocumentIO* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* LoadXml)(__x_ABI_CWindows_CData_CXml_CDom_CIXmlDocumentIO* This,
        HSTRING xml);
    HRESULT (STDMETHODCALLTYPE* LoadXmlWithSettings)(__x_ABI_CWindows_CData_CXml_CDom_CIXmlDocumentIO* This,
        HSTRING xml,
        __x_ABI_CWindows_CData_CXml_CDom_CIXmlLoadSettings* loadSettings);
    HRESULT (STDMETHODCALLTYPE* SaveToFileAsync)(__x_ABI_CWindows_CData_CXml_CDom_CIXmlDocumentIO* This,
        __x_ABI_CWindows_CStorage_CIStorageFile* file,
        __x_ABI_CWindows_CFoundation_CIAsyncAction** asyncInfo);

        END_INTERFACE
    } __x_ABI_CWindows_CData_CXml_CDom_CIXmlDocumentIOVtbl;

    interface __x_ABI_CWindows_CData_CXml_CDom_CIXmlDocumentIO
    {
        CONST_VTBL struct __x_ABI_CWindows_CData_CXml_CDom_CIXmlDocumentIOVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CData_CXml_CDom_CIXmlDocumentIO;
#endif /* !defined(____x_ABI_CWindows_CData_CXml_CDom_CIXmlDocumentIO_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CData_CXml_CDom_CIXmlDocumentIO2_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CData_CXml_CDom_CIXmlDocumentIO2_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CData_CXml_CDom_CIXmlDocumentIO2Vtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CData_CXml_CDom_CIXmlDocumentIO2* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CData_CXml_CDom_CIXmlDocumentIO2* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CData_CXml_CDom_CIXmlDocumentIO2* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CData_CXml_CDom_CIXmlDocumentIO2* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CData_CXml_CDom_CIXmlDocumentIO2* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CData_CXml_CDom_CIXmlDocumentIO2* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* LoadXmlFromBuffer)(__x_ABI_CWindows_CData_CXml_CDom_CIXmlDocumentIO2* This,
        __x_ABI_CWindows_CStorage_CStreams_CIBuffer* buffer);
    HRESULT (STDMETHODCALLTYPE* LoadXmlFromBufferWithSettings)(__x_ABI_CWindows_CData_CXml_CDom_CIXmlDocumentIO2* This,
        __x_ABI_CWindows_CStorage_CStreams_CIBuffer* buffer,
        __x_ABI_CWindows_CData_CXml_CDom_CIXmlLoadSettings* loadSettings);

        END_INTERFACE
    } __x_ABI_CWindows_CData_CXml_CDom_CIXmlDocumentIO2Vtbl;

    interface __x_ABI_CWindows_CData_CXml_CDom_CIXmlDocumentIO2
    {
        CONST_VTBL struct __x_ABI_CWindows_CData_CXml_CDom_CIXmlDocumentIO2Vtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CData_CXml_CDom_CIXmlDocumentIO2;
#endif /* !defined(____x_ABI_CWindows_CData_CXml_CDom_CIXmlDocumentIO2_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CData_CXml_CDom_CIXmlDocumentStatics_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CData_CXml_CDom_CIXmlDocumentStatics_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CData_CXml_CDom_CIXmlDocumentStaticsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CData_CXml_CDom_CIXmlDocumentStatics* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CData_CXml_CDom_CIXmlDocumentStatics* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CData_CXml_CDom_CIXmlDocumentStatics* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CData_CXml_CDom_CIXmlDocumentStatics* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CData_CXml_CDom_CIXmlDocumentStatics* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CData_CXml_CDom_CIXmlDocumentStatics* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* LoadFromUriAsync)(__x_ABI_CWindows_CData_CXml_CDom_CIXmlDocumentStatics* This,
        __x_ABI_CWindows_CFoundation_CIUriRuntimeClass* uri,
        __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CData__CXml__CDom__CXmlDocument** asyncInfo);
    HRESULT (STDMETHODCALLTYPE* LoadFromUriWithSettingsAsync)(__x_ABI_CWindows_CData_CXml_CDom_CIXmlDocumentStatics* This,
        __x_ABI_CWindows_CFoundation_CIUriRuntimeClass* uri,
        __x_ABI_CWindows_CData_CXml_CDom_CIXmlLoadSettings* loadSettings,
        __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CData__CXml__CDom__CXmlDocument** asyncInfo);
    HRESULT (STDMETHODCALLTYPE* LoadFromFileAsync)(__x_ABI_CWindows_CData_CXml_CDom_CIXmlDocumentStatics* This,
        __x_ABI_CWindows_CStorage_CIStorageFile* file,
        __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CData__CXml__CDom__CXmlDocument** asyncInfo);
    HRESULT (STDMETHODCALLTYPE* LoadFromFileWithSettingsAsync)(__x_ABI_CWindows_CData_CXml_CDom_CIXmlDocumentStatics* This,
        __x_ABI_CWindows_CStorage_CIStorageFile* file,
        __x_ABI_CWindows_CData_CXml_CDom_CIXmlLoadSettings* loadSettings,
        __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CData__CXml__CDom__CXmlDocument** asyncInfo);

        END_INTERFACE
    } __x_ABI_CWindows_CData_CXml_CDom_CIXmlDocumentStaticsVtbl;

    interface __x_ABI_CWindows_CData_CXml_CDom_CIXmlDocumentStatics
    {
        CONST_VTBL struct __x_ABI_CWindows_CData_CXml_CDom_CIXmlDocumentStaticsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CData_CXml_CDom_CIXmlDocumentStatics;
#endif /* !defined(____x_ABI_CWindows_CData_CXml_CDom_CIXmlDocumentStatics_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CData_CXml_CDom_CIXmlDocumentType_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CData_CXml_CDom_CIXmlDocumentType_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CData_CXml_CDom_CIXmlDocumentTypeVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CData_CXml_CDom_CIXmlDocumentType* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CData_CXml_CDom_CIXmlDocumentType* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CData_CXml_CDom_CIXmlDocumentType* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CData_CXml_CDom_CIXmlDocumentType* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CData_CXml_CDom_CIXmlDocumentType* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CData_CXml_CDom_CIXmlDocumentType* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Name)(__x_ABI_CWindows_CData_CXml_CDom_CIXmlDocumentType* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* get_Entities)(__x_ABI_CWindows_CData_CXml_CDom_CIXmlDocumentType* This,
        __x_ABI_CWindows_CData_CXml_CDom_CIXmlNamedNodeMap** value);
    HRESULT (STDMETHODCALLTYPE* get_Notations)(__x_ABI_CWindows_CData_CXml_CDom_CIXmlDocumentType* This,
        __x_ABI_CWindows_CData_CXml_CDom_CIXmlNamedNodeMap** value);

        END_INTERFACE
    } __x_ABI_CWindows_CData_CXml_CDom_CIXmlDocumentTypeVtbl;

    interface __x_ABI_CWindows_CData_CXml_CDom_CIXmlDocumentType
    {
        CONST_VTBL struct __x_ABI_CWindows_CData_CXml_CDom_CIXmlDocumentTypeVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CData_CXml_CDom_CIXmlDocumentType;
#endif /* !defined(____x_ABI_CWindows_CData_CXml_CDom_CIXmlDocumentType_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CData_CXml_CDom_CIXmlDomImplementation_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CData_CXml_CDom_CIXmlDomImplementation_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CData_CXml_CDom_CIXmlDomImplementationVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CData_CXml_CDom_CIXmlDomImplementation* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CData_CXml_CDom_CIXmlDomImplementation* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CData_CXml_CDom_CIXmlDomImplementation* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CData_CXml_CDom_CIXmlDomImplementation* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CData_CXml_CDom_CIXmlDomImplementation* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CData_CXml_CDom_CIXmlDomImplementation* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* HasFeature)(__x_ABI_CWindows_CData_CXml_CDom_CIXmlDomImplementation* This,
        HSTRING feature,
        IInspectable* version,
        boolean* featureSupported);

        END_INTERFACE
    } __x_ABI_CWindows_CData_CXml_CDom_CIXmlDomImplementationVtbl;

    interface __x_ABI_CWindows_CData_CXml_CDom_CIXmlDomImplementation
    {
        CONST_VTBL struct __x_ABI_CWindows_CData_CXml_CDom_CIXmlDomImplementationVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CData_CXml_CDom_CIXmlDomImplementation;
#endif /* !defined(____x_ABI_CWindows_CData_CXml_CDom_CIXmlDomImplementation_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CData_CXml_CDom_CIXmlElement_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CData_CXml_CDom_CIXmlElement_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CData_CXml_CDom_CIXmlElementVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CData_CXml_CDom_CIXmlElement* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CData_CXml_CDom_CIXmlElement* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CData_CXml_CDom_CIXmlElement* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CData_CXml_CDom_CIXmlElement* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CData_CXml_CDom_CIXmlElement* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CData_CXml_CDom_CIXmlElement* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_TagName)(__x_ABI_CWindows_CData_CXml_CDom_CIXmlElement* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* GetAttribute)(__x_ABI_CWindows_CData_CXml_CDom_CIXmlElement* This,
        HSTRING attributeName,
        HSTRING* attributeValue);
    HRESULT (STDMETHODCALLTYPE* SetAttribute)(__x_ABI_CWindows_CData_CXml_CDom_CIXmlElement* This,
        HSTRING attributeName,
        HSTRING attributeValue);
    HRESULT (STDMETHODCALLTYPE* RemoveAttribute)(__x_ABI_CWindows_CData_CXml_CDom_CIXmlElement* This,
        HSTRING attributeName);
    HRESULT (STDMETHODCALLTYPE* GetAttributeNode)(__x_ABI_CWindows_CData_CXml_CDom_CIXmlElement* This,
        HSTRING attributeName,
        __x_ABI_CWindows_CData_CXml_CDom_CIXmlAttribute** attributeNode);
    HRESULT (STDMETHODCALLTYPE* SetAttributeNode)(__x_ABI_CWindows_CData_CXml_CDom_CIXmlElement* This,
        __x_ABI_CWindows_CData_CXml_CDom_CIXmlAttribute* newAttribute,
        __x_ABI_CWindows_CData_CXml_CDom_CIXmlAttribute** previousAttribute);
    HRESULT (STDMETHODCALLTYPE* RemoveAttributeNode)(__x_ABI_CWindows_CData_CXml_CDom_CIXmlElement* This,
        __x_ABI_CWindows_CData_CXml_CDom_CIXmlAttribute* attributeNode,
        __x_ABI_CWindows_CData_CXml_CDom_CIXmlAttribute** removedAttribute);
    HRESULT (STDMETHODCALLTYPE* GetElementsByTagName)(__x_ABI_CWindows_CData_CXml_CDom_CIXmlElement* This,
        HSTRING tagName,
        __x_ABI_CWindows_CData_CXml_CDom_CIXmlNodeList** elements);
    HRESULT (STDMETHODCALLTYPE* SetAttributeNS)(__x_ABI_CWindows_CData_CXml_CDom_CIXmlElement* This,
        IInspectable* namespaceUri,
        HSTRING qualifiedName,
        HSTRING value);
    HRESULT (STDMETHODCALLTYPE* GetAttributeNS)(__x_ABI_CWindows_CData_CXml_CDom_CIXmlElement* This,
        IInspectable* namespaceUri,
        HSTRING localName,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* RemoveAttributeNS)(__x_ABI_CWindows_CData_CXml_CDom_CIXmlElement* This,
        IInspectable* namespaceUri,
        HSTRING localName);
    HRESULT (STDMETHODCALLTYPE* SetAttributeNodeNS)(__x_ABI_CWindows_CData_CXml_CDom_CIXmlElement* This,
        __x_ABI_CWindows_CData_CXml_CDom_CIXmlAttribute* newAttribute,
        __x_ABI_CWindows_CData_CXml_CDom_CIXmlAttribute** previousAttribute);
    HRESULT (STDMETHODCALLTYPE* GetAttributeNodeNS)(__x_ABI_CWindows_CData_CXml_CDom_CIXmlElement* This,
        IInspectable* namespaceUri,
        HSTRING localName,
        __x_ABI_CWindows_CData_CXml_CDom_CIXmlAttribute** previousAttribute);

        END_INTERFACE
    } __x_ABI_CWindows_CData_CXml_CDom_CIXmlElementVtbl;

    interface __x_ABI_CWindows_CData_CXml_CDom_CIXmlElement
    {
        CONST_VTBL struct __x_ABI_CWindows_CData_CXml_CDom_CIXmlElementVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CData_CXml_CDom_CIXmlElement;
#endif /* !defined(____x_ABI_CWindows_CData_CXml_CDom_CIXmlElement_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CData_CXml_CDom_CIXmlEntityReference_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CData_CXml_CDom_CIXmlEntityReference_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CData_CXml_CDom_CIXmlEntityReferenceVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CData_CXml_CDom_CIXmlEntityReference* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CData_CXml_CDom_CIXmlEntityReference* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CData_CXml_CDom_CIXmlEntityReference* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CData_CXml_CDom_CIXmlEntityReference* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CData_CXml_CDom_CIXmlEntityReference* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CData_CXml_CDom_CIXmlEntityReference* This,
            TrustLevel* trustLevel);
    
        END_INTERFACE
    } __x_ABI_CWindows_CData_CXml_CDom_CIXmlEntityReferenceVtbl;

    interface __x_ABI_CWindows_CData_CXml_CDom_CIXmlEntityReference
    {
        CONST_VTBL struct __x_ABI_CWindows_CData_CXml_CDom_CIXmlEntityReferenceVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CData_CXml_CDom_CIXmlEntityReference;
#endif /* !defined(____x_ABI_CWindows_CData_CXml_CDom_CIXmlEntityReference_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CData_CXml_CDom_CIXmlLoadSettings_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CData_CXml_CDom_CIXmlLoadSettings_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CData_CXml_CDom_CIXmlLoadSettingsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CData_CXml_CDom_CIXmlLoadSettings* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CData_CXml_CDom_CIXmlLoadSettings* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CData_CXml_CDom_CIXmlLoadSettings* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CData_CXml_CDom_CIXmlLoadSettings* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CData_CXml_CDom_CIXmlLoadSettings* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CData_CXml_CDom_CIXmlLoadSettings* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_MaxElementDepth)(__x_ABI_CWindows_CData_CXml_CDom_CIXmlLoadSettings* This,
        UINT32* value);
    HRESULT (STDMETHODCALLTYPE* put_MaxElementDepth)(__x_ABI_CWindows_CData_CXml_CDom_CIXmlLoadSettings* This,
        UINT32 value);
    HRESULT (STDMETHODCALLTYPE* get_ProhibitDtd)(__x_ABI_CWindows_CData_CXml_CDom_CIXmlLoadSettings* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* put_ProhibitDtd)(__x_ABI_CWindows_CData_CXml_CDom_CIXmlLoadSettings* This,
        boolean value);
    HRESULT (STDMETHODCALLTYPE* get_ResolveExternals)(__x_ABI_CWindows_CData_CXml_CDom_CIXmlLoadSettings* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* put_ResolveExternals)(__x_ABI_CWindows_CData_CXml_CDom_CIXmlLoadSettings* This,
        boolean value);
    HRESULT (STDMETHODCALLTYPE* get_ValidateOnParse)(__x_ABI_CWindows_CData_CXml_CDom_CIXmlLoadSettings* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* put_ValidateOnParse)(__x_ABI_CWindows_CData_CXml_CDom_CIXmlLoadSettings* This,
        boolean value);
    HRESULT (STDMETHODCALLTYPE* get_ElementContentWhiteSpace)(__x_ABI_CWindows_CData_CXml_CDom_CIXmlLoadSettings* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* put_ElementContentWhiteSpace)(__x_ABI_CWindows_CData_CXml_CDom_CIXmlLoadSettings* This,
        boolean value);

        END_INTERFACE
    } __x_ABI_CWindows_CData_CXml_CDom_CIXmlLoadSettingsVtbl;

    interface __x_ABI_CWindows_CData_CXml_CDom_CIXmlLoadSettings
    {
        CONST_VTBL struct __x_ABI_CWindows_CData_CXml_CDom_CIXmlLoadSettingsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CData_CXml_CDom_CIXmlLoadSettings;
#endif /* !defined(____x_ABI_CWindows_CData_CXml_CDom_CIXmlLoadSettings_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CData_CXml_CDom_CIXmlNamedNodeMap_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CData_CXml_CDom_CIXmlNamedNodeMap_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CData_CXml_CDom_CIXmlNamedNodeMapVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CData_CXml_CDom_CIXmlNamedNodeMap* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CData_CXml_CDom_CIXmlNamedNodeMap* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CData_CXml_CDom_CIXmlNamedNodeMap* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CData_CXml_CDom_CIXmlNamedNodeMap* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CData_CXml_CDom_CIXmlNamedNodeMap* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CData_CXml_CDom_CIXmlNamedNodeMap* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Length)(__x_ABI_CWindows_CData_CXml_CDom_CIXmlNamedNodeMap* This,
        UINT32* value);
    HRESULT (STDMETHODCALLTYPE* Item)(__x_ABI_CWindows_CData_CXml_CDom_CIXmlNamedNodeMap* This,
        UINT32 index,
        __x_ABI_CWindows_CData_CXml_CDom_CIXmlNode** node);
    HRESULT (STDMETHODCALLTYPE* GetNamedItem)(__x_ABI_CWindows_CData_CXml_CDom_CIXmlNamedNodeMap* This,
        HSTRING name,
        __x_ABI_CWindows_CData_CXml_CDom_CIXmlNode** node);
    HRESULT (STDMETHODCALLTYPE* SetNamedItem)(__x_ABI_CWindows_CData_CXml_CDom_CIXmlNamedNodeMap* This,
        __x_ABI_CWindows_CData_CXml_CDom_CIXmlNode* node,
        __x_ABI_CWindows_CData_CXml_CDom_CIXmlNode** previousNode);
    HRESULT (STDMETHODCALLTYPE* RemoveNamedItem)(__x_ABI_CWindows_CData_CXml_CDom_CIXmlNamedNodeMap* This,
        HSTRING name,
        __x_ABI_CWindows_CData_CXml_CDom_CIXmlNode** previousNode);
    HRESULT (STDMETHODCALLTYPE* GetNamedItemNS)(__x_ABI_CWindows_CData_CXml_CDom_CIXmlNamedNodeMap* This,
        IInspectable* namespaceUri,
        HSTRING name,
        __x_ABI_CWindows_CData_CXml_CDom_CIXmlNode** node);
    HRESULT (STDMETHODCALLTYPE* RemoveNamedItemNS)(__x_ABI_CWindows_CData_CXml_CDom_CIXmlNamedNodeMap* This,
        IInspectable* namespaceUri,
        HSTRING name,
        __x_ABI_CWindows_CData_CXml_CDom_CIXmlNode** previousNode);
    HRESULT (STDMETHODCALLTYPE* SetNamedItemNS)(__x_ABI_CWindows_CData_CXml_CDom_CIXmlNamedNodeMap* This,
        __x_ABI_CWindows_CData_CXml_CDom_CIXmlNode* node,
        __x_ABI_CWindows_CData_CXml_CDom_CIXmlNode** previousNode);

        END_INTERFACE
    } __x_ABI_CWindows_CData_CXml_CDom_CIXmlNamedNodeMapVtbl;

    interface __x_ABI_CWindows_CData_CXml_CDom_CIXmlNamedNodeMap
    {
        CONST_VTBL struct __x_ABI_CWindows_CData_CXml_CDom_CIXmlNamedNodeMapVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CData_CXml_CDom_CIXmlNamedNodeMap;
#endif /* !defined(____x_ABI_CWindows_CData_CXml_CDom_CIXmlNamedNodeMap_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CData_CXml_CDom_CIXmlNode_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CData_CXml_CDom_CIXmlNode_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CData_CXml_CDom_CIXmlNodeVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CData_CXml_CDom_CIXmlNode* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CData_CXml_CDom_CIXmlNode* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CData_CXml_CDom_CIXmlNode* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CData_CXml_CDom_CIXmlNode* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CData_CXml_CDom_CIXmlNode* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CData_CXml_CDom_CIXmlNode* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_NodeValue)(__x_ABI_CWindows_CData_CXml_CDom_CIXmlNode* This,
        IInspectable** value);
    HRESULT (STDMETHODCALLTYPE* put_NodeValue)(__x_ABI_CWindows_CData_CXml_CDom_CIXmlNode* This,
        IInspectable* value);
    HRESULT (STDMETHODCALLTYPE* get_NodeType)(__x_ABI_CWindows_CData_CXml_CDom_CIXmlNode* This,
        enum __x_ABI_CWindows_CData_CXml_CDom_CNodeType* value);
    HRESULT (STDMETHODCALLTYPE* get_NodeName)(__x_ABI_CWindows_CData_CXml_CDom_CIXmlNode* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* get_ParentNode)(__x_ABI_CWindows_CData_CXml_CDom_CIXmlNode* This,
        __x_ABI_CWindows_CData_CXml_CDom_CIXmlNode** value);
    HRESULT (STDMETHODCALLTYPE* get_ChildNodes)(__x_ABI_CWindows_CData_CXml_CDom_CIXmlNode* This,
        __x_ABI_CWindows_CData_CXml_CDom_CIXmlNodeList** value);
    HRESULT (STDMETHODCALLTYPE* get_FirstChild)(__x_ABI_CWindows_CData_CXml_CDom_CIXmlNode* This,
        __x_ABI_CWindows_CData_CXml_CDom_CIXmlNode** value);
    HRESULT (STDMETHODCALLTYPE* get_LastChild)(__x_ABI_CWindows_CData_CXml_CDom_CIXmlNode* This,
        __x_ABI_CWindows_CData_CXml_CDom_CIXmlNode** value);
    HRESULT (STDMETHODCALLTYPE* get_PreviousSibling)(__x_ABI_CWindows_CData_CXml_CDom_CIXmlNode* This,
        __x_ABI_CWindows_CData_CXml_CDom_CIXmlNode** value);
    HRESULT (STDMETHODCALLTYPE* get_NextSibling)(__x_ABI_CWindows_CData_CXml_CDom_CIXmlNode* This,
        __x_ABI_CWindows_CData_CXml_CDom_CIXmlNode** value);
    HRESULT (STDMETHODCALLTYPE* get_Attributes)(__x_ABI_CWindows_CData_CXml_CDom_CIXmlNode* This,
        __x_ABI_CWindows_CData_CXml_CDom_CIXmlNamedNodeMap** value);
    HRESULT (STDMETHODCALLTYPE* HasChildNodes)(__x_ABI_CWindows_CData_CXml_CDom_CIXmlNode* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* get_OwnerDocument)(__x_ABI_CWindows_CData_CXml_CDom_CIXmlNode* This,
        __x_ABI_CWindows_CData_CXml_CDom_CIXmlDocument** value);
    HRESULT (STDMETHODCALLTYPE* InsertBefore)(__x_ABI_CWindows_CData_CXml_CDom_CIXmlNode* This,
        __x_ABI_CWindows_CData_CXml_CDom_CIXmlNode* newChild,
        __x_ABI_CWindows_CData_CXml_CDom_CIXmlNode* referenceChild,
        __x_ABI_CWindows_CData_CXml_CDom_CIXmlNode** insertedChild);
    HRESULT (STDMETHODCALLTYPE* ReplaceChild)(__x_ABI_CWindows_CData_CXml_CDom_CIXmlNode* This,
        __x_ABI_CWindows_CData_CXml_CDom_CIXmlNode* newChild,
        __x_ABI_CWindows_CData_CXml_CDom_CIXmlNode* referenceChild,
        __x_ABI_CWindows_CData_CXml_CDom_CIXmlNode** previousChild);
    HRESULT (STDMETHODCALLTYPE* RemoveChild)(__x_ABI_CWindows_CData_CXml_CDom_CIXmlNode* This,
        __x_ABI_CWindows_CData_CXml_CDom_CIXmlNode* childNode,
        __x_ABI_CWindows_CData_CXml_CDom_CIXmlNode** removedChild);
    HRESULT (STDMETHODCALLTYPE* AppendChild)(__x_ABI_CWindows_CData_CXml_CDom_CIXmlNode* This,
        __x_ABI_CWindows_CData_CXml_CDom_CIXmlNode* newChild,
        __x_ABI_CWindows_CData_CXml_CDom_CIXmlNode** appendedChild);
    HRESULT (STDMETHODCALLTYPE* CloneNode)(__x_ABI_CWindows_CData_CXml_CDom_CIXmlNode* This,
        boolean deep,
        __x_ABI_CWindows_CData_CXml_CDom_CIXmlNode** newNode);
    HRESULT (STDMETHODCALLTYPE* get_NamespaceUri)(__x_ABI_CWindows_CData_CXml_CDom_CIXmlNode* This,
        IInspectable** value);
    HRESULT (STDMETHODCALLTYPE* get_LocalName)(__x_ABI_CWindows_CData_CXml_CDom_CIXmlNode* This,
        IInspectable** value);
    HRESULT (STDMETHODCALLTYPE* get_Prefix)(__x_ABI_CWindows_CData_CXml_CDom_CIXmlNode* This,
        IInspectable** value);
    HRESULT (STDMETHODCALLTYPE* Normalize)(__x_ABI_CWindows_CData_CXml_CDom_CIXmlNode* This);
    HRESULT (STDMETHODCALLTYPE* put_Prefix)(__x_ABI_CWindows_CData_CXml_CDom_CIXmlNode* This,
        IInspectable* value);

        END_INTERFACE
    } __x_ABI_CWindows_CData_CXml_CDom_CIXmlNodeVtbl;

    interface __x_ABI_CWindows_CData_CXml_CDom_CIXmlNode
    {
        CONST_VTBL struct __x_ABI_CWindows_CData_CXml_CDom_CIXmlNodeVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CData_CXml_CDom_CIXmlNode;
#endif /* !defined(____x_ABI_CWindows_CData_CXml_CDom_CIXmlNode_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CData_CXml_CDom_CIXmlNodeList_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CData_CXml_CDom_CIXmlNodeList_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CData_CXml_CDom_CIXmlNodeListVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CData_CXml_CDom_CIXmlNodeList* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CData_CXml_CDom_CIXmlNodeList* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CData_CXml_CDom_CIXmlNodeList* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CData_CXml_CDom_CIXmlNodeList* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CData_CXml_CDom_CIXmlNodeList* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CData_CXml_CDom_CIXmlNodeList* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Length)(__x_ABI_CWindows_CData_CXml_CDom_CIXmlNodeList* This,
        UINT32* value);
    HRESULT (STDMETHODCALLTYPE* Item)(__x_ABI_CWindows_CData_CXml_CDom_CIXmlNodeList* This,
        UINT32 index,
        __x_ABI_CWindows_CData_CXml_CDom_CIXmlNode** node);

        END_INTERFACE
    } __x_ABI_CWindows_CData_CXml_CDom_CIXmlNodeListVtbl;

    interface __x_ABI_CWindows_CData_CXml_CDom_CIXmlNodeList
    {
        CONST_VTBL struct __x_ABI_CWindows_CData_CXml_CDom_CIXmlNodeListVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CData_CXml_CDom_CIXmlNodeList;
#endif /* !defined(____x_ABI_CWindows_CData_CXml_CDom_CIXmlNodeList_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CData_CXml_CDom_CIXmlNodeSelector_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CData_CXml_CDom_CIXmlNodeSelector_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CData_CXml_CDom_CIXmlNodeSelectorVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CData_CXml_CDom_CIXmlNodeSelector* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CData_CXml_CDom_CIXmlNodeSelector* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CData_CXml_CDom_CIXmlNodeSelector* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CData_CXml_CDom_CIXmlNodeSelector* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CData_CXml_CDom_CIXmlNodeSelector* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CData_CXml_CDom_CIXmlNodeSelector* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* SelectSingleNode)(__x_ABI_CWindows_CData_CXml_CDom_CIXmlNodeSelector* This,
        HSTRING xpath,
        __x_ABI_CWindows_CData_CXml_CDom_CIXmlNode** node);
    HRESULT (STDMETHODCALLTYPE* SelectNodes)(__x_ABI_CWindows_CData_CXml_CDom_CIXmlNodeSelector* This,
        HSTRING xpath,
        __x_ABI_CWindows_CData_CXml_CDom_CIXmlNodeList** nodelist);
    HRESULT (STDMETHODCALLTYPE* SelectSingleNodeNS)(__x_ABI_CWindows_CData_CXml_CDom_CIXmlNodeSelector* This,
        HSTRING xpath,
        IInspectable* namespaces,
        __x_ABI_CWindows_CData_CXml_CDom_CIXmlNode** node);
    HRESULT (STDMETHODCALLTYPE* SelectNodesNS)(__x_ABI_CWindows_CData_CXml_CDom_CIXmlNodeSelector* This,
        HSTRING xpath,
        IInspectable* namespaces,
        __x_ABI_CWindows_CData_CXml_CDom_CIXmlNodeList** nodelist);

        END_INTERFACE
    } __x_ABI_CWindows_CData_CXml_CDom_CIXmlNodeSelectorVtbl;

    interface __x_ABI_CWindows_CData_CXml_CDom_CIXmlNodeSelector
    {
        CONST_VTBL struct __x_ABI_CWindows_CData_CXml_CDom_CIXmlNodeSelectorVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CData_CXml_CDom_CIXmlNodeSelector;
#endif /* !defined(____x_ABI_CWindows_CData_CXml_CDom_CIXmlNodeSelector_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CData_CXml_CDom_CIXmlNodeSerializer_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CData_CXml_CDom_CIXmlNodeSerializer_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CData_CXml_CDom_CIXmlNodeSerializerVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CData_CXml_CDom_CIXmlNodeSerializer* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CData_CXml_CDom_CIXmlNodeSerializer* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CData_CXml_CDom_CIXmlNodeSerializer* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CData_CXml_CDom_CIXmlNodeSerializer* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CData_CXml_CDom_CIXmlNodeSerializer* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CData_CXml_CDom_CIXmlNodeSerializer* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* GetXml)(__x_ABI_CWindows_CData_CXml_CDom_CIXmlNodeSerializer* This,
        HSTRING* outerXml);
    HRESULT (STDMETHODCALLTYPE* get_InnerText)(__x_ABI_CWindows_CData_CXml_CDom_CIXmlNodeSerializer* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* put_InnerText)(__x_ABI_CWindows_CData_CXml_CDom_CIXmlNodeSerializer* This,
        HSTRING value);

        END_INTERFACE
    } __x_ABI_CWindows_CData_CXml_CDom_CIXmlNodeSerializerVtbl;

    interface __x_ABI_CWindows_CData_CXml_CDom_CIXmlNodeSerializer
    {
        CONST_VTBL struct __x_ABI_CWindows_CData_CXml_CDom_CIXmlNodeSerializerVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CData_CXml_CDom_CIXmlNodeSerializer;
#endif /* !defined(____x_ABI_CWindows_CData_CXml_CDom_CIXmlNodeSerializer_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CData_CXml_CDom_CIXmlProcessingInstruction_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CData_CXml_CDom_CIXmlProcessingInstruction_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CData_CXml_CDom_CIXmlProcessingInstructionVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CData_CXml_CDom_CIXmlProcessingInstruction* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CData_CXml_CDom_CIXmlProcessingInstruction* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CData_CXml_CDom_CIXmlProcessingInstruction* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CData_CXml_CDom_CIXmlProcessingInstruction* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CData_CXml_CDom_CIXmlProcessingInstruction* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CData_CXml_CDom_CIXmlProcessingInstruction* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Target)(__x_ABI_CWindows_CData_CXml_CDom_CIXmlProcessingInstruction* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* get_Data)(__x_ABI_CWindows_CData_CXml_CDom_CIXmlProcessingInstruction* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* put_Data)(__x_ABI_CWindows_CData_CXml_CDom_CIXmlProcessingInstruction* This,
        HSTRING value);

        END_INTERFACE
    } __x_ABI_CWindows_CData_CXml_CDom_CIXmlProcessingInstructionVtbl;

    interface __x_ABI_CWindows_CData_CXml_CDom_CIXmlProcessingInstruction
    {
        CONST_VTBL struct __x_ABI_CWindows_CData_CXml_CDom_CIXmlProcessingInstructionVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CData_CXml_CDom_CIXmlProcessingInstruction;
#endif /* !defined(____x_ABI_CWindows_CData_CXml_CDom_CIXmlProcessingInstruction_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CData_CXml_CDom_CIXmlText_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CData_CXml_CDom_CIXmlText_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CData_CXml_CDom_CIXmlTextVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CData_CXml_CDom_CIXmlText* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CData_CXml_CDom_CIXmlText* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CData_CXml_CDom_CIXmlText* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CData_CXml_CDom_CIXmlText* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CData_CXml_CDom_CIXmlText* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CData_CXml_CDom_CIXmlText* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* SplitText)(__x_ABI_CWindows_CData_CXml_CDom_CIXmlText* This,
        UINT32 offset,
        __x_ABI_CWindows_CData_CXml_CDom_CIXmlText** secondPart);

        END_INTERFACE
    } __x_ABI_CWindows_CData_CXml_CDom_CIXmlTextVtbl;

    interface __x_ABI_CWindows_CData_CXml_CDom_CIXmlText
    {
        CONST_VTBL struct __x_ABI_CWindows_CData_CXml_CDom_CIXmlTextVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CData_CXml_CDom_CIXmlText;
#endif /* !defined(____x_ABI_CWindows_CData_CXml_CDom_CIXmlText_INTERFACE_DEFINED__) */
    
