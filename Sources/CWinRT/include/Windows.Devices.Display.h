// WARNING: Please don't edit this file. It was generated by Swift/WinRT v0.0.1

#pragma once
// Header files for imported files
#include <inspectable.h>
#include <EventToken.h>
#include <windowscontracts.h>
#include "Windows.Foundation.h"
#include "Windows.Graphics.h"

/* Forward Declarations */
#ifndef ____x_ABI_CWindows_CDevices_CDisplay_CIDisplayMonitor_FWD_DEFINED__
#define ____x_ABI_CWindows_CDevices_CDisplay_CIDisplayMonitor_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CDevices_CDisplay_CIDisplayMonitor __x_ABI_CWindows_CDevices_CDisplay_CIDisplayMonitor;

#endif // ____x_ABI_CWindows_CDevices_CDisplay_CIDisplayMonitor_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CDevices_CDisplay_CIDisplayMonitorStatics_FWD_DEFINED__
#define ____x_ABI_CWindows_CDevices_CDisplay_CIDisplayMonitorStatics_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CDevices_CDisplay_CIDisplayMonitorStatics __x_ABI_CWindows_CDevices_CDisplay_CIDisplayMonitorStatics;

#endif // ____x_ABI_CWindows_CDevices_CDisplay_CIDisplayMonitorStatics_FWD_DEFINED__

// Parameterized interface forward declarations (C)

// Collection interface definitions

typedef interface __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CDevices__CDisplay__CDisplayMonitor __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CDevices__CDisplay__CDisplayMonitor;

#if !defined(____x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CDevices__CDisplay__CDisplayMonitor_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CDevices__CDisplay__CDisplayMonitor_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CDevices__CDisplay__CDisplayMonitor __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CDevices__CDisplay__CDisplayMonitor;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CDevices__CDisplay__CDisplayMonitor;

    typedef struct __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CDevices__CDisplay__CDisplayMonitorVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CDevices__CDisplay__CDisplayMonitor* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CDevices__CDisplay__CDisplayMonitor* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CDevices__CDisplay__CDisplayMonitor* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CDevices__CDisplay__CDisplayMonitor* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CDevices__CDisplay__CDisplayMonitor* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CDevices__CDisplay__CDisplayMonitor* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* put_Completed)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CDevices__CDisplay__CDisplayMonitor* This,
        __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CDevices__CDisplay__CDisplayMonitor* handler);
    HRESULT (STDMETHODCALLTYPE* get_Completed)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CDevices__CDisplay__CDisplayMonitor* This,
        __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CDevices__CDisplay__CDisplayMonitor** result);
    HRESULT (STDMETHODCALLTYPE* GetResults)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CDevices__CDisplay__CDisplayMonitor* This,
        __x_ABI_CWindows_CDevices_CDisplay_CIDisplayMonitor** result);

        END_INTERFACE
    } __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CDevices__CDisplay__CDisplayMonitorVtbl;

    interface __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CDevices__CDisplay__CDisplayMonitor
    {
        CONST_VTBL struct __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CDevices__CDisplay__CDisplayMonitorVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CDevices__CDisplay__CDisplayMonitor_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CDevices__CDisplay__CDisplayMonitor_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CDevices__CDisplay__CDisplayMonitor_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CDevices__CDisplay__CDisplayMonitor __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CDevices__CDisplay__CDisplayMonitor;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CDevices__CDisplay__CDisplayMonitor;

    typedef struct __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CDevices__CDisplay__CDisplayMonitorVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CDevices__CDisplay__CDisplayMonitor* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CDevices__CDisplay__CDisplayMonitor* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CDevices__CDisplay__CDisplayMonitor* This);
        HRESULT (STDMETHODCALLTYPE* Invoke)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CDevices__CDisplay__CDisplayMonitor* This,
        __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CDevices__CDisplay__CDisplayMonitor* asyncInfo,
        enum __x_ABI_CWindows_CFoundation_CAsyncStatus asyncStatus);

        END_INTERFACE
    } __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CDevices__CDisplay__CDisplayMonitorVtbl;

    interface __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CDevices__CDisplay__CDisplayMonitor
    {
        CONST_VTBL struct __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CDevices__CDisplay__CDisplayMonitorVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CDevices__CDisplay__CDisplayMonitor_INTERFACE_DEFINED__
    
typedef struct __x_ABI_CWindows_CFoundation_CSize __x_ABI_CWindows_CFoundation_CSize;

#if !defined(____x_ABI_C__FIReference_1___x_ABI_CWindows__CFoundation__CSize_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIReference_1___x_ABI_CWindows__CFoundation__CSize_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIReference_1___x_ABI_CWindows__CFoundation__CSize __x_ABI_C__FIReference_1___x_ABI_CWindows__CFoundation__CSize;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIReference_1___x_ABI_CWindows__CFoundation__CSize;

    typedef struct __x_ABI_C__FIReference_1___x_ABI_CWindows__CFoundation__CSizeVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIReference_1___x_ABI_CWindows__CFoundation__CSize* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIReference_1___x_ABI_CWindows__CFoundation__CSize* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIReference_1___x_ABI_CWindows__CFoundation__CSize* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIReference_1___x_ABI_CWindows__CFoundation__CSize* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIReference_1___x_ABI_CWindows__CFoundation__CSize* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIReference_1___x_ABI_CWindows__CFoundation__CSize* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Value)(__x_ABI_C__FIReference_1___x_ABI_CWindows__CFoundation__CSize* This,
        struct __x_ABI_CWindows_CFoundation_CSize* result);

        END_INTERFACE
    } __x_ABI_C__FIReference_1___x_ABI_CWindows__CFoundation__CSizeVtbl;

    interface __x_ABI_C__FIReference_1___x_ABI_CWindows__CFoundation__CSize
    {
        CONST_VTBL struct __x_ABI_C__FIReference_1___x_ABI_CWindows__CFoundation__CSizeVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIReference_1___x_ABI_CWindows__CFoundation__CSize_INTERFACE_DEFINED__
    
typedef enum __x_ABI_CWindows_CFoundation_CAsyncStatus __x_ABI_CWindows_CFoundation_CAsyncStatus;

#ifndef ____x_ABI_CWindows_CFoundation_CIAsyncInfo_FWD_DEFINED__
#define ____x_ABI_CWindows_CFoundation_CIAsyncInfo_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CFoundation_CIAsyncInfo __x_ABI_CWindows_CFoundation_CIAsyncInfo;

#endif // ____x_ABI_CWindows_CFoundation_CIAsyncInfo_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CFoundation_CIPropertyValue_FWD_DEFINED__
#define ____x_ABI_CWindows_CFoundation_CIPropertyValue_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CFoundation_CIPropertyValue __x_ABI_CWindows_CFoundation_CIPropertyValue;

#endif // ____x_ABI_CWindows_CFoundation_CIPropertyValue_FWD_DEFINED__

typedef struct __x_ABI_CWindows_CFoundation_CPoint __x_ABI_CWindows_CFoundation_CPoint;

typedef struct __x_ABI_CWindows_CGraphics_CDisplayAdapterId __x_ABI_CWindows_CGraphics_CDisplayAdapterId;

typedef struct __x_ABI_CWindows_CGraphics_CSizeInt32 __x_ABI_CWindows_CGraphics_CSizeInt32;

typedef enum __x_ABI_CWindows_CDevices_CDisplay_CDisplayMonitorConnectionKind __x_ABI_CWindows_CDevices_CDisplay_CDisplayMonitorConnectionKind;

typedef enum __x_ABI_CWindows_CDevices_CDisplay_CDisplayMonitorDescriptorKind __x_ABI_CWindows_CDevices_CDisplay_CDisplayMonitorDescriptorKind;

typedef enum __x_ABI_CWindows_CDevices_CDisplay_CDisplayMonitorPhysicalConnectorKind __x_ABI_CWindows_CDevices_CDisplay_CDisplayMonitorPhysicalConnectorKind;

typedef enum __x_ABI_CWindows_CDevices_CDisplay_CDisplayMonitorUsageKind __x_ABI_CWindows_CDevices_CDisplay_CDisplayMonitorUsageKind;

enum __x_ABI_CWindows_CDevices_CDisplay_CDisplayMonitorConnectionKind
    {
        __x_ABI_CWindows_CDevices_CDisplay_CDisplayMonitorConnectionKind_Internal = 0,
    __x_ABI_CWindows_CDevices_CDisplay_CDisplayMonitorConnectionKind_Wired = 1,
    __x_ABI_CWindows_CDevices_CDisplay_CDisplayMonitorConnectionKind_Wireless = 2,
    __x_ABI_CWindows_CDevices_CDisplay_CDisplayMonitorConnectionKind_Virtual = 3,
};

enum __x_ABI_CWindows_CDevices_CDisplay_CDisplayMonitorDescriptorKind
    {
        __x_ABI_CWindows_CDevices_CDisplay_CDisplayMonitorDescriptorKind_Edid = 0,
    __x_ABI_CWindows_CDevices_CDisplay_CDisplayMonitorDescriptorKind_DisplayId = 1,
};

enum __x_ABI_CWindows_CDevices_CDisplay_CDisplayMonitorPhysicalConnectorKind
    {
        __x_ABI_CWindows_CDevices_CDisplay_CDisplayMonitorPhysicalConnectorKind_Unknown = 0,
    __x_ABI_CWindows_CDevices_CDisplay_CDisplayMonitorPhysicalConnectorKind_HD15 = 1,
    __x_ABI_CWindows_CDevices_CDisplay_CDisplayMonitorPhysicalConnectorKind_AnalogTV = 2,
    __x_ABI_CWindows_CDevices_CDisplay_CDisplayMonitorPhysicalConnectorKind_Dvi = 3,
    __x_ABI_CWindows_CDevices_CDisplay_CDisplayMonitorPhysicalConnectorKind_Hdmi = 4,
    __x_ABI_CWindows_CDevices_CDisplay_CDisplayMonitorPhysicalConnectorKind_Lvds = 5,
    __x_ABI_CWindows_CDevices_CDisplay_CDisplayMonitorPhysicalConnectorKind_Sdi = 6,
    __x_ABI_CWindows_CDevices_CDisplay_CDisplayMonitorPhysicalConnectorKind_DisplayPort = 7,
};

enum __x_ABI_CWindows_CDevices_CDisplay_CDisplayMonitorUsageKind
    {
        __x_ABI_CWindows_CDevices_CDisplay_CDisplayMonitorUsageKind_Standard = 0,
    __x_ABI_CWindows_CDevices_CDisplay_CDisplayMonitorUsageKind_HeadMounted = 1,
    __x_ABI_CWindows_CDevices_CDisplay_CDisplayMonitorUsageKind_SpecialPurpose = 2,
};

#if !defined(____x_ABI_CWindows_CDevices_CDisplay_CIDisplayMonitor_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CDevices_CDisplay_CIDisplayMonitor_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CDevices_CDisplay_CIDisplayMonitorVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CDevices_CDisplay_CIDisplayMonitor* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CDevices_CDisplay_CIDisplayMonitor* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CDevices_CDisplay_CIDisplayMonitor* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CDevices_CDisplay_CIDisplayMonitor* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CDevices_CDisplay_CIDisplayMonitor* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CDevices_CDisplay_CIDisplayMonitor* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_DeviceId)(__x_ABI_CWindows_CDevices_CDisplay_CIDisplayMonitor* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* get_DisplayName)(__x_ABI_CWindows_CDevices_CDisplay_CIDisplayMonitor* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* get_ConnectionKind)(__x_ABI_CWindows_CDevices_CDisplay_CIDisplayMonitor* This,
        enum __x_ABI_CWindows_CDevices_CDisplay_CDisplayMonitorConnectionKind* value);
    HRESULT (STDMETHODCALLTYPE* get_PhysicalConnector)(__x_ABI_CWindows_CDevices_CDisplay_CIDisplayMonitor* This,
        enum __x_ABI_CWindows_CDevices_CDisplay_CDisplayMonitorPhysicalConnectorKind* value);
    HRESULT (STDMETHODCALLTYPE* get_DisplayAdapterDeviceId)(__x_ABI_CWindows_CDevices_CDisplay_CIDisplayMonitor* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* get_DisplayAdapterId)(__x_ABI_CWindows_CDevices_CDisplay_CIDisplayMonitor* This,
        struct __x_ABI_CWindows_CGraphics_CDisplayAdapterId* value);
    HRESULT (STDMETHODCALLTYPE* get_DisplayAdapterTargetId)(__x_ABI_CWindows_CDevices_CDisplay_CIDisplayMonitor* This,
        UINT32* value);
    HRESULT (STDMETHODCALLTYPE* get_UsageKind)(__x_ABI_CWindows_CDevices_CDisplay_CIDisplayMonitor* This,
        enum __x_ABI_CWindows_CDevices_CDisplay_CDisplayMonitorUsageKind* value);
    HRESULT (STDMETHODCALLTYPE* get_NativeResolutionInRawPixels)(__x_ABI_CWindows_CDevices_CDisplay_CIDisplayMonitor* This,
        struct __x_ABI_CWindows_CGraphics_CSizeInt32* value);
    HRESULT (STDMETHODCALLTYPE* get_PhysicalSizeInInches)(__x_ABI_CWindows_CDevices_CDisplay_CIDisplayMonitor* This,
        __x_ABI_C__FIReference_1___x_ABI_CWindows__CFoundation__CSize** value);
    HRESULT (STDMETHODCALLTYPE* get_RawDpiX)(__x_ABI_CWindows_CDevices_CDisplay_CIDisplayMonitor* This,
        FLOAT* value);
    HRESULT (STDMETHODCALLTYPE* get_RawDpiY)(__x_ABI_CWindows_CDevices_CDisplay_CIDisplayMonitor* This,
        FLOAT* value);
    HRESULT (STDMETHODCALLTYPE* get_RedPrimary)(__x_ABI_CWindows_CDevices_CDisplay_CIDisplayMonitor* This,
        struct __x_ABI_CWindows_CFoundation_CPoint* value);
    HRESULT (STDMETHODCALLTYPE* get_GreenPrimary)(__x_ABI_CWindows_CDevices_CDisplay_CIDisplayMonitor* This,
        struct __x_ABI_CWindows_CFoundation_CPoint* value);
    HRESULT (STDMETHODCALLTYPE* get_BluePrimary)(__x_ABI_CWindows_CDevices_CDisplay_CIDisplayMonitor* This,
        struct __x_ABI_CWindows_CFoundation_CPoint* value);
    HRESULT (STDMETHODCALLTYPE* get_WhitePoint)(__x_ABI_CWindows_CDevices_CDisplay_CIDisplayMonitor* This,
        struct __x_ABI_CWindows_CFoundation_CPoint* value);
    HRESULT (STDMETHODCALLTYPE* get_MaxLuminanceInNits)(__x_ABI_CWindows_CDevices_CDisplay_CIDisplayMonitor* This,
        FLOAT* value);
    HRESULT (STDMETHODCALLTYPE* get_MinLuminanceInNits)(__x_ABI_CWindows_CDevices_CDisplay_CIDisplayMonitor* This,
        FLOAT* value);
    HRESULT (STDMETHODCALLTYPE* get_MaxAverageFullFrameLuminanceInNits)(__x_ABI_CWindows_CDevices_CDisplay_CIDisplayMonitor* This,
        FLOAT* value);
    HRESULT (STDMETHODCALLTYPE* GetDescriptor)(__x_ABI_CWindows_CDevices_CDisplay_CIDisplayMonitor* This,
        enum __x_ABI_CWindows_CDevices_CDisplay_CDisplayMonitorDescriptorKind descriptorKind,
        UINT32* resultLength,
        BYTE** result);

        END_INTERFACE
    } __x_ABI_CWindows_CDevices_CDisplay_CIDisplayMonitorVtbl;

    interface __x_ABI_CWindows_CDevices_CDisplay_CIDisplayMonitor
    {
        CONST_VTBL struct __x_ABI_CWindows_CDevices_CDisplay_CIDisplayMonitorVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CDevices_CDisplay_CIDisplayMonitor;
#endif /* !defined(____x_ABI_CWindows_CDevices_CDisplay_CIDisplayMonitor_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CDevices_CDisplay_CIDisplayMonitorStatics_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CDevices_CDisplay_CIDisplayMonitorStatics_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CDevices_CDisplay_CIDisplayMonitorStaticsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CDevices_CDisplay_CIDisplayMonitorStatics* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CDevices_CDisplay_CIDisplayMonitorStatics* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CDevices_CDisplay_CIDisplayMonitorStatics* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CDevices_CDisplay_CIDisplayMonitorStatics* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CDevices_CDisplay_CIDisplayMonitorStatics* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CDevices_CDisplay_CIDisplayMonitorStatics* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* GetDeviceSelector)(__x_ABI_CWindows_CDevices_CDisplay_CIDisplayMonitorStatics* This,
        HSTRING* result);
    HRESULT (STDMETHODCALLTYPE* FromIdAsync)(__x_ABI_CWindows_CDevices_CDisplay_CIDisplayMonitorStatics* This,
        HSTRING deviceId,
        __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CDevices__CDisplay__CDisplayMonitor** operation);
    HRESULT (STDMETHODCALLTYPE* FromInterfaceIdAsync)(__x_ABI_CWindows_CDevices_CDisplay_CIDisplayMonitorStatics* This,
        HSTRING deviceInterfaceId,
        __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CDevices__CDisplay__CDisplayMonitor** operation);

        END_INTERFACE
    } __x_ABI_CWindows_CDevices_CDisplay_CIDisplayMonitorStaticsVtbl;

    interface __x_ABI_CWindows_CDevices_CDisplay_CIDisplayMonitorStatics
    {
        CONST_VTBL struct __x_ABI_CWindows_CDevices_CDisplay_CIDisplayMonitorStaticsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CDevices_CDisplay_CIDisplayMonitorStatics;
#endif /* !defined(____x_ABI_CWindows_CDevices_CDisplay_CIDisplayMonitorStatics_INTERFACE_DEFINED__) */
    
