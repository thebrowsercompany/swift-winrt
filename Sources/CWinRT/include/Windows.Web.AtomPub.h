// WARNING: Please don't edit this file. It was generated by Swift/WinRT v0.0.1

#pragma once
// Header files for imported files
#include <inspectable.h>
#include <EventToken.h>
#include <windowscontracts.h>
#include "Windows.Foundation.h"
#include "Windows.Security.Credentials.h"
#include "Windows.Storage.Streams.h"
#include "Windows.Web.Syndication.h"
// Importing Collections header
#include "Windows.Foundation.Collections.h"

/* Forward Declarations */
#ifndef ____x_ABI_CWindows_CWeb_CAtomPub_CIAtomPubClient_FWD_DEFINED__
#define ____x_ABI_CWindows_CWeb_CAtomPub_CIAtomPubClient_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CWeb_CAtomPub_CIAtomPubClient __x_ABI_CWindows_CWeb_CAtomPub_CIAtomPubClient;

#endif // ____x_ABI_CWindows_CWeb_CAtomPub_CIAtomPubClient_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CWeb_CAtomPub_CIAtomPubClientFactory_FWD_DEFINED__
#define ____x_ABI_CWindows_CWeb_CAtomPub_CIAtomPubClientFactory_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CWeb_CAtomPub_CIAtomPubClientFactory __x_ABI_CWindows_CWeb_CAtomPub_CIAtomPubClientFactory;

#endif // ____x_ABI_CWindows_CWeb_CAtomPub_CIAtomPubClientFactory_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CWeb_CAtomPub_CIResourceCollection_FWD_DEFINED__
#define ____x_ABI_CWindows_CWeb_CAtomPub_CIResourceCollection_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CWeb_CAtomPub_CIResourceCollection __x_ABI_CWindows_CWeb_CAtomPub_CIResourceCollection;

#endif // ____x_ABI_CWindows_CWeb_CAtomPub_CIResourceCollection_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CWeb_CAtomPub_CIServiceDocument_FWD_DEFINED__
#define ____x_ABI_CWindows_CWeb_CAtomPub_CIServiceDocument_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CWeb_CAtomPub_CIServiceDocument __x_ABI_CWindows_CWeb_CAtomPub_CIServiceDocument;

#endif // ____x_ABI_CWindows_CWeb_CAtomPub_CIServiceDocument_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CWeb_CAtomPub_CIWorkspace_FWD_DEFINED__
#define ____x_ABI_CWindows_CWeb_CAtomPub_CIWorkspace_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CWeb_CAtomPub_CIWorkspace __x_ABI_CWindows_CWeb_CAtomPub_CIWorkspace;

#endif // ____x_ABI_CWindows_CWeb_CAtomPub_CIWorkspace_FWD_DEFINED__

// Parameterized interface forward declarations (C)

// Collection interface definitions

typedef struct __x_ABI_CWindows_CWeb_CSyndication_CTransferProgress __x_ABI_CWindows_CWeb_CSyndication_CTransferProgress;

typedef interface __x_ABI_C__FIAsyncActionProgressHandler_1___x_ABI_CWindows__CWeb__CSyndication__CTransferProgress __x_ABI_C__FIAsyncActionProgressHandler_1___x_ABI_CWindows__CWeb__CSyndication__CTransferProgress;

typedef interface __x_ABI_C__FIAsyncActionWithProgress_1___x_ABI_CWindows__CWeb__CSyndication__CTransferProgress __x_ABI_C__FIAsyncActionWithProgress_1___x_ABI_CWindows__CWeb__CSyndication__CTransferProgress;

#if !defined(____x_ABI_C__FIAsyncActionWithProgressCompletedHandler_1___x_ABI_CWindows__CWeb__CSyndication__CTransferProgress_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIAsyncActionWithProgressCompletedHandler_1___x_ABI_CWindows__CWeb__CSyndication__CTransferProgress_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIAsyncActionWithProgressCompletedHandler_1___x_ABI_CWindows__CWeb__CSyndication__CTransferProgress __x_ABI_C__FIAsyncActionWithProgressCompletedHandler_1___x_ABI_CWindows__CWeb__CSyndication__CTransferProgress;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIAsyncActionWithProgressCompletedHandler_1___x_ABI_CWindows__CWeb__CSyndication__CTransferProgress;

    typedef struct __x_ABI_C__FIAsyncActionWithProgressCompletedHandler_1___x_ABI_CWindows__CWeb__CSyndication__CTransferProgressVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIAsyncActionWithProgressCompletedHandler_1___x_ABI_CWindows__CWeb__CSyndication__CTransferProgress* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIAsyncActionWithProgressCompletedHandler_1___x_ABI_CWindows__CWeb__CSyndication__CTransferProgress* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIAsyncActionWithProgressCompletedHandler_1___x_ABI_CWindows__CWeb__CSyndication__CTransferProgress* This);
        HRESULT (STDMETHODCALLTYPE* Invoke)(__x_ABI_C__FIAsyncActionWithProgressCompletedHandler_1___x_ABI_CWindows__CWeb__CSyndication__CTransferProgress* This,
        __x_ABI_C__FIAsyncActionWithProgress_1___x_ABI_CWindows__CWeb__CSyndication__CTransferProgress* asyncInfo,
        enum __x_ABI_CWindows_CFoundation_CAsyncStatus asyncStatus);

        END_INTERFACE
    } __x_ABI_C__FIAsyncActionWithProgressCompletedHandler_1___x_ABI_CWindows__CWeb__CSyndication__CTransferProgressVtbl;

    interface __x_ABI_C__FIAsyncActionWithProgressCompletedHandler_1___x_ABI_CWindows__CWeb__CSyndication__CTransferProgress
    {
        CONST_VTBL struct __x_ABI_C__FIAsyncActionWithProgressCompletedHandler_1___x_ABI_CWindows__CWeb__CSyndication__CTransferProgressVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIAsyncActionWithProgressCompletedHandler_1___x_ABI_CWindows__CWeb__CSyndication__CTransferProgress_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIAsyncActionWithProgress_1___x_ABI_CWindows__CWeb__CSyndication__CTransferProgress_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIAsyncActionWithProgress_1___x_ABI_CWindows__CWeb__CSyndication__CTransferProgress_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIAsyncActionWithProgress_1___x_ABI_CWindows__CWeb__CSyndication__CTransferProgress __x_ABI_C__FIAsyncActionWithProgress_1___x_ABI_CWindows__CWeb__CSyndication__CTransferProgress;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIAsyncActionWithProgress_1___x_ABI_CWindows__CWeb__CSyndication__CTransferProgress;

    typedef struct __x_ABI_C__FIAsyncActionWithProgress_1___x_ABI_CWindows__CWeb__CSyndication__CTransferProgressVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIAsyncActionWithProgress_1___x_ABI_CWindows__CWeb__CSyndication__CTransferProgress* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIAsyncActionWithProgress_1___x_ABI_CWindows__CWeb__CSyndication__CTransferProgress* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIAsyncActionWithProgress_1___x_ABI_CWindows__CWeb__CSyndication__CTransferProgress* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIAsyncActionWithProgress_1___x_ABI_CWindows__CWeb__CSyndication__CTransferProgress* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIAsyncActionWithProgress_1___x_ABI_CWindows__CWeb__CSyndication__CTransferProgress* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIAsyncActionWithProgress_1___x_ABI_CWindows__CWeb__CSyndication__CTransferProgress* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* put_Progress)(__x_ABI_C__FIAsyncActionWithProgress_1___x_ABI_CWindows__CWeb__CSyndication__CTransferProgress* This,
        __x_ABI_C__FIAsyncActionProgressHandler_1___x_ABI_CWindows__CWeb__CSyndication__CTransferProgress* handler);
    HRESULT (STDMETHODCALLTYPE* get_Progress)(__x_ABI_C__FIAsyncActionWithProgress_1___x_ABI_CWindows__CWeb__CSyndication__CTransferProgress* This,
        __x_ABI_C__FIAsyncActionProgressHandler_1___x_ABI_CWindows__CWeb__CSyndication__CTransferProgress** result);
    HRESULT (STDMETHODCALLTYPE* put_Completed)(__x_ABI_C__FIAsyncActionWithProgress_1___x_ABI_CWindows__CWeb__CSyndication__CTransferProgress* This,
        __x_ABI_C__FIAsyncActionWithProgressCompletedHandler_1___x_ABI_CWindows__CWeb__CSyndication__CTransferProgress* handler);
    HRESULT (STDMETHODCALLTYPE* get_Completed)(__x_ABI_C__FIAsyncActionWithProgress_1___x_ABI_CWindows__CWeb__CSyndication__CTransferProgress* This,
        __x_ABI_C__FIAsyncActionWithProgressCompletedHandler_1___x_ABI_CWindows__CWeb__CSyndication__CTransferProgress** result);
    HRESULT (STDMETHODCALLTYPE* GetResults)(__x_ABI_C__FIAsyncActionWithProgress_1___x_ABI_CWindows__CWeb__CSyndication__CTransferProgress* This);

        END_INTERFACE
    } __x_ABI_C__FIAsyncActionWithProgress_1___x_ABI_CWindows__CWeb__CSyndication__CTransferProgressVtbl;

    interface __x_ABI_C__FIAsyncActionWithProgress_1___x_ABI_CWindows__CWeb__CSyndication__CTransferProgress
    {
        CONST_VTBL struct __x_ABI_C__FIAsyncActionWithProgress_1___x_ABI_CWindows__CWeb__CSyndication__CTransferProgressVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIAsyncActionWithProgress_1___x_ABI_CWindows__CWeb__CSyndication__CTransferProgress_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIAsyncActionProgressHandler_1___x_ABI_CWindows__CWeb__CSyndication__CTransferProgress_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIAsyncActionProgressHandler_1___x_ABI_CWindows__CWeb__CSyndication__CTransferProgress_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIAsyncActionProgressHandler_1___x_ABI_CWindows__CWeb__CSyndication__CTransferProgress __x_ABI_C__FIAsyncActionProgressHandler_1___x_ABI_CWindows__CWeb__CSyndication__CTransferProgress;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIAsyncActionProgressHandler_1___x_ABI_CWindows__CWeb__CSyndication__CTransferProgress;

    typedef struct __x_ABI_C__FIAsyncActionProgressHandler_1___x_ABI_CWindows__CWeb__CSyndication__CTransferProgressVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIAsyncActionProgressHandler_1___x_ABI_CWindows__CWeb__CSyndication__CTransferProgress* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIAsyncActionProgressHandler_1___x_ABI_CWindows__CWeb__CSyndication__CTransferProgress* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIAsyncActionProgressHandler_1___x_ABI_CWindows__CWeb__CSyndication__CTransferProgress* This);
        HRESULT (STDMETHODCALLTYPE* Invoke)(__x_ABI_C__FIAsyncActionProgressHandler_1___x_ABI_CWindows__CWeb__CSyndication__CTransferProgress* This,
        __x_ABI_C__FIAsyncActionWithProgress_1___x_ABI_CWindows__CWeb__CSyndication__CTransferProgress* asyncInfo,
        struct __x_ABI_CWindows_CWeb_CSyndication_CTransferProgress progressInfo);

        END_INTERFACE
    } __x_ABI_C__FIAsyncActionProgressHandler_1___x_ABI_CWindows__CWeb__CSyndication__CTransferProgressVtbl;

    interface __x_ABI_C__FIAsyncActionProgressHandler_1___x_ABI_CWindows__CWeb__CSyndication__CTransferProgress
    {
        CONST_VTBL struct __x_ABI_C__FIAsyncActionProgressHandler_1___x_ABI_CWindows__CWeb__CSyndication__CTransferProgressVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIAsyncActionProgressHandler_1___x_ABI_CWindows__CWeb__CSyndication__CTransferProgress_INTERFACE_DEFINED__
    
#ifndef ____x_ABI_CWindows_CStorage_CStreams_CIInputStream_FWD_DEFINED__
#define ____x_ABI_CWindows_CStorage_CStreams_CIInputStream_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CStorage_CStreams_CIInputStream __x_ABI_CWindows_CStorage_CStreams_CIInputStream;

#endif // ____x_ABI_CWindows_CStorage_CStreams_CIInputStream_FWD_DEFINED__

typedef struct __x_ABI_CWindows_CWeb_CSyndication_CRetrievalProgress __x_ABI_CWindows_CWeb_CSyndication_CRetrievalProgress;

typedef interface __x_ABI_C__FIAsyncOperationProgressHandler_2___x_ABI_CWindows__CStorage__CStreams__CIInputStream___x_ABI_CWindows__CWeb__CSyndication__CRetrievalProgress __x_ABI_C__FIAsyncOperationProgressHandler_2___x_ABI_CWindows__CStorage__CStreams__CIInputStream___x_ABI_CWindows__CWeb__CSyndication__CRetrievalProgress;

typedef interface __x_ABI_C__FIAsyncOperationWithProgress_2___x_ABI_CWindows__CStorage__CStreams__CIInputStream___x_ABI_CWindows__CWeb__CSyndication__CRetrievalProgress __x_ABI_C__FIAsyncOperationWithProgress_2___x_ABI_CWindows__CStorage__CStreams__CIInputStream___x_ABI_CWindows__CWeb__CSyndication__CRetrievalProgress;

#if !defined(____x_ABI_C__FIAsyncOperationWithProgressCompletedHandler_2___x_ABI_CWindows__CStorage__CStreams__CIInputStream___x_ABI_CWindows__CWeb__CSyndication__CRetrievalProgress_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIAsyncOperationWithProgressCompletedHandler_2___x_ABI_CWindows__CStorage__CStreams__CIInputStream___x_ABI_CWindows__CWeb__CSyndication__CRetrievalProgress_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIAsyncOperationWithProgressCompletedHandler_2___x_ABI_CWindows__CStorage__CStreams__CIInputStream___x_ABI_CWindows__CWeb__CSyndication__CRetrievalProgress __x_ABI_C__FIAsyncOperationWithProgressCompletedHandler_2___x_ABI_CWindows__CStorage__CStreams__CIInputStream___x_ABI_CWindows__CWeb__CSyndication__CRetrievalProgress;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIAsyncOperationWithProgressCompletedHandler_2___x_ABI_CWindows__CStorage__CStreams__CIInputStream___x_ABI_CWindows__CWeb__CSyndication__CRetrievalProgress;

    typedef struct __x_ABI_C__FIAsyncOperationWithProgressCompletedHandler_2___x_ABI_CWindows__CStorage__CStreams__CIInputStream___x_ABI_CWindows__CWeb__CSyndication__CRetrievalProgressVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIAsyncOperationWithProgressCompletedHandler_2___x_ABI_CWindows__CStorage__CStreams__CIInputStream___x_ABI_CWindows__CWeb__CSyndication__CRetrievalProgress* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIAsyncOperationWithProgressCompletedHandler_2___x_ABI_CWindows__CStorage__CStreams__CIInputStream___x_ABI_CWindows__CWeb__CSyndication__CRetrievalProgress* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIAsyncOperationWithProgressCompletedHandler_2___x_ABI_CWindows__CStorage__CStreams__CIInputStream___x_ABI_CWindows__CWeb__CSyndication__CRetrievalProgress* This);
        HRESULT (STDMETHODCALLTYPE* Invoke)(__x_ABI_C__FIAsyncOperationWithProgressCompletedHandler_2___x_ABI_CWindows__CStorage__CStreams__CIInputStream___x_ABI_CWindows__CWeb__CSyndication__CRetrievalProgress* This,
        __x_ABI_C__FIAsyncOperationWithProgress_2___x_ABI_CWindows__CStorage__CStreams__CIInputStream___x_ABI_CWindows__CWeb__CSyndication__CRetrievalProgress* asyncInfo,
        enum __x_ABI_CWindows_CFoundation_CAsyncStatus asyncStatus);

        END_INTERFACE
    } __x_ABI_C__FIAsyncOperationWithProgressCompletedHandler_2___x_ABI_CWindows__CStorage__CStreams__CIInputStream___x_ABI_CWindows__CWeb__CSyndication__CRetrievalProgressVtbl;

    interface __x_ABI_C__FIAsyncOperationWithProgressCompletedHandler_2___x_ABI_CWindows__CStorage__CStreams__CIInputStream___x_ABI_CWindows__CWeb__CSyndication__CRetrievalProgress
    {
        CONST_VTBL struct __x_ABI_C__FIAsyncOperationWithProgressCompletedHandler_2___x_ABI_CWindows__CStorage__CStreams__CIInputStream___x_ABI_CWindows__CWeb__CSyndication__CRetrievalProgressVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIAsyncOperationWithProgressCompletedHandler_2___x_ABI_CWindows__CStorage__CStreams__CIInputStream___x_ABI_CWindows__CWeb__CSyndication__CRetrievalProgress_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIAsyncOperationWithProgress_2___x_ABI_CWindows__CStorage__CStreams__CIInputStream___x_ABI_CWindows__CWeb__CSyndication__CRetrievalProgress_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIAsyncOperationWithProgress_2___x_ABI_CWindows__CStorage__CStreams__CIInputStream___x_ABI_CWindows__CWeb__CSyndication__CRetrievalProgress_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIAsyncOperationWithProgress_2___x_ABI_CWindows__CStorage__CStreams__CIInputStream___x_ABI_CWindows__CWeb__CSyndication__CRetrievalProgress __x_ABI_C__FIAsyncOperationWithProgress_2___x_ABI_CWindows__CStorage__CStreams__CIInputStream___x_ABI_CWindows__CWeb__CSyndication__CRetrievalProgress;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIAsyncOperationWithProgress_2___x_ABI_CWindows__CStorage__CStreams__CIInputStream___x_ABI_CWindows__CWeb__CSyndication__CRetrievalProgress;

    typedef struct __x_ABI_C__FIAsyncOperationWithProgress_2___x_ABI_CWindows__CStorage__CStreams__CIInputStream___x_ABI_CWindows__CWeb__CSyndication__CRetrievalProgressVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIAsyncOperationWithProgress_2___x_ABI_CWindows__CStorage__CStreams__CIInputStream___x_ABI_CWindows__CWeb__CSyndication__CRetrievalProgress* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIAsyncOperationWithProgress_2___x_ABI_CWindows__CStorage__CStreams__CIInputStream___x_ABI_CWindows__CWeb__CSyndication__CRetrievalProgress* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIAsyncOperationWithProgress_2___x_ABI_CWindows__CStorage__CStreams__CIInputStream___x_ABI_CWindows__CWeb__CSyndication__CRetrievalProgress* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIAsyncOperationWithProgress_2___x_ABI_CWindows__CStorage__CStreams__CIInputStream___x_ABI_CWindows__CWeb__CSyndication__CRetrievalProgress* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIAsyncOperationWithProgress_2___x_ABI_CWindows__CStorage__CStreams__CIInputStream___x_ABI_CWindows__CWeb__CSyndication__CRetrievalProgress* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIAsyncOperationWithProgress_2___x_ABI_CWindows__CStorage__CStreams__CIInputStream___x_ABI_CWindows__CWeb__CSyndication__CRetrievalProgress* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* put_Progress)(__x_ABI_C__FIAsyncOperationWithProgress_2___x_ABI_CWindows__CStorage__CStreams__CIInputStream___x_ABI_CWindows__CWeb__CSyndication__CRetrievalProgress* This,
        __x_ABI_C__FIAsyncOperationProgressHandler_2___x_ABI_CWindows__CStorage__CStreams__CIInputStream___x_ABI_CWindows__CWeb__CSyndication__CRetrievalProgress* handler);
    HRESULT (STDMETHODCALLTYPE* get_Progress)(__x_ABI_C__FIAsyncOperationWithProgress_2___x_ABI_CWindows__CStorage__CStreams__CIInputStream___x_ABI_CWindows__CWeb__CSyndication__CRetrievalProgress* This,
        __x_ABI_C__FIAsyncOperationProgressHandler_2___x_ABI_CWindows__CStorage__CStreams__CIInputStream___x_ABI_CWindows__CWeb__CSyndication__CRetrievalProgress** result);
    HRESULT (STDMETHODCALLTYPE* put_Completed)(__x_ABI_C__FIAsyncOperationWithProgress_2___x_ABI_CWindows__CStorage__CStreams__CIInputStream___x_ABI_CWindows__CWeb__CSyndication__CRetrievalProgress* This,
        __x_ABI_C__FIAsyncOperationWithProgressCompletedHandler_2___x_ABI_CWindows__CStorage__CStreams__CIInputStream___x_ABI_CWindows__CWeb__CSyndication__CRetrievalProgress* handler);
    HRESULT (STDMETHODCALLTYPE* get_Completed)(__x_ABI_C__FIAsyncOperationWithProgress_2___x_ABI_CWindows__CStorage__CStreams__CIInputStream___x_ABI_CWindows__CWeb__CSyndication__CRetrievalProgress* This,
        __x_ABI_C__FIAsyncOperationWithProgressCompletedHandler_2___x_ABI_CWindows__CStorage__CStreams__CIInputStream___x_ABI_CWindows__CWeb__CSyndication__CRetrievalProgress** result);
    HRESULT (STDMETHODCALLTYPE* GetResults)(__x_ABI_C__FIAsyncOperationWithProgress_2___x_ABI_CWindows__CStorage__CStreams__CIInputStream___x_ABI_CWindows__CWeb__CSyndication__CRetrievalProgress* This,
        __x_ABI_CWindows_CStorage_CStreams_CIInputStream** result);

        END_INTERFACE
    } __x_ABI_C__FIAsyncOperationWithProgress_2___x_ABI_CWindows__CStorage__CStreams__CIInputStream___x_ABI_CWindows__CWeb__CSyndication__CRetrievalProgressVtbl;

    interface __x_ABI_C__FIAsyncOperationWithProgress_2___x_ABI_CWindows__CStorage__CStreams__CIInputStream___x_ABI_CWindows__CWeb__CSyndication__CRetrievalProgress
    {
        CONST_VTBL struct __x_ABI_C__FIAsyncOperationWithProgress_2___x_ABI_CWindows__CStorage__CStreams__CIInputStream___x_ABI_CWindows__CWeb__CSyndication__CRetrievalProgressVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIAsyncOperationWithProgress_2___x_ABI_CWindows__CStorage__CStreams__CIInputStream___x_ABI_CWindows__CWeb__CSyndication__CRetrievalProgress_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIAsyncOperationProgressHandler_2___x_ABI_CWindows__CStorage__CStreams__CIInputStream___x_ABI_CWindows__CWeb__CSyndication__CRetrievalProgress_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIAsyncOperationProgressHandler_2___x_ABI_CWindows__CStorage__CStreams__CIInputStream___x_ABI_CWindows__CWeb__CSyndication__CRetrievalProgress_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIAsyncOperationProgressHandler_2___x_ABI_CWindows__CStorage__CStreams__CIInputStream___x_ABI_CWindows__CWeb__CSyndication__CRetrievalProgress __x_ABI_C__FIAsyncOperationProgressHandler_2___x_ABI_CWindows__CStorage__CStreams__CIInputStream___x_ABI_CWindows__CWeb__CSyndication__CRetrievalProgress;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIAsyncOperationProgressHandler_2___x_ABI_CWindows__CStorage__CStreams__CIInputStream___x_ABI_CWindows__CWeb__CSyndication__CRetrievalProgress;

    typedef struct __x_ABI_C__FIAsyncOperationProgressHandler_2___x_ABI_CWindows__CStorage__CStreams__CIInputStream___x_ABI_CWindows__CWeb__CSyndication__CRetrievalProgressVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIAsyncOperationProgressHandler_2___x_ABI_CWindows__CStorage__CStreams__CIInputStream___x_ABI_CWindows__CWeb__CSyndication__CRetrievalProgress* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIAsyncOperationProgressHandler_2___x_ABI_CWindows__CStorage__CStreams__CIInputStream___x_ABI_CWindows__CWeb__CSyndication__CRetrievalProgress* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIAsyncOperationProgressHandler_2___x_ABI_CWindows__CStorage__CStreams__CIInputStream___x_ABI_CWindows__CWeb__CSyndication__CRetrievalProgress* This);
        HRESULT (STDMETHODCALLTYPE* Invoke)(__x_ABI_C__FIAsyncOperationProgressHandler_2___x_ABI_CWindows__CStorage__CStreams__CIInputStream___x_ABI_CWindows__CWeb__CSyndication__CRetrievalProgress* This,
        __x_ABI_C__FIAsyncOperationWithProgress_2___x_ABI_CWindows__CStorage__CStreams__CIInputStream___x_ABI_CWindows__CWeb__CSyndication__CRetrievalProgress* asyncInfo,
        struct __x_ABI_CWindows_CWeb_CSyndication_CRetrievalProgress progressInfo);

        END_INTERFACE
    } __x_ABI_C__FIAsyncOperationProgressHandler_2___x_ABI_CWindows__CStorage__CStreams__CIInputStream___x_ABI_CWindows__CWeb__CSyndication__CRetrievalProgressVtbl;

    interface __x_ABI_C__FIAsyncOperationProgressHandler_2___x_ABI_CWindows__CStorage__CStreams__CIInputStream___x_ABI_CWindows__CWeb__CSyndication__CRetrievalProgress
    {
        CONST_VTBL struct __x_ABI_C__FIAsyncOperationProgressHandler_2___x_ABI_CWindows__CStorage__CStreams__CIInputStream___x_ABI_CWindows__CWeb__CSyndication__CRetrievalProgressVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIAsyncOperationProgressHandler_2___x_ABI_CWindows__CStorage__CStreams__CIInputStream___x_ABI_CWindows__CWeb__CSyndication__CRetrievalProgress_INTERFACE_DEFINED__
    
typedef interface __x_ABI_C__FIAsyncOperationProgressHandler_2___x_ABI_CWindows__CWeb__CAtomPub__CServiceDocument___x_ABI_CWindows__CWeb__CSyndication__CRetrievalProgress __x_ABI_C__FIAsyncOperationProgressHandler_2___x_ABI_CWindows__CWeb__CAtomPub__CServiceDocument___x_ABI_CWindows__CWeb__CSyndication__CRetrievalProgress;

typedef interface __x_ABI_C__FIAsyncOperationWithProgress_2___x_ABI_CWindows__CWeb__CAtomPub__CServiceDocument___x_ABI_CWindows__CWeb__CSyndication__CRetrievalProgress __x_ABI_C__FIAsyncOperationWithProgress_2___x_ABI_CWindows__CWeb__CAtomPub__CServiceDocument___x_ABI_CWindows__CWeb__CSyndication__CRetrievalProgress;

#if !defined(____x_ABI_C__FIAsyncOperationWithProgressCompletedHandler_2___x_ABI_CWindows__CWeb__CAtomPub__CServiceDocument___x_ABI_CWindows__CWeb__CSyndication__CRetrievalProgress_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIAsyncOperationWithProgressCompletedHandler_2___x_ABI_CWindows__CWeb__CAtomPub__CServiceDocument___x_ABI_CWindows__CWeb__CSyndication__CRetrievalProgress_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIAsyncOperationWithProgressCompletedHandler_2___x_ABI_CWindows__CWeb__CAtomPub__CServiceDocument___x_ABI_CWindows__CWeb__CSyndication__CRetrievalProgress __x_ABI_C__FIAsyncOperationWithProgressCompletedHandler_2___x_ABI_CWindows__CWeb__CAtomPub__CServiceDocument___x_ABI_CWindows__CWeb__CSyndication__CRetrievalProgress;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIAsyncOperationWithProgressCompletedHandler_2___x_ABI_CWindows__CWeb__CAtomPub__CServiceDocument___x_ABI_CWindows__CWeb__CSyndication__CRetrievalProgress;

    typedef struct __x_ABI_C__FIAsyncOperationWithProgressCompletedHandler_2___x_ABI_CWindows__CWeb__CAtomPub__CServiceDocument___x_ABI_CWindows__CWeb__CSyndication__CRetrievalProgressVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIAsyncOperationWithProgressCompletedHandler_2___x_ABI_CWindows__CWeb__CAtomPub__CServiceDocument___x_ABI_CWindows__CWeb__CSyndication__CRetrievalProgress* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIAsyncOperationWithProgressCompletedHandler_2___x_ABI_CWindows__CWeb__CAtomPub__CServiceDocument___x_ABI_CWindows__CWeb__CSyndication__CRetrievalProgress* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIAsyncOperationWithProgressCompletedHandler_2___x_ABI_CWindows__CWeb__CAtomPub__CServiceDocument___x_ABI_CWindows__CWeb__CSyndication__CRetrievalProgress* This);
        HRESULT (STDMETHODCALLTYPE* Invoke)(__x_ABI_C__FIAsyncOperationWithProgressCompletedHandler_2___x_ABI_CWindows__CWeb__CAtomPub__CServiceDocument___x_ABI_CWindows__CWeb__CSyndication__CRetrievalProgress* This,
        __x_ABI_C__FIAsyncOperationWithProgress_2___x_ABI_CWindows__CWeb__CAtomPub__CServiceDocument___x_ABI_CWindows__CWeb__CSyndication__CRetrievalProgress* asyncInfo,
        enum __x_ABI_CWindows_CFoundation_CAsyncStatus asyncStatus);

        END_INTERFACE
    } __x_ABI_C__FIAsyncOperationWithProgressCompletedHandler_2___x_ABI_CWindows__CWeb__CAtomPub__CServiceDocument___x_ABI_CWindows__CWeb__CSyndication__CRetrievalProgressVtbl;

    interface __x_ABI_C__FIAsyncOperationWithProgressCompletedHandler_2___x_ABI_CWindows__CWeb__CAtomPub__CServiceDocument___x_ABI_CWindows__CWeb__CSyndication__CRetrievalProgress
    {
        CONST_VTBL struct __x_ABI_C__FIAsyncOperationWithProgressCompletedHandler_2___x_ABI_CWindows__CWeb__CAtomPub__CServiceDocument___x_ABI_CWindows__CWeb__CSyndication__CRetrievalProgressVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIAsyncOperationWithProgressCompletedHandler_2___x_ABI_CWindows__CWeb__CAtomPub__CServiceDocument___x_ABI_CWindows__CWeb__CSyndication__CRetrievalProgress_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIAsyncOperationWithProgress_2___x_ABI_CWindows__CWeb__CAtomPub__CServiceDocument___x_ABI_CWindows__CWeb__CSyndication__CRetrievalProgress_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIAsyncOperationWithProgress_2___x_ABI_CWindows__CWeb__CAtomPub__CServiceDocument___x_ABI_CWindows__CWeb__CSyndication__CRetrievalProgress_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIAsyncOperationWithProgress_2___x_ABI_CWindows__CWeb__CAtomPub__CServiceDocument___x_ABI_CWindows__CWeb__CSyndication__CRetrievalProgress __x_ABI_C__FIAsyncOperationWithProgress_2___x_ABI_CWindows__CWeb__CAtomPub__CServiceDocument___x_ABI_CWindows__CWeb__CSyndication__CRetrievalProgress;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIAsyncOperationWithProgress_2___x_ABI_CWindows__CWeb__CAtomPub__CServiceDocument___x_ABI_CWindows__CWeb__CSyndication__CRetrievalProgress;

    typedef struct __x_ABI_C__FIAsyncOperationWithProgress_2___x_ABI_CWindows__CWeb__CAtomPub__CServiceDocument___x_ABI_CWindows__CWeb__CSyndication__CRetrievalProgressVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIAsyncOperationWithProgress_2___x_ABI_CWindows__CWeb__CAtomPub__CServiceDocument___x_ABI_CWindows__CWeb__CSyndication__CRetrievalProgress* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIAsyncOperationWithProgress_2___x_ABI_CWindows__CWeb__CAtomPub__CServiceDocument___x_ABI_CWindows__CWeb__CSyndication__CRetrievalProgress* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIAsyncOperationWithProgress_2___x_ABI_CWindows__CWeb__CAtomPub__CServiceDocument___x_ABI_CWindows__CWeb__CSyndication__CRetrievalProgress* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIAsyncOperationWithProgress_2___x_ABI_CWindows__CWeb__CAtomPub__CServiceDocument___x_ABI_CWindows__CWeb__CSyndication__CRetrievalProgress* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIAsyncOperationWithProgress_2___x_ABI_CWindows__CWeb__CAtomPub__CServiceDocument___x_ABI_CWindows__CWeb__CSyndication__CRetrievalProgress* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIAsyncOperationWithProgress_2___x_ABI_CWindows__CWeb__CAtomPub__CServiceDocument___x_ABI_CWindows__CWeb__CSyndication__CRetrievalProgress* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* put_Progress)(__x_ABI_C__FIAsyncOperationWithProgress_2___x_ABI_CWindows__CWeb__CAtomPub__CServiceDocument___x_ABI_CWindows__CWeb__CSyndication__CRetrievalProgress* This,
        __x_ABI_C__FIAsyncOperationProgressHandler_2___x_ABI_CWindows__CWeb__CAtomPub__CServiceDocument___x_ABI_CWindows__CWeb__CSyndication__CRetrievalProgress* handler);
    HRESULT (STDMETHODCALLTYPE* get_Progress)(__x_ABI_C__FIAsyncOperationWithProgress_2___x_ABI_CWindows__CWeb__CAtomPub__CServiceDocument___x_ABI_CWindows__CWeb__CSyndication__CRetrievalProgress* This,
        __x_ABI_C__FIAsyncOperationProgressHandler_2___x_ABI_CWindows__CWeb__CAtomPub__CServiceDocument___x_ABI_CWindows__CWeb__CSyndication__CRetrievalProgress** result);
    HRESULT (STDMETHODCALLTYPE* put_Completed)(__x_ABI_C__FIAsyncOperationWithProgress_2___x_ABI_CWindows__CWeb__CAtomPub__CServiceDocument___x_ABI_CWindows__CWeb__CSyndication__CRetrievalProgress* This,
        __x_ABI_C__FIAsyncOperationWithProgressCompletedHandler_2___x_ABI_CWindows__CWeb__CAtomPub__CServiceDocument___x_ABI_CWindows__CWeb__CSyndication__CRetrievalProgress* handler);
    HRESULT (STDMETHODCALLTYPE* get_Completed)(__x_ABI_C__FIAsyncOperationWithProgress_2___x_ABI_CWindows__CWeb__CAtomPub__CServiceDocument___x_ABI_CWindows__CWeb__CSyndication__CRetrievalProgress* This,
        __x_ABI_C__FIAsyncOperationWithProgressCompletedHandler_2___x_ABI_CWindows__CWeb__CAtomPub__CServiceDocument___x_ABI_CWindows__CWeb__CSyndication__CRetrievalProgress** result);
    HRESULT (STDMETHODCALLTYPE* GetResults)(__x_ABI_C__FIAsyncOperationWithProgress_2___x_ABI_CWindows__CWeb__CAtomPub__CServiceDocument___x_ABI_CWindows__CWeb__CSyndication__CRetrievalProgress* This,
        __x_ABI_CWindows_CWeb_CAtomPub_CIServiceDocument** result);

        END_INTERFACE
    } __x_ABI_C__FIAsyncOperationWithProgress_2___x_ABI_CWindows__CWeb__CAtomPub__CServiceDocument___x_ABI_CWindows__CWeb__CSyndication__CRetrievalProgressVtbl;

    interface __x_ABI_C__FIAsyncOperationWithProgress_2___x_ABI_CWindows__CWeb__CAtomPub__CServiceDocument___x_ABI_CWindows__CWeb__CSyndication__CRetrievalProgress
    {
        CONST_VTBL struct __x_ABI_C__FIAsyncOperationWithProgress_2___x_ABI_CWindows__CWeb__CAtomPub__CServiceDocument___x_ABI_CWindows__CWeb__CSyndication__CRetrievalProgressVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIAsyncOperationWithProgress_2___x_ABI_CWindows__CWeb__CAtomPub__CServiceDocument___x_ABI_CWindows__CWeb__CSyndication__CRetrievalProgress_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIAsyncOperationProgressHandler_2___x_ABI_CWindows__CWeb__CAtomPub__CServiceDocument___x_ABI_CWindows__CWeb__CSyndication__CRetrievalProgress_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIAsyncOperationProgressHandler_2___x_ABI_CWindows__CWeb__CAtomPub__CServiceDocument___x_ABI_CWindows__CWeb__CSyndication__CRetrievalProgress_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIAsyncOperationProgressHandler_2___x_ABI_CWindows__CWeb__CAtomPub__CServiceDocument___x_ABI_CWindows__CWeb__CSyndication__CRetrievalProgress __x_ABI_C__FIAsyncOperationProgressHandler_2___x_ABI_CWindows__CWeb__CAtomPub__CServiceDocument___x_ABI_CWindows__CWeb__CSyndication__CRetrievalProgress;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIAsyncOperationProgressHandler_2___x_ABI_CWindows__CWeb__CAtomPub__CServiceDocument___x_ABI_CWindows__CWeb__CSyndication__CRetrievalProgress;

    typedef struct __x_ABI_C__FIAsyncOperationProgressHandler_2___x_ABI_CWindows__CWeb__CAtomPub__CServiceDocument___x_ABI_CWindows__CWeb__CSyndication__CRetrievalProgressVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIAsyncOperationProgressHandler_2___x_ABI_CWindows__CWeb__CAtomPub__CServiceDocument___x_ABI_CWindows__CWeb__CSyndication__CRetrievalProgress* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIAsyncOperationProgressHandler_2___x_ABI_CWindows__CWeb__CAtomPub__CServiceDocument___x_ABI_CWindows__CWeb__CSyndication__CRetrievalProgress* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIAsyncOperationProgressHandler_2___x_ABI_CWindows__CWeb__CAtomPub__CServiceDocument___x_ABI_CWindows__CWeb__CSyndication__CRetrievalProgress* This);
        HRESULT (STDMETHODCALLTYPE* Invoke)(__x_ABI_C__FIAsyncOperationProgressHandler_2___x_ABI_CWindows__CWeb__CAtomPub__CServiceDocument___x_ABI_CWindows__CWeb__CSyndication__CRetrievalProgress* This,
        __x_ABI_C__FIAsyncOperationWithProgress_2___x_ABI_CWindows__CWeb__CAtomPub__CServiceDocument___x_ABI_CWindows__CWeb__CSyndication__CRetrievalProgress* asyncInfo,
        struct __x_ABI_CWindows_CWeb_CSyndication_CRetrievalProgress progressInfo);

        END_INTERFACE
    } __x_ABI_C__FIAsyncOperationProgressHandler_2___x_ABI_CWindows__CWeb__CAtomPub__CServiceDocument___x_ABI_CWindows__CWeb__CSyndication__CRetrievalProgressVtbl;

    interface __x_ABI_C__FIAsyncOperationProgressHandler_2___x_ABI_CWindows__CWeb__CAtomPub__CServiceDocument___x_ABI_CWindows__CWeb__CSyndication__CRetrievalProgress
    {
        CONST_VTBL struct __x_ABI_C__FIAsyncOperationProgressHandler_2___x_ABI_CWindows__CWeb__CAtomPub__CServiceDocument___x_ABI_CWindows__CWeb__CSyndication__CRetrievalProgressVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIAsyncOperationProgressHandler_2___x_ABI_CWindows__CWeb__CAtomPub__CServiceDocument___x_ABI_CWindows__CWeb__CSyndication__CRetrievalProgress_INTERFACE_DEFINED__
    
#ifndef ____x_ABI_CWindows_CWeb_CSyndication_CISyndicationItem_FWD_DEFINED__
#define ____x_ABI_CWindows_CWeb_CSyndication_CISyndicationItem_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CWeb_CSyndication_CISyndicationItem __x_ABI_CWindows_CWeb_CSyndication_CISyndicationItem;

#endif // ____x_ABI_CWindows_CWeb_CSyndication_CISyndicationItem_FWD_DEFINED__

typedef interface __x_ABI_C__FIAsyncOperationProgressHandler_2___x_ABI_CWindows__CWeb__CSyndication__CSyndicationItem___x_ABI_CWindows__CWeb__CSyndication__CRetrievalProgress __x_ABI_C__FIAsyncOperationProgressHandler_2___x_ABI_CWindows__CWeb__CSyndication__CSyndicationItem___x_ABI_CWindows__CWeb__CSyndication__CRetrievalProgress;

typedef interface __x_ABI_C__FIAsyncOperationWithProgress_2___x_ABI_CWindows__CWeb__CSyndication__CSyndicationItem___x_ABI_CWindows__CWeb__CSyndication__CRetrievalProgress __x_ABI_C__FIAsyncOperationWithProgress_2___x_ABI_CWindows__CWeb__CSyndication__CSyndicationItem___x_ABI_CWindows__CWeb__CSyndication__CRetrievalProgress;

#if !defined(____x_ABI_C__FIAsyncOperationWithProgressCompletedHandler_2___x_ABI_CWindows__CWeb__CSyndication__CSyndicationItem___x_ABI_CWindows__CWeb__CSyndication__CRetrievalProgress_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIAsyncOperationWithProgressCompletedHandler_2___x_ABI_CWindows__CWeb__CSyndication__CSyndicationItem___x_ABI_CWindows__CWeb__CSyndication__CRetrievalProgress_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIAsyncOperationWithProgressCompletedHandler_2___x_ABI_CWindows__CWeb__CSyndication__CSyndicationItem___x_ABI_CWindows__CWeb__CSyndication__CRetrievalProgress __x_ABI_C__FIAsyncOperationWithProgressCompletedHandler_2___x_ABI_CWindows__CWeb__CSyndication__CSyndicationItem___x_ABI_CWindows__CWeb__CSyndication__CRetrievalProgress;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIAsyncOperationWithProgressCompletedHandler_2___x_ABI_CWindows__CWeb__CSyndication__CSyndicationItem___x_ABI_CWindows__CWeb__CSyndication__CRetrievalProgress;

    typedef struct __x_ABI_C__FIAsyncOperationWithProgressCompletedHandler_2___x_ABI_CWindows__CWeb__CSyndication__CSyndicationItem___x_ABI_CWindows__CWeb__CSyndication__CRetrievalProgressVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIAsyncOperationWithProgressCompletedHandler_2___x_ABI_CWindows__CWeb__CSyndication__CSyndicationItem___x_ABI_CWindows__CWeb__CSyndication__CRetrievalProgress* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIAsyncOperationWithProgressCompletedHandler_2___x_ABI_CWindows__CWeb__CSyndication__CSyndicationItem___x_ABI_CWindows__CWeb__CSyndication__CRetrievalProgress* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIAsyncOperationWithProgressCompletedHandler_2___x_ABI_CWindows__CWeb__CSyndication__CSyndicationItem___x_ABI_CWindows__CWeb__CSyndication__CRetrievalProgress* This);
        HRESULT (STDMETHODCALLTYPE* Invoke)(__x_ABI_C__FIAsyncOperationWithProgressCompletedHandler_2___x_ABI_CWindows__CWeb__CSyndication__CSyndicationItem___x_ABI_CWindows__CWeb__CSyndication__CRetrievalProgress* This,
        __x_ABI_C__FIAsyncOperationWithProgress_2___x_ABI_CWindows__CWeb__CSyndication__CSyndicationItem___x_ABI_CWindows__CWeb__CSyndication__CRetrievalProgress* asyncInfo,
        enum __x_ABI_CWindows_CFoundation_CAsyncStatus asyncStatus);

        END_INTERFACE
    } __x_ABI_C__FIAsyncOperationWithProgressCompletedHandler_2___x_ABI_CWindows__CWeb__CSyndication__CSyndicationItem___x_ABI_CWindows__CWeb__CSyndication__CRetrievalProgressVtbl;

    interface __x_ABI_C__FIAsyncOperationWithProgressCompletedHandler_2___x_ABI_CWindows__CWeb__CSyndication__CSyndicationItem___x_ABI_CWindows__CWeb__CSyndication__CRetrievalProgress
    {
        CONST_VTBL struct __x_ABI_C__FIAsyncOperationWithProgressCompletedHandler_2___x_ABI_CWindows__CWeb__CSyndication__CSyndicationItem___x_ABI_CWindows__CWeb__CSyndication__CRetrievalProgressVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIAsyncOperationWithProgressCompletedHandler_2___x_ABI_CWindows__CWeb__CSyndication__CSyndicationItem___x_ABI_CWindows__CWeb__CSyndication__CRetrievalProgress_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIAsyncOperationWithProgress_2___x_ABI_CWindows__CWeb__CSyndication__CSyndicationItem___x_ABI_CWindows__CWeb__CSyndication__CRetrievalProgress_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIAsyncOperationWithProgress_2___x_ABI_CWindows__CWeb__CSyndication__CSyndicationItem___x_ABI_CWindows__CWeb__CSyndication__CRetrievalProgress_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIAsyncOperationWithProgress_2___x_ABI_CWindows__CWeb__CSyndication__CSyndicationItem___x_ABI_CWindows__CWeb__CSyndication__CRetrievalProgress __x_ABI_C__FIAsyncOperationWithProgress_2___x_ABI_CWindows__CWeb__CSyndication__CSyndicationItem___x_ABI_CWindows__CWeb__CSyndication__CRetrievalProgress;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIAsyncOperationWithProgress_2___x_ABI_CWindows__CWeb__CSyndication__CSyndicationItem___x_ABI_CWindows__CWeb__CSyndication__CRetrievalProgress;

    typedef struct __x_ABI_C__FIAsyncOperationWithProgress_2___x_ABI_CWindows__CWeb__CSyndication__CSyndicationItem___x_ABI_CWindows__CWeb__CSyndication__CRetrievalProgressVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIAsyncOperationWithProgress_2___x_ABI_CWindows__CWeb__CSyndication__CSyndicationItem___x_ABI_CWindows__CWeb__CSyndication__CRetrievalProgress* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIAsyncOperationWithProgress_2___x_ABI_CWindows__CWeb__CSyndication__CSyndicationItem___x_ABI_CWindows__CWeb__CSyndication__CRetrievalProgress* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIAsyncOperationWithProgress_2___x_ABI_CWindows__CWeb__CSyndication__CSyndicationItem___x_ABI_CWindows__CWeb__CSyndication__CRetrievalProgress* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIAsyncOperationWithProgress_2___x_ABI_CWindows__CWeb__CSyndication__CSyndicationItem___x_ABI_CWindows__CWeb__CSyndication__CRetrievalProgress* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIAsyncOperationWithProgress_2___x_ABI_CWindows__CWeb__CSyndication__CSyndicationItem___x_ABI_CWindows__CWeb__CSyndication__CRetrievalProgress* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIAsyncOperationWithProgress_2___x_ABI_CWindows__CWeb__CSyndication__CSyndicationItem___x_ABI_CWindows__CWeb__CSyndication__CRetrievalProgress* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* put_Progress)(__x_ABI_C__FIAsyncOperationWithProgress_2___x_ABI_CWindows__CWeb__CSyndication__CSyndicationItem___x_ABI_CWindows__CWeb__CSyndication__CRetrievalProgress* This,
        __x_ABI_C__FIAsyncOperationProgressHandler_2___x_ABI_CWindows__CWeb__CSyndication__CSyndicationItem___x_ABI_CWindows__CWeb__CSyndication__CRetrievalProgress* handler);
    HRESULT (STDMETHODCALLTYPE* get_Progress)(__x_ABI_C__FIAsyncOperationWithProgress_2___x_ABI_CWindows__CWeb__CSyndication__CSyndicationItem___x_ABI_CWindows__CWeb__CSyndication__CRetrievalProgress* This,
        __x_ABI_C__FIAsyncOperationProgressHandler_2___x_ABI_CWindows__CWeb__CSyndication__CSyndicationItem___x_ABI_CWindows__CWeb__CSyndication__CRetrievalProgress** result);
    HRESULT (STDMETHODCALLTYPE* put_Completed)(__x_ABI_C__FIAsyncOperationWithProgress_2___x_ABI_CWindows__CWeb__CSyndication__CSyndicationItem___x_ABI_CWindows__CWeb__CSyndication__CRetrievalProgress* This,
        __x_ABI_C__FIAsyncOperationWithProgressCompletedHandler_2___x_ABI_CWindows__CWeb__CSyndication__CSyndicationItem___x_ABI_CWindows__CWeb__CSyndication__CRetrievalProgress* handler);
    HRESULT (STDMETHODCALLTYPE* get_Completed)(__x_ABI_C__FIAsyncOperationWithProgress_2___x_ABI_CWindows__CWeb__CSyndication__CSyndicationItem___x_ABI_CWindows__CWeb__CSyndication__CRetrievalProgress* This,
        __x_ABI_C__FIAsyncOperationWithProgressCompletedHandler_2___x_ABI_CWindows__CWeb__CSyndication__CSyndicationItem___x_ABI_CWindows__CWeb__CSyndication__CRetrievalProgress** result);
    HRESULT (STDMETHODCALLTYPE* GetResults)(__x_ABI_C__FIAsyncOperationWithProgress_2___x_ABI_CWindows__CWeb__CSyndication__CSyndicationItem___x_ABI_CWindows__CWeb__CSyndication__CRetrievalProgress* This,
        __x_ABI_CWindows_CWeb_CSyndication_CISyndicationItem** result);

        END_INTERFACE
    } __x_ABI_C__FIAsyncOperationWithProgress_2___x_ABI_CWindows__CWeb__CSyndication__CSyndicationItem___x_ABI_CWindows__CWeb__CSyndication__CRetrievalProgressVtbl;

    interface __x_ABI_C__FIAsyncOperationWithProgress_2___x_ABI_CWindows__CWeb__CSyndication__CSyndicationItem___x_ABI_CWindows__CWeb__CSyndication__CRetrievalProgress
    {
        CONST_VTBL struct __x_ABI_C__FIAsyncOperationWithProgress_2___x_ABI_CWindows__CWeb__CSyndication__CSyndicationItem___x_ABI_CWindows__CWeb__CSyndication__CRetrievalProgressVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIAsyncOperationWithProgress_2___x_ABI_CWindows__CWeb__CSyndication__CSyndicationItem___x_ABI_CWindows__CWeb__CSyndication__CRetrievalProgress_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIAsyncOperationProgressHandler_2___x_ABI_CWindows__CWeb__CSyndication__CSyndicationItem___x_ABI_CWindows__CWeb__CSyndication__CRetrievalProgress_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIAsyncOperationProgressHandler_2___x_ABI_CWindows__CWeb__CSyndication__CSyndicationItem___x_ABI_CWindows__CWeb__CSyndication__CRetrievalProgress_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIAsyncOperationProgressHandler_2___x_ABI_CWindows__CWeb__CSyndication__CSyndicationItem___x_ABI_CWindows__CWeb__CSyndication__CRetrievalProgress __x_ABI_C__FIAsyncOperationProgressHandler_2___x_ABI_CWindows__CWeb__CSyndication__CSyndicationItem___x_ABI_CWindows__CWeb__CSyndication__CRetrievalProgress;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIAsyncOperationProgressHandler_2___x_ABI_CWindows__CWeb__CSyndication__CSyndicationItem___x_ABI_CWindows__CWeb__CSyndication__CRetrievalProgress;

    typedef struct __x_ABI_C__FIAsyncOperationProgressHandler_2___x_ABI_CWindows__CWeb__CSyndication__CSyndicationItem___x_ABI_CWindows__CWeb__CSyndication__CRetrievalProgressVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIAsyncOperationProgressHandler_2___x_ABI_CWindows__CWeb__CSyndication__CSyndicationItem___x_ABI_CWindows__CWeb__CSyndication__CRetrievalProgress* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIAsyncOperationProgressHandler_2___x_ABI_CWindows__CWeb__CSyndication__CSyndicationItem___x_ABI_CWindows__CWeb__CSyndication__CRetrievalProgress* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIAsyncOperationProgressHandler_2___x_ABI_CWindows__CWeb__CSyndication__CSyndicationItem___x_ABI_CWindows__CWeb__CSyndication__CRetrievalProgress* This);
        HRESULT (STDMETHODCALLTYPE* Invoke)(__x_ABI_C__FIAsyncOperationProgressHandler_2___x_ABI_CWindows__CWeb__CSyndication__CSyndicationItem___x_ABI_CWindows__CWeb__CSyndication__CRetrievalProgress* This,
        __x_ABI_C__FIAsyncOperationWithProgress_2___x_ABI_CWindows__CWeb__CSyndication__CSyndicationItem___x_ABI_CWindows__CWeb__CSyndication__CRetrievalProgress* asyncInfo,
        struct __x_ABI_CWindows_CWeb_CSyndication_CRetrievalProgress progressInfo);

        END_INTERFACE
    } __x_ABI_C__FIAsyncOperationProgressHandler_2___x_ABI_CWindows__CWeb__CSyndication__CSyndicationItem___x_ABI_CWindows__CWeb__CSyndication__CRetrievalProgressVtbl;

    interface __x_ABI_C__FIAsyncOperationProgressHandler_2___x_ABI_CWindows__CWeb__CSyndication__CSyndicationItem___x_ABI_CWindows__CWeb__CSyndication__CRetrievalProgress
    {
        CONST_VTBL struct __x_ABI_C__FIAsyncOperationProgressHandler_2___x_ABI_CWindows__CWeb__CSyndication__CSyndicationItem___x_ABI_CWindows__CWeb__CSyndication__CRetrievalProgressVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIAsyncOperationProgressHandler_2___x_ABI_CWindows__CWeb__CSyndication__CSyndicationItem___x_ABI_CWindows__CWeb__CSyndication__CRetrievalProgress_INTERFACE_DEFINED__
    
typedef interface __x_ABI_C__FIAsyncOperationProgressHandler_2___x_ABI_CWindows__CWeb__CSyndication__CSyndicationItem___x_ABI_CWindows__CWeb__CSyndication__CTransferProgress __x_ABI_C__FIAsyncOperationProgressHandler_2___x_ABI_CWindows__CWeb__CSyndication__CSyndicationItem___x_ABI_CWindows__CWeb__CSyndication__CTransferProgress;

typedef interface __x_ABI_C__FIAsyncOperationWithProgress_2___x_ABI_CWindows__CWeb__CSyndication__CSyndicationItem___x_ABI_CWindows__CWeb__CSyndication__CTransferProgress __x_ABI_C__FIAsyncOperationWithProgress_2___x_ABI_CWindows__CWeb__CSyndication__CSyndicationItem___x_ABI_CWindows__CWeb__CSyndication__CTransferProgress;

#if !defined(____x_ABI_C__FIAsyncOperationWithProgressCompletedHandler_2___x_ABI_CWindows__CWeb__CSyndication__CSyndicationItem___x_ABI_CWindows__CWeb__CSyndication__CTransferProgress_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIAsyncOperationWithProgressCompletedHandler_2___x_ABI_CWindows__CWeb__CSyndication__CSyndicationItem___x_ABI_CWindows__CWeb__CSyndication__CTransferProgress_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIAsyncOperationWithProgressCompletedHandler_2___x_ABI_CWindows__CWeb__CSyndication__CSyndicationItem___x_ABI_CWindows__CWeb__CSyndication__CTransferProgress __x_ABI_C__FIAsyncOperationWithProgressCompletedHandler_2___x_ABI_CWindows__CWeb__CSyndication__CSyndicationItem___x_ABI_CWindows__CWeb__CSyndication__CTransferProgress;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIAsyncOperationWithProgressCompletedHandler_2___x_ABI_CWindows__CWeb__CSyndication__CSyndicationItem___x_ABI_CWindows__CWeb__CSyndication__CTransferProgress;

    typedef struct __x_ABI_C__FIAsyncOperationWithProgressCompletedHandler_2___x_ABI_CWindows__CWeb__CSyndication__CSyndicationItem___x_ABI_CWindows__CWeb__CSyndication__CTransferProgressVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIAsyncOperationWithProgressCompletedHandler_2___x_ABI_CWindows__CWeb__CSyndication__CSyndicationItem___x_ABI_CWindows__CWeb__CSyndication__CTransferProgress* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIAsyncOperationWithProgressCompletedHandler_2___x_ABI_CWindows__CWeb__CSyndication__CSyndicationItem___x_ABI_CWindows__CWeb__CSyndication__CTransferProgress* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIAsyncOperationWithProgressCompletedHandler_2___x_ABI_CWindows__CWeb__CSyndication__CSyndicationItem___x_ABI_CWindows__CWeb__CSyndication__CTransferProgress* This);
        HRESULT (STDMETHODCALLTYPE* Invoke)(__x_ABI_C__FIAsyncOperationWithProgressCompletedHandler_2___x_ABI_CWindows__CWeb__CSyndication__CSyndicationItem___x_ABI_CWindows__CWeb__CSyndication__CTransferProgress* This,
        __x_ABI_C__FIAsyncOperationWithProgress_2___x_ABI_CWindows__CWeb__CSyndication__CSyndicationItem___x_ABI_CWindows__CWeb__CSyndication__CTransferProgress* asyncInfo,
        enum __x_ABI_CWindows_CFoundation_CAsyncStatus asyncStatus);

        END_INTERFACE
    } __x_ABI_C__FIAsyncOperationWithProgressCompletedHandler_2___x_ABI_CWindows__CWeb__CSyndication__CSyndicationItem___x_ABI_CWindows__CWeb__CSyndication__CTransferProgressVtbl;

    interface __x_ABI_C__FIAsyncOperationWithProgressCompletedHandler_2___x_ABI_CWindows__CWeb__CSyndication__CSyndicationItem___x_ABI_CWindows__CWeb__CSyndication__CTransferProgress
    {
        CONST_VTBL struct __x_ABI_C__FIAsyncOperationWithProgressCompletedHandler_2___x_ABI_CWindows__CWeb__CSyndication__CSyndicationItem___x_ABI_CWindows__CWeb__CSyndication__CTransferProgressVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIAsyncOperationWithProgressCompletedHandler_2___x_ABI_CWindows__CWeb__CSyndication__CSyndicationItem___x_ABI_CWindows__CWeb__CSyndication__CTransferProgress_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIAsyncOperationWithProgress_2___x_ABI_CWindows__CWeb__CSyndication__CSyndicationItem___x_ABI_CWindows__CWeb__CSyndication__CTransferProgress_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIAsyncOperationWithProgress_2___x_ABI_CWindows__CWeb__CSyndication__CSyndicationItem___x_ABI_CWindows__CWeb__CSyndication__CTransferProgress_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIAsyncOperationWithProgress_2___x_ABI_CWindows__CWeb__CSyndication__CSyndicationItem___x_ABI_CWindows__CWeb__CSyndication__CTransferProgress __x_ABI_C__FIAsyncOperationWithProgress_2___x_ABI_CWindows__CWeb__CSyndication__CSyndicationItem___x_ABI_CWindows__CWeb__CSyndication__CTransferProgress;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIAsyncOperationWithProgress_2___x_ABI_CWindows__CWeb__CSyndication__CSyndicationItem___x_ABI_CWindows__CWeb__CSyndication__CTransferProgress;

    typedef struct __x_ABI_C__FIAsyncOperationWithProgress_2___x_ABI_CWindows__CWeb__CSyndication__CSyndicationItem___x_ABI_CWindows__CWeb__CSyndication__CTransferProgressVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIAsyncOperationWithProgress_2___x_ABI_CWindows__CWeb__CSyndication__CSyndicationItem___x_ABI_CWindows__CWeb__CSyndication__CTransferProgress* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIAsyncOperationWithProgress_2___x_ABI_CWindows__CWeb__CSyndication__CSyndicationItem___x_ABI_CWindows__CWeb__CSyndication__CTransferProgress* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIAsyncOperationWithProgress_2___x_ABI_CWindows__CWeb__CSyndication__CSyndicationItem___x_ABI_CWindows__CWeb__CSyndication__CTransferProgress* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIAsyncOperationWithProgress_2___x_ABI_CWindows__CWeb__CSyndication__CSyndicationItem___x_ABI_CWindows__CWeb__CSyndication__CTransferProgress* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIAsyncOperationWithProgress_2___x_ABI_CWindows__CWeb__CSyndication__CSyndicationItem___x_ABI_CWindows__CWeb__CSyndication__CTransferProgress* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIAsyncOperationWithProgress_2___x_ABI_CWindows__CWeb__CSyndication__CSyndicationItem___x_ABI_CWindows__CWeb__CSyndication__CTransferProgress* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* put_Progress)(__x_ABI_C__FIAsyncOperationWithProgress_2___x_ABI_CWindows__CWeb__CSyndication__CSyndicationItem___x_ABI_CWindows__CWeb__CSyndication__CTransferProgress* This,
        __x_ABI_C__FIAsyncOperationProgressHandler_2___x_ABI_CWindows__CWeb__CSyndication__CSyndicationItem___x_ABI_CWindows__CWeb__CSyndication__CTransferProgress* handler);
    HRESULT (STDMETHODCALLTYPE* get_Progress)(__x_ABI_C__FIAsyncOperationWithProgress_2___x_ABI_CWindows__CWeb__CSyndication__CSyndicationItem___x_ABI_CWindows__CWeb__CSyndication__CTransferProgress* This,
        __x_ABI_C__FIAsyncOperationProgressHandler_2___x_ABI_CWindows__CWeb__CSyndication__CSyndicationItem___x_ABI_CWindows__CWeb__CSyndication__CTransferProgress** result);
    HRESULT (STDMETHODCALLTYPE* put_Completed)(__x_ABI_C__FIAsyncOperationWithProgress_2___x_ABI_CWindows__CWeb__CSyndication__CSyndicationItem___x_ABI_CWindows__CWeb__CSyndication__CTransferProgress* This,
        __x_ABI_C__FIAsyncOperationWithProgressCompletedHandler_2___x_ABI_CWindows__CWeb__CSyndication__CSyndicationItem___x_ABI_CWindows__CWeb__CSyndication__CTransferProgress* handler);
    HRESULT (STDMETHODCALLTYPE* get_Completed)(__x_ABI_C__FIAsyncOperationWithProgress_2___x_ABI_CWindows__CWeb__CSyndication__CSyndicationItem___x_ABI_CWindows__CWeb__CSyndication__CTransferProgress* This,
        __x_ABI_C__FIAsyncOperationWithProgressCompletedHandler_2___x_ABI_CWindows__CWeb__CSyndication__CSyndicationItem___x_ABI_CWindows__CWeb__CSyndication__CTransferProgress** result);
    HRESULT (STDMETHODCALLTYPE* GetResults)(__x_ABI_C__FIAsyncOperationWithProgress_2___x_ABI_CWindows__CWeb__CSyndication__CSyndicationItem___x_ABI_CWindows__CWeb__CSyndication__CTransferProgress* This,
        __x_ABI_CWindows_CWeb_CSyndication_CISyndicationItem** result);

        END_INTERFACE
    } __x_ABI_C__FIAsyncOperationWithProgress_2___x_ABI_CWindows__CWeb__CSyndication__CSyndicationItem___x_ABI_CWindows__CWeb__CSyndication__CTransferProgressVtbl;

    interface __x_ABI_C__FIAsyncOperationWithProgress_2___x_ABI_CWindows__CWeb__CSyndication__CSyndicationItem___x_ABI_CWindows__CWeb__CSyndication__CTransferProgress
    {
        CONST_VTBL struct __x_ABI_C__FIAsyncOperationWithProgress_2___x_ABI_CWindows__CWeb__CSyndication__CSyndicationItem___x_ABI_CWindows__CWeb__CSyndication__CTransferProgressVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIAsyncOperationWithProgress_2___x_ABI_CWindows__CWeb__CSyndication__CSyndicationItem___x_ABI_CWindows__CWeb__CSyndication__CTransferProgress_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIAsyncOperationProgressHandler_2___x_ABI_CWindows__CWeb__CSyndication__CSyndicationItem___x_ABI_CWindows__CWeb__CSyndication__CTransferProgress_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIAsyncOperationProgressHandler_2___x_ABI_CWindows__CWeb__CSyndication__CSyndicationItem___x_ABI_CWindows__CWeb__CSyndication__CTransferProgress_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIAsyncOperationProgressHandler_2___x_ABI_CWindows__CWeb__CSyndication__CSyndicationItem___x_ABI_CWindows__CWeb__CSyndication__CTransferProgress __x_ABI_C__FIAsyncOperationProgressHandler_2___x_ABI_CWindows__CWeb__CSyndication__CSyndicationItem___x_ABI_CWindows__CWeb__CSyndication__CTransferProgress;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIAsyncOperationProgressHandler_2___x_ABI_CWindows__CWeb__CSyndication__CSyndicationItem___x_ABI_CWindows__CWeb__CSyndication__CTransferProgress;

    typedef struct __x_ABI_C__FIAsyncOperationProgressHandler_2___x_ABI_CWindows__CWeb__CSyndication__CSyndicationItem___x_ABI_CWindows__CWeb__CSyndication__CTransferProgressVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIAsyncOperationProgressHandler_2___x_ABI_CWindows__CWeb__CSyndication__CSyndicationItem___x_ABI_CWindows__CWeb__CSyndication__CTransferProgress* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIAsyncOperationProgressHandler_2___x_ABI_CWindows__CWeb__CSyndication__CSyndicationItem___x_ABI_CWindows__CWeb__CSyndication__CTransferProgress* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIAsyncOperationProgressHandler_2___x_ABI_CWindows__CWeb__CSyndication__CSyndicationItem___x_ABI_CWindows__CWeb__CSyndication__CTransferProgress* This);
        HRESULT (STDMETHODCALLTYPE* Invoke)(__x_ABI_C__FIAsyncOperationProgressHandler_2___x_ABI_CWindows__CWeb__CSyndication__CSyndicationItem___x_ABI_CWindows__CWeb__CSyndication__CTransferProgress* This,
        __x_ABI_C__FIAsyncOperationWithProgress_2___x_ABI_CWindows__CWeb__CSyndication__CSyndicationItem___x_ABI_CWindows__CWeb__CSyndication__CTransferProgress* asyncInfo,
        struct __x_ABI_CWindows_CWeb_CSyndication_CTransferProgress progressInfo);

        END_INTERFACE
    } __x_ABI_C__FIAsyncOperationProgressHandler_2___x_ABI_CWindows__CWeb__CSyndication__CSyndicationItem___x_ABI_CWindows__CWeb__CSyndication__CTransferProgressVtbl;

    interface __x_ABI_C__FIAsyncOperationProgressHandler_2___x_ABI_CWindows__CWeb__CSyndication__CSyndicationItem___x_ABI_CWindows__CWeb__CSyndication__CTransferProgress
    {
        CONST_VTBL struct __x_ABI_C__FIAsyncOperationProgressHandler_2___x_ABI_CWindows__CWeb__CSyndication__CSyndicationItem___x_ABI_CWindows__CWeb__CSyndication__CTransferProgressVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIAsyncOperationProgressHandler_2___x_ABI_CWindows__CWeb__CSyndication__CSyndicationItem___x_ABI_CWindows__CWeb__CSyndication__CTransferProgress_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIIterator_1_HSTRING_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIIterator_1_HSTRING_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIIterator_1_HSTRING __x_ABI_C__FIIterator_1_HSTRING;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIIterator_1_HSTRING;

    typedef struct __x_ABI_C__FIIterator_1_HSTRINGVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIIterator_1_HSTRING* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIIterator_1_HSTRING* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIIterator_1_HSTRING* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIIterator_1_HSTRING* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIIterator_1_HSTRING* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIIterator_1_HSTRING* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Current)(__x_ABI_C__FIIterator_1_HSTRING* This,
        HSTRING* result);
    HRESULT (STDMETHODCALLTYPE* get_HasCurrent)(__x_ABI_C__FIIterator_1_HSTRING* This,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* MoveNext)(__x_ABI_C__FIIterator_1_HSTRING* This,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__x_ABI_C__FIIterator_1_HSTRING* This,
        UINT32 itemsLength,
        HSTRING* items,
        UINT32* result);

        END_INTERFACE
    } __x_ABI_C__FIIterator_1_HSTRINGVtbl;

    interface __x_ABI_C__FIIterator_1_HSTRING
    {
        CONST_VTBL struct __x_ABI_C__FIIterator_1_HSTRINGVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIIterator_1_HSTRING_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIIterable_1_HSTRING_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIIterable_1_HSTRING_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIIterable_1_HSTRING __x_ABI_C__FIIterable_1_HSTRING;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIIterable_1_HSTRING;

    typedef struct __x_ABI_C__FIIterable_1_HSTRINGVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIIterable_1_HSTRING* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIIterable_1_HSTRING* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIIterable_1_HSTRING* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIIterable_1_HSTRING* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIIterable_1_HSTRING* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIIterable_1_HSTRING* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* First)(__x_ABI_C__FIIterable_1_HSTRING* This,
        __x_ABI_C__FIIterator_1_HSTRING** result);

        END_INTERFACE
    } __x_ABI_C__FIIterable_1_HSTRINGVtbl;

    interface __x_ABI_C__FIIterable_1_HSTRING
    {
        CONST_VTBL struct __x_ABI_C__FIIterable_1_HSTRINGVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIIterable_1_HSTRING_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIIterator_1___x_ABI_CWindows__CWeb__CAtomPub__CResourceCollection_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIIterator_1___x_ABI_CWindows__CWeb__CAtomPub__CResourceCollection_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIIterator_1___x_ABI_CWindows__CWeb__CAtomPub__CResourceCollection __x_ABI_C__FIIterator_1___x_ABI_CWindows__CWeb__CAtomPub__CResourceCollection;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIIterator_1___x_ABI_CWindows__CWeb__CAtomPub__CResourceCollection;

    typedef struct __x_ABI_C__FIIterator_1___x_ABI_CWindows__CWeb__CAtomPub__CResourceCollectionVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CWeb__CAtomPub__CResourceCollection* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CWeb__CAtomPub__CResourceCollection* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CWeb__CAtomPub__CResourceCollection* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CWeb__CAtomPub__CResourceCollection* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CWeb__CAtomPub__CResourceCollection* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CWeb__CAtomPub__CResourceCollection* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Current)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CWeb__CAtomPub__CResourceCollection* This,
        __x_ABI_CWindows_CWeb_CAtomPub_CIResourceCollection** result);
    HRESULT (STDMETHODCALLTYPE* get_HasCurrent)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CWeb__CAtomPub__CResourceCollection* This,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* MoveNext)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CWeb__CAtomPub__CResourceCollection* This,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CWeb__CAtomPub__CResourceCollection* This,
        UINT32 itemsLength,
        __x_ABI_CWindows_CWeb_CAtomPub_CIResourceCollection** items,
        UINT32* result);

        END_INTERFACE
    } __x_ABI_C__FIIterator_1___x_ABI_CWindows__CWeb__CAtomPub__CResourceCollectionVtbl;

    interface __x_ABI_C__FIIterator_1___x_ABI_CWindows__CWeb__CAtomPub__CResourceCollection
    {
        CONST_VTBL struct __x_ABI_C__FIIterator_1___x_ABI_CWindows__CWeb__CAtomPub__CResourceCollectionVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIIterator_1___x_ABI_CWindows__CWeb__CAtomPub__CResourceCollection_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIIterable_1___x_ABI_CWindows__CWeb__CAtomPub__CResourceCollection_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIIterable_1___x_ABI_CWindows__CWeb__CAtomPub__CResourceCollection_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIIterable_1___x_ABI_CWindows__CWeb__CAtomPub__CResourceCollection __x_ABI_C__FIIterable_1___x_ABI_CWindows__CWeb__CAtomPub__CResourceCollection;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIIterable_1___x_ABI_CWindows__CWeb__CAtomPub__CResourceCollection;

    typedef struct __x_ABI_C__FIIterable_1___x_ABI_CWindows__CWeb__CAtomPub__CResourceCollectionVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CWeb__CAtomPub__CResourceCollection* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CWeb__CAtomPub__CResourceCollection* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CWeb__CAtomPub__CResourceCollection* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CWeb__CAtomPub__CResourceCollection* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CWeb__CAtomPub__CResourceCollection* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CWeb__CAtomPub__CResourceCollection* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* First)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CWeb__CAtomPub__CResourceCollection* This,
        __x_ABI_C__FIIterator_1___x_ABI_CWindows__CWeb__CAtomPub__CResourceCollection** result);

        END_INTERFACE
    } __x_ABI_C__FIIterable_1___x_ABI_CWindows__CWeb__CAtomPub__CResourceCollectionVtbl;

    interface __x_ABI_C__FIIterable_1___x_ABI_CWindows__CWeb__CAtomPub__CResourceCollection
    {
        CONST_VTBL struct __x_ABI_C__FIIterable_1___x_ABI_CWindows__CWeb__CAtomPub__CResourceCollectionVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIIterable_1___x_ABI_CWindows__CWeb__CAtomPub__CResourceCollection_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIIterator_1___x_ABI_CWindows__CWeb__CAtomPub__CWorkspace_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIIterator_1___x_ABI_CWindows__CWeb__CAtomPub__CWorkspace_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIIterator_1___x_ABI_CWindows__CWeb__CAtomPub__CWorkspace __x_ABI_C__FIIterator_1___x_ABI_CWindows__CWeb__CAtomPub__CWorkspace;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIIterator_1___x_ABI_CWindows__CWeb__CAtomPub__CWorkspace;

    typedef struct __x_ABI_C__FIIterator_1___x_ABI_CWindows__CWeb__CAtomPub__CWorkspaceVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CWeb__CAtomPub__CWorkspace* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CWeb__CAtomPub__CWorkspace* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CWeb__CAtomPub__CWorkspace* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CWeb__CAtomPub__CWorkspace* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CWeb__CAtomPub__CWorkspace* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CWeb__CAtomPub__CWorkspace* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Current)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CWeb__CAtomPub__CWorkspace* This,
        __x_ABI_CWindows_CWeb_CAtomPub_CIWorkspace** result);
    HRESULT (STDMETHODCALLTYPE* get_HasCurrent)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CWeb__CAtomPub__CWorkspace* This,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* MoveNext)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CWeb__CAtomPub__CWorkspace* This,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CWeb__CAtomPub__CWorkspace* This,
        UINT32 itemsLength,
        __x_ABI_CWindows_CWeb_CAtomPub_CIWorkspace** items,
        UINT32* result);

        END_INTERFACE
    } __x_ABI_C__FIIterator_1___x_ABI_CWindows__CWeb__CAtomPub__CWorkspaceVtbl;

    interface __x_ABI_C__FIIterator_1___x_ABI_CWindows__CWeb__CAtomPub__CWorkspace
    {
        CONST_VTBL struct __x_ABI_C__FIIterator_1___x_ABI_CWindows__CWeb__CAtomPub__CWorkspaceVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIIterator_1___x_ABI_CWindows__CWeb__CAtomPub__CWorkspace_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIIterable_1___x_ABI_CWindows__CWeb__CAtomPub__CWorkspace_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIIterable_1___x_ABI_CWindows__CWeb__CAtomPub__CWorkspace_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIIterable_1___x_ABI_CWindows__CWeb__CAtomPub__CWorkspace __x_ABI_C__FIIterable_1___x_ABI_CWindows__CWeb__CAtomPub__CWorkspace;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIIterable_1___x_ABI_CWindows__CWeb__CAtomPub__CWorkspace;

    typedef struct __x_ABI_C__FIIterable_1___x_ABI_CWindows__CWeb__CAtomPub__CWorkspaceVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CWeb__CAtomPub__CWorkspace* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CWeb__CAtomPub__CWorkspace* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CWeb__CAtomPub__CWorkspace* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CWeb__CAtomPub__CWorkspace* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CWeb__CAtomPub__CWorkspace* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CWeb__CAtomPub__CWorkspace* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* First)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CWeb__CAtomPub__CWorkspace* This,
        __x_ABI_C__FIIterator_1___x_ABI_CWindows__CWeb__CAtomPub__CWorkspace** result);

        END_INTERFACE
    } __x_ABI_C__FIIterable_1___x_ABI_CWindows__CWeb__CAtomPub__CWorkspaceVtbl;

    interface __x_ABI_C__FIIterable_1___x_ABI_CWindows__CWeb__CAtomPub__CWorkspace
    {
        CONST_VTBL struct __x_ABI_C__FIIterable_1___x_ABI_CWindows__CWeb__CAtomPub__CWorkspaceVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIIterable_1___x_ABI_CWindows__CWeb__CAtomPub__CWorkspace_INTERFACE_DEFINED__
    
#ifndef ____x_ABI_CWindows_CWeb_CSyndication_CISyndicationCategory_FWD_DEFINED__
#define ____x_ABI_CWindows_CWeb_CSyndication_CISyndicationCategory_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CWeb_CSyndication_CISyndicationCategory __x_ABI_CWindows_CWeb_CSyndication_CISyndicationCategory;

#endif // ____x_ABI_CWindows_CWeb_CSyndication_CISyndicationCategory_FWD_DEFINED__

#if !defined(____x_ABI_C__FIIterator_1___x_ABI_CWindows__CWeb__CSyndication__CSyndicationCategory_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIIterator_1___x_ABI_CWindows__CWeb__CSyndication__CSyndicationCategory_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIIterator_1___x_ABI_CWindows__CWeb__CSyndication__CSyndicationCategory __x_ABI_C__FIIterator_1___x_ABI_CWindows__CWeb__CSyndication__CSyndicationCategory;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIIterator_1___x_ABI_CWindows__CWeb__CSyndication__CSyndicationCategory;

    typedef struct __x_ABI_C__FIIterator_1___x_ABI_CWindows__CWeb__CSyndication__CSyndicationCategoryVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CWeb__CSyndication__CSyndicationCategory* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CWeb__CSyndication__CSyndicationCategory* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CWeb__CSyndication__CSyndicationCategory* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CWeb__CSyndication__CSyndicationCategory* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CWeb__CSyndication__CSyndicationCategory* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CWeb__CSyndication__CSyndicationCategory* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Current)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CWeb__CSyndication__CSyndicationCategory* This,
        __x_ABI_CWindows_CWeb_CSyndication_CISyndicationCategory** result);
    HRESULT (STDMETHODCALLTYPE* get_HasCurrent)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CWeb__CSyndication__CSyndicationCategory* This,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* MoveNext)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CWeb__CSyndication__CSyndicationCategory* This,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CWeb__CSyndication__CSyndicationCategory* This,
        UINT32 itemsLength,
        __x_ABI_CWindows_CWeb_CSyndication_CISyndicationCategory** items,
        UINT32* result);

        END_INTERFACE
    } __x_ABI_C__FIIterator_1___x_ABI_CWindows__CWeb__CSyndication__CSyndicationCategoryVtbl;

    interface __x_ABI_C__FIIterator_1___x_ABI_CWindows__CWeb__CSyndication__CSyndicationCategory
    {
        CONST_VTBL struct __x_ABI_C__FIIterator_1___x_ABI_CWindows__CWeb__CSyndication__CSyndicationCategoryVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIIterator_1___x_ABI_CWindows__CWeb__CSyndication__CSyndicationCategory_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIIterable_1___x_ABI_CWindows__CWeb__CSyndication__CSyndicationCategory_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIIterable_1___x_ABI_CWindows__CWeb__CSyndication__CSyndicationCategory_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIIterable_1___x_ABI_CWindows__CWeb__CSyndication__CSyndicationCategory __x_ABI_C__FIIterable_1___x_ABI_CWindows__CWeb__CSyndication__CSyndicationCategory;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIIterable_1___x_ABI_CWindows__CWeb__CSyndication__CSyndicationCategory;

    typedef struct __x_ABI_C__FIIterable_1___x_ABI_CWindows__CWeb__CSyndication__CSyndicationCategoryVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CWeb__CSyndication__CSyndicationCategory* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CWeb__CSyndication__CSyndicationCategory* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CWeb__CSyndication__CSyndicationCategory* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CWeb__CSyndication__CSyndicationCategory* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CWeb__CSyndication__CSyndicationCategory* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CWeb__CSyndication__CSyndicationCategory* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* First)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CWeb__CSyndication__CSyndicationCategory* This,
        __x_ABI_C__FIIterator_1___x_ABI_CWindows__CWeb__CSyndication__CSyndicationCategory** result);

        END_INTERFACE
    } __x_ABI_C__FIIterable_1___x_ABI_CWindows__CWeb__CSyndication__CSyndicationCategoryVtbl;

    interface __x_ABI_C__FIIterable_1___x_ABI_CWindows__CWeb__CSyndication__CSyndicationCategory
    {
        CONST_VTBL struct __x_ABI_C__FIIterable_1___x_ABI_CWindows__CWeb__CSyndication__CSyndicationCategoryVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIIterable_1___x_ABI_CWindows__CWeb__CSyndication__CSyndicationCategory_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIVectorView_1_HSTRING_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIVectorView_1_HSTRING_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIVectorView_1_HSTRING __x_ABI_C__FIVectorView_1_HSTRING;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIVectorView_1_HSTRING;

    typedef struct __x_ABI_C__FIVectorView_1_HSTRINGVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIVectorView_1_HSTRING* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIVectorView_1_HSTRING* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIVectorView_1_HSTRING* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIVectorView_1_HSTRING* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIVectorView_1_HSTRING* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIVectorView_1_HSTRING* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* GetAt)(__x_ABI_C__FIVectorView_1_HSTRING* This,
        UINT32 index,
        HSTRING* result);
    HRESULT (STDMETHODCALLTYPE* get_Size)(__x_ABI_C__FIVectorView_1_HSTRING* This,
        UINT32* result);
    HRESULT (STDMETHODCALLTYPE* IndexOf)(__x_ABI_C__FIVectorView_1_HSTRING* This,
        HSTRING value,
        UINT32* index,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__x_ABI_C__FIVectorView_1_HSTRING* This,
        UINT32 startIndex,
        UINT32 itemsLength,
        HSTRING* items,
        UINT32* result);

        END_INTERFACE
    } __x_ABI_C__FIVectorView_1_HSTRINGVtbl;

    interface __x_ABI_C__FIVectorView_1_HSTRING
    {
        CONST_VTBL struct __x_ABI_C__FIVectorView_1_HSTRINGVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIVectorView_1_HSTRING_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIVectorView_1___x_ABI_CWindows__CWeb__CAtomPub__CResourceCollection_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIVectorView_1___x_ABI_CWindows__CWeb__CAtomPub__CResourceCollection_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CWeb__CAtomPub__CResourceCollection __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CWeb__CAtomPub__CResourceCollection;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CWeb__CAtomPub__CResourceCollection;

    typedef struct __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CWeb__CAtomPub__CResourceCollectionVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CWeb__CAtomPub__CResourceCollection* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CWeb__CAtomPub__CResourceCollection* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CWeb__CAtomPub__CResourceCollection* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CWeb__CAtomPub__CResourceCollection* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CWeb__CAtomPub__CResourceCollection* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CWeb__CAtomPub__CResourceCollection* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* GetAt)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CWeb__CAtomPub__CResourceCollection* This,
        UINT32 index,
        __x_ABI_CWindows_CWeb_CAtomPub_CIResourceCollection** result);
    HRESULT (STDMETHODCALLTYPE* get_Size)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CWeb__CAtomPub__CResourceCollection* This,
        UINT32* result);
    HRESULT (STDMETHODCALLTYPE* IndexOf)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CWeb__CAtomPub__CResourceCollection* This,
        __x_ABI_CWindows_CWeb_CAtomPub_CIResourceCollection* value,
        UINT32* index,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CWeb__CAtomPub__CResourceCollection* This,
        UINT32 startIndex,
        UINT32 itemsLength,
        __x_ABI_CWindows_CWeb_CAtomPub_CIResourceCollection** items,
        UINT32* result);

        END_INTERFACE
    } __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CWeb__CAtomPub__CResourceCollectionVtbl;

    interface __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CWeb__CAtomPub__CResourceCollection
    {
        CONST_VTBL struct __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CWeb__CAtomPub__CResourceCollectionVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIVectorView_1___x_ABI_CWindows__CWeb__CAtomPub__CResourceCollection_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIVectorView_1___x_ABI_CWindows__CWeb__CAtomPub__CWorkspace_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIVectorView_1___x_ABI_CWindows__CWeb__CAtomPub__CWorkspace_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CWeb__CAtomPub__CWorkspace __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CWeb__CAtomPub__CWorkspace;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CWeb__CAtomPub__CWorkspace;

    typedef struct __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CWeb__CAtomPub__CWorkspaceVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CWeb__CAtomPub__CWorkspace* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CWeb__CAtomPub__CWorkspace* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CWeb__CAtomPub__CWorkspace* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CWeb__CAtomPub__CWorkspace* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CWeb__CAtomPub__CWorkspace* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CWeb__CAtomPub__CWorkspace* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* GetAt)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CWeb__CAtomPub__CWorkspace* This,
        UINT32 index,
        __x_ABI_CWindows_CWeb_CAtomPub_CIWorkspace** result);
    HRESULT (STDMETHODCALLTYPE* get_Size)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CWeb__CAtomPub__CWorkspace* This,
        UINT32* result);
    HRESULT (STDMETHODCALLTYPE* IndexOf)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CWeb__CAtomPub__CWorkspace* This,
        __x_ABI_CWindows_CWeb_CAtomPub_CIWorkspace* value,
        UINT32* index,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CWeb__CAtomPub__CWorkspace* This,
        UINT32 startIndex,
        UINT32 itemsLength,
        __x_ABI_CWindows_CWeb_CAtomPub_CIWorkspace** items,
        UINT32* result);

        END_INTERFACE
    } __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CWeb__CAtomPub__CWorkspaceVtbl;

    interface __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CWeb__CAtomPub__CWorkspace
    {
        CONST_VTBL struct __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CWeb__CAtomPub__CWorkspaceVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIVectorView_1___x_ABI_CWindows__CWeb__CAtomPub__CWorkspace_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIVectorView_1___x_ABI_CWindows__CWeb__CSyndication__CSyndicationCategory_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIVectorView_1___x_ABI_CWindows__CWeb__CSyndication__CSyndicationCategory_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CWeb__CSyndication__CSyndicationCategory __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CWeb__CSyndication__CSyndicationCategory;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CWeb__CSyndication__CSyndicationCategory;

    typedef struct __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CWeb__CSyndication__CSyndicationCategoryVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CWeb__CSyndication__CSyndicationCategory* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CWeb__CSyndication__CSyndicationCategory* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CWeb__CSyndication__CSyndicationCategory* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CWeb__CSyndication__CSyndicationCategory* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CWeb__CSyndication__CSyndicationCategory* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CWeb__CSyndication__CSyndicationCategory* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* GetAt)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CWeb__CSyndication__CSyndicationCategory* This,
        UINT32 index,
        __x_ABI_CWindows_CWeb_CSyndication_CISyndicationCategory** result);
    HRESULT (STDMETHODCALLTYPE* get_Size)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CWeb__CSyndication__CSyndicationCategory* This,
        UINT32* result);
    HRESULT (STDMETHODCALLTYPE* IndexOf)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CWeb__CSyndication__CSyndicationCategory* This,
        __x_ABI_CWindows_CWeb_CSyndication_CISyndicationCategory* value,
        UINT32* index,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CWeb__CSyndication__CSyndicationCategory* This,
        UINT32 startIndex,
        UINT32 itemsLength,
        __x_ABI_CWindows_CWeb_CSyndication_CISyndicationCategory** items,
        UINT32* result);

        END_INTERFACE
    } __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CWeb__CSyndication__CSyndicationCategoryVtbl;

    interface __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CWeb__CSyndication__CSyndicationCategory
    {
        CONST_VTBL struct __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CWeb__CSyndication__CSyndicationCategoryVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIVectorView_1___x_ABI_CWindows__CWeb__CSyndication__CSyndicationCategory_INTERFACE_DEFINED__
    
typedef enum __x_ABI_CWindows_CFoundation_CAsyncStatus __x_ABI_CWindows_CFoundation_CAsyncStatus;

#ifndef ____x_ABI_CWindows_CFoundation_CIAsyncInfo_FWD_DEFINED__
#define ____x_ABI_CWindows_CFoundation_CIAsyncInfo_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CFoundation_CIAsyncInfo __x_ABI_CWindows_CFoundation_CIAsyncInfo;

#endif // ____x_ABI_CWindows_CFoundation_CIAsyncInfo_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CFoundation_CIUriRuntimeClass_FWD_DEFINED__
#define ____x_ABI_CWindows_CFoundation_CIUriRuntimeClass_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CFoundation_CIUriRuntimeClass __x_ABI_CWindows_CFoundation_CIUriRuntimeClass;

#endif // ____x_ABI_CWindows_CFoundation_CIUriRuntimeClass_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CSecurity_CCredentials_CIPasswordCredential_FWD_DEFINED__
#define ____x_ABI_CWindows_CSecurity_CCredentials_CIPasswordCredential_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CSecurity_CCredentials_CIPasswordCredential __x_ABI_CWindows_CSecurity_CCredentials_CIPasswordCredential;

#endif // ____x_ABI_CWindows_CSecurity_CCredentials_CIPasswordCredential_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CWeb_CSyndication_CISyndicationClient_FWD_DEFINED__
#define ____x_ABI_CWindows_CWeb_CSyndication_CISyndicationClient_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CWeb_CSyndication_CISyndicationClient __x_ABI_CWindows_CWeb_CSyndication_CISyndicationClient;

#endif // ____x_ABI_CWindows_CWeb_CSyndication_CISyndicationClient_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CWeb_CSyndication_CISyndicationNode_FWD_DEFINED__
#define ____x_ABI_CWindows_CWeb_CSyndication_CISyndicationNode_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CWeb_CSyndication_CISyndicationNode __x_ABI_CWindows_CWeb_CSyndication_CISyndicationNode;

#endif // ____x_ABI_CWindows_CWeb_CSyndication_CISyndicationNode_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CWeb_CSyndication_CISyndicationText_FWD_DEFINED__
#define ____x_ABI_CWindows_CWeb_CSyndication_CISyndicationText_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CWeb_CSyndication_CISyndicationText __x_ABI_CWindows_CWeb_CSyndication_CISyndicationText;

#endif // ____x_ABI_CWindows_CWeb_CSyndication_CISyndicationText_FWD_DEFINED__

#if !defined(____x_ABI_CWindows_CWeb_CAtomPub_CIAtomPubClient_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CWeb_CAtomPub_CIAtomPubClient_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CWeb_CAtomPub_CIAtomPubClientVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CWeb_CAtomPub_CIAtomPubClient* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CWeb_CAtomPub_CIAtomPubClient* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CWeb_CAtomPub_CIAtomPubClient* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CWeb_CAtomPub_CIAtomPubClient* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CWeb_CAtomPub_CIAtomPubClient* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CWeb_CAtomPub_CIAtomPubClient* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* RetrieveServiceDocumentAsync)(__x_ABI_CWindows_CWeb_CAtomPub_CIAtomPubClient* This,
        __x_ABI_CWindows_CFoundation_CIUriRuntimeClass* uri,
        __x_ABI_C__FIAsyncOperationWithProgress_2___x_ABI_CWindows__CWeb__CAtomPub__CServiceDocument___x_ABI_CWindows__CWeb__CSyndication__CRetrievalProgress** operation);
    HRESULT (STDMETHODCALLTYPE* RetrieveMediaResourceAsync)(__x_ABI_CWindows_CWeb_CAtomPub_CIAtomPubClient* This,
        __x_ABI_CWindows_CFoundation_CIUriRuntimeClass* uri,
        __x_ABI_C__FIAsyncOperationWithProgress_2___x_ABI_CWindows__CStorage__CStreams__CIInputStream___x_ABI_CWindows__CWeb__CSyndication__CRetrievalProgress** operation);
    HRESULT (STDMETHODCALLTYPE* RetrieveResourceAsync)(__x_ABI_CWindows_CWeb_CAtomPub_CIAtomPubClient* This,
        __x_ABI_CWindows_CFoundation_CIUriRuntimeClass* uri,
        __x_ABI_C__FIAsyncOperationWithProgress_2___x_ABI_CWindows__CWeb__CSyndication__CSyndicationItem___x_ABI_CWindows__CWeb__CSyndication__CRetrievalProgress** operation);
    HRESULT (STDMETHODCALLTYPE* CreateResourceAsync)(__x_ABI_CWindows_CWeb_CAtomPub_CIAtomPubClient* This,
        __x_ABI_CWindows_CFoundation_CIUriRuntimeClass* uri,
        HSTRING description,
        __x_ABI_CWindows_CWeb_CSyndication_CISyndicationItem* item,
        __x_ABI_C__FIAsyncOperationWithProgress_2___x_ABI_CWindows__CWeb__CSyndication__CSyndicationItem___x_ABI_CWindows__CWeb__CSyndication__CTransferProgress** operation);
    HRESULT (STDMETHODCALLTYPE* CreateMediaResourceAsync)(__x_ABI_CWindows_CWeb_CAtomPub_CIAtomPubClient* This,
        __x_ABI_CWindows_CFoundation_CIUriRuntimeClass* uri,
        HSTRING mediaType,
        HSTRING description,
        __x_ABI_CWindows_CStorage_CStreams_CIInputStream* mediaStream,
        __x_ABI_C__FIAsyncOperationWithProgress_2___x_ABI_CWindows__CWeb__CSyndication__CSyndicationItem___x_ABI_CWindows__CWeb__CSyndication__CTransferProgress** operation);
    HRESULT (STDMETHODCALLTYPE* UpdateMediaResourceAsync)(__x_ABI_CWindows_CWeb_CAtomPub_CIAtomPubClient* This,
        __x_ABI_CWindows_CFoundation_CIUriRuntimeClass* uri,
        HSTRING mediaType,
        __x_ABI_CWindows_CStorage_CStreams_CIInputStream* mediaStream,
        __x_ABI_C__FIAsyncActionWithProgress_1___x_ABI_CWindows__CWeb__CSyndication__CTransferProgress** operation);
    HRESULT (STDMETHODCALLTYPE* UpdateResourceAsync)(__x_ABI_CWindows_CWeb_CAtomPub_CIAtomPubClient* This,
        __x_ABI_CWindows_CFoundation_CIUriRuntimeClass* uri,
        __x_ABI_CWindows_CWeb_CSyndication_CISyndicationItem* item,
        __x_ABI_C__FIAsyncActionWithProgress_1___x_ABI_CWindows__CWeb__CSyndication__CTransferProgress** operation);
    HRESULT (STDMETHODCALLTYPE* UpdateResourceItemAsync)(__x_ABI_CWindows_CWeb_CAtomPub_CIAtomPubClient* This,
        __x_ABI_CWindows_CWeb_CSyndication_CISyndicationItem* item,
        __x_ABI_C__FIAsyncActionWithProgress_1___x_ABI_CWindows__CWeb__CSyndication__CTransferProgress** operation);
    HRESULT (STDMETHODCALLTYPE* DeleteResourceAsync)(__x_ABI_CWindows_CWeb_CAtomPub_CIAtomPubClient* This,
        __x_ABI_CWindows_CFoundation_CIUriRuntimeClass* uri,
        __x_ABI_C__FIAsyncActionWithProgress_1___x_ABI_CWindows__CWeb__CSyndication__CTransferProgress** operation);
    HRESULT (STDMETHODCALLTYPE* DeleteResourceItemAsync)(__x_ABI_CWindows_CWeb_CAtomPub_CIAtomPubClient* This,
        __x_ABI_CWindows_CWeb_CSyndication_CISyndicationItem* item,
        __x_ABI_C__FIAsyncActionWithProgress_1___x_ABI_CWindows__CWeb__CSyndication__CTransferProgress** operation);
    HRESULT (STDMETHODCALLTYPE* CancelAsyncOperations)(__x_ABI_CWindows_CWeb_CAtomPub_CIAtomPubClient* This);

        END_INTERFACE
    } __x_ABI_CWindows_CWeb_CAtomPub_CIAtomPubClientVtbl;

    interface __x_ABI_CWindows_CWeb_CAtomPub_CIAtomPubClient
    {
        CONST_VTBL struct __x_ABI_CWindows_CWeb_CAtomPub_CIAtomPubClientVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CWeb_CAtomPub_CIAtomPubClient;
#endif /* !defined(____x_ABI_CWindows_CWeb_CAtomPub_CIAtomPubClient_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CWeb_CAtomPub_CIAtomPubClientFactory_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CWeb_CAtomPub_CIAtomPubClientFactory_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CWeb_CAtomPub_CIAtomPubClientFactoryVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CWeb_CAtomPub_CIAtomPubClientFactory* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CWeb_CAtomPub_CIAtomPubClientFactory* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CWeb_CAtomPub_CIAtomPubClientFactory* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CWeb_CAtomPub_CIAtomPubClientFactory* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CWeb_CAtomPub_CIAtomPubClientFactory* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CWeb_CAtomPub_CIAtomPubClientFactory* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* CreateAtomPubClientWithCredentials)(__x_ABI_CWindows_CWeb_CAtomPub_CIAtomPubClientFactory* This,
        __x_ABI_CWindows_CSecurity_CCredentials_CIPasswordCredential* serverCredential,
        __x_ABI_CWindows_CWeb_CAtomPub_CIAtomPubClient** atomPubClient);

        END_INTERFACE
    } __x_ABI_CWindows_CWeb_CAtomPub_CIAtomPubClientFactoryVtbl;

    interface __x_ABI_CWindows_CWeb_CAtomPub_CIAtomPubClientFactory
    {
        CONST_VTBL struct __x_ABI_CWindows_CWeb_CAtomPub_CIAtomPubClientFactoryVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CWeb_CAtomPub_CIAtomPubClientFactory;
#endif /* !defined(____x_ABI_CWindows_CWeb_CAtomPub_CIAtomPubClientFactory_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CWeb_CAtomPub_CIResourceCollection_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CWeb_CAtomPub_CIResourceCollection_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CWeb_CAtomPub_CIResourceCollectionVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CWeb_CAtomPub_CIResourceCollection* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CWeb_CAtomPub_CIResourceCollection* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CWeb_CAtomPub_CIResourceCollection* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CWeb_CAtomPub_CIResourceCollection* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CWeb_CAtomPub_CIResourceCollection* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CWeb_CAtomPub_CIResourceCollection* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Title)(__x_ABI_CWindows_CWeb_CAtomPub_CIResourceCollection* This,
        __x_ABI_CWindows_CWeb_CSyndication_CISyndicationText** value);
    HRESULT (STDMETHODCALLTYPE* get_Uri)(__x_ABI_CWindows_CWeb_CAtomPub_CIResourceCollection* This,
        __x_ABI_CWindows_CFoundation_CIUriRuntimeClass** value);
    HRESULT (STDMETHODCALLTYPE* get_Categories)(__x_ABI_CWindows_CWeb_CAtomPub_CIResourceCollection* This,
        __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CWeb__CSyndication__CSyndicationCategory** value);
    HRESULT (STDMETHODCALLTYPE* get_Accepts)(__x_ABI_CWindows_CWeb_CAtomPub_CIResourceCollection* This,
        __x_ABI_C__FIVectorView_1_HSTRING** value);

        END_INTERFACE
    } __x_ABI_CWindows_CWeb_CAtomPub_CIResourceCollectionVtbl;

    interface __x_ABI_CWindows_CWeb_CAtomPub_CIResourceCollection
    {
        CONST_VTBL struct __x_ABI_CWindows_CWeb_CAtomPub_CIResourceCollectionVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CWeb_CAtomPub_CIResourceCollection;
#endif /* !defined(____x_ABI_CWindows_CWeb_CAtomPub_CIResourceCollection_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CWeb_CAtomPub_CIServiceDocument_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CWeb_CAtomPub_CIServiceDocument_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CWeb_CAtomPub_CIServiceDocumentVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CWeb_CAtomPub_CIServiceDocument* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CWeb_CAtomPub_CIServiceDocument* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CWeb_CAtomPub_CIServiceDocument* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CWeb_CAtomPub_CIServiceDocument* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CWeb_CAtomPub_CIServiceDocument* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CWeb_CAtomPub_CIServiceDocument* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Workspaces)(__x_ABI_CWindows_CWeb_CAtomPub_CIServiceDocument* This,
        __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CWeb__CAtomPub__CWorkspace** value);

        END_INTERFACE
    } __x_ABI_CWindows_CWeb_CAtomPub_CIServiceDocumentVtbl;

    interface __x_ABI_CWindows_CWeb_CAtomPub_CIServiceDocument
    {
        CONST_VTBL struct __x_ABI_CWindows_CWeb_CAtomPub_CIServiceDocumentVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CWeb_CAtomPub_CIServiceDocument;
#endif /* !defined(____x_ABI_CWindows_CWeb_CAtomPub_CIServiceDocument_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CWeb_CAtomPub_CIWorkspace_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CWeb_CAtomPub_CIWorkspace_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CWeb_CAtomPub_CIWorkspaceVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CWeb_CAtomPub_CIWorkspace* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CWeb_CAtomPub_CIWorkspace* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CWeb_CAtomPub_CIWorkspace* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CWeb_CAtomPub_CIWorkspace* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CWeb_CAtomPub_CIWorkspace* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CWeb_CAtomPub_CIWorkspace* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Title)(__x_ABI_CWindows_CWeb_CAtomPub_CIWorkspace* This,
        __x_ABI_CWindows_CWeb_CSyndication_CISyndicationText** value);
    HRESULT (STDMETHODCALLTYPE* get_Collections)(__x_ABI_CWindows_CWeb_CAtomPub_CIWorkspace* This,
        __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CWeb__CAtomPub__CResourceCollection** value);

        END_INTERFACE
    } __x_ABI_CWindows_CWeb_CAtomPub_CIWorkspaceVtbl;

    interface __x_ABI_CWindows_CWeb_CAtomPub_CIWorkspace
    {
        CONST_VTBL struct __x_ABI_CWindows_CWeb_CAtomPub_CIWorkspaceVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CWeb_CAtomPub_CIWorkspace;
#endif /* !defined(____x_ABI_CWindows_CWeb_CAtomPub_CIWorkspace_INTERFACE_DEFINED__) */
    
