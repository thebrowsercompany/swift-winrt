// WARNING: Please don't edit this file. It was generated by Swift/WinRT v0.0.1

#pragma once
// Header files for imported files
#include <inspectable.h>
#include <EventToken.h>
#include <windowscontracts.h>
#include "Windows.Foundation.h"
#include "Windows.Devices.h"
#include "Windows.Devices.Adc.Provider.h"
// Importing Collections header
#include "Windows.Foundation.Collections.h"

/* Forward Declarations */
#ifndef ____x_ABI_CWindows_CDevices_CAdc_CIAdcChannel_FWD_DEFINED__
#define ____x_ABI_CWindows_CDevices_CAdc_CIAdcChannel_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CDevices_CAdc_CIAdcChannel __x_ABI_CWindows_CDevices_CAdc_CIAdcChannel;

#endif // ____x_ABI_CWindows_CDevices_CAdc_CIAdcChannel_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CDevices_CAdc_CIAdcController_FWD_DEFINED__
#define ____x_ABI_CWindows_CDevices_CAdc_CIAdcController_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CDevices_CAdc_CIAdcController __x_ABI_CWindows_CDevices_CAdc_CIAdcController;

#endif // ____x_ABI_CWindows_CDevices_CAdc_CIAdcController_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CDevices_CAdc_CIAdcControllerStatics_FWD_DEFINED__
#define ____x_ABI_CWindows_CDevices_CAdc_CIAdcControllerStatics_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CDevices_CAdc_CIAdcControllerStatics __x_ABI_CWindows_CDevices_CAdc_CIAdcControllerStatics;

#endif // ____x_ABI_CWindows_CDevices_CAdc_CIAdcControllerStatics_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CDevices_CAdc_CIAdcControllerStatics2_FWD_DEFINED__
#define ____x_ABI_CWindows_CDevices_CAdc_CIAdcControllerStatics2_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CDevices_CAdc_CIAdcControllerStatics2 __x_ABI_CWindows_CDevices_CAdc_CIAdcControllerStatics2;

#endif // ____x_ABI_CWindows_CDevices_CAdc_CIAdcControllerStatics2_FWD_DEFINED__

// Parameterized interface forward declarations (C)

// Collection interface definitions

typedef interface __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CDevices__CAdc__CAdcController __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CDevices__CAdc__CAdcController;

#if !defined(____x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CDevices__CAdc__CAdcController_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CDevices__CAdc__CAdcController_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CDevices__CAdc__CAdcController __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CDevices__CAdc__CAdcController;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CDevices__CAdc__CAdcController;

    typedef struct __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CDevices__CAdc__CAdcControllerVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CDevices__CAdc__CAdcController* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CDevices__CAdc__CAdcController* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CDevices__CAdc__CAdcController* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CDevices__CAdc__CAdcController* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CDevices__CAdc__CAdcController* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CDevices__CAdc__CAdcController* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* put_Completed)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CDevices__CAdc__CAdcController* This,
        __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CDevices__CAdc__CAdcController* handler);
    HRESULT (STDMETHODCALLTYPE* get_Completed)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CDevices__CAdc__CAdcController* This,
        __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CDevices__CAdc__CAdcController** result);
    HRESULT (STDMETHODCALLTYPE* GetResults)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CDevices__CAdc__CAdcController* This,
        __x_ABI_CWindows_CDevices_CAdc_CIAdcController** result);

        END_INTERFACE
    } __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CDevices__CAdc__CAdcControllerVtbl;

    interface __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CDevices__CAdc__CAdcController
    {
        CONST_VTBL struct __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CDevices__CAdc__CAdcControllerVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CDevices__CAdc__CAdcController_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CDevices__CAdc__CAdcController_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CDevices__CAdc__CAdcController_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CDevices__CAdc__CAdcController __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CDevices__CAdc__CAdcController;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CDevices__CAdc__CAdcController;

    typedef struct __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CDevices__CAdc__CAdcControllerVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CDevices__CAdc__CAdcController* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CDevices__CAdc__CAdcController* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CDevices__CAdc__CAdcController* This);
        HRESULT (STDMETHODCALLTYPE* Invoke)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CDevices__CAdc__CAdcController* This,
        __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CDevices__CAdc__CAdcController* asyncInfo,
        enum __x_ABI_CWindows_CFoundation_CAsyncStatus asyncStatus);

        END_INTERFACE
    } __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CDevices__CAdc__CAdcControllerVtbl;

    interface __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CDevices__CAdc__CAdcController
    {
        CONST_VTBL struct __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CDevices__CAdc__CAdcControllerVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CDevices__CAdc__CAdcController_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIIterator_1___x_ABI_CWindows__CDevices__CAdc__CAdcController_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIIterator_1___x_ABI_CWindows__CDevices__CAdc__CAdcController_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIIterator_1___x_ABI_CWindows__CDevices__CAdc__CAdcController __x_ABI_C__FIIterator_1___x_ABI_CWindows__CDevices__CAdc__CAdcController;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIIterator_1___x_ABI_CWindows__CDevices__CAdc__CAdcController;

    typedef struct __x_ABI_C__FIIterator_1___x_ABI_CWindows__CDevices__CAdc__CAdcControllerVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CDevices__CAdc__CAdcController* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CDevices__CAdc__CAdcController* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CDevices__CAdc__CAdcController* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CDevices__CAdc__CAdcController* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CDevices__CAdc__CAdcController* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CDevices__CAdc__CAdcController* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Current)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CDevices__CAdc__CAdcController* This,
        __x_ABI_CWindows_CDevices_CAdc_CIAdcController** result);
    HRESULT (STDMETHODCALLTYPE* get_HasCurrent)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CDevices__CAdc__CAdcController* This,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* MoveNext)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CDevices__CAdc__CAdcController* This,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CDevices__CAdc__CAdcController* This,
        UINT32 itemsLength,
        __x_ABI_CWindows_CDevices_CAdc_CIAdcController** items,
        UINT32* result);

        END_INTERFACE
    } __x_ABI_C__FIIterator_1___x_ABI_CWindows__CDevices__CAdc__CAdcControllerVtbl;

    interface __x_ABI_C__FIIterator_1___x_ABI_CWindows__CDevices__CAdc__CAdcController
    {
        CONST_VTBL struct __x_ABI_C__FIIterator_1___x_ABI_CWindows__CDevices__CAdc__CAdcControllerVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIIterator_1___x_ABI_CWindows__CDevices__CAdc__CAdcController_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIIterable_1___x_ABI_CWindows__CDevices__CAdc__CAdcController_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIIterable_1___x_ABI_CWindows__CDevices__CAdc__CAdcController_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIIterable_1___x_ABI_CWindows__CDevices__CAdc__CAdcController __x_ABI_C__FIIterable_1___x_ABI_CWindows__CDevices__CAdc__CAdcController;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIIterable_1___x_ABI_CWindows__CDevices__CAdc__CAdcController;

    typedef struct __x_ABI_C__FIIterable_1___x_ABI_CWindows__CDevices__CAdc__CAdcControllerVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CDevices__CAdc__CAdcController* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CDevices__CAdc__CAdcController* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CDevices__CAdc__CAdcController* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CDevices__CAdc__CAdcController* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CDevices__CAdc__CAdcController* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CDevices__CAdc__CAdcController* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* First)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CDevices__CAdc__CAdcController* This,
        __x_ABI_C__FIIterator_1___x_ABI_CWindows__CDevices__CAdc__CAdcController** result);

        END_INTERFACE
    } __x_ABI_C__FIIterable_1___x_ABI_CWindows__CDevices__CAdc__CAdcControllerVtbl;

    interface __x_ABI_C__FIIterable_1___x_ABI_CWindows__CDevices__CAdc__CAdcController
    {
        CONST_VTBL struct __x_ABI_C__FIIterable_1___x_ABI_CWindows__CDevices__CAdc__CAdcControllerVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIIterable_1___x_ABI_CWindows__CDevices__CAdc__CAdcController_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIVectorView_1___x_ABI_CWindows__CDevices__CAdc__CAdcController_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIVectorView_1___x_ABI_CWindows__CDevices__CAdc__CAdcController_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CDevices__CAdc__CAdcController __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CDevices__CAdc__CAdcController;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CDevices__CAdc__CAdcController;

    typedef struct __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CDevices__CAdc__CAdcControllerVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CDevices__CAdc__CAdcController* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CDevices__CAdc__CAdcController* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CDevices__CAdc__CAdcController* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CDevices__CAdc__CAdcController* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CDevices__CAdc__CAdcController* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CDevices__CAdc__CAdcController* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* GetAt)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CDevices__CAdc__CAdcController* This,
        UINT32 index,
        __x_ABI_CWindows_CDevices_CAdc_CIAdcController** result);
    HRESULT (STDMETHODCALLTYPE* get_Size)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CDevices__CAdc__CAdcController* This,
        UINT32* result);
    HRESULT (STDMETHODCALLTYPE* IndexOf)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CDevices__CAdc__CAdcController* This,
        __x_ABI_CWindows_CDevices_CAdc_CIAdcController* value,
        UINT32* index,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CDevices__CAdc__CAdcController* This,
        UINT32 startIndex,
        UINT32 itemsLength,
        __x_ABI_CWindows_CDevices_CAdc_CIAdcController** items,
        UINT32* result);

        END_INTERFACE
    } __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CDevices__CAdc__CAdcControllerVtbl;

    interface __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CDevices__CAdc__CAdcController
    {
        CONST_VTBL struct __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CDevices__CAdc__CAdcControllerVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIVectorView_1___x_ABI_CWindows__CDevices__CAdc__CAdcController_INTERFACE_DEFINED__
    
typedef interface __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CDevices__CAdc__CAdcController __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CDevices__CAdc__CAdcController;

#if !defined(____x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CDevices__CAdc__CAdcController_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CDevices__CAdc__CAdcController_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CDevices__CAdc__CAdcController __x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CDevices__CAdc__CAdcController;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CDevices__CAdc__CAdcController;

    typedef struct __x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CDevices__CAdc__CAdcControllerVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CDevices__CAdc__CAdcController* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CDevices__CAdc__CAdcController* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CDevices__CAdc__CAdcController* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CDevices__CAdc__CAdcController* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CDevices__CAdc__CAdcController* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CDevices__CAdc__CAdcController* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* put_Completed)(__x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CDevices__CAdc__CAdcController* This,
        __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CDevices__CAdc__CAdcController* handler);
    HRESULT (STDMETHODCALLTYPE* get_Completed)(__x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CDevices__CAdc__CAdcController* This,
        __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CDevices__CAdc__CAdcController** result);
    HRESULT (STDMETHODCALLTYPE* GetResults)(__x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CDevices__CAdc__CAdcController* This,
        __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CDevices__CAdc__CAdcController** result);

        END_INTERFACE
    } __x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CDevices__CAdc__CAdcControllerVtbl;

    interface __x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CDevices__CAdc__CAdcController
    {
        CONST_VTBL struct __x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CDevices__CAdc__CAdcControllerVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CDevices__CAdc__CAdcController_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CDevices__CAdc__CAdcController_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CDevices__CAdc__CAdcController_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CDevices__CAdc__CAdcController __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CDevices__CAdc__CAdcController;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CDevices__CAdc__CAdcController;

    typedef struct __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CDevices__CAdc__CAdcControllerVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CDevices__CAdc__CAdcController* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CDevices__CAdc__CAdcController* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CDevices__CAdc__CAdcController* This);
        HRESULT (STDMETHODCALLTYPE* Invoke)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CDevices__CAdc__CAdcController* This,
        __x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CDevices__CAdc__CAdcController* asyncInfo,
        enum __x_ABI_CWindows_CFoundation_CAsyncStatus asyncStatus);

        END_INTERFACE
    } __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CDevices__CAdc__CAdcControllerVtbl;

    interface __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CDevices__CAdc__CAdcController
    {
        CONST_VTBL struct __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CDevices__CAdc__CAdcControllerVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CDevices__CAdc__CAdcController_INTERFACE_DEFINED__
    
#ifndef ____x_ABI_CWindows_CDevices_CAdc_CProvider_CIAdcProvider_FWD_DEFINED__
#define ____x_ABI_CWindows_CDevices_CAdc_CProvider_CIAdcProvider_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CDevices_CAdc_CProvider_CIAdcProvider __x_ABI_CWindows_CDevices_CAdc_CProvider_CIAdcProvider;

#endif // ____x_ABI_CWindows_CDevices_CAdc_CProvider_CIAdcProvider_FWD_DEFINED__

typedef enum __x_ABI_CWindows_CFoundation_CAsyncStatus __x_ABI_CWindows_CFoundation_CAsyncStatus;

#ifndef ____x_ABI_CWindows_CFoundation_CIAsyncInfo_FWD_DEFINED__
#define ____x_ABI_CWindows_CFoundation_CIAsyncInfo_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CFoundation_CIAsyncInfo __x_ABI_CWindows_CFoundation_CIAsyncInfo;

#endif // ____x_ABI_CWindows_CFoundation_CIAsyncInfo_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CFoundation_CIClosable_FWD_DEFINED__
#define ____x_ABI_CWindows_CFoundation_CIClosable_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CFoundation_CIClosable __x_ABI_CWindows_CFoundation_CIClosable;

#endif // ____x_ABI_CWindows_CFoundation_CIClosable_FWD_DEFINED__

typedef enum __x_ABI_CWindows_CDevices_CAdc_CAdcChannelMode __x_ABI_CWindows_CDevices_CAdc_CAdcChannelMode;

enum __x_ABI_CWindows_CDevices_CAdc_CAdcChannelMode
    {
        __x_ABI_CWindows_CDevices_CAdc_CAdcChannelMode_SingleEnded = 0,
    __x_ABI_CWindows_CDevices_CAdc_CAdcChannelMode_Differential = 1,
};

#if !defined(____x_ABI_CWindows_CDevices_CAdc_CIAdcChannel_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CDevices_CAdc_CIAdcChannel_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CDevices_CAdc_CIAdcChannelVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CDevices_CAdc_CIAdcChannel* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CDevices_CAdc_CIAdcChannel* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CDevices_CAdc_CIAdcChannel* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CDevices_CAdc_CIAdcChannel* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CDevices_CAdc_CIAdcChannel* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CDevices_CAdc_CIAdcChannel* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Controller)(__x_ABI_CWindows_CDevices_CAdc_CIAdcChannel* This,
        __x_ABI_CWindows_CDevices_CAdc_CIAdcController** value);
    HRESULT (STDMETHODCALLTYPE* ReadValue)(__x_ABI_CWindows_CDevices_CAdc_CIAdcChannel* This,
        INT32* result);
    HRESULT (STDMETHODCALLTYPE* ReadRatio)(__x_ABI_CWindows_CDevices_CAdc_CIAdcChannel* This,
        DOUBLE* result);

        END_INTERFACE
    } __x_ABI_CWindows_CDevices_CAdc_CIAdcChannelVtbl;

    interface __x_ABI_CWindows_CDevices_CAdc_CIAdcChannel
    {
        CONST_VTBL struct __x_ABI_CWindows_CDevices_CAdc_CIAdcChannelVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CDevices_CAdc_CIAdcChannel;
#endif /* !defined(____x_ABI_CWindows_CDevices_CAdc_CIAdcChannel_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CDevices_CAdc_CIAdcController_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CDevices_CAdc_CIAdcController_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CDevices_CAdc_CIAdcControllerVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CDevices_CAdc_CIAdcController* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CDevices_CAdc_CIAdcController* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CDevices_CAdc_CIAdcController* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CDevices_CAdc_CIAdcController* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CDevices_CAdc_CIAdcController* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CDevices_CAdc_CIAdcController* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_ChannelCount)(__x_ABI_CWindows_CDevices_CAdc_CIAdcController* This,
        INT32* value);
    HRESULT (STDMETHODCALLTYPE* get_ResolutionInBits)(__x_ABI_CWindows_CDevices_CAdc_CIAdcController* This,
        INT32* value);
    HRESULT (STDMETHODCALLTYPE* get_MinValue)(__x_ABI_CWindows_CDevices_CAdc_CIAdcController* This,
        INT32* value);
    HRESULT (STDMETHODCALLTYPE* get_MaxValue)(__x_ABI_CWindows_CDevices_CAdc_CIAdcController* This,
        INT32* value);
    HRESULT (STDMETHODCALLTYPE* get_ChannelMode)(__x_ABI_CWindows_CDevices_CAdc_CIAdcController* This,
        enum __x_ABI_CWindows_CDevices_CAdc_CAdcChannelMode* value);
    HRESULT (STDMETHODCALLTYPE* put_ChannelMode)(__x_ABI_CWindows_CDevices_CAdc_CIAdcController* This,
        enum __x_ABI_CWindows_CDevices_CAdc_CAdcChannelMode value);
    HRESULT (STDMETHODCALLTYPE* IsChannelModeSupported)(__x_ABI_CWindows_CDevices_CAdc_CIAdcController* This,
        enum __x_ABI_CWindows_CDevices_CAdc_CAdcChannelMode channelMode,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* OpenChannel)(__x_ABI_CWindows_CDevices_CAdc_CIAdcController* This,
        INT32 channelNumber,
        __x_ABI_CWindows_CDevices_CAdc_CIAdcChannel** result);

        END_INTERFACE
    } __x_ABI_CWindows_CDevices_CAdc_CIAdcControllerVtbl;

    interface __x_ABI_CWindows_CDevices_CAdc_CIAdcController
    {
        CONST_VTBL struct __x_ABI_CWindows_CDevices_CAdc_CIAdcControllerVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CDevices_CAdc_CIAdcController;
#endif /* !defined(____x_ABI_CWindows_CDevices_CAdc_CIAdcController_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CDevices_CAdc_CIAdcControllerStatics_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CDevices_CAdc_CIAdcControllerStatics_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CDevices_CAdc_CIAdcControllerStaticsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CDevices_CAdc_CIAdcControllerStatics* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CDevices_CAdc_CIAdcControllerStatics* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CDevices_CAdc_CIAdcControllerStatics* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CDevices_CAdc_CIAdcControllerStatics* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CDevices_CAdc_CIAdcControllerStatics* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CDevices_CAdc_CIAdcControllerStatics* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* GetControllersAsync)(__x_ABI_CWindows_CDevices_CAdc_CIAdcControllerStatics* This,
        __x_ABI_CWindows_CDevices_CAdc_CProvider_CIAdcProvider* provider,
        __x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CDevices__CAdc__CAdcController** operation);

        END_INTERFACE
    } __x_ABI_CWindows_CDevices_CAdc_CIAdcControllerStaticsVtbl;

    interface __x_ABI_CWindows_CDevices_CAdc_CIAdcControllerStatics
    {
        CONST_VTBL struct __x_ABI_CWindows_CDevices_CAdc_CIAdcControllerStaticsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CDevices_CAdc_CIAdcControllerStatics;
#endif /* !defined(____x_ABI_CWindows_CDevices_CAdc_CIAdcControllerStatics_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CDevices_CAdc_CIAdcControllerStatics2_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CDevices_CAdc_CIAdcControllerStatics2_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CDevices_CAdc_CIAdcControllerStatics2Vtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CDevices_CAdc_CIAdcControllerStatics2* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CDevices_CAdc_CIAdcControllerStatics2* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CDevices_CAdc_CIAdcControllerStatics2* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CDevices_CAdc_CIAdcControllerStatics2* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CDevices_CAdc_CIAdcControllerStatics2* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CDevices_CAdc_CIAdcControllerStatics2* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* GetDefaultAsync)(__x_ABI_CWindows_CDevices_CAdc_CIAdcControllerStatics2* This,
        __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CDevices__CAdc__CAdcController** operation);

        END_INTERFACE
    } __x_ABI_CWindows_CDevices_CAdc_CIAdcControllerStatics2Vtbl;

    interface __x_ABI_CWindows_CDevices_CAdc_CIAdcControllerStatics2
    {
        CONST_VTBL struct __x_ABI_CWindows_CDevices_CAdc_CIAdcControllerStatics2Vtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CDevices_CAdc_CIAdcControllerStatics2;
#endif /* !defined(____x_ABI_CWindows_CDevices_CAdc_CIAdcControllerStatics2_INTERFACE_DEFINED__) */
    
