// WARNING: Please don't edit this file. It was generated by Swift/WinRT v0.0.1

#pragma once
// Header files for imported files
#include <inspectable.h>
#include <EventToken.h>
#include <windowscontracts.h>
#include "Windows.Foundation.h"
#include "Windows.UI.h"
#include "Windows.UI.Composition.h"
#include "Windows.UI.Xaml.h"
#include "Windows.UI.Xaml.Controls.h"
#include "Windows.UI.Xaml.Controls.Primitives.h"
// Importing Collections header
#include "Windows.Foundation.Collections.h"

/* Forward Declarations */
#ifndef ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIAddDeleteThemeTransition_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIAddDeleteThemeTransition_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIAddDeleteThemeTransition __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIAddDeleteThemeTransition;

#endif // ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIAddDeleteThemeTransition_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIBackEase_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIBackEase_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIBackEase __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIBackEase;

#endif // ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIBackEase_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIBackEaseStatics_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIBackEaseStatics_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIBackEaseStatics __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIBackEaseStatics;

#endif // ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIBackEaseStatics_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIBasicConnectedAnimationConfiguration_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIBasicConnectedAnimationConfiguration_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIBasicConnectedAnimationConfiguration __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIBasicConnectedAnimationConfiguration;

#endif // ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIBasicConnectedAnimationConfiguration_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIBasicConnectedAnimationConfigurationFactory_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIBasicConnectedAnimationConfigurationFactory_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIBasicConnectedAnimationConfigurationFactory __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIBasicConnectedAnimationConfigurationFactory;

#endif // ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIBasicConnectedAnimationConfigurationFactory_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIBeginStoryboard_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIBeginStoryboard_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIBeginStoryboard __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIBeginStoryboard;

#endif // ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIBeginStoryboard_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIBeginStoryboardStatics_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIBeginStoryboardStatics_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIBeginStoryboardStatics __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIBeginStoryboardStatics;

#endif // ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIBeginStoryboardStatics_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIBounceEase_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIBounceEase_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIBounceEase __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIBounceEase;

#endif // ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIBounceEase_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIBounceEaseStatics_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIBounceEaseStatics_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIBounceEaseStatics __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIBounceEaseStatics;

#endif // ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIBounceEaseStatics_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CICircleEase_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CICircleEase_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CICircleEase __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CICircleEase;

#endif // ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CICircleEase_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIColorAnimation_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIColorAnimation_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIColorAnimation __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIColorAnimation;

#endif // ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIColorAnimation_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIColorAnimationStatics_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIColorAnimationStatics_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIColorAnimationStatics __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIColorAnimationStatics;

#endif // ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIColorAnimationStatics_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIColorAnimationUsingKeyFrames_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIColorAnimationUsingKeyFrames_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIColorAnimationUsingKeyFrames __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIColorAnimationUsingKeyFrames;

#endif // ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIColorAnimationUsingKeyFrames_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIColorAnimationUsingKeyFramesStatics_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIColorAnimationUsingKeyFramesStatics_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIColorAnimationUsingKeyFramesStatics __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIColorAnimationUsingKeyFramesStatics;

#endif // ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIColorAnimationUsingKeyFramesStatics_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIColorKeyFrame_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIColorKeyFrame_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIColorKeyFrame __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIColorKeyFrame;

#endif // ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIColorKeyFrame_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIColorKeyFrameFactory_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIColorKeyFrameFactory_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIColorKeyFrameFactory __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIColorKeyFrameFactory;

#endif // ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIColorKeyFrameFactory_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIColorKeyFrameStatics_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIColorKeyFrameStatics_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIColorKeyFrameStatics __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIColorKeyFrameStatics;

#endif // ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIColorKeyFrameStatics_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CICommonNavigationTransitionInfo_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CICommonNavigationTransitionInfo_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CICommonNavigationTransitionInfo __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CICommonNavigationTransitionInfo;

#endif // ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CICommonNavigationTransitionInfo_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CICommonNavigationTransitionInfoStatics_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CICommonNavigationTransitionInfoStatics_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CICommonNavigationTransitionInfoStatics __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CICommonNavigationTransitionInfoStatics;

#endif // ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CICommonNavigationTransitionInfoStatics_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIConnectedAnimation_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIConnectedAnimation_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIConnectedAnimation __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIConnectedAnimation;

#endif // ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIConnectedAnimation_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIConnectedAnimation2_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIConnectedAnimation2_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIConnectedAnimation2 __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIConnectedAnimation2;

#endif // ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIConnectedAnimation2_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIConnectedAnimation3_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIConnectedAnimation3_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIConnectedAnimation3 __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIConnectedAnimation3;

#endif // ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIConnectedAnimation3_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIConnectedAnimationConfiguration_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIConnectedAnimationConfiguration_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIConnectedAnimationConfiguration __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIConnectedAnimationConfiguration;

#endif // ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIConnectedAnimationConfiguration_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIConnectedAnimationConfigurationFactory_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIConnectedAnimationConfigurationFactory_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIConnectedAnimationConfigurationFactory __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIConnectedAnimationConfigurationFactory;

#endif // ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIConnectedAnimationConfigurationFactory_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIConnectedAnimationService_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIConnectedAnimationService_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIConnectedAnimationService __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIConnectedAnimationService;

#endif // ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIConnectedAnimationService_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIConnectedAnimationServiceStatics_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIConnectedAnimationServiceStatics_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIConnectedAnimationServiceStatics __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIConnectedAnimationServiceStatics;

#endif // ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIConnectedAnimationServiceStatics_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIContentThemeTransition_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIContentThemeTransition_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIContentThemeTransition __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIContentThemeTransition;

#endif // ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIContentThemeTransition_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIContentThemeTransitionStatics_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIContentThemeTransitionStatics_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIContentThemeTransitionStatics __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIContentThemeTransitionStatics;

#endif // ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIContentThemeTransitionStatics_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIContinuumNavigationTransitionInfo_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIContinuumNavigationTransitionInfo_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIContinuumNavigationTransitionInfo __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIContinuumNavigationTransitionInfo;

#endif // ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIContinuumNavigationTransitionInfo_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIContinuumNavigationTransitionInfoStatics_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIContinuumNavigationTransitionInfoStatics_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIContinuumNavigationTransitionInfoStatics __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIContinuumNavigationTransitionInfoStatics;

#endif // ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIContinuumNavigationTransitionInfoStatics_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CICubicEase_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CICubicEase_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CICubicEase __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CICubicEase;

#endif // ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CICubicEase_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDirectConnectedAnimationConfiguration_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDirectConnectedAnimationConfiguration_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDirectConnectedAnimationConfiguration __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDirectConnectedAnimationConfiguration;

#endif // ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDirectConnectedAnimationConfiguration_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDirectConnectedAnimationConfigurationFactory_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDirectConnectedAnimationConfigurationFactory_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDirectConnectedAnimationConfigurationFactory __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDirectConnectedAnimationConfigurationFactory;

#endif // ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDirectConnectedAnimationConfigurationFactory_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDiscreteColorKeyFrame_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDiscreteColorKeyFrame_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDiscreteColorKeyFrame __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDiscreteColorKeyFrame;

#endif // ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDiscreteColorKeyFrame_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDiscreteDoubleKeyFrame_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDiscreteDoubleKeyFrame_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDiscreteDoubleKeyFrame __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDiscreteDoubleKeyFrame;

#endif // ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDiscreteDoubleKeyFrame_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDiscreteObjectKeyFrame_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDiscreteObjectKeyFrame_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDiscreteObjectKeyFrame __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDiscreteObjectKeyFrame;

#endif // ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDiscreteObjectKeyFrame_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDiscretePointKeyFrame_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDiscretePointKeyFrame_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDiscretePointKeyFrame __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDiscretePointKeyFrame;

#endif // ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDiscretePointKeyFrame_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDoubleAnimation_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDoubleAnimation_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDoubleAnimation __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDoubleAnimation;

#endif // ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDoubleAnimation_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDoubleAnimationStatics_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDoubleAnimationStatics_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDoubleAnimationStatics __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDoubleAnimationStatics;

#endif // ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDoubleAnimationStatics_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDoubleAnimationUsingKeyFrames_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDoubleAnimationUsingKeyFrames_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDoubleAnimationUsingKeyFrames __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDoubleAnimationUsingKeyFrames;

#endif // ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDoubleAnimationUsingKeyFrames_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDoubleAnimationUsingKeyFramesStatics_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDoubleAnimationUsingKeyFramesStatics_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDoubleAnimationUsingKeyFramesStatics __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDoubleAnimationUsingKeyFramesStatics;

#endif // ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDoubleAnimationUsingKeyFramesStatics_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDoubleKeyFrame_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDoubleKeyFrame_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDoubleKeyFrame __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDoubleKeyFrame;

#endif // ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDoubleKeyFrame_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDoubleKeyFrameFactory_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDoubleKeyFrameFactory_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDoubleKeyFrameFactory __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDoubleKeyFrameFactory;

#endif // ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDoubleKeyFrameFactory_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDoubleKeyFrameStatics_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDoubleKeyFrameStatics_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDoubleKeyFrameStatics __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDoubleKeyFrameStatics;

#endif // ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDoubleKeyFrameStatics_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDragItemThemeAnimation_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDragItemThemeAnimation_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDragItemThemeAnimation __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDragItemThemeAnimation;

#endif // ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDragItemThemeAnimation_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDragItemThemeAnimationStatics_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDragItemThemeAnimationStatics_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDragItemThemeAnimationStatics __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDragItemThemeAnimationStatics;

#endif // ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDragItemThemeAnimationStatics_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDragOverThemeAnimation_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDragOverThemeAnimation_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDragOverThemeAnimation __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDragOverThemeAnimation;

#endif // ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDragOverThemeAnimation_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDragOverThemeAnimationStatics_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDragOverThemeAnimationStatics_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDragOverThemeAnimationStatics __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDragOverThemeAnimationStatics;

#endif // ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDragOverThemeAnimationStatics_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDrillInNavigationTransitionInfo_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDrillInNavigationTransitionInfo_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDrillInNavigationTransitionInfo __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDrillInNavigationTransitionInfo;

#endif // ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDrillInNavigationTransitionInfo_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDrillInThemeAnimation_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDrillInThemeAnimation_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDrillInThemeAnimation __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDrillInThemeAnimation;

#endif // ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDrillInThemeAnimation_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDrillInThemeAnimationStatics_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDrillInThemeAnimationStatics_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDrillInThemeAnimationStatics __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDrillInThemeAnimationStatics;

#endif // ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDrillInThemeAnimationStatics_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDrillOutThemeAnimation_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDrillOutThemeAnimation_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDrillOutThemeAnimation __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDrillOutThemeAnimation;

#endif // ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDrillOutThemeAnimation_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDrillOutThemeAnimationStatics_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDrillOutThemeAnimationStatics_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDrillOutThemeAnimationStatics __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDrillOutThemeAnimationStatics;

#endif // ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDrillOutThemeAnimationStatics_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDropTargetItemThemeAnimation_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDropTargetItemThemeAnimation_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDropTargetItemThemeAnimation __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDropTargetItemThemeAnimation;

#endif // ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDropTargetItemThemeAnimation_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDropTargetItemThemeAnimationStatics_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDropTargetItemThemeAnimationStatics_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDropTargetItemThemeAnimationStatics __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDropTargetItemThemeAnimationStatics;

#endif // ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDropTargetItemThemeAnimationStatics_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIEasingColorKeyFrame_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIEasingColorKeyFrame_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIEasingColorKeyFrame __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIEasingColorKeyFrame;

#endif // ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIEasingColorKeyFrame_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIEasingColorKeyFrameStatics_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIEasingColorKeyFrameStatics_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIEasingColorKeyFrameStatics __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIEasingColorKeyFrameStatics;

#endif // ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIEasingColorKeyFrameStatics_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIEasingDoubleKeyFrame_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIEasingDoubleKeyFrame_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIEasingDoubleKeyFrame __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIEasingDoubleKeyFrame;

#endif // ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIEasingDoubleKeyFrame_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIEasingDoubleKeyFrameStatics_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIEasingDoubleKeyFrameStatics_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIEasingDoubleKeyFrameStatics __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIEasingDoubleKeyFrameStatics;

#endif // ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIEasingDoubleKeyFrameStatics_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIEasingFunctionBase_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIEasingFunctionBase_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIEasingFunctionBase __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIEasingFunctionBase;

#endif // ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIEasingFunctionBase_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIEasingFunctionBaseFactory_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIEasingFunctionBaseFactory_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIEasingFunctionBaseFactory __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIEasingFunctionBaseFactory;

#endif // ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIEasingFunctionBaseFactory_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIEasingFunctionBaseStatics_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIEasingFunctionBaseStatics_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIEasingFunctionBaseStatics __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIEasingFunctionBaseStatics;

#endif // ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIEasingFunctionBaseStatics_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIEasingPointKeyFrame_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIEasingPointKeyFrame_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIEasingPointKeyFrame __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIEasingPointKeyFrame;

#endif // ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIEasingPointKeyFrame_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIEasingPointKeyFrameStatics_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIEasingPointKeyFrameStatics_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIEasingPointKeyFrameStatics __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIEasingPointKeyFrameStatics;

#endif // ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIEasingPointKeyFrameStatics_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIEdgeUIThemeTransition_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIEdgeUIThemeTransition_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIEdgeUIThemeTransition __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIEdgeUIThemeTransition;

#endif // ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIEdgeUIThemeTransition_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIEdgeUIThemeTransitionStatics_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIEdgeUIThemeTransitionStatics_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIEdgeUIThemeTransitionStatics __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIEdgeUIThemeTransitionStatics;

#endif // ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIEdgeUIThemeTransitionStatics_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIElasticEase_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIElasticEase_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIElasticEase __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIElasticEase;

#endif // ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIElasticEase_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIElasticEaseStatics_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIElasticEaseStatics_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIElasticEaseStatics __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIElasticEaseStatics;

#endif // ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIElasticEaseStatics_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIEntranceNavigationTransitionInfo_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIEntranceNavigationTransitionInfo_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIEntranceNavigationTransitionInfo __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIEntranceNavigationTransitionInfo;

#endif // ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIEntranceNavigationTransitionInfo_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIEntranceNavigationTransitionInfoStatics_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIEntranceNavigationTransitionInfoStatics_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIEntranceNavigationTransitionInfoStatics __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIEntranceNavigationTransitionInfoStatics;

#endif // ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIEntranceNavigationTransitionInfoStatics_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIEntranceThemeTransition_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIEntranceThemeTransition_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIEntranceThemeTransition __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIEntranceThemeTransition;

#endif // ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIEntranceThemeTransition_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIEntranceThemeTransitionStatics_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIEntranceThemeTransitionStatics_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIEntranceThemeTransitionStatics __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIEntranceThemeTransitionStatics;

#endif // ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIEntranceThemeTransitionStatics_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIExponentialEase_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIExponentialEase_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIExponentialEase __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIExponentialEase;

#endif // ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIExponentialEase_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIExponentialEaseStatics_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIExponentialEaseStatics_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIExponentialEaseStatics __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIExponentialEaseStatics;

#endif // ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIExponentialEaseStatics_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIFadeInThemeAnimation_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIFadeInThemeAnimation_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIFadeInThemeAnimation __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIFadeInThemeAnimation;

#endif // ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIFadeInThemeAnimation_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIFadeInThemeAnimationStatics_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIFadeInThemeAnimationStatics_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIFadeInThemeAnimationStatics __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIFadeInThemeAnimationStatics;

#endif // ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIFadeInThemeAnimationStatics_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIFadeOutThemeAnimation_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIFadeOutThemeAnimation_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIFadeOutThemeAnimation __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIFadeOutThemeAnimation;

#endif // ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIFadeOutThemeAnimation_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIFadeOutThemeAnimationStatics_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIFadeOutThemeAnimationStatics_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIFadeOutThemeAnimationStatics __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIFadeOutThemeAnimationStatics;

#endif // ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIFadeOutThemeAnimationStatics_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIGravityConnectedAnimationConfiguration_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIGravityConnectedAnimationConfiguration_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIGravityConnectedAnimationConfiguration __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIGravityConnectedAnimationConfiguration;

#endif // ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIGravityConnectedAnimationConfiguration_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIGravityConnectedAnimationConfiguration2_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIGravityConnectedAnimationConfiguration2_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIGravityConnectedAnimationConfiguration2 __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIGravityConnectedAnimationConfiguration2;

#endif // ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIGravityConnectedAnimationConfiguration2_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIGravityConnectedAnimationConfigurationFactory_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIGravityConnectedAnimationConfigurationFactory_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIGravityConnectedAnimationConfigurationFactory __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIGravityConnectedAnimationConfigurationFactory;

#endif // ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIGravityConnectedAnimationConfigurationFactory_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIKeySpline_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIKeySpline_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIKeySpline __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIKeySpline;

#endif // ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIKeySpline_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIKeyTimeHelper_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIKeyTimeHelper_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIKeyTimeHelper __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIKeyTimeHelper;

#endif // ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIKeyTimeHelper_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIKeyTimeHelperStatics_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIKeyTimeHelperStatics_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIKeyTimeHelperStatics __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIKeyTimeHelperStatics;

#endif // ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIKeyTimeHelperStatics_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CILinearColorKeyFrame_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CILinearColorKeyFrame_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CILinearColorKeyFrame __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CILinearColorKeyFrame;

#endif // ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CILinearColorKeyFrame_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CILinearDoubleKeyFrame_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CILinearDoubleKeyFrame_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CILinearDoubleKeyFrame __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CILinearDoubleKeyFrame;

#endif // ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CILinearDoubleKeyFrame_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CILinearPointKeyFrame_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CILinearPointKeyFrame_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CILinearPointKeyFrame __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CILinearPointKeyFrame;

#endif // ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CILinearPointKeyFrame_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CINavigationThemeTransition_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CINavigationThemeTransition_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CINavigationThemeTransition __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CINavigationThemeTransition;

#endif // ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CINavigationThemeTransition_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CINavigationThemeTransitionStatics_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CINavigationThemeTransitionStatics_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CINavigationThemeTransitionStatics __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CINavigationThemeTransitionStatics;

#endif // ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CINavigationThemeTransitionStatics_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CINavigationTransitionInfo_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CINavigationTransitionInfo_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CINavigationTransitionInfo __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CINavigationTransitionInfo;

#endif // ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CINavigationTransitionInfo_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CINavigationTransitionInfoFactory_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CINavigationTransitionInfoFactory_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CINavigationTransitionInfoFactory __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CINavigationTransitionInfoFactory;

#endif // ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CINavigationTransitionInfoFactory_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CINavigationTransitionInfoOverrides_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CINavigationTransitionInfoOverrides_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CINavigationTransitionInfoOverrides __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CINavigationTransitionInfoOverrides;

#endif // ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CINavigationTransitionInfoOverrides_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIObjectAnimationUsingKeyFrames_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIObjectAnimationUsingKeyFrames_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIObjectAnimationUsingKeyFrames __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIObjectAnimationUsingKeyFrames;

#endif // ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIObjectAnimationUsingKeyFrames_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIObjectAnimationUsingKeyFramesStatics_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIObjectAnimationUsingKeyFramesStatics_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIObjectAnimationUsingKeyFramesStatics __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIObjectAnimationUsingKeyFramesStatics;

#endif // ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIObjectAnimationUsingKeyFramesStatics_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIObjectKeyFrame_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIObjectKeyFrame_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIObjectKeyFrame __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIObjectKeyFrame;

#endif // ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIObjectKeyFrame_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIObjectKeyFrameFactory_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIObjectKeyFrameFactory_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIObjectKeyFrameFactory __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIObjectKeyFrameFactory;

#endif // ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIObjectKeyFrameFactory_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIObjectKeyFrameStatics_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIObjectKeyFrameStatics_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIObjectKeyFrameStatics __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIObjectKeyFrameStatics;

#endif // ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIObjectKeyFrameStatics_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPaneThemeTransition_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPaneThemeTransition_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPaneThemeTransition __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPaneThemeTransition;

#endif // ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPaneThemeTransition_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPaneThemeTransitionStatics_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPaneThemeTransitionStatics_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPaneThemeTransitionStatics __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPaneThemeTransitionStatics;

#endif // ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPaneThemeTransitionStatics_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPointAnimation_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPointAnimation_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPointAnimation __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPointAnimation;

#endif // ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPointAnimation_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPointAnimationStatics_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPointAnimationStatics_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPointAnimationStatics __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPointAnimationStatics;

#endif // ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPointAnimationStatics_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPointAnimationUsingKeyFrames_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPointAnimationUsingKeyFrames_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPointAnimationUsingKeyFrames __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPointAnimationUsingKeyFrames;

#endif // ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPointAnimationUsingKeyFrames_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPointAnimationUsingKeyFramesStatics_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPointAnimationUsingKeyFramesStatics_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPointAnimationUsingKeyFramesStatics __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPointAnimationUsingKeyFramesStatics;

#endif // ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPointAnimationUsingKeyFramesStatics_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPointKeyFrame_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPointKeyFrame_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPointKeyFrame __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPointKeyFrame;

#endif // ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPointKeyFrame_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPointKeyFrameFactory_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPointKeyFrameFactory_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPointKeyFrameFactory __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPointKeyFrameFactory;

#endif // ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPointKeyFrameFactory_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPointKeyFrameStatics_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPointKeyFrameStatics_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPointKeyFrameStatics __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPointKeyFrameStatics;

#endif // ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPointKeyFrameStatics_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPointerDownThemeAnimation_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPointerDownThemeAnimation_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPointerDownThemeAnimation __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPointerDownThemeAnimation;

#endif // ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPointerDownThemeAnimation_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPointerDownThemeAnimationStatics_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPointerDownThemeAnimationStatics_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPointerDownThemeAnimationStatics __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPointerDownThemeAnimationStatics;

#endif // ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPointerDownThemeAnimationStatics_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPointerUpThemeAnimation_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPointerUpThemeAnimation_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPointerUpThemeAnimation __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPointerUpThemeAnimation;

#endif // ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPointerUpThemeAnimation_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPointerUpThemeAnimationStatics_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPointerUpThemeAnimationStatics_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPointerUpThemeAnimationStatics __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPointerUpThemeAnimationStatics;

#endif // ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPointerUpThemeAnimationStatics_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPopInThemeAnimation_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPopInThemeAnimation_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPopInThemeAnimation __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPopInThemeAnimation;

#endif // ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPopInThemeAnimation_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPopInThemeAnimationStatics_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPopInThemeAnimationStatics_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPopInThemeAnimationStatics __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPopInThemeAnimationStatics;

#endif // ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPopInThemeAnimationStatics_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPopOutThemeAnimation_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPopOutThemeAnimation_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPopOutThemeAnimation __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPopOutThemeAnimation;

#endif // ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPopOutThemeAnimation_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPopOutThemeAnimationStatics_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPopOutThemeAnimationStatics_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPopOutThemeAnimationStatics __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPopOutThemeAnimationStatics;

#endif // ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPopOutThemeAnimationStatics_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPopupThemeTransition_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPopupThemeTransition_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPopupThemeTransition __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPopupThemeTransition;

#endif // ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPopupThemeTransition_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPopupThemeTransitionStatics_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPopupThemeTransitionStatics_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPopupThemeTransitionStatics __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPopupThemeTransitionStatics;

#endif // ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPopupThemeTransitionStatics_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPowerEase_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPowerEase_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPowerEase __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPowerEase;

#endif // ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPowerEase_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPowerEaseStatics_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPowerEaseStatics_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPowerEaseStatics __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPowerEaseStatics;

#endif // ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPowerEaseStatics_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIQuadraticEase_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIQuadraticEase_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIQuadraticEase __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIQuadraticEase;

#endif // ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIQuadraticEase_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIQuarticEase_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIQuarticEase_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIQuarticEase __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIQuarticEase;

#endif // ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIQuarticEase_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIQuinticEase_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIQuinticEase_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIQuinticEase __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIQuinticEase;

#endif // ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIQuinticEase_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIReorderThemeTransition_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIReorderThemeTransition_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIReorderThemeTransition __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIReorderThemeTransition;

#endif // ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIReorderThemeTransition_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIRepeatBehaviorHelper_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIRepeatBehaviorHelper_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIRepeatBehaviorHelper __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIRepeatBehaviorHelper;

#endif // ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIRepeatBehaviorHelper_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIRepeatBehaviorHelperStatics_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIRepeatBehaviorHelperStatics_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIRepeatBehaviorHelperStatics __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIRepeatBehaviorHelperStatics;

#endif // ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIRepeatBehaviorHelperStatics_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIRepositionThemeAnimation_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIRepositionThemeAnimation_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIRepositionThemeAnimation __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIRepositionThemeAnimation;

#endif // ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIRepositionThemeAnimation_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIRepositionThemeAnimationStatics_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIRepositionThemeAnimationStatics_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIRepositionThemeAnimationStatics __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIRepositionThemeAnimationStatics;

#endif // ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIRepositionThemeAnimationStatics_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIRepositionThemeTransition_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIRepositionThemeTransition_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIRepositionThemeTransition __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIRepositionThemeTransition;

#endif // ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIRepositionThemeTransition_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIRepositionThemeTransition2_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIRepositionThemeTransition2_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIRepositionThemeTransition2 __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIRepositionThemeTransition2;

#endif // ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIRepositionThemeTransition2_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIRepositionThemeTransitionStatics2_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIRepositionThemeTransitionStatics2_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIRepositionThemeTransitionStatics2 __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIRepositionThemeTransitionStatics2;

#endif // ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIRepositionThemeTransitionStatics2_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISineEase_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISineEase_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISineEase __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISineEase;

#endif // ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISineEase_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISlideNavigationTransitionInfo_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISlideNavigationTransitionInfo_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISlideNavigationTransitionInfo __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISlideNavigationTransitionInfo;

#endif // ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISlideNavigationTransitionInfo_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISlideNavigationTransitionInfo2_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISlideNavigationTransitionInfo2_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISlideNavigationTransitionInfo2 __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISlideNavigationTransitionInfo2;

#endif // ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISlideNavigationTransitionInfo2_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISlideNavigationTransitionInfoStatics2_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISlideNavigationTransitionInfoStatics2_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISlideNavigationTransitionInfoStatics2 __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISlideNavigationTransitionInfoStatics2;

#endif // ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISlideNavigationTransitionInfoStatics2_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISplineColorKeyFrame_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISplineColorKeyFrame_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISplineColorKeyFrame __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISplineColorKeyFrame;

#endif // ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISplineColorKeyFrame_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISplineColorKeyFrameStatics_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISplineColorKeyFrameStatics_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISplineColorKeyFrameStatics __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISplineColorKeyFrameStatics;

#endif // ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISplineColorKeyFrameStatics_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISplineDoubleKeyFrame_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISplineDoubleKeyFrame_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISplineDoubleKeyFrame __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISplineDoubleKeyFrame;

#endif // ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISplineDoubleKeyFrame_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISplineDoubleKeyFrameStatics_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISplineDoubleKeyFrameStatics_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISplineDoubleKeyFrameStatics __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISplineDoubleKeyFrameStatics;

#endif // ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISplineDoubleKeyFrameStatics_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISplinePointKeyFrame_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISplinePointKeyFrame_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISplinePointKeyFrame __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISplinePointKeyFrame;

#endif // ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISplinePointKeyFrame_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISplinePointKeyFrameStatics_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISplinePointKeyFrameStatics_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISplinePointKeyFrameStatics __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISplinePointKeyFrameStatics;

#endif // ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISplinePointKeyFrameStatics_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISplitCloseThemeAnimation_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISplitCloseThemeAnimation_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISplitCloseThemeAnimation __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISplitCloseThemeAnimation;

#endif // ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISplitCloseThemeAnimation_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISplitCloseThemeAnimationStatics_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISplitCloseThemeAnimationStatics_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISplitCloseThemeAnimationStatics __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISplitCloseThemeAnimationStatics;

#endif // ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISplitCloseThemeAnimationStatics_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISplitOpenThemeAnimation_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISplitOpenThemeAnimation_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISplitOpenThemeAnimation __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISplitOpenThemeAnimation;

#endif // ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISplitOpenThemeAnimation_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISplitOpenThemeAnimationStatics_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISplitOpenThemeAnimationStatics_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISplitOpenThemeAnimationStatics __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISplitOpenThemeAnimationStatics;

#endif // ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISplitOpenThemeAnimationStatics_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIStoryboard_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIStoryboard_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIStoryboard __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIStoryboard;

#endif // ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIStoryboard_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIStoryboardStatics_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIStoryboardStatics_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIStoryboardStatics __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIStoryboardStatics;

#endif // ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIStoryboardStatics_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISuppressNavigationTransitionInfo_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISuppressNavigationTransitionInfo_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISuppressNavigationTransitionInfo __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISuppressNavigationTransitionInfo;

#endif // ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISuppressNavigationTransitionInfo_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISwipeBackThemeAnimation_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISwipeBackThemeAnimation_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISwipeBackThemeAnimation __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISwipeBackThemeAnimation;

#endif // ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISwipeBackThemeAnimation_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISwipeBackThemeAnimationStatics_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISwipeBackThemeAnimationStatics_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISwipeBackThemeAnimationStatics __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISwipeBackThemeAnimationStatics;

#endif // ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISwipeBackThemeAnimationStatics_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISwipeHintThemeAnimation_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISwipeHintThemeAnimation_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISwipeHintThemeAnimation __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISwipeHintThemeAnimation;

#endif // ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISwipeHintThemeAnimation_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISwipeHintThemeAnimationStatics_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISwipeHintThemeAnimationStatics_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISwipeHintThemeAnimationStatics __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISwipeHintThemeAnimationStatics;

#endif // ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISwipeHintThemeAnimationStatics_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CITimeline_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CITimeline_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CITimeline __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CITimeline;

#endif // ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CITimeline_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CITimelineFactory_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CITimelineFactory_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CITimelineFactory __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CITimelineFactory;

#endif // ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CITimelineFactory_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CITimelineStatics_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CITimelineStatics_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CITimelineStatics __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CITimelineStatics;

#endif // ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CITimelineStatics_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CITransition_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CITransition_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CITransition __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CITransition;

#endif // ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CITransition_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CITransitionFactory_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CITransitionFactory_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CITransitionFactory __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CITransitionFactory;

#endif // ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CITransitionFactory_FWD_DEFINED__

// Parameterized interface forward declarations (C)

// Collection interface definitions

#if !defined(____x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CXaml__CMedia__CAnimation__CColorKeyFrame_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CXaml__CMedia__CAnimation__CColorKeyFrame_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CXaml__CMedia__CAnimation__CColorKeyFrame __x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CXaml__CMedia__CAnimation__CColorKeyFrame;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CXaml__CMedia__CAnimation__CColorKeyFrame;

    typedef struct __x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CXaml__CMedia__CAnimation__CColorKeyFrameVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CXaml__CMedia__CAnimation__CColorKeyFrame* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CXaml__CMedia__CAnimation__CColorKeyFrame* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CXaml__CMedia__CAnimation__CColorKeyFrame* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CXaml__CMedia__CAnimation__CColorKeyFrame* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CXaml__CMedia__CAnimation__CColorKeyFrame* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CXaml__CMedia__CAnimation__CColorKeyFrame* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Current)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CXaml__CMedia__CAnimation__CColorKeyFrame* This,
        __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIColorKeyFrame** result);
    HRESULT (STDMETHODCALLTYPE* get_HasCurrent)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CXaml__CMedia__CAnimation__CColorKeyFrame* This,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* MoveNext)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CXaml__CMedia__CAnimation__CColorKeyFrame* This,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CXaml__CMedia__CAnimation__CColorKeyFrame* This,
        UINT32 itemsLength,
        __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIColorKeyFrame** items,
        UINT32* result);

        END_INTERFACE
    } __x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CXaml__CMedia__CAnimation__CColorKeyFrameVtbl;

    interface __x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CXaml__CMedia__CAnimation__CColorKeyFrame
    {
        CONST_VTBL struct __x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CXaml__CMedia__CAnimation__CColorKeyFrameVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CXaml__CMedia__CAnimation__CColorKeyFrame_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIIterable_1___x_ABI_CWindows__CUI__CXaml__CMedia__CAnimation__CColorKeyFrame_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIIterable_1___x_ABI_CWindows__CUI__CXaml__CMedia__CAnimation__CColorKeyFrame_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIIterable_1___x_ABI_CWindows__CUI__CXaml__CMedia__CAnimation__CColorKeyFrame __x_ABI_C__FIIterable_1___x_ABI_CWindows__CUI__CXaml__CMedia__CAnimation__CColorKeyFrame;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIIterable_1___x_ABI_CWindows__CUI__CXaml__CMedia__CAnimation__CColorKeyFrame;

    typedef struct __x_ABI_C__FIIterable_1___x_ABI_CWindows__CUI__CXaml__CMedia__CAnimation__CColorKeyFrameVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CUI__CXaml__CMedia__CAnimation__CColorKeyFrame* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CUI__CXaml__CMedia__CAnimation__CColorKeyFrame* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CUI__CXaml__CMedia__CAnimation__CColorKeyFrame* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CUI__CXaml__CMedia__CAnimation__CColorKeyFrame* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CUI__CXaml__CMedia__CAnimation__CColorKeyFrame* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CUI__CXaml__CMedia__CAnimation__CColorKeyFrame* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* First)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CUI__CXaml__CMedia__CAnimation__CColorKeyFrame* This,
        __x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CXaml__CMedia__CAnimation__CColorKeyFrame** result);

        END_INTERFACE
    } __x_ABI_C__FIIterable_1___x_ABI_CWindows__CUI__CXaml__CMedia__CAnimation__CColorKeyFrameVtbl;

    interface __x_ABI_C__FIIterable_1___x_ABI_CWindows__CUI__CXaml__CMedia__CAnimation__CColorKeyFrame
    {
        CONST_VTBL struct __x_ABI_C__FIIterable_1___x_ABI_CWindows__CUI__CXaml__CMedia__CAnimation__CColorKeyFrameVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIIterable_1___x_ABI_CWindows__CUI__CXaml__CMedia__CAnimation__CColorKeyFrame_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CXaml__CMedia__CAnimation__CDoubleKeyFrame_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CXaml__CMedia__CAnimation__CDoubleKeyFrame_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CXaml__CMedia__CAnimation__CDoubleKeyFrame __x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CXaml__CMedia__CAnimation__CDoubleKeyFrame;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CXaml__CMedia__CAnimation__CDoubleKeyFrame;

    typedef struct __x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CXaml__CMedia__CAnimation__CDoubleKeyFrameVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CXaml__CMedia__CAnimation__CDoubleKeyFrame* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CXaml__CMedia__CAnimation__CDoubleKeyFrame* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CXaml__CMedia__CAnimation__CDoubleKeyFrame* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CXaml__CMedia__CAnimation__CDoubleKeyFrame* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CXaml__CMedia__CAnimation__CDoubleKeyFrame* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CXaml__CMedia__CAnimation__CDoubleKeyFrame* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Current)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CXaml__CMedia__CAnimation__CDoubleKeyFrame* This,
        __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDoubleKeyFrame** result);
    HRESULT (STDMETHODCALLTYPE* get_HasCurrent)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CXaml__CMedia__CAnimation__CDoubleKeyFrame* This,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* MoveNext)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CXaml__CMedia__CAnimation__CDoubleKeyFrame* This,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CXaml__CMedia__CAnimation__CDoubleKeyFrame* This,
        UINT32 itemsLength,
        __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDoubleKeyFrame** items,
        UINT32* result);

        END_INTERFACE
    } __x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CXaml__CMedia__CAnimation__CDoubleKeyFrameVtbl;

    interface __x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CXaml__CMedia__CAnimation__CDoubleKeyFrame
    {
        CONST_VTBL struct __x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CXaml__CMedia__CAnimation__CDoubleKeyFrameVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CXaml__CMedia__CAnimation__CDoubleKeyFrame_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIIterable_1___x_ABI_CWindows__CUI__CXaml__CMedia__CAnimation__CDoubleKeyFrame_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIIterable_1___x_ABI_CWindows__CUI__CXaml__CMedia__CAnimation__CDoubleKeyFrame_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIIterable_1___x_ABI_CWindows__CUI__CXaml__CMedia__CAnimation__CDoubleKeyFrame __x_ABI_C__FIIterable_1___x_ABI_CWindows__CUI__CXaml__CMedia__CAnimation__CDoubleKeyFrame;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIIterable_1___x_ABI_CWindows__CUI__CXaml__CMedia__CAnimation__CDoubleKeyFrame;

    typedef struct __x_ABI_C__FIIterable_1___x_ABI_CWindows__CUI__CXaml__CMedia__CAnimation__CDoubleKeyFrameVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CUI__CXaml__CMedia__CAnimation__CDoubleKeyFrame* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CUI__CXaml__CMedia__CAnimation__CDoubleKeyFrame* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CUI__CXaml__CMedia__CAnimation__CDoubleKeyFrame* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CUI__CXaml__CMedia__CAnimation__CDoubleKeyFrame* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CUI__CXaml__CMedia__CAnimation__CDoubleKeyFrame* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CUI__CXaml__CMedia__CAnimation__CDoubleKeyFrame* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* First)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CUI__CXaml__CMedia__CAnimation__CDoubleKeyFrame* This,
        __x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CXaml__CMedia__CAnimation__CDoubleKeyFrame** result);

        END_INTERFACE
    } __x_ABI_C__FIIterable_1___x_ABI_CWindows__CUI__CXaml__CMedia__CAnimation__CDoubleKeyFrameVtbl;

    interface __x_ABI_C__FIIterable_1___x_ABI_CWindows__CUI__CXaml__CMedia__CAnimation__CDoubleKeyFrame
    {
        CONST_VTBL struct __x_ABI_C__FIIterable_1___x_ABI_CWindows__CUI__CXaml__CMedia__CAnimation__CDoubleKeyFrameVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIIterable_1___x_ABI_CWindows__CUI__CXaml__CMedia__CAnimation__CDoubleKeyFrame_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CXaml__CMedia__CAnimation__CObjectKeyFrame_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CXaml__CMedia__CAnimation__CObjectKeyFrame_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CXaml__CMedia__CAnimation__CObjectKeyFrame __x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CXaml__CMedia__CAnimation__CObjectKeyFrame;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CXaml__CMedia__CAnimation__CObjectKeyFrame;

    typedef struct __x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CXaml__CMedia__CAnimation__CObjectKeyFrameVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CXaml__CMedia__CAnimation__CObjectKeyFrame* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CXaml__CMedia__CAnimation__CObjectKeyFrame* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CXaml__CMedia__CAnimation__CObjectKeyFrame* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CXaml__CMedia__CAnimation__CObjectKeyFrame* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CXaml__CMedia__CAnimation__CObjectKeyFrame* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CXaml__CMedia__CAnimation__CObjectKeyFrame* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Current)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CXaml__CMedia__CAnimation__CObjectKeyFrame* This,
        __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIObjectKeyFrame** result);
    HRESULT (STDMETHODCALLTYPE* get_HasCurrent)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CXaml__CMedia__CAnimation__CObjectKeyFrame* This,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* MoveNext)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CXaml__CMedia__CAnimation__CObjectKeyFrame* This,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CXaml__CMedia__CAnimation__CObjectKeyFrame* This,
        UINT32 itemsLength,
        __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIObjectKeyFrame** items,
        UINT32* result);

        END_INTERFACE
    } __x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CXaml__CMedia__CAnimation__CObjectKeyFrameVtbl;

    interface __x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CXaml__CMedia__CAnimation__CObjectKeyFrame
    {
        CONST_VTBL struct __x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CXaml__CMedia__CAnimation__CObjectKeyFrameVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CXaml__CMedia__CAnimation__CObjectKeyFrame_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIIterable_1___x_ABI_CWindows__CUI__CXaml__CMedia__CAnimation__CObjectKeyFrame_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIIterable_1___x_ABI_CWindows__CUI__CXaml__CMedia__CAnimation__CObjectKeyFrame_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIIterable_1___x_ABI_CWindows__CUI__CXaml__CMedia__CAnimation__CObjectKeyFrame __x_ABI_C__FIIterable_1___x_ABI_CWindows__CUI__CXaml__CMedia__CAnimation__CObjectKeyFrame;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIIterable_1___x_ABI_CWindows__CUI__CXaml__CMedia__CAnimation__CObjectKeyFrame;

    typedef struct __x_ABI_C__FIIterable_1___x_ABI_CWindows__CUI__CXaml__CMedia__CAnimation__CObjectKeyFrameVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CUI__CXaml__CMedia__CAnimation__CObjectKeyFrame* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CUI__CXaml__CMedia__CAnimation__CObjectKeyFrame* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CUI__CXaml__CMedia__CAnimation__CObjectKeyFrame* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CUI__CXaml__CMedia__CAnimation__CObjectKeyFrame* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CUI__CXaml__CMedia__CAnimation__CObjectKeyFrame* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CUI__CXaml__CMedia__CAnimation__CObjectKeyFrame* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* First)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CUI__CXaml__CMedia__CAnimation__CObjectKeyFrame* This,
        __x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CXaml__CMedia__CAnimation__CObjectKeyFrame** result);

        END_INTERFACE
    } __x_ABI_C__FIIterable_1___x_ABI_CWindows__CUI__CXaml__CMedia__CAnimation__CObjectKeyFrameVtbl;

    interface __x_ABI_C__FIIterable_1___x_ABI_CWindows__CUI__CXaml__CMedia__CAnimation__CObjectKeyFrame
    {
        CONST_VTBL struct __x_ABI_C__FIIterable_1___x_ABI_CWindows__CUI__CXaml__CMedia__CAnimation__CObjectKeyFrameVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIIterable_1___x_ABI_CWindows__CUI__CXaml__CMedia__CAnimation__CObjectKeyFrame_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CXaml__CMedia__CAnimation__CPointKeyFrame_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CXaml__CMedia__CAnimation__CPointKeyFrame_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CXaml__CMedia__CAnimation__CPointKeyFrame __x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CXaml__CMedia__CAnimation__CPointKeyFrame;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CXaml__CMedia__CAnimation__CPointKeyFrame;

    typedef struct __x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CXaml__CMedia__CAnimation__CPointKeyFrameVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CXaml__CMedia__CAnimation__CPointKeyFrame* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CXaml__CMedia__CAnimation__CPointKeyFrame* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CXaml__CMedia__CAnimation__CPointKeyFrame* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CXaml__CMedia__CAnimation__CPointKeyFrame* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CXaml__CMedia__CAnimation__CPointKeyFrame* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CXaml__CMedia__CAnimation__CPointKeyFrame* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Current)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CXaml__CMedia__CAnimation__CPointKeyFrame* This,
        __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPointKeyFrame** result);
    HRESULT (STDMETHODCALLTYPE* get_HasCurrent)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CXaml__CMedia__CAnimation__CPointKeyFrame* This,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* MoveNext)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CXaml__CMedia__CAnimation__CPointKeyFrame* This,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CXaml__CMedia__CAnimation__CPointKeyFrame* This,
        UINT32 itemsLength,
        __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPointKeyFrame** items,
        UINT32* result);

        END_INTERFACE
    } __x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CXaml__CMedia__CAnimation__CPointKeyFrameVtbl;

    interface __x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CXaml__CMedia__CAnimation__CPointKeyFrame
    {
        CONST_VTBL struct __x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CXaml__CMedia__CAnimation__CPointKeyFrameVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CXaml__CMedia__CAnimation__CPointKeyFrame_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIIterable_1___x_ABI_CWindows__CUI__CXaml__CMedia__CAnimation__CPointKeyFrame_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIIterable_1___x_ABI_CWindows__CUI__CXaml__CMedia__CAnimation__CPointKeyFrame_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIIterable_1___x_ABI_CWindows__CUI__CXaml__CMedia__CAnimation__CPointKeyFrame __x_ABI_C__FIIterable_1___x_ABI_CWindows__CUI__CXaml__CMedia__CAnimation__CPointKeyFrame;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIIterable_1___x_ABI_CWindows__CUI__CXaml__CMedia__CAnimation__CPointKeyFrame;

    typedef struct __x_ABI_C__FIIterable_1___x_ABI_CWindows__CUI__CXaml__CMedia__CAnimation__CPointKeyFrameVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CUI__CXaml__CMedia__CAnimation__CPointKeyFrame* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CUI__CXaml__CMedia__CAnimation__CPointKeyFrame* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CUI__CXaml__CMedia__CAnimation__CPointKeyFrame* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CUI__CXaml__CMedia__CAnimation__CPointKeyFrame* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CUI__CXaml__CMedia__CAnimation__CPointKeyFrame* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CUI__CXaml__CMedia__CAnimation__CPointKeyFrame* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* First)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CUI__CXaml__CMedia__CAnimation__CPointKeyFrame* This,
        __x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CXaml__CMedia__CAnimation__CPointKeyFrame** result);

        END_INTERFACE
    } __x_ABI_C__FIIterable_1___x_ABI_CWindows__CUI__CXaml__CMedia__CAnimation__CPointKeyFrameVtbl;

    interface __x_ABI_C__FIIterable_1___x_ABI_CWindows__CUI__CXaml__CMedia__CAnimation__CPointKeyFrame
    {
        CONST_VTBL struct __x_ABI_C__FIIterable_1___x_ABI_CWindows__CUI__CXaml__CMedia__CAnimation__CPointKeyFrameVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIIterable_1___x_ABI_CWindows__CUI__CXaml__CMedia__CAnimation__CPointKeyFrame_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CXaml__CMedia__CAnimation__CTimeline_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CXaml__CMedia__CAnimation__CTimeline_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CXaml__CMedia__CAnimation__CTimeline __x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CXaml__CMedia__CAnimation__CTimeline;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CXaml__CMedia__CAnimation__CTimeline;

    typedef struct __x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CXaml__CMedia__CAnimation__CTimelineVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CXaml__CMedia__CAnimation__CTimeline* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CXaml__CMedia__CAnimation__CTimeline* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CXaml__CMedia__CAnimation__CTimeline* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CXaml__CMedia__CAnimation__CTimeline* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CXaml__CMedia__CAnimation__CTimeline* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CXaml__CMedia__CAnimation__CTimeline* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Current)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CXaml__CMedia__CAnimation__CTimeline* This,
        __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CITimeline** result);
    HRESULT (STDMETHODCALLTYPE* get_HasCurrent)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CXaml__CMedia__CAnimation__CTimeline* This,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* MoveNext)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CXaml__CMedia__CAnimation__CTimeline* This,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CXaml__CMedia__CAnimation__CTimeline* This,
        UINT32 itemsLength,
        __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CITimeline** items,
        UINT32* result);

        END_INTERFACE
    } __x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CXaml__CMedia__CAnimation__CTimelineVtbl;

    interface __x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CXaml__CMedia__CAnimation__CTimeline
    {
        CONST_VTBL struct __x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CXaml__CMedia__CAnimation__CTimelineVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CXaml__CMedia__CAnimation__CTimeline_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIIterable_1___x_ABI_CWindows__CUI__CXaml__CMedia__CAnimation__CTimeline_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIIterable_1___x_ABI_CWindows__CUI__CXaml__CMedia__CAnimation__CTimeline_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIIterable_1___x_ABI_CWindows__CUI__CXaml__CMedia__CAnimation__CTimeline __x_ABI_C__FIIterable_1___x_ABI_CWindows__CUI__CXaml__CMedia__CAnimation__CTimeline;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIIterable_1___x_ABI_CWindows__CUI__CXaml__CMedia__CAnimation__CTimeline;

    typedef struct __x_ABI_C__FIIterable_1___x_ABI_CWindows__CUI__CXaml__CMedia__CAnimation__CTimelineVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CUI__CXaml__CMedia__CAnimation__CTimeline* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CUI__CXaml__CMedia__CAnimation__CTimeline* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CUI__CXaml__CMedia__CAnimation__CTimeline* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CUI__CXaml__CMedia__CAnimation__CTimeline* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CUI__CXaml__CMedia__CAnimation__CTimeline* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CUI__CXaml__CMedia__CAnimation__CTimeline* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* First)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CUI__CXaml__CMedia__CAnimation__CTimeline* This,
        __x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CXaml__CMedia__CAnimation__CTimeline** result);

        END_INTERFACE
    } __x_ABI_C__FIIterable_1___x_ABI_CWindows__CUI__CXaml__CMedia__CAnimation__CTimelineVtbl;

    interface __x_ABI_C__FIIterable_1___x_ABI_CWindows__CUI__CXaml__CMedia__CAnimation__CTimeline
    {
        CONST_VTBL struct __x_ABI_C__FIIterable_1___x_ABI_CWindows__CUI__CXaml__CMedia__CAnimation__CTimelineVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIIterable_1___x_ABI_CWindows__CUI__CXaml__CMedia__CAnimation__CTimeline_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CXaml__CMedia__CAnimation__CTransition_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CXaml__CMedia__CAnimation__CTransition_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CXaml__CMedia__CAnimation__CTransition __x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CXaml__CMedia__CAnimation__CTransition;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CXaml__CMedia__CAnimation__CTransition;

    typedef struct __x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CXaml__CMedia__CAnimation__CTransitionVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CXaml__CMedia__CAnimation__CTransition* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CXaml__CMedia__CAnimation__CTransition* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CXaml__CMedia__CAnimation__CTransition* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CXaml__CMedia__CAnimation__CTransition* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CXaml__CMedia__CAnimation__CTransition* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CXaml__CMedia__CAnimation__CTransition* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Current)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CXaml__CMedia__CAnimation__CTransition* This,
        __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CITransition** result);
    HRESULT (STDMETHODCALLTYPE* get_HasCurrent)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CXaml__CMedia__CAnimation__CTransition* This,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* MoveNext)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CXaml__CMedia__CAnimation__CTransition* This,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CXaml__CMedia__CAnimation__CTransition* This,
        UINT32 itemsLength,
        __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CITransition** items,
        UINT32* result);

        END_INTERFACE
    } __x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CXaml__CMedia__CAnimation__CTransitionVtbl;

    interface __x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CXaml__CMedia__CAnimation__CTransition
    {
        CONST_VTBL struct __x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CXaml__CMedia__CAnimation__CTransitionVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CXaml__CMedia__CAnimation__CTransition_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIIterable_1___x_ABI_CWindows__CUI__CXaml__CMedia__CAnimation__CTransition_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIIterable_1___x_ABI_CWindows__CUI__CXaml__CMedia__CAnimation__CTransition_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIIterable_1___x_ABI_CWindows__CUI__CXaml__CMedia__CAnimation__CTransition __x_ABI_C__FIIterable_1___x_ABI_CWindows__CUI__CXaml__CMedia__CAnimation__CTransition;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIIterable_1___x_ABI_CWindows__CUI__CXaml__CMedia__CAnimation__CTransition;

    typedef struct __x_ABI_C__FIIterable_1___x_ABI_CWindows__CUI__CXaml__CMedia__CAnimation__CTransitionVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CUI__CXaml__CMedia__CAnimation__CTransition* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CUI__CXaml__CMedia__CAnimation__CTransition* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CUI__CXaml__CMedia__CAnimation__CTransition* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CUI__CXaml__CMedia__CAnimation__CTransition* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CUI__CXaml__CMedia__CAnimation__CTransition* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CUI__CXaml__CMedia__CAnimation__CTransition* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* First)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CUI__CXaml__CMedia__CAnimation__CTransition* This,
        __x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CXaml__CMedia__CAnimation__CTransition** result);

        END_INTERFACE
    } __x_ABI_C__FIIterable_1___x_ABI_CWindows__CUI__CXaml__CMedia__CAnimation__CTransitionVtbl;

    interface __x_ABI_C__FIIterable_1___x_ABI_CWindows__CUI__CXaml__CMedia__CAnimation__CTransition
    {
        CONST_VTBL struct __x_ABI_C__FIIterable_1___x_ABI_CWindows__CUI__CXaml__CMedia__CAnimation__CTransitionVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIIterable_1___x_ABI_CWindows__CUI__CXaml__CMedia__CAnimation__CTransition_INTERFACE_DEFINED__
    
#ifndef ____x_ABI_CWindows_CUI_CXaml_CIUIElement_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CIUIElement_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CIUIElement __x_ABI_CWindows_CUI_CXaml_CIUIElement;

#endif // ____x_ABI_CWindows_CUI_CXaml_CIUIElement_FWD_DEFINED__

#if !defined(____x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CXaml__CUIElement_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CXaml__CUIElement_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CXaml__CUIElement __x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CXaml__CUIElement;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CXaml__CUIElement;

    typedef struct __x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CXaml__CUIElementVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CXaml__CUIElement* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CXaml__CUIElement* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CXaml__CUIElement* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CXaml__CUIElement* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CXaml__CUIElement* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CXaml__CUIElement* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Current)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CXaml__CUIElement* This,
        __x_ABI_CWindows_CUI_CXaml_CIUIElement** result);
    HRESULT (STDMETHODCALLTYPE* get_HasCurrent)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CXaml__CUIElement* This,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* MoveNext)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CXaml__CUIElement* This,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CXaml__CUIElement* This,
        UINT32 itemsLength,
        __x_ABI_CWindows_CUI_CXaml_CIUIElement** items,
        UINT32* result);

        END_INTERFACE
    } __x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CXaml__CUIElementVtbl;

    interface __x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CXaml__CUIElement
    {
        CONST_VTBL struct __x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CXaml__CUIElementVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CXaml__CUIElement_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIIterable_1___x_ABI_CWindows__CUI__CXaml__CUIElement_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIIterable_1___x_ABI_CWindows__CUI__CXaml__CUIElement_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIIterable_1___x_ABI_CWindows__CUI__CXaml__CUIElement __x_ABI_C__FIIterable_1___x_ABI_CWindows__CUI__CXaml__CUIElement;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIIterable_1___x_ABI_CWindows__CUI__CXaml__CUIElement;

    typedef struct __x_ABI_C__FIIterable_1___x_ABI_CWindows__CUI__CXaml__CUIElementVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CUI__CXaml__CUIElement* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CUI__CXaml__CUIElement* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CUI__CXaml__CUIElement* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CUI__CXaml__CUIElement* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CUI__CXaml__CUIElement* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CUI__CXaml__CUIElement* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* First)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CUI__CXaml__CUIElement* This,
        __x_ABI_C__FIIterator_1___x_ABI_CWindows__CUI__CXaml__CUIElement** result);

        END_INTERFACE
    } __x_ABI_C__FIIterable_1___x_ABI_CWindows__CUI__CXaml__CUIElementVtbl;

    interface __x_ABI_C__FIIterable_1___x_ABI_CWindows__CUI__CXaml__CUIElement
    {
        CONST_VTBL struct __x_ABI_C__FIIterable_1___x_ABI_CWindows__CUI__CXaml__CUIElementVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIIterable_1___x_ABI_CWindows__CUI__CXaml__CUIElement_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CXaml__CMedia__CAnimation__CColorKeyFrame_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CXaml__CMedia__CAnimation__CColorKeyFrame_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CXaml__CMedia__CAnimation__CColorKeyFrame __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CXaml__CMedia__CAnimation__CColorKeyFrame;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CXaml__CMedia__CAnimation__CColorKeyFrame;

    typedef struct __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CXaml__CMedia__CAnimation__CColorKeyFrameVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CXaml__CMedia__CAnimation__CColorKeyFrame* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CXaml__CMedia__CAnimation__CColorKeyFrame* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CXaml__CMedia__CAnimation__CColorKeyFrame* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CXaml__CMedia__CAnimation__CColorKeyFrame* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CXaml__CMedia__CAnimation__CColorKeyFrame* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CXaml__CMedia__CAnimation__CColorKeyFrame* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* GetAt)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CXaml__CMedia__CAnimation__CColorKeyFrame* This,
        UINT32 index,
        __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIColorKeyFrame** result);
    HRESULT (STDMETHODCALLTYPE* get_Size)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CXaml__CMedia__CAnimation__CColorKeyFrame* This,
        UINT32* result);
    HRESULT (STDMETHODCALLTYPE* IndexOf)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CXaml__CMedia__CAnimation__CColorKeyFrame* This,
        __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIColorKeyFrame* value,
        UINT32* index,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CXaml__CMedia__CAnimation__CColorKeyFrame* This,
        UINT32 startIndex,
        UINT32 itemsLength,
        __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIColorKeyFrame** items,
        UINT32* result);

        END_INTERFACE
    } __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CXaml__CMedia__CAnimation__CColorKeyFrameVtbl;

    interface __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CXaml__CMedia__CAnimation__CColorKeyFrame
    {
        CONST_VTBL struct __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CXaml__CMedia__CAnimation__CColorKeyFrameVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CXaml__CMedia__CAnimation__CColorKeyFrame_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CXaml__CMedia__CAnimation__CDoubleKeyFrame_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CXaml__CMedia__CAnimation__CDoubleKeyFrame_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CXaml__CMedia__CAnimation__CDoubleKeyFrame __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CXaml__CMedia__CAnimation__CDoubleKeyFrame;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CXaml__CMedia__CAnimation__CDoubleKeyFrame;

    typedef struct __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CXaml__CMedia__CAnimation__CDoubleKeyFrameVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CXaml__CMedia__CAnimation__CDoubleKeyFrame* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CXaml__CMedia__CAnimation__CDoubleKeyFrame* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CXaml__CMedia__CAnimation__CDoubleKeyFrame* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CXaml__CMedia__CAnimation__CDoubleKeyFrame* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CXaml__CMedia__CAnimation__CDoubleKeyFrame* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CXaml__CMedia__CAnimation__CDoubleKeyFrame* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* GetAt)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CXaml__CMedia__CAnimation__CDoubleKeyFrame* This,
        UINT32 index,
        __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDoubleKeyFrame** result);
    HRESULT (STDMETHODCALLTYPE* get_Size)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CXaml__CMedia__CAnimation__CDoubleKeyFrame* This,
        UINT32* result);
    HRESULT (STDMETHODCALLTYPE* IndexOf)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CXaml__CMedia__CAnimation__CDoubleKeyFrame* This,
        __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDoubleKeyFrame* value,
        UINT32* index,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CXaml__CMedia__CAnimation__CDoubleKeyFrame* This,
        UINT32 startIndex,
        UINT32 itemsLength,
        __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDoubleKeyFrame** items,
        UINT32* result);

        END_INTERFACE
    } __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CXaml__CMedia__CAnimation__CDoubleKeyFrameVtbl;

    interface __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CXaml__CMedia__CAnimation__CDoubleKeyFrame
    {
        CONST_VTBL struct __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CXaml__CMedia__CAnimation__CDoubleKeyFrameVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CXaml__CMedia__CAnimation__CDoubleKeyFrame_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CXaml__CMedia__CAnimation__CObjectKeyFrame_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CXaml__CMedia__CAnimation__CObjectKeyFrame_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CXaml__CMedia__CAnimation__CObjectKeyFrame __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CXaml__CMedia__CAnimation__CObjectKeyFrame;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CXaml__CMedia__CAnimation__CObjectKeyFrame;

    typedef struct __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CXaml__CMedia__CAnimation__CObjectKeyFrameVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CXaml__CMedia__CAnimation__CObjectKeyFrame* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CXaml__CMedia__CAnimation__CObjectKeyFrame* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CXaml__CMedia__CAnimation__CObjectKeyFrame* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CXaml__CMedia__CAnimation__CObjectKeyFrame* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CXaml__CMedia__CAnimation__CObjectKeyFrame* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CXaml__CMedia__CAnimation__CObjectKeyFrame* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* GetAt)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CXaml__CMedia__CAnimation__CObjectKeyFrame* This,
        UINT32 index,
        __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIObjectKeyFrame** result);
    HRESULT (STDMETHODCALLTYPE* get_Size)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CXaml__CMedia__CAnimation__CObjectKeyFrame* This,
        UINT32* result);
    HRESULT (STDMETHODCALLTYPE* IndexOf)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CXaml__CMedia__CAnimation__CObjectKeyFrame* This,
        __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIObjectKeyFrame* value,
        UINT32* index,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CXaml__CMedia__CAnimation__CObjectKeyFrame* This,
        UINT32 startIndex,
        UINT32 itemsLength,
        __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIObjectKeyFrame** items,
        UINT32* result);

        END_INTERFACE
    } __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CXaml__CMedia__CAnimation__CObjectKeyFrameVtbl;

    interface __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CXaml__CMedia__CAnimation__CObjectKeyFrame
    {
        CONST_VTBL struct __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CXaml__CMedia__CAnimation__CObjectKeyFrameVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CXaml__CMedia__CAnimation__CObjectKeyFrame_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CXaml__CMedia__CAnimation__CPointKeyFrame_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CXaml__CMedia__CAnimation__CPointKeyFrame_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CXaml__CMedia__CAnimation__CPointKeyFrame __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CXaml__CMedia__CAnimation__CPointKeyFrame;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CXaml__CMedia__CAnimation__CPointKeyFrame;

    typedef struct __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CXaml__CMedia__CAnimation__CPointKeyFrameVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CXaml__CMedia__CAnimation__CPointKeyFrame* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CXaml__CMedia__CAnimation__CPointKeyFrame* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CXaml__CMedia__CAnimation__CPointKeyFrame* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CXaml__CMedia__CAnimation__CPointKeyFrame* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CXaml__CMedia__CAnimation__CPointKeyFrame* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CXaml__CMedia__CAnimation__CPointKeyFrame* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* GetAt)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CXaml__CMedia__CAnimation__CPointKeyFrame* This,
        UINT32 index,
        __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPointKeyFrame** result);
    HRESULT (STDMETHODCALLTYPE* get_Size)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CXaml__CMedia__CAnimation__CPointKeyFrame* This,
        UINT32* result);
    HRESULT (STDMETHODCALLTYPE* IndexOf)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CXaml__CMedia__CAnimation__CPointKeyFrame* This,
        __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPointKeyFrame* value,
        UINT32* index,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CXaml__CMedia__CAnimation__CPointKeyFrame* This,
        UINT32 startIndex,
        UINT32 itemsLength,
        __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPointKeyFrame** items,
        UINT32* result);

        END_INTERFACE
    } __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CXaml__CMedia__CAnimation__CPointKeyFrameVtbl;

    interface __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CXaml__CMedia__CAnimation__CPointKeyFrame
    {
        CONST_VTBL struct __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CXaml__CMedia__CAnimation__CPointKeyFrameVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CXaml__CMedia__CAnimation__CPointKeyFrame_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CXaml__CMedia__CAnimation__CTimeline_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CXaml__CMedia__CAnimation__CTimeline_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CXaml__CMedia__CAnimation__CTimeline __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CXaml__CMedia__CAnimation__CTimeline;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CXaml__CMedia__CAnimation__CTimeline;

    typedef struct __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CXaml__CMedia__CAnimation__CTimelineVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CXaml__CMedia__CAnimation__CTimeline* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CXaml__CMedia__CAnimation__CTimeline* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CXaml__CMedia__CAnimation__CTimeline* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CXaml__CMedia__CAnimation__CTimeline* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CXaml__CMedia__CAnimation__CTimeline* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CXaml__CMedia__CAnimation__CTimeline* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* GetAt)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CXaml__CMedia__CAnimation__CTimeline* This,
        UINT32 index,
        __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CITimeline** result);
    HRESULT (STDMETHODCALLTYPE* get_Size)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CXaml__CMedia__CAnimation__CTimeline* This,
        UINT32* result);
    HRESULT (STDMETHODCALLTYPE* IndexOf)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CXaml__CMedia__CAnimation__CTimeline* This,
        __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CITimeline* value,
        UINT32* index,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CXaml__CMedia__CAnimation__CTimeline* This,
        UINT32 startIndex,
        UINT32 itemsLength,
        __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CITimeline** items,
        UINT32* result);

        END_INTERFACE
    } __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CXaml__CMedia__CAnimation__CTimelineVtbl;

    interface __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CXaml__CMedia__CAnimation__CTimeline
    {
        CONST_VTBL struct __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CXaml__CMedia__CAnimation__CTimelineVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CXaml__CMedia__CAnimation__CTimeline_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CXaml__CMedia__CAnimation__CTransition_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CXaml__CMedia__CAnimation__CTransition_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CXaml__CMedia__CAnimation__CTransition __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CXaml__CMedia__CAnimation__CTransition;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CXaml__CMedia__CAnimation__CTransition;

    typedef struct __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CXaml__CMedia__CAnimation__CTransitionVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CXaml__CMedia__CAnimation__CTransition* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CXaml__CMedia__CAnimation__CTransition* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CXaml__CMedia__CAnimation__CTransition* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CXaml__CMedia__CAnimation__CTransition* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CXaml__CMedia__CAnimation__CTransition* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CXaml__CMedia__CAnimation__CTransition* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* GetAt)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CXaml__CMedia__CAnimation__CTransition* This,
        UINT32 index,
        __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CITransition** result);
    HRESULT (STDMETHODCALLTYPE* get_Size)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CXaml__CMedia__CAnimation__CTransition* This,
        UINT32* result);
    HRESULT (STDMETHODCALLTYPE* IndexOf)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CXaml__CMedia__CAnimation__CTransition* This,
        __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CITransition* value,
        UINT32* index,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CXaml__CMedia__CAnimation__CTransition* This,
        UINT32 startIndex,
        UINT32 itemsLength,
        __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CITransition** items,
        UINT32* result);

        END_INTERFACE
    } __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CXaml__CMedia__CAnimation__CTransitionVtbl;

    interface __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CXaml__CMedia__CAnimation__CTransition
    {
        CONST_VTBL struct __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CXaml__CMedia__CAnimation__CTransitionVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CXaml__CMedia__CAnimation__CTransition_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CXaml__CMedia__CAnimation__CColorKeyFrame_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CXaml__CMedia__CAnimation__CColorKeyFrame_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CXaml__CMedia__CAnimation__CColorKeyFrame __x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CXaml__CMedia__CAnimation__CColorKeyFrame;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CXaml__CMedia__CAnimation__CColorKeyFrame;

    typedef struct __x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CXaml__CMedia__CAnimation__CColorKeyFrameVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CXaml__CMedia__CAnimation__CColorKeyFrame* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CXaml__CMedia__CAnimation__CColorKeyFrame* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CXaml__CMedia__CAnimation__CColorKeyFrame* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CXaml__CMedia__CAnimation__CColorKeyFrame* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CXaml__CMedia__CAnimation__CColorKeyFrame* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CXaml__CMedia__CAnimation__CColorKeyFrame* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* GetAt)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CXaml__CMedia__CAnimation__CColorKeyFrame* This,
        UINT32 index,
        __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIColorKeyFrame** result);
    HRESULT (STDMETHODCALLTYPE* get_Size)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CXaml__CMedia__CAnimation__CColorKeyFrame* This,
        UINT32* result);
    HRESULT (STDMETHODCALLTYPE* GetView)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CXaml__CMedia__CAnimation__CColorKeyFrame* This,
        __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CXaml__CMedia__CAnimation__CColorKeyFrame** result);
    HRESULT (STDMETHODCALLTYPE* IndexOf)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CXaml__CMedia__CAnimation__CColorKeyFrame* This,
        __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIColorKeyFrame* value,
        UINT32* index,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* SetAt)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CXaml__CMedia__CAnimation__CColorKeyFrame* This,
        UINT32 index,
        __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIColorKeyFrame* value);
    HRESULT (STDMETHODCALLTYPE* InsertAt)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CXaml__CMedia__CAnimation__CColorKeyFrame* This,
        UINT32 index,
        __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIColorKeyFrame* value);
    HRESULT (STDMETHODCALLTYPE* RemoveAt)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CXaml__CMedia__CAnimation__CColorKeyFrame* This,
        UINT32 index);
    HRESULT (STDMETHODCALLTYPE* Append)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CXaml__CMedia__CAnimation__CColorKeyFrame* This,
        __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIColorKeyFrame* value);
    HRESULT (STDMETHODCALLTYPE* RemoveAtEnd)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CXaml__CMedia__CAnimation__CColorKeyFrame* This);
    HRESULT (STDMETHODCALLTYPE* Clear)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CXaml__CMedia__CAnimation__CColorKeyFrame* This);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CXaml__CMedia__CAnimation__CColorKeyFrame* This,
        UINT32 startIndex,
        UINT32 itemsLength,
        __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIColorKeyFrame** items,
        UINT32* result);
    HRESULT (STDMETHODCALLTYPE* ReplaceAll)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CXaml__CMedia__CAnimation__CColorKeyFrame* This,
        UINT32 itemsLength,
        __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIColorKeyFrame** items);

        END_INTERFACE
    } __x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CXaml__CMedia__CAnimation__CColorKeyFrameVtbl;

    interface __x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CXaml__CMedia__CAnimation__CColorKeyFrame
    {
        CONST_VTBL struct __x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CXaml__CMedia__CAnimation__CColorKeyFrameVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CXaml__CMedia__CAnimation__CColorKeyFrame_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CXaml__CMedia__CAnimation__CDoubleKeyFrame_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CXaml__CMedia__CAnimation__CDoubleKeyFrame_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CXaml__CMedia__CAnimation__CDoubleKeyFrame __x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CXaml__CMedia__CAnimation__CDoubleKeyFrame;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CXaml__CMedia__CAnimation__CDoubleKeyFrame;

    typedef struct __x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CXaml__CMedia__CAnimation__CDoubleKeyFrameVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CXaml__CMedia__CAnimation__CDoubleKeyFrame* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CXaml__CMedia__CAnimation__CDoubleKeyFrame* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CXaml__CMedia__CAnimation__CDoubleKeyFrame* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CXaml__CMedia__CAnimation__CDoubleKeyFrame* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CXaml__CMedia__CAnimation__CDoubleKeyFrame* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CXaml__CMedia__CAnimation__CDoubleKeyFrame* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* GetAt)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CXaml__CMedia__CAnimation__CDoubleKeyFrame* This,
        UINT32 index,
        __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDoubleKeyFrame** result);
    HRESULT (STDMETHODCALLTYPE* get_Size)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CXaml__CMedia__CAnimation__CDoubleKeyFrame* This,
        UINT32* result);
    HRESULT (STDMETHODCALLTYPE* GetView)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CXaml__CMedia__CAnimation__CDoubleKeyFrame* This,
        __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CXaml__CMedia__CAnimation__CDoubleKeyFrame** result);
    HRESULT (STDMETHODCALLTYPE* IndexOf)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CXaml__CMedia__CAnimation__CDoubleKeyFrame* This,
        __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDoubleKeyFrame* value,
        UINT32* index,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* SetAt)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CXaml__CMedia__CAnimation__CDoubleKeyFrame* This,
        UINT32 index,
        __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDoubleKeyFrame* value);
    HRESULT (STDMETHODCALLTYPE* InsertAt)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CXaml__CMedia__CAnimation__CDoubleKeyFrame* This,
        UINT32 index,
        __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDoubleKeyFrame* value);
    HRESULT (STDMETHODCALLTYPE* RemoveAt)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CXaml__CMedia__CAnimation__CDoubleKeyFrame* This,
        UINT32 index);
    HRESULT (STDMETHODCALLTYPE* Append)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CXaml__CMedia__CAnimation__CDoubleKeyFrame* This,
        __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDoubleKeyFrame* value);
    HRESULT (STDMETHODCALLTYPE* RemoveAtEnd)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CXaml__CMedia__CAnimation__CDoubleKeyFrame* This);
    HRESULT (STDMETHODCALLTYPE* Clear)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CXaml__CMedia__CAnimation__CDoubleKeyFrame* This);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CXaml__CMedia__CAnimation__CDoubleKeyFrame* This,
        UINT32 startIndex,
        UINT32 itemsLength,
        __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDoubleKeyFrame** items,
        UINT32* result);
    HRESULT (STDMETHODCALLTYPE* ReplaceAll)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CXaml__CMedia__CAnimation__CDoubleKeyFrame* This,
        UINT32 itemsLength,
        __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDoubleKeyFrame** items);

        END_INTERFACE
    } __x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CXaml__CMedia__CAnimation__CDoubleKeyFrameVtbl;

    interface __x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CXaml__CMedia__CAnimation__CDoubleKeyFrame
    {
        CONST_VTBL struct __x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CXaml__CMedia__CAnimation__CDoubleKeyFrameVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CXaml__CMedia__CAnimation__CDoubleKeyFrame_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CXaml__CMedia__CAnimation__CObjectKeyFrame_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CXaml__CMedia__CAnimation__CObjectKeyFrame_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CXaml__CMedia__CAnimation__CObjectKeyFrame __x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CXaml__CMedia__CAnimation__CObjectKeyFrame;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CXaml__CMedia__CAnimation__CObjectKeyFrame;

    typedef struct __x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CXaml__CMedia__CAnimation__CObjectKeyFrameVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CXaml__CMedia__CAnimation__CObjectKeyFrame* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CXaml__CMedia__CAnimation__CObjectKeyFrame* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CXaml__CMedia__CAnimation__CObjectKeyFrame* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CXaml__CMedia__CAnimation__CObjectKeyFrame* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CXaml__CMedia__CAnimation__CObjectKeyFrame* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CXaml__CMedia__CAnimation__CObjectKeyFrame* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* GetAt)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CXaml__CMedia__CAnimation__CObjectKeyFrame* This,
        UINT32 index,
        __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIObjectKeyFrame** result);
    HRESULT (STDMETHODCALLTYPE* get_Size)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CXaml__CMedia__CAnimation__CObjectKeyFrame* This,
        UINT32* result);
    HRESULT (STDMETHODCALLTYPE* GetView)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CXaml__CMedia__CAnimation__CObjectKeyFrame* This,
        __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CXaml__CMedia__CAnimation__CObjectKeyFrame** result);
    HRESULT (STDMETHODCALLTYPE* IndexOf)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CXaml__CMedia__CAnimation__CObjectKeyFrame* This,
        __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIObjectKeyFrame* value,
        UINT32* index,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* SetAt)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CXaml__CMedia__CAnimation__CObjectKeyFrame* This,
        UINT32 index,
        __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIObjectKeyFrame* value);
    HRESULT (STDMETHODCALLTYPE* InsertAt)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CXaml__CMedia__CAnimation__CObjectKeyFrame* This,
        UINT32 index,
        __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIObjectKeyFrame* value);
    HRESULT (STDMETHODCALLTYPE* RemoveAt)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CXaml__CMedia__CAnimation__CObjectKeyFrame* This,
        UINT32 index);
    HRESULT (STDMETHODCALLTYPE* Append)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CXaml__CMedia__CAnimation__CObjectKeyFrame* This,
        __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIObjectKeyFrame* value);
    HRESULT (STDMETHODCALLTYPE* RemoveAtEnd)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CXaml__CMedia__CAnimation__CObjectKeyFrame* This);
    HRESULT (STDMETHODCALLTYPE* Clear)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CXaml__CMedia__CAnimation__CObjectKeyFrame* This);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CXaml__CMedia__CAnimation__CObjectKeyFrame* This,
        UINT32 startIndex,
        UINT32 itemsLength,
        __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIObjectKeyFrame** items,
        UINT32* result);
    HRESULT (STDMETHODCALLTYPE* ReplaceAll)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CXaml__CMedia__CAnimation__CObjectKeyFrame* This,
        UINT32 itemsLength,
        __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIObjectKeyFrame** items);

        END_INTERFACE
    } __x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CXaml__CMedia__CAnimation__CObjectKeyFrameVtbl;

    interface __x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CXaml__CMedia__CAnimation__CObjectKeyFrame
    {
        CONST_VTBL struct __x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CXaml__CMedia__CAnimation__CObjectKeyFrameVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CXaml__CMedia__CAnimation__CObjectKeyFrame_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CXaml__CMedia__CAnimation__CPointKeyFrame_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CXaml__CMedia__CAnimation__CPointKeyFrame_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CXaml__CMedia__CAnimation__CPointKeyFrame __x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CXaml__CMedia__CAnimation__CPointKeyFrame;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CXaml__CMedia__CAnimation__CPointKeyFrame;

    typedef struct __x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CXaml__CMedia__CAnimation__CPointKeyFrameVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CXaml__CMedia__CAnimation__CPointKeyFrame* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CXaml__CMedia__CAnimation__CPointKeyFrame* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CXaml__CMedia__CAnimation__CPointKeyFrame* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CXaml__CMedia__CAnimation__CPointKeyFrame* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CXaml__CMedia__CAnimation__CPointKeyFrame* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CXaml__CMedia__CAnimation__CPointKeyFrame* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* GetAt)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CXaml__CMedia__CAnimation__CPointKeyFrame* This,
        UINT32 index,
        __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPointKeyFrame** result);
    HRESULT (STDMETHODCALLTYPE* get_Size)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CXaml__CMedia__CAnimation__CPointKeyFrame* This,
        UINT32* result);
    HRESULT (STDMETHODCALLTYPE* GetView)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CXaml__CMedia__CAnimation__CPointKeyFrame* This,
        __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CXaml__CMedia__CAnimation__CPointKeyFrame** result);
    HRESULT (STDMETHODCALLTYPE* IndexOf)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CXaml__CMedia__CAnimation__CPointKeyFrame* This,
        __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPointKeyFrame* value,
        UINT32* index,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* SetAt)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CXaml__CMedia__CAnimation__CPointKeyFrame* This,
        UINT32 index,
        __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPointKeyFrame* value);
    HRESULT (STDMETHODCALLTYPE* InsertAt)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CXaml__CMedia__CAnimation__CPointKeyFrame* This,
        UINT32 index,
        __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPointKeyFrame* value);
    HRESULT (STDMETHODCALLTYPE* RemoveAt)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CXaml__CMedia__CAnimation__CPointKeyFrame* This,
        UINT32 index);
    HRESULT (STDMETHODCALLTYPE* Append)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CXaml__CMedia__CAnimation__CPointKeyFrame* This,
        __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPointKeyFrame* value);
    HRESULT (STDMETHODCALLTYPE* RemoveAtEnd)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CXaml__CMedia__CAnimation__CPointKeyFrame* This);
    HRESULT (STDMETHODCALLTYPE* Clear)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CXaml__CMedia__CAnimation__CPointKeyFrame* This);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CXaml__CMedia__CAnimation__CPointKeyFrame* This,
        UINT32 startIndex,
        UINT32 itemsLength,
        __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPointKeyFrame** items,
        UINT32* result);
    HRESULT (STDMETHODCALLTYPE* ReplaceAll)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CXaml__CMedia__CAnimation__CPointKeyFrame* This,
        UINT32 itemsLength,
        __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPointKeyFrame** items);

        END_INTERFACE
    } __x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CXaml__CMedia__CAnimation__CPointKeyFrameVtbl;

    interface __x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CXaml__CMedia__CAnimation__CPointKeyFrame
    {
        CONST_VTBL struct __x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CXaml__CMedia__CAnimation__CPointKeyFrameVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CXaml__CMedia__CAnimation__CPointKeyFrame_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CXaml__CMedia__CAnimation__CTimeline_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CXaml__CMedia__CAnimation__CTimeline_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CXaml__CMedia__CAnimation__CTimeline __x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CXaml__CMedia__CAnimation__CTimeline;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CXaml__CMedia__CAnimation__CTimeline;

    typedef struct __x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CXaml__CMedia__CAnimation__CTimelineVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CXaml__CMedia__CAnimation__CTimeline* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CXaml__CMedia__CAnimation__CTimeline* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CXaml__CMedia__CAnimation__CTimeline* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CXaml__CMedia__CAnimation__CTimeline* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CXaml__CMedia__CAnimation__CTimeline* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CXaml__CMedia__CAnimation__CTimeline* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* GetAt)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CXaml__CMedia__CAnimation__CTimeline* This,
        UINT32 index,
        __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CITimeline** result);
    HRESULT (STDMETHODCALLTYPE* get_Size)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CXaml__CMedia__CAnimation__CTimeline* This,
        UINT32* result);
    HRESULT (STDMETHODCALLTYPE* GetView)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CXaml__CMedia__CAnimation__CTimeline* This,
        __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CXaml__CMedia__CAnimation__CTimeline** result);
    HRESULT (STDMETHODCALLTYPE* IndexOf)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CXaml__CMedia__CAnimation__CTimeline* This,
        __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CITimeline* value,
        UINT32* index,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* SetAt)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CXaml__CMedia__CAnimation__CTimeline* This,
        UINT32 index,
        __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CITimeline* value);
    HRESULT (STDMETHODCALLTYPE* InsertAt)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CXaml__CMedia__CAnimation__CTimeline* This,
        UINT32 index,
        __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CITimeline* value);
    HRESULT (STDMETHODCALLTYPE* RemoveAt)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CXaml__CMedia__CAnimation__CTimeline* This,
        UINT32 index);
    HRESULT (STDMETHODCALLTYPE* Append)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CXaml__CMedia__CAnimation__CTimeline* This,
        __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CITimeline* value);
    HRESULT (STDMETHODCALLTYPE* RemoveAtEnd)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CXaml__CMedia__CAnimation__CTimeline* This);
    HRESULT (STDMETHODCALLTYPE* Clear)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CXaml__CMedia__CAnimation__CTimeline* This);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CXaml__CMedia__CAnimation__CTimeline* This,
        UINT32 startIndex,
        UINT32 itemsLength,
        __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CITimeline** items,
        UINT32* result);
    HRESULT (STDMETHODCALLTYPE* ReplaceAll)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CXaml__CMedia__CAnimation__CTimeline* This,
        UINT32 itemsLength,
        __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CITimeline** items);

        END_INTERFACE
    } __x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CXaml__CMedia__CAnimation__CTimelineVtbl;

    interface __x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CXaml__CMedia__CAnimation__CTimeline
    {
        CONST_VTBL struct __x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CXaml__CMedia__CAnimation__CTimelineVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CXaml__CMedia__CAnimation__CTimeline_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CXaml__CMedia__CAnimation__CTransition_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CXaml__CMedia__CAnimation__CTransition_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CXaml__CMedia__CAnimation__CTransition __x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CXaml__CMedia__CAnimation__CTransition;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CXaml__CMedia__CAnimation__CTransition;

    typedef struct __x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CXaml__CMedia__CAnimation__CTransitionVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CXaml__CMedia__CAnimation__CTransition* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CXaml__CMedia__CAnimation__CTransition* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CXaml__CMedia__CAnimation__CTransition* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CXaml__CMedia__CAnimation__CTransition* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CXaml__CMedia__CAnimation__CTransition* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CXaml__CMedia__CAnimation__CTransition* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* GetAt)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CXaml__CMedia__CAnimation__CTransition* This,
        UINT32 index,
        __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CITransition** result);
    HRESULT (STDMETHODCALLTYPE* get_Size)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CXaml__CMedia__CAnimation__CTransition* This,
        UINT32* result);
    HRESULT (STDMETHODCALLTYPE* GetView)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CXaml__CMedia__CAnimation__CTransition* This,
        __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CUI__CXaml__CMedia__CAnimation__CTransition** result);
    HRESULT (STDMETHODCALLTYPE* IndexOf)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CXaml__CMedia__CAnimation__CTransition* This,
        __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CITransition* value,
        UINT32* index,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* SetAt)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CXaml__CMedia__CAnimation__CTransition* This,
        UINT32 index,
        __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CITransition* value);
    HRESULT (STDMETHODCALLTYPE* InsertAt)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CXaml__CMedia__CAnimation__CTransition* This,
        UINT32 index,
        __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CITransition* value);
    HRESULT (STDMETHODCALLTYPE* RemoveAt)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CXaml__CMedia__CAnimation__CTransition* This,
        UINT32 index);
    HRESULT (STDMETHODCALLTYPE* Append)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CXaml__CMedia__CAnimation__CTransition* This,
        __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CITransition* value);
    HRESULT (STDMETHODCALLTYPE* RemoveAtEnd)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CXaml__CMedia__CAnimation__CTransition* This);
    HRESULT (STDMETHODCALLTYPE* Clear)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CXaml__CMedia__CAnimation__CTransition* This);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CXaml__CMedia__CAnimation__CTransition* This,
        UINT32 startIndex,
        UINT32 itemsLength,
        __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CITransition** items,
        UINT32* result);
    HRESULT (STDMETHODCALLTYPE* ReplaceAll)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CXaml__CMedia__CAnimation__CTransition* This,
        UINT32 itemsLength,
        __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CITransition** items);

        END_INTERFACE
    } __x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CXaml__CMedia__CAnimation__CTransitionVtbl;

    interface __x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CXaml__CMedia__CAnimation__CTransition
    {
        CONST_VTBL struct __x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CXaml__CMedia__CAnimation__CTransitionVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CXaml__CMedia__CAnimation__CTransition_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIEventHandler_1_IInspectable_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIEventHandler_1_IInspectable_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIEventHandler_1_IInspectable __x_ABI_C__FIEventHandler_1_IInspectable;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIEventHandler_1_IInspectable;

    typedef struct __x_ABI_C__FIEventHandler_1_IInspectableVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIEventHandler_1_IInspectable* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIEventHandler_1_IInspectable* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIEventHandler_1_IInspectable* This);
        HRESULT (STDMETHODCALLTYPE* Invoke)(__x_ABI_C__FIEventHandler_1_IInspectable* This,
        IInspectable* sender,
        IInspectable* args);

        END_INTERFACE
    } __x_ABI_C__FIEventHandler_1_IInspectableVtbl;

    interface __x_ABI_C__FIEventHandler_1_IInspectable
    {
        CONST_VTBL struct __x_ABI_C__FIEventHandler_1_IInspectableVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIEventHandler_1_IInspectable_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIReference_1_double_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIReference_1_double_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIReference_1_double __x_ABI_C__FIReference_1_double;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIReference_1_double;

    typedef struct __x_ABI_C__FIReference_1_doubleVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIReference_1_double* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIReference_1_double* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIReference_1_double* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIReference_1_double* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIReference_1_double* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIReference_1_double* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Value)(__x_ABI_C__FIReference_1_double* This,
        DOUBLE* result);

        END_INTERFACE
    } __x_ABI_C__FIReference_1_doubleVtbl;

    interface __x_ABI_C__FIReference_1_double
    {
        CONST_VTBL struct __x_ABI_C__FIReference_1_doubleVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIReference_1_double_INTERFACE_DEFINED__
    
typedef struct __x_ABI_CWindows_CFoundation_CPoint __x_ABI_CWindows_CFoundation_CPoint;

#if !defined(____x_ABI_C__FIReference_1___x_ABI_CWindows__CFoundation__CPoint_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIReference_1___x_ABI_CWindows__CFoundation__CPoint_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIReference_1___x_ABI_CWindows__CFoundation__CPoint __x_ABI_C__FIReference_1___x_ABI_CWindows__CFoundation__CPoint;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIReference_1___x_ABI_CWindows__CFoundation__CPoint;

    typedef struct __x_ABI_C__FIReference_1___x_ABI_CWindows__CFoundation__CPointVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIReference_1___x_ABI_CWindows__CFoundation__CPoint* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIReference_1___x_ABI_CWindows__CFoundation__CPoint* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIReference_1___x_ABI_CWindows__CFoundation__CPoint* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIReference_1___x_ABI_CWindows__CFoundation__CPoint* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIReference_1___x_ABI_CWindows__CFoundation__CPoint* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIReference_1___x_ABI_CWindows__CFoundation__CPoint* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Value)(__x_ABI_C__FIReference_1___x_ABI_CWindows__CFoundation__CPoint* This,
        struct __x_ABI_CWindows_CFoundation_CPoint* result);

        END_INTERFACE
    } __x_ABI_C__FIReference_1___x_ABI_CWindows__CFoundation__CPointVtbl;

    interface __x_ABI_C__FIReference_1___x_ABI_CWindows__CFoundation__CPoint
    {
        CONST_VTBL struct __x_ABI_C__FIReference_1___x_ABI_CWindows__CFoundation__CPointVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIReference_1___x_ABI_CWindows__CFoundation__CPoint_INTERFACE_DEFINED__
    
typedef struct __x_ABI_CWindows_CFoundation_CTimeSpan __x_ABI_CWindows_CFoundation_CTimeSpan;

#if !defined(____x_ABI_C__FIReference_1___x_ABI_CWindows__CFoundation__CTimeSpan_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIReference_1___x_ABI_CWindows__CFoundation__CTimeSpan_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIReference_1___x_ABI_CWindows__CFoundation__CTimeSpan __x_ABI_C__FIReference_1___x_ABI_CWindows__CFoundation__CTimeSpan;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIReference_1___x_ABI_CWindows__CFoundation__CTimeSpan;

    typedef struct __x_ABI_C__FIReference_1___x_ABI_CWindows__CFoundation__CTimeSpanVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIReference_1___x_ABI_CWindows__CFoundation__CTimeSpan* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIReference_1___x_ABI_CWindows__CFoundation__CTimeSpan* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIReference_1___x_ABI_CWindows__CFoundation__CTimeSpan* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIReference_1___x_ABI_CWindows__CFoundation__CTimeSpan* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIReference_1___x_ABI_CWindows__CFoundation__CTimeSpan* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIReference_1___x_ABI_CWindows__CFoundation__CTimeSpan* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Value)(__x_ABI_C__FIReference_1___x_ABI_CWindows__CFoundation__CTimeSpan* This,
        struct __x_ABI_CWindows_CFoundation_CTimeSpan* result);

        END_INTERFACE
    } __x_ABI_C__FIReference_1___x_ABI_CWindows__CFoundation__CTimeSpanVtbl;

    interface __x_ABI_C__FIReference_1___x_ABI_CWindows__CFoundation__CTimeSpan
    {
        CONST_VTBL struct __x_ABI_C__FIReference_1___x_ABI_CWindows__CFoundation__CTimeSpanVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIReference_1___x_ABI_CWindows__CFoundation__CTimeSpan_INTERFACE_DEFINED__
    
typedef struct __x_ABI_CWindows_CUI_CColor __x_ABI_CWindows_CUI_CColor;

#if !defined(____x_ABI_C__FIReference_1___x_ABI_CWindows__CUI__CColor_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIReference_1___x_ABI_CWindows__CUI__CColor_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIReference_1___x_ABI_CWindows__CUI__CColor __x_ABI_C__FIReference_1___x_ABI_CWindows__CUI__CColor;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIReference_1___x_ABI_CWindows__CUI__CColor;

    typedef struct __x_ABI_C__FIReference_1___x_ABI_CWindows__CUI__CColorVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIReference_1___x_ABI_CWindows__CUI__CColor* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIReference_1___x_ABI_CWindows__CUI__CColor* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIReference_1___x_ABI_CWindows__CUI__CColor* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIReference_1___x_ABI_CWindows__CUI__CColor* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIReference_1___x_ABI_CWindows__CUI__CColor* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIReference_1___x_ABI_CWindows__CUI__CColor* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Value)(__x_ABI_C__FIReference_1___x_ABI_CWindows__CUI__CColor* This,
        struct __x_ABI_CWindows_CUI_CColor* result);

        END_INTERFACE
    } __x_ABI_C__FIReference_1___x_ABI_CWindows__CUI__CColorVtbl;

    interface __x_ABI_C__FIReference_1___x_ABI_CWindows__CUI__CColor
    {
        CONST_VTBL struct __x_ABI_C__FIReference_1___x_ABI_CWindows__CUI__CColorVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIReference_1___x_ABI_CWindows__CUI__CColor_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CMedia__CAnimation__CConnectedAnimation_IInspectable_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CMedia__CAnimation__CConnectedAnimation_IInspectable_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CMedia__CAnimation__CConnectedAnimation_IInspectable __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CMedia__CAnimation__CConnectedAnimation_IInspectable;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CMedia__CAnimation__CConnectedAnimation_IInspectable;

    typedef struct __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CMedia__CAnimation__CConnectedAnimation_IInspectableVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CMedia__CAnimation__CConnectedAnimation_IInspectable* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CMedia__CAnimation__CConnectedAnimation_IInspectable* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CMedia__CAnimation__CConnectedAnimation_IInspectable* This);
        HRESULT (STDMETHODCALLTYPE* Invoke)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CMedia__CAnimation__CConnectedAnimation_IInspectable* This,
        __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIConnectedAnimation* sender,
        IInspectable* args);

        END_INTERFACE
    } __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CMedia__CAnimation__CConnectedAnimation_IInspectableVtbl;

    interface __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CMedia__CAnimation__CConnectedAnimation_IInspectable
    {
        CONST_VTBL struct __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CMedia__CAnimation__CConnectedAnimation_IInspectableVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CMedia__CAnimation__CConnectedAnimation_IInspectable_INTERFACE_DEFINED__
    
#ifndef ____x_ABI_CWindows_CFoundation_CIPropertyValue_FWD_DEFINED__
#define ____x_ABI_CWindows_CFoundation_CIPropertyValue_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CFoundation_CIPropertyValue __x_ABI_CWindows_CFoundation_CIPropertyValue;

#endif // ____x_ABI_CWindows_CFoundation_CIPropertyValue_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CComposition_CICompositionEasingFunction_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CComposition_CICompositionEasingFunction_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CComposition_CICompositionEasingFunction __x_ABI_CWindows_CUI_CComposition_CICompositionEasingFunction;

#endif // ____x_ABI_CWindows_CUI_CComposition_CICompositionEasingFunction_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CComposition_CICompositionAnimationBase_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CComposition_CICompositionAnimationBase_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CComposition_CICompositionAnimationBase __x_ABI_CWindows_CUI_CComposition_CICompositionAnimationBase;

#endif // ____x_ABI_CWindows_CUI_CComposition_CICompositionAnimationBase_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBase_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBase_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBase __x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBase;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBase_FWD_DEFINED__

typedef enum __x_ABI_CWindows_CUI_CXaml_CControls_CPrimitives_CAnimationDirection __x_ABI_CWindows_CUI_CXaml_CControls_CPrimitives_CAnimationDirection;

typedef enum __x_ABI_CWindows_CUI_CXaml_CControls_CPrimitives_CEdgeTransitionLocation __x_ABI_CWindows_CUI_CXaml_CControls_CPrimitives_CEdgeTransitionLocation;

#ifndef ____x_ABI_CWindows_CUI_CXaml_CIDependencyObject_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CIDependencyObject_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CIDependencyObject __x_ABI_CWindows_CUI_CXaml_CIDependencyObject;

#endif // ____x_ABI_CWindows_CUI_CXaml_CIDependencyObject_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CIDependencyProperty_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CIDependencyProperty_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty;

#endif // ____x_ABI_CWindows_CUI_CXaml_CIDependencyProperty_FWD_DEFINED__

typedef struct __x_ABI_CWindows_CUI_CXaml_CDuration __x_ABI_CWindows_CUI_CXaml_CDuration;

#ifndef ____x_ABI_CWindows_CUI_CXaml_CIDependencyObject2_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CIDependencyObject2_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CIDependencyObject2 __x_ABI_CWindows_CUI_CXaml_CIDependencyObject2;

#endif // ____x_ABI_CWindows_CUI_CXaml_CIDependencyObject2_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CITriggerAction_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CITriggerAction_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CXaml_CITriggerAction __x_ABI_CWindows_CUI_CXaml_CITriggerAction;

#endif // ____x_ABI_CWindows_CUI_CXaml_CITriggerAction_FWD_DEFINED__

typedef enum __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CClockState __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CClockState;

typedef enum __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CConnectedAnimationComponent __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CConnectedAnimationComponent;

typedef enum __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CEasingMode __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CEasingMode;

typedef enum __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CFillBehavior __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CFillBehavior;

typedef enum __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CRepeatBehaviorType __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CRepeatBehaviorType;

typedef enum __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CSlideNavigationTransitionEffect __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CSlideNavigationTransitionEffect;

typedef struct __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CKeyTime __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CKeyTime;

typedef struct __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CRepeatBehavior __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CRepeatBehavior;

enum __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CClockState
    {
        __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CClockState_Active = 0,
    __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CClockState_Filling = 1,
    __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CClockState_Stopped = 2,
};

enum __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CConnectedAnimationComponent
    {
        __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CConnectedAnimationComponent_OffsetX = 0,
    __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CConnectedAnimationComponent_OffsetY = 1,
    __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CConnectedAnimationComponent_CrossFade = 2,
    __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CConnectedAnimationComponent_Scale = 3,
};

enum __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CEasingMode
    {
        __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CEasingMode_EaseOut = 0,
    __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CEasingMode_EaseIn = 1,
    __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CEasingMode_EaseInOut = 2,
};

enum __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CFillBehavior
    {
        __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CFillBehavior_HoldEnd = 0,
    __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CFillBehavior_Stop = 1,
};

enum __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CRepeatBehaviorType
    {
        __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CRepeatBehaviorType_Count = 0,
    __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CRepeatBehaviorType_Duration = 1,
    __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CRepeatBehaviorType_Forever = 2,
};

enum __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CSlideNavigationTransitionEffect
    {
        __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CSlideNavigationTransitionEffect_FromBottom = 0,
    __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CSlideNavigationTransitionEffect_FromLeft = 1,
    __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CSlideNavigationTransitionEffect_FromRight = 2,
};

struct __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CKeyTime
    {
        struct __x_ABI_CWindows_CFoundation_CTimeSpan TimeSpan;
};

struct __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CRepeatBehavior
    {
        DOUBLE Count;
    struct __x_ABI_CWindows_CFoundation_CTimeSpan Duration;
    enum __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CRepeatBehaviorType Type;
};

#if !defined(____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIAddDeleteThemeTransition_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIAddDeleteThemeTransition_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIAddDeleteThemeTransitionVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIAddDeleteThemeTransition* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIAddDeleteThemeTransition* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIAddDeleteThemeTransition* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIAddDeleteThemeTransition* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIAddDeleteThemeTransition* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIAddDeleteThemeTransition* This,
            TrustLevel* trustLevel);
    
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIAddDeleteThemeTransitionVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIAddDeleteThemeTransition
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIAddDeleteThemeTransitionVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIAddDeleteThemeTransition;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIAddDeleteThemeTransition_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIBackEase_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIBackEase_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIBackEaseVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIBackEase* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIBackEase* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIBackEase* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIBackEase* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIBackEase* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIBackEase* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Amplitude)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIBackEase* This,
        DOUBLE* value);
    HRESULT (STDMETHODCALLTYPE* put_Amplitude)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIBackEase* This,
        DOUBLE value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIBackEaseVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIBackEase
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIBackEaseVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIBackEase;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIBackEase_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIBackEaseStatics_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIBackEaseStatics_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIBackEaseStaticsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIBackEaseStatics* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIBackEaseStatics* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIBackEaseStatics* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIBackEaseStatics* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIBackEaseStatics* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIBackEaseStatics* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_AmplitudeProperty)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIBackEaseStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIBackEaseStaticsVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIBackEaseStatics
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIBackEaseStaticsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIBackEaseStatics;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIBackEaseStatics_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIBasicConnectedAnimationConfiguration_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIBasicConnectedAnimationConfiguration_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIBasicConnectedAnimationConfigurationVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIBasicConnectedAnimationConfiguration* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIBasicConnectedAnimationConfiguration* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIBasicConnectedAnimationConfiguration* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIBasicConnectedAnimationConfiguration* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIBasicConnectedAnimationConfiguration* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIBasicConnectedAnimationConfiguration* This,
            TrustLevel* trustLevel);
    
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIBasicConnectedAnimationConfigurationVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIBasicConnectedAnimationConfiguration
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIBasicConnectedAnimationConfigurationVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIBasicConnectedAnimationConfiguration;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIBasicConnectedAnimationConfiguration_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIBasicConnectedAnimationConfigurationFactory_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIBasicConnectedAnimationConfigurationFactory_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIBasicConnectedAnimationConfigurationFactoryVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIBasicConnectedAnimationConfigurationFactory* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIBasicConnectedAnimationConfigurationFactory* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIBasicConnectedAnimationConfigurationFactory* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIBasicConnectedAnimationConfigurationFactory* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIBasicConnectedAnimationConfigurationFactory* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIBasicConnectedAnimationConfigurationFactory* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* CreateInstance)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIBasicConnectedAnimationConfigurationFactory* This,
        IInspectable* baseInterface,
        IInspectable** innerInterface,
        __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIBasicConnectedAnimationConfiguration** value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIBasicConnectedAnimationConfigurationFactoryVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIBasicConnectedAnimationConfigurationFactory
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIBasicConnectedAnimationConfigurationFactoryVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIBasicConnectedAnimationConfigurationFactory;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIBasicConnectedAnimationConfigurationFactory_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIBeginStoryboard_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIBeginStoryboard_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIBeginStoryboardVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIBeginStoryboard* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIBeginStoryboard* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIBeginStoryboard* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIBeginStoryboard* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIBeginStoryboard* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIBeginStoryboard* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Storyboard)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIBeginStoryboard* This,
        __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIStoryboard** value);
    HRESULT (STDMETHODCALLTYPE* put_Storyboard)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIBeginStoryboard* This,
        __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIStoryboard* value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIBeginStoryboardVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIBeginStoryboard
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIBeginStoryboardVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIBeginStoryboard;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIBeginStoryboard_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIBeginStoryboardStatics_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIBeginStoryboardStatics_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIBeginStoryboardStaticsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIBeginStoryboardStatics* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIBeginStoryboardStatics* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIBeginStoryboardStatics* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIBeginStoryboardStatics* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIBeginStoryboardStatics* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIBeginStoryboardStatics* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_StoryboardProperty)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIBeginStoryboardStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIBeginStoryboardStaticsVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIBeginStoryboardStatics
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIBeginStoryboardStaticsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIBeginStoryboardStatics;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIBeginStoryboardStatics_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIBounceEase_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIBounceEase_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIBounceEaseVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIBounceEase* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIBounceEase* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIBounceEase* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIBounceEase* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIBounceEase* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIBounceEase* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Bounces)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIBounceEase* This,
        INT32* value);
    HRESULT (STDMETHODCALLTYPE* put_Bounces)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIBounceEase* This,
        INT32 value);
    HRESULT (STDMETHODCALLTYPE* get_Bounciness)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIBounceEase* This,
        DOUBLE* value);
    HRESULT (STDMETHODCALLTYPE* put_Bounciness)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIBounceEase* This,
        DOUBLE value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIBounceEaseVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIBounceEase
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIBounceEaseVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIBounceEase;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIBounceEase_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIBounceEaseStatics_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIBounceEaseStatics_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIBounceEaseStaticsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIBounceEaseStatics* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIBounceEaseStatics* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIBounceEaseStatics* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIBounceEaseStatics* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIBounceEaseStatics* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIBounceEaseStatics* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_BouncesProperty)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIBounceEaseStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_BouncinessProperty)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIBounceEaseStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIBounceEaseStaticsVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIBounceEaseStatics
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIBounceEaseStaticsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIBounceEaseStatics;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIBounceEaseStatics_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CICircleEase_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CICircleEase_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CICircleEaseVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CICircleEase* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CICircleEase* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CICircleEase* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CICircleEase* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CICircleEase* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CICircleEase* This,
            TrustLevel* trustLevel);
    
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CICircleEaseVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CICircleEase
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CICircleEaseVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CICircleEase;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CICircleEase_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIColorAnimation_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIColorAnimation_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIColorAnimationVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIColorAnimation* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIColorAnimation* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIColorAnimation* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIColorAnimation* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIColorAnimation* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIColorAnimation* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_From)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIColorAnimation* This,
        __x_ABI_C__FIReference_1___x_ABI_CWindows__CUI__CColor** value);
    HRESULT (STDMETHODCALLTYPE* put_From)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIColorAnimation* This,
        __x_ABI_C__FIReference_1___x_ABI_CWindows__CUI__CColor* value);
    HRESULT (STDMETHODCALLTYPE* get_To)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIColorAnimation* This,
        __x_ABI_C__FIReference_1___x_ABI_CWindows__CUI__CColor** value);
    HRESULT (STDMETHODCALLTYPE* put_To)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIColorAnimation* This,
        __x_ABI_C__FIReference_1___x_ABI_CWindows__CUI__CColor* value);
    HRESULT (STDMETHODCALLTYPE* get_By)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIColorAnimation* This,
        __x_ABI_C__FIReference_1___x_ABI_CWindows__CUI__CColor** value);
    HRESULT (STDMETHODCALLTYPE* put_By)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIColorAnimation* This,
        __x_ABI_C__FIReference_1___x_ABI_CWindows__CUI__CColor* value);
    HRESULT (STDMETHODCALLTYPE* get_EasingFunction)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIColorAnimation* This,
        __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIEasingFunctionBase** value);
    HRESULT (STDMETHODCALLTYPE* put_EasingFunction)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIColorAnimation* This,
        __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIEasingFunctionBase* value);
    HRESULT (STDMETHODCALLTYPE* get_EnableDependentAnimation)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIColorAnimation* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* put_EnableDependentAnimation)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIColorAnimation* This,
        boolean value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIColorAnimationVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIColorAnimation
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIColorAnimationVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIColorAnimation;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIColorAnimation_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIColorAnimationStatics_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIColorAnimationStatics_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIColorAnimationStaticsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIColorAnimationStatics* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIColorAnimationStatics* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIColorAnimationStatics* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIColorAnimationStatics* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIColorAnimationStatics* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIColorAnimationStatics* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_FromProperty)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIColorAnimationStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_ToProperty)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIColorAnimationStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_ByProperty)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIColorAnimationStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_EasingFunctionProperty)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIColorAnimationStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_EnableDependentAnimationProperty)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIColorAnimationStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIColorAnimationStaticsVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIColorAnimationStatics
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIColorAnimationStaticsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIColorAnimationStatics;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIColorAnimationStatics_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIColorAnimationUsingKeyFrames_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIColorAnimationUsingKeyFrames_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIColorAnimationUsingKeyFramesVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIColorAnimationUsingKeyFrames* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIColorAnimationUsingKeyFrames* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIColorAnimationUsingKeyFrames* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIColorAnimationUsingKeyFrames* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIColorAnimationUsingKeyFrames* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIColorAnimationUsingKeyFrames* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_KeyFrames)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIColorAnimationUsingKeyFrames* This,
        __x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CXaml__CMedia__CAnimation__CColorKeyFrame** value);
    HRESULT (STDMETHODCALLTYPE* get_EnableDependentAnimation)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIColorAnimationUsingKeyFrames* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* put_EnableDependentAnimation)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIColorAnimationUsingKeyFrames* This,
        boolean value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIColorAnimationUsingKeyFramesVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIColorAnimationUsingKeyFrames
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIColorAnimationUsingKeyFramesVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIColorAnimationUsingKeyFrames;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIColorAnimationUsingKeyFrames_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIColorAnimationUsingKeyFramesStatics_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIColorAnimationUsingKeyFramesStatics_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIColorAnimationUsingKeyFramesStaticsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIColorAnimationUsingKeyFramesStatics* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIColorAnimationUsingKeyFramesStatics* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIColorAnimationUsingKeyFramesStatics* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIColorAnimationUsingKeyFramesStatics* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIColorAnimationUsingKeyFramesStatics* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIColorAnimationUsingKeyFramesStatics* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_EnableDependentAnimationProperty)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIColorAnimationUsingKeyFramesStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIColorAnimationUsingKeyFramesStaticsVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIColorAnimationUsingKeyFramesStatics
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIColorAnimationUsingKeyFramesStaticsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIColorAnimationUsingKeyFramesStatics;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIColorAnimationUsingKeyFramesStatics_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIColorKeyFrame_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIColorKeyFrame_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIColorKeyFrameVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIColorKeyFrame* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIColorKeyFrame* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIColorKeyFrame* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIColorKeyFrame* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIColorKeyFrame* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIColorKeyFrame* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Value)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIColorKeyFrame* This,
        struct __x_ABI_CWindows_CUI_CColor* value);
    HRESULT (STDMETHODCALLTYPE* put_Value)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIColorKeyFrame* This,
        struct __x_ABI_CWindows_CUI_CColor value);
    HRESULT (STDMETHODCALLTYPE* get_KeyTime)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIColorKeyFrame* This,
        struct __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CKeyTime* value);
    HRESULT (STDMETHODCALLTYPE* put_KeyTime)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIColorKeyFrame* This,
        struct __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CKeyTime value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIColorKeyFrameVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIColorKeyFrame
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIColorKeyFrameVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIColorKeyFrame;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIColorKeyFrame_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIColorKeyFrameFactory_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIColorKeyFrameFactory_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIColorKeyFrameFactoryVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIColorKeyFrameFactory* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIColorKeyFrameFactory* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIColorKeyFrameFactory* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIColorKeyFrameFactory* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIColorKeyFrameFactory* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIColorKeyFrameFactory* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* CreateInstance)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIColorKeyFrameFactory* This,
        IInspectable* baseInterface,
        IInspectable** innerInterface,
        __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIColorKeyFrame** value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIColorKeyFrameFactoryVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIColorKeyFrameFactory
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIColorKeyFrameFactoryVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIColorKeyFrameFactory;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIColorKeyFrameFactory_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIColorKeyFrameStatics_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIColorKeyFrameStatics_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIColorKeyFrameStaticsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIColorKeyFrameStatics* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIColorKeyFrameStatics* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIColorKeyFrameStatics* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIColorKeyFrameStatics* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIColorKeyFrameStatics* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIColorKeyFrameStatics* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_ValueProperty)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIColorKeyFrameStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_KeyTimeProperty)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIColorKeyFrameStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIColorKeyFrameStaticsVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIColorKeyFrameStatics
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIColorKeyFrameStaticsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIColorKeyFrameStatics;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIColorKeyFrameStatics_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CICommonNavigationTransitionInfo_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CICommonNavigationTransitionInfo_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CICommonNavigationTransitionInfoVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CICommonNavigationTransitionInfo* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CICommonNavigationTransitionInfo* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CICommonNavigationTransitionInfo* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CICommonNavigationTransitionInfo* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CICommonNavigationTransitionInfo* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CICommonNavigationTransitionInfo* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_IsStaggeringEnabled)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CICommonNavigationTransitionInfo* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* put_IsStaggeringEnabled)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CICommonNavigationTransitionInfo* This,
        boolean value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CICommonNavigationTransitionInfoVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CICommonNavigationTransitionInfo
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CICommonNavigationTransitionInfoVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CICommonNavigationTransitionInfo;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CICommonNavigationTransitionInfo_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CICommonNavigationTransitionInfoStatics_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CICommonNavigationTransitionInfoStatics_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CICommonNavigationTransitionInfoStaticsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CICommonNavigationTransitionInfoStatics* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CICommonNavigationTransitionInfoStatics* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CICommonNavigationTransitionInfoStatics* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CICommonNavigationTransitionInfoStatics* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CICommonNavigationTransitionInfoStatics* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CICommonNavigationTransitionInfoStatics* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_IsStaggeringEnabledProperty)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CICommonNavigationTransitionInfoStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_IsStaggerElementProperty)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CICommonNavigationTransitionInfoStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* GetIsStaggerElement)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CICommonNavigationTransitionInfoStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIUIElement* element,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* SetIsStaggerElement)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CICommonNavigationTransitionInfoStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIUIElement* element,
        boolean value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CICommonNavigationTransitionInfoStaticsVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CICommonNavigationTransitionInfoStatics
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CICommonNavigationTransitionInfoStaticsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CICommonNavigationTransitionInfoStatics;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CICommonNavigationTransitionInfoStatics_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIConnectedAnimation_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIConnectedAnimation_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIConnectedAnimationVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIConnectedAnimation* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIConnectedAnimation* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIConnectedAnimation* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIConnectedAnimation* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIConnectedAnimation* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIConnectedAnimation* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* add_Completed)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIConnectedAnimation* This,
        __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CXaml__CMedia__CAnimation__CConnectedAnimation_IInspectable* handler,
        EventRegistrationToken* token);
    HRESULT (STDMETHODCALLTYPE* remove_Completed)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIConnectedAnimation* This,
        EventRegistrationToken token);
    HRESULT (STDMETHODCALLTYPE* TryStart)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIConnectedAnimation* This,
        __x_ABI_CWindows_CUI_CXaml_CIUIElement* destination,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* Cancel)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIConnectedAnimation* This);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIConnectedAnimationVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIConnectedAnimation
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIConnectedAnimationVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIConnectedAnimation;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIConnectedAnimation_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIConnectedAnimation2_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIConnectedAnimation2_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIConnectedAnimation2Vtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIConnectedAnimation2* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIConnectedAnimation2* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIConnectedAnimation2* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIConnectedAnimation2* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIConnectedAnimation2* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIConnectedAnimation2* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_IsScaleAnimationEnabled)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIConnectedAnimation2* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* put_IsScaleAnimationEnabled)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIConnectedAnimation2* This,
        boolean value);
    HRESULT (STDMETHODCALLTYPE* TryStartWithCoordinatedElements)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIConnectedAnimation2* This,
        __x_ABI_CWindows_CUI_CXaml_CIUIElement* destination,
        __x_ABI_C__FIIterable_1___x_ABI_CWindows__CUI__CXaml__CUIElement* coordinatedElements,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* SetAnimationComponent)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIConnectedAnimation2* This,
        enum __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CConnectedAnimationComponent component,
        __x_ABI_CWindows_CUI_CComposition_CICompositionAnimationBase* animation);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIConnectedAnimation2Vtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIConnectedAnimation2
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIConnectedAnimation2Vtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIConnectedAnimation2;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIConnectedAnimation2_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIConnectedAnimation3_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIConnectedAnimation3_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIConnectedAnimation3Vtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIConnectedAnimation3* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIConnectedAnimation3* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIConnectedAnimation3* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIConnectedAnimation3* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIConnectedAnimation3* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIConnectedAnimation3* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Configuration)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIConnectedAnimation3* This,
        __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIConnectedAnimationConfiguration** value);
    HRESULT (STDMETHODCALLTYPE* put_Configuration)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIConnectedAnimation3* This,
        __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIConnectedAnimationConfiguration* value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIConnectedAnimation3Vtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIConnectedAnimation3
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIConnectedAnimation3Vtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIConnectedAnimation3;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIConnectedAnimation3_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIConnectedAnimationConfiguration_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIConnectedAnimationConfiguration_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIConnectedAnimationConfigurationVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIConnectedAnimationConfiguration* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIConnectedAnimationConfiguration* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIConnectedAnimationConfiguration* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIConnectedAnimationConfiguration* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIConnectedAnimationConfiguration* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIConnectedAnimationConfiguration* This,
            TrustLevel* trustLevel);
    
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIConnectedAnimationConfigurationVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIConnectedAnimationConfiguration
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIConnectedAnimationConfigurationVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIConnectedAnimationConfiguration;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIConnectedAnimationConfiguration_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIConnectedAnimationConfigurationFactory_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIConnectedAnimationConfigurationFactory_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIConnectedAnimationConfigurationFactoryVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIConnectedAnimationConfigurationFactory* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIConnectedAnimationConfigurationFactory* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIConnectedAnimationConfigurationFactory* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIConnectedAnimationConfigurationFactory* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIConnectedAnimationConfigurationFactory* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIConnectedAnimationConfigurationFactory* This,
            TrustLevel* trustLevel);
    
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIConnectedAnimationConfigurationFactoryVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIConnectedAnimationConfigurationFactory
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIConnectedAnimationConfigurationFactoryVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIConnectedAnimationConfigurationFactory;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIConnectedAnimationConfigurationFactory_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIConnectedAnimationService_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIConnectedAnimationService_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIConnectedAnimationServiceVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIConnectedAnimationService* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIConnectedAnimationService* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIConnectedAnimationService* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIConnectedAnimationService* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIConnectedAnimationService* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIConnectedAnimationService* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_DefaultDuration)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIConnectedAnimationService* This,
        struct __x_ABI_CWindows_CFoundation_CTimeSpan* value);
    HRESULT (STDMETHODCALLTYPE* put_DefaultDuration)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIConnectedAnimationService* This,
        struct __x_ABI_CWindows_CFoundation_CTimeSpan value);
    HRESULT (STDMETHODCALLTYPE* get_DefaultEasingFunction)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIConnectedAnimationService* This,
        __x_ABI_CWindows_CUI_CComposition_CICompositionEasingFunction** value);
    HRESULT (STDMETHODCALLTYPE* put_DefaultEasingFunction)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIConnectedAnimationService* This,
        __x_ABI_CWindows_CUI_CComposition_CICompositionEasingFunction* value);
    HRESULT (STDMETHODCALLTYPE* PrepareToAnimate)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIConnectedAnimationService* This,
        HSTRING key,
        __x_ABI_CWindows_CUI_CXaml_CIUIElement* source,
        __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIConnectedAnimation** result);
    HRESULT (STDMETHODCALLTYPE* GetAnimation)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIConnectedAnimationService* This,
        HSTRING key,
        __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIConnectedAnimation** result);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIConnectedAnimationServiceVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIConnectedAnimationService
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIConnectedAnimationServiceVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIConnectedAnimationService;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIConnectedAnimationService_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIConnectedAnimationServiceStatics_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIConnectedAnimationServiceStatics_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIConnectedAnimationServiceStaticsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIConnectedAnimationServiceStatics* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIConnectedAnimationServiceStatics* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIConnectedAnimationServiceStatics* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIConnectedAnimationServiceStatics* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIConnectedAnimationServiceStatics* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIConnectedAnimationServiceStatics* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* GetForCurrentView)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIConnectedAnimationServiceStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIConnectedAnimationService** result);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIConnectedAnimationServiceStaticsVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIConnectedAnimationServiceStatics
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIConnectedAnimationServiceStaticsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIConnectedAnimationServiceStatics;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIConnectedAnimationServiceStatics_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIContentThemeTransition_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIContentThemeTransition_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIContentThemeTransitionVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIContentThemeTransition* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIContentThemeTransition* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIContentThemeTransition* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIContentThemeTransition* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIContentThemeTransition* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIContentThemeTransition* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_HorizontalOffset)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIContentThemeTransition* This,
        DOUBLE* value);
    HRESULT (STDMETHODCALLTYPE* put_HorizontalOffset)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIContentThemeTransition* This,
        DOUBLE value);
    HRESULT (STDMETHODCALLTYPE* get_VerticalOffset)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIContentThemeTransition* This,
        DOUBLE* value);
    HRESULT (STDMETHODCALLTYPE* put_VerticalOffset)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIContentThemeTransition* This,
        DOUBLE value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIContentThemeTransitionVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIContentThemeTransition
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIContentThemeTransitionVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIContentThemeTransition;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIContentThemeTransition_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIContentThemeTransitionStatics_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIContentThemeTransitionStatics_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIContentThemeTransitionStaticsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIContentThemeTransitionStatics* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIContentThemeTransitionStatics* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIContentThemeTransitionStatics* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIContentThemeTransitionStatics* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIContentThemeTransitionStatics* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIContentThemeTransitionStatics* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_HorizontalOffsetProperty)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIContentThemeTransitionStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_VerticalOffsetProperty)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIContentThemeTransitionStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIContentThemeTransitionStaticsVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIContentThemeTransitionStatics
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIContentThemeTransitionStaticsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIContentThemeTransitionStatics;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIContentThemeTransitionStatics_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIContinuumNavigationTransitionInfo_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIContinuumNavigationTransitionInfo_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIContinuumNavigationTransitionInfoVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIContinuumNavigationTransitionInfo* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIContinuumNavigationTransitionInfo* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIContinuumNavigationTransitionInfo* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIContinuumNavigationTransitionInfo* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIContinuumNavigationTransitionInfo* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIContinuumNavigationTransitionInfo* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_ExitElement)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIContinuumNavigationTransitionInfo* This,
        __x_ABI_CWindows_CUI_CXaml_CIUIElement** value);
    HRESULT (STDMETHODCALLTYPE* put_ExitElement)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIContinuumNavigationTransitionInfo* This,
        __x_ABI_CWindows_CUI_CXaml_CIUIElement* value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIContinuumNavigationTransitionInfoVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIContinuumNavigationTransitionInfo
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIContinuumNavigationTransitionInfoVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIContinuumNavigationTransitionInfo;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIContinuumNavigationTransitionInfo_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIContinuumNavigationTransitionInfoStatics_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIContinuumNavigationTransitionInfoStatics_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIContinuumNavigationTransitionInfoStaticsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIContinuumNavigationTransitionInfoStatics* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIContinuumNavigationTransitionInfoStatics* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIContinuumNavigationTransitionInfoStatics* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIContinuumNavigationTransitionInfoStatics* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIContinuumNavigationTransitionInfoStatics* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIContinuumNavigationTransitionInfoStatics* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_ExitElementProperty)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIContinuumNavigationTransitionInfoStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_IsEntranceElementProperty)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIContinuumNavigationTransitionInfoStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* GetIsEntranceElement)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIContinuumNavigationTransitionInfoStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIUIElement* element,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* SetIsEntranceElement)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIContinuumNavigationTransitionInfoStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIUIElement* element,
        boolean value);
    HRESULT (STDMETHODCALLTYPE* get_IsExitElementProperty)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIContinuumNavigationTransitionInfoStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* GetIsExitElement)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIContinuumNavigationTransitionInfoStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIUIElement* element,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* SetIsExitElement)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIContinuumNavigationTransitionInfoStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIUIElement* element,
        boolean value);
    HRESULT (STDMETHODCALLTYPE* get_ExitElementContainerProperty)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIContinuumNavigationTransitionInfoStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* GetExitElementContainer)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIContinuumNavigationTransitionInfoStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBase* element,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* SetExitElementContainer)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIContinuumNavigationTransitionInfoStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBase* element,
        boolean value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIContinuumNavigationTransitionInfoStaticsVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIContinuumNavigationTransitionInfoStatics
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIContinuumNavigationTransitionInfoStaticsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIContinuumNavigationTransitionInfoStatics;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIContinuumNavigationTransitionInfoStatics_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CICubicEase_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CICubicEase_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CICubicEaseVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CICubicEase* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CICubicEase* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CICubicEase* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CICubicEase* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CICubicEase* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CICubicEase* This,
            TrustLevel* trustLevel);
    
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CICubicEaseVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CICubicEase
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CICubicEaseVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CICubicEase;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CICubicEase_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDirectConnectedAnimationConfiguration_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDirectConnectedAnimationConfiguration_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDirectConnectedAnimationConfigurationVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDirectConnectedAnimationConfiguration* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDirectConnectedAnimationConfiguration* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDirectConnectedAnimationConfiguration* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDirectConnectedAnimationConfiguration* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDirectConnectedAnimationConfiguration* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDirectConnectedAnimationConfiguration* This,
            TrustLevel* trustLevel);
    
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDirectConnectedAnimationConfigurationVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDirectConnectedAnimationConfiguration
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDirectConnectedAnimationConfigurationVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDirectConnectedAnimationConfiguration;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDirectConnectedAnimationConfiguration_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDirectConnectedAnimationConfigurationFactory_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDirectConnectedAnimationConfigurationFactory_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDirectConnectedAnimationConfigurationFactoryVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDirectConnectedAnimationConfigurationFactory* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDirectConnectedAnimationConfigurationFactory* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDirectConnectedAnimationConfigurationFactory* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDirectConnectedAnimationConfigurationFactory* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDirectConnectedAnimationConfigurationFactory* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDirectConnectedAnimationConfigurationFactory* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* CreateInstance)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDirectConnectedAnimationConfigurationFactory* This,
        IInspectable* baseInterface,
        IInspectable** innerInterface,
        __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDirectConnectedAnimationConfiguration** value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDirectConnectedAnimationConfigurationFactoryVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDirectConnectedAnimationConfigurationFactory
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDirectConnectedAnimationConfigurationFactoryVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDirectConnectedAnimationConfigurationFactory;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDirectConnectedAnimationConfigurationFactory_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDiscreteColorKeyFrame_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDiscreteColorKeyFrame_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDiscreteColorKeyFrameVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDiscreteColorKeyFrame* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDiscreteColorKeyFrame* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDiscreteColorKeyFrame* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDiscreteColorKeyFrame* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDiscreteColorKeyFrame* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDiscreteColorKeyFrame* This,
            TrustLevel* trustLevel);
    
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDiscreteColorKeyFrameVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDiscreteColorKeyFrame
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDiscreteColorKeyFrameVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDiscreteColorKeyFrame;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDiscreteColorKeyFrame_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDiscreteDoubleKeyFrame_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDiscreteDoubleKeyFrame_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDiscreteDoubleKeyFrameVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDiscreteDoubleKeyFrame* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDiscreteDoubleKeyFrame* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDiscreteDoubleKeyFrame* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDiscreteDoubleKeyFrame* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDiscreteDoubleKeyFrame* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDiscreteDoubleKeyFrame* This,
            TrustLevel* trustLevel);
    
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDiscreteDoubleKeyFrameVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDiscreteDoubleKeyFrame
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDiscreteDoubleKeyFrameVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDiscreteDoubleKeyFrame;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDiscreteDoubleKeyFrame_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDiscreteObjectKeyFrame_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDiscreteObjectKeyFrame_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDiscreteObjectKeyFrameVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDiscreteObjectKeyFrame* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDiscreteObjectKeyFrame* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDiscreteObjectKeyFrame* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDiscreteObjectKeyFrame* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDiscreteObjectKeyFrame* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDiscreteObjectKeyFrame* This,
            TrustLevel* trustLevel);
    
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDiscreteObjectKeyFrameVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDiscreteObjectKeyFrame
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDiscreteObjectKeyFrameVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDiscreteObjectKeyFrame;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDiscreteObjectKeyFrame_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDiscretePointKeyFrame_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDiscretePointKeyFrame_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDiscretePointKeyFrameVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDiscretePointKeyFrame* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDiscretePointKeyFrame* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDiscretePointKeyFrame* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDiscretePointKeyFrame* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDiscretePointKeyFrame* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDiscretePointKeyFrame* This,
            TrustLevel* trustLevel);
    
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDiscretePointKeyFrameVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDiscretePointKeyFrame
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDiscretePointKeyFrameVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDiscretePointKeyFrame;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDiscretePointKeyFrame_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDoubleAnimation_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDoubleAnimation_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDoubleAnimationVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDoubleAnimation* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDoubleAnimation* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDoubleAnimation* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDoubleAnimation* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDoubleAnimation* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDoubleAnimation* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_From)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDoubleAnimation* This,
        __x_ABI_C__FIReference_1_double** value);
    HRESULT (STDMETHODCALLTYPE* put_From)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDoubleAnimation* This,
        __x_ABI_C__FIReference_1_double* value);
    HRESULT (STDMETHODCALLTYPE* get_To)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDoubleAnimation* This,
        __x_ABI_C__FIReference_1_double** value);
    HRESULT (STDMETHODCALLTYPE* put_To)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDoubleAnimation* This,
        __x_ABI_C__FIReference_1_double* value);
    HRESULT (STDMETHODCALLTYPE* get_By)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDoubleAnimation* This,
        __x_ABI_C__FIReference_1_double** value);
    HRESULT (STDMETHODCALLTYPE* put_By)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDoubleAnimation* This,
        __x_ABI_C__FIReference_1_double* value);
    HRESULT (STDMETHODCALLTYPE* get_EasingFunction)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDoubleAnimation* This,
        __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIEasingFunctionBase** value);
    HRESULT (STDMETHODCALLTYPE* put_EasingFunction)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDoubleAnimation* This,
        __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIEasingFunctionBase* value);
    HRESULT (STDMETHODCALLTYPE* get_EnableDependentAnimation)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDoubleAnimation* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* put_EnableDependentAnimation)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDoubleAnimation* This,
        boolean value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDoubleAnimationVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDoubleAnimation
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDoubleAnimationVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDoubleAnimation;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDoubleAnimation_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDoubleAnimationStatics_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDoubleAnimationStatics_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDoubleAnimationStaticsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDoubleAnimationStatics* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDoubleAnimationStatics* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDoubleAnimationStatics* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDoubleAnimationStatics* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDoubleAnimationStatics* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDoubleAnimationStatics* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_FromProperty)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDoubleAnimationStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_ToProperty)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDoubleAnimationStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_ByProperty)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDoubleAnimationStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_EasingFunctionProperty)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDoubleAnimationStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_EnableDependentAnimationProperty)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDoubleAnimationStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDoubleAnimationStaticsVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDoubleAnimationStatics
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDoubleAnimationStaticsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDoubleAnimationStatics;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDoubleAnimationStatics_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDoubleAnimationUsingKeyFrames_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDoubleAnimationUsingKeyFrames_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDoubleAnimationUsingKeyFramesVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDoubleAnimationUsingKeyFrames* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDoubleAnimationUsingKeyFrames* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDoubleAnimationUsingKeyFrames* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDoubleAnimationUsingKeyFrames* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDoubleAnimationUsingKeyFrames* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDoubleAnimationUsingKeyFrames* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_KeyFrames)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDoubleAnimationUsingKeyFrames* This,
        __x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CXaml__CMedia__CAnimation__CDoubleKeyFrame** value);
    HRESULT (STDMETHODCALLTYPE* get_EnableDependentAnimation)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDoubleAnimationUsingKeyFrames* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* put_EnableDependentAnimation)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDoubleAnimationUsingKeyFrames* This,
        boolean value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDoubleAnimationUsingKeyFramesVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDoubleAnimationUsingKeyFrames
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDoubleAnimationUsingKeyFramesVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDoubleAnimationUsingKeyFrames;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDoubleAnimationUsingKeyFrames_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDoubleAnimationUsingKeyFramesStatics_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDoubleAnimationUsingKeyFramesStatics_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDoubleAnimationUsingKeyFramesStaticsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDoubleAnimationUsingKeyFramesStatics* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDoubleAnimationUsingKeyFramesStatics* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDoubleAnimationUsingKeyFramesStatics* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDoubleAnimationUsingKeyFramesStatics* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDoubleAnimationUsingKeyFramesStatics* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDoubleAnimationUsingKeyFramesStatics* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_EnableDependentAnimationProperty)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDoubleAnimationUsingKeyFramesStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDoubleAnimationUsingKeyFramesStaticsVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDoubleAnimationUsingKeyFramesStatics
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDoubleAnimationUsingKeyFramesStaticsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDoubleAnimationUsingKeyFramesStatics;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDoubleAnimationUsingKeyFramesStatics_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDoubleKeyFrame_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDoubleKeyFrame_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDoubleKeyFrameVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDoubleKeyFrame* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDoubleKeyFrame* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDoubleKeyFrame* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDoubleKeyFrame* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDoubleKeyFrame* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDoubleKeyFrame* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Value)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDoubleKeyFrame* This,
        DOUBLE* value);
    HRESULT (STDMETHODCALLTYPE* put_Value)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDoubleKeyFrame* This,
        DOUBLE value);
    HRESULT (STDMETHODCALLTYPE* get_KeyTime)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDoubleKeyFrame* This,
        struct __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CKeyTime* value);
    HRESULT (STDMETHODCALLTYPE* put_KeyTime)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDoubleKeyFrame* This,
        struct __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CKeyTime value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDoubleKeyFrameVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDoubleKeyFrame
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDoubleKeyFrameVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDoubleKeyFrame;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDoubleKeyFrame_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDoubleKeyFrameFactory_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDoubleKeyFrameFactory_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDoubleKeyFrameFactoryVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDoubleKeyFrameFactory* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDoubleKeyFrameFactory* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDoubleKeyFrameFactory* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDoubleKeyFrameFactory* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDoubleKeyFrameFactory* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDoubleKeyFrameFactory* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* CreateInstance)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDoubleKeyFrameFactory* This,
        IInspectable* baseInterface,
        IInspectable** innerInterface,
        __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDoubleKeyFrame** value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDoubleKeyFrameFactoryVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDoubleKeyFrameFactory
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDoubleKeyFrameFactoryVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDoubleKeyFrameFactory;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDoubleKeyFrameFactory_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDoubleKeyFrameStatics_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDoubleKeyFrameStatics_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDoubleKeyFrameStaticsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDoubleKeyFrameStatics* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDoubleKeyFrameStatics* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDoubleKeyFrameStatics* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDoubleKeyFrameStatics* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDoubleKeyFrameStatics* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDoubleKeyFrameStatics* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_ValueProperty)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDoubleKeyFrameStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_KeyTimeProperty)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDoubleKeyFrameStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDoubleKeyFrameStaticsVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDoubleKeyFrameStatics
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDoubleKeyFrameStaticsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDoubleKeyFrameStatics;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDoubleKeyFrameStatics_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDragItemThemeAnimation_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDragItemThemeAnimation_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDragItemThemeAnimationVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDragItemThemeAnimation* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDragItemThemeAnimation* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDragItemThemeAnimation* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDragItemThemeAnimation* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDragItemThemeAnimation* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDragItemThemeAnimation* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_TargetName)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDragItemThemeAnimation* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* put_TargetName)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDragItemThemeAnimation* This,
        HSTRING value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDragItemThemeAnimationVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDragItemThemeAnimation
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDragItemThemeAnimationVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDragItemThemeAnimation;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDragItemThemeAnimation_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDragItemThemeAnimationStatics_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDragItemThemeAnimationStatics_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDragItemThemeAnimationStaticsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDragItemThemeAnimationStatics* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDragItemThemeAnimationStatics* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDragItemThemeAnimationStatics* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDragItemThemeAnimationStatics* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDragItemThemeAnimationStatics* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDragItemThemeAnimationStatics* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_TargetNameProperty)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDragItemThemeAnimationStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDragItemThemeAnimationStaticsVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDragItemThemeAnimationStatics
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDragItemThemeAnimationStaticsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDragItemThemeAnimationStatics;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDragItemThemeAnimationStatics_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDragOverThemeAnimation_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDragOverThemeAnimation_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDragOverThemeAnimationVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDragOverThemeAnimation* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDragOverThemeAnimation* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDragOverThemeAnimation* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDragOverThemeAnimation* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDragOverThemeAnimation* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDragOverThemeAnimation* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_TargetName)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDragOverThemeAnimation* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* put_TargetName)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDragOverThemeAnimation* This,
        HSTRING value);
    HRESULT (STDMETHODCALLTYPE* get_ToOffset)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDragOverThemeAnimation* This,
        DOUBLE* value);
    HRESULT (STDMETHODCALLTYPE* put_ToOffset)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDragOverThemeAnimation* This,
        DOUBLE value);
    HRESULT (STDMETHODCALLTYPE* get_Direction)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDragOverThemeAnimation* This,
        enum __x_ABI_CWindows_CUI_CXaml_CControls_CPrimitives_CAnimationDirection* value);
    HRESULT (STDMETHODCALLTYPE* put_Direction)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDragOverThemeAnimation* This,
        enum __x_ABI_CWindows_CUI_CXaml_CControls_CPrimitives_CAnimationDirection value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDragOverThemeAnimationVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDragOverThemeAnimation
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDragOverThemeAnimationVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDragOverThemeAnimation;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDragOverThemeAnimation_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDragOverThemeAnimationStatics_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDragOverThemeAnimationStatics_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDragOverThemeAnimationStaticsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDragOverThemeAnimationStatics* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDragOverThemeAnimationStatics* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDragOverThemeAnimationStatics* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDragOverThemeAnimationStatics* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDragOverThemeAnimationStatics* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDragOverThemeAnimationStatics* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_TargetNameProperty)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDragOverThemeAnimationStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_ToOffsetProperty)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDragOverThemeAnimationStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_DirectionProperty)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDragOverThemeAnimationStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDragOverThemeAnimationStaticsVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDragOverThemeAnimationStatics
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDragOverThemeAnimationStaticsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDragOverThemeAnimationStatics;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDragOverThemeAnimationStatics_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDrillInNavigationTransitionInfo_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDrillInNavigationTransitionInfo_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDrillInNavigationTransitionInfoVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDrillInNavigationTransitionInfo* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDrillInNavigationTransitionInfo* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDrillInNavigationTransitionInfo* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDrillInNavigationTransitionInfo* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDrillInNavigationTransitionInfo* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDrillInNavigationTransitionInfo* This,
            TrustLevel* trustLevel);
    
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDrillInNavigationTransitionInfoVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDrillInNavigationTransitionInfo
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDrillInNavigationTransitionInfoVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDrillInNavigationTransitionInfo;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDrillInNavigationTransitionInfo_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDrillInThemeAnimation_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDrillInThemeAnimation_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDrillInThemeAnimationVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDrillInThemeAnimation* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDrillInThemeAnimation* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDrillInThemeAnimation* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDrillInThemeAnimation* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDrillInThemeAnimation* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDrillInThemeAnimation* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_EntranceTargetName)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDrillInThemeAnimation* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* put_EntranceTargetName)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDrillInThemeAnimation* This,
        HSTRING value);
    HRESULT (STDMETHODCALLTYPE* get_EntranceTarget)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDrillInThemeAnimation* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyObject** value);
    HRESULT (STDMETHODCALLTYPE* put_EntranceTarget)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDrillInThemeAnimation* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyObject* value);
    HRESULT (STDMETHODCALLTYPE* get_ExitTargetName)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDrillInThemeAnimation* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* put_ExitTargetName)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDrillInThemeAnimation* This,
        HSTRING value);
    HRESULT (STDMETHODCALLTYPE* get_ExitTarget)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDrillInThemeAnimation* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyObject** value);
    HRESULT (STDMETHODCALLTYPE* put_ExitTarget)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDrillInThemeAnimation* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyObject* value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDrillInThemeAnimationVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDrillInThemeAnimation
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDrillInThemeAnimationVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDrillInThemeAnimation;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDrillInThemeAnimation_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDrillInThemeAnimationStatics_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDrillInThemeAnimationStatics_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDrillInThemeAnimationStaticsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDrillInThemeAnimationStatics* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDrillInThemeAnimationStatics* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDrillInThemeAnimationStatics* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDrillInThemeAnimationStatics* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDrillInThemeAnimationStatics* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDrillInThemeAnimationStatics* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_EntranceTargetNameProperty)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDrillInThemeAnimationStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_EntranceTargetProperty)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDrillInThemeAnimationStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_ExitTargetNameProperty)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDrillInThemeAnimationStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_ExitTargetProperty)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDrillInThemeAnimationStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDrillInThemeAnimationStaticsVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDrillInThemeAnimationStatics
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDrillInThemeAnimationStaticsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDrillInThemeAnimationStatics;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDrillInThemeAnimationStatics_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDrillOutThemeAnimation_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDrillOutThemeAnimation_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDrillOutThemeAnimationVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDrillOutThemeAnimation* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDrillOutThemeAnimation* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDrillOutThemeAnimation* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDrillOutThemeAnimation* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDrillOutThemeAnimation* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDrillOutThemeAnimation* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_EntranceTargetName)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDrillOutThemeAnimation* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* put_EntranceTargetName)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDrillOutThemeAnimation* This,
        HSTRING value);
    HRESULT (STDMETHODCALLTYPE* get_EntranceTarget)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDrillOutThemeAnimation* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyObject** value);
    HRESULT (STDMETHODCALLTYPE* put_EntranceTarget)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDrillOutThemeAnimation* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyObject* value);
    HRESULT (STDMETHODCALLTYPE* get_ExitTargetName)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDrillOutThemeAnimation* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* put_ExitTargetName)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDrillOutThemeAnimation* This,
        HSTRING value);
    HRESULT (STDMETHODCALLTYPE* get_ExitTarget)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDrillOutThemeAnimation* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyObject** value);
    HRESULT (STDMETHODCALLTYPE* put_ExitTarget)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDrillOutThemeAnimation* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyObject* value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDrillOutThemeAnimationVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDrillOutThemeAnimation
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDrillOutThemeAnimationVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDrillOutThemeAnimation;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDrillOutThemeAnimation_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDrillOutThemeAnimationStatics_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDrillOutThemeAnimationStatics_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDrillOutThemeAnimationStaticsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDrillOutThemeAnimationStatics* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDrillOutThemeAnimationStatics* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDrillOutThemeAnimationStatics* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDrillOutThemeAnimationStatics* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDrillOutThemeAnimationStatics* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDrillOutThemeAnimationStatics* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_EntranceTargetNameProperty)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDrillOutThemeAnimationStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_EntranceTargetProperty)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDrillOutThemeAnimationStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_ExitTargetNameProperty)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDrillOutThemeAnimationStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_ExitTargetProperty)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDrillOutThemeAnimationStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDrillOutThemeAnimationStaticsVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDrillOutThemeAnimationStatics
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDrillOutThemeAnimationStaticsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDrillOutThemeAnimationStatics;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDrillOutThemeAnimationStatics_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDropTargetItemThemeAnimation_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDropTargetItemThemeAnimation_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDropTargetItemThemeAnimationVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDropTargetItemThemeAnimation* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDropTargetItemThemeAnimation* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDropTargetItemThemeAnimation* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDropTargetItemThemeAnimation* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDropTargetItemThemeAnimation* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDropTargetItemThemeAnimation* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_TargetName)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDropTargetItemThemeAnimation* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* put_TargetName)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDropTargetItemThemeAnimation* This,
        HSTRING value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDropTargetItemThemeAnimationVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDropTargetItemThemeAnimation
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDropTargetItemThemeAnimationVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDropTargetItemThemeAnimation;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDropTargetItemThemeAnimation_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDropTargetItemThemeAnimationStatics_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDropTargetItemThemeAnimationStatics_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDropTargetItemThemeAnimationStaticsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDropTargetItemThemeAnimationStatics* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDropTargetItemThemeAnimationStatics* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDropTargetItemThemeAnimationStatics* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDropTargetItemThemeAnimationStatics* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDropTargetItemThemeAnimationStatics* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDropTargetItemThemeAnimationStatics* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_TargetNameProperty)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDropTargetItemThemeAnimationStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDropTargetItemThemeAnimationStaticsVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDropTargetItemThemeAnimationStatics
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDropTargetItemThemeAnimationStaticsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDropTargetItemThemeAnimationStatics;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDropTargetItemThemeAnimationStatics_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIEasingColorKeyFrame_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIEasingColorKeyFrame_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIEasingColorKeyFrameVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIEasingColorKeyFrame* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIEasingColorKeyFrame* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIEasingColorKeyFrame* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIEasingColorKeyFrame* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIEasingColorKeyFrame* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIEasingColorKeyFrame* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_EasingFunction)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIEasingColorKeyFrame* This,
        __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIEasingFunctionBase** value);
    HRESULT (STDMETHODCALLTYPE* put_EasingFunction)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIEasingColorKeyFrame* This,
        __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIEasingFunctionBase* value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIEasingColorKeyFrameVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIEasingColorKeyFrame
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIEasingColorKeyFrameVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIEasingColorKeyFrame;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIEasingColorKeyFrame_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIEasingColorKeyFrameStatics_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIEasingColorKeyFrameStatics_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIEasingColorKeyFrameStaticsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIEasingColorKeyFrameStatics* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIEasingColorKeyFrameStatics* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIEasingColorKeyFrameStatics* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIEasingColorKeyFrameStatics* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIEasingColorKeyFrameStatics* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIEasingColorKeyFrameStatics* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_EasingFunctionProperty)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIEasingColorKeyFrameStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIEasingColorKeyFrameStaticsVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIEasingColorKeyFrameStatics
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIEasingColorKeyFrameStaticsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIEasingColorKeyFrameStatics;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIEasingColorKeyFrameStatics_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIEasingDoubleKeyFrame_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIEasingDoubleKeyFrame_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIEasingDoubleKeyFrameVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIEasingDoubleKeyFrame* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIEasingDoubleKeyFrame* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIEasingDoubleKeyFrame* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIEasingDoubleKeyFrame* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIEasingDoubleKeyFrame* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIEasingDoubleKeyFrame* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_EasingFunction)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIEasingDoubleKeyFrame* This,
        __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIEasingFunctionBase** value);
    HRESULT (STDMETHODCALLTYPE* put_EasingFunction)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIEasingDoubleKeyFrame* This,
        __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIEasingFunctionBase* value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIEasingDoubleKeyFrameVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIEasingDoubleKeyFrame
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIEasingDoubleKeyFrameVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIEasingDoubleKeyFrame;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIEasingDoubleKeyFrame_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIEasingDoubleKeyFrameStatics_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIEasingDoubleKeyFrameStatics_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIEasingDoubleKeyFrameStaticsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIEasingDoubleKeyFrameStatics* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIEasingDoubleKeyFrameStatics* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIEasingDoubleKeyFrameStatics* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIEasingDoubleKeyFrameStatics* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIEasingDoubleKeyFrameStatics* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIEasingDoubleKeyFrameStatics* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_EasingFunctionProperty)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIEasingDoubleKeyFrameStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIEasingDoubleKeyFrameStaticsVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIEasingDoubleKeyFrameStatics
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIEasingDoubleKeyFrameStaticsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIEasingDoubleKeyFrameStatics;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIEasingDoubleKeyFrameStatics_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIEasingFunctionBase_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIEasingFunctionBase_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIEasingFunctionBaseVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIEasingFunctionBase* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIEasingFunctionBase* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIEasingFunctionBase* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIEasingFunctionBase* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIEasingFunctionBase* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIEasingFunctionBase* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_EasingMode)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIEasingFunctionBase* This,
        enum __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CEasingMode* value);
    HRESULT (STDMETHODCALLTYPE* put_EasingMode)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIEasingFunctionBase* This,
        enum __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CEasingMode value);
    HRESULT (STDMETHODCALLTYPE* Ease)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIEasingFunctionBase* This,
        DOUBLE normalizedTime,
        DOUBLE* result);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIEasingFunctionBaseVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIEasingFunctionBase
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIEasingFunctionBaseVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIEasingFunctionBase;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIEasingFunctionBase_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIEasingFunctionBaseFactory_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIEasingFunctionBaseFactory_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIEasingFunctionBaseFactoryVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIEasingFunctionBaseFactory* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIEasingFunctionBaseFactory* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIEasingFunctionBaseFactory* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIEasingFunctionBaseFactory* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIEasingFunctionBaseFactory* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIEasingFunctionBaseFactory* This,
            TrustLevel* trustLevel);
    
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIEasingFunctionBaseFactoryVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIEasingFunctionBaseFactory
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIEasingFunctionBaseFactoryVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIEasingFunctionBaseFactory;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIEasingFunctionBaseFactory_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIEasingFunctionBaseStatics_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIEasingFunctionBaseStatics_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIEasingFunctionBaseStaticsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIEasingFunctionBaseStatics* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIEasingFunctionBaseStatics* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIEasingFunctionBaseStatics* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIEasingFunctionBaseStatics* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIEasingFunctionBaseStatics* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIEasingFunctionBaseStatics* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_EasingModeProperty)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIEasingFunctionBaseStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIEasingFunctionBaseStaticsVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIEasingFunctionBaseStatics
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIEasingFunctionBaseStaticsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIEasingFunctionBaseStatics;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIEasingFunctionBaseStatics_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIEasingPointKeyFrame_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIEasingPointKeyFrame_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIEasingPointKeyFrameVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIEasingPointKeyFrame* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIEasingPointKeyFrame* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIEasingPointKeyFrame* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIEasingPointKeyFrame* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIEasingPointKeyFrame* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIEasingPointKeyFrame* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_EasingFunction)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIEasingPointKeyFrame* This,
        __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIEasingFunctionBase** value);
    HRESULT (STDMETHODCALLTYPE* put_EasingFunction)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIEasingPointKeyFrame* This,
        __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIEasingFunctionBase* value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIEasingPointKeyFrameVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIEasingPointKeyFrame
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIEasingPointKeyFrameVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIEasingPointKeyFrame;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIEasingPointKeyFrame_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIEasingPointKeyFrameStatics_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIEasingPointKeyFrameStatics_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIEasingPointKeyFrameStaticsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIEasingPointKeyFrameStatics* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIEasingPointKeyFrameStatics* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIEasingPointKeyFrameStatics* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIEasingPointKeyFrameStatics* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIEasingPointKeyFrameStatics* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIEasingPointKeyFrameStatics* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_EasingFunctionProperty)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIEasingPointKeyFrameStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIEasingPointKeyFrameStaticsVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIEasingPointKeyFrameStatics
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIEasingPointKeyFrameStaticsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIEasingPointKeyFrameStatics;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIEasingPointKeyFrameStatics_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIEdgeUIThemeTransition_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIEdgeUIThemeTransition_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIEdgeUIThemeTransitionVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIEdgeUIThemeTransition* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIEdgeUIThemeTransition* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIEdgeUIThemeTransition* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIEdgeUIThemeTransition* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIEdgeUIThemeTransition* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIEdgeUIThemeTransition* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Edge)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIEdgeUIThemeTransition* This,
        enum __x_ABI_CWindows_CUI_CXaml_CControls_CPrimitives_CEdgeTransitionLocation* value);
    HRESULT (STDMETHODCALLTYPE* put_Edge)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIEdgeUIThemeTransition* This,
        enum __x_ABI_CWindows_CUI_CXaml_CControls_CPrimitives_CEdgeTransitionLocation value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIEdgeUIThemeTransitionVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIEdgeUIThemeTransition
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIEdgeUIThemeTransitionVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIEdgeUIThemeTransition;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIEdgeUIThemeTransition_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIEdgeUIThemeTransitionStatics_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIEdgeUIThemeTransitionStatics_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIEdgeUIThemeTransitionStaticsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIEdgeUIThemeTransitionStatics* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIEdgeUIThemeTransitionStatics* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIEdgeUIThemeTransitionStatics* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIEdgeUIThemeTransitionStatics* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIEdgeUIThemeTransitionStatics* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIEdgeUIThemeTransitionStatics* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_EdgeProperty)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIEdgeUIThemeTransitionStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIEdgeUIThemeTransitionStaticsVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIEdgeUIThemeTransitionStatics
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIEdgeUIThemeTransitionStaticsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIEdgeUIThemeTransitionStatics;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIEdgeUIThemeTransitionStatics_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIElasticEase_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIElasticEase_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIElasticEaseVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIElasticEase* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIElasticEase* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIElasticEase* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIElasticEase* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIElasticEase* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIElasticEase* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Oscillations)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIElasticEase* This,
        INT32* value);
    HRESULT (STDMETHODCALLTYPE* put_Oscillations)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIElasticEase* This,
        INT32 value);
    HRESULT (STDMETHODCALLTYPE* get_Springiness)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIElasticEase* This,
        DOUBLE* value);
    HRESULT (STDMETHODCALLTYPE* put_Springiness)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIElasticEase* This,
        DOUBLE value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIElasticEaseVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIElasticEase
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIElasticEaseVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIElasticEase;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIElasticEase_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIElasticEaseStatics_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIElasticEaseStatics_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIElasticEaseStaticsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIElasticEaseStatics* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIElasticEaseStatics* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIElasticEaseStatics* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIElasticEaseStatics* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIElasticEaseStatics* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIElasticEaseStatics* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_OscillationsProperty)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIElasticEaseStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_SpringinessProperty)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIElasticEaseStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIElasticEaseStaticsVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIElasticEaseStatics
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIElasticEaseStaticsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIElasticEaseStatics;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIElasticEaseStatics_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIEntranceNavigationTransitionInfo_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIEntranceNavigationTransitionInfo_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIEntranceNavigationTransitionInfoVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIEntranceNavigationTransitionInfo* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIEntranceNavigationTransitionInfo* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIEntranceNavigationTransitionInfo* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIEntranceNavigationTransitionInfo* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIEntranceNavigationTransitionInfo* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIEntranceNavigationTransitionInfo* This,
            TrustLevel* trustLevel);
    
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIEntranceNavigationTransitionInfoVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIEntranceNavigationTransitionInfo
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIEntranceNavigationTransitionInfoVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIEntranceNavigationTransitionInfo;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIEntranceNavigationTransitionInfo_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIEntranceNavigationTransitionInfoStatics_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIEntranceNavigationTransitionInfoStatics_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIEntranceNavigationTransitionInfoStaticsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIEntranceNavigationTransitionInfoStatics* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIEntranceNavigationTransitionInfoStatics* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIEntranceNavigationTransitionInfoStatics* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIEntranceNavigationTransitionInfoStatics* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIEntranceNavigationTransitionInfoStatics* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIEntranceNavigationTransitionInfoStatics* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_IsTargetElementProperty)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIEntranceNavigationTransitionInfoStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* GetIsTargetElement)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIEntranceNavigationTransitionInfoStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIUIElement* element,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* SetIsTargetElement)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIEntranceNavigationTransitionInfoStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIUIElement* element,
        boolean value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIEntranceNavigationTransitionInfoStaticsVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIEntranceNavigationTransitionInfoStatics
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIEntranceNavigationTransitionInfoStaticsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIEntranceNavigationTransitionInfoStatics;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIEntranceNavigationTransitionInfoStatics_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIEntranceThemeTransition_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIEntranceThemeTransition_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIEntranceThemeTransitionVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIEntranceThemeTransition* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIEntranceThemeTransition* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIEntranceThemeTransition* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIEntranceThemeTransition* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIEntranceThemeTransition* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIEntranceThemeTransition* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_FromHorizontalOffset)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIEntranceThemeTransition* This,
        DOUBLE* value);
    HRESULT (STDMETHODCALLTYPE* put_FromHorizontalOffset)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIEntranceThemeTransition* This,
        DOUBLE value);
    HRESULT (STDMETHODCALLTYPE* get_FromVerticalOffset)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIEntranceThemeTransition* This,
        DOUBLE* value);
    HRESULT (STDMETHODCALLTYPE* put_FromVerticalOffset)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIEntranceThemeTransition* This,
        DOUBLE value);
    HRESULT (STDMETHODCALLTYPE* get_IsStaggeringEnabled)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIEntranceThemeTransition* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* put_IsStaggeringEnabled)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIEntranceThemeTransition* This,
        boolean value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIEntranceThemeTransitionVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIEntranceThemeTransition
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIEntranceThemeTransitionVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIEntranceThemeTransition;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIEntranceThemeTransition_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIEntranceThemeTransitionStatics_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIEntranceThemeTransitionStatics_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIEntranceThemeTransitionStaticsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIEntranceThemeTransitionStatics* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIEntranceThemeTransitionStatics* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIEntranceThemeTransitionStatics* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIEntranceThemeTransitionStatics* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIEntranceThemeTransitionStatics* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIEntranceThemeTransitionStatics* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_FromHorizontalOffsetProperty)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIEntranceThemeTransitionStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_FromVerticalOffsetProperty)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIEntranceThemeTransitionStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_IsStaggeringEnabledProperty)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIEntranceThemeTransitionStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIEntranceThemeTransitionStaticsVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIEntranceThemeTransitionStatics
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIEntranceThemeTransitionStaticsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIEntranceThemeTransitionStatics;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIEntranceThemeTransitionStatics_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIExponentialEase_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIExponentialEase_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIExponentialEaseVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIExponentialEase* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIExponentialEase* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIExponentialEase* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIExponentialEase* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIExponentialEase* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIExponentialEase* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Exponent)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIExponentialEase* This,
        DOUBLE* value);
    HRESULT (STDMETHODCALLTYPE* put_Exponent)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIExponentialEase* This,
        DOUBLE value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIExponentialEaseVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIExponentialEase
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIExponentialEaseVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIExponentialEase;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIExponentialEase_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIExponentialEaseStatics_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIExponentialEaseStatics_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIExponentialEaseStaticsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIExponentialEaseStatics* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIExponentialEaseStatics* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIExponentialEaseStatics* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIExponentialEaseStatics* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIExponentialEaseStatics* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIExponentialEaseStatics* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_ExponentProperty)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIExponentialEaseStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIExponentialEaseStaticsVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIExponentialEaseStatics
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIExponentialEaseStaticsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIExponentialEaseStatics;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIExponentialEaseStatics_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIFadeInThemeAnimation_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIFadeInThemeAnimation_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIFadeInThemeAnimationVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIFadeInThemeAnimation* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIFadeInThemeAnimation* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIFadeInThemeAnimation* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIFadeInThemeAnimation* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIFadeInThemeAnimation* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIFadeInThemeAnimation* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_TargetName)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIFadeInThemeAnimation* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* put_TargetName)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIFadeInThemeAnimation* This,
        HSTRING value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIFadeInThemeAnimationVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIFadeInThemeAnimation
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIFadeInThemeAnimationVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIFadeInThemeAnimation;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIFadeInThemeAnimation_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIFadeInThemeAnimationStatics_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIFadeInThemeAnimationStatics_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIFadeInThemeAnimationStaticsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIFadeInThemeAnimationStatics* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIFadeInThemeAnimationStatics* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIFadeInThemeAnimationStatics* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIFadeInThemeAnimationStatics* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIFadeInThemeAnimationStatics* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIFadeInThemeAnimationStatics* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_TargetNameProperty)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIFadeInThemeAnimationStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIFadeInThemeAnimationStaticsVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIFadeInThemeAnimationStatics
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIFadeInThemeAnimationStaticsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIFadeInThemeAnimationStatics;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIFadeInThemeAnimationStatics_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIFadeOutThemeAnimation_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIFadeOutThemeAnimation_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIFadeOutThemeAnimationVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIFadeOutThemeAnimation* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIFadeOutThemeAnimation* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIFadeOutThemeAnimation* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIFadeOutThemeAnimation* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIFadeOutThemeAnimation* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIFadeOutThemeAnimation* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_TargetName)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIFadeOutThemeAnimation* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* put_TargetName)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIFadeOutThemeAnimation* This,
        HSTRING value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIFadeOutThemeAnimationVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIFadeOutThemeAnimation
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIFadeOutThemeAnimationVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIFadeOutThemeAnimation;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIFadeOutThemeAnimation_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIFadeOutThemeAnimationStatics_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIFadeOutThemeAnimationStatics_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIFadeOutThemeAnimationStaticsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIFadeOutThemeAnimationStatics* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIFadeOutThemeAnimationStatics* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIFadeOutThemeAnimationStatics* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIFadeOutThemeAnimationStatics* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIFadeOutThemeAnimationStatics* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIFadeOutThemeAnimationStatics* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_TargetNameProperty)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIFadeOutThemeAnimationStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIFadeOutThemeAnimationStaticsVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIFadeOutThemeAnimationStatics
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIFadeOutThemeAnimationStaticsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIFadeOutThemeAnimationStatics;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIFadeOutThemeAnimationStatics_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIGravityConnectedAnimationConfiguration_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIGravityConnectedAnimationConfiguration_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIGravityConnectedAnimationConfigurationVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIGravityConnectedAnimationConfiguration* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIGravityConnectedAnimationConfiguration* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIGravityConnectedAnimationConfiguration* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIGravityConnectedAnimationConfiguration* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIGravityConnectedAnimationConfiguration* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIGravityConnectedAnimationConfiguration* This,
            TrustLevel* trustLevel);
    
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIGravityConnectedAnimationConfigurationVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIGravityConnectedAnimationConfiguration
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIGravityConnectedAnimationConfigurationVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIGravityConnectedAnimationConfiguration;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIGravityConnectedAnimationConfiguration_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIGravityConnectedAnimationConfiguration2_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIGravityConnectedAnimationConfiguration2_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIGravityConnectedAnimationConfiguration2Vtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIGravityConnectedAnimationConfiguration2* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIGravityConnectedAnimationConfiguration2* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIGravityConnectedAnimationConfiguration2* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIGravityConnectedAnimationConfiguration2* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIGravityConnectedAnimationConfiguration2* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIGravityConnectedAnimationConfiguration2* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_IsShadowEnabled)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIGravityConnectedAnimationConfiguration2* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* put_IsShadowEnabled)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIGravityConnectedAnimationConfiguration2* This,
        boolean value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIGravityConnectedAnimationConfiguration2Vtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIGravityConnectedAnimationConfiguration2
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIGravityConnectedAnimationConfiguration2Vtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIGravityConnectedAnimationConfiguration2;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIGravityConnectedAnimationConfiguration2_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIGravityConnectedAnimationConfigurationFactory_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIGravityConnectedAnimationConfigurationFactory_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIGravityConnectedAnimationConfigurationFactoryVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIGravityConnectedAnimationConfigurationFactory* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIGravityConnectedAnimationConfigurationFactory* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIGravityConnectedAnimationConfigurationFactory* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIGravityConnectedAnimationConfigurationFactory* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIGravityConnectedAnimationConfigurationFactory* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIGravityConnectedAnimationConfigurationFactory* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* CreateInstance)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIGravityConnectedAnimationConfigurationFactory* This,
        IInspectable* baseInterface,
        IInspectable** innerInterface,
        __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIGravityConnectedAnimationConfiguration** value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIGravityConnectedAnimationConfigurationFactoryVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIGravityConnectedAnimationConfigurationFactory
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIGravityConnectedAnimationConfigurationFactoryVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIGravityConnectedAnimationConfigurationFactory;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIGravityConnectedAnimationConfigurationFactory_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIKeySpline_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIKeySpline_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIKeySplineVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIKeySpline* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIKeySpline* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIKeySpline* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIKeySpline* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIKeySpline* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIKeySpline* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_ControlPoint1)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIKeySpline* This,
        struct __x_ABI_CWindows_CFoundation_CPoint* value);
    HRESULT (STDMETHODCALLTYPE* put_ControlPoint1)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIKeySpline* This,
        struct __x_ABI_CWindows_CFoundation_CPoint value);
    HRESULT (STDMETHODCALLTYPE* get_ControlPoint2)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIKeySpline* This,
        struct __x_ABI_CWindows_CFoundation_CPoint* value);
    HRESULT (STDMETHODCALLTYPE* put_ControlPoint2)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIKeySpline* This,
        struct __x_ABI_CWindows_CFoundation_CPoint value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIKeySplineVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIKeySpline
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIKeySplineVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIKeySpline;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIKeySpline_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIKeyTimeHelper_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIKeyTimeHelper_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIKeyTimeHelperVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIKeyTimeHelper* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIKeyTimeHelper* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIKeyTimeHelper* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIKeyTimeHelper* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIKeyTimeHelper* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIKeyTimeHelper* This,
            TrustLevel* trustLevel);
    
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIKeyTimeHelperVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIKeyTimeHelper
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIKeyTimeHelperVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIKeyTimeHelper;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIKeyTimeHelper_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIKeyTimeHelperStatics_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIKeyTimeHelperStatics_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIKeyTimeHelperStaticsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIKeyTimeHelperStatics* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIKeyTimeHelperStatics* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIKeyTimeHelperStatics* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIKeyTimeHelperStatics* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIKeyTimeHelperStatics* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIKeyTimeHelperStatics* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* FromTimeSpan)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIKeyTimeHelperStatics* This,
        struct __x_ABI_CWindows_CFoundation_CTimeSpan timeSpan,
        struct __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CKeyTime* result);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIKeyTimeHelperStaticsVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIKeyTimeHelperStatics
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIKeyTimeHelperStaticsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIKeyTimeHelperStatics;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIKeyTimeHelperStatics_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CILinearColorKeyFrame_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CILinearColorKeyFrame_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CILinearColorKeyFrameVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CILinearColorKeyFrame* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CILinearColorKeyFrame* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CILinearColorKeyFrame* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CILinearColorKeyFrame* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CILinearColorKeyFrame* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CILinearColorKeyFrame* This,
            TrustLevel* trustLevel);
    
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CILinearColorKeyFrameVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CILinearColorKeyFrame
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CILinearColorKeyFrameVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CILinearColorKeyFrame;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CILinearColorKeyFrame_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CILinearDoubleKeyFrame_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CILinearDoubleKeyFrame_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CILinearDoubleKeyFrameVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CILinearDoubleKeyFrame* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CILinearDoubleKeyFrame* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CILinearDoubleKeyFrame* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CILinearDoubleKeyFrame* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CILinearDoubleKeyFrame* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CILinearDoubleKeyFrame* This,
            TrustLevel* trustLevel);
    
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CILinearDoubleKeyFrameVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CILinearDoubleKeyFrame
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CILinearDoubleKeyFrameVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CILinearDoubleKeyFrame;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CILinearDoubleKeyFrame_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CILinearPointKeyFrame_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CILinearPointKeyFrame_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CILinearPointKeyFrameVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CILinearPointKeyFrame* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CILinearPointKeyFrame* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CILinearPointKeyFrame* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CILinearPointKeyFrame* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CILinearPointKeyFrame* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CILinearPointKeyFrame* This,
            TrustLevel* trustLevel);
    
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CILinearPointKeyFrameVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CILinearPointKeyFrame
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CILinearPointKeyFrameVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CILinearPointKeyFrame;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CILinearPointKeyFrame_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CINavigationThemeTransition_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CINavigationThemeTransition_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CINavigationThemeTransitionVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CINavigationThemeTransition* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CINavigationThemeTransition* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CINavigationThemeTransition* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CINavigationThemeTransition* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CINavigationThemeTransition* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CINavigationThemeTransition* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_DefaultNavigationTransitionInfo)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CINavigationThemeTransition* This,
        __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CINavigationTransitionInfo** value);
    HRESULT (STDMETHODCALLTYPE* put_DefaultNavigationTransitionInfo)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CINavigationThemeTransition* This,
        __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CINavigationTransitionInfo* value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CINavigationThemeTransitionVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CINavigationThemeTransition
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CINavigationThemeTransitionVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CINavigationThemeTransition;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CINavigationThemeTransition_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CINavigationThemeTransitionStatics_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CINavigationThemeTransitionStatics_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CINavigationThemeTransitionStaticsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CINavigationThemeTransitionStatics* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CINavigationThemeTransitionStatics* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CINavigationThemeTransitionStatics* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CINavigationThemeTransitionStatics* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CINavigationThemeTransitionStatics* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CINavigationThemeTransitionStatics* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_DefaultNavigationTransitionInfoProperty)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CINavigationThemeTransitionStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CINavigationThemeTransitionStaticsVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CINavigationThemeTransitionStatics
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CINavigationThemeTransitionStaticsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CINavigationThemeTransitionStatics;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CINavigationThemeTransitionStatics_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CINavigationTransitionInfo_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CINavigationTransitionInfo_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CINavigationTransitionInfoVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CINavigationTransitionInfo* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CINavigationTransitionInfo* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CINavigationTransitionInfo* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CINavigationTransitionInfo* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CINavigationTransitionInfo* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CINavigationTransitionInfo* This,
            TrustLevel* trustLevel);
    
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CINavigationTransitionInfoVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CINavigationTransitionInfo
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CINavigationTransitionInfoVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CINavigationTransitionInfo;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CINavigationTransitionInfo_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CINavigationTransitionInfoFactory_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CINavigationTransitionInfoFactory_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CINavigationTransitionInfoFactoryVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CINavigationTransitionInfoFactory* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CINavigationTransitionInfoFactory* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CINavigationTransitionInfoFactory* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CINavigationTransitionInfoFactory* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CINavigationTransitionInfoFactory* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CINavigationTransitionInfoFactory* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* CreateInstance)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CINavigationTransitionInfoFactory* This,
        IInspectable* baseInterface,
        IInspectable** innerInterface,
        __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CINavigationTransitionInfo** value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CINavigationTransitionInfoFactoryVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CINavigationTransitionInfoFactory
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CINavigationTransitionInfoFactoryVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CINavigationTransitionInfoFactory;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CINavigationTransitionInfoFactory_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CINavigationTransitionInfoOverrides_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CINavigationTransitionInfoOverrides_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CINavigationTransitionInfoOverridesVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CINavigationTransitionInfoOverrides* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CINavigationTransitionInfoOverrides* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CINavigationTransitionInfoOverrides* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CINavigationTransitionInfoOverrides* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CINavigationTransitionInfoOverrides* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CINavigationTransitionInfoOverrides* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* GetNavigationStateCore)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CINavigationTransitionInfoOverrides* This,
        HSTRING* result);
    HRESULT (STDMETHODCALLTYPE* SetNavigationStateCore)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CINavigationTransitionInfoOverrides* This,
        HSTRING navigationState);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CINavigationTransitionInfoOverridesVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CINavigationTransitionInfoOverrides
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CINavigationTransitionInfoOverridesVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CINavigationTransitionInfoOverrides;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CINavigationTransitionInfoOverrides_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIObjectAnimationUsingKeyFrames_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIObjectAnimationUsingKeyFrames_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIObjectAnimationUsingKeyFramesVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIObjectAnimationUsingKeyFrames* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIObjectAnimationUsingKeyFrames* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIObjectAnimationUsingKeyFrames* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIObjectAnimationUsingKeyFrames* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIObjectAnimationUsingKeyFrames* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIObjectAnimationUsingKeyFrames* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_KeyFrames)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIObjectAnimationUsingKeyFrames* This,
        __x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CXaml__CMedia__CAnimation__CObjectKeyFrame** value);
    HRESULT (STDMETHODCALLTYPE* get_EnableDependentAnimation)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIObjectAnimationUsingKeyFrames* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* put_EnableDependentAnimation)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIObjectAnimationUsingKeyFrames* This,
        boolean value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIObjectAnimationUsingKeyFramesVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIObjectAnimationUsingKeyFrames
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIObjectAnimationUsingKeyFramesVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIObjectAnimationUsingKeyFrames;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIObjectAnimationUsingKeyFrames_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIObjectAnimationUsingKeyFramesStatics_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIObjectAnimationUsingKeyFramesStatics_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIObjectAnimationUsingKeyFramesStaticsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIObjectAnimationUsingKeyFramesStatics* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIObjectAnimationUsingKeyFramesStatics* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIObjectAnimationUsingKeyFramesStatics* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIObjectAnimationUsingKeyFramesStatics* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIObjectAnimationUsingKeyFramesStatics* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIObjectAnimationUsingKeyFramesStatics* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_EnableDependentAnimationProperty)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIObjectAnimationUsingKeyFramesStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIObjectAnimationUsingKeyFramesStaticsVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIObjectAnimationUsingKeyFramesStatics
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIObjectAnimationUsingKeyFramesStaticsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIObjectAnimationUsingKeyFramesStatics;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIObjectAnimationUsingKeyFramesStatics_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIObjectKeyFrame_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIObjectKeyFrame_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIObjectKeyFrameVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIObjectKeyFrame* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIObjectKeyFrame* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIObjectKeyFrame* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIObjectKeyFrame* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIObjectKeyFrame* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIObjectKeyFrame* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Value)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIObjectKeyFrame* This,
        IInspectable** value);
    HRESULT (STDMETHODCALLTYPE* put_Value)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIObjectKeyFrame* This,
        IInspectable* value);
    HRESULT (STDMETHODCALLTYPE* get_KeyTime)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIObjectKeyFrame* This,
        struct __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CKeyTime* value);
    HRESULT (STDMETHODCALLTYPE* put_KeyTime)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIObjectKeyFrame* This,
        struct __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CKeyTime value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIObjectKeyFrameVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIObjectKeyFrame
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIObjectKeyFrameVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIObjectKeyFrame;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIObjectKeyFrame_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIObjectKeyFrameFactory_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIObjectKeyFrameFactory_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIObjectKeyFrameFactoryVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIObjectKeyFrameFactory* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIObjectKeyFrameFactory* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIObjectKeyFrameFactory* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIObjectKeyFrameFactory* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIObjectKeyFrameFactory* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIObjectKeyFrameFactory* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* CreateInstance)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIObjectKeyFrameFactory* This,
        IInspectable* baseInterface,
        IInspectable** innerInterface,
        __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIObjectKeyFrame** value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIObjectKeyFrameFactoryVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIObjectKeyFrameFactory
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIObjectKeyFrameFactoryVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIObjectKeyFrameFactory;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIObjectKeyFrameFactory_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIObjectKeyFrameStatics_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIObjectKeyFrameStatics_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIObjectKeyFrameStaticsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIObjectKeyFrameStatics* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIObjectKeyFrameStatics* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIObjectKeyFrameStatics* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIObjectKeyFrameStatics* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIObjectKeyFrameStatics* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIObjectKeyFrameStatics* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_ValueProperty)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIObjectKeyFrameStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_KeyTimeProperty)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIObjectKeyFrameStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIObjectKeyFrameStaticsVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIObjectKeyFrameStatics
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIObjectKeyFrameStaticsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIObjectKeyFrameStatics;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIObjectKeyFrameStatics_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPaneThemeTransition_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPaneThemeTransition_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPaneThemeTransitionVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPaneThemeTransition* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPaneThemeTransition* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPaneThemeTransition* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPaneThemeTransition* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPaneThemeTransition* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPaneThemeTransition* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Edge)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPaneThemeTransition* This,
        enum __x_ABI_CWindows_CUI_CXaml_CControls_CPrimitives_CEdgeTransitionLocation* value);
    HRESULT (STDMETHODCALLTYPE* put_Edge)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPaneThemeTransition* This,
        enum __x_ABI_CWindows_CUI_CXaml_CControls_CPrimitives_CEdgeTransitionLocation value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPaneThemeTransitionVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPaneThemeTransition
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPaneThemeTransitionVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPaneThemeTransition;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPaneThemeTransition_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPaneThemeTransitionStatics_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPaneThemeTransitionStatics_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPaneThemeTransitionStaticsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPaneThemeTransitionStatics* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPaneThemeTransitionStatics* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPaneThemeTransitionStatics* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPaneThemeTransitionStatics* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPaneThemeTransitionStatics* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPaneThemeTransitionStatics* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_EdgeProperty)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPaneThemeTransitionStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPaneThemeTransitionStaticsVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPaneThemeTransitionStatics
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPaneThemeTransitionStaticsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPaneThemeTransitionStatics;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPaneThemeTransitionStatics_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPointAnimation_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPointAnimation_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPointAnimationVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPointAnimation* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPointAnimation* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPointAnimation* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPointAnimation* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPointAnimation* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPointAnimation* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_From)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPointAnimation* This,
        __x_ABI_C__FIReference_1___x_ABI_CWindows__CFoundation__CPoint** value);
    HRESULT (STDMETHODCALLTYPE* put_From)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPointAnimation* This,
        __x_ABI_C__FIReference_1___x_ABI_CWindows__CFoundation__CPoint* value);
    HRESULT (STDMETHODCALLTYPE* get_To)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPointAnimation* This,
        __x_ABI_C__FIReference_1___x_ABI_CWindows__CFoundation__CPoint** value);
    HRESULT (STDMETHODCALLTYPE* put_To)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPointAnimation* This,
        __x_ABI_C__FIReference_1___x_ABI_CWindows__CFoundation__CPoint* value);
    HRESULT (STDMETHODCALLTYPE* get_By)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPointAnimation* This,
        __x_ABI_C__FIReference_1___x_ABI_CWindows__CFoundation__CPoint** value);
    HRESULT (STDMETHODCALLTYPE* put_By)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPointAnimation* This,
        __x_ABI_C__FIReference_1___x_ABI_CWindows__CFoundation__CPoint* value);
    HRESULT (STDMETHODCALLTYPE* get_EasingFunction)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPointAnimation* This,
        __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIEasingFunctionBase** value);
    HRESULT (STDMETHODCALLTYPE* put_EasingFunction)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPointAnimation* This,
        __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIEasingFunctionBase* value);
    HRESULT (STDMETHODCALLTYPE* get_EnableDependentAnimation)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPointAnimation* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* put_EnableDependentAnimation)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPointAnimation* This,
        boolean value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPointAnimationVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPointAnimation
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPointAnimationVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPointAnimation;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPointAnimation_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPointAnimationStatics_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPointAnimationStatics_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPointAnimationStaticsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPointAnimationStatics* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPointAnimationStatics* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPointAnimationStatics* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPointAnimationStatics* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPointAnimationStatics* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPointAnimationStatics* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_FromProperty)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPointAnimationStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_ToProperty)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPointAnimationStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_ByProperty)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPointAnimationStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_EasingFunctionProperty)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPointAnimationStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_EnableDependentAnimationProperty)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPointAnimationStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPointAnimationStaticsVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPointAnimationStatics
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPointAnimationStaticsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPointAnimationStatics;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPointAnimationStatics_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPointAnimationUsingKeyFrames_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPointAnimationUsingKeyFrames_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPointAnimationUsingKeyFramesVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPointAnimationUsingKeyFrames* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPointAnimationUsingKeyFrames* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPointAnimationUsingKeyFrames* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPointAnimationUsingKeyFrames* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPointAnimationUsingKeyFrames* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPointAnimationUsingKeyFrames* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_KeyFrames)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPointAnimationUsingKeyFrames* This,
        __x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CXaml__CMedia__CAnimation__CPointKeyFrame** value);
    HRESULT (STDMETHODCALLTYPE* get_EnableDependentAnimation)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPointAnimationUsingKeyFrames* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* put_EnableDependentAnimation)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPointAnimationUsingKeyFrames* This,
        boolean value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPointAnimationUsingKeyFramesVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPointAnimationUsingKeyFrames
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPointAnimationUsingKeyFramesVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPointAnimationUsingKeyFrames;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPointAnimationUsingKeyFrames_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPointAnimationUsingKeyFramesStatics_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPointAnimationUsingKeyFramesStatics_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPointAnimationUsingKeyFramesStaticsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPointAnimationUsingKeyFramesStatics* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPointAnimationUsingKeyFramesStatics* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPointAnimationUsingKeyFramesStatics* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPointAnimationUsingKeyFramesStatics* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPointAnimationUsingKeyFramesStatics* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPointAnimationUsingKeyFramesStatics* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_EnableDependentAnimationProperty)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPointAnimationUsingKeyFramesStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPointAnimationUsingKeyFramesStaticsVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPointAnimationUsingKeyFramesStatics
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPointAnimationUsingKeyFramesStaticsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPointAnimationUsingKeyFramesStatics;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPointAnimationUsingKeyFramesStatics_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPointKeyFrame_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPointKeyFrame_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPointKeyFrameVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPointKeyFrame* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPointKeyFrame* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPointKeyFrame* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPointKeyFrame* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPointKeyFrame* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPointKeyFrame* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Value)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPointKeyFrame* This,
        struct __x_ABI_CWindows_CFoundation_CPoint* value);
    HRESULT (STDMETHODCALLTYPE* put_Value)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPointKeyFrame* This,
        struct __x_ABI_CWindows_CFoundation_CPoint value);
    HRESULT (STDMETHODCALLTYPE* get_KeyTime)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPointKeyFrame* This,
        struct __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CKeyTime* value);
    HRESULT (STDMETHODCALLTYPE* put_KeyTime)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPointKeyFrame* This,
        struct __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CKeyTime value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPointKeyFrameVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPointKeyFrame
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPointKeyFrameVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPointKeyFrame;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPointKeyFrame_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPointKeyFrameFactory_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPointKeyFrameFactory_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPointKeyFrameFactoryVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPointKeyFrameFactory* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPointKeyFrameFactory* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPointKeyFrameFactory* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPointKeyFrameFactory* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPointKeyFrameFactory* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPointKeyFrameFactory* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* CreateInstance)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPointKeyFrameFactory* This,
        IInspectable* baseInterface,
        IInspectable** innerInterface,
        __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPointKeyFrame** value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPointKeyFrameFactoryVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPointKeyFrameFactory
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPointKeyFrameFactoryVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPointKeyFrameFactory;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPointKeyFrameFactory_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPointKeyFrameStatics_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPointKeyFrameStatics_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPointKeyFrameStaticsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPointKeyFrameStatics* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPointKeyFrameStatics* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPointKeyFrameStatics* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPointKeyFrameStatics* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPointKeyFrameStatics* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPointKeyFrameStatics* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_ValueProperty)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPointKeyFrameStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_KeyTimeProperty)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPointKeyFrameStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPointKeyFrameStaticsVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPointKeyFrameStatics
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPointKeyFrameStaticsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPointKeyFrameStatics;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPointKeyFrameStatics_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPointerDownThemeAnimation_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPointerDownThemeAnimation_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPointerDownThemeAnimationVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPointerDownThemeAnimation* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPointerDownThemeAnimation* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPointerDownThemeAnimation* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPointerDownThemeAnimation* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPointerDownThemeAnimation* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPointerDownThemeAnimation* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_TargetName)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPointerDownThemeAnimation* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* put_TargetName)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPointerDownThemeAnimation* This,
        HSTRING value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPointerDownThemeAnimationVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPointerDownThemeAnimation
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPointerDownThemeAnimationVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPointerDownThemeAnimation;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPointerDownThemeAnimation_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPointerDownThemeAnimationStatics_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPointerDownThemeAnimationStatics_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPointerDownThemeAnimationStaticsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPointerDownThemeAnimationStatics* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPointerDownThemeAnimationStatics* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPointerDownThemeAnimationStatics* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPointerDownThemeAnimationStatics* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPointerDownThemeAnimationStatics* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPointerDownThemeAnimationStatics* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_TargetNameProperty)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPointerDownThemeAnimationStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPointerDownThemeAnimationStaticsVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPointerDownThemeAnimationStatics
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPointerDownThemeAnimationStaticsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPointerDownThemeAnimationStatics;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPointerDownThemeAnimationStatics_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPointerUpThemeAnimation_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPointerUpThemeAnimation_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPointerUpThemeAnimationVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPointerUpThemeAnimation* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPointerUpThemeAnimation* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPointerUpThemeAnimation* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPointerUpThemeAnimation* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPointerUpThemeAnimation* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPointerUpThemeAnimation* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_TargetName)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPointerUpThemeAnimation* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* put_TargetName)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPointerUpThemeAnimation* This,
        HSTRING value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPointerUpThemeAnimationVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPointerUpThemeAnimation
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPointerUpThemeAnimationVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPointerUpThemeAnimation;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPointerUpThemeAnimation_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPointerUpThemeAnimationStatics_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPointerUpThemeAnimationStatics_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPointerUpThemeAnimationStaticsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPointerUpThemeAnimationStatics* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPointerUpThemeAnimationStatics* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPointerUpThemeAnimationStatics* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPointerUpThemeAnimationStatics* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPointerUpThemeAnimationStatics* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPointerUpThemeAnimationStatics* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_TargetNameProperty)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPointerUpThemeAnimationStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPointerUpThemeAnimationStaticsVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPointerUpThemeAnimationStatics
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPointerUpThemeAnimationStaticsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPointerUpThemeAnimationStatics;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPointerUpThemeAnimationStatics_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPopInThemeAnimation_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPopInThemeAnimation_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPopInThemeAnimationVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPopInThemeAnimation* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPopInThemeAnimation* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPopInThemeAnimation* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPopInThemeAnimation* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPopInThemeAnimation* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPopInThemeAnimation* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_TargetName)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPopInThemeAnimation* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* put_TargetName)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPopInThemeAnimation* This,
        HSTRING value);
    HRESULT (STDMETHODCALLTYPE* get_FromHorizontalOffset)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPopInThemeAnimation* This,
        DOUBLE* value);
    HRESULT (STDMETHODCALLTYPE* put_FromHorizontalOffset)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPopInThemeAnimation* This,
        DOUBLE value);
    HRESULT (STDMETHODCALLTYPE* get_FromVerticalOffset)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPopInThemeAnimation* This,
        DOUBLE* value);
    HRESULT (STDMETHODCALLTYPE* put_FromVerticalOffset)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPopInThemeAnimation* This,
        DOUBLE value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPopInThemeAnimationVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPopInThemeAnimation
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPopInThemeAnimationVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPopInThemeAnimation;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPopInThemeAnimation_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPopInThemeAnimationStatics_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPopInThemeAnimationStatics_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPopInThemeAnimationStaticsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPopInThemeAnimationStatics* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPopInThemeAnimationStatics* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPopInThemeAnimationStatics* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPopInThemeAnimationStatics* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPopInThemeAnimationStatics* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPopInThemeAnimationStatics* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_TargetNameProperty)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPopInThemeAnimationStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_FromHorizontalOffsetProperty)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPopInThemeAnimationStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_FromVerticalOffsetProperty)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPopInThemeAnimationStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPopInThemeAnimationStaticsVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPopInThemeAnimationStatics
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPopInThemeAnimationStaticsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPopInThemeAnimationStatics;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPopInThemeAnimationStatics_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPopOutThemeAnimation_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPopOutThemeAnimation_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPopOutThemeAnimationVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPopOutThemeAnimation* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPopOutThemeAnimation* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPopOutThemeAnimation* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPopOutThemeAnimation* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPopOutThemeAnimation* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPopOutThemeAnimation* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_TargetName)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPopOutThemeAnimation* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* put_TargetName)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPopOutThemeAnimation* This,
        HSTRING value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPopOutThemeAnimationVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPopOutThemeAnimation
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPopOutThemeAnimationVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPopOutThemeAnimation;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPopOutThemeAnimation_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPopOutThemeAnimationStatics_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPopOutThemeAnimationStatics_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPopOutThemeAnimationStaticsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPopOutThemeAnimationStatics* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPopOutThemeAnimationStatics* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPopOutThemeAnimationStatics* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPopOutThemeAnimationStatics* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPopOutThemeAnimationStatics* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPopOutThemeAnimationStatics* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_TargetNameProperty)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPopOutThemeAnimationStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPopOutThemeAnimationStaticsVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPopOutThemeAnimationStatics
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPopOutThemeAnimationStaticsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPopOutThemeAnimationStatics;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPopOutThemeAnimationStatics_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPopupThemeTransition_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPopupThemeTransition_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPopupThemeTransitionVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPopupThemeTransition* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPopupThemeTransition* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPopupThemeTransition* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPopupThemeTransition* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPopupThemeTransition* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPopupThemeTransition* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_FromHorizontalOffset)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPopupThemeTransition* This,
        DOUBLE* value);
    HRESULT (STDMETHODCALLTYPE* put_FromHorizontalOffset)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPopupThemeTransition* This,
        DOUBLE value);
    HRESULT (STDMETHODCALLTYPE* get_FromVerticalOffset)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPopupThemeTransition* This,
        DOUBLE* value);
    HRESULT (STDMETHODCALLTYPE* put_FromVerticalOffset)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPopupThemeTransition* This,
        DOUBLE value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPopupThemeTransitionVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPopupThemeTransition
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPopupThemeTransitionVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPopupThemeTransition;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPopupThemeTransition_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPopupThemeTransitionStatics_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPopupThemeTransitionStatics_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPopupThemeTransitionStaticsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPopupThemeTransitionStatics* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPopupThemeTransitionStatics* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPopupThemeTransitionStatics* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPopupThemeTransitionStatics* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPopupThemeTransitionStatics* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPopupThemeTransitionStatics* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_FromHorizontalOffsetProperty)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPopupThemeTransitionStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_FromVerticalOffsetProperty)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPopupThemeTransitionStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPopupThemeTransitionStaticsVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPopupThemeTransitionStatics
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPopupThemeTransitionStaticsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPopupThemeTransitionStatics;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPopupThemeTransitionStatics_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPowerEase_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPowerEase_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPowerEaseVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPowerEase* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPowerEase* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPowerEase* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPowerEase* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPowerEase* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPowerEase* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Power)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPowerEase* This,
        DOUBLE* value);
    HRESULT (STDMETHODCALLTYPE* put_Power)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPowerEase* This,
        DOUBLE value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPowerEaseVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPowerEase
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPowerEaseVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPowerEase;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPowerEase_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPowerEaseStatics_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPowerEaseStatics_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPowerEaseStaticsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPowerEaseStatics* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPowerEaseStatics* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPowerEaseStatics* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPowerEaseStatics* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPowerEaseStatics* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPowerEaseStatics* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_PowerProperty)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPowerEaseStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPowerEaseStaticsVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPowerEaseStatics
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPowerEaseStaticsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPowerEaseStatics;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPowerEaseStatics_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIQuadraticEase_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIQuadraticEase_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIQuadraticEaseVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIQuadraticEase* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIQuadraticEase* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIQuadraticEase* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIQuadraticEase* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIQuadraticEase* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIQuadraticEase* This,
            TrustLevel* trustLevel);
    
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIQuadraticEaseVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIQuadraticEase
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIQuadraticEaseVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIQuadraticEase;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIQuadraticEase_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIQuarticEase_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIQuarticEase_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIQuarticEaseVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIQuarticEase* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIQuarticEase* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIQuarticEase* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIQuarticEase* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIQuarticEase* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIQuarticEase* This,
            TrustLevel* trustLevel);
    
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIQuarticEaseVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIQuarticEase
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIQuarticEaseVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIQuarticEase;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIQuarticEase_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIQuinticEase_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIQuinticEase_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIQuinticEaseVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIQuinticEase* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIQuinticEase* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIQuinticEase* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIQuinticEase* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIQuinticEase* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIQuinticEase* This,
            TrustLevel* trustLevel);
    
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIQuinticEaseVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIQuinticEase
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIQuinticEaseVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIQuinticEase;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIQuinticEase_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIReorderThemeTransition_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIReorderThemeTransition_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIReorderThemeTransitionVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIReorderThemeTransition* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIReorderThemeTransition* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIReorderThemeTransition* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIReorderThemeTransition* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIReorderThemeTransition* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIReorderThemeTransition* This,
            TrustLevel* trustLevel);
    
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIReorderThemeTransitionVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIReorderThemeTransition
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIReorderThemeTransitionVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIReorderThemeTransition;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIReorderThemeTransition_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIRepeatBehaviorHelper_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIRepeatBehaviorHelper_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIRepeatBehaviorHelperVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIRepeatBehaviorHelper* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIRepeatBehaviorHelper* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIRepeatBehaviorHelper* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIRepeatBehaviorHelper* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIRepeatBehaviorHelper* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIRepeatBehaviorHelper* This,
            TrustLevel* trustLevel);
    
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIRepeatBehaviorHelperVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIRepeatBehaviorHelper
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIRepeatBehaviorHelperVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIRepeatBehaviorHelper;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIRepeatBehaviorHelper_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIRepeatBehaviorHelperStatics_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIRepeatBehaviorHelperStatics_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIRepeatBehaviorHelperStaticsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIRepeatBehaviorHelperStatics* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIRepeatBehaviorHelperStatics* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIRepeatBehaviorHelperStatics* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIRepeatBehaviorHelperStatics* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIRepeatBehaviorHelperStatics* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIRepeatBehaviorHelperStatics* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Forever)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIRepeatBehaviorHelperStatics* This,
        struct __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CRepeatBehavior* value);
    HRESULT (STDMETHODCALLTYPE* FromCount)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIRepeatBehaviorHelperStatics* This,
        DOUBLE count,
        struct __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CRepeatBehavior* result);
    HRESULT (STDMETHODCALLTYPE* FromDuration)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIRepeatBehaviorHelperStatics* This,
        struct __x_ABI_CWindows_CFoundation_CTimeSpan duration,
        struct __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CRepeatBehavior* result);
    HRESULT (STDMETHODCALLTYPE* GetHasCount)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIRepeatBehaviorHelperStatics* This,
        struct __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CRepeatBehavior target,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* GetHasDuration)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIRepeatBehaviorHelperStatics* This,
        struct __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CRepeatBehavior target,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* Equals)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIRepeatBehaviorHelperStatics* This,
        struct __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CRepeatBehavior target,
        struct __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CRepeatBehavior value,
        boolean* result);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIRepeatBehaviorHelperStaticsVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIRepeatBehaviorHelperStatics
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIRepeatBehaviorHelperStaticsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIRepeatBehaviorHelperStatics;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIRepeatBehaviorHelperStatics_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIRepositionThemeAnimation_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIRepositionThemeAnimation_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIRepositionThemeAnimationVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIRepositionThemeAnimation* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIRepositionThemeAnimation* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIRepositionThemeAnimation* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIRepositionThemeAnimation* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIRepositionThemeAnimation* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIRepositionThemeAnimation* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_TargetName)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIRepositionThemeAnimation* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* put_TargetName)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIRepositionThemeAnimation* This,
        HSTRING value);
    HRESULT (STDMETHODCALLTYPE* get_FromHorizontalOffset)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIRepositionThemeAnimation* This,
        DOUBLE* value);
    HRESULT (STDMETHODCALLTYPE* put_FromHorizontalOffset)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIRepositionThemeAnimation* This,
        DOUBLE value);
    HRESULT (STDMETHODCALLTYPE* get_FromVerticalOffset)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIRepositionThemeAnimation* This,
        DOUBLE* value);
    HRESULT (STDMETHODCALLTYPE* put_FromVerticalOffset)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIRepositionThemeAnimation* This,
        DOUBLE value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIRepositionThemeAnimationVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIRepositionThemeAnimation
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIRepositionThemeAnimationVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIRepositionThemeAnimation;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIRepositionThemeAnimation_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIRepositionThemeAnimationStatics_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIRepositionThemeAnimationStatics_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIRepositionThemeAnimationStaticsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIRepositionThemeAnimationStatics* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIRepositionThemeAnimationStatics* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIRepositionThemeAnimationStatics* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIRepositionThemeAnimationStatics* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIRepositionThemeAnimationStatics* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIRepositionThemeAnimationStatics* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_TargetNameProperty)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIRepositionThemeAnimationStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_FromHorizontalOffsetProperty)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIRepositionThemeAnimationStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_FromVerticalOffsetProperty)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIRepositionThemeAnimationStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIRepositionThemeAnimationStaticsVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIRepositionThemeAnimationStatics
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIRepositionThemeAnimationStaticsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIRepositionThemeAnimationStatics;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIRepositionThemeAnimationStatics_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIRepositionThemeTransition_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIRepositionThemeTransition_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIRepositionThemeTransitionVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIRepositionThemeTransition* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIRepositionThemeTransition* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIRepositionThemeTransition* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIRepositionThemeTransition* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIRepositionThemeTransition* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIRepositionThemeTransition* This,
            TrustLevel* trustLevel);
    
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIRepositionThemeTransitionVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIRepositionThemeTransition
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIRepositionThemeTransitionVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIRepositionThemeTransition;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIRepositionThemeTransition_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIRepositionThemeTransition2_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIRepositionThemeTransition2_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIRepositionThemeTransition2Vtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIRepositionThemeTransition2* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIRepositionThemeTransition2* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIRepositionThemeTransition2* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIRepositionThemeTransition2* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIRepositionThemeTransition2* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIRepositionThemeTransition2* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_IsStaggeringEnabled)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIRepositionThemeTransition2* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* put_IsStaggeringEnabled)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIRepositionThemeTransition2* This,
        boolean value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIRepositionThemeTransition2Vtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIRepositionThemeTransition2
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIRepositionThemeTransition2Vtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIRepositionThemeTransition2;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIRepositionThemeTransition2_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIRepositionThemeTransitionStatics2_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIRepositionThemeTransitionStatics2_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIRepositionThemeTransitionStatics2Vtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIRepositionThemeTransitionStatics2* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIRepositionThemeTransitionStatics2* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIRepositionThemeTransitionStatics2* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIRepositionThemeTransitionStatics2* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIRepositionThemeTransitionStatics2* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIRepositionThemeTransitionStatics2* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_IsStaggeringEnabledProperty)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIRepositionThemeTransitionStatics2* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIRepositionThemeTransitionStatics2Vtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIRepositionThemeTransitionStatics2
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIRepositionThemeTransitionStatics2Vtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIRepositionThemeTransitionStatics2;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIRepositionThemeTransitionStatics2_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISineEase_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISineEase_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISineEaseVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISineEase* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISineEase* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISineEase* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISineEase* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISineEase* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISineEase* This,
            TrustLevel* trustLevel);
    
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISineEaseVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISineEase
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISineEaseVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISineEase;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISineEase_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISlideNavigationTransitionInfo_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISlideNavigationTransitionInfo_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISlideNavigationTransitionInfoVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISlideNavigationTransitionInfo* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISlideNavigationTransitionInfo* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISlideNavigationTransitionInfo* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISlideNavigationTransitionInfo* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISlideNavigationTransitionInfo* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISlideNavigationTransitionInfo* This,
            TrustLevel* trustLevel);
    
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISlideNavigationTransitionInfoVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISlideNavigationTransitionInfo
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISlideNavigationTransitionInfoVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISlideNavigationTransitionInfo;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISlideNavigationTransitionInfo_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISlideNavigationTransitionInfo2_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISlideNavigationTransitionInfo2_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISlideNavigationTransitionInfo2Vtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISlideNavigationTransitionInfo2* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISlideNavigationTransitionInfo2* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISlideNavigationTransitionInfo2* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISlideNavigationTransitionInfo2* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISlideNavigationTransitionInfo2* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISlideNavigationTransitionInfo2* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Effect)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISlideNavigationTransitionInfo2* This,
        enum __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CSlideNavigationTransitionEffect* value);
    HRESULT (STDMETHODCALLTYPE* put_Effect)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISlideNavigationTransitionInfo2* This,
        enum __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CSlideNavigationTransitionEffect value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISlideNavigationTransitionInfo2Vtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISlideNavigationTransitionInfo2
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISlideNavigationTransitionInfo2Vtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISlideNavigationTransitionInfo2;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISlideNavigationTransitionInfo2_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISlideNavigationTransitionInfoStatics2_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISlideNavigationTransitionInfoStatics2_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISlideNavigationTransitionInfoStatics2Vtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISlideNavigationTransitionInfoStatics2* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISlideNavigationTransitionInfoStatics2* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISlideNavigationTransitionInfoStatics2* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISlideNavigationTransitionInfoStatics2* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISlideNavigationTransitionInfoStatics2* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISlideNavigationTransitionInfoStatics2* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_EffectProperty)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISlideNavigationTransitionInfoStatics2* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISlideNavigationTransitionInfoStatics2Vtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISlideNavigationTransitionInfoStatics2
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISlideNavigationTransitionInfoStatics2Vtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISlideNavigationTransitionInfoStatics2;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISlideNavigationTransitionInfoStatics2_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISplineColorKeyFrame_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISplineColorKeyFrame_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISplineColorKeyFrameVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISplineColorKeyFrame* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISplineColorKeyFrame* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISplineColorKeyFrame* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISplineColorKeyFrame* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISplineColorKeyFrame* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISplineColorKeyFrame* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_KeySpline)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISplineColorKeyFrame* This,
        __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIKeySpline** value);
    HRESULT (STDMETHODCALLTYPE* put_KeySpline)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISplineColorKeyFrame* This,
        __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIKeySpline* value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISplineColorKeyFrameVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISplineColorKeyFrame
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISplineColorKeyFrameVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISplineColorKeyFrame;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISplineColorKeyFrame_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISplineColorKeyFrameStatics_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISplineColorKeyFrameStatics_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISplineColorKeyFrameStaticsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISplineColorKeyFrameStatics* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISplineColorKeyFrameStatics* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISplineColorKeyFrameStatics* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISplineColorKeyFrameStatics* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISplineColorKeyFrameStatics* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISplineColorKeyFrameStatics* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_KeySplineProperty)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISplineColorKeyFrameStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISplineColorKeyFrameStaticsVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISplineColorKeyFrameStatics
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISplineColorKeyFrameStaticsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISplineColorKeyFrameStatics;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISplineColorKeyFrameStatics_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISplineDoubleKeyFrame_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISplineDoubleKeyFrame_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISplineDoubleKeyFrameVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISplineDoubleKeyFrame* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISplineDoubleKeyFrame* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISplineDoubleKeyFrame* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISplineDoubleKeyFrame* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISplineDoubleKeyFrame* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISplineDoubleKeyFrame* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_KeySpline)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISplineDoubleKeyFrame* This,
        __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIKeySpline** value);
    HRESULT (STDMETHODCALLTYPE* put_KeySpline)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISplineDoubleKeyFrame* This,
        __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIKeySpline* value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISplineDoubleKeyFrameVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISplineDoubleKeyFrame
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISplineDoubleKeyFrameVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISplineDoubleKeyFrame;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISplineDoubleKeyFrame_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISplineDoubleKeyFrameStatics_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISplineDoubleKeyFrameStatics_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISplineDoubleKeyFrameStaticsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISplineDoubleKeyFrameStatics* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISplineDoubleKeyFrameStatics* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISplineDoubleKeyFrameStatics* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISplineDoubleKeyFrameStatics* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISplineDoubleKeyFrameStatics* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISplineDoubleKeyFrameStatics* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_KeySplineProperty)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISplineDoubleKeyFrameStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISplineDoubleKeyFrameStaticsVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISplineDoubleKeyFrameStatics
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISplineDoubleKeyFrameStaticsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISplineDoubleKeyFrameStatics;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISplineDoubleKeyFrameStatics_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISplinePointKeyFrame_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISplinePointKeyFrame_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISplinePointKeyFrameVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISplinePointKeyFrame* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISplinePointKeyFrame* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISplinePointKeyFrame* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISplinePointKeyFrame* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISplinePointKeyFrame* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISplinePointKeyFrame* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_KeySpline)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISplinePointKeyFrame* This,
        __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIKeySpline** value);
    HRESULT (STDMETHODCALLTYPE* put_KeySpline)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISplinePointKeyFrame* This,
        __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIKeySpline* value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISplinePointKeyFrameVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISplinePointKeyFrame
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISplinePointKeyFrameVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISplinePointKeyFrame;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISplinePointKeyFrame_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISplinePointKeyFrameStatics_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISplinePointKeyFrameStatics_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISplinePointKeyFrameStaticsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISplinePointKeyFrameStatics* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISplinePointKeyFrameStatics* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISplinePointKeyFrameStatics* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISplinePointKeyFrameStatics* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISplinePointKeyFrameStatics* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISplinePointKeyFrameStatics* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_KeySplineProperty)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISplinePointKeyFrameStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISplinePointKeyFrameStaticsVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISplinePointKeyFrameStatics
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISplinePointKeyFrameStaticsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISplinePointKeyFrameStatics;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISplinePointKeyFrameStatics_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISplitCloseThemeAnimation_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISplitCloseThemeAnimation_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISplitCloseThemeAnimationVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISplitCloseThemeAnimation* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISplitCloseThemeAnimation* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISplitCloseThemeAnimation* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISplitCloseThemeAnimation* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISplitCloseThemeAnimation* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISplitCloseThemeAnimation* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_OpenedTargetName)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISplitCloseThemeAnimation* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* put_OpenedTargetName)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISplitCloseThemeAnimation* This,
        HSTRING value);
    HRESULT (STDMETHODCALLTYPE* get_OpenedTarget)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISplitCloseThemeAnimation* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyObject** value);
    HRESULT (STDMETHODCALLTYPE* put_OpenedTarget)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISplitCloseThemeAnimation* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyObject* value);
    HRESULT (STDMETHODCALLTYPE* get_ClosedTargetName)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISplitCloseThemeAnimation* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* put_ClosedTargetName)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISplitCloseThemeAnimation* This,
        HSTRING value);
    HRESULT (STDMETHODCALLTYPE* get_ClosedTarget)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISplitCloseThemeAnimation* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyObject** value);
    HRESULT (STDMETHODCALLTYPE* put_ClosedTarget)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISplitCloseThemeAnimation* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyObject* value);
    HRESULT (STDMETHODCALLTYPE* get_ContentTargetName)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISplitCloseThemeAnimation* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* put_ContentTargetName)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISplitCloseThemeAnimation* This,
        HSTRING value);
    HRESULT (STDMETHODCALLTYPE* get_ContentTarget)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISplitCloseThemeAnimation* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyObject** value);
    HRESULT (STDMETHODCALLTYPE* put_ContentTarget)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISplitCloseThemeAnimation* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyObject* value);
    HRESULT (STDMETHODCALLTYPE* get_OpenedLength)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISplitCloseThemeAnimation* This,
        DOUBLE* value);
    HRESULT (STDMETHODCALLTYPE* put_OpenedLength)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISplitCloseThemeAnimation* This,
        DOUBLE value);
    HRESULT (STDMETHODCALLTYPE* get_ClosedLength)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISplitCloseThemeAnimation* This,
        DOUBLE* value);
    HRESULT (STDMETHODCALLTYPE* put_ClosedLength)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISplitCloseThemeAnimation* This,
        DOUBLE value);
    HRESULT (STDMETHODCALLTYPE* get_OffsetFromCenter)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISplitCloseThemeAnimation* This,
        DOUBLE* value);
    HRESULT (STDMETHODCALLTYPE* put_OffsetFromCenter)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISplitCloseThemeAnimation* This,
        DOUBLE value);
    HRESULT (STDMETHODCALLTYPE* get_ContentTranslationDirection)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISplitCloseThemeAnimation* This,
        enum __x_ABI_CWindows_CUI_CXaml_CControls_CPrimitives_CAnimationDirection* value);
    HRESULT (STDMETHODCALLTYPE* put_ContentTranslationDirection)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISplitCloseThemeAnimation* This,
        enum __x_ABI_CWindows_CUI_CXaml_CControls_CPrimitives_CAnimationDirection value);
    HRESULT (STDMETHODCALLTYPE* get_ContentTranslationOffset)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISplitCloseThemeAnimation* This,
        DOUBLE* value);
    HRESULT (STDMETHODCALLTYPE* put_ContentTranslationOffset)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISplitCloseThemeAnimation* This,
        DOUBLE value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISplitCloseThemeAnimationVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISplitCloseThemeAnimation
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISplitCloseThemeAnimationVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISplitCloseThemeAnimation;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISplitCloseThemeAnimation_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISplitCloseThemeAnimationStatics_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISplitCloseThemeAnimationStatics_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISplitCloseThemeAnimationStaticsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISplitCloseThemeAnimationStatics* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISplitCloseThemeAnimationStatics* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISplitCloseThemeAnimationStatics* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISplitCloseThemeAnimationStatics* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISplitCloseThemeAnimationStatics* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISplitCloseThemeAnimationStatics* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_OpenedTargetNameProperty)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISplitCloseThemeAnimationStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_OpenedTargetProperty)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISplitCloseThemeAnimationStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_ClosedTargetNameProperty)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISplitCloseThemeAnimationStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_ClosedTargetProperty)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISplitCloseThemeAnimationStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_ContentTargetNameProperty)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISplitCloseThemeAnimationStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_ContentTargetProperty)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISplitCloseThemeAnimationStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_OpenedLengthProperty)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISplitCloseThemeAnimationStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_ClosedLengthProperty)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISplitCloseThemeAnimationStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_OffsetFromCenterProperty)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISplitCloseThemeAnimationStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_ContentTranslationDirectionProperty)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISplitCloseThemeAnimationStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_ContentTranslationOffsetProperty)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISplitCloseThemeAnimationStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISplitCloseThemeAnimationStaticsVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISplitCloseThemeAnimationStatics
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISplitCloseThemeAnimationStaticsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISplitCloseThemeAnimationStatics;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISplitCloseThemeAnimationStatics_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISplitOpenThemeAnimation_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISplitOpenThemeAnimation_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISplitOpenThemeAnimationVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISplitOpenThemeAnimation* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISplitOpenThemeAnimation* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISplitOpenThemeAnimation* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISplitOpenThemeAnimation* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISplitOpenThemeAnimation* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISplitOpenThemeAnimation* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_OpenedTargetName)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISplitOpenThemeAnimation* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* put_OpenedTargetName)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISplitOpenThemeAnimation* This,
        HSTRING value);
    HRESULT (STDMETHODCALLTYPE* get_OpenedTarget)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISplitOpenThemeAnimation* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyObject** value);
    HRESULT (STDMETHODCALLTYPE* put_OpenedTarget)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISplitOpenThemeAnimation* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyObject* value);
    HRESULT (STDMETHODCALLTYPE* get_ClosedTargetName)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISplitOpenThemeAnimation* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* put_ClosedTargetName)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISplitOpenThemeAnimation* This,
        HSTRING value);
    HRESULT (STDMETHODCALLTYPE* get_ClosedTarget)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISplitOpenThemeAnimation* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyObject** value);
    HRESULT (STDMETHODCALLTYPE* put_ClosedTarget)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISplitOpenThemeAnimation* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyObject* value);
    HRESULT (STDMETHODCALLTYPE* get_ContentTargetName)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISplitOpenThemeAnimation* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* put_ContentTargetName)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISplitOpenThemeAnimation* This,
        HSTRING value);
    HRESULT (STDMETHODCALLTYPE* get_ContentTarget)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISplitOpenThemeAnimation* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyObject** value);
    HRESULT (STDMETHODCALLTYPE* put_ContentTarget)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISplitOpenThemeAnimation* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyObject* value);
    HRESULT (STDMETHODCALLTYPE* get_OpenedLength)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISplitOpenThemeAnimation* This,
        DOUBLE* value);
    HRESULT (STDMETHODCALLTYPE* put_OpenedLength)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISplitOpenThemeAnimation* This,
        DOUBLE value);
    HRESULT (STDMETHODCALLTYPE* get_ClosedLength)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISplitOpenThemeAnimation* This,
        DOUBLE* value);
    HRESULT (STDMETHODCALLTYPE* put_ClosedLength)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISplitOpenThemeAnimation* This,
        DOUBLE value);
    HRESULT (STDMETHODCALLTYPE* get_OffsetFromCenter)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISplitOpenThemeAnimation* This,
        DOUBLE* value);
    HRESULT (STDMETHODCALLTYPE* put_OffsetFromCenter)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISplitOpenThemeAnimation* This,
        DOUBLE value);
    HRESULT (STDMETHODCALLTYPE* get_ContentTranslationDirection)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISplitOpenThemeAnimation* This,
        enum __x_ABI_CWindows_CUI_CXaml_CControls_CPrimitives_CAnimationDirection* value);
    HRESULT (STDMETHODCALLTYPE* put_ContentTranslationDirection)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISplitOpenThemeAnimation* This,
        enum __x_ABI_CWindows_CUI_CXaml_CControls_CPrimitives_CAnimationDirection value);
    HRESULT (STDMETHODCALLTYPE* get_ContentTranslationOffset)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISplitOpenThemeAnimation* This,
        DOUBLE* value);
    HRESULT (STDMETHODCALLTYPE* put_ContentTranslationOffset)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISplitOpenThemeAnimation* This,
        DOUBLE value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISplitOpenThemeAnimationVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISplitOpenThemeAnimation
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISplitOpenThemeAnimationVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISplitOpenThemeAnimation;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISplitOpenThemeAnimation_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISplitOpenThemeAnimationStatics_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISplitOpenThemeAnimationStatics_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISplitOpenThemeAnimationStaticsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISplitOpenThemeAnimationStatics* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISplitOpenThemeAnimationStatics* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISplitOpenThemeAnimationStatics* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISplitOpenThemeAnimationStatics* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISplitOpenThemeAnimationStatics* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISplitOpenThemeAnimationStatics* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_OpenedTargetNameProperty)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISplitOpenThemeAnimationStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_OpenedTargetProperty)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISplitOpenThemeAnimationStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_ClosedTargetNameProperty)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISplitOpenThemeAnimationStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_ClosedTargetProperty)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISplitOpenThemeAnimationStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_ContentTargetNameProperty)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISplitOpenThemeAnimationStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_ContentTargetProperty)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISplitOpenThemeAnimationStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_OpenedLengthProperty)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISplitOpenThemeAnimationStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_ClosedLengthProperty)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISplitOpenThemeAnimationStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_OffsetFromCenterProperty)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISplitOpenThemeAnimationStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_ContentTranslationDirectionProperty)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISplitOpenThemeAnimationStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_ContentTranslationOffsetProperty)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISplitOpenThemeAnimationStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISplitOpenThemeAnimationStaticsVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISplitOpenThemeAnimationStatics
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISplitOpenThemeAnimationStaticsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISplitOpenThemeAnimationStatics;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISplitOpenThemeAnimationStatics_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIStoryboard_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIStoryboard_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIStoryboardVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIStoryboard* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIStoryboard* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIStoryboard* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIStoryboard* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIStoryboard* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIStoryboard* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Children)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIStoryboard* This,
        __x_ABI_C__FIVector_1___x_ABI_CWindows__CUI__CXaml__CMedia__CAnimation__CTimeline** value);
    HRESULT (STDMETHODCALLTYPE* Seek)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIStoryboard* This,
        struct __x_ABI_CWindows_CFoundation_CTimeSpan offset);
    HRESULT (STDMETHODCALLTYPE* Stop)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIStoryboard* This);
    HRESULT (STDMETHODCALLTYPE* Begin)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIStoryboard* This);
    HRESULT (STDMETHODCALLTYPE* Pause)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIStoryboard* This);
    HRESULT (STDMETHODCALLTYPE* Resume)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIStoryboard* This);
    HRESULT (STDMETHODCALLTYPE* GetCurrentState)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIStoryboard* This,
        enum __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CClockState* result);
    HRESULT (STDMETHODCALLTYPE* GetCurrentTime)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIStoryboard* This,
        struct __x_ABI_CWindows_CFoundation_CTimeSpan* result);
    HRESULT (STDMETHODCALLTYPE* SeekAlignedToLastTick)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIStoryboard* This,
        struct __x_ABI_CWindows_CFoundation_CTimeSpan offset);
    HRESULT (STDMETHODCALLTYPE* SkipToFill)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIStoryboard* This);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIStoryboardVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIStoryboard
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIStoryboardVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIStoryboard;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIStoryboard_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIStoryboardStatics_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIStoryboardStatics_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIStoryboardStaticsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIStoryboardStatics* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIStoryboardStatics* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIStoryboardStatics* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIStoryboardStatics* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIStoryboardStatics* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIStoryboardStatics* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_TargetPropertyProperty)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIStoryboardStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* GetTargetProperty)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIStoryboardStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CITimeline* element,
        HSTRING* result);
    HRESULT (STDMETHODCALLTYPE* SetTargetProperty)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIStoryboardStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CITimeline* element,
        HSTRING path);
    HRESULT (STDMETHODCALLTYPE* get_TargetNameProperty)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIStoryboardStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* GetTargetName)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIStoryboardStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CITimeline* element,
        HSTRING* result);
    HRESULT (STDMETHODCALLTYPE* SetTargetName)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIStoryboardStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CITimeline* element,
        HSTRING name);
    HRESULT (STDMETHODCALLTYPE* SetTarget)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIStoryboardStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CITimeline* timeline,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyObject* target);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIStoryboardStaticsVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIStoryboardStatics
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIStoryboardStaticsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIStoryboardStatics;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIStoryboardStatics_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISuppressNavigationTransitionInfo_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISuppressNavigationTransitionInfo_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISuppressNavigationTransitionInfoVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISuppressNavigationTransitionInfo* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISuppressNavigationTransitionInfo* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISuppressNavigationTransitionInfo* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISuppressNavigationTransitionInfo* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISuppressNavigationTransitionInfo* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISuppressNavigationTransitionInfo* This,
            TrustLevel* trustLevel);
    
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISuppressNavigationTransitionInfoVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISuppressNavigationTransitionInfo
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISuppressNavigationTransitionInfoVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISuppressNavigationTransitionInfo;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISuppressNavigationTransitionInfo_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISwipeBackThemeAnimation_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISwipeBackThemeAnimation_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISwipeBackThemeAnimationVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISwipeBackThemeAnimation* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISwipeBackThemeAnimation* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISwipeBackThemeAnimation* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISwipeBackThemeAnimation* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISwipeBackThemeAnimation* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISwipeBackThemeAnimation* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_TargetName)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISwipeBackThemeAnimation* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* put_TargetName)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISwipeBackThemeAnimation* This,
        HSTRING value);
    HRESULT (STDMETHODCALLTYPE* get_FromHorizontalOffset)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISwipeBackThemeAnimation* This,
        DOUBLE* value);
    HRESULT (STDMETHODCALLTYPE* put_FromHorizontalOffset)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISwipeBackThemeAnimation* This,
        DOUBLE value);
    HRESULT (STDMETHODCALLTYPE* get_FromVerticalOffset)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISwipeBackThemeAnimation* This,
        DOUBLE* value);
    HRESULT (STDMETHODCALLTYPE* put_FromVerticalOffset)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISwipeBackThemeAnimation* This,
        DOUBLE value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISwipeBackThemeAnimationVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISwipeBackThemeAnimation
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISwipeBackThemeAnimationVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISwipeBackThemeAnimation;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISwipeBackThemeAnimation_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISwipeBackThemeAnimationStatics_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISwipeBackThemeAnimationStatics_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISwipeBackThemeAnimationStaticsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISwipeBackThemeAnimationStatics* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISwipeBackThemeAnimationStatics* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISwipeBackThemeAnimationStatics* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISwipeBackThemeAnimationStatics* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISwipeBackThemeAnimationStatics* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISwipeBackThemeAnimationStatics* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_TargetNameProperty)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISwipeBackThemeAnimationStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_FromHorizontalOffsetProperty)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISwipeBackThemeAnimationStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_FromVerticalOffsetProperty)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISwipeBackThemeAnimationStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISwipeBackThemeAnimationStaticsVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISwipeBackThemeAnimationStatics
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISwipeBackThemeAnimationStaticsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISwipeBackThemeAnimationStatics;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISwipeBackThemeAnimationStatics_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISwipeHintThemeAnimation_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISwipeHintThemeAnimation_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISwipeHintThemeAnimationVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISwipeHintThemeAnimation* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISwipeHintThemeAnimation* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISwipeHintThemeAnimation* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISwipeHintThemeAnimation* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISwipeHintThemeAnimation* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISwipeHintThemeAnimation* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_TargetName)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISwipeHintThemeAnimation* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* put_TargetName)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISwipeHintThemeAnimation* This,
        HSTRING value);
    HRESULT (STDMETHODCALLTYPE* get_ToHorizontalOffset)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISwipeHintThemeAnimation* This,
        DOUBLE* value);
    HRESULT (STDMETHODCALLTYPE* put_ToHorizontalOffset)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISwipeHintThemeAnimation* This,
        DOUBLE value);
    HRESULT (STDMETHODCALLTYPE* get_ToVerticalOffset)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISwipeHintThemeAnimation* This,
        DOUBLE* value);
    HRESULT (STDMETHODCALLTYPE* put_ToVerticalOffset)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISwipeHintThemeAnimation* This,
        DOUBLE value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISwipeHintThemeAnimationVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISwipeHintThemeAnimation
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISwipeHintThemeAnimationVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISwipeHintThemeAnimation;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISwipeHintThemeAnimation_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISwipeHintThemeAnimationStatics_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISwipeHintThemeAnimationStatics_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISwipeHintThemeAnimationStaticsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISwipeHintThemeAnimationStatics* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISwipeHintThemeAnimationStatics* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISwipeHintThemeAnimationStatics* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISwipeHintThemeAnimationStatics* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISwipeHintThemeAnimationStatics* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISwipeHintThemeAnimationStatics* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_TargetNameProperty)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISwipeHintThemeAnimationStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_ToHorizontalOffsetProperty)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISwipeHintThemeAnimationStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_ToVerticalOffsetProperty)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISwipeHintThemeAnimationStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISwipeHintThemeAnimationStaticsVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISwipeHintThemeAnimationStatics
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISwipeHintThemeAnimationStaticsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISwipeHintThemeAnimationStatics;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISwipeHintThemeAnimationStatics_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CITimeline_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CITimeline_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CITimelineVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CITimeline* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CITimeline* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CITimeline* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CITimeline* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CITimeline* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CITimeline* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_AutoReverse)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CITimeline* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* put_AutoReverse)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CITimeline* This,
        boolean value);
    HRESULT (STDMETHODCALLTYPE* get_BeginTime)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CITimeline* This,
        __x_ABI_C__FIReference_1___x_ABI_CWindows__CFoundation__CTimeSpan** value);
    HRESULT (STDMETHODCALLTYPE* put_BeginTime)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CITimeline* This,
        __x_ABI_C__FIReference_1___x_ABI_CWindows__CFoundation__CTimeSpan* value);
    HRESULT (STDMETHODCALLTYPE* get_Duration)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CITimeline* This,
        struct __x_ABI_CWindows_CUI_CXaml_CDuration* value);
    HRESULT (STDMETHODCALLTYPE* put_Duration)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CITimeline* This,
        struct __x_ABI_CWindows_CUI_CXaml_CDuration value);
    HRESULT (STDMETHODCALLTYPE* get_SpeedRatio)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CITimeline* This,
        DOUBLE* value);
    HRESULT (STDMETHODCALLTYPE* put_SpeedRatio)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CITimeline* This,
        DOUBLE value);
    HRESULT (STDMETHODCALLTYPE* get_FillBehavior)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CITimeline* This,
        enum __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CFillBehavior* value);
    HRESULT (STDMETHODCALLTYPE* put_FillBehavior)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CITimeline* This,
        enum __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CFillBehavior value);
    HRESULT (STDMETHODCALLTYPE* get_RepeatBehavior)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CITimeline* This,
        struct __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CRepeatBehavior* value);
    HRESULT (STDMETHODCALLTYPE* put_RepeatBehavior)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CITimeline* This,
        struct __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CRepeatBehavior value);
    HRESULT (STDMETHODCALLTYPE* add_Completed)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CITimeline* This,
        __x_ABI_C__FIEventHandler_1_IInspectable* handler,
        EventRegistrationToken* token);
    HRESULT (STDMETHODCALLTYPE* remove_Completed)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CITimeline* This,
        EventRegistrationToken token);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CITimelineVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CITimeline
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CITimelineVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CITimeline;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CITimeline_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CITimelineFactory_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CITimelineFactory_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CITimelineFactoryVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CITimelineFactory* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CITimelineFactory* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CITimelineFactory* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CITimelineFactory* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CITimelineFactory* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CITimelineFactory* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* CreateInstance)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CITimelineFactory* This,
        IInspectable* baseInterface,
        IInspectable** innerInterface,
        __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CITimeline** value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CITimelineFactoryVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CITimelineFactory
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CITimelineFactoryVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CITimelineFactory;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CITimelineFactory_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CITimelineStatics_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CITimelineStatics_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CITimelineStaticsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CITimelineStatics* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CITimelineStatics* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CITimelineStatics* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CITimelineStatics* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CITimelineStatics* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CITimelineStatics* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_AllowDependentAnimations)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CITimelineStatics* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* put_AllowDependentAnimations)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CITimelineStatics* This,
        boolean value);
    HRESULT (STDMETHODCALLTYPE* get_AutoReverseProperty)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CITimelineStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_BeginTimeProperty)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CITimelineStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_DurationProperty)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CITimelineStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_SpeedRatioProperty)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CITimelineStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_FillBehaviorProperty)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CITimelineStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_RepeatBehaviorProperty)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CITimelineStatics* This,
        __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty** value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CITimelineStaticsVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CITimelineStatics
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CITimelineStaticsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CITimelineStatics;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CITimelineStatics_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CITransition_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CITransition_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CITransitionVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CITransition* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CITransition* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CITransition* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CITransition* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CITransition* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CITransition* This,
            TrustLevel* trustLevel);
    
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CITransitionVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CITransition
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CITransitionVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CITransition;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CITransition_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CITransitionFactory_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CITransitionFactory_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CITransitionFactoryVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CITransitionFactory* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CITransitionFactory* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CITransitionFactory* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CITransitionFactory* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CITransitionFactory* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CITransitionFactory* This,
            TrustLevel* trustLevel);
    
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CITransitionFactoryVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CITransitionFactory
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CITransitionFactoryVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CITransitionFactory;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CITransitionFactory_INTERFACE_DEFINED__) */
    
