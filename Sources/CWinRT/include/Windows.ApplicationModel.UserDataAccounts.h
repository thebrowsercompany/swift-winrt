// WARNING: Please don't edit this file. It was generated by Swift/WinRT v0.0.1

#pragma once
// Header files for imported files
#include <inspectable.h>
#include <EventToken.h>
#include <windowscontracts.h>
#include "Windows.Foundation.h"
#include "Windows.ApplicationModel.Appointments.h"
#include "Windows.ApplicationModel.Contacts.h"
#include "Windows.ApplicationModel.Email.h"
#include "Windows.ApplicationModel.UserDataTasks.h"
#include "Windows.Storage.Streams.h"
#include "Windows.System.h"
// Importing Collections header
#include "Windows.Foundation.Collections.h"

/* Forward Declarations */
#ifndef ____x_ABI_CWindows_CApplicationModel_CUserDataAccounts_CIUserDataAccount_FWD_DEFINED__
#define ____x_ABI_CWindows_CApplicationModel_CUserDataAccounts_CIUserDataAccount_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CApplicationModel_CUserDataAccounts_CIUserDataAccount __x_ABI_CWindows_CApplicationModel_CUserDataAccounts_CIUserDataAccount;

#endif // ____x_ABI_CWindows_CApplicationModel_CUserDataAccounts_CIUserDataAccount_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CApplicationModel_CUserDataAccounts_CIUserDataAccount2_FWD_DEFINED__
#define ____x_ABI_CWindows_CApplicationModel_CUserDataAccounts_CIUserDataAccount2_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CApplicationModel_CUserDataAccounts_CIUserDataAccount2 __x_ABI_CWindows_CApplicationModel_CUserDataAccounts_CIUserDataAccount2;

#endif // ____x_ABI_CWindows_CApplicationModel_CUserDataAccounts_CIUserDataAccount2_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CApplicationModel_CUserDataAccounts_CIUserDataAccount3_FWD_DEFINED__
#define ____x_ABI_CWindows_CApplicationModel_CUserDataAccounts_CIUserDataAccount3_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CApplicationModel_CUserDataAccounts_CIUserDataAccount3 __x_ABI_CWindows_CApplicationModel_CUserDataAccounts_CIUserDataAccount3;

#endif // ____x_ABI_CWindows_CApplicationModel_CUserDataAccounts_CIUserDataAccount3_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CApplicationModel_CUserDataAccounts_CIUserDataAccount4_FWD_DEFINED__
#define ____x_ABI_CWindows_CApplicationModel_CUserDataAccounts_CIUserDataAccount4_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CApplicationModel_CUserDataAccounts_CIUserDataAccount4 __x_ABI_CWindows_CApplicationModel_CUserDataAccounts_CIUserDataAccount4;

#endif // ____x_ABI_CWindows_CApplicationModel_CUserDataAccounts_CIUserDataAccount4_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CApplicationModel_CUserDataAccounts_CIUserDataAccountManagerForUser_FWD_DEFINED__
#define ____x_ABI_CWindows_CApplicationModel_CUserDataAccounts_CIUserDataAccountManagerForUser_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CApplicationModel_CUserDataAccounts_CIUserDataAccountManagerForUser __x_ABI_CWindows_CApplicationModel_CUserDataAccounts_CIUserDataAccountManagerForUser;

#endif // ____x_ABI_CWindows_CApplicationModel_CUserDataAccounts_CIUserDataAccountManagerForUser_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CApplicationModel_CUserDataAccounts_CIUserDataAccountManagerStatics_FWD_DEFINED__
#define ____x_ABI_CWindows_CApplicationModel_CUserDataAccounts_CIUserDataAccountManagerStatics_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CApplicationModel_CUserDataAccounts_CIUserDataAccountManagerStatics __x_ABI_CWindows_CApplicationModel_CUserDataAccounts_CIUserDataAccountManagerStatics;

#endif // ____x_ABI_CWindows_CApplicationModel_CUserDataAccounts_CIUserDataAccountManagerStatics_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CApplicationModel_CUserDataAccounts_CIUserDataAccountManagerStatics2_FWD_DEFINED__
#define ____x_ABI_CWindows_CApplicationModel_CUserDataAccounts_CIUserDataAccountManagerStatics2_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CApplicationModel_CUserDataAccounts_CIUserDataAccountManagerStatics2 __x_ABI_CWindows_CApplicationModel_CUserDataAccounts_CIUserDataAccountManagerStatics2;

#endif // ____x_ABI_CWindows_CApplicationModel_CUserDataAccounts_CIUserDataAccountManagerStatics2_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CApplicationModel_CUserDataAccounts_CIUserDataAccountStore_FWD_DEFINED__
#define ____x_ABI_CWindows_CApplicationModel_CUserDataAccounts_CIUserDataAccountStore_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CApplicationModel_CUserDataAccounts_CIUserDataAccountStore __x_ABI_CWindows_CApplicationModel_CUserDataAccounts_CIUserDataAccountStore;

#endif // ____x_ABI_CWindows_CApplicationModel_CUserDataAccounts_CIUserDataAccountStore_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CApplicationModel_CUserDataAccounts_CIUserDataAccountStore2_FWD_DEFINED__
#define ____x_ABI_CWindows_CApplicationModel_CUserDataAccounts_CIUserDataAccountStore2_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CApplicationModel_CUserDataAccounts_CIUserDataAccountStore2 __x_ABI_CWindows_CApplicationModel_CUserDataAccounts_CIUserDataAccountStore2;

#endif // ____x_ABI_CWindows_CApplicationModel_CUserDataAccounts_CIUserDataAccountStore2_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CApplicationModel_CUserDataAccounts_CIUserDataAccountStore3_FWD_DEFINED__
#define ____x_ABI_CWindows_CApplicationModel_CUserDataAccounts_CIUserDataAccountStore3_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CApplicationModel_CUserDataAccounts_CIUserDataAccountStore3 __x_ABI_CWindows_CApplicationModel_CUserDataAccounts_CIUserDataAccountStore3;

#endif // ____x_ABI_CWindows_CApplicationModel_CUserDataAccounts_CIUserDataAccountStore3_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CApplicationModel_CUserDataAccounts_CIUserDataAccountStoreChangedEventArgs_FWD_DEFINED__
#define ____x_ABI_CWindows_CApplicationModel_CUserDataAccounts_CIUserDataAccountStoreChangedEventArgs_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CApplicationModel_CUserDataAccounts_CIUserDataAccountStoreChangedEventArgs __x_ABI_CWindows_CApplicationModel_CUserDataAccounts_CIUserDataAccountStoreChangedEventArgs;

#endif // ____x_ABI_CWindows_CApplicationModel_CUserDataAccounts_CIUserDataAccountStoreChangedEventArgs_FWD_DEFINED__

// Parameterized interface forward declarations (C)

// Collection interface definitions

typedef interface __x_ABI_C__FIAsyncOperationCompletedHandler_1_HSTRING __x_ABI_C__FIAsyncOperationCompletedHandler_1_HSTRING;

#if !defined(____x_ABI_C__FIAsyncOperation_1_HSTRING_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIAsyncOperation_1_HSTRING_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIAsyncOperation_1_HSTRING __x_ABI_C__FIAsyncOperation_1_HSTRING;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIAsyncOperation_1_HSTRING;

    typedef struct __x_ABI_C__FIAsyncOperation_1_HSTRINGVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIAsyncOperation_1_HSTRING* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIAsyncOperation_1_HSTRING* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIAsyncOperation_1_HSTRING* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIAsyncOperation_1_HSTRING* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIAsyncOperation_1_HSTRING* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIAsyncOperation_1_HSTRING* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* put_Completed)(__x_ABI_C__FIAsyncOperation_1_HSTRING* This,
        __x_ABI_C__FIAsyncOperationCompletedHandler_1_HSTRING* handler);
    HRESULT (STDMETHODCALLTYPE* get_Completed)(__x_ABI_C__FIAsyncOperation_1_HSTRING* This,
        __x_ABI_C__FIAsyncOperationCompletedHandler_1_HSTRING** result);
    HRESULT (STDMETHODCALLTYPE* GetResults)(__x_ABI_C__FIAsyncOperation_1_HSTRING* This,
        HSTRING* result);

        END_INTERFACE
    } __x_ABI_C__FIAsyncOperation_1_HSTRINGVtbl;

    interface __x_ABI_C__FIAsyncOperation_1_HSTRING
    {
        CONST_VTBL struct __x_ABI_C__FIAsyncOperation_1_HSTRINGVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIAsyncOperation_1_HSTRING_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIAsyncOperationCompletedHandler_1_HSTRING_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIAsyncOperationCompletedHandler_1_HSTRING_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIAsyncOperationCompletedHandler_1_HSTRING __x_ABI_C__FIAsyncOperationCompletedHandler_1_HSTRING;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIAsyncOperationCompletedHandler_1_HSTRING;

    typedef struct __x_ABI_C__FIAsyncOperationCompletedHandler_1_HSTRINGVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIAsyncOperationCompletedHandler_1_HSTRING* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIAsyncOperationCompletedHandler_1_HSTRING* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIAsyncOperationCompletedHandler_1_HSTRING* This);
        HRESULT (STDMETHODCALLTYPE* Invoke)(__x_ABI_C__FIAsyncOperationCompletedHandler_1_HSTRING* This,
        __x_ABI_C__FIAsyncOperation_1_HSTRING* asyncInfo,
        enum __x_ABI_CWindows_CFoundation_CAsyncStatus asyncStatus);

        END_INTERFACE
    } __x_ABI_C__FIAsyncOperationCompletedHandler_1_HSTRINGVtbl;

    interface __x_ABI_C__FIAsyncOperationCompletedHandler_1_HSTRING
    {
        CONST_VTBL struct __x_ABI_C__FIAsyncOperationCompletedHandler_1_HSTRINGVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIAsyncOperationCompletedHandler_1_HSTRING_INTERFACE_DEFINED__
    
typedef interface __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CUserDataAccounts__CUserDataAccount __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CUserDataAccounts__CUserDataAccount;

#if !defined(____x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CUserDataAccounts__CUserDataAccount_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CUserDataAccounts__CUserDataAccount_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CUserDataAccounts__CUserDataAccount __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CUserDataAccounts__CUserDataAccount;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CUserDataAccounts__CUserDataAccount;

    typedef struct __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CUserDataAccounts__CUserDataAccountVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CUserDataAccounts__CUserDataAccount* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CUserDataAccounts__CUserDataAccount* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CUserDataAccounts__CUserDataAccount* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CUserDataAccounts__CUserDataAccount* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CUserDataAccounts__CUserDataAccount* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CUserDataAccounts__CUserDataAccount* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* put_Completed)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CUserDataAccounts__CUserDataAccount* This,
        __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CUserDataAccounts__CUserDataAccount* handler);
    HRESULT (STDMETHODCALLTYPE* get_Completed)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CUserDataAccounts__CUserDataAccount* This,
        __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CUserDataAccounts__CUserDataAccount** result);
    HRESULT (STDMETHODCALLTYPE* GetResults)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CUserDataAccounts__CUserDataAccount* This,
        __x_ABI_CWindows_CApplicationModel_CUserDataAccounts_CIUserDataAccount** result);

        END_INTERFACE
    } __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CUserDataAccounts__CUserDataAccountVtbl;

    interface __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CUserDataAccounts__CUserDataAccount
    {
        CONST_VTBL struct __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CUserDataAccounts__CUserDataAccountVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CUserDataAccounts__CUserDataAccount_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CUserDataAccounts__CUserDataAccount_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CUserDataAccounts__CUserDataAccount_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CUserDataAccounts__CUserDataAccount __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CUserDataAccounts__CUserDataAccount;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CUserDataAccounts__CUserDataAccount;

    typedef struct __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CUserDataAccounts__CUserDataAccountVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CUserDataAccounts__CUserDataAccount* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CUserDataAccounts__CUserDataAccount* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CUserDataAccounts__CUserDataAccount* This);
        HRESULT (STDMETHODCALLTYPE* Invoke)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CUserDataAccounts__CUserDataAccount* This,
        __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CUserDataAccounts__CUserDataAccount* asyncInfo,
        enum __x_ABI_CWindows_CFoundation_CAsyncStatus asyncStatus);

        END_INTERFACE
    } __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CUserDataAccounts__CUserDataAccountVtbl;

    interface __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CUserDataAccounts__CUserDataAccount
    {
        CONST_VTBL struct __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CUserDataAccounts__CUserDataAccountVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CUserDataAccounts__CUserDataAccount_INTERFACE_DEFINED__
    
typedef interface __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CUserDataAccounts__CUserDataAccountStore __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CUserDataAccounts__CUserDataAccountStore;

#if !defined(____x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CUserDataAccounts__CUserDataAccountStore_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CUserDataAccounts__CUserDataAccountStore_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CUserDataAccounts__CUserDataAccountStore __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CUserDataAccounts__CUserDataAccountStore;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CUserDataAccounts__CUserDataAccountStore;

    typedef struct __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CUserDataAccounts__CUserDataAccountStoreVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CUserDataAccounts__CUserDataAccountStore* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CUserDataAccounts__CUserDataAccountStore* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CUserDataAccounts__CUserDataAccountStore* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CUserDataAccounts__CUserDataAccountStore* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CUserDataAccounts__CUserDataAccountStore* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CUserDataAccounts__CUserDataAccountStore* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* put_Completed)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CUserDataAccounts__CUserDataAccountStore* This,
        __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CUserDataAccounts__CUserDataAccountStore* handler);
    HRESULT (STDMETHODCALLTYPE* get_Completed)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CUserDataAccounts__CUserDataAccountStore* This,
        __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CUserDataAccounts__CUserDataAccountStore** result);
    HRESULT (STDMETHODCALLTYPE* GetResults)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CUserDataAccounts__CUserDataAccountStore* This,
        __x_ABI_CWindows_CApplicationModel_CUserDataAccounts_CIUserDataAccountStore** result);

        END_INTERFACE
    } __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CUserDataAccounts__CUserDataAccountStoreVtbl;

    interface __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CUserDataAccounts__CUserDataAccountStore
    {
        CONST_VTBL struct __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CUserDataAccounts__CUserDataAccountStoreVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CUserDataAccounts__CUserDataAccountStore_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CUserDataAccounts__CUserDataAccountStore_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CUserDataAccounts__CUserDataAccountStore_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CUserDataAccounts__CUserDataAccountStore __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CUserDataAccounts__CUserDataAccountStore;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CUserDataAccounts__CUserDataAccountStore;

    typedef struct __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CUserDataAccounts__CUserDataAccountStoreVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CUserDataAccounts__CUserDataAccountStore* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CUserDataAccounts__CUserDataAccountStore* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CUserDataAccounts__CUserDataAccountStore* This);
        HRESULT (STDMETHODCALLTYPE* Invoke)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CUserDataAccounts__CUserDataAccountStore* This,
        __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CUserDataAccounts__CUserDataAccountStore* asyncInfo,
        enum __x_ABI_CWindows_CFoundation_CAsyncStatus asyncStatus);

        END_INTERFACE
    } __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CUserDataAccounts__CUserDataAccountStoreVtbl;

    interface __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CUserDataAccounts__CUserDataAccountStore
    {
        CONST_VTBL struct __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CUserDataAccounts__CUserDataAccountStoreVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CUserDataAccounts__CUserDataAccountStore_INTERFACE_DEFINED__
    
#ifndef ____x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointmentCalendar_FWD_DEFINED__
#define ____x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointmentCalendar_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointmentCalendar __x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointmentCalendar;

#endif // ____x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointmentCalendar_FWD_DEFINED__

#if !defined(____x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CAppointments__CAppointmentCalendar_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CAppointments__CAppointmentCalendar_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CAppointments__CAppointmentCalendar __x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CAppointments__CAppointmentCalendar;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CAppointments__CAppointmentCalendar;

    typedef struct __x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CAppointments__CAppointmentCalendarVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CAppointments__CAppointmentCalendar* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CAppointments__CAppointmentCalendar* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CAppointments__CAppointmentCalendar* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CAppointments__CAppointmentCalendar* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CAppointments__CAppointmentCalendar* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CAppointments__CAppointmentCalendar* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Current)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CAppointments__CAppointmentCalendar* This,
        __x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointmentCalendar** result);
    HRESULT (STDMETHODCALLTYPE* get_HasCurrent)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CAppointments__CAppointmentCalendar* This,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* MoveNext)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CAppointments__CAppointmentCalendar* This,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CAppointments__CAppointmentCalendar* This,
        UINT32 itemsLength,
        __x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointmentCalendar** items,
        UINT32* result);

        END_INTERFACE
    } __x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CAppointments__CAppointmentCalendarVtbl;

    interface __x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CAppointments__CAppointmentCalendar
    {
        CONST_VTBL struct __x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CAppointments__CAppointmentCalendarVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CAppointments__CAppointmentCalendar_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CAppointments__CAppointmentCalendar_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CAppointments__CAppointmentCalendar_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CAppointments__CAppointmentCalendar __x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CAppointments__CAppointmentCalendar;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CAppointments__CAppointmentCalendar;

    typedef struct __x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CAppointments__CAppointmentCalendarVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CAppointments__CAppointmentCalendar* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CAppointments__CAppointmentCalendar* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CAppointments__CAppointmentCalendar* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CAppointments__CAppointmentCalendar* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CAppointments__CAppointmentCalendar* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CAppointments__CAppointmentCalendar* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* First)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CAppointments__CAppointmentCalendar* This,
        __x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CAppointments__CAppointmentCalendar** result);

        END_INTERFACE
    } __x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CAppointments__CAppointmentCalendarVtbl;

    interface __x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CAppointments__CAppointmentCalendar
    {
        CONST_VTBL struct __x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CAppointments__CAppointmentCalendarVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CAppointments__CAppointmentCalendar_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CAppointments__CAppointmentCalendar_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CAppointments__CAppointmentCalendar_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CAppointments__CAppointmentCalendar __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CAppointments__CAppointmentCalendar;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CAppointments__CAppointmentCalendar;

    typedef struct __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CAppointments__CAppointmentCalendarVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CAppointments__CAppointmentCalendar* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CAppointments__CAppointmentCalendar* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CAppointments__CAppointmentCalendar* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CAppointments__CAppointmentCalendar* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CAppointments__CAppointmentCalendar* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CAppointments__CAppointmentCalendar* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* GetAt)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CAppointments__CAppointmentCalendar* This,
        UINT32 index,
        __x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointmentCalendar** result);
    HRESULT (STDMETHODCALLTYPE* get_Size)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CAppointments__CAppointmentCalendar* This,
        UINT32* result);
    HRESULT (STDMETHODCALLTYPE* IndexOf)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CAppointments__CAppointmentCalendar* This,
        __x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointmentCalendar* value,
        UINT32* index,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CAppointments__CAppointmentCalendar* This,
        UINT32 startIndex,
        UINT32 itemsLength,
        __x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointmentCalendar** items,
        UINT32* result);

        END_INTERFACE
    } __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CAppointments__CAppointmentCalendarVtbl;

    interface __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CAppointments__CAppointmentCalendar
    {
        CONST_VTBL struct __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CAppointments__CAppointmentCalendarVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CAppointments__CAppointmentCalendar_INTERFACE_DEFINED__
    
typedef interface __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CAppointments__CAppointmentCalendar __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CAppointments__CAppointmentCalendar;

#if !defined(____x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CAppointments__CAppointmentCalendar_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CAppointments__CAppointmentCalendar_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CAppointments__CAppointmentCalendar __x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CAppointments__CAppointmentCalendar;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CAppointments__CAppointmentCalendar;

    typedef struct __x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CAppointments__CAppointmentCalendarVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CAppointments__CAppointmentCalendar* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CAppointments__CAppointmentCalendar* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CAppointments__CAppointmentCalendar* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CAppointments__CAppointmentCalendar* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CAppointments__CAppointmentCalendar* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CAppointments__CAppointmentCalendar* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* put_Completed)(__x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CAppointments__CAppointmentCalendar* This,
        __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CAppointments__CAppointmentCalendar* handler);
    HRESULT (STDMETHODCALLTYPE* get_Completed)(__x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CAppointments__CAppointmentCalendar* This,
        __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CAppointments__CAppointmentCalendar** result);
    HRESULT (STDMETHODCALLTYPE* GetResults)(__x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CAppointments__CAppointmentCalendar* This,
        __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CAppointments__CAppointmentCalendar** result);

        END_INTERFACE
    } __x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CAppointments__CAppointmentCalendarVtbl;

    interface __x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CAppointments__CAppointmentCalendar
    {
        CONST_VTBL struct __x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CAppointments__CAppointmentCalendarVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CAppointments__CAppointmentCalendar_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CAppointments__CAppointmentCalendar_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CAppointments__CAppointmentCalendar_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CAppointments__CAppointmentCalendar __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CAppointments__CAppointmentCalendar;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CAppointments__CAppointmentCalendar;

    typedef struct __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CAppointments__CAppointmentCalendarVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CAppointments__CAppointmentCalendar* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CAppointments__CAppointmentCalendar* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CAppointments__CAppointmentCalendar* This);
        HRESULT (STDMETHODCALLTYPE* Invoke)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CAppointments__CAppointmentCalendar* This,
        __x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CAppointments__CAppointmentCalendar* asyncInfo,
        enum __x_ABI_CWindows_CFoundation_CAsyncStatus asyncStatus);

        END_INTERFACE
    } __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CAppointments__CAppointmentCalendarVtbl;

    interface __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CAppointments__CAppointmentCalendar
    {
        CONST_VTBL struct __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CAppointments__CAppointmentCalendarVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CAppointments__CAppointmentCalendar_INTERFACE_DEFINED__
    
#ifndef ____x_ABI_CWindows_CApplicationModel_CContacts_CIContactAnnotationList_FWD_DEFINED__
#define ____x_ABI_CWindows_CApplicationModel_CContacts_CIContactAnnotationList_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CApplicationModel_CContacts_CIContactAnnotationList __x_ABI_CWindows_CApplicationModel_CContacts_CIContactAnnotationList;

#endif // ____x_ABI_CWindows_CApplicationModel_CContacts_CIContactAnnotationList_FWD_DEFINED__

#if !defined(____x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactAnnotationList_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactAnnotationList_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactAnnotationList __x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactAnnotationList;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactAnnotationList;

    typedef struct __x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactAnnotationListVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactAnnotationList* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactAnnotationList* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactAnnotationList* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactAnnotationList* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactAnnotationList* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactAnnotationList* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Current)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactAnnotationList* This,
        __x_ABI_CWindows_CApplicationModel_CContacts_CIContactAnnotationList** result);
    HRESULT (STDMETHODCALLTYPE* get_HasCurrent)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactAnnotationList* This,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* MoveNext)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactAnnotationList* This,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactAnnotationList* This,
        UINT32 itemsLength,
        __x_ABI_CWindows_CApplicationModel_CContacts_CIContactAnnotationList** items,
        UINT32* result);

        END_INTERFACE
    } __x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactAnnotationListVtbl;

    interface __x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactAnnotationList
    {
        CONST_VTBL struct __x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactAnnotationListVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactAnnotationList_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactAnnotationList_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactAnnotationList_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactAnnotationList __x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactAnnotationList;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactAnnotationList;

    typedef struct __x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactAnnotationListVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactAnnotationList* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactAnnotationList* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactAnnotationList* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactAnnotationList* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactAnnotationList* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactAnnotationList* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* First)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactAnnotationList* This,
        __x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactAnnotationList** result);

        END_INTERFACE
    } __x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactAnnotationListVtbl;

    interface __x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactAnnotationList
    {
        CONST_VTBL struct __x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactAnnotationListVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactAnnotationList_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactAnnotationList_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactAnnotationList_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactAnnotationList __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactAnnotationList;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactAnnotationList;

    typedef struct __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactAnnotationListVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactAnnotationList* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactAnnotationList* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactAnnotationList* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactAnnotationList* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactAnnotationList* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactAnnotationList* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* GetAt)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactAnnotationList* This,
        UINT32 index,
        __x_ABI_CWindows_CApplicationModel_CContacts_CIContactAnnotationList** result);
    HRESULT (STDMETHODCALLTYPE* get_Size)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactAnnotationList* This,
        UINT32* result);
    HRESULT (STDMETHODCALLTYPE* IndexOf)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactAnnotationList* This,
        __x_ABI_CWindows_CApplicationModel_CContacts_CIContactAnnotationList* value,
        UINT32* index,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactAnnotationList* This,
        UINT32 startIndex,
        UINT32 itemsLength,
        __x_ABI_CWindows_CApplicationModel_CContacts_CIContactAnnotationList** items,
        UINT32* result);

        END_INTERFACE
    } __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactAnnotationListVtbl;

    interface __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactAnnotationList
    {
        CONST_VTBL struct __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactAnnotationListVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactAnnotationList_INTERFACE_DEFINED__
    
typedef interface __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactAnnotationList __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactAnnotationList;

#if !defined(____x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactAnnotationList_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactAnnotationList_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactAnnotationList __x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactAnnotationList;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactAnnotationList;

    typedef struct __x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactAnnotationListVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactAnnotationList* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactAnnotationList* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactAnnotationList* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactAnnotationList* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactAnnotationList* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactAnnotationList* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* put_Completed)(__x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactAnnotationList* This,
        __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactAnnotationList* handler);
    HRESULT (STDMETHODCALLTYPE* get_Completed)(__x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactAnnotationList* This,
        __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactAnnotationList** result);
    HRESULT (STDMETHODCALLTYPE* GetResults)(__x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactAnnotationList* This,
        __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactAnnotationList** result);

        END_INTERFACE
    } __x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactAnnotationListVtbl;

    interface __x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactAnnotationList
    {
        CONST_VTBL struct __x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactAnnotationListVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactAnnotationList_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactAnnotationList_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactAnnotationList_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactAnnotationList __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactAnnotationList;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactAnnotationList;

    typedef struct __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactAnnotationListVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactAnnotationList* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactAnnotationList* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactAnnotationList* This);
        HRESULT (STDMETHODCALLTYPE* Invoke)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactAnnotationList* This,
        __x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactAnnotationList* asyncInfo,
        enum __x_ABI_CWindows_CFoundation_CAsyncStatus asyncStatus);

        END_INTERFACE
    } __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactAnnotationListVtbl;

    interface __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactAnnotationList
    {
        CONST_VTBL struct __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactAnnotationListVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactAnnotationList_INTERFACE_DEFINED__
    
#ifndef ____x_ABI_CWindows_CApplicationModel_CContacts_CIContactGroup_FWD_DEFINED__
#define ____x_ABI_CWindows_CApplicationModel_CContacts_CIContactGroup_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CApplicationModel_CContacts_CIContactGroup __x_ABI_CWindows_CApplicationModel_CContacts_CIContactGroup;

#endif // ____x_ABI_CWindows_CApplicationModel_CContacts_CIContactGroup_FWD_DEFINED__

#if !defined(____x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactGroup_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactGroup_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactGroup __x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactGroup;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactGroup;

    typedef struct __x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactGroupVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactGroup* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactGroup* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactGroup* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactGroup* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactGroup* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactGroup* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Current)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactGroup* This,
        __x_ABI_CWindows_CApplicationModel_CContacts_CIContactGroup** result);
    HRESULT (STDMETHODCALLTYPE* get_HasCurrent)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactGroup* This,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* MoveNext)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactGroup* This,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactGroup* This,
        UINT32 itemsLength,
        __x_ABI_CWindows_CApplicationModel_CContacts_CIContactGroup** items,
        UINT32* result);

        END_INTERFACE
    } __x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactGroupVtbl;

    interface __x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactGroup
    {
        CONST_VTBL struct __x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactGroupVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactGroup_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactGroup_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactGroup_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactGroup __x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactGroup;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactGroup;

    typedef struct __x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactGroupVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactGroup* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactGroup* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactGroup* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactGroup* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactGroup* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactGroup* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* First)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactGroup* This,
        __x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactGroup** result);

        END_INTERFACE
    } __x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactGroupVtbl;

    interface __x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactGroup
    {
        CONST_VTBL struct __x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactGroupVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactGroup_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactGroup_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactGroup_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactGroup __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactGroup;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactGroup;

    typedef struct __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactGroupVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactGroup* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactGroup* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactGroup* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactGroup* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactGroup* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactGroup* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* GetAt)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactGroup* This,
        UINT32 index,
        __x_ABI_CWindows_CApplicationModel_CContacts_CIContactGroup** result);
    HRESULT (STDMETHODCALLTYPE* get_Size)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactGroup* This,
        UINT32* result);
    HRESULT (STDMETHODCALLTYPE* IndexOf)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactGroup* This,
        __x_ABI_CWindows_CApplicationModel_CContacts_CIContactGroup* value,
        UINT32* index,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactGroup* This,
        UINT32 startIndex,
        UINT32 itemsLength,
        __x_ABI_CWindows_CApplicationModel_CContacts_CIContactGroup** items,
        UINT32* result);

        END_INTERFACE
    } __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactGroupVtbl;

    interface __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactGroup
    {
        CONST_VTBL struct __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactGroupVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactGroup_INTERFACE_DEFINED__
    
typedef interface __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactGroup __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactGroup;

#if !defined(____x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactGroup_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactGroup_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactGroup __x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactGroup;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactGroup;

    typedef struct __x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactGroupVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactGroup* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactGroup* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactGroup* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactGroup* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactGroup* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactGroup* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* put_Completed)(__x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactGroup* This,
        __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactGroup* handler);
    HRESULT (STDMETHODCALLTYPE* get_Completed)(__x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactGroup* This,
        __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactGroup** result);
    HRESULT (STDMETHODCALLTYPE* GetResults)(__x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactGroup* This,
        __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactGroup** result);

        END_INTERFACE
    } __x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactGroupVtbl;

    interface __x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactGroup
    {
        CONST_VTBL struct __x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactGroupVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactGroup_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactGroup_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactGroup_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactGroup __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactGroup;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactGroup;

    typedef struct __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactGroupVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactGroup* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactGroup* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactGroup* This);
        HRESULT (STDMETHODCALLTYPE* Invoke)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactGroup* This,
        __x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactGroup* asyncInfo,
        enum __x_ABI_CWindows_CFoundation_CAsyncStatus asyncStatus);

        END_INTERFACE
    } __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactGroupVtbl;

    interface __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactGroup
    {
        CONST_VTBL struct __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactGroupVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactGroup_INTERFACE_DEFINED__
    
#ifndef ____x_ABI_CWindows_CApplicationModel_CContacts_CIContactList_FWD_DEFINED__
#define ____x_ABI_CWindows_CApplicationModel_CContacts_CIContactList_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CApplicationModel_CContacts_CIContactList __x_ABI_CWindows_CApplicationModel_CContacts_CIContactList;

#endif // ____x_ABI_CWindows_CApplicationModel_CContacts_CIContactList_FWD_DEFINED__

#if !defined(____x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactList_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactList_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactList __x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactList;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactList;

    typedef struct __x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactListVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactList* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactList* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactList* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactList* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactList* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactList* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Current)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactList* This,
        __x_ABI_CWindows_CApplicationModel_CContacts_CIContactList** result);
    HRESULT (STDMETHODCALLTYPE* get_HasCurrent)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactList* This,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* MoveNext)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactList* This,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactList* This,
        UINT32 itemsLength,
        __x_ABI_CWindows_CApplicationModel_CContacts_CIContactList** items,
        UINT32* result);

        END_INTERFACE
    } __x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactListVtbl;

    interface __x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactList
    {
        CONST_VTBL struct __x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactListVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactList_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactList_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactList_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactList __x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactList;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactList;

    typedef struct __x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactListVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactList* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactList* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactList* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactList* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactList* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactList* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* First)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactList* This,
        __x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactList** result);

        END_INTERFACE
    } __x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactListVtbl;

    interface __x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactList
    {
        CONST_VTBL struct __x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactListVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactList_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactList_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactList_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactList __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactList;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactList;

    typedef struct __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactListVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactList* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactList* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactList* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactList* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactList* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactList* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* GetAt)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactList* This,
        UINT32 index,
        __x_ABI_CWindows_CApplicationModel_CContacts_CIContactList** result);
    HRESULT (STDMETHODCALLTYPE* get_Size)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactList* This,
        UINT32* result);
    HRESULT (STDMETHODCALLTYPE* IndexOf)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactList* This,
        __x_ABI_CWindows_CApplicationModel_CContacts_CIContactList* value,
        UINT32* index,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactList* This,
        UINT32 startIndex,
        UINT32 itemsLength,
        __x_ABI_CWindows_CApplicationModel_CContacts_CIContactList** items,
        UINT32* result);

        END_INTERFACE
    } __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactListVtbl;

    interface __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactList
    {
        CONST_VTBL struct __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactListVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactList_INTERFACE_DEFINED__
    
typedef interface __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactList __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactList;

#if !defined(____x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactList_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactList_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactList __x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactList;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactList;

    typedef struct __x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactListVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactList* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactList* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactList* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactList* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactList* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactList* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* put_Completed)(__x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactList* This,
        __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactList* handler);
    HRESULT (STDMETHODCALLTYPE* get_Completed)(__x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactList* This,
        __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactList** result);
    HRESULT (STDMETHODCALLTYPE* GetResults)(__x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactList* This,
        __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactList** result);

        END_INTERFACE
    } __x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactListVtbl;

    interface __x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactList
    {
        CONST_VTBL struct __x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactListVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactList_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactList_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactList_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactList __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactList;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactList;

    typedef struct __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactListVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactList* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactList* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactList* This);
        HRESULT (STDMETHODCALLTYPE* Invoke)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactList* This,
        __x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactList* asyncInfo,
        enum __x_ABI_CWindows_CFoundation_CAsyncStatus asyncStatus);

        END_INTERFACE
    } __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactListVtbl;

    interface __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactList
    {
        CONST_VTBL struct __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactListVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactList_INTERFACE_DEFINED__
    
#ifndef ____x_ABI_CWindows_CApplicationModel_CEmail_CIEmailMailbox_FWD_DEFINED__
#define ____x_ABI_CWindows_CApplicationModel_CEmail_CIEmailMailbox_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CApplicationModel_CEmail_CIEmailMailbox __x_ABI_CWindows_CApplicationModel_CEmail_CIEmailMailbox;

#endif // ____x_ABI_CWindows_CApplicationModel_CEmail_CIEmailMailbox_FWD_DEFINED__

#if !defined(____x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailMailbox_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailMailbox_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailMailbox __x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailMailbox;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailMailbox;

    typedef struct __x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailMailboxVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailMailbox* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailMailbox* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailMailbox* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailMailbox* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailMailbox* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailMailbox* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Current)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailMailbox* This,
        __x_ABI_CWindows_CApplicationModel_CEmail_CIEmailMailbox** result);
    HRESULT (STDMETHODCALLTYPE* get_HasCurrent)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailMailbox* This,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* MoveNext)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailMailbox* This,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailMailbox* This,
        UINT32 itemsLength,
        __x_ABI_CWindows_CApplicationModel_CEmail_CIEmailMailbox** items,
        UINT32* result);

        END_INTERFACE
    } __x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailMailboxVtbl;

    interface __x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailMailbox
    {
        CONST_VTBL struct __x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailMailboxVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailMailbox_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailMailbox_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailMailbox_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailMailbox __x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailMailbox;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailMailbox;

    typedef struct __x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailMailboxVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailMailbox* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailMailbox* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailMailbox* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailMailbox* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailMailbox* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailMailbox* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* First)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailMailbox* This,
        __x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailMailbox** result);

        END_INTERFACE
    } __x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailMailboxVtbl;

    interface __x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailMailbox
    {
        CONST_VTBL struct __x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailMailboxVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailMailbox_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailMailbox_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailMailbox_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailMailbox __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailMailbox;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailMailbox;

    typedef struct __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailMailboxVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailMailbox* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailMailbox* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailMailbox* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailMailbox* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailMailbox* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailMailbox* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* GetAt)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailMailbox* This,
        UINT32 index,
        __x_ABI_CWindows_CApplicationModel_CEmail_CIEmailMailbox** result);
    HRESULT (STDMETHODCALLTYPE* get_Size)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailMailbox* This,
        UINT32* result);
    HRESULT (STDMETHODCALLTYPE* IndexOf)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailMailbox* This,
        __x_ABI_CWindows_CApplicationModel_CEmail_CIEmailMailbox* value,
        UINT32* index,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailMailbox* This,
        UINT32 startIndex,
        UINT32 itemsLength,
        __x_ABI_CWindows_CApplicationModel_CEmail_CIEmailMailbox** items,
        UINT32* result);

        END_INTERFACE
    } __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailMailboxVtbl;

    interface __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailMailbox
    {
        CONST_VTBL struct __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailMailboxVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailMailbox_INTERFACE_DEFINED__
    
typedef interface __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailMailbox __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailMailbox;

#if !defined(____x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailMailbox_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailMailbox_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailMailbox __x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailMailbox;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailMailbox;

    typedef struct __x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailMailboxVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailMailbox* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailMailbox* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailMailbox* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailMailbox* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailMailbox* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailMailbox* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* put_Completed)(__x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailMailbox* This,
        __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailMailbox* handler);
    HRESULT (STDMETHODCALLTYPE* get_Completed)(__x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailMailbox* This,
        __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailMailbox** result);
    HRESULT (STDMETHODCALLTYPE* GetResults)(__x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailMailbox* This,
        __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailMailbox** result);

        END_INTERFACE
    } __x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailMailboxVtbl;

    interface __x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailMailbox
    {
        CONST_VTBL struct __x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailMailboxVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailMailbox_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailMailbox_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailMailbox_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailMailbox __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailMailbox;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailMailbox;

    typedef struct __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailMailboxVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailMailbox* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailMailbox* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailMailbox* This);
        HRESULT (STDMETHODCALLTYPE* Invoke)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailMailbox* This,
        __x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailMailbox* asyncInfo,
        enum __x_ABI_CWindows_CFoundation_CAsyncStatus asyncStatus);

        END_INTERFACE
    } __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailMailboxVtbl;

    interface __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailMailbox
    {
        CONST_VTBL struct __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailMailboxVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailMailbox_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CUserDataAccounts__CUserDataAccount_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CUserDataAccounts__CUserDataAccount_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CUserDataAccounts__CUserDataAccount __x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CUserDataAccounts__CUserDataAccount;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CUserDataAccounts__CUserDataAccount;

    typedef struct __x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CUserDataAccounts__CUserDataAccountVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CUserDataAccounts__CUserDataAccount* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CUserDataAccounts__CUserDataAccount* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CUserDataAccounts__CUserDataAccount* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CUserDataAccounts__CUserDataAccount* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CUserDataAccounts__CUserDataAccount* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CUserDataAccounts__CUserDataAccount* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Current)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CUserDataAccounts__CUserDataAccount* This,
        __x_ABI_CWindows_CApplicationModel_CUserDataAccounts_CIUserDataAccount** result);
    HRESULT (STDMETHODCALLTYPE* get_HasCurrent)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CUserDataAccounts__CUserDataAccount* This,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* MoveNext)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CUserDataAccounts__CUserDataAccount* This,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CUserDataAccounts__CUserDataAccount* This,
        UINT32 itemsLength,
        __x_ABI_CWindows_CApplicationModel_CUserDataAccounts_CIUserDataAccount** items,
        UINT32* result);

        END_INTERFACE
    } __x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CUserDataAccounts__CUserDataAccountVtbl;

    interface __x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CUserDataAccounts__CUserDataAccount
    {
        CONST_VTBL struct __x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CUserDataAccounts__CUserDataAccountVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CUserDataAccounts__CUserDataAccount_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CUserDataAccounts__CUserDataAccount_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CUserDataAccounts__CUserDataAccount_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CUserDataAccounts__CUserDataAccount __x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CUserDataAccounts__CUserDataAccount;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CUserDataAccounts__CUserDataAccount;

    typedef struct __x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CUserDataAccounts__CUserDataAccountVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CUserDataAccounts__CUserDataAccount* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CUserDataAccounts__CUserDataAccount* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CUserDataAccounts__CUserDataAccount* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CUserDataAccounts__CUserDataAccount* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CUserDataAccounts__CUserDataAccount* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CUserDataAccounts__CUserDataAccount* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* First)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CUserDataAccounts__CUserDataAccount* This,
        __x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CUserDataAccounts__CUserDataAccount** result);

        END_INTERFACE
    } __x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CUserDataAccounts__CUserDataAccountVtbl;

    interface __x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CUserDataAccounts__CUserDataAccount
    {
        CONST_VTBL struct __x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CUserDataAccounts__CUserDataAccountVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CUserDataAccounts__CUserDataAccount_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CUserDataAccounts__CUserDataAccount_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CUserDataAccounts__CUserDataAccount_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CUserDataAccounts__CUserDataAccount __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CUserDataAccounts__CUserDataAccount;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CUserDataAccounts__CUserDataAccount;

    typedef struct __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CUserDataAccounts__CUserDataAccountVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CUserDataAccounts__CUserDataAccount* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CUserDataAccounts__CUserDataAccount* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CUserDataAccounts__CUserDataAccount* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CUserDataAccounts__CUserDataAccount* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CUserDataAccounts__CUserDataAccount* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CUserDataAccounts__CUserDataAccount* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* GetAt)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CUserDataAccounts__CUserDataAccount* This,
        UINT32 index,
        __x_ABI_CWindows_CApplicationModel_CUserDataAccounts_CIUserDataAccount** result);
    HRESULT (STDMETHODCALLTYPE* get_Size)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CUserDataAccounts__CUserDataAccount* This,
        UINT32* result);
    HRESULT (STDMETHODCALLTYPE* IndexOf)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CUserDataAccounts__CUserDataAccount* This,
        __x_ABI_CWindows_CApplicationModel_CUserDataAccounts_CIUserDataAccount* value,
        UINT32* index,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CUserDataAccounts__CUserDataAccount* This,
        UINT32 startIndex,
        UINT32 itemsLength,
        __x_ABI_CWindows_CApplicationModel_CUserDataAccounts_CIUserDataAccount** items,
        UINT32* result);

        END_INTERFACE
    } __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CUserDataAccounts__CUserDataAccountVtbl;

    interface __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CUserDataAccounts__CUserDataAccount
    {
        CONST_VTBL struct __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CUserDataAccounts__CUserDataAccountVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CUserDataAccounts__CUserDataAccount_INTERFACE_DEFINED__
    
typedef interface __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CUserDataAccounts__CUserDataAccount __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CUserDataAccounts__CUserDataAccount;

#if !defined(____x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CUserDataAccounts__CUserDataAccount_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CUserDataAccounts__CUserDataAccount_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CUserDataAccounts__CUserDataAccount __x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CUserDataAccounts__CUserDataAccount;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CUserDataAccounts__CUserDataAccount;

    typedef struct __x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CUserDataAccounts__CUserDataAccountVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CUserDataAccounts__CUserDataAccount* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CUserDataAccounts__CUserDataAccount* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CUserDataAccounts__CUserDataAccount* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CUserDataAccounts__CUserDataAccount* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CUserDataAccounts__CUserDataAccount* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CUserDataAccounts__CUserDataAccount* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* put_Completed)(__x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CUserDataAccounts__CUserDataAccount* This,
        __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CUserDataAccounts__CUserDataAccount* handler);
    HRESULT (STDMETHODCALLTYPE* get_Completed)(__x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CUserDataAccounts__CUserDataAccount* This,
        __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CUserDataAccounts__CUserDataAccount** result);
    HRESULT (STDMETHODCALLTYPE* GetResults)(__x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CUserDataAccounts__CUserDataAccount* This,
        __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CUserDataAccounts__CUserDataAccount** result);

        END_INTERFACE
    } __x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CUserDataAccounts__CUserDataAccountVtbl;

    interface __x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CUserDataAccounts__CUserDataAccount
    {
        CONST_VTBL struct __x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CUserDataAccounts__CUserDataAccountVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CUserDataAccounts__CUserDataAccount_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CUserDataAccounts__CUserDataAccount_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CUserDataAccounts__CUserDataAccount_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CUserDataAccounts__CUserDataAccount __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CUserDataAccounts__CUserDataAccount;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CUserDataAccounts__CUserDataAccount;

    typedef struct __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CUserDataAccounts__CUserDataAccountVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CUserDataAccounts__CUserDataAccount* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CUserDataAccounts__CUserDataAccount* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CUserDataAccounts__CUserDataAccount* This);
        HRESULT (STDMETHODCALLTYPE* Invoke)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CUserDataAccounts__CUserDataAccount* This,
        __x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CUserDataAccounts__CUserDataAccount* asyncInfo,
        enum __x_ABI_CWindows_CFoundation_CAsyncStatus asyncStatus);

        END_INTERFACE
    } __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CUserDataAccounts__CUserDataAccountVtbl;

    interface __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CUserDataAccounts__CUserDataAccount
    {
        CONST_VTBL struct __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CUserDataAccounts__CUserDataAccountVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CUserDataAccounts__CUserDataAccount_INTERFACE_DEFINED__
    
#ifndef ____x_ABI_CWindows_CApplicationModel_CUserDataTasks_CIUserDataTaskList_FWD_DEFINED__
#define ____x_ABI_CWindows_CApplicationModel_CUserDataTasks_CIUserDataTaskList_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CApplicationModel_CUserDataTasks_CIUserDataTaskList __x_ABI_CWindows_CApplicationModel_CUserDataTasks_CIUserDataTaskList;

#endif // ____x_ABI_CWindows_CApplicationModel_CUserDataTasks_CIUserDataTaskList_FWD_DEFINED__

#if !defined(____x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CUserDataTasks__CUserDataTaskList_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CUserDataTasks__CUserDataTaskList_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CUserDataTasks__CUserDataTaskList __x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CUserDataTasks__CUserDataTaskList;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CUserDataTasks__CUserDataTaskList;

    typedef struct __x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CUserDataTasks__CUserDataTaskListVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CUserDataTasks__CUserDataTaskList* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CUserDataTasks__CUserDataTaskList* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CUserDataTasks__CUserDataTaskList* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CUserDataTasks__CUserDataTaskList* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CUserDataTasks__CUserDataTaskList* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CUserDataTasks__CUserDataTaskList* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Current)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CUserDataTasks__CUserDataTaskList* This,
        __x_ABI_CWindows_CApplicationModel_CUserDataTasks_CIUserDataTaskList** result);
    HRESULT (STDMETHODCALLTYPE* get_HasCurrent)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CUserDataTasks__CUserDataTaskList* This,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* MoveNext)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CUserDataTasks__CUserDataTaskList* This,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CUserDataTasks__CUserDataTaskList* This,
        UINT32 itemsLength,
        __x_ABI_CWindows_CApplicationModel_CUserDataTasks_CIUserDataTaskList** items,
        UINT32* result);

        END_INTERFACE
    } __x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CUserDataTasks__CUserDataTaskListVtbl;

    interface __x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CUserDataTasks__CUserDataTaskList
    {
        CONST_VTBL struct __x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CUserDataTasks__CUserDataTaskListVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CUserDataTasks__CUserDataTaskList_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CUserDataTasks__CUserDataTaskList_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CUserDataTasks__CUserDataTaskList_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CUserDataTasks__CUserDataTaskList __x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CUserDataTasks__CUserDataTaskList;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CUserDataTasks__CUserDataTaskList;

    typedef struct __x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CUserDataTasks__CUserDataTaskListVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CUserDataTasks__CUserDataTaskList* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CUserDataTasks__CUserDataTaskList* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CUserDataTasks__CUserDataTaskList* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CUserDataTasks__CUserDataTaskList* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CUserDataTasks__CUserDataTaskList* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CUserDataTasks__CUserDataTaskList* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* First)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CUserDataTasks__CUserDataTaskList* This,
        __x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CUserDataTasks__CUserDataTaskList** result);

        END_INTERFACE
    } __x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CUserDataTasks__CUserDataTaskListVtbl;

    interface __x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CUserDataTasks__CUserDataTaskList
    {
        CONST_VTBL struct __x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CUserDataTasks__CUserDataTaskListVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CUserDataTasks__CUserDataTaskList_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CUserDataTasks__CUserDataTaskList_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CUserDataTasks__CUserDataTaskList_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CUserDataTasks__CUserDataTaskList __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CUserDataTasks__CUserDataTaskList;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CUserDataTasks__CUserDataTaskList;

    typedef struct __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CUserDataTasks__CUserDataTaskListVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CUserDataTasks__CUserDataTaskList* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CUserDataTasks__CUserDataTaskList* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CUserDataTasks__CUserDataTaskList* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CUserDataTasks__CUserDataTaskList* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CUserDataTasks__CUserDataTaskList* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CUserDataTasks__CUserDataTaskList* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* GetAt)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CUserDataTasks__CUserDataTaskList* This,
        UINT32 index,
        __x_ABI_CWindows_CApplicationModel_CUserDataTasks_CIUserDataTaskList** result);
    HRESULT (STDMETHODCALLTYPE* get_Size)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CUserDataTasks__CUserDataTaskList* This,
        UINT32* result);
    HRESULT (STDMETHODCALLTYPE* IndexOf)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CUserDataTasks__CUserDataTaskList* This,
        __x_ABI_CWindows_CApplicationModel_CUserDataTasks_CIUserDataTaskList* value,
        UINT32* index,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CUserDataTasks__CUserDataTaskList* This,
        UINT32 startIndex,
        UINT32 itemsLength,
        __x_ABI_CWindows_CApplicationModel_CUserDataTasks_CIUserDataTaskList** items,
        UINT32* result);

        END_INTERFACE
    } __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CUserDataTasks__CUserDataTaskListVtbl;

    interface __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CUserDataTasks__CUserDataTaskList
    {
        CONST_VTBL struct __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CUserDataTasks__CUserDataTaskListVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CUserDataTasks__CUserDataTaskList_INTERFACE_DEFINED__
    
typedef interface __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CUserDataTasks__CUserDataTaskList __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CUserDataTasks__CUserDataTaskList;

#if !defined(____x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CUserDataTasks__CUserDataTaskList_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CUserDataTasks__CUserDataTaskList_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CUserDataTasks__CUserDataTaskList __x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CUserDataTasks__CUserDataTaskList;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CUserDataTasks__CUserDataTaskList;

    typedef struct __x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CUserDataTasks__CUserDataTaskListVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CUserDataTasks__CUserDataTaskList* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CUserDataTasks__CUserDataTaskList* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CUserDataTasks__CUserDataTaskList* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CUserDataTasks__CUserDataTaskList* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CUserDataTasks__CUserDataTaskList* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CUserDataTasks__CUserDataTaskList* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* put_Completed)(__x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CUserDataTasks__CUserDataTaskList* This,
        __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CUserDataTasks__CUserDataTaskList* handler);
    HRESULT (STDMETHODCALLTYPE* get_Completed)(__x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CUserDataTasks__CUserDataTaskList* This,
        __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CUserDataTasks__CUserDataTaskList** result);
    HRESULT (STDMETHODCALLTYPE* GetResults)(__x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CUserDataTasks__CUserDataTaskList* This,
        __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CUserDataTasks__CUserDataTaskList** result);

        END_INTERFACE
    } __x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CUserDataTasks__CUserDataTaskListVtbl;

    interface __x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CUserDataTasks__CUserDataTaskList
    {
        CONST_VTBL struct __x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CUserDataTasks__CUserDataTaskListVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CUserDataTasks__CUserDataTaskList_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CUserDataTasks__CUserDataTaskList_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CUserDataTasks__CUserDataTaskList_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CUserDataTasks__CUserDataTaskList __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CUserDataTasks__CUserDataTaskList;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CUserDataTasks__CUserDataTaskList;

    typedef struct __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CUserDataTasks__CUserDataTaskListVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CUserDataTasks__CUserDataTaskList* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CUserDataTasks__CUserDataTaskList* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CUserDataTasks__CUserDataTaskList* This);
        HRESULT (STDMETHODCALLTYPE* Invoke)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CUserDataTasks__CUserDataTaskList* This,
        __x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CUserDataTasks__CUserDataTaskList* asyncInfo,
        enum __x_ABI_CWindows_CFoundation_CAsyncStatus asyncStatus);

        END_INTERFACE
    } __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CUserDataTasks__CUserDataTaskListVtbl;

    interface __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CUserDataTasks__CUserDataTaskList
    {
        CONST_VTBL struct __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CUserDataTasks__CUserDataTaskListVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CUserDataTasks__CUserDataTaskList_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIIterator_1_HSTRING_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIIterator_1_HSTRING_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIIterator_1_HSTRING __x_ABI_C__FIIterator_1_HSTRING;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIIterator_1_HSTRING;

    typedef struct __x_ABI_C__FIIterator_1_HSTRINGVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIIterator_1_HSTRING* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIIterator_1_HSTRING* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIIterator_1_HSTRING* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIIterator_1_HSTRING* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIIterator_1_HSTRING* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIIterator_1_HSTRING* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Current)(__x_ABI_C__FIIterator_1_HSTRING* This,
        HSTRING* result);
    HRESULT (STDMETHODCALLTYPE* get_HasCurrent)(__x_ABI_C__FIIterator_1_HSTRING* This,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* MoveNext)(__x_ABI_C__FIIterator_1_HSTRING* This,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__x_ABI_C__FIIterator_1_HSTRING* This,
        UINT32 itemsLength,
        HSTRING* items,
        UINT32* result);

        END_INTERFACE
    } __x_ABI_C__FIIterator_1_HSTRINGVtbl;

    interface __x_ABI_C__FIIterator_1_HSTRING
    {
        CONST_VTBL struct __x_ABI_C__FIIterator_1_HSTRINGVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIIterator_1_HSTRING_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIIterable_1_HSTRING_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIIterable_1_HSTRING_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIIterable_1_HSTRING __x_ABI_C__FIIterable_1_HSTRING;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIIterable_1_HSTRING;

    typedef struct __x_ABI_C__FIIterable_1_HSTRINGVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIIterable_1_HSTRING* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIIterable_1_HSTRING* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIIterable_1_HSTRING* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIIterable_1_HSTRING* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIIterable_1_HSTRING* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIIterable_1_HSTRING* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* First)(__x_ABI_C__FIIterable_1_HSTRING* This,
        __x_ABI_C__FIIterator_1_HSTRING** result);

        END_INTERFACE
    } __x_ABI_C__FIIterable_1_HSTRINGVtbl;

    interface __x_ABI_C__FIIterable_1_HSTRING
    {
        CONST_VTBL struct __x_ABI_C__FIIterable_1_HSTRINGVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIIterable_1_HSTRING_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIVectorView_1_HSTRING_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIVectorView_1_HSTRING_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIVectorView_1_HSTRING __x_ABI_C__FIVectorView_1_HSTRING;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIVectorView_1_HSTRING;

    typedef struct __x_ABI_C__FIVectorView_1_HSTRINGVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIVectorView_1_HSTRING* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIVectorView_1_HSTRING* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIVectorView_1_HSTRING* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIVectorView_1_HSTRING* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIVectorView_1_HSTRING* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIVectorView_1_HSTRING* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* GetAt)(__x_ABI_C__FIVectorView_1_HSTRING* This,
        UINT32 index,
        HSTRING* result);
    HRESULT (STDMETHODCALLTYPE* get_Size)(__x_ABI_C__FIVectorView_1_HSTRING* This,
        UINT32* result);
    HRESULT (STDMETHODCALLTYPE* IndexOf)(__x_ABI_C__FIVectorView_1_HSTRING* This,
        HSTRING value,
        UINT32* index,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__x_ABI_C__FIVectorView_1_HSTRING* This,
        UINT32 startIndex,
        UINT32 itemsLength,
        HSTRING* items,
        UINT32* result);

        END_INTERFACE
    } __x_ABI_C__FIVectorView_1_HSTRINGVtbl;

    interface __x_ABI_C__FIVectorView_1_HSTRING
    {
        CONST_VTBL struct __x_ABI_C__FIVectorView_1_HSTRINGVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIVectorView_1_HSTRING_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIVector_1_HSTRING_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIVector_1_HSTRING_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIVector_1_HSTRING __x_ABI_C__FIVector_1_HSTRING;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIVector_1_HSTRING;

    typedef struct __x_ABI_C__FIVector_1_HSTRINGVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIVector_1_HSTRING* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIVector_1_HSTRING* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIVector_1_HSTRING* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIVector_1_HSTRING* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIVector_1_HSTRING* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIVector_1_HSTRING* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* GetAt)(__x_ABI_C__FIVector_1_HSTRING* This,
        UINT32 index,
        HSTRING* result);
    HRESULT (STDMETHODCALLTYPE* get_Size)(__x_ABI_C__FIVector_1_HSTRING* This,
        UINT32* result);
    HRESULT (STDMETHODCALLTYPE* GetView)(__x_ABI_C__FIVector_1_HSTRING* This,
        __x_ABI_C__FIVectorView_1_HSTRING** result);
    HRESULT (STDMETHODCALLTYPE* IndexOf)(__x_ABI_C__FIVector_1_HSTRING* This,
        HSTRING value,
        UINT32* index,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* SetAt)(__x_ABI_C__FIVector_1_HSTRING* This,
        UINT32 index,
        HSTRING value);
    HRESULT (STDMETHODCALLTYPE* InsertAt)(__x_ABI_C__FIVector_1_HSTRING* This,
        UINT32 index,
        HSTRING value);
    HRESULT (STDMETHODCALLTYPE* RemoveAt)(__x_ABI_C__FIVector_1_HSTRING* This,
        UINT32 index);
    HRESULT (STDMETHODCALLTYPE* Append)(__x_ABI_C__FIVector_1_HSTRING* This,
        HSTRING value);
    HRESULT (STDMETHODCALLTYPE* RemoveAtEnd)(__x_ABI_C__FIVector_1_HSTRING* This);
    HRESULT (STDMETHODCALLTYPE* Clear)(__x_ABI_C__FIVector_1_HSTRING* This);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__x_ABI_C__FIVector_1_HSTRING* This,
        UINT32 startIndex,
        UINT32 itemsLength,
        HSTRING* items,
        UINT32* result);
    HRESULT (STDMETHODCALLTYPE* ReplaceAll)(__x_ABI_C__FIVector_1_HSTRING* This,
        UINT32 itemsLength,
        HSTRING* items);

        END_INTERFACE
    } __x_ABI_C__FIVector_1_HSTRINGVtbl;

    interface __x_ABI_C__FIVector_1_HSTRING
    {
        CONST_VTBL struct __x_ABI_C__FIVector_1_HSTRINGVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIVector_1_HSTRING_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CApplicationModel__CUserDataAccounts__CUserDataAccountStore___x_ABI_CWindows__CApplicationModel__CUserDataAccounts__CUserDataAccountStoreChangedEventArgs_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CApplicationModel__CUserDataAccounts__CUserDataAccountStore___x_ABI_CWindows__CApplicationModel__CUserDataAccounts__CUserDataAccountStoreChangedEventArgs_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CApplicationModel__CUserDataAccounts__CUserDataAccountStore___x_ABI_CWindows__CApplicationModel__CUserDataAccounts__CUserDataAccountStoreChangedEventArgs __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CApplicationModel__CUserDataAccounts__CUserDataAccountStore___x_ABI_CWindows__CApplicationModel__CUserDataAccounts__CUserDataAccountStoreChangedEventArgs;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CApplicationModel__CUserDataAccounts__CUserDataAccountStore___x_ABI_CWindows__CApplicationModel__CUserDataAccounts__CUserDataAccountStoreChangedEventArgs;

    typedef struct __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CApplicationModel__CUserDataAccounts__CUserDataAccountStore___x_ABI_CWindows__CApplicationModel__CUserDataAccounts__CUserDataAccountStoreChangedEventArgsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CApplicationModel__CUserDataAccounts__CUserDataAccountStore___x_ABI_CWindows__CApplicationModel__CUserDataAccounts__CUserDataAccountStoreChangedEventArgs* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CApplicationModel__CUserDataAccounts__CUserDataAccountStore___x_ABI_CWindows__CApplicationModel__CUserDataAccounts__CUserDataAccountStoreChangedEventArgs* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CApplicationModel__CUserDataAccounts__CUserDataAccountStore___x_ABI_CWindows__CApplicationModel__CUserDataAccounts__CUserDataAccountStoreChangedEventArgs* This);
        HRESULT (STDMETHODCALLTYPE* Invoke)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CApplicationModel__CUserDataAccounts__CUserDataAccountStore___x_ABI_CWindows__CApplicationModel__CUserDataAccounts__CUserDataAccountStoreChangedEventArgs* This,
        __x_ABI_CWindows_CApplicationModel_CUserDataAccounts_CIUserDataAccountStore* sender,
        __x_ABI_CWindows_CApplicationModel_CUserDataAccounts_CIUserDataAccountStoreChangedEventArgs* args);

        END_INTERFACE
    } __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CApplicationModel__CUserDataAccounts__CUserDataAccountStore___x_ABI_CWindows__CApplicationModel__CUserDataAccounts__CUserDataAccountStoreChangedEventArgsVtbl;

    interface __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CApplicationModel__CUserDataAccounts__CUserDataAccountStore___x_ABI_CWindows__CApplicationModel__CUserDataAccounts__CUserDataAccountStoreChangedEventArgs
    {
        CONST_VTBL struct __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CApplicationModel__CUserDataAccounts__CUserDataAccountStore___x_ABI_CWindows__CApplicationModel__CUserDataAccounts__CUserDataAccountStoreChangedEventArgsVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CApplicationModel__CUserDataAccounts__CUserDataAccountStore___x_ABI_CWindows__CApplicationModel__CUserDataAccounts__CUserDataAccountStoreChangedEventArgs_INTERFACE_DEFINED__
    
typedef enum __x_ABI_CWindows_CFoundation_CAsyncStatus __x_ABI_CWindows_CFoundation_CAsyncStatus;

#ifndef ____x_ABI_CWindows_CFoundation_CCollections_CIPropertySet_FWD_DEFINED__
#define ____x_ABI_CWindows_CFoundation_CCollections_CIPropertySet_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CFoundation_CCollections_CIPropertySet __x_ABI_CWindows_CFoundation_CCollections_CIPropertySet;

#endif // ____x_ABI_CWindows_CFoundation_CCollections_CIPropertySet_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CFoundation_CIDeferral_FWD_DEFINED__
#define ____x_ABI_CWindows_CFoundation_CIDeferral_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CFoundation_CIDeferral __x_ABI_CWindows_CFoundation_CIDeferral;

#endif // ____x_ABI_CWindows_CFoundation_CIDeferral_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CFoundation_CIAsyncAction_FWD_DEFINED__
#define ____x_ABI_CWindows_CFoundation_CIAsyncAction_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CFoundation_CIAsyncAction __x_ABI_CWindows_CFoundation_CIAsyncAction;

#endif // ____x_ABI_CWindows_CFoundation_CIAsyncAction_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CFoundation_CIAsyncInfo_FWD_DEFINED__
#define ____x_ABI_CWindows_CFoundation_CIAsyncInfo_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CFoundation_CIAsyncInfo __x_ABI_CWindows_CFoundation_CIAsyncInfo;

#endif // ____x_ABI_CWindows_CFoundation_CIAsyncInfo_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CStorage_CStreams_CIRandomAccessStreamReference_FWD_DEFINED__
#define ____x_ABI_CWindows_CStorage_CStreams_CIRandomAccessStreamReference_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CStorage_CStreams_CIRandomAccessStreamReference __x_ABI_CWindows_CStorage_CStreams_CIRandomAccessStreamReference;

#endif // ____x_ABI_CWindows_CStorage_CStreams_CIRandomAccessStreamReference_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CSystem_CIUser_FWD_DEFINED__
#define ____x_ABI_CWindows_CSystem_CIUser_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CSystem_CIUser __x_ABI_CWindows_CSystem_CIUser;

#endif // ____x_ABI_CWindows_CSystem_CIUser_FWD_DEFINED__

typedef enum __x_ABI_CWindows_CApplicationModel_CUserDataAccounts_CUserDataAccountContentKinds __x_ABI_CWindows_CApplicationModel_CUserDataAccounts_CUserDataAccountContentKinds;

typedef enum __x_ABI_CWindows_CApplicationModel_CUserDataAccounts_CUserDataAccountOtherAppReadAccess __x_ABI_CWindows_CApplicationModel_CUserDataAccounts_CUserDataAccountOtherAppReadAccess;

typedef enum __x_ABI_CWindows_CApplicationModel_CUserDataAccounts_CUserDataAccountStoreAccessType __x_ABI_CWindows_CApplicationModel_CUserDataAccounts_CUserDataAccountStoreAccessType;

enum __x_ABI_CWindows_CApplicationModel_CUserDataAccounts_CUserDataAccountContentKinds
    {
        __x_ABI_CWindows_CApplicationModel_CUserDataAccounts_CUserDataAccountContentKinds_Email = 0x1,
    __x_ABI_CWindows_CApplicationModel_CUserDataAccounts_CUserDataAccountContentKinds_Contact = 0x2,
    __x_ABI_CWindows_CApplicationModel_CUserDataAccounts_CUserDataAccountContentKinds_Appointment = 0x4,
};

enum __x_ABI_CWindows_CApplicationModel_CUserDataAccounts_CUserDataAccountOtherAppReadAccess
    {
        __x_ABI_CWindows_CApplicationModel_CUserDataAccounts_CUserDataAccountOtherAppReadAccess_SystemOnly = 0,
    __x_ABI_CWindows_CApplicationModel_CUserDataAccounts_CUserDataAccountOtherAppReadAccess_Full = 1,
    __x_ABI_CWindows_CApplicationModel_CUserDataAccounts_CUserDataAccountOtherAppReadAccess_None = 2,
};

enum __x_ABI_CWindows_CApplicationModel_CUserDataAccounts_CUserDataAccountStoreAccessType
    {
        __x_ABI_CWindows_CApplicationModel_CUserDataAccounts_CUserDataAccountStoreAccessType_AllAccountsReadOnly = 0,
    __x_ABI_CWindows_CApplicationModel_CUserDataAccounts_CUserDataAccountStoreAccessType_AppAccountsReadWrite = 1,
};

#if !defined(____x_ABI_CWindows_CApplicationModel_CUserDataAccounts_CIUserDataAccount_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CApplicationModel_CUserDataAccounts_CIUserDataAccount_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CApplicationModel_CUserDataAccounts_CIUserDataAccountVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CApplicationModel_CUserDataAccounts_CIUserDataAccount* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CApplicationModel_CUserDataAccounts_CIUserDataAccount* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CApplicationModel_CUserDataAccounts_CIUserDataAccount* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CApplicationModel_CUserDataAccounts_CIUserDataAccount* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CApplicationModel_CUserDataAccounts_CIUserDataAccount* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CApplicationModel_CUserDataAccounts_CIUserDataAccount* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Id)(__x_ABI_CWindows_CApplicationModel_CUserDataAccounts_CIUserDataAccount* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* get_UserDisplayName)(__x_ABI_CWindows_CApplicationModel_CUserDataAccounts_CIUserDataAccount* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* put_UserDisplayName)(__x_ABI_CWindows_CApplicationModel_CUserDataAccounts_CIUserDataAccount* This,
        HSTRING value);
    HRESULT (STDMETHODCALLTYPE* get_OtherAppReadAccess)(__x_ABI_CWindows_CApplicationModel_CUserDataAccounts_CIUserDataAccount* This,
        enum __x_ABI_CWindows_CApplicationModel_CUserDataAccounts_CUserDataAccountOtherAppReadAccess* value);
    HRESULT (STDMETHODCALLTYPE* put_OtherAppReadAccess)(__x_ABI_CWindows_CApplicationModel_CUserDataAccounts_CIUserDataAccount* This,
        enum __x_ABI_CWindows_CApplicationModel_CUserDataAccounts_CUserDataAccountOtherAppReadAccess value);
    HRESULT (STDMETHODCALLTYPE* get_Icon)(__x_ABI_CWindows_CApplicationModel_CUserDataAccounts_CIUserDataAccount* This,
        __x_ABI_CWindows_CStorage_CStreams_CIRandomAccessStreamReference** value);
    HRESULT (STDMETHODCALLTYPE* get_DeviceAccountTypeId)(__x_ABI_CWindows_CApplicationModel_CUserDataAccounts_CIUserDataAccount* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* get_PackageFamilyName)(__x_ABI_CWindows_CApplicationModel_CUserDataAccounts_CIUserDataAccount* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* SaveAsync)(__x_ABI_CWindows_CApplicationModel_CUserDataAccounts_CIUserDataAccount* This,
        __x_ABI_CWindows_CFoundation_CIAsyncAction** result);
    HRESULT (STDMETHODCALLTYPE* DeleteAsync)(__x_ABI_CWindows_CApplicationModel_CUserDataAccounts_CIUserDataAccount* This,
        __x_ABI_CWindows_CFoundation_CIAsyncAction** result);
    HRESULT (STDMETHODCALLTYPE* FindAppointmentCalendarsAsync)(__x_ABI_CWindows_CApplicationModel_CUserDataAccounts_CIUserDataAccount* This,
        __x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CAppointments__CAppointmentCalendar** result);
    HRESULT (STDMETHODCALLTYPE* FindEmailMailboxesAsync)(__x_ABI_CWindows_CApplicationModel_CUserDataAccounts_CIUserDataAccount* This,
        __x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailMailbox** result);
    HRESULT (STDMETHODCALLTYPE* FindContactListsAsync)(__x_ABI_CWindows_CApplicationModel_CUserDataAccounts_CIUserDataAccount* This,
        __x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactList** result);
    HRESULT (STDMETHODCALLTYPE* FindContactAnnotationListsAsync)(__x_ABI_CWindows_CApplicationModel_CUserDataAccounts_CIUserDataAccount* This,
        __x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactAnnotationList** result);

        END_INTERFACE
    } __x_ABI_CWindows_CApplicationModel_CUserDataAccounts_CIUserDataAccountVtbl;

    interface __x_ABI_CWindows_CApplicationModel_CUserDataAccounts_CIUserDataAccount
    {
        CONST_VTBL struct __x_ABI_CWindows_CApplicationModel_CUserDataAccounts_CIUserDataAccountVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CApplicationModel_CUserDataAccounts_CIUserDataAccount;
#endif /* !defined(____x_ABI_CWindows_CApplicationModel_CUserDataAccounts_CIUserDataAccount_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CApplicationModel_CUserDataAccounts_CIUserDataAccount2_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CApplicationModel_CUserDataAccounts_CIUserDataAccount2_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CApplicationModel_CUserDataAccounts_CIUserDataAccount2Vtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CApplicationModel_CUserDataAccounts_CIUserDataAccount2* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CApplicationModel_CUserDataAccounts_CIUserDataAccount2* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CApplicationModel_CUserDataAccounts_CIUserDataAccount2* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CApplicationModel_CUserDataAccounts_CIUserDataAccount2* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CApplicationModel_CUserDataAccounts_CIUserDataAccount2* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CApplicationModel_CUserDataAccounts_CIUserDataAccount2* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_EnterpriseId)(__x_ABI_CWindows_CApplicationModel_CUserDataAccounts_CIUserDataAccount2* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* get_IsProtectedUnderLock)(__x_ABI_CWindows_CApplicationModel_CUserDataAccounts_CIUserDataAccount2* This,
        boolean* value);

        END_INTERFACE
    } __x_ABI_CWindows_CApplicationModel_CUserDataAccounts_CIUserDataAccount2Vtbl;

    interface __x_ABI_CWindows_CApplicationModel_CUserDataAccounts_CIUserDataAccount2
    {
        CONST_VTBL struct __x_ABI_CWindows_CApplicationModel_CUserDataAccounts_CIUserDataAccount2Vtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CApplicationModel_CUserDataAccounts_CIUserDataAccount2;
#endif /* !defined(____x_ABI_CWindows_CApplicationModel_CUserDataAccounts_CIUserDataAccount2_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CApplicationModel_CUserDataAccounts_CIUserDataAccount3_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CApplicationModel_CUserDataAccounts_CIUserDataAccount3_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CApplicationModel_CUserDataAccounts_CIUserDataAccount3Vtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CApplicationModel_CUserDataAccounts_CIUserDataAccount3* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CApplicationModel_CUserDataAccounts_CIUserDataAccount3* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CApplicationModel_CUserDataAccounts_CIUserDataAccount3* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CApplicationModel_CUserDataAccounts_CIUserDataAccount3* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CApplicationModel_CUserDataAccounts_CIUserDataAccount3* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CApplicationModel_CUserDataAccounts_CIUserDataAccount3* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_ExplictReadAccessPackageFamilyNames)(__x_ABI_CWindows_CApplicationModel_CUserDataAccounts_CIUserDataAccount3* This,
        __x_ABI_C__FIVector_1_HSTRING** value);
    HRESULT (STDMETHODCALLTYPE* get_DisplayName)(__x_ABI_CWindows_CApplicationModel_CUserDataAccounts_CIUserDataAccount3* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* put_DisplayName)(__x_ABI_CWindows_CApplicationModel_CUserDataAccounts_CIUserDataAccount3* This,
        HSTRING value);

        END_INTERFACE
    } __x_ABI_CWindows_CApplicationModel_CUserDataAccounts_CIUserDataAccount3Vtbl;

    interface __x_ABI_CWindows_CApplicationModel_CUserDataAccounts_CIUserDataAccount3
    {
        CONST_VTBL struct __x_ABI_CWindows_CApplicationModel_CUserDataAccounts_CIUserDataAccount3Vtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CApplicationModel_CUserDataAccounts_CIUserDataAccount3;
#endif /* !defined(____x_ABI_CWindows_CApplicationModel_CUserDataAccounts_CIUserDataAccount3_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CApplicationModel_CUserDataAccounts_CIUserDataAccount4_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CApplicationModel_CUserDataAccounts_CIUserDataAccount4_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CApplicationModel_CUserDataAccounts_CIUserDataAccount4Vtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CApplicationModel_CUserDataAccounts_CIUserDataAccount4* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CApplicationModel_CUserDataAccounts_CIUserDataAccount4* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CApplicationModel_CUserDataAccounts_CIUserDataAccount4* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CApplicationModel_CUserDataAccounts_CIUserDataAccount4* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CApplicationModel_CUserDataAccounts_CIUserDataAccount4* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CApplicationModel_CUserDataAccounts_CIUserDataAccount4* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_CanShowCreateContactGroup)(__x_ABI_CWindows_CApplicationModel_CUserDataAccounts_CIUserDataAccount4* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* put_CanShowCreateContactGroup)(__x_ABI_CWindows_CApplicationModel_CUserDataAccounts_CIUserDataAccount4* This,
        boolean value);
    HRESULT (STDMETHODCALLTYPE* get_ProviderProperties)(__x_ABI_CWindows_CApplicationModel_CUserDataAccounts_CIUserDataAccount4* This,
        __x_ABI_CWindows_CFoundation_CCollections_CIPropertySet** value);
    HRESULT (STDMETHODCALLTYPE* FindUserDataTaskListsAsync)(__x_ABI_CWindows_CApplicationModel_CUserDataAccounts_CIUserDataAccount4* This,
        __x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CUserDataTasks__CUserDataTaskList** operation);
    HRESULT (STDMETHODCALLTYPE* FindContactGroupsAsync)(__x_ABI_CWindows_CApplicationModel_CUserDataAccounts_CIUserDataAccount4* This,
        __x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactGroup** operation);
    HRESULT (STDMETHODCALLTYPE* TryShowCreateContactGroupAsync)(__x_ABI_CWindows_CApplicationModel_CUserDataAccounts_CIUserDataAccount4* This,
        __x_ABI_C__FIAsyncOperation_1_HSTRING** operation);
    HRESULT (STDMETHODCALLTYPE* put_IsProtectedUnderLock)(__x_ABI_CWindows_CApplicationModel_CUserDataAccounts_CIUserDataAccount4* This,
        boolean value);
    HRESULT (STDMETHODCALLTYPE* put_Icon)(__x_ABI_CWindows_CApplicationModel_CUserDataAccounts_CIUserDataAccount4* This,
        __x_ABI_CWindows_CStorage_CStreams_CIRandomAccessStreamReference* value);

        END_INTERFACE
    } __x_ABI_CWindows_CApplicationModel_CUserDataAccounts_CIUserDataAccount4Vtbl;

    interface __x_ABI_CWindows_CApplicationModel_CUserDataAccounts_CIUserDataAccount4
    {
        CONST_VTBL struct __x_ABI_CWindows_CApplicationModel_CUserDataAccounts_CIUserDataAccount4Vtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CApplicationModel_CUserDataAccounts_CIUserDataAccount4;
#endif /* !defined(____x_ABI_CWindows_CApplicationModel_CUserDataAccounts_CIUserDataAccount4_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CApplicationModel_CUserDataAccounts_CIUserDataAccountManagerForUser_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CApplicationModel_CUserDataAccounts_CIUserDataAccountManagerForUser_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CApplicationModel_CUserDataAccounts_CIUserDataAccountManagerForUserVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CApplicationModel_CUserDataAccounts_CIUserDataAccountManagerForUser* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CApplicationModel_CUserDataAccounts_CIUserDataAccountManagerForUser* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CApplicationModel_CUserDataAccounts_CIUserDataAccountManagerForUser* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CApplicationModel_CUserDataAccounts_CIUserDataAccountManagerForUser* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CApplicationModel_CUserDataAccounts_CIUserDataAccountManagerForUser* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CApplicationModel_CUserDataAccounts_CIUserDataAccountManagerForUser* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* RequestStoreAsync)(__x_ABI_CWindows_CApplicationModel_CUserDataAccounts_CIUserDataAccountManagerForUser* This,
        enum __x_ABI_CWindows_CApplicationModel_CUserDataAccounts_CUserDataAccountStoreAccessType storeAccessType,
        __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CUserDataAccounts__CUserDataAccountStore** result);
    HRESULT (STDMETHODCALLTYPE* get_User)(__x_ABI_CWindows_CApplicationModel_CUserDataAccounts_CIUserDataAccountManagerForUser* This,
        __x_ABI_CWindows_CSystem_CIUser** value);

        END_INTERFACE
    } __x_ABI_CWindows_CApplicationModel_CUserDataAccounts_CIUserDataAccountManagerForUserVtbl;

    interface __x_ABI_CWindows_CApplicationModel_CUserDataAccounts_CIUserDataAccountManagerForUser
    {
        CONST_VTBL struct __x_ABI_CWindows_CApplicationModel_CUserDataAccounts_CIUserDataAccountManagerForUserVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CApplicationModel_CUserDataAccounts_CIUserDataAccountManagerForUser;
#endif /* !defined(____x_ABI_CWindows_CApplicationModel_CUserDataAccounts_CIUserDataAccountManagerForUser_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CApplicationModel_CUserDataAccounts_CIUserDataAccountManagerStatics_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CApplicationModel_CUserDataAccounts_CIUserDataAccountManagerStatics_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CApplicationModel_CUserDataAccounts_CIUserDataAccountManagerStaticsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CApplicationModel_CUserDataAccounts_CIUserDataAccountManagerStatics* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CApplicationModel_CUserDataAccounts_CIUserDataAccountManagerStatics* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CApplicationModel_CUserDataAccounts_CIUserDataAccountManagerStatics* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CApplicationModel_CUserDataAccounts_CIUserDataAccountManagerStatics* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CApplicationModel_CUserDataAccounts_CIUserDataAccountManagerStatics* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CApplicationModel_CUserDataAccounts_CIUserDataAccountManagerStatics* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* RequestStoreAsync)(__x_ABI_CWindows_CApplicationModel_CUserDataAccounts_CIUserDataAccountManagerStatics* This,
        enum __x_ABI_CWindows_CApplicationModel_CUserDataAccounts_CUserDataAccountStoreAccessType storeAccessType,
        __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CUserDataAccounts__CUserDataAccountStore** result);
    HRESULT (STDMETHODCALLTYPE* ShowAddAccountAsync)(__x_ABI_CWindows_CApplicationModel_CUserDataAccounts_CIUserDataAccountManagerStatics* This,
        enum __x_ABI_CWindows_CApplicationModel_CUserDataAccounts_CUserDataAccountContentKinds contentKinds,
        __x_ABI_C__FIAsyncOperation_1_HSTRING** result);
    HRESULT (STDMETHODCALLTYPE* ShowAccountSettingsAsync)(__x_ABI_CWindows_CApplicationModel_CUserDataAccounts_CIUserDataAccountManagerStatics* This,
        HSTRING id,
        __x_ABI_CWindows_CFoundation_CIAsyncAction** result);
    HRESULT (STDMETHODCALLTYPE* ShowAccountErrorResolverAsync)(__x_ABI_CWindows_CApplicationModel_CUserDataAccounts_CIUserDataAccountManagerStatics* This,
        HSTRING id,
        __x_ABI_CWindows_CFoundation_CIAsyncAction** result);

        END_INTERFACE
    } __x_ABI_CWindows_CApplicationModel_CUserDataAccounts_CIUserDataAccountManagerStaticsVtbl;

    interface __x_ABI_CWindows_CApplicationModel_CUserDataAccounts_CIUserDataAccountManagerStatics
    {
        CONST_VTBL struct __x_ABI_CWindows_CApplicationModel_CUserDataAccounts_CIUserDataAccountManagerStaticsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CApplicationModel_CUserDataAccounts_CIUserDataAccountManagerStatics;
#endif /* !defined(____x_ABI_CWindows_CApplicationModel_CUserDataAccounts_CIUserDataAccountManagerStatics_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CApplicationModel_CUserDataAccounts_CIUserDataAccountManagerStatics2_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CApplicationModel_CUserDataAccounts_CIUserDataAccountManagerStatics2_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CApplicationModel_CUserDataAccounts_CIUserDataAccountManagerStatics2Vtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CApplicationModel_CUserDataAccounts_CIUserDataAccountManagerStatics2* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CApplicationModel_CUserDataAccounts_CIUserDataAccountManagerStatics2* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CApplicationModel_CUserDataAccounts_CIUserDataAccountManagerStatics2* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CApplicationModel_CUserDataAccounts_CIUserDataAccountManagerStatics2* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CApplicationModel_CUserDataAccounts_CIUserDataAccountManagerStatics2* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CApplicationModel_CUserDataAccounts_CIUserDataAccountManagerStatics2* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* GetForUser)(__x_ABI_CWindows_CApplicationModel_CUserDataAccounts_CIUserDataAccountManagerStatics2* This,
        __x_ABI_CWindows_CSystem_CIUser* user,
        __x_ABI_CWindows_CApplicationModel_CUserDataAccounts_CIUserDataAccountManagerForUser** result);

        END_INTERFACE
    } __x_ABI_CWindows_CApplicationModel_CUserDataAccounts_CIUserDataAccountManagerStatics2Vtbl;

    interface __x_ABI_CWindows_CApplicationModel_CUserDataAccounts_CIUserDataAccountManagerStatics2
    {
        CONST_VTBL struct __x_ABI_CWindows_CApplicationModel_CUserDataAccounts_CIUserDataAccountManagerStatics2Vtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CApplicationModel_CUserDataAccounts_CIUserDataAccountManagerStatics2;
#endif /* !defined(____x_ABI_CWindows_CApplicationModel_CUserDataAccounts_CIUserDataAccountManagerStatics2_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CApplicationModel_CUserDataAccounts_CIUserDataAccountStore_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CApplicationModel_CUserDataAccounts_CIUserDataAccountStore_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CApplicationModel_CUserDataAccounts_CIUserDataAccountStoreVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CApplicationModel_CUserDataAccounts_CIUserDataAccountStore* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CApplicationModel_CUserDataAccounts_CIUserDataAccountStore* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CApplicationModel_CUserDataAccounts_CIUserDataAccountStore* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CApplicationModel_CUserDataAccounts_CIUserDataAccountStore* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CApplicationModel_CUserDataAccounts_CIUserDataAccountStore* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CApplicationModel_CUserDataAccounts_CIUserDataAccountStore* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* FindAccountsAsync)(__x_ABI_CWindows_CApplicationModel_CUserDataAccounts_CIUserDataAccountStore* This,
        __x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CUserDataAccounts__CUserDataAccount** result);
    HRESULT (STDMETHODCALLTYPE* GetAccountAsync)(__x_ABI_CWindows_CApplicationModel_CUserDataAccounts_CIUserDataAccountStore* This,
        HSTRING id,
        __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CUserDataAccounts__CUserDataAccount** result);
    HRESULT (STDMETHODCALLTYPE* CreateAccountAsync)(__x_ABI_CWindows_CApplicationModel_CUserDataAccounts_CIUserDataAccountStore* This,
        HSTRING userDisplayName,
        __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CUserDataAccounts__CUserDataAccount** result);

        END_INTERFACE
    } __x_ABI_CWindows_CApplicationModel_CUserDataAccounts_CIUserDataAccountStoreVtbl;

    interface __x_ABI_CWindows_CApplicationModel_CUserDataAccounts_CIUserDataAccountStore
    {
        CONST_VTBL struct __x_ABI_CWindows_CApplicationModel_CUserDataAccounts_CIUserDataAccountStoreVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CApplicationModel_CUserDataAccounts_CIUserDataAccountStore;
#endif /* !defined(____x_ABI_CWindows_CApplicationModel_CUserDataAccounts_CIUserDataAccountStore_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CApplicationModel_CUserDataAccounts_CIUserDataAccountStore2_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CApplicationModel_CUserDataAccounts_CIUserDataAccountStore2_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CApplicationModel_CUserDataAccounts_CIUserDataAccountStore2Vtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CApplicationModel_CUserDataAccounts_CIUserDataAccountStore2* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CApplicationModel_CUserDataAccounts_CIUserDataAccountStore2* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CApplicationModel_CUserDataAccounts_CIUserDataAccountStore2* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CApplicationModel_CUserDataAccounts_CIUserDataAccountStore2* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CApplicationModel_CUserDataAccounts_CIUserDataAccountStore2* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CApplicationModel_CUserDataAccounts_CIUserDataAccountStore2* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* CreateAccountWithPackageRelativeAppIdAsync)(__x_ABI_CWindows_CApplicationModel_CUserDataAccounts_CIUserDataAccountStore2* This,
        HSTRING userDisplayName,
        HSTRING packageRelativeAppId,
        __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CUserDataAccounts__CUserDataAccount** result);
    HRESULT (STDMETHODCALLTYPE* add_StoreChanged)(__x_ABI_CWindows_CApplicationModel_CUserDataAccounts_CIUserDataAccountStore2* This,
        __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CApplicationModel__CUserDataAccounts__CUserDataAccountStore___x_ABI_CWindows__CApplicationModel__CUserDataAccounts__CUserDataAccountStoreChangedEventArgs* handler,
        EventRegistrationToken* token);
    HRESULT (STDMETHODCALLTYPE* remove_StoreChanged)(__x_ABI_CWindows_CApplicationModel_CUserDataAccounts_CIUserDataAccountStore2* This,
        EventRegistrationToken token);

        END_INTERFACE
    } __x_ABI_CWindows_CApplicationModel_CUserDataAccounts_CIUserDataAccountStore2Vtbl;

    interface __x_ABI_CWindows_CApplicationModel_CUserDataAccounts_CIUserDataAccountStore2
    {
        CONST_VTBL struct __x_ABI_CWindows_CApplicationModel_CUserDataAccounts_CIUserDataAccountStore2Vtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CApplicationModel_CUserDataAccounts_CIUserDataAccountStore2;
#endif /* !defined(____x_ABI_CWindows_CApplicationModel_CUserDataAccounts_CIUserDataAccountStore2_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CApplicationModel_CUserDataAccounts_CIUserDataAccountStore3_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CApplicationModel_CUserDataAccounts_CIUserDataAccountStore3_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CApplicationModel_CUserDataAccounts_CIUserDataAccountStore3Vtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CApplicationModel_CUserDataAccounts_CIUserDataAccountStore3* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CApplicationModel_CUserDataAccounts_CIUserDataAccountStore3* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CApplicationModel_CUserDataAccounts_CIUserDataAccountStore3* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CApplicationModel_CUserDataAccounts_CIUserDataAccountStore3* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CApplicationModel_CUserDataAccounts_CIUserDataAccountStore3* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CApplicationModel_CUserDataAccounts_CIUserDataAccountStore3* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* CreateAccountWithPackageRelativeAppIdAndEnterpriseIdAsync)(__x_ABI_CWindows_CApplicationModel_CUserDataAccounts_CIUserDataAccountStore3* This,
        HSTRING userDisplayName,
        HSTRING packageRelativeAppId,
        HSTRING enterpriseId,
        __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CUserDataAccounts__CUserDataAccount** result);

        END_INTERFACE
    } __x_ABI_CWindows_CApplicationModel_CUserDataAccounts_CIUserDataAccountStore3Vtbl;

    interface __x_ABI_CWindows_CApplicationModel_CUserDataAccounts_CIUserDataAccountStore3
    {
        CONST_VTBL struct __x_ABI_CWindows_CApplicationModel_CUserDataAccounts_CIUserDataAccountStore3Vtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CApplicationModel_CUserDataAccounts_CIUserDataAccountStore3;
#endif /* !defined(____x_ABI_CWindows_CApplicationModel_CUserDataAccounts_CIUserDataAccountStore3_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CApplicationModel_CUserDataAccounts_CIUserDataAccountStoreChangedEventArgs_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CApplicationModel_CUserDataAccounts_CIUserDataAccountStoreChangedEventArgs_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CApplicationModel_CUserDataAccounts_CIUserDataAccountStoreChangedEventArgsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CApplicationModel_CUserDataAccounts_CIUserDataAccountStoreChangedEventArgs* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CApplicationModel_CUserDataAccounts_CIUserDataAccountStoreChangedEventArgs* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CApplicationModel_CUserDataAccounts_CIUserDataAccountStoreChangedEventArgs* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CApplicationModel_CUserDataAccounts_CIUserDataAccountStoreChangedEventArgs* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CApplicationModel_CUserDataAccounts_CIUserDataAccountStoreChangedEventArgs* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CApplicationModel_CUserDataAccounts_CIUserDataAccountStoreChangedEventArgs* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* GetDeferral)(__x_ABI_CWindows_CApplicationModel_CUserDataAccounts_CIUserDataAccountStoreChangedEventArgs* This,
        __x_ABI_CWindows_CFoundation_CIDeferral** result);

        END_INTERFACE
    } __x_ABI_CWindows_CApplicationModel_CUserDataAccounts_CIUserDataAccountStoreChangedEventArgsVtbl;

    interface __x_ABI_CWindows_CApplicationModel_CUserDataAccounts_CIUserDataAccountStoreChangedEventArgs
    {
        CONST_VTBL struct __x_ABI_CWindows_CApplicationModel_CUserDataAccounts_CIUserDataAccountStoreChangedEventArgsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CApplicationModel_CUserDataAccounts_CIUserDataAccountStoreChangedEventArgs;
#endif /* !defined(____x_ABI_CWindows_CApplicationModel_CUserDataAccounts_CIUserDataAccountStoreChangedEventArgs_INTERFACE_DEFINED__) */
    
