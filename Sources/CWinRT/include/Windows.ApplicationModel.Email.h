// WARNING: Please don't edit this file. It was generated by Swift/WinRT v0.0.1

#pragma once
// Header files for imported files
#include <inspectable.h>
#include <EventToken.h>
#include <windowscontracts.h>
#include "Windows.Foundation.h"
#include "Windows.ApplicationModel.Appointments.h"
#include "Windows.Security.Cryptography.Certificates.h"
#include "Windows.Storage.Streams.h"
#include "Windows.System.h"
// Importing Collections header
#include "Windows.Foundation.Collections.h"

/* Forward Declarations */
#ifndef ____x_ABI_CWindows_CApplicationModel_CEmail_CIEmailAttachment_FWD_DEFINED__
#define ____x_ABI_CWindows_CApplicationModel_CEmail_CIEmailAttachment_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CApplicationModel_CEmail_CIEmailAttachment __x_ABI_CWindows_CApplicationModel_CEmail_CIEmailAttachment;

#endif // ____x_ABI_CWindows_CApplicationModel_CEmail_CIEmailAttachment_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CApplicationModel_CEmail_CIEmailAttachment2_FWD_DEFINED__
#define ____x_ABI_CWindows_CApplicationModel_CEmail_CIEmailAttachment2_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CApplicationModel_CEmail_CIEmailAttachment2 __x_ABI_CWindows_CApplicationModel_CEmail_CIEmailAttachment2;

#endif // ____x_ABI_CWindows_CApplicationModel_CEmail_CIEmailAttachment2_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CApplicationModel_CEmail_CIEmailAttachmentFactory_FWD_DEFINED__
#define ____x_ABI_CWindows_CApplicationModel_CEmail_CIEmailAttachmentFactory_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CApplicationModel_CEmail_CIEmailAttachmentFactory __x_ABI_CWindows_CApplicationModel_CEmail_CIEmailAttachmentFactory;

#endif // ____x_ABI_CWindows_CApplicationModel_CEmail_CIEmailAttachmentFactory_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CApplicationModel_CEmail_CIEmailAttachmentFactory2_FWD_DEFINED__
#define ____x_ABI_CWindows_CApplicationModel_CEmail_CIEmailAttachmentFactory2_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CApplicationModel_CEmail_CIEmailAttachmentFactory2 __x_ABI_CWindows_CApplicationModel_CEmail_CIEmailAttachmentFactory2;

#endif // ____x_ABI_CWindows_CApplicationModel_CEmail_CIEmailAttachmentFactory2_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CApplicationModel_CEmail_CIEmailConversation_FWD_DEFINED__
#define ____x_ABI_CWindows_CApplicationModel_CEmail_CIEmailConversation_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CApplicationModel_CEmail_CIEmailConversation __x_ABI_CWindows_CApplicationModel_CEmail_CIEmailConversation;

#endif // ____x_ABI_CWindows_CApplicationModel_CEmail_CIEmailConversation_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CApplicationModel_CEmail_CIEmailConversationBatch_FWD_DEFINED__
#define ____x_ABI_CWindows_CApplicationModel_CEmail_CIEmailConversationBatch_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CApplicationModel_CEmail_CIEmailConversationBatch __x_ABI_CWindows_CApplicationModel_CEmail_CIEmailConversationBatch;

#endif // ____x_ABI_CWindows_CApplicationModel_CEmail_CIEmailConversationBatch_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CApplicationModel_CEmail_CIEmailConversationReader_FWD_DEFINED__
#define ____x_ABI_CWindows_CApplicationModel_CEmail_CIEmailConversationReader_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CApplicationModel_CEmail_CIEmailConversationReader __x_ABI_CWindows_CApplicationModel_CEmail_CIEmailConversationReader;

#endif // ____x_ABI_CWindows_CApplicationModel_CEmail_CIEmailConversationReader_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CApplicationModel_CEmail_CIEmailFolder_FWD_DEFINED__
#define ____x_ABI_CWindows_CApplicationModel_CEmail_CIEmailFolder_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CApplicationModel_CEmail_CIEmailFolder __x_ABI_CWindows_CApplicationModel_CEmail_CIEmailFolder;

#endif // ____x_ABI_CWindows_CApplicationModel_CEmail_CIEmailFolder_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CApplicationModel_CEmail_CIEmailIrmInfo_FWD_DEFINED__
#define ____x_ABI_CWindows_CApplicationModel_CEmail_CIEmailIrmInfo_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CApplicationModel_CEmail_CIEmailIrmInfo __x_ABI_CWindows_CApplicationModel_CEmail_CIEmailIrmInfo;

#endif // ____x_ABI_CWindows_CApplicationModel_CEmail_CIEmailIrmInfo_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CApplicationModel_CEmail_CIEmailIrmInfoFactory_FWD_DEFINED__
#define ____x_ABI_CWindows_CApplicationModel_CEmail_CIEmailIrmInfoFactory_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CApplicationModel_CEmail_CIEmailIrmInfoFactory __x_ABI_CWindows_CApplicationModel_CEmail_CIEmailIrmInfoFactory;

#endif // ____x_ABI_CWindows_CApplicationModel_CEmail_CIEmailIrmInfoFactory_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CApplicationModel_CEmail_CIEmailIrmTemplate_FWD_DEFINED__
#define ____x_ABI_CWindows_CApplicationModel_CEmail_CIEmailIrmTemplate_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CApplicationModel_CEmail_CIEmailIrmTemplate __x_ABI_CWindows_CApplicationModel_CEmail_CIEmailIrmTemplate;

#endif // ____x_ABI_CWindows_CApplicationModel_CEmail_CIEmailIrmTemplate_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CApplicationModel_CEmail_CIEmailIrmTemplateFactory_FWD_DEFINED__
#define ____x_ABI_CWindows_CApplicationModel_CEmail_CIEmailIrmTemplateFactory_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CApplicationModel_CEmail_CIEmailIrmTemplateFactory __x_ABI_CWindows_CApplicationModel_CEmail_CIEmailIrmTemplateFactory;

#endif // ____x_ABI_CWindows_CApplicationModel_CEmail_CIEmailIrmTemplateFactory_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CApplicationModel_CEmail_CIEmailItemCounts_FWD_DEFINED__
#define ____x_ABI_CWindows_CApplicationModel_CEmail_CIEmailItemCounts_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CApplicationModel_CEmail_CIEmailItemCounts __x_ABI_CWindows_CApplicationModel_CEmail_CIEmailItemCounts;

#endif // ____x_ABI_CWindows_CApplicationModel_CEmail_CIEmailItemCounts_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CApplicationModel_CEmail_CIEmailMailbox_FWD_DEFINED__
#define ____x_ABI_CWindows_CApplicationModel_CEmail_CIEmailMailbox_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CApplicationModel_CEmail_CIEmailMailbox __x_ABI_CWindows_CApplicationModel_CEmail_CIEmailMailbox;

#endif // ____x_ABI_CWindows_CApplicationModel_CEmail_CIEmailMailbox_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CApplicationModel_CEmail_CIEmailMailbox2_FWD_DEFINED__
#define ____x_ABI_CWindows_CApplicationModel_CEmail_CIEmailMailbox2_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CApplicationModel_CEmail_CIEmailMailbox2 __x_ABI_CWindows_CApplicationModel_CEmail_CIEmailMailbox2;

#endif // ____x_ABI_CWindows_CApplicationModel_CEmail_CIEmailMailbox2_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CApplicationModel_CEmail_CIEmailMailbox3_FWD_DEFINED__
#define ____x_ABI_CWindows_CApplicationModel_CEmail_CIEmailMailbox3_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CApplicationModel_CEmail_CIEmailMailbox3 __x_ABI_CWindows_CApplicationModel_CEmail_CIEmailMailbox3;

#endif // ____x_ABI_CWindows_CApplicationModel_CEmail_CIEmailMailbox3_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CApplicationModel_CEmail_CIEmailMailbox4_FWD_DEFINED__
#define ____x_ABI_CWindows_CApplicationModel_CEmail_CIEmailMailbox4_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CApplicationModel_CEmail_CIEmailMailbox4 __x_ABI_CWindows_CApplicationModel_CEmail_CIEmailMailbox4;

#endif // ____x_ABI_CWindows_CApplicationModel_CEmail_CIEmailMailbox4_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CApplicationModel_CEmail_CIEmailMailbox5_FWD_DEFINED__
#define ____x_ABI_CWindows_CApplicationModel_CEmail_CIEmailMailbox5_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CApplicationModel_CEmail_CIEmailMailbox5 __x_ABI_CWindows_CApplicationModel_CEmail_CIEmailMailbox5;

#endif // ____x_ABI_CWindows_CApplicationModel_CEmail_CIEmailMailbox5_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CApplicationModel_CEmail_CIEmailMailboxAction_FWD_DEFINED__
#define ____x_ABI_CWindows_CApplicationModel_CEmail_CIEmailMailboxAction_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CApplicationModel_CEmail_CIEmailMailboxAction __x_ABI_CWindows_CApplicationModel_CEmail_CIEmailMailboxAction;

#endif // ____x_ABI_CWindows_CApplicationModel_CEmail_CIEmailMailboxAction_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CApplicationModel_CEmail_CIEmailMailboxAutoReply_FWD_DEFINED__
#define ____x_ABI_CWindows_CApplicationModel_CEmail_CIEmailMailboxAutoReply_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CApplicationModel_CEmail_CIEmailMailboxAutoReply __x_ABI_CWindows_CApplicationModel_CEmail_CIEmailMailboxAutoReply;

#endif // ____x_ABI_CWindows_CApplicationModel_CEmail_CIEmailMailboxAutoReply_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CApplicationModel_CEmail_CIEmailMailboxAutoReplySettings_FWD_DEFINED__
#define ____x_ABI_CWindows_CApplicationModel_CEmail_CIEmailMailboxAutoReplySettings_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CApplicationModel_CEmail_CIEmailMailboxAutoReplySettings __x_ABI_CWindows_CApplicationModel_CEmail_CIEmailMailboxAutoReplySettings;

#endif // ____x_ABI_CWindows_CApplicationModel_CEmail_CIEmailMailboxAutoReplySettings_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CApplicationModel_CEmail_CIEmailMailboxCapabilities_FWD_DEFINED__
#define ____x_ABI_CWindows_CApplicationModel_CEmail_CIEmailMailboxCapabilities_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CApplicationModel_CEmail_CIEmailMailboxCapabilities __x_ABI_CWindows_CApplicationModel_CEmail_CIEmailMailboxCapabilities;

#endif // ____x_ABI_CWindows_CApplicationModel_CEmail_CIEmailMailboxCapabilities_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CApplicationModel_CEmail_CIEmailMailboxCapabilities2_FWD_DEFINED__
#define ____x_ABI_CWindows_CApplicationModel_CEmail_CIEmailMailboxCapabilities2_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CApplicationModel_CEmail_CIEmailMailboxCapabilities2 __x_ABI_CWindows_CApplicationModel_CEmail_CIEmailMailboxCapabilities2;

#endif // ____x_ABI_CWindows_CApplicationModel_CEmail_CIEmailMailboxCapabilities2_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CApplicationModel_CEmail_CIEmailMailboxCapabilities3_FWD_DEFINED__
#define ____x_ABI_CWindows_CApplicationModel_CEmail_CIEmailMailboxCapabilities3_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CApplicationModel_CEmail_CIEmailMailboxCapabilities3 __x_ABI_CWindows_CApplicationModel_CEmail_CIEmailMailboxCapabilities3;

#endif // ____x_ABI_CWindows_CApplicationModel_CEmail_CIEmailMailboxCapabilities3_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CApplicationModel_CEmail_CIEmailMailboxChange_FWD_DEFINED__
#define ____x_ABI_CWindows_CApplicationModel_CEmail_CIEmailMailboxChange_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CApplicationModel_CEmail_CIEmailMailboxChange __x_ABI_CWindows_CApplicationModel_CEmail_CIEmailMailboxChange;

#endif // ____x_ABI_CWindows_CApplicationModel_CEmail_CIEmailMailboxChange_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CApplicationModel_CEmail_CIEmailMailboxChangeReader_FWD_DEFINED__
#define ____x_ABI_CWindows_CApplicationModel_CEmail_CIEmailMailboxChangeReader_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CApplicationModel_CEmail_CIEmailMailboxChangeReader __x_ABI_CWindows_CApplicationModel_CEmail_CIEmailMailboxChangeReader;

#endif // ____x_ABI_CWindows_CApplicationModel_CEmail_CIEmailMailboxChangeReader_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CApplicationModel_CEmail_CIEmailMailboxChangeTracker_FWD_DEFINED__
#define ____x_ABI_CWindows_CApplicationModel_CEmail_CIEmailMailboxChangeTracker_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CApplicationModel_CEmail_CIEmailMailboxChangeTracker __x_ABI_CWindows_CApplicationModel_CEmail_CIEmailMailboxChangeTracker;

#endif // ____x_ABI_CWindows_CApplicationModel_CEmail_CIEmailMailboxChangeTracker_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CApplicationModel_CEmail_CIEmailMailboxChangedDeferral_FWD_DEFINED__
#define ____x_ABI_CWindows_CApplicationModel_CEmail_CIEmailMailboxChangedDeferral_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CApplicationModel_CEmail_CIEmailMailboxChangedDeferral __x_ABI_CWindows_CApplicationModel_CEmail_CIEmailMailboxChangedDeferral;

#endif // ____x_ABI_CWindows_CApplicationModel_CEmail_CIEmailMailboxChangedDeferral_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CApplicationModel_CEmail_CIEmailMailboxChangedEventArgs_FWD_DEFINED__
#define ____x_ABI_CWindows_CApplicationModel_CEmail_CIEmailMailboxChangedEventArgs_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CApplicationModel_CEmail_CIEmailMailboxChangedEventArgs __x_ABI_CWindows_CApplicationModel_CEmail_CIEmailMailboxChangedEventArgs;

#endif // ____x_ABI_CWindows_CApplicationModel_CEmail_CIEmailMailboxChangedEventArgs_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CApplicationModel_CEmail_CIEmailMailboxCreateFolderResult_FWD_DEFINED__
#define ____x_ABI_CWindows_CApplicationModel_CEmail_CIEmailMailboxCreateFolderResult_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CApplicationModel_CEmail_CIEmailMailboxCreateFolderResult __x_ABI_CWindows_CApplicationModel_CEmail_CIEmailMailboxCreateFolderResult;

#endif // ____x_ABI_CWindows_CApplicationModel_CEmail_CIEmailMailboxCreateFolderResult_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CApplicationModel_CEmail_CIEmailMailboxPolicies_FWD_DEFINED__
#define ____x_ABI_CWindows_CApplicationModel_CEmail_CIEmailMailboxPolicies_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CApplicationModel_CEmail_CIEmailMailboxPolicies __x_ABI_CWindows_CApplicationModel_CEmail_CIEmailMailboxPolicies;

#endif // ____x_ABI_CWindows_CApplicationModel_CEmail_CIEmailMailboxPolicies_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CApplicationModel_CEmail_CIEmailMailboxPolicies2_FWD_DEFINED__
#define ____x_ABI_CWindows_CApplicationModel_CEmail_CIEmailMailboxPolicies2_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CApplicationModel_CEmail_CIEmailMailboxPolicies2 __x_ABI_CWindows_CApplicationModel_CEmail_CIEmailMailboxPolicies2;

#endif // ____x_ABI_CWindows_CApplicationModel_CEmail_CIEmailMailboxPolicies2_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CApplicationModel_CEmail_CIEmailMailboxPolicies3_FWD_DEFINED__
#define ____x_ABI_CWindows_CApplicationModel_CEmail_CIEmailMailboxPolicies3_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CApplicationModel_CEmail_CIEmailMailboxPolicies3 __x_ABI_CWindows_CApplicationModel_CEmail_CIEmailMailboxPolicies3;

#endif // ____x_ABI_CWindows_CApplicationModel_CEmail_CIEmailMailboxPolicies3_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CApplicationModel_CEmail_CIEmailMailboxSyncManager_FWD_DEFINED__
#define ____x_ABI_CWindows_CApplicationModel_CEmail_CIEmailMailboxSyncManager_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CApplicationModel_CEmail_CIEmailMailboxSyncManager __x_ABI_CWindows_CApplicationModel_CEmail_CIEmailMailboxSyncManager;

#endif // ____x_ABI_CWindows_CApplicationModel_CEmail_CIEmailMailboxSyncManager_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CApplicationModel_CEmail_CIEmailMailboxSyncManager2_FWD_DEFINED__
#define ____x_ABI_CWindows_CApplicationModel_CEmail_CIEmailMailboxSyncManager2_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CApplicationModel_CEmail_CIEmailMailboxSyncManager2 __x_ABI_CWindows_CApplicationModel_CEmail_CIEmailMailboxSyncManager2;

#endif // ____x_ABI_CWindows_CApplicationModel_CEmail_CIEmailMailboxSyncManager2_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CApplicationModel_CEmail_CIEmailManagerForUser_FWD_DEFINED__
#define ____x_ABI_CWindows_CApplicationModel_CEmail_CIEmailManagerForUser_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CApplicationModel_CEmail_CIEmailManagerForUser __x_ABI_CWindows_CApplicationModel_CEmail_CIEmailManagerForUser;

#endif // ____x_ABI_CWindows_CApplicationModel_CEmail_CIEmailManagerForUser_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CApplicationModel_CEmail_CIEmailManagerStatics_FWD_DEFINED__
#define ____x_ABI_CWindows_CApplicationModel_CEmail_CIEmailManagerStatics_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CApplicationModel_CEmail_CIEmailManagerStatics __x_ABI_CWindows_CApplicationModel_CEmail_CIEmailManagerStatics;

#endif // ____x_ABI_CWindows_CApplicationModel_CEmail_CIEmailManagerStatics_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CApplicationModel_CEmail_CIEmailManagerStatics2_FWD_DEFINED__
#define ____x_ABI_CWindows_CApplicationModel_CEmail_CIEmailManagerStatics2_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CApplicationModel_CEmail_CIEmailManagerStatics2 __x_ABI_CWindows_CApplicationModel_CEmail_CIEmailManagerStatics2;

#endif // ____x_ABI_CWindows_CApplicationModel_CEmail_CIEmailManagerStatics2_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CApplicationModel_CEmail_CIEmailManagerStatics3_FWD_DEFINED__
#define ____x_ABI_CWindows_CApplicationModel_CEmail_CIEmailManagerStatics3_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CApplicationModel_CEmail_CIEmailManagerStatics3 __x_ABI_CWindows_CApplicationModel_CEmail_CIEmailManagerStatics3;

#endif // ____x_ABI_CWindows_CApplicationModel_CEmail_CIEmailManagerStatics3_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CApplicationModel_CEmail_CIEmailMeetingInfo_FWD_DEFINED__
#define ____x_ABI_CWindows_CApplicationModel_CEmail_CIEmailMeetingInfo_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CApplicationModel_CEmail_CIEmailMeetingInfo __x_ABI_CWindows_CApplicationModel_CEmail_CIEmailMeetingInfo;

#endif // ____x_ABI_CWindows_CApplicationModel_CEmail_CIEmailMeetingInfo_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CApplicationModel_CEmail_CIEmailMeetingInfo2_FWD_DEFINED__
#define ____x_ABI_CWindows_CApplicationModel_CEmail_CIEmailMeetingInfo2_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CApplicationModel_CEmail_CIEmailMeetingInfo2 __x_ABI_CWindows_CApplicationModel_CEmail_CIEmailMeetingInfo2;

#endif // ____x_ABI_CWindows_CApplicationModel_CEmail_CIEmailMeetingInfo2_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CApplicationModel_CEmail_CIEmailMessage_FWD_DEFINED__
#define ____x_ABI_CWindows_CApplicationModel_CEmail_CIEmailMessage_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CApplicationModel_CEmail_CIEmailMessage __x_ABI_CWindows_CApplicationModel_CEmail_CIEmailMessage;

#endif // ____x_ABI_CWindows_CApplicationModel_CEmail_CIEmailMessage_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CApplicationModel_CEmail_CIEmailMessage2_FWD_DEFINED__
#define ____x_ABI_CWindows_CApplicationModel_CEmail_CIEmailMessage2_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CApplicationModel_CEmail_CIEmailMessage2 __x_ABI_CWindows_CApplicationModel_CEmail_CIEmailMessage2;

#endif // ____x_ABI_CWindows_CApplicationModel_CEmail_CIEmailMessage2_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CApplicationModel_CEmail_CIEmailMessage3_FWD_DEFINED__
#define ____x_ABI_CWindows_CApplicationModel_CEmail_CIEmailMessage3_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CApplicationModel_CEmail_CIEmailMessage3 __x_ABI_CWindows_CApplicationModel_CEmail_CIEmailMessage3;

#endif // ____x_ABI_CWindows_CApplicationModel_CEmail_CIEmailMessage3_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CApplicationModel_CEmail_CIEmailMessage4_FWD_DEFINED__
#define ____x_ABI_CWindows_CApplicationModel_CEmail_CIEmailMessage4_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CApplicationModel_CEmail_CIEmailMessage4 __x_ABI_CWindows_CApplicationModel_CEmail_CIEmailMessage4;

#endif // ____x_ABI_CWindows_CApplicationModel_CEmail_CIEmailMessage4_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CApplicationModel_CEmail_CIEmailMessageBatch_FWD_DEFINED__
#define ____x_ABI_CWindows_CApplicationModel_CEmail_CIEmailMessageBatch_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CApplicationModel_CEmail_CIEmailMessageBatch __x_ABI_CWindows_CApplicationModel_CEmail_CIEmailMessageBatch;

#endif // ____x_ABI_CWindows_CApplicationModel_CEmail_CIEmailMessageBatch_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CApplicationModel_CEmail_CIEmailMessageReader_FWD_DEFINED__
#define ____x_ABI_CWindows_CApplicationModel_CEmail_CIEmailMessageReader_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CApplicationModel_CEmail_CIEmailMessageReader __x_ABI_CWindows_CApplicationModel_CEmail_CIEmailMessageReader;

#endif // ____x_ABI_CWindows_CApplicationModel_CEmail_CIEmailMessageReader_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CApplicationModel_CEmail_CIEmailQueryOptions_FWD_DEFINED__
#define ____x_ABI_CWindows_CApplicationModel_CEmail_CIEmailQueryOptions_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CApplicationModel_CEmail_CIEmailQueryOptions __x_ABI_CWindows_CApplicationModel_CEmail_CIEmailQueryOptions;

#endif // ____x_ABI_CWindows_CApplicationModel_CEmail_CIEmailQueryOptions_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CApplicationModel_CEmail_CIEmailQueryOptionsFactory_FWD_DEFINED__
#define ____x_ABI_CWindows_CApplicationModel_CEmail_CIEmailQueryOptionsFactory_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CApplicationModel_CEmail_CIEmailQueryOptionsFactory __x_ABI_CWindows_CApplicationModel_CEmail_CIEmailQueryOptionsFactory;

#endif // ____x_ABI_CWindows_CApplicationModel_CEmail_CIEmailQueryOptionsFactory_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CApplicationModel_CEmail_CIEmailQueryTextSearch_FWD_DEFINED__
#define ____x_ABI_CWindows_CApplicationModel_CEmail_CIEmailQueryTextSearch_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CApplicationModel_CEmail_CIEmailQueryTextSearch __x_ABI_CWindows_CApplicationModel_CEmail_CIEmailQueryTextSearch;

#endif // ____x_ABI_CWindows_CApplicationModel_CEmail_CIEmailQueryTextSearch_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CApplicationModel_CEmail_CIEmailRecipient_FWD_DEFINED__
#define ____x_ABI_CWindows_CApplicationModel_CEmail_CIEmailRecipient_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CApplicationModel_CEmail_CIEmailRecipient __x_ABI_CWindows_CApplicationModel_CEmail_CIEmailRecipient;

#endif // ____x_ABI_CWindows_CApplicationModel_CEmail_CIEmailRecipient_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CApplicationModel_CEmail_CIEmailRecipientFactory_FWD_DEFINED__
#define ____x_ABI_CWindows_CApplicationModel_CEmail_CIEmailRecipientFactory_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CApplicationModel_CEmail_CIEmailRecipientFactory __x_ABI_CWindows_CApplicationModel_CEmail_CIEmailRecipientFactory;

#endif // ____x_ABI_CWindows_CApplicationModel_CEmail_CIEmailRecipientFactory_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CApplicationModel_CEmail_CIEmailRecipientResolutionResult_FWD_DEFINED__
#define ____x_ABI_CWindows_CApplicationModel_CEmail_CIEmailRecipientResolutionResult_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CApplicationModel_CEmail_CIEmailRecipientResolutionResult __x_ABI_CWindows_CApplicationModel_CEmail_CIEmailRecipientResolutionResult;

#endif // ____x_ABI_CWindows_CApplicationModel_CEmail_CIEmailRecipientResolutionResult_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CApplicationModel_CEmail_CIEmailRecipientResolutionResult2_FWD_DEFINED__
#define ____x_ABI_CWindows_CApplicationModel_CEmail_CIEmailRecipientResolutionResult2_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CApplicationModel_CEmail_CIEmailRecipientResolutionResult2 __x_ABI_CWindows_CApplicationModel_CEmail_CIEmailRecipientResolutionResult2;

#endif // ____x_ABI_CWindows_CApplicationModel_CEmail_CIEmailRecipientResolutionResult2_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CApplicationModel_CEmail_CIEmailStore_FWD_DEFINED__
#define ____x_ABI_CWindows_CApplicationModel_CEmail_CIEmailStore_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CApplicationModel_CEmail_CIEmailStore __x_ABI_CWindows_CApplicationModel_CEmail_CIEmailStore;

#endif // ____x_ABI_CWindows_CApplicationModel_CEmail_CIEmailStore_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CApplicationModel_CEmail_CIEmailStoreNotificationTriggerDetails_FWD_DEFINED__
#define ____x_ABI_CWindows_CApplicationModel_CEmail_CIEmailStoreNotificationTriggerDetails_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CApplicationModel_CEmail_CIEmailStoreNotificationTriggerDetails __x_ABI_CWindows_CApplicationModel_CEmail_CIEmailStoreNotificationTriggerDetails;

#endif // ____x_ABI_CWindows_CApplicationModel_CEmail_CIEmailStoreNotificationTriggerDetails_FWD_DEFINED__

// Parameterized interface forward declarations (C)

// Collection interface definitions

typedef interface __x_ABI_C__FIAsyncOperationCompletedHandler_1_boolean __x_ABI_C__FIAsyncOperationCompletedHandler_1_boolean;

#if !defined(____x_ABI_C__FIAsyncOperation_1_boolean_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIAsyncOperation_1_boolean_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIAsyncOperation_1_boolean __x_ABI_C__FIAsyncOperation_1_boolean;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIAsyncOperation_1_boolean;

    typedef struct __x_ABI_C__FIAsyncOperation_1_booleanVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIAsyncOperation_1_boolean* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIAsyncOperation_1_boolean* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIAsyncOperation_1_boolean* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIAsyncOperation_1_boolean* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIAsyncOperation_1_boolean* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIAsyncOperation_1_boolean* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* put_Completed)(__x_ABI_C__FIAsyncOperation_1_boolean* This,
        __x_ABI_C__FIAsyncOperationCompletedHandler_1_boolean* handler);
    HRESULT (STDMETHODCALLTYPE* get_Completed)(__x_ABI_C__FIAsyncOperation_1_boolean* This,
        __x_ABI_C__FIAsyncOperationCompletedHandler_1_boolean** result);
    HRESULT (STDMETHODCALLTYPE* GetResults)(__x_ABI_C__FIAsyncOperation_1_boolean* This,
        boolean* result);

        END_INTERFACE
    } __x_ABI_C__FIAsyncOperation_1_booleanVtbl;

    interface __x_ABI_C__FIAsyncOperation_1_boolean
    {
        CONST_VTBL struct __x_ABI_C__FIAsyncOperation_1_booleanVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIAsyncOperation_1_boolean_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIAsyncOperationCompletedHandler_1_boolean_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIAsyncOperationCompletedHandler_1_boolean_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIAsyncOperationCompletedHandler_1_boolean __x_ABI_C__FIAsyncOperationCompletedHandler_1_boolean;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIAsyncOperationCompletedHandler_1_boolean;

    typedef struct __x_ABI_C__FIAsyncOperationCompletedHandler_1_booleanVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIAsyncOperationCompletedHandler_1_boolean* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIAsyncOperationCompletedHandler_1_boolean* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIAsyncOperationCompletedHandler_1_boolean* This);
        HRESULT (STDMETHODCALLTYPE* Invoke)(__x_ABI_C__FIAsyncOperationCompletedHandler_1_boolean* This,
        __x_ABI_C__FIAsyncOperation_1_boolean* asyncInfo,
        enum __x_ABI_CWindows_CFoundation_CAsyncStatus asyncStatus);

        END_INTERFACE
    } __x_ABI_C__FIAsyncOperationCompletedHandler_1_booleanVtbl;

    interface __x_ABI_C__FIAsyncOperationCompletedHandler_1_boolean
    {
        CONST_VTBL struct __x_ABI_C__FIAsyncOperationCompletedHandler_1_booleanVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIAsyncOperationCompletedHandler_1_boolean_INTERFACE_DEFINED__
    
typedef interface __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailConversation __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailConversation;

#if !defined(____x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailConversation_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailConversation_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailConversation __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailConversation;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailConversation;

    typedef struct __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailConversationVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailConversation* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailConversation* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailConversation* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailConversation* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailConversation* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailConversation* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* put_Completed)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailConversation* This,
        __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailConversation* handler);
    HRESULT (STDMETHODCALLTYPE* get_Completed)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailConversation* This,
        __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailConversation** result);
    HRESULT (STDMETHODCALLTYPE* GetResults)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailConversation* This,
        __x_ABI_CWindows_CApplicationModel_CEmail_CIEmailConversation** result);

        END_INTERFACE
    } __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailConversationVtbl;

    interface __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailConversation
    {
        CONST_VTBL struct __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailConversationVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailConversation_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailConversation_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailConversation_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailConversation __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailConversation;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailConversation;

    typedef struct __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailConversationVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailConversation* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailConversation* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailConversation* This);
        HRESULT (STDMETHODCALLTYPE* Invoke)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailConversation* This,
        __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailConversation* asyncInfo,
        enum __x_ABI_CWindows_CFoundation_CAsyncStatus asyncStatus);

        END_INTERFACE
    } __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailConversationVtbl;

    interface __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailConversation
    {
        CONST_VTBL struct __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailConversationVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailConversation_INTERFACE_DEFINED__
    
typedef interface __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailConversationBatch __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailConversationBatch;

#if !defined(____x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailConversationBatch_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailConversationBatch_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailConversationBatch __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailConversationBatch;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailConversationBatch;

    typedef struct __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailConversationBatchVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailConversationBatch* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailConversationBatch* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailConversationBatch* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailConversationBatch* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailConversationBatch* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailConversationBatch* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* put_Completed)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailConversationBatch* This,
        __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailConversationBatch* handler);
    HRESULT (STDMETHODCALLTYPE* get_Completed)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailConversationBatch* This,
        __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailConversationBatch** result);
    HRESULT (STDMETHODCALLTYPE* GetResults)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailConversationBatch* This,
        __x_ABI_CWindows_CApplicationModel_CEmail_CIEmailConversationBatch** result);

        END_INTERFACE
    } __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailConversationBatchVtbl;

    interface __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailConversationBatch
    {
        CONST_VTBL struct __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailConversationBatchVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailConversationBatch_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailConversationBatch_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailConversationBatch_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailConversationBatch __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailConversationBatch;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailConversationBatch;

    typedef struct __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailConversationBatchVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailConversationBatch* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailConversationBatch* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailConversationBatch* This);
        HRESULT (STDMETHODCALLTYPE* Invoke)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailConversationBatch* This,
        __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailConversationBatch* asyncInfo,
        enum __x_ABI_CWindows_CFoundation_CAsyncStatus asyncStatus);

        END_INTERFACE
    } __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailConversationBatchVtbl;

    interface __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailConversationBatch
    {
        CONST_VTBL struct __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailConversationBatchVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailConversationBatch_INTERFACE_DEFINED__
    
typedef interface __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailFolder __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailFolder;

#if !defined(____x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailFolder_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailFolder_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailFolder __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailFolder;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailFolder;

    typedef struct __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailFolderVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailFolder* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailFolder* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailFolder* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailFolder* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailFolder* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailFolder* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* put_Completed)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailFolder* This,
        __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailFolder* handler);
    HRESULT (STDMETHODCALLTYPE* get_Completed)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailFolder* This,
        __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailFolder** result);
    HRESULT (STDMETHODCALLTYPE* GetResults)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailFolder* This,
        __x_ABI_CWindows_CApplicationModel_CEmail_CIEmailFolder** result);

        END_INTERFACE
    } __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailFolderVtbl;

    interface __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailFolder
    {
        CONST_VTBL struct __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailFolderVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailFolder_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailFolder_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailFolder_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailFolder __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailFolder;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailFolder;

    typedef struct __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailFolderVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailFolder* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailFolder* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailFolder* This);
        HRESULT (STDMETHODCALLTYPE* Invoke)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailFolder* This,
        __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailFolder* asyncInfo,
        enum __x_ABI_CWindows_CFoundation_CAsyncStatus asyncStatus);

        END_INTERFACE
    } __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailFolderVtbl;

    interface __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailFolder
    {
        CONST_VTBL struct __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailFolderVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailFolder_INTERFACE_DEFINED__
    
typedef interface __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailItemCounts __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailItemCounts;

#if !defined(____x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailItemCounts_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailItemCounts_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailItemCounts __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailItemCounts;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailItemCounts;

    typedef struct __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailItemCountsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailItemCounts* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailItemCounts* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailItemCounts* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailItemCounts* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailItemCounts* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailItemCounts* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* put_Completed)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailItemCounts* This,
        __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailItemCounts* handler);
    HRESULT (STDMETHODCALLTYPE* get_Completed)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailItemCounts* This,
        __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailItemCounts** result);
    HRESULT (STDMETHODCALLTYPE* GetResults)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailItemCounts* This,
        __x_ABI_CWindows_CApplicationModel_CEmail_CIEmailItemCounts** result);

        END_INTERFACE
    } __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailItemCountsVtbl;

    interface __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailItemCounts
    {
        CONST_VTBL struct __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailItemCountsVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailItemCounts_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailItemCounts_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailItemCounts_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailItemCounts __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailItemCounts;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailItemCounts;

    typedef struct __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailItemCountsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailItemCounts* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailItemCounts* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailItemCounts* This);
        HRESULT (STDMETHODCALLTYPE* Invoke)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailItemCounts* This,
        __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailItemCounts* asyncInfo,
        enum __x_ABI_CWindows_CFoundation_CAsyncStatus asyncStatus);

        END_INTERFACE
    } __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailItemCountsVtbl;

    interface __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailItemCounts
    {
        CONST_VTBL struct __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailItemCountsVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailItemCounts_INTERFACE_DEFINED__
    
typedef interface __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailMailbox __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailMailbox;

#if !defined(____x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailMailbox_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailMailbox_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailMailbox __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailMailbox;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailMailbox;

    typedef struct __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailMailboxVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailMailbox* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailMailbox* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailMailbox* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailMailbox* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailMailbox* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailMailbox* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* put_Completed)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailMailbox* This,
        __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailMailbox* handler);
    HRESULT (STDMETHODCALLTYPE* get_Completed)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailMailbox* This,
        __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailMailbox** result);
    HRESULT (STDMETHODCALLTYPE* GetResults)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailMailbox* This,
        __x_ABI_CWindows_CApplicationModel_CEmail_CIEmailMailbox** result);

        END_INTERFACE
    } __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailMailboxVtbl;

    interface __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailMailbox
    {
        CONST_VTBL struct __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailMailboxVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailMailbox_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailMailbox_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailMailbox_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailMailbox __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailMailbox;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailMailbox;

    typedef struct __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailMailboxVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailMailbox* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailMailbox* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailMailbox* This);
        HRESULT (STDMETHODCALLTYPE* Invoke)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailMailbox* This,
        __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailMailbox* asyncInfo,
        enum __x_ABI_CWindows_CFoundation_CAsyncStatus asyncStatus);

        END_INTERFACE
    } __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailMailboxVtbl;

    interface __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailMailbox
    {
        CONST_VTBL struct __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailMailboxVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailMailbox_INTERFACE_DEFINED__
    
typedef interface __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailMailboxAutoReplySettings __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailMailboxAutoReplySettings;

#if !defined(____x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailMailboxAutoReplySettings_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailMailboxAutoReplySettings_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailMailboxAutoReplySettings __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailMailboxAutoReplySettings;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailMailboxAutoReplySettings;

    typedef struct __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailMailboxAutoReplySettingsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailMailboxAutoReplySettings* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailMailboxAutoReplySettings* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailMailboxAutoReplySettings* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailMailboxAutoReplySettings* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailMailboxAutoReplySettings* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailMailboxAutoReplySettings* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* put_Completed)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailMailboxAutoReplySettings* This,
        __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailMailboxAutoReplySettings* handler);
    HRESULT (STDMETHODCALLTYPE* get_Completed)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailMailboxAutoReplySettings* This,
        __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailMailboxAutoReplySettings** result);
    HRESULT (STDMETHODCALLTYPE* GetResults)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailMailboxAutoReplySettings* This,
        __x_ABI_CWindows_CApplicationModel_CEmail_CIEmailMailboxAutoReplySettings** result);

        END_INTERFACE
    } __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailMailboxAutoReplySettingsVtbl;

    interface __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailMailboxAutoReplySettings
    {
        CONST_VTBL struct __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailMailboxAutoReplySettingsVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailMailboxAutoReplySettings_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailMailboxAutoReplySettings_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailMailboxAutoReplySettings_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailMailboxAutoReplySettings __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailMailboxAutoReplySettings;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailMailboxAutoReplySettings;

    typedef struct __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailMailboxAutoReplySettingsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailMailboxAutoReplySettings* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailMailboxAutoReplySettings* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailMailboxAutoReplySettings* This);
        HRESULT (STDMETHODCALLTYPE* Invoke)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailMailboxAutoReplySettings* This,
        __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailMailboxAutoReplySettings* asyncInfo,
        enum __x_ABI_CWindows_CFoundation_CAsyncStatus asyncStatus);

        END_INTERFACE
    } __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailMailboxAutoReplySettingsVtbl;

    interface __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailMailboxAutoReplySettings
    {
        CONST_VTBL struct __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailMailboxAutoReplySettingsVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailMailboxAutoReplySettings_INTERFACE_DEFINED__
    
typedef interface __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailMailboxCreateFolderResult __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailMailboxCreateFolderResult;

#if !defined(____x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailMailboxCreateFolderResult_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailMailboxCreateFolderResult_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailMailboxCreateFolderResult __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailMailboxCreateFolderResult;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailMailboxCreateFolderResult;

    typedef struct __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailMailboxCreateFolderResultVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailMailboxCreateFolderResult* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailMailboxCreateFolderResult* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailMailboxCreateFolderResult* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailMailboxCreateFolderResult* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailMailboxCreateFolderResult* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailMailboxCreateFolderResult* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* put_Completed)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailMailboxCreateFolderResult* This,
        __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailMailboxCreateFolderResult* handler);
    HRESULT (STDMETHODCALLTYPE* get_Completed)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailMailboxCreateFolderResult* This,
        __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailMailboxCreateFolderResult** result);
    HRESULT (STDMETHODCALLTYPE* GetResults)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailMailboxCreateFolderResult* This,
        __x_ABI_CWindows_CApplicationModel_CEmail_CIEmailMailboxCreateFolderResult** result);

        END_INTERFACE
    } __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailMailboxCreateFolderResultVtbl;

    interface __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailMailboxCreateFolderResult
    {
        CONST_VTBL struct __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailMailboxCreateFolderResultVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailMailboxCreateFolderResult_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailMailboxCreateFolderResult_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailMailboxCreateFolderResult_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailMailboxCreateFolderResult __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailMailboxCreateFolderResult;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailMailboxCreateFolderResult;

    typedef struct __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailMailboxCreateFolderResultVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailMailboxCreateFolderResult* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailMailboxCreateFolderResult* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailMailboxCreateFolderResult* This);
        HRESULT (STDMETHODCALLTYPE* Invoke)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailMailboxCreateFolderResult* This,
        __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailMailboxCreateFolderResult* asyncInfo,
        enum __x_ABI_CWindows_CFoundation_CAsyncStatus asyncStatus);

        END_INTERFACE
    } __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailMailboxCreateFolderResultVtbl;

    interface __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailMailboxCreateFolderResult
    {
        CONST_VTBL struct __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailMailboxCreateFolderResultVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailMailboxCreateFolderResult_INTERFACE_DEFINED__
    
typedef enum __x_ABI_CWindows_CApplicationModel_CEmail_CEmailMailboxDeleteFolderStatus __x_ABI_CWindows_CApplicationModel_CEmail_CEmailMailboxDeleteFolderStatus;

typedef interface __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailMailboxDeleteFolderStatus __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailMailboxDeleteFolderStatus;

#if !defined(____x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailMailboxDeleteFolderStatus_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailMailboxDeleteFolderStatus_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailMailboxDeleteFolderStatus __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailMailboxDeleteFolderStatus;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailMailboxDeleteFolderStatus;

    typedef struct __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailMailboxDeleteFolderStatusVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailMailboxDeleteFolderStatus* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailMailboxDeleteFolderStatus* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailMailboxDeleteFolderStatus* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailMailboxDeleteFolderStatus* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailMailboxDeleteFolderStatus* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailMailboxDeleteFolderStatus* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* put_Completed)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailMailboxDeleteFolderStatus* This,
        __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailMailboxDeleteFolderStatus* handler);
    HRESULT (STDMETHODCALLTYPE* get_Completed)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailMailboxDeleteFolderStatus* This,
        __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailMailboxDeleteFolderStatus** result);
    HRESULT (STDMETHODCALLTYPE* GetResults)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailMailboxDeleteFolderStatus* This,
        enum __x_ABI_CWindows_CApplicationModel_CEmail_CEmailMailboxDeleteFolderStatus* result);

        END_INTERFACE
    } __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailMailboxDeleteFolderStatusVtbl;

    interface __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailMailboxDeleteFolderStatus
    {
        CONST_VTBL struct __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailMailboxDeleteFolderStatusVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailMailboxDeleteFolderStatus_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailMailboxDeleteFolderStatus_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailMailboxDeleteFolderStatus_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailMailboxDeleteFolderStatus __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailMailboxDeleteFolderStatus;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailMailboxDeleteFolderStatus;

    typedef struct __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailMailboxDeleteFolderStatusVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailMailboxDeleteFolderStatus* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailMailboxDeleteFolderStatus* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailMailboxDeleteFolderStatus* This);
        HRESULT (STDMETHODCALLTYPE* Invoke)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailMailboxDeleteFolderStatus* This,
        __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailMailboxDeleteFolderStatus* asyncInfo,
        enum __x_ABI_CWindows_CFoundation_CAsyncStatus asyncStatus);

        END_INTERFACE
    } __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailMailboxDeleteFolderStatusVtbl;

    interface __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailMailboxDeleteFolderStatus
    {
        CONST_VTBL struct __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailMailboxDeleteFolderStatusVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailMailboxDeleteFolderStatus_INTERFACE_DEFINED__
    
typedef enum __x_ABI_CWindows_CApplicationModel_CEmail_CEmailMailboxEmptyFolderStatus __x_ABI_CWindows_CApplicationModel_CEmail_CEmailMailboxEmptyFolderStatus;

typedef interface __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailMailboxEmptyFolderStatus __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailMailboxEmptyFolderStatus;

#if !defined(____x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailMailboxEmptyFolderStatus_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailMailboxEmptyFolderStatus_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailMailboxEmptyFolderStatus __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailMailboxEmptyFolderStatus;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailMailboxEmptyFolderStatus;

    typedef struct __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailMailboxEmptyFolderStatusVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailMailboxEmptyFolderStatus* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailMailboxEmptyFolderStatus* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailMailboxEmptyFolderStatus* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailMailboxEmptyFolderStatus* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailMailboxEmptyFolderStatus* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailMailboxEmptyFolderStatus* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* put_Completed)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailMailboxEmptyFolderStatus* This,
        __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailMailboxEmptyFolderStatus* handler);
    HRESULT (STDMETHODCALLTYPE* get_Completed)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailMailboxEmptyFolderStatus* This,
        __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailMailboxEmptyFolderStatus** result);
    HRESULT (STDMETHODCALLTYPE* GetResults)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailMailboxEmptyFolderStatus* This,
        enum __x_ABI_CWindows_CApplicationModel_CEmail_CEmailMailboxEmptyFolderStatus* result);

        END_INTERFACE
    } __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailMailboxEmptyFolderStatusVtbl;

    interface __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailMailboxEmptyFolderStatus
    {
        CONST_VTBL struct __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailMailboxEmptyFolderStatusVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailMailboxEmptyFolderStatus_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailMailboxEmptyFolderStatus_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailMailboxEmptyFolderStatus_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailMailboxEmptyFolderStatus __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailMailboxEmptyFolderStatus;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailMailboxEmptyFolderStatus;

    typedef struct __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailMailboxEmptyFolderStatusVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailMailboxEmptyFolderStatus* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailMailboxEmptyFolderStatus* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailMailboxEmptyFolderStatus* This);
        HRESULT (STDMETHODCALLTYPE* Invoke)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailMailboxEmptyFolderStatus* This,
        __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailMailboxEmptyFolderStatus* asyncInfo,
        enum __x_ABI_CWindows_CFoundation_CAsyncStatus asyncStatus);

        END_INTERFACE
    } __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailMailboxEmptyFolderStatusVtbl;

    interface __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailMailboxEmptyFolderStatus
    {
        CONST_VTBL struct __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailMailboxEmptyFolderStatusVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailMailboxEmptyFolderStatus_INTERFACE_DEFINED__
    
typedef interface __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailMessage __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailMessage;

#if !defined(____x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailMessage_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailMessage_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailMessage __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailMessage;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailMessage;

    typedef struct __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailMessageVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailMessage* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailMessage* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailMessage* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailMessage* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailMessage* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailMessage* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* put_Completed)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailMessage* This,
        __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailMessage* handler);
    HRESULT (STDMETHODCALLTYPE* get_Completed)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailMessage* This,
        __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailMessage** result);
    HRESULT (STDMETHODCALLTYPE* GetResults)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailMessage* This,
        __x_ABI_CWindows_CApplicationModel_CEmail_CIEmailMessage** result);

        END_INTERFACE
    } __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailMessageVtbl;

    interface __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailMessage
    {
        CONST_VTBL struct __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailMessageVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailMessage_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailMessage_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailMessage_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailMessage __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailMessage;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailMessage;

    typedef struct __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailMessageVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailMessage* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailMessage* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailMessage* This);
        HRESULT (STDMETHODCALLTYPE* Invoke)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailMessage* This,
        __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailMessage* asyncInfo,
        enum __x_ABI_CWindows_CFoundation_CAsyncStatus asyncStatus);

        END_INTERFACE
    } __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailMessageVtbl;

    interface __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailMessage
    {
        CONST_VTBL struct __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailMessageVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailMessage_INTERFACE_DEFINED__
    
typedef interface __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailMessageBatch __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailMessageBatch;

#if !defined(____x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailMessageBatch_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailMessageBatch_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailMessageBatch __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailMessageBatch;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailMessageBatch;

    typedef struct __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailMessageBatchVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailMessageBatch* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailMessageBatch* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailMessageBatch* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailMessageBatch* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailMessageBatch* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailMessageBatch* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* put_Completed)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailMessageBatch* This,
        __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailMessageBatch* handler);
    HRESULT (STDMETHODCALLTYPE* get_Completed)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailMessageBatch* This,
        __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailMessageBatch** result);
    HRESULT (STDMETHODCALLTYPE* GetResults)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailMessageBatch* This,
        __x_ABI_CWindows_CApplicationModel_CEmail_CIEmailMessageBatch** result);

        END_INTERFACE
    } __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailMessageBatchVtbl;

    interface __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailMessageBatch
    {
        CONST_VTBL struct __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailMessageBatchVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailMessageBatch_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailMessageBatch_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailMessageBatch_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailMessageBatch __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailMessageBatch;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailMessageBatch;

    typedef struct __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailMessageBatchVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailMessageBatch* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailMessageBatch* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailMessageBatch* This);
        HRESULT (STDMETHODCALLTYPE* Invoke)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailMessageBatch* This,
        __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailMessageBatch* asyncInfo,
        enum __x_ABI_CWindows_CFoundation_CAsyncStatus asyncStatus);

        END_INTERFACE
    } __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailMessageBatchVtbl;

    interface __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailMessageBatch
    {
        CONST_VTBL struct __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailMessageBatchVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailMessageBatch_INTERFACE_DEFINED__
    
typedef interface __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailStore __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailStore;

#if !defined(____x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailStore_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailStore_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailStore __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailStore;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailStore;

    typedef struct __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailStoreVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailStore* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailStore* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailStore* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailStore* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailStore* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailStore* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* put_Completed)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailStore* This,
        __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailStore* handler);
    HRESULT (STDMETHODCALLTYPE* get_Completed)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailStore* This,
        __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailStore** result);
    HRESULT (STDMETHODCALLTYPE* GetResults)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailStore* This,
        __x_ABI_CWindows_CApplicationModel_CEmail_CIEmailStore** result);

        END_INTERFACE
    } __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailStoreVtbl;

    interface __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailStore
    {
        CONST_VTBL struct __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailStoreVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailStore_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailStore_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailStore_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailStore __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailStore;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailStore;

    typedef struct __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailStoreVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailStore* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailStore* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailStore* This);
        HRESULT (STDMETHODCALLTYPE* Invoke)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailStore* This,
        __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailStore* asyncInfo,
        enum __x_ABI_CWindows_CFoundation_CAsyncStatus asyncStatus);

        END_INTERFACE
    } __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailStoreVtbl;

    interface __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailStore
    {
        CONST_VTBL struct __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailStoreVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailStore_INTERFACE_DEFINED__
    
typedef enum __x_ABI_CWindows_CApplicationModel_CEmail_CEmailCertificateValidationStatus __x_ABI_CWindows_CApplicationModel_CEmail_CEmailCertificateValidationStatus;

#if !defined(____x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailCertificateValidationStatus_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailCertificateValidationStatus_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailCertificateValidationStatus __x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailCertificateValidationStatus;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailCertificateValidationStatus;

    typedef struct __x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailCertificateValidationStatusVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailCertificateValidationStatus* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailCertificateValidationStatus* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailCertificateValidationStatus* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailCertificateValidationStatus* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailCertificateValidationStatus* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailCertificateValidationStatus* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Current)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailCertificateValidationStatus* This,
        enum __x_ABI_CWindows_CApplicationModel_CEmail_CEmailCertificateValidationStatus* result);
    HRESULT (STDMETHODCALLTYPE* get_HasCurrent)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailCertificateValidationStatus* This,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* MoveNext)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailCertificateValidationStatus* This,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailCertificateValidationStatus* This,
        UINT32 itemsLength,
        enum __x_ABI_CWindows_CApplicationModel_CEmail_CEmailCertificateValidationStatus* items,
        UINT32* result);

        END_INTERFACE
    } __x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailCertificateValidationStatusVtbl;

    interface __x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailCertificateValidationStatus
    {
        CONST_VTBL struct __x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailCertificateValidationStatusVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailCertificateValidationStatus_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailCertificateValidationStatus_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailCertificateValidationStatus_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailCertificateValidationStatus __x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailCertificateValidationStatus;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailCertificateValidationStatus;

    typedef struct __x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailCertificateValidationStatusVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailCertificateValidationStatus* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailCertificateValidationStatus* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailCertificateValidationStatus* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailCertificateValidationStatus* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailCertificateValidationStatus* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailCertificateValidationStatus* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* First)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailCertificateValidationStatus* This,
        __x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailCertificateValidationStatus** result);

        END_INTERFACE
    } __x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailCertificateValidationStatusVtbl;

    interface __x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailCertificateValidationStatus
    {
        CONST_VTBL struct __x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailCertificateValidationStatusVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailCertificateValidationStatus_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailCertificateValidationStatus_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailCertificateValidationStatus_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailCertificateValidationStatus __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailCertificateValidationStatus;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailCertificateValidationStatus;

    typedef struct __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailCertificateValidationStatusVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailCertificateValidationStatus* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailCertificateValidationStatus* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailCertificateValidationStatus* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailCertificateValidationStatus* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailCertificateValidationStatus* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailCertificateValidationStatus* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* GetAt)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailCertificateValidationStatus* This,
        UINT32 index,
        enum __x_ABI_CWindows_CApplicationModel_CEmail_CEmailCertificateValidationStatus* result);
    HRESULT (STDMETHODCALLTYPE* get_Size)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailCertificateValidationStatus* This,
        UINT32* result);
    HRESULT (STDMETHODCALLTYPE* IndexOf)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailCertificateValidationStatus* This,
        enum __x_ABI_CWindows_CApplicationModel_CEmail_CEmailCertificateValidationStatus value,
        UINT32* index,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailCertificateValidationStatus* This,
        UINT32 startIndex,
        UINT32 itemsLength,
        enum __x_ABI_CWindows_CApplicationModel_CEmail_CEmailCertificateValidationStatus* items,
        UINT32* result);

        END_INTERFACE
    } __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailCertificateValidationStatusVtbl;

    interface __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailCertificateValidationStatus
    {
        CONST_VTBL struct __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailCertificateValidationStatusVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailCertificateValidationStatus_INTERFACE_DEFINED__
    
typedef interface __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailCertificateValidationStatus __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailCertificateValidationStatus;

#if !defined(____x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailCertificateValidationStatus_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailCertificateValidationStatus_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailCertificateValidationStatus __x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailCertificateValidationStatus;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailCertificateValidationStatus;

    typedef struct __x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailCertificateValidationStatusVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailCertificateValidationStatus* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailCertificateValidationStatus* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailCertificateValidationStatus* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailCertificateValidationStatus* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailCertificateValidationStatus* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailCertificateValidationStatus* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* put_Completed)(__x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailCertificateValidationStatus* This,
        __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailCertificateValidationStatus* handler);
    HRESULT (STDMETHODCALLTYPE* get_Completed)(__x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailCertificateValidationStatus* This,
        __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailCertificateValidationStatus** result);
    HRESULT (STDMETHODCALLTYPE* GetResults)(__x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailCertificateValidationStatus* This,
        __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailCertificateValidationStatus** result);

        END_INTERFACE
    } __x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailCertificateValidationStatusVtbl;

    interface __x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailCertificateValidationStatus
    {
        CONST_VTBL struct __x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailCertificateValidationStatusVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailCertificateValidationStatus_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailCertificateValidationStatus_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailCertificateValidationStatus_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailCertificateValidationStatus __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailCertificateValidationStatus;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailCertificateValidationStatus;

    typedef struct __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailCertificateValidationStatusVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailCertificateValidationStatus* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailCertificateValidationStatus* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailCertificateValidationStatus* This);
        HRESULT (STDMETHODCALLTYPE* Invoke)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailCertificateValidationStatus* This,
        __x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailCertificateValidationStatus* asyncInfo,
        enum __x_ABI_CWindows_CFoundation_CAsyncStatus asyncStatus);

        END_INTERFACE
    } __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailCertificateValidationStatusVtbl;

    interface __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailCertificateValidationStatus
    {
        CONST_VTBL struct __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailCertificateValidationStatusVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailCertificateValidationStatus_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailFolder_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailFolder_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailFolder __x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailFolder;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailFolder;

    typedef struct __x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailFolderVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailFolder* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailFolder* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailFolder* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailFolder* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailFolder* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailFolder* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Current)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailFolder* This,
        __x_ABI_CWindows_CApplicationModel_CEmail_CIEmailFolder** result);
    HRESULT (STDMETHODCALLTYPE* get_HasCurrent)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailFolder* This,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* MoveNext)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailFolder* This,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailFolder* This,
        UINT32 itemsLength,
        __x_ABI_CWindows_CApplicationModel_CEmail_CIEmailFolder** items,
        UINT32* result);

        END_INTERFACE
    } __x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailFolderVtbl;

    interface __x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailFolder
    {
        CONST_VTBL struct __x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailFolderVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailFolder_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailFolder_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailFolder_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailFolder __x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailFolder;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailFolder;

    typedef struct __x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailFolderVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailFolder* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailFolder* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailFolder* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailFolder* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailFolder* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailFolder* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* First)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailFolder* This,
        __x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailFolder** result);

        END_INTERFACE
    } __x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailFolderVtbl;

    interface __x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailFolder
    {
        CONST_VTBL struct __x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailFolderVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailFolder_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailFolder_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailFolder_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailFolder __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailFolder;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailFolder;

    typedef struct __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailFolderVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailFolder* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailFolder* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailFolder* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailFolder* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailFolder* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailFolder* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* GetAt)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailFolder* This,
        UINT32 index,
        __x_ABI_CWindows_CApplicationModel_CEmail_CIEmailFolder** result);
    HRESULT (STDMETHODCALLTYPE* get_Size)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailFolder* This,
        UINT32* result);
    HRESULT (STDMETHODCALLTYPE* IndexOf)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailFolder* This,
        __x_ABI_CWindows_CApplicationModel_CEmail_CIEmailFolder* value,
        UINT32* index,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailFolder* This,
        UINT32 startIndex,
        UINT32 itemsLength,
        __x_ABI_CWindows_CApplicationModel_CEmail_CIEmailFolder** items,
        UINT32* result);

        END_INTERFACE
    } __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailFolderVtbl;

    interface __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailFolder
    {
        CONST_VTBL struct __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailFolderVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailFolder_INTERFACE_DEFINED__
    
typedef interface __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailFolder __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailFolder;

#if !defined(____x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailFolder_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailFolder_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailFolder __x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailFolder;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailFolder;

    typedef struct __x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailFolderVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailFolder* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailFolder* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailFolder* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailFolder* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailFolder* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailFolder* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* put_Completed)(__x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailFolder* This,
        __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailFolder* handler);
    HRESULT (STDMETHODCALLTYPE* get_Completed)(__x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailFolder* This,
        __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailFolder** result);
    HRESULT (STDMETHODCALLTYPE* GetResults)(__x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailFolder* This,
        __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailFolder** result);

        END_INTERFACE
    } __x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailFolderVtbl;

    interface __x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailFolder
    {
        CONST_VTBL struct __x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailFolderVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailFolder_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailFolder_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailFolder_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailFolder __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailFolder;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailFolder;

    typedef struct __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailFolderVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailFolder* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailFolder* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailFolder* This);
        HRESULT (STDMETHODCALLTYPE* Invoke)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailFolder* This,
        __x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailFolder* asyncInfo,
        enum __x_ABI_CWindows_CFoundation_CAsyncStatus asyncStatus);

        END_INTERFACE
    } __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailFolderVtbl;

    interface __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailFolder
    {
        CONST_VTBL struct __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailFolderVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailFolder_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailMailbox_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailMailbox_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailMailbox __x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailMailbox;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailMailbox;

    typedef struct __x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailMailboxVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailMailbox* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailMailbox* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailMailbox* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailMailbox* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailMailbox* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailMailbox* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Current)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailMailbox* This,
        __x_ABI_CWindows_CApplicationModel_CEmail_CIEmailMailbox** result);
    HRESULT (STDMETHODCALLTYPE* get_HasCurrent)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailMailbox* This,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* MoveNext)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailMailbox* This,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailMailbox* This,
        UINT32 itemsLength,
        __x_ABI_CWindows_CApplicationModel_CEmail_CIEmailMailbox** items,
        UINT32* result);

        END_INTERFACE
    } __x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailMailboxVtbl;

    interface __x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailMailbox
    {
        CONST_VTBL struct __x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailMailboxVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailMailbox_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailMailbox_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailMailbox_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailMailbox __x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailMailbox;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailMailbox;

    typedef struct __x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailMailboxVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailMailbox* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailMailbox* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailMailbox* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailMailbox* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailMailbox* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailMailbox* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* First)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailMailbox* This,
        __x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailMailbox** result);

        END_INTERFACE
    } __x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailMailboxVtbl;

    interface __x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailMailbox
    {
        CONST_VTBL struct __x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailMailboxVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailMailbox_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailMailbox_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailMailbox_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailMailbox __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailMailbox;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailMailbox;

    typedef struct __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailMailboxVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailMailbox* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailMailbox* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailMailbox* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailMailbox* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailMailbox* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailMailbox* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* GetAt)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailMailbox* This,
        UINT32 index,
        __x_ABI_CWindows_CApplicationModel_CEmail_CIEmailMailbox** result);
    HRESULT (STDMETHODCALLTYPE* get_Size)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailMailbox* This,
        UINT32* result);
    HRESULT (STDMETHODCALLTYPE* IndexOf)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailMailbox* This,
        __x_ABI_CWindows_CApplicationModel_CEmail_CIEmailMailbox* value,
        UINT32* index,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailMailbox* This,
        UINT32 startIndex,
        UINT32 itemsLength,
        __x_ABI_CWindows_CApplicationModel_CEmail_CIEmailMailbox** items,
        UINT32* result);

        END_INTERFACE
    } __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailMailboxVtbl;

    interface __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailMailbox
    {
        CONST_VTBL struct __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailMailboxVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailMailbox_INTERFACE_DEFINED__
    
typedef interface __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailMailbox __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailMailbox;

#if !defined(____x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailMailbox_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailMailbox_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailMailbox __x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailMailbox;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailMailbox;

    typedef struct __x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailMailboxVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailMailbox* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailMailbox* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailMailbox* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailMailbox* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailMailbox* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailMailbox* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* put_Completed)(__x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailMailbox* This,
        __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailMailbox* handler);
    HRESULT (STDMETHODCALLTYPE* get_Completed)(__x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailMailbox* This,
        __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailMailbox** result);
    HRESULT (STDMETHODCALLTYPE* GetResults)(__x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailMailbox* This,
        __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailMailbox** result);

        END_INTERFACE
    } __x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailMailboxVtbl;

    interface __x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailMailbox
    {
        CONST_VTBL struct __x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailMailboxVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailMailbox_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailMailbox_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailMailbox_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailMailbox __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailMailbox;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailMailbox;

    typedef struct __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailMailboxVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailMailbox* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailMailbox* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailMailbox* This);
        HRESULT (STDMETHODCALLTYPE* Invoke)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailMailbox* This,
        __x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailMailbox* asyncInfo,
        enum __x_ABI_CWindows_CFoundation_CAsyncStatus asyncStatus);

        END_INTERFACE
    } __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailMailboxVtbl;

    interface __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailMailbox
    {
        CONST_VTBL struct __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailMailboxVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailMailbox_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailMailboxChange_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailMailboxChange_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailMailboxChange __x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailMailboxChange;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailMailboxChange;

    typedef struct __x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailMailboxChangeVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailMailboxChange* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailMailboxChange* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailMailboxChange* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailMailboxChange* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailMailboxChange* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailMailboxChange* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Current)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailMailboxChange* This,
        __x_ABI_CWindows_CApplicationModel_CEmail_CIEmailMailboxChange** result);
    HRESULT (STDMETHODCALLTYPE* get_HasCurrent)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailMailboxChange* This,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* MoveNext)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailMailboxChange* This,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailMailboxChange* This,
        UINT32 itemsLength,
        __x_ABI_CWindows_CApplicationModel_CEmail_CIEmailMailboxChange** items,
        UINT32* result);

        END_INTERFACE
    } __x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailMailboxChangeVtbl;

    interface __x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailMailboxChange
    {
        CONST_VTBL struct __x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailMailboxChangeVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailMailboxChange_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailMailboxChange_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailMailboxChange_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailMailboxChange __x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailMailboxChange;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailMailboxChange;

    typedef struct __x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailMailboxChangeVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailMailboxChange* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailMailboxChange* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailMailboxChange* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailMailboxChange* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailMailboxChange* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailMailboxChange* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* First)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailMailboxChange* This,
        __x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailMailboxChange** result);

        END_INTERFACE
    } __x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailMailboxChangeVtbl;

    interface __x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailMailboxChange
    {
        CONST_VTBL struct __x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailMailboxChangeVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailMailboxChange_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailMailboxChange_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailMailboxChange_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailMailboxChange __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailMailboxChange;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailMailboxChange;

    typedef struct __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailMailboxChangeVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailMailboxChange* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailMailboxChange* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailMailboxChange* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailMailboxChange* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailMailboxChange* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailMailboxChange* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* GetAt)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailMailboxChange* This,
        UINT32 index,
        __x_ABI_CWindows_CApplicationModel_CEmail_CIEmailMailboxChange** result);
    HRESULT (STDMETHODCALLTYPE* get_Size)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailMailboxChange* This,
        UINT32* result);
    HRESULT (STDMETHODCALLTYPE* IndexOf)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailMailboxChange* This,
        __x_ABI_CWindows_CApplicationModel_CEmail_CIEmailMailboxChange* value,
        UINT32* index,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailMailboxChange* This,
        UINT32 startIndex,
        UINT32 itemsLength,
        __x_ABI_CWindows_CApplicationModel_CEmail_CIEmailMailboxChange** items,
        UINT32* result);

        END_INTERFACE
    } __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailMailboxChangeVtbl;

    interface __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailMailboxChange
    {
        CONST_VTBL struct __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailMailboxChangeVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailMailboxChange_INTERFACE_DEFINED__
    
typedef interface __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailMailboxChange __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailMailboxChange;

#if !defined(____x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailMailboxChange_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailMailboxChange_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailMailboxChange __x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailMailboxChange;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailMailboxChange;

    typedef struct __x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailMailboxChangeVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailMailboxChange* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailMailboxChange* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailMailboxChange* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailMailboxChange* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailMailboxChange* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailMailboxChange* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* put_Completed)(__x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailMailboxChange* This,
        __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailMailboxChange* handler);
    HRESULT (STDMETHODCALLTYPE* get_Completed)(__x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailMailboxChange* This,
        __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailMailboxChange** result);
    HRESULT (STDMETHODCALLTYPE* GetResults)(__x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailMailboxChange* This,
        __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailMailboxChange** result);

        END_INTERFACE
    } __x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailMailboxChangeVtbl;

    interface __x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailMailboxChange
    {
        CONST_VTBL struct __x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailMailboxChangeVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailMailboxChange_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailMailboxChange_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailMailboxChange_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailMailboxChange __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailMailboxChange;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailMailboxChange;

    typedef struct __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailMailboxChangeVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailMailboxChange* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailMailboxChange* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailMailboxChange* This);
        HRESULT (STDMETHODCALLTYPE* Invoke)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailMailboxChange* This,
        __x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailMailboxChange* asyncInfo,
        enum __x_ABI_CWindows_CFoundation_CAsyncStatus asyncStatus);

        END_INTERFACE
    } __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailMailboxChangeVtbl;

    interface __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailMailboxChange
    {
        CONST_VTBL struct __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailMailboxChangeVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailMailboxChange_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailMessage_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailMessage_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailMessage __x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailMessage;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailMessage;

    typedef struct __x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailMessageVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailMessage* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailMessage* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailMessage* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailMessage* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailMessage* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailMessage* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Current)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailMessage* This,
        __x_ABI_CWindows_CApplicationModel_CEmail_CIEmailMessage** result);
    HRESULT (STDMETHODCALLTYPE* get_HasCurrent)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailMessage* This,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* MoveNext)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailMessage* This,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailMessage* This,
        UINT32 itemsLength,
        __x_ABI_CWindows_CApplicationModel_CEmail_CIEmailMessage** items,
        UINT32* result);

        END_INTERFACE
    } __x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailMessageVtbl;

    interface __x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailMessage
    {
        CONST_VTBL struct __x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailMessageVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailMessage_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailMessage_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailMessage_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailMessage __x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailMessage;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailMessage;

    typedef struct __x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailMessageVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailMessage* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailMessage* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailMessage* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailMessage* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailMessage* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailMessage* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* First)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailMessage* This,
        __x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailMessage** result);

        END_INTERFACE
    } __x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailMessageVtbl;

    interface __x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailMessage
    {
        CONST_VTBL struct __x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailMessageVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailMessage_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailMessage_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailMessage_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailMessage __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailMessage;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailMessage;

    typedef struct __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailMessageVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailMessage* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailMessage* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailMessage* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailMessage* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailMessage* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailMessage* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* GetAt)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailMessage* This,
        UINT32 index,
        __x_ABI_CWindows_CApplicationModel_CEmail_CIEmailMessage** result);
    HRESULT (STDMETHODCALLTYPE* get_Size)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailMessage* This,
        UINT32* result);
    HRESULT (STDMETHODCALLTYPE* IndexOf)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailMessage* This,
        __x_ABI_CWindows_CApplicationModel_CEmail_CIEmailMessage* value,
        UINT32* index,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailMessage* This,
        UINT32 startIndex,
        UINT32 itemsLength,
        __x_ABI_CWindows_CApplicationModel_CEmail_CIEmailMessage** items,
        UINT32* result);

        END_INTERFACE
    } __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailMessageVtbl;

    interface __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailMessage
    {
        CONST_VTBL struct __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailMessageVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailMessage_INTERFACE_DEFINED__
    
typedef interface __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailMessage __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailMessage;

#if !defined(____x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailMessage_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailMessage_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailMessage __x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailMessage;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailMessage;

    typedef struct __x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailMessageVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailMessage* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailMessage* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailMessage* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailMessage* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailMessage* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailMessage* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* put_Completed)(__x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailMessage* This,
        __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailMessage* handler);
    HRESULT (STDMETHODCALLTYPE* get_Completed)(__x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailMessage* This,
        __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailMessage** result);
    HRESULT (STDMETHODCALLTYPE* GetResults)(__x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailMessage* This,
        __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailMessage** result);

        END_INTERFACE
    } __x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailMessageVtbl;

    interface __x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailMessage
    {
        CONST_VTBL struct __x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailMessageVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailMessage_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailMessage_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailMessage_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailMessage __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailMessage;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailMessage;

    typedef struct __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailMessageVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailMessage* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailMessage* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailMessage* This);
        HRESULT (STDMETHODCALLTYPE* Invoke)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailMessage* This,
        __x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailMessage* asyncInfo,
        enum __x_ABI_CWindows_CFoundation_CAsyncStatus asyncStatus);

        END_INTERFACE
    } __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailMessageVtbl;

    interface __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailMessage
    {
        CONST_VTBL struct __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailMessageVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailMessage_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailRecipientResolutionResult_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailRecipientResolutionResult_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailRecipientResolutionResult __x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailRecipientResolutionResult;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailRecipientResolutionResult;

    typedef struct __x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailRecipientResolutionResultVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailRecipientResolutionResult* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailRecipientResolutionResult* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailRecipientResolutionResult* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailRecipientResolutionResult* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailRecipientResolutionResult* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailRecipientResolutionResult* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Current)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailRecipientResolutionResult* This,
        __x_ABI_CWindows_CApplicationModel_CEmail_CIEmailRecipientResolutionResult** result);
    HRESULT (STDMETHODCALLTYPE* get_HasCurrent)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailRecipientResolutionResult* This,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* MoveNext)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailRecipientResolutionResult* This,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailRecipientResolutionResult* This,
        UINT32 itemsLength,
        __x_ABI_CWindows_CApplicationModel_CEmail_CIEmailRecipientResolutionResult** items,
        UINT32* result);

        END_INTERFACE
    } __x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailRecipientResolutionResultVtbl;

    interface __x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailRecipientResolutionResult
    {
        CONST_VTBL struct __x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailRecipientResolutionResultVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailRecipientResolutionResult_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailRecipientResolutionResult_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailRecipientResolutionResult_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailRecipientResolutionResult __x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailRecipientResolutionResult;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailRecipientResolutionResult;

    typedef struct __x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailRecipientResolutionResultVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailRecipientResolutionResult* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailRecipientResolutionResult* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailRecipientResolutionResult* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailRecipientResolutionResult* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailRecipientResolutionResult* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailRecipientResolutionResult* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* First)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailRecipientResolutionResult* This,
        __x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailRecipientResolutionResult** result);

        END_INTERFACE
    } __x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailRecipientResolutionResultVtbl;

    interface __x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailRecipientResolutionResult
    {
        CONST_VTBL struct __x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailRecipientResolutionResultVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailRecipientResolutionResult_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailRecipientResolutionResult_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailRecipientResolutionResult_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailRecipientResolutionResult __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailRecipientResolutionResult;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailRecipientResolutionResult;

    typedef struct __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailRecipientResolutionResultVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailRecipientResolutionResult* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailRecipientResolutionResult* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailRecipientResolutionResult* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailRecipientResolutionResult* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailRecipientResolutionResult* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailRecipientResolutionResult* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* GetAt)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailRecipientResolutionResult* This,
        UINT32 index,
        __x_ABI_CWindows_CApplicationModel_CEmail_CIEmailRecipientResolutionResult** result);
    HRESULT (STDMETHODCALLTYPE* get_Size)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailRecipientResolutionResult* This,
        UINT32* result);
    HRESULT (STDMETHODCALLTYPE* IndexOf)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailRecipientResolutionResult* This,
        __x_ABI_CWindows_CApplicationModel_CEmail_CIEmailRecipientResolutionResult* value,
        UINT32* index,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailRecipientResolutionResult* This,
        UINT32 startIndex,
        UINT32 itemsLength,
        __x_ABI_CWindows_CApplicationModel_CEmail_CIEmailRecipientResolutionResult** items,
        UINT32* result);

        END_INTERFACE
    } __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailRecipientResolutionResultVtbl;

    interface __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailRecipientResolutionResult
    {
        CONST_VTBL struct __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailRecipientResolutionResultVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailRecipientResolutionResult_INTERFACE_DEFINED__
    
typedef interface __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailRecipientResolutionResult __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailRecipientResolutionResult;

#if !defined(____x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailRecipientResolutionResult_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailRecipientResolutionResult_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailRecipientResolutionResult __x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailRecipientResolutionResult;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailRecipientResolutionResult;

    typedef struct __x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailRecipientResolutionResultVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailRecipientResolutionResult* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailRecipientResolutionResult* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailRecipientResolutionResult* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailRecipientResolutionResult* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailRecipientResolutionResult* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailRecipientResolutionResult* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* put_Completed)(__x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailRecipientResolutionResult* This,
        __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailRecipientResolutionResult* handler);
    HRESULT (STDMETHODCALLTYPE* get_Completed)(__x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailRecipientResolutionResult* This,
        __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailRecipientResolutionResult** result);
    HRESULT (STDMETHODCALLTYPE* GetResults)(__x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailRecipientResolutionResult* This,
        __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailRecipientResolutionResult** result);

        END_INTERFACE
    } __x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailRecipientResolutionResultVtbl;

    interface __x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailRecipientResolutionResult
    {
        CONST_VTBL struct __x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailRecipientResolutionResultVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailRecipientResolutionResult_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailRecipientResolutionResult_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailRecipientResolutionResult_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailRecipientResolutionResult __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailRecipientResolutionResult;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailRecipientResolutionResult;

    typedef struct __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailRecipientResolutionResultVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailRecipientResolutionResult* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailRecipientResolutionResult* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailRecipientResolutionResult* This);
        HRESULT (STDMETHODCALLTYPE* Invoke)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailRecipientResolutionResult* This,
        __x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailRecipientResolutionResult* asyncInfo,
        enum __x_ABI_CWindows_CFoundation_CAsyncStatus asyncStatus);

        END_INTERFACE
    } __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailRecipientResolutionResultVtbl;

    interface __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailRecipientResolutionResult
    {
        CONST_VTBL struct __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailRecipientResolutionResultVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailRecipientResolutionResult_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIIterator_1_HSTRING_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIIterator_1_HSTRING_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIIterator_1_HSTRING __x_ABI_C__FIIterator_1_HSTRING;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIIterator_1_HSTRING;

    typedef struct __x_ABI_C__FIIterator_1_HSTRINGVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIIterator_1_HSTRING* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIIterator_1_HSTRING* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIIterator_1_HSTRING* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIIterator_1_HSTRING* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIIterator_1_HSTRING* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIIterator_1_HSTRING* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Current)(__x_ABI_C__FIIterator_1_HSTRING* This,
        HSTRING* result);
    HRESULT (STDMETHODCALLTYPE* get_HasCurrent)(__x_ABI_C__FIIterator_1_HSTRING* This,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* MoveNext)(__x_ABI_C__FIIterator_1_HSTRING* This,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__x_ABI_C__FIIterator_1_HSTRING* This,
        UINT32 itemsLength,
        HSTRING* items,
        UINT32* result);

        END_INTERFACE
    } __x_ABI_C__FIIterator_1_HSTRINGVtbl;

    interface __x_ABI_C__FIIterator_1_HSTRING
    {
        CONST_VTBL struct __x_ABI_C__FIIterator_1_HSTRINGVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIIterator_1_HSTRING_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIIterable_1_HSTRING_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIIterable_1_HSTRING_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIIterable_1_HSTRING __x_ABI_C__FIIterable_1_HSTRING;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIIterable_1_HSTRING;

    typedef struct __x_ABI_C__FIIterable_1_HSTRINGVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIIterable_1_HSTRING* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIIterable_1_HSTRING* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIIterable_1_HSTRING* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIIterable_1_HSTRING* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIIterable_1_HSTRING* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIIterable_1_HSTRING* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* First)(__x_ABI_C__FIIterable_1_HSTRING* This,
        __x_ABI_C__FIIterator_1_HSTRING** result);

        END_INTERFACE
    } __x_ABI_C__FIIterable_1_HSTRINGVtbl;

    interface __x_ABI_C__FIIterable_1_HSTRING
    {
        CONST_VTBL struct __x_ABI_C__FIIterable_1_HSTRINGVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIIterable_1_HSTRING_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailAttachment_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailAttachment_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailAttachment __x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailAttachment;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailAttachment;

    typedef struct __x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailAttachmentVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailAttachment* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailAttachment* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailAttachment* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailAttachment* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailAttachment* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailAttachment* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Current)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailAttachment* This,
        __x_ABI_CWindows_CApplicationModel_CEmail_CIEmailAttachment** result);
    HRESULT (STDMETHODCALLTYPE* get_HasCurrent)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailAttachment* This,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* MoveNext)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailAttachment* This,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailAttachment* This,
        UINT32 itemsLength,
        __x_ABI_CWindows_CApplicationModel_CEmail_CIEmailAttachment** items,
        UINT32* result);

        END_INTERFACE
    } __x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailAttachmentVtbl;

    interface __x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailAttachment
    {
        CONST_VTBL struct __x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailAttachmentVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailAttachment_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailAttachment_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailAttachment_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailAttachment __x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailAttachment;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailAttachment;

    typedef struct __x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailAttachmentVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailAttachment* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailAttachment* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailAttachment* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailAttachment* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailAttachment* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailAttachment* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* First)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailAttachment* This,
        __x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailAttachment** result);

        END_INTERFACE
    } __x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailAttachmentVtbl;

    interface __x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailAttachment
    {
        CONST_VTBL struct __x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailAttachmentVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailAttachment_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailConversation_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailConversation_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailConversation __x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailConversation;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailConversation;

    typedef struct __x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailConversationVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailConversation* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailConversation* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailConversation* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailConversation* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailConversation* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailConversation* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Current)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailConversation* This,
        __x_ABI_CWindows_CApplicationModel_CEmail_CIEmailConversation** result);
    HRESULT (STDMETHODCALLTYPE* get_HasCurrent)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailConversation* This,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* MoveNext)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailConversation* This,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailConversation* This,
        UINT32 itemsLength,
        __x_ABI_CWindows_CApplicationModel_CEmail_CIEmailConversation** items,
        UINT32* result);

        END_INTERFACE
    } __x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailConversationVtbl;

    interface __x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailConversation
    {
        CONST_VTBL struct __x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailConversationVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailConversation_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailConversation_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailConversation_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailConversation __x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailConversation;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailConversation;

    typedef struct __x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailConversationVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailConversation* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailConversation* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailConversation* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailConversation* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailConversation* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailConversation* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* First)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailConversation* This,
        __x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailConversation** result);

        END_INTERFACE
    } __x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailConversationVtbl;

    interface __x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailConversation
    {
        CONST_VTBL struct __x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailConversationVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailConversation_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailMailboxAction_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailMailboxAction_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailMailboxAction __x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailMailboxAction;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailMailboxAction;

    typedef struct __x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailMailboxActionVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailMailboxAction* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailMailboxAction* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailMailboxAction* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailMailboxAction* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailMailboxAction* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailMailboxAction* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Current)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailMailboxAction* This,
        __x_ABI_CWindows_CApplicationModel_CEmail_CIEmailMailboxAction** result);
    HRESULT (STDMETHODCALLTYPE* get_HasCurrent)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailMailboxAction* This,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* MoveNext)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailMailboxAction* This,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailMailboxAction* This,
        UINT32 itemsLength,
        __x_ABI_CWindows_CApplicationModel_CEmail_CIEmailMailboxAction** items,
        UINT32* result);

        END_INTERFACE
    } __x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailMailboxActionVtbl;

    interface __x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailMailboxAction
    {
        CONST_VTBL struct __x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailMailboxActionVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailMailboxAction_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailMailboxAction_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailMailboxAction_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailMailboxAction __x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailMailboxAction;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailMailboxAction;

    typedef struct __x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailMailboxActionVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailMailboxAction* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailMailboxAction* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailMailboxAction* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailMailboxAction* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailMailboxAction* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailMailboxAction* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* First)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailMailboxAction* This,
        __x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailMailboxAction** result);

        END_INTERFACE
    } __x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailMailboxActionVtbl;

    interface __x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailMailboxAction
    {
        CONST_VTBL struct __x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailMailboxActionVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailMailboxAction_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailRecipient_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailRecipient_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailRecipient __x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailRecipient;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailRecipient;

    typedef struct __x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailRecipientVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailRecipient* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailRecipient* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailRecipient* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailRecipient* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailRecipient* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailRecipient* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Current)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailRecipient* This,
        __x_ABI_CWindows_CApplicationModel_CEmail_CIEmailRecipient** result);
    HRESULT (STDMETHODCALLTYPE* get_HasCurrent)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailRecipient* This,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* MoveNext)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailRecipient* This,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailRecipient* This,
        UINT32 itemsLength,
        __x_ABI_CWindows_CApplicationModel_CEmail_CIEmailRecipient** items,
        UINT32* result);

        END_INTERFACE
    } __x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailRecipientVtbl;

    interface __x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailRecipient
    {
        CONST_VTBL struct __x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailRecipientVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailRecipient_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailRecipient_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailRecipient_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailRecipient __x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailRecipient;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailRecipient;

    typedef struct __x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailRecipientVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailRecipient* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailRecipient* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailRecipient* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailRecipient* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailRecipient* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailRecipient* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* First)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailRecipient* This,
        __x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailRecipient** result);

        END_INTERFACE
    } __x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailRecipientVtbl;

    interface __x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailRecipient
    {
        CONST_VTBL struct __x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailRecipientVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailRecipient_INTERFACE_DEFINED__
    
#ifndef ____x_ABI_CWindows_CSecurity_CCryptography_CCertificates_CICertificate_FWD_DEFINED__
#define ____x_ABI_CWindows_CSecurity_CCryptography_CCertificates_CICertificate_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CSecurity_CCryptography_CCertificates_CICertificate __x_ABI_CWindows_CSecurity_CCryptography_CCertificates_CICertificate;

#endif // ____x_ABI_CWindows_CSecurity_CCryptography_CCertificates_CICertificate_FWD_DEFINED__

#if !defined(____x_ABI_C__FIIterator_1___x_ABI_CWindows__CSecurity__CCryptography__CCertificates__CCertificate_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIIterator_1___x_ABI_CWindows__CSecurity__CCryptography__CCertificates__CCertificate_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIIterator_1___x_ABI_CWindows__CSecurity__CCryptography__CCertificates__CCertificate __x_ABI_C__FIIterator_1___x_ABI_CWindows__CSecurity__CCryptography__CCertificates__CCertificate;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIIterator_1___x_ABI_CWindows__CSecurity__CCryptography__CCertificates__CCertificate;

    typedef struct __x_ABI_C__FIIterator_1___x_ABI_CWindows__CSecurity__CCryptography__CCertificates__CCertificateVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CSecurity__CCryptography__CCertificates__CCertificate* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CSecurity__CCryptography__CCertificates__CCertificate* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CSecurity__CCryptography__CCertificates__CCertificate* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CSecurity__CCryptography__CCertificates__CCertificate* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CSecurity__CCryptography__CCertificates__CCertificate* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CSecurity__CCryptography__CCertificates__CCertificate* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Current)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CSecurity__CCryptography__CCertificates__CCertificate* This,
        __x_ABI_CWindows_CSecurity_CCryptography_CCertificates_CICertificate** result);
    HRESULT (STDMETHODCALLTYPE* get_HasCurrent)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CSecurity__CCryptography__CCertificates__CCertificate* This,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* MoveNext)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CSecurity__CCryptography__CCertificates__CCertificate* This,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CSecurity__CCryptography__CCertificates__CCertificate* This,
        UINT32 itemsLength,
        __x_ABI_CWindows_CSecurity_CCryptography_CCertificates_CICertificate** items,
        UINT32* result);

        END_INTERFACE
    } __x_ABI_C__FIIterator_1___x_ABI_CWindows__CSecurity__CCryptography__CCertificates__CCertificateVtbl;

    interface __x_ABI_C__FIIterator_1___x_ABI_CWindows__CSecurity__CCryptography__CCertificates__CCertificate
    {
        CONST_VTBL struct __x_ABI_C__FIIterator_1___x_ABI_CWindows__CSecurity__CCryptography__CCertificates__CCertificateVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIIterator_1___x_ABI_CWindows__CSecurity__CCryptography__CCertificates__CCertificate_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIIterable_1___x_ABI_CWindows__CSecurity__CCryptography__CCertificates__CCertificate_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIIterable_1___x_ABI_CWindows__CSecurity__CCryptography__CCertificates__CCertificate_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIIterable_1___x_ABI_CWindows__CSecurity__CCryptography__CCertificates__CCertificate __x_ABI_C__FIIterable_1___x_ABI_CWindows__CSecurity__CCryptography__CCertificates__CCertificate;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIIterable_1___x_ABI_CWindows__CSecurity__CCryptography__CCertificates__CCertificate;

    typedef struct __x_ABI_C__FIIterable_1___x_ABI_CWindows__CSecurity__CCryptography__CCertificates__CCertificateVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CSecurity__CCryptography__CCertificates__CCertificate* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CSecurity__CCryptography__CCertificates__CCertificate* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CSecurity__CCryptography__CCertificates__CCertificate* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CSecurity__CCryptography__CCertificates__CCertificate* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CSecurity__CCryptography__CCertificates__CCertificate* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CSecurity__CCryptography__CCertificates__CCertificate* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* First)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CSecurity__CCryptography__CCertificates__CCertificate* This,
        __x_ABI_C__FIIterator_1___x_ABI_CWindows__CSecurity__CCryptography__CCertificates__CCertificate** result);

        END_INTERFACE
    } __x_ABI_C__FIIterable_1___x_ABI_CWindows__CSecurity__CCryptography__CCertificates__CCertificateVtbl;

    interface __x_ABI_C__FIIterable_1___x_ABI_CWindows__CSecurity__CCryptography__CCertificates__CCertificate
    {
        CONST_VTBL struct __x_ABI_C__FIIterable_1___x_ABI_CWindows__CSecurity__CCryptography__CCertificates__CCertificateVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIIterable_1___x_ABI_CWindows__CSecurity__CCryptography__CCertificates__CCertificate_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIVectorView_1_HSTRING_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIVectorView_1_HSTRING_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIVectorView_1_HSTRING __x_ABI_C__FIVectorView_1_HSTRING;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIVectorView_1_HSTRING;

    typedef struct __x_ABI_C__FIVectorView_1_HSTRINGVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIVectorView_1_HSTRING* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIVectorView_1_HSTRING* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIVectorView_1_HSTRING* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIVectorView_1_HSTRING* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIVectorView_1_HSTRING* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIVectorView_1_HSTRING* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* GetAt)(__x_ABI_C__FIVectorView_1_HSTRING* This,
        UINT32 index,
        HSTRING* result);
    HRESULT (STDMETHODCALLTYPE* get_Size)(__x_ABI_C__FIVectorView_1_HSTRING* This,
        UINT32* result);
    HRESULT (STDMETHODCALLTYPE* IndexOf)(__x_ABI_C__FIVectorView_1_HSTRING* This,
        HSTRING value,
        UINT32* index,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__x_ABI_C__FIVectorView_1_HSTRING* This,
        UINT32 startIndex,
        UINT32 itemsLength,
        HSTRING* items,
        UINT32* result);

        END_INTERFACE
    } __x_ABI_C__FIVectorView_1_HSTRINGVtbl;

    interface __x_ABI_C__FIVectorView_1_HSTRING
    {
        CONST_VTBL struct __x_ABI_C__FIVectorView_1_HSTRINGVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIVectorView_1_HSTRING_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailAttachment_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailAttachment_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailAttachment __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailAttachment;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailAttachment;

    typedef struct __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailAttachmentVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailAttachment* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailAttachment* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailAttachment* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailAttachment* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailAttachment* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailAttachment* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* GetAt)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailAttachment* This,
        UINT32 index,
        __x_ABI_CWindows_CApplicationModel_CEmail_CIEmailAttachment** result);
    HRESULT (STDMETHODCALLTYPE* get_Size)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailAttachment* This,
        UINT32* result);
    HRESULT (STDMETHODCALLTYPE* IndexOf)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailAttachment* This,
        __x_ABI_CWindows_CApplicationModel_CEmail_CIEmailAttachment* value,
        UINT32* index,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailAttachment* This,
        UINT32 startIndex,
        UINT32 itemsLength,
        __x_ABI_CWindows_CApplicationModel_CEmail_CIEmailAttachment** items,
        UINT32* result);

        END_INTERFACE
    } __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailAttachmentVtbl;

    interface __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailAttachment
    {
        CONST_VTBL struct __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailAttachmentVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailAttachment_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailConversation_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailConversation_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailConversation __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailConversation;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailConversation;

    typedef struct __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailConversationVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailConversation* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailConversation* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailConversation* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailConversation* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailConversation* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailConversation* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* GetAt)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailConversation* This,
        UINT32 index,
        __x_ABI_CWindows_CApplicationModel_CEmail_CIEmailConversation** result);
    HRESULT (STDMETHODCALLTYPE* get_Size)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailConversation* This,
        UINT32* result);
    HRESULT (STDMETHODCALLTYPE* IndexOf)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailConversation* This,
        __x_ABI_CWindows_CApplicationModel_CEmail_CIEmailConversation* value,
        UINT32* index,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailConversation* This,
        UINT32 startIndex,
        UINT32 itemsLength,
        __x_ABI_CWindows_CApplicationModel_CEmail_CIEmailConversation** items,
        UINT32* result);

        END_INTERFACE
    } __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailConversationVtbl;

    interface __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailConversation
    {
        CONST_VTBL struct __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailConversationVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailConversation_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailMailboxAction_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailMailboxAction_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailMailboxAction __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailMailboxAction;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailMailboxAction;

    typedef struct __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailMailboxActionVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailMailboxAction* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailMailboxAction* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailMailboxAction* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailMailboxAction* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailMailboxAction* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailMailboxAction* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* GetAt)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailMailboxAction* This,
        UINT32 index,
        __x_ABI_CWindows_CApplicationModel_CEmail_CIEmailMailboxAction** result);
    HRESULT (STDMETHODCALLTYPE* get_Size)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailMailboxAction* This,
        UINT32* result);
    HRESULT (STDMETHODCALLTYPE* IndexOf)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailMailboxAction* This,
        __x_ABI_CWindows_CApplicationModel_CEmail_CIEmailMailboxAction* value,
        UINT32* index,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailMailboxAction* This,
        UINT32 startIndex,
        UINT32 itemsLength,
        __x_ABI_CWindows_CApplicationModel_CEmail_CIEmailMailboxAction** items,
        UINT32* result);

        END_INTERFACE
    } __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailMailboxActionVtbl;

    interface __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailMailboxAction
    {
        CONST_VTBL struct __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailMailboxActionVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailMailboxAction_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailRecipient_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailRecipient_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailRecipient __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailRecipient;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailRecipient;

    typedef struct __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailRecipientVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailRecipient* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailRecipient* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailRecipient* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailRecipient* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailRecipient* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailRecipient* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* GetAt)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailRecipient* This,
        UINT32 index,
        __x_ABI_CWindows_CApplicationModel_CEmail_CIEmailRecipient** result);
    HRESULT (STDMETHODCALLTYPE* get_Size)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailRecipient* This,
        UINT32* result);
    HRESULT (STDMETHODCALLTYPE* IndexOf)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailRecipient* This,
        __x_ABI_CWindows_CApplicationModel_CEmail_CIEmailRecipient* value,
        UINT32* index,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailRecipient* This,
        UINT32 startIndex,
        UINT32 itemsLength,
        __x_ABI_CWindows_CApplicationModel_CEmail_CIEmailRecipient** items,
        UINT32* result);

        END_INTERFACE
    } __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailRecipientVtbl;

    interface __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailRecipient
    {
        CONST_VTBL struct __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailRecipientVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailRecipient_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIVectorView_1___x_ABI_CWindows__CSecurity__CCryptography__CCertificates__CCertificate_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIVectorView_1___x_ABI_CWindows__CSecurity__CCryptography__CCertificates__CCertificate_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CSecurity__CCryptography__CCertificates__CCertificate __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CSecurity__CCryptography__CCertificates__CCertificate;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CSecurity__CCryptography__CCertificates__CCertificate;

    typedef struct __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CSecurity__CCryptography__CCertificates__CCertificateVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CSecurity__CCryptography__CCertificates__CCertificate* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CSecurity__CCryptography__CCertificates__CCertificate* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CSecurity__CCryptography__CCertificates__CCertificate* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CSecurity__CCryptography__CCertificates__CCertificate* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CSecurity__CCryptography__CCertificates__CCertificate* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CSecurity__CCryptography__CCertificates__CCertificate* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* GetAt)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CSecurity__CCryptography__CCertificates__CCertificate* This,
        UINT32 index,
        __x_ABI_CWindows_CSecurity_CCryptography_CCertificates_CICertificate** result);
    HRESULT (STDMETHODCALLTYPE* get_Size)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CSecurity__CCryptography__CCertificates__CCertificate* This,
        UINT32* result);
    HRESULT (STDMETHODCALLTYPE* IndexOf)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CSecurity__CCryptography__CCertificates__CCertificate* This,
        __x_ABI_CWindows_CSecurity_CCryptography_CCertificates_CICertificate* value,
        UINT32* index,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CSecurity__CCryptography__CCertificates__CCertificate* This,
        UINT32 startIndex,
        UINT32 itemsLength,
        __x_ABI_CWindows_CSecurity_CCryptography_CCertificates_CICertificate** items,
        UINT32* result);

        END_INTERFACE
    } __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CSecurity__CCryptography__CCertificates__CCertificateVtbl;

    interface __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CSecurity__CCryptography__CCertificates__CCertificate
    {
        CONST_VTBL struct __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CSecurity__CCryptography__CCertificates__CCertificateVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIVectorView_1___x_ABI_CWindows__CSecurity__CCryptography__CCertificates__CCertificate_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIVector_1_HSTRING_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIVector_1_HSTRING_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIVector_1_HSTRING __x_ABI_C__FIVector_1_HSTRING;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIVector_1_HSTRING;

    typedef struct __x_ABI_C__FIVector_1_HSTRINGVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIVector_1_HSTRING* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIVector_1_HSTRING* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIVector_1_HSTRING* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIVector_1_HSTRING* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIVector_1_HSTRING* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIVector_1_HSTRING* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* GetAt)(__x_ABI_C__FIVector_1_HSTRING* This,
        UINT32 index,
        HSTRING* result);
    HRESULT (STDMETHODCALLTYPE* get_Size)(__x_ABI_C__FIVector_1_HSTRING* This,
        UINT32* result);
    HRESULT (STDMETHODCALLTYPE* GetView)(__x_ABI_C__FIVector_1_HSTRING* This,
        __x_ABI_C__FIVectorView_1_HSTRING** result);
    HRESULT (STDMETHODCALLTYPE* IndexOf)(__x_ABI_C__FIVector_1_HSTRING* This,
        HSTRING value,
        UINT32* index,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* SetAt)(__x_ABI_C__FIVector_1_HSTRING* This,
        UINT32 index,
        HSTRING value);
    HRESULT (STDMETHODCALLTYPE* InsertAt)(__x_ABI_C__FIVector_1_HSTRING* This,
        UINT32 index,
        HSTRING value);
    HRESULT (STDMETHODCALLTYPE* RemoveAt)(__x_ABI_C__FIVector_1_HSTRING* This,
        UINT32 index);
    HRESULT (STDMETHODCALLTYPE* Append)(__x_ABI_C__FIVector_1_HSTRING* This,
        HSTRING value);
    HRESULT (STDMETHODCALLTYPE* RemoveAtEnd)(__x_ABI_C__FIVector_1_HSTRING* This);
    HRESULT (STDMETHODCALLTYPE* Clear)(__x_ABI_C__FIVector_1_HSTRING* This);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__x_ABI_C__FIVector_1_HSTRING* This,
        UINT32 startIndex,
        UINT32 itemsLength,
        HSTRING* items,
        UINT32* result);
    HRESULT (STDMETHODCALLTYPE* ReplaceAll)(__x_ABI_C__FIVector_1_HSTRING* This,
        UINT32 itemsLength,
        HSTRING* items);

        END_INTERFACE
    } __x_ABI_C__FIVector_1_HSTRINGVtbl;

    interface __x_ABI_C__FIVector_1_HSTRING
    {
        CONST_VTBL struct __x_ABI_C__FIVector_1_HSTRINGVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIVector_1_HSTRING_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIVector_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailAttachment_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIVector_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailAttachment_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIVector_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailAttachment __x_ABI_C__FIVector_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailAttachment;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIVector_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailAttachment;

    typedef struct __x_ABI_C__FIVector_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailAttachmentVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailAttachment* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailAttachment* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailAttachment* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailAttachment* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailAttachment* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailAttachment* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* GetAt)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailAttachment* This,
        UINT32 index,
        __x_ABI_CWindows_CApplicationModel_CEmail_CIEmailAttachment** result);
    HRESULT (STDMETHODCALLTYPE* get_Size)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailAttachment* This,
        UINT32* result);
    HRESULT (STDMETHODCALLTYPE* GetView)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailAttachment* This,
        __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailAttachment** result);
    HRESULT (STDMETHODCALLTYPE* IndexOf)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailAttachment* This,
        __x_ABI_CWindows_CApplicationModel_CEmail_CIEmailAttachment* value,
        UINT32* index,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* SetAt)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailAttachment* This,
        UINT32 index,
        __x_ABI_CWindows_CApplicationModel_CEmail_CIEmailAttachment* value);
    HRESULT (STDMETHODCALLTYPE* InsertAt)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailAttachment* This,
        UINT32 index,
        __x_ABI_CWindows_CApplicationModel_CEmail_CIEmailAttachment* value);
    HRESULT (STDMETHODCALLTYPE* RemoveAt)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailAttachment* This,
        UINT32 index);
    HRESULT (STDMETHODCALLTYPE* Append)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailAttachment* This,
        __x_ABI_CWindows_CApplicationModel_CEmail_CIEmailAttachment* value);
    HRESULT (STDMETHODCALLTYPE* RemoveAtEnd)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailAttachment* This);
    HRESULT (STDMETHODCALLTYPE* Clear)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailAttachment* This);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailAttachment* This,
        UINT32 startIndex,
        UINT32 itemsLength,
        __x_ABI_CWindows_CApplicationModel_CEmail_CIEmailAttachment** items,
        UINT32* result);
    HRESULT (STDMETHODCALLTYPE* ReplaceAll)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailAttachment* This,
        UINT32 itemsLength,
        __x_ABI_CWindows_CApplicationModel_CEmail_CIEmailAttachment** items);

        END_INTERFACE
    } __x_ABI_C__FIVector_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailAttachmentVtbl;

    interface __x_ABI_C__FIVector_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailAttachment
    {
        CONST_VTBL struct __x_ABI_C__FIVector_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailAttachmentVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIVector_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailAttachment_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIVector_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailMailboxAction_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIVector_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailMailboxAction_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIVector_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailMailboxAction __x_ABI_C__FIVector_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailMailboxAction;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIVector_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailMailboxAction;

    typedef struct __x_ABI_C__FIVector_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailMailboxActionVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailMailboxAction* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailMailboxAction* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailMailboxAction* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailMailboxAction* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailMailboxAction* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailMailboxAction* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* GetAt)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailMailboxAction* This,
        UINT32 index,
        __x_ABI_CWindows_CApplicationModel_CEmail_CIEmailMailboxAction** result);
    HRESULT (STDMETHODCALLTYPE* get_Size)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailMailboxAction* This,
        UINT32* result);
    HRESULT (STDMETHODCALLTYPE* GetView)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailMailboxAction* This,
        __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailMailboxAction** result);
    HRESULT (STDMETHODCALLTYPE* IndexOf)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailMailboxAction* This,
        __x_ABI_CWindows_CApplicationModel_CEmail_CIEmailMailboxAction* value,
        UINT32* index,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* SetAt)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailMailboxAction* This,
        UINT32 index,
        __x_ABI_CWindows_CApplicationModel_CEmail_CIEmailMailboxAction* value);
    HRESULT (STDMETHODCALLTYPE* InsertAt)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailMailboxAction* This,
        UINT32 index,
        __x_ABI_CWindows_CApplicationModel_CEmail_CIEmailMailboxAction* value);
    HRESULT (STDMETHODCALLTYPE* RemoveAt)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailMailboxAction* This,
        UINT32 index);
    HRESULT (STDMETHODCALLTYPE* Append)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailMailboxAction* This,
        __x_ABI_CWindows_CApplicationModel_CEmail_CIEmailMailboxAction* value);
    HRESULT (STDMETHODCALLTYPE* RemoveAtEnd)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailMailboxAction* This);
    HRESULT (STDMETHODCALLTYPE* Clear)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailMailboxAction* This);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailMailboxAction* This,
        UINT32 startIndex,
        UINT32 itemsLength,
        __x_ABI_CWindows_CApplicationModel_CEmail_CIEmailMailboxAction** items,
        UINT32* result);
    HRESULT (STDMETHODCALLTYPE* ReplaceAll)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailMailboxAction* This,
        UINT32 itemsLength,
        __x_ABI_CWindows_CApplicationModel_CEmail_CIEmailMailboxAction** items);

        END_INTERFACE
    } __x_ABI_C__FIVector_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailMailboxActionVtbl;

    interface __x_ABI_C__FIVector_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailMailboxAction
    {
        CONST_VTBL struct __x_ABI_C__FIVector_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailMailboxActionVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIVector_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailMailboxAction_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIVector_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailRecipient_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIVector_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailRecipient_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIVector_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailRecipient __x_ABI_C__FIVector_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailRecipient;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIVector_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailRecipient;

    typedef struct __x_ABI_C__FIVector_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailRecipientVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailRecipient* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailRecipient* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailRecipient* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailRecipient* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailRecipient* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailRecipient* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* GetAt)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailRecipient* This,
        UINT32 index,
        __x_ABI_CWindows_CApplicationModel_CEmail_CIEmailRecipient** result);
    HRESULT (STDMETHODCALLTYPE* get_Size)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailRecipient* This,
        UINT32* result);
    HRESULT (STDMETHODCALLTYPE* GetView)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailRecipient* This,
        __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailRecipient** result);
    HRESULT (STDMETHODCALLTYPE* IndexOf)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailRecipient* This,
        __x_ABI_CWindows_CApplicationModel_CEmail_CIEmailRecipient* value,
        UINT32* index,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* SetAt)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailRecipient* This,
        UINT32 index,
        __x_ABI_CWindows_CApplicationModel_CEmail_CIEmailRecipient* value);
    HRESULT (STDMETHODCALLTYPE* InsertAt)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailRecipient* This,
        UINT32 index,
        __x_ABI_CWindows_CApplicationModel_CEmail_CIEmailRecipient* value);
    HRESULT (STDMETHODCALLTYPE* RemoveAt)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailRecipient* This,
        UINT32 index);
    HRESULT (STDMETHODCALLTYPE* Append)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailRecipient* This,
        __x_ABI_CWindows_CApplicationModel_CEmail_CIEmailRecipient* value);
    HRESULT (STDMETHODCALLTYPE* RemoveAtEnd)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailRecipient* This);
    HRESULT (STDMETHODCALLTYPE* Clear)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailRecipient* This);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailRecipient* This,
        UINT32 startIndex,
        UINT32 itemsLength,
        __x_ABI_CWindows_CApplicationModel_CEmail_CIEmailRecipient** items,
        UINT32* result);
    HRESULT (STDMETHODCALLTYPE* ReplaceAll)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailRecipient* This,
        UINT32 itemsLength,
        __x_ABI_CWindows_CApplicationModel_CEmail_CIEmailRecipient** items);

        END_INTERFACE
    } __x_ABI_C__FIVector_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailRecipientVtbl;

    interface __x_ABI_C__FIVector_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailRecipient
    {
        CONST_VTBL struct __x_ABI_C__FIVector_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailRecipientVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIVector_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailRecipient_INTERFACE_DEFINED__
    
typedef enum __x_ABI_CWindows_CApplicationModel_CEmail_CEmailMailboxSmimeEncryptionAlgorithm __x_ABI_CWindows_CApplicationModel_CEmail_CEmailMailboxSmimeEncryptionAlgorithm;

#if !defined(____x_ABI_C__FIReference_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailMailboxSmimeEncryptionAlgorithm_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIReference_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailMailboxSmimeEncryptionAlgorithm_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIReference_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailMailboxSmimeEncryptionAlgorithm __x_ABI_C__FIReference_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailMailboxSmimeEncryptionAlgorithm;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIReference_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailMailboxSmimeEncryptionAlgorithm;

    typedef struct __x_ABI_C__FIReference_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailMailboxSmimeEncryptionAlgorithmVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIReference_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailMailboxSmimeEncryptionAlgorithm* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIReference_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailMailboxSmimeEncryptionAlgorithm* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIReference_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailMailboxSmimeEncryptionAlgorithm* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIReference_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailMailboxSmimeEncryptionAlgorithm* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIReference_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailMailboxSmimeEncryptionAlgorithm* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIReference_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailMailboxSmimeEncryptionAlgorithm* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Value)(__x_ABI_C__FIReference_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailMailboxSmimeEncryptionAlgorithm* This,
        enum __x_ABI_CWindows_CApplicationModel_CEmail_CEmailMailboxSmimeEncryptionAlgorithm* result);

        END_INTERFACE
    } __x_ABI_C__FIReference_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailMailboxSmimeEncryptionAlgorithmVtbl;

    interface __x_ABI_C__FIReference_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailMailboxSmimeEncryptionAlgorithm
    {
        CONST_VTBL struct __x_ABI_C__FIReference_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailMailboxSmimeEncryptionAlgorithmVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIReference_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailMailboxSmimeEncryptionAlgorithm_INTERFACE_DEFINED__
    
typedef enum __x_ABI_CWindows_CApplicationModel_CEmail_CEmailMailboxSmimeSigningAlgorithm __x_ABI_CWindows_CApplicationModel_CEmail_CEmailMailboxSmimeSigningAlgorithm;

#if !defined(____x_ABI_C__FIReference_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailMailboxSmimeSigningAlgorithm_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIReference_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailMailboxSmimeSigningAlgorithm_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIReference_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailMailboxSmimeSigningAlgorithm __x_ABI_C__FIReference_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailMailboxSmimeSigningAlgorithm;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIReference_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailMailboxSmimeSigningAlgorithm;

    typedef struct __x_ABI_C__FIReference_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailMailboxSmimeSigningAlgorithmVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIReference_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailMailboxSmimeSigningAlgorithm* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIReference_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailMailboxSmimeSigningAlgorithm* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIReference_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailMailboxSmimeSigningAlgorithm* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIReference_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailMailboxSmimeSigningAlgorithm* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIReference_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailMailboxSmimeSigningAlgorithm* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIReference_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailMailboxSmimeSigningAlgorithm* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Value)(__x_ABI_C__FIReference_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailMailboxSmimeSigningAlgorithm* This,
        enum __x_ABI_CWindows_CApplicationModel_CEmail_CEmailMailboxSmimeSigningAlgorithm* result);

        END_INTERFACE
    } __x_ABI_C__FIReference_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailMailboxSmimeSigningAlgorithmVtbl;

    interface __x_ABI_C__FIReference_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailMailboxSmimeSigningAlgorithm
    {
        CONST_VTBL struct __x_ABI_C__FIReference_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailMailboxSmimeSigningAlgorithmVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIReference_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailMailboxSmimeSigningAlgorithm_INTERFACE_DEFINED__
    
typedef struct __x_ABI_CWindows_CFoundation_CDateTime __x_ABI_CWindows_CFoundation_CDateTime;

#if !defined(____x_ABI_C__FIReference_1___x_ABI_CWindows__CFoundation__CDateTime_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIReference_1___x_ABI_CWindows__CFoundation__CDateTime_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIReference_1___x_ABI_CWindows__CFoundation__CDateTime __x_ABI_C__FIReference_1___x_ABI_CWindows__CFoundation__CDateTime;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIReference_1___x_ABI_CWindows__CFoundation__CDateTime;

    typedef struct __x_ABI_C__FIReference_1___x_ABI_CWindows__CFoundation__CDateTimeVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIReference_1___x_ABI_CWindows__CFoundation__CDateTime* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIReference_1___x_ABI_CWindows__CFoundation__CDateTime* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIReference_1___x_ABI_CWindows__CFoundation__CDateTime* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIReference_1___x_ABI_CWindows__CFoundation__CDateTime* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIReference_1___x_ABI_CWindows__CFoundation__CDateTime* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIReference_1___x_ABI_CWindows__CFoundation__CDateTime* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Value)(__x_ABI_C__FIReference_1___x_ABI_CWindows__CFoundation__CDateTime* This,
        struct __x_ABI_CWindows_CFoundation_CDateTime* result);

        END_INTERFACE
    } __x_ABI_C__FIReference_1___x_ABI_CWindows__CFoundation__CDateTimeVtbl;

    interface __x_ABI_C__FIReference_1___x_ABI_CWindows__CFoundation__CDateTime
    {
        CONST_VTBL struct __x_ABI_C__FIReference_1___x_ABI_CWindows__CFoundation__CDateTimeVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIReference_1___x_ABI_CWindows__CFoundation__CDateTime_INTERFACE_DEFINED__
    
typedef struct __x_ABI_CWindows_CFoundation_CTimeSpan __x_ABI_CWindows_CFoundation_CTimeSpan;

#if !defined(____x_ABI_C__FIReference_1___x_ABI_CWindows__CFoundation__CTimeSpan_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIReference_1___x_ABI_CWindows__CFoundation__CTimeSpan_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIReference_1___x_ABI_CWindows__CFoundation__CTimeSpan __x_ABI_C__FIReference_1___x_ABI_CWindows__CFoundation__CTimeSpan;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIReference_1___x_ABI_CWindows__CFoundation__CTimeSpan;

    typedef struct __x_ABI_C__FIReference_1___x_ABI_CWindows__CFoundation__CTimeSpanVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIReference_1___x_ABI_CWindows__CFoundation__CTimeSpan* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIReference_1___x_ABI_CWindows__CFoundation__CTimeSpan* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIReference_1___x_ABI_CWindows__CFoundation__CTimeSpan* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIReference_1___x_ABI_CWindows__CFoundation__CTimeSpan* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIReference_1___x_ABI_CWindows__CFoundation__CTimeSpan* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIReference_1___x_ABI_CWindows__CFoundation__CTimeSpan* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Value)(__x_ABI_C__FIReference_1___x_ABI_CWindows__CFoundation__CTimeSpan* This,
        struct __x_ABI_CWindows_CFoundation_CTimeSpan* result);

        END_INTERFACE
    } __x_ABI_C__FIReference_1___x_ABI_CWindows__CFoundation__CTimeSpanVtbl;

    interface __x_ABI_C__FIReference_1___x_ABI_CWindows__CFoundation__CTimeSpan
    {
        CONST_VTBL struct __x_ABI_C__FIReference_1___x_ABI_CWindows__CFoundation__CTimeSpanVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIReference_1___x_ABI_CWindows__CFoundation__CTimeSpan_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CApplicationModel__CEmail__CEmailMailbox___x_ABI_CWindows__CApplicationModel__CEmail__CEmailMailboxChangedEventArgs_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CApplicationModel__CEmail__CEmailMailbox___x_ABI_CWindows__CApplicationModel__CEmail__CEmailMailboxChangedEventArgs_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CApplicationModel__CEmail__CEmailMailbox___x_ABI_CWindows__CApplicationModel__CEmail__CEmailMailboxChangedEventArgs __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CApplicationModel__CEmail__CEmailMailbox___x_ABI_CWindows__CApplicationModel__CEmail__CEmailMailboxChangedEventArgs;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CApplicationModel__CEmail__CEmailMailbox___x_ABI_CWindows__CApplicationModel__CEmail__CEmailMailboxChangedEventArgs;

    typedef struct __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CApplicationModel__CEmail__CEmailMailbox___x_ABI_CWindows__CApplicationModel__CEmail__CEmailMailboxChangedEventArgsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CApplicationModel__CEmail__CEmailMailbox___x_ABI_CWindows__CApplicationModel__CEmail__CEmailMailboxChangedEventArgs* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CApplicationModel__CEmail__CEmailMailbox___x_ABI_CWindows__CApplicationModel__CEmail__CEmailMailboxChangedEventArgs* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CApplicationModel__CEmail__CEmailMailbox___x_ABI_CWindows__CApplicationModel__CEmail__CEmailMailboxChangedEventArgs* This);
        HRESULT (STDMETHODCALLTYPE* Invoke)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CApplicationModel__CEmail__CEmailMailbox___x_ABI_CWindows__CApplicationModel__CEmail__CEmailMailboxChangedEventArgs* This,
        __x_ABI_CWindows_CApplicationModel_CEmail_CIEmailMailbox* sender,
        __x_ABI_CWindows_CApplicationModel_CEmail_CIEmailMailboxChangedEventArgs* args);

        END_INTERFACE
    } __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CApplicationModel__CEmail__CEmailMailbox___x_ABI_CWindows__CApplicationModel__CEmail__CEmailMailboxChangedEventArgsVtbl;

    interface __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CApplicationModel__CEmail__CEmailMailbox___x_ABI_CWindows__CApplicationModel__CEmail__CEmailMailboxChangedEventArgs
    {
        CONST_VTBL struct __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CApplicationModel__CEmail__CEmailMailbox___x_ABI_CWindows__CApplicationModel__CEmail__CEmailMailboxChangedEventArgsVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CApplicationModel__CEmail__CEmailMailbox___x_ABI_CWindows__CApplicationModel__CEmail__CEmailMailboxChangedEventArgs_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CApplicationModel__CEmail__CEmailMailboxSyncManager_IInspectable_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CApplicationModel__CEmail__CEmailMailboxSyncManager_IInspectable_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CApplicationModel__CEmail__CEmailMailboxSyncManager_IInspectable __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CApplicationModel__CEmail__CEmailMailboxSyncManager_IInspectable;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CApplicationModel__CEmail__CEmailMailboxSyncManager_IInspectable;

    typedef struct __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CApplicationModel__CEmail__CEmailMailboxSyncManager_IInspectableVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CApplicationModel__CEmail__CEmailMailboxSyncManager_IInspectable* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CApplicationModel__CEmail__CEmailMailboxSyncManager_IInspectable* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CApplicationModel__CEmail__CEmailMailboxSyncManager_IInspectable* This);
        HRESULT (STDMETHODCALLTYPE* Invoke)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CApplicationModel__CEmail__CEmailMailboxSyncManager_IInspectable* This,
        __x_ABI_CWindows_CApplicationModel_CEmail_CIEmailMailboxSyncManager* sender,
        IInspectable* args);

        END_INTERFACE
    } __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CApplicationModel__CEmail__CEmailMailboxSyncManager_IInspectableVtbl;

    interface __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CApplicationModel__CEmail__CEmailMailboxSyncManager_IInspectable
    {
        CONST_VTBL struct __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CApplicationModel__CEmail__CEmailMailboxSyncManager_IInspectableVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CApplicationModel__CEmail__CEmailMailboxSyncManager_IInspectable_INTERFACE_DEFINED__
    
#ifndef ____x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointmentRecurrence_FWD_DEFINED__
#define ____x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointmentRecurrence_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointmentRecurrence __x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointmentRecurrence;

#endif // ____x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointmentRecurrence_FWD_DEFINED__

typedef enum __x_ABI_CWindows_CFoundation_CAsyncStatus __x_ABI_CWindows_CFoundation_CAsyncStatus;

#ifndef ____x_ABI_CWindows_CFoundation_CIAsyncAction_FWD_DEFINED__
#define ____x_ABI_CWindows_CFoundation_CIAsyncAction_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CFoundation_CIAsyncAction __x_ABI_CWindows_CFoundation_CIAsyncAction;

#endif // ____x_ABI_CWindows_CFoundation_CIAsyncAction_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CFoundation_CIAsyncInfo_FWD_DEFINED__
#define ____x_ABI_CWindows_CFoundation_CIAsyncInfo_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CFoundation_CIAsyncInfo __x_ABI_CWindows_CFoundation_CIAsyncInfo;

#endif // ____x_ABI_CWindows_CFoundation_CIAsyncInfo_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CFoundation_CIPropertyValue_FWD_DEFINED__
#define ____x_ABI_CWindows_CFoundation_CIPropertyValue_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CFoundation_CIPropertyValue __x_ABI_CWindows_CFoundation_CIPropertyValue;

#endif // ____x_ABI_CWindows_CFoundation_CIPropertyValue_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CStorage_CStreams_CIRandomAccessStreamReference_FWD_DEFINED__
#define ____x_ABI_CWindows_CStorage_CStreams_CIRandomAccessStreamReference_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CStorage_CStreams_CIRandomAccessStreamReference __x_ABI_CWindows_CStorage_CStreams_CIRandomAccessStreamReference;

#endif // ____x_ABI_CWindows_CStorage_CStreams_CIRandomAccessStreamReference_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CSystem_CIUser_FWD_DEFINED__
#define ____x_ABI_CWindows_CSystem_CIUser_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CSystem_CIUser __x_ABI_CWindows_CSystem_CIUser;

#endif // ____x_ABI_CWindows_CSystem_CIUser_FWD_DEFINED__

typedef enum __x_ABI_CWindows_CApplicationModel_CEmail_CEmailAttachmentDownloadState __x_ABI_CWindows_CApplicationModel_CEmail_CEmailAttachmentDownloadState;

typedef enum __x_ABI_CWindows_CApplicationModel_CEmail_CEmailBatchStatus __x_ABI_CWindows_CApplicationModel_CEmail_CEmailBatchStatus;

typedef enum __x_ABI_CWindows_CApplicationModel_CEmail_CEmailFlagState __x_ABI_CWindows_CApplicationModel_CEmail_CEmailFlagState;

typedef enum __x_ABI_CWindows_CApplicationModel_CEmail_CEmailImportance __x_ABI_CWindows_CApplicationModel_CEmail_CEmailImportance;

typedef enum __x_ABI_CWindows_CApplicationModel_CEmail_CEmailMailboxActionKind __x_ABI_CWindows_CApplicationModel_CEmail_CEmailMailboxActionKind;

typedef enum __x_ABI_CWindows_CApplicationModel_CEmail_CEmailMailboxAllowedSmimeEncryptionAlgorithmNegotiation __x_ABI_CWindows_CApplicationModel_CEmail_CEmailMailboxAllowedSmimeEncryptionAlgorithmNegotiation;

typedef enum __x_ABI_CWindows_CApplicationModel_CEmail_CEmailMailboxAutoReplyMessageResponseKind __x_ABI_CWindows_CApplicationModel_CEmail_CEmailMailboxAutoReplyMessageResponseKind;

typedef enum __x_ABI_CWindows_CApplicationModel_CEmail_CEmailMailboxChangeType __x_ABI_CWindows_CApplicationModel_CEmail_CEmailMailboxChangeType;

typedef enum __x_ABI_CWindows_CApplicationModel_CEmail_CEmailMailboxCreateFolderStatus __x_ABI_CWindows_CApplicationModel_CEmail_CEmailMailboxCreateFolderStatus;

typedef enum __x_ABI_CWindows_CApplicationModel_CEmail_CEmailMailboxOtherAppReadAccess __x_ABI_CWindows_CApplicationModel_CEmail_CEmailMailboxOtherAppReadAccess;

typedef enum __x_ABI_CWindows_CApplicationModel_CEmail_CEmailMailboxOtherAppWriteAccess __x_ABI_CWindows_CApplicationModel_CEmail_CEmailMailboxOtherAppWriteAccess;

typedef enum __x_ABI_CWindows_CApplicationModel_CEmail_CEmailMailboxSyncStatus __x_ABI_CWindows_CApplicationModel_CEmail_CEmailMailboxSyncStatus;

typedef enum __x_ABI_CWindows_CApplicationModel_CEmail_CEmailMeetingResponseType __x_ABI_CWindows_CApplicationModel_CEmail_CEmailMeetingResponseType;

typedef enum __x_ABI_CWindows_CApplicationModel_CEmail_CEmailMessageBodyKind __x_ABI_CWindows_CApplicationModel_CEmail_CEmailMessageBodyKind;

typedef enum __x_ABI_CWindows_CApplicationModel_CEmail_CEmailMessageDownloadState __x_ABI_CWindows_CApplicationModel_CEmail_CEmailMessageDownloadState;

typedef enum __x_ABI_CWindows_CApplicationModel_CEmail_CEmailMessageResponseKind __x_ABI_CWindows_CApplicationModel_CEmail_CEmailMessageResponseKind;

typedef enum __x_ABI_CWindows_CApplicationModel_CEmail_CEmailMessageSmimeKind __x_ABI_CWindows_CApplicationModel_CEmail_CEmailMessageSmimeKind;

typedef enum __x_ABI_CWindows_CApplicationModel_CEmail_CEmailQueryKind __x_ABI_CWindows_CApplicationModel_CEmail_CEmailQueryKind;

typedef enum __x_ABI_CWindows_CApplicationModel_CEmail_CEmailQuerySearchFields __x_ABI_CWindows_CApplicationModel_CEmail_CEmailQuerySearchFields;

typedef enum __x_ABI_CWindows_CApplicationModel_CEmail_CEmailQuerySearchScope __x_ABI_CWindows_CApplicationModel_CEmail_CEmailQuerySearchScope;

typedef enum __x_ABI_CWindows_CApplicationModel_CEmail_CEmailQuerySortDirection __x_ABI_CWindows_CApplicationModel_CEmail_CEmailQuerySortDirection;

typedef enum __x_ABI_CWindows_CApplicationModel_CEmail_CEmailQuerySortProperty __x_ABI_CWindows_CApplicationModel_CEmail_CEmailQuerySortProperty;

typedef enum __x_ABI_CWindows_CApplicationModel_CEmail_CEmailRecipientResolutionStatus __x_ABI_CWindows_CApplicationModel_CEmail_CEmailRecipientResolutionStatus;

typedef enum __x_ABI_CWindows_CApplicationModel_CEmail_CEmailSpecialFolderKind __x_ABI_CWindows_CApplicationModel_CEmail_CEmailSpecialFolderKind;

typedef enum __x_ABI_CWindows_CApplicationModel_CEmail_CEmailStoreAccessType __x_ABI_CWindows_CApplicationModel_CEmail_CEmailStoreAccessType;

enum __x_ABI_CWindows_CApplicationModel_CEmail_CEmailAttachmentDownloadState
    {
        __x_ABI_CWindows_CApplicationModel_CEmail_CEmailAttachmentDownloadState_NotDownloaded = 0,
    __x_ABI_CWindows_CApplicationModel_CEmail_CEmailAttachmentDownloadState_Downloading = 1,
    __x_ABI_CWindows_CApplicationModel_CEmail_CEmailAttachmentDownloadState_Downloaded = 2,
    __x_ABI_CWindows_CApplicationModel_CEmail_CEmailAttachmentDownloadState_Failed = 3,
};

enum __x_ABI_CWindows_CApplicationModel_CEmail_CEmailBatchStatus
    {
        __x_ABI_CWindows_CApplicationModel_CEmail_CEmailBatchStatus_Success = 0,
    __x_ABI_CWindows_CApplicationModel_CEmail_CEmailBatchStatus_ServerSearchSyncManagerError = 1,
    __x_ABI_CWindows_CApplicationModel_CEmail_CEmailBatchStatus_ServerSearchUnknownError = 2,
};

enum __x_ABI_CWindows_CApplicationModel_CEmail_CEmailCertificateValidationStatus
    {
        __x_ABI_CWindows_CApplicationModel_CEmail_CEmailCertificateValidationStatus_Success = 0,
    __x_ABI_CWindows_CApplicationModel_CEmail_CEmailCertificateValidationStatus_NoMatch = 1,
    __x_ABI_CWindows_CApplicationModel_CEmail_CEmailCertificateValidationStatus_InvalidUsage = 2,
    __x_ABI_CWindows_CApplicationModel_CEmail_CEmailCertificateValidationStatus_InvalidCertificate = 3,
    __x_ABI_CWindows_CApplicationModel_CEmail_CEmailCertificateValidationStatus_Revoked = 4,
    __x_ABI_CWindows_CApplicationModel_CEmail_CEmailCertificateValidationStatus_ChainRevoked = 5,
    __x_ABI_CWindows_CApplicationModel_CEmail_CEmailCertificateValidationStatus_RevocationServerFailure = 6,
    __x_ABI_CWindows_CApplicationModel_CEmail_CEmailCertificateValidationStatus_Expired = 7,
    __x_ABI_CWindows_CApplicationModel_CEmail_CEmailCertificateValidationStatus_Untrusted = 8,
    __x_ABI_CWindows_CApplicationModel_CEmail_CEmailCertificateValidationStatus_ServerError = 9,
    __x_ABI_CWindows_CApplicationModel_CEmail_CEmailCertificateValidationStatus_UnknownFailure = 10,
};

enum __x_ABI_CWindows_CApplicationModel_CEmail_CEmailFlagState
    {
        __x_ABI_CWindows_CApplicationModel_CEmail_CEmailFlagState_Unflagged = 0,
    __x_ABI_CWindows_CApplicationModel_CEmail_CEmailFlagState_Flagged = 1,
    __x_ABI_CWindows_CApplicationModel_CEmail_CEmailFlagState_Completed = 2,
    __x_ABI_CWindows_CApplicationModel_CEmail_CEmailFlagState_Cleared = 3,
};

enum __x_ABI_CWindows_CApplicationModel_CEmail_CEmailImportance
    {
        __x_ABI_CWindows_CApplicationModel_CEmail_CEmailImportance_Normal = 0,
    __x_ABI_CWindows_CApplicationModel_CEmail_CEmailImportance_High = 1,
    __x_ABI_CWindows_CApplicationModel_CEmail_CEmailImportance_Low = 2,
};

enum __x_ABI_CWindows_CApplicationModel_CEmail_CEmailMailboxActionKind
    {
        __x_ABI_CWindows_CApplicationModel_CEmail_CEmailMailboxActionKind_MarkMessageAsSeen = 0,
    __x_ABI_CWindows_CApplicationModel_CEmail_CEmailMailboxActionKind_MarkMessageRead = 1,
    __x_ABI_CWindows_CApplicationModel_CEmail_CEmailMailboxActionKind_ChangeMessageFlagState = 2,
    __x_ABI_CWindows_CApplicationModel_CEmail_CEmailMailboxActionKind_MoveMessage = 3,
    __x_ABI_CWindows_CApplicationModel_CEmail_CEmailMailboxActionKind_SaveDraft = 4,
    __x_ABI_CWindows_CApplicationModel_CEmail_CEmailMailboxActionKind_SendMessage = 5,
    __x_ABI_CWindows_CApplicationModel_CEmail_CEmailMailboxActionKind_CreateResponseReplyMessage = 6,
    __x_ABI_CWindows_CApplicationModel_CEmail_CEmailMailboxActionKind_CreateResponseReplyAllMessage = 7,
    __x_ABI_CWindows_CApplicationModel_CEmail_CEmailMailboxActionKind_CreateResponseForwardMessage = 8,
    __x_ABI_CWindows_CApplicationModel_CEmail_CEmailMailboxActionKind_MoveFolder = 9,
    __x_ABI_CWindows_CApplicationModel_CEmail_CEmailMailboxActionKind_MarkFolderForSyncEnabled = 10,
};

enum __x_ABI_CWindows_CApplicationModel_CEmail_CEmailMailboxAllowedSmimeEncryptionAlgorithmNegotiation
    {
        __x_ABI_CWindows_CApplicationModel_CEmail_CEmailMailboxAllowedSmimeEncryptionAlgorithmNegotiation_None = 0,
    __x_ABI_CWindows_CApplicationModel_CEmail_CEmailMailboxAllowedSmimeEncryptionAlgorithmNegotiation_StrongAlgorithm = 1,
    __x_ABI_CWindows_CApplicationModel_CEmail_CEmailMailboxAllowedSmimeEncryptionAlgorithmNegotiation_AnyAlgorithm = 2,
};

enum __x_ABI_CWindows_CApplicationModel_CEmail_CEmailMailboxAutoReplyMessageResponseKind
    {
        __x_ABI_CWindows_CApplicationModel_CEmail_CEmailMailboxAutoReplyMessageResponseKind_Html = 0,
    __x_ABI_CWindows_CApplicationModel_CEmail_CEmailMailboxAutoReplyMessageResponseKind_PlainText = 1,
};

enum __x_ABI_CWindows_CApplicationModel_CEmail_CEmailMailboxChangeType
    {
        __x_ABI_CWindows_CApplicationModel_CEmail_CEmailMailboxChangeType_MessageCreated = 0,
    __x_ABI_CWindows_CApplicationModel_CEmail_CEmailMailboxChangeType_MessageModified = 1,
    __x_ABI_CWindows_CApplicationModel_CEmail_CEmailMailboxChangeType_MessageDeleted = 2,
    __x_ABI_CWindows_CApplicationModel_CEmail_CEmailMailboxChangeType_FolderCreated = 3,
    __x_ABI_CWindows_CApplicationModel_CEmail_CEmailMailboxChangeType_FolderModified = 4,
    __x_ABI_CWindows_CApplicationModel_CEmail_CEmailMailboxChangeType_FolderDeleted = 5,
    __x_ABI_CWindows_CApplicationModel_CEmail_CEmailMailboxChangeType_ChangeTrackingLost = 6,
};

enum __x_ABI_CWindows_CApplicationModel_CEmail_CEmailMailboxCreateFolderStatus
    {
        __x_ABI_CWindows_CApplicationModel_CEmail_CEmailMailboxCreateFolderStatus_Success = 0,
    __x_ABI_CWindows_CApplicationModel_CEmail_CEmailMailboxCreateFolderStatus_NetworkError = 1,
    __x_ABI_CWindows_CApplicationModel_CEmail_CEmailMailboxCreateFolderStatus_PermissionsError = 2,
    __x_ABI_CWindows_CApplicationModel_CEmail_CEmailMailboxCreateFolderStatus_ServerError = 3,
    __x_ABI_CWindows_CApplicationModel_CEmail_CEmailMailboxCreateFolderStatus_UnknownFailure = 4,
    __x_ABI_CWindows_CApplicationModel_CEmail_CEmailMailboxCreateFolderStatus_NameCollision = 5,
    __x_ABI_CWindows_CApplicationModel_CEmail_CEmailMailboxCreateFolderStatus_ServerRejected = 6,
};

enum __x_ABI_CWindows_CApplicationModel_CEmail_CEmailMailboxDeleteFolderStatus
    {
        __x_ABI_CWindows_CApplicationModel_CEmail_CEmailMailboxDeleteFolderStatus_Success = 0,
    __x_ABI_CWindows_CApplicationModel_CEmail_CEmailMailboxDeleteFolderStatus_NetworkError = 1,
    __x_ABI_CWindows_CApplicationModel_CEmail_CEmailMailboxDeleteFolderStatus_PermissionsError = 2,
    __x_ABI_CWindows_CApplicationModel_CEmail_CEmailMailboxDeleteFolderStatus_ServerError = 3,
    __x_ABI_CWindows_CApplicationModel_CEmail_CEmailMailboxDeleteFolderStatus_UnknownFailure = 4,
    __x_ABI_CWindows_CApplicationModel_CEmail_CEmailMailboxDeleteFolderStatus_CouldNotDeleteEverything = 5,
};

enum __x_ABI_CWindows_CApplicationModel_CEmail_CEmailMailboxEmptyFolderStatus
    {
        __x_ABI_CWindows_CApplicationModel_CEmail_CEmailMailboxEmptyFolderStatus_Success = 0,
    __x_ABI_CWindows_CApplicationModel_CEmail_CEmailMailboxEmptyFolderStatus_NetworkError = 1,
    __x_ABI_CWindows_CApplicationModel_CEmail_CEmailMailboxEmptyFolderStatus_PermissionsError = 2,
    __x_ABI_CWindows_CApplicationModel_CEmail_CEmailMailboxEmptyFolderStatus_ServerError = 3,
    __x_ABI_CWindows_CApplicationModel_CEmail_CEmailMailboxEmptyFolderStatus_UnknownFailure = 4,
    __x_ABI_CWindows_CApplicationModel_CEmail_CEmailMailboxEmptyFolderStatus_CouldNotDeleteEverything = 5,
};

enum __x_ABI_CWindows_CApplicationModel_CEmail_CEmailMailboxOtherAppReadAccess
    {
        __x_ABI_CWindows_CApplicationModel_CEmail_CEmailMailboxOtherAppReadAccess_SystemOnly = 0,
    __x_ABI_CWindows_CApplicationModel_CEmail_CEmailMailboxOtherAppReadAccess_Full = 1,
    __x_ABI_CWindows_CApplicationModel_CEmail_CEmailMailboxOtherAppReadAccess_None = 2,
};

enum __x_ABI_CWindows_CApplicationModel_CEmail_CEmailMailboxOtherAppWriteAccess
    {
        __x_ABI_CWindows_CApplicationModel_CEmail_CEmailMailboxOtherAppWriteAccess_None = 0,
    __x_ABI_CWindows_CApplicationModel_CEmail_CEmailMailboxOtherAppWriteAccess_Limited = 1,
};

enum __x_ABI_CWindows_CApplicationModel_CEmail_CEmailMailboxSmimeEncryptionAlgorithm
    {
        __x_ABI_CWindows_CApplicationModel_CEmail_CEmailMailboxSmimeEncryptionAlgorithm_Any = 0,
    __x_ABI_CWindows_CApplicationModel_CEmail_CEmailMailboxSmimeEncryptionAlgorithm_TripleDes = 1,
    __x_ABI_CWindows_CApplicationModel_CEmail_CEmailMailboxSmimeEncryptionAlgorithm_Des = 2,
    __x_ABI_CWindows_CApplicationModel_CEmail_CEmailMailboxSmimeEncryptionAlgorithm_RC2128Bit = 3,
    __x_ABI_CWindows_CApplicationModel_CEmail_CEmailMailboxSmimeEncryptionAlgorithm_RC264Bit = 4,
    __x_ABI_CWindows_CApplicationModel_CEmail_CEmailMailboxSmimeEncryptionAlgorithm_RC240Bit = 5,
};

enum __x_ABI_CWindows_CApplicationModel_CEmail_CEmailMailboxSmimeSigningAlgorithm
    {
        __x_ABI_CWindows_CApplicationModel_CEmail_CEmailMailboxSmimeSigningAlgorithm_Any = 0,
    __x_ABI_CWindows_CApplicationModel_CEmail_CEmailMailboxSmimeSigningAlgorithm_Sha1 = 1,
    __x_ABI_CWindows_CApplicationModel_CEmail_CEmailMailboxSmimeSigningAlgorithm_MD5 = 2,
};

enum __x_ABI_CWindows_CApplicationModel_CEmail_CEmailMailboxSyncStatus
    {
        __x_ABI_CWindows_CApplicationModel_CEmail_CEmailMailboxSyncStatus_Idle = 0,
    __x_ABI_CWindows_CApplicationModel_CEmail_CEmailMailboxSyncStatus_Syncing = 1,
    __x_ABI_CWindows_CApplicationModel_CEmail_CEmailMailboxSyncStatus_UpToDate = 2,
    __x_ABI_CWindows_CApplicationModel_CEmail_CEmailMailboxSyncStatus_AuthenticationError = 3,
    __x_ABI_CWindows_CApplicationModel_CEmail_CEmailMailboxSyncStatus_PolicyError = 4,
    __x_ABI_CWindows_CApplicationModel_CEmail_CEmailMailboxSyncStatus_UnknownError = 5,
    __x_ABI_CWindows_CApplicationModel_CEmail_CEmailMailboxSyncStatus_ManualAccountRemovalRequired = 6,
};

enum __x_ABI_CWindows_CApplicationModel_CEmail_CEmailMeetingResponseType
    {
        __x_ABI_CWindows_CApplicationModel_CEmail_CEmailMeetingResponseType_Accept = 0,
    __x_ABI_CWindows_CApplicationModel_CEmail_CEmailMeetingResponseType_Decline = 1,
    __x_ABI_CWindows_CApplicationModel_CEmail_CEmailMeetingResponseType_Tentative = 2,
};

enum __x_ABI_CWindows_CApplicationModel_CEmail_CEmailMessageBodyKind
    {
        __x_ABI_CWindows_CApplicationModel_CEmail_CEmailMessageBodyKind_Html = 0,
    __x_ABI_CWindows_CApplicationModel_CEmail_CEmailMessageBodyKind_PlainText = 1,
};

enum __x_ABI_CWindows_CApplicationModel_CEmail_CEmailMessageDownloadState
    {
        __x_ABI_CWindows_CApplicationModel_CEmail_CEmailMessageDownloadState_PartiallyDownloaded = 0,
    __x_ABI_CWindows_CApplicationModel_CEmail_CEmailMessageDownloadState_Downloading = 1,
    __x_ABI_CWindows_CApplicationModel_CEmail_CEmailMessageDownloadState_Downloaded = 2,
    __x_ABI_CWindows_CApplicationModel_CEmail_CEmailMessageDownloadState_Failed = 3,
};

enum __x_ABI_CWindows_CApplicationModel_CEmail_CEmailMessageResponseKind
    {
        __x_ABI_CWindows_CApplicationModel_CEmail_CEmailMessageResponseKind_None = 0,
    __x_ABI_CWindows_CApplicationModel_CEmail_CEmailMessageResponseKind_Reply = 1,
    __x_ABI_CWindows_CApplicationModel_CEmail_CEmailMessageResponseKind_ReplyAll = 2,
    __x_ABI_CWindows_CApplicationModel_CEmail_CEmailMessageResponseKind_Forward = 3,
};

enum __x_ABI_CWindows_CApplicationModel_CEmail_CEmailMessageSmimeKind
    {
        __x_ABI_CWindows_CApplicationModel_CEmail_CEmailMessageSmimeKind_None = 0,
    __x_ABI_CWindows_CApplicationModel_CEmail_CEmailMessageSmimeKind_ClearSigned = 1,
    __x_ABI_CWindows_CApplicationModel_CEmail_CEmailMessageSmimeKind_OpaqueSigned = 2,
    __x_ABI_CWindows_CApplicationModel_CEmail_CEmailMessageSmimeKind_Encrypted = 3,
};

enum __x_ABI_CWindows_CApplicationModel_CEmail_CEmailQueryKind
    {
        __x_ABI_CWindows_CApplicationModel_CEmail_CEmailQueryKind_All = 0,
    __x_ABI_CWindows_CApplicationModel_CEmail_CEmailQueryKind_Important = 1,
    __x_ABI_CWindows_CApplicationModel_CEmail_CEmailQueryKind_Flagged = 2,
    __x_ABI_CWindows_CApplicationModel_CEmail_CEmailQueryKind_Unread = 3,
    __x_ABI_CWindows_CApplicationModel_CEmail_CEmailQueryKind_Read = 4,
    __x_ABI_CWindows_CApplicationModel_CEmail_CEmailQueryKind_Unseen = 5,
};

enum __x_ABI_CWindows_CApplicationModel_CEmail_CEmailQuerySearchFields
    {
        __x_ABI_CWindows_CApplicationModel_CEmail_CEmailQuerySearchFields_None = 0,
    __x_ABI_CWindows_CApplicationModel_CEmail_CEmailQuerySearchFields_Subject = 0x1,
    __x_ABI_CWindows_CApplicationModel_CEmail_CEmailQuerySearchFields_Sender = 0x2,
    __x_ABI_CWindows_CApplicationModel_CEmail_CEmailQuerySearchFields_Preview = 0x4,
    __x_ABI_CWindows_CApplicationModel_CEmail_CEmailQuerySearchFields_Recipients = 0x8,
    __x_ABI_CWindows_CApplicationModel_CEmail_CEmailQuerySearchFields_All = 0xffffffff,
};

enum __x_ABI_CWindows_CApplicationModel_CEmail_CEmailQuerySearchScope
    {
        __x_ABI_CWindows_CApplicationModel_CEmail_CEmailQuerySearchScope_Local = 0,
    __x_ABI_CWindows_CApplicationModel_CEmail_CEmailQuerySearchScope_Server = 1,
};

enum __x_ABI_CWindows_CApplicationModel_CEmail_CEmailQuerySortDirection
    {
        __x_ABI_CWindows_CApplicationModel_CEmail_CEmailQuerySortDirection_Descending = 0,
    __x_ABI_CWindows_CApplicationModel_CEmail_CEmailQuerySortDirection_Ascending = 1,
};

enum __x_ABI_CWindows_CApplicationModel_CEmail_CEmailQuerySortProperty
    {
        __x_ABI_CWindows_CApplicationModel_CEmail_CEmailQuerySortProperty_Date = 0,
};

enum __x_ABI_CWindows_CApplicationModel_CEmail_CEmailRecipientResolutionStatus
    {
        __x_ABI_CWindows_CApplicationModel_CEmail_CEmailRecipientResolutionStatus_Success = 0,
    __x_ABI_CWindows_CApplicationModel_CEmail_CEmailRecipientResolutionStatus_RecipientNotFound = 1,
    __x_ABI_CWindows_CApplicationModel_CEmail_CEmailRecipientResolutionStatus_AmbiguousRecipient = 2,
    __x_ABI_CWindows_CApplicationModel_CEmail_CEmailRecipientResolutionStatus_NoCertificate = 3,
    __x_ABI_CWindows_CApplicationModel_CEmail_CEmailRecipientResolutionStatus_CertificateRequestLimitReached = 4,
    __x_ABI_CWindows_CApplicationModel_CEmail_CEmailRecipientResolutionStatus_CannotResolveDistributionList = 5,
    __x_ABI_CWindows_CApplicationModel_CEmail_CEmailRecipientResolutionStatus_ServerError = 6,
    __x_ABI_CWindows_CApplicationModel_CEmail_CEmailRecipientResolutionStatus_UnknownFailure = 7,
};

enum __x_ABI_CWindows_CApplicationModel_CEmail_CEmailSpecialFolderKind
    {
        __x_ABI_CWindows_CApplicationModel_CEmail_CEmailSpecialFolderKind_None = 0,
    __x_ABI_CWindows_CApplicationModel_CEmail_CEmailSpecialFolderKind_Root = 1,
    __x_ABI_CWindows_CApplicationModel_CEmail_CEmailSpecialFolderKind_Inbox = 2,
    __x_ABI_CWindows_CApplicationModel_CEmail_CEmailSpecialFolderKind_Outbox = 3,
    __x_ABI_CWindows_CApplicationModel_CEmail_CEmailSpecialFolderKind_Drafts = 4,
    __x_ABI_CWindows_CApplicationModel_CEmail_CEmailSpecialFolderKind_DeletedItems = 5,
    __x_ABI_CWindows_CApplicationModel_CEmail_CEmailSpecialFolderKind_Sent = 6,
};

enum __x_ABI_CWindows_CApplicationModel_CEmail_CEmailStoreAccessType
    {
        __x_ABI_CWindows_CApplicationModel_CEmail_CEmailStoreAccessType_AppMailboxesReadWrite = 0,
    __x_ABI_CWindows_CApplicationModel_CEmail_CEmailStoreAccessType_AllMailboxesLimitedReadWrite = 1,
};

#if !defined(____x_ABI_CWindows_CApplicationModel_CEmail_CIEmailAttachment_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CApplicationModel_CEmail_CIEmailAttachment_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CApplicationModel_CEmail_CIEmailAttachmentVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CApplicationModel_CEmail_CIEmailAttachment* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CApplicationModel_CEmail_CIEmailAttachment* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CApplicationModel_CEmail_CIEmailAttachment* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CApplicationModel_CEmail_CIEmailAttachment* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CApplicationModel_CEmail_CIEmailAttachment* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CApplicationModel_CEmail_CIEmailAttachment* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_FileName)(__x_ABI_CWindows_CApplicationModel_CEmail_CIEmailAttachment* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* put_FileName)(__x_ABI_CWindows_CApplicationModel_CEmail_CIEmailAttachment* This,
        HSTRING value);
    HRESULT (STDMETHODCALLTYPE* get_Data)(__x_ABI_CWindows_CApplicationModel_CEmail_CIEmailAttachment* This,
        __x_ABI_CWindows_CStorage_CStreams_CIRandomAccessStreamReference** value);
    HRESULT (STDMETHODCALLTYPE* put_Data)(__x_ABI_CWindows_CApplicationModel_CEmail_CIEmailAttachment* This,
        __x_ABI_CWindows_CStorage_CStreams_CIRandomAccessStreamReference* value);

        END_INTERFACE
    } __x_ABI_CWindows_CApplicationModel_CEmail_CIEmailAttachmentVtbl;

    interface __x_ABI_CWindows_CApplicationModel_CEmail_CIEmailAttachment
    {
        CONST_VTBL struct __x_ABI_CWindows_CApplicationModel_CEmail_CIEmailAttachmentVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CApplicationModel_CEmail_CIEmailAttachment;
#endif /* !defined(____x_ABI_CWindows_CApplicationModel_CEmail_CIEmailAttachment_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CApplicationModel_CEmail_CIEmailAttachment2_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CApplicationModel_CEmail_CIEmailAttachment2_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CApplicationModel_CEmail_CIEmailAttachment2Vtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CApplicationModel_CEmail_CIEmailAttachment2* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CApplicationModel_CEmail_CIEmailAttachment2* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CApplicationModel_CEmail_CIEmailAttachment2* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CApplicationModel_CEmail_CIEmailAttachment2* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CApplicationModel_CEmail_CIEmailAttachment2* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CApplicationModel_CEmail_CIEmailAttachment2* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Id)(__x_ABI_CWindows_CApplicationModel_CEmail_CIEmailAttachment2* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* get_ContentId)(__x_ABI_CWindows_CApplicationModel_CEmail_CIEmailAttachment2* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* put_ContentId)(__x_ABI_CWindows_CApplicationModel_CEmail_CIEmailAttachment2* This,
        HSTRING value);
    HRESULT (STDMETHODCALLTYPE* get_ContentLocation)(__x_ABI_CWindows_CApplicationModel_CEmail_CIEmailAttachment2* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* put_ContentLocation)(__x_ABI_CWindows_CApplicationModel_CEmail_CIEmailAttachment2* This,
        HSTRING value);
    HRESULT (STDMETHODCALLTYPE* get_DownloadState)(__x_ABI_CWindows_CApplicationModel_CEmail_CIEmailAttachment2* This,
        enum __x_ABI_CWindows_CApplicationModel_CEmail_CEmailAttachmentDownloadState* value);
    HRESULT (STDMETHODCALLTYPE* put_DownloadState)(__x_ABI_CWindows_CApplicationModel_CEmail_CIEmailAttachment2* This,
        enum __x_ABI_CWindows_CApplicationModel_CEmail_CEmailAttachmentDownloadState value);
    HRESULT (STDMETHODCALLTYPE* get_EstimatedDownloadSizeInBytes)(__x_ABI_CWindows_CApplicationModel_CEmail_CIEmailAttachment2* This,
        UINT64* value);
    HRESULT (STDMETHODCALLTYPE* put_EstimatedDownloadSizeInBytes)(__x_ABI_CWindows_CApplicationModel_CEmail_CIEmailAttachment2* This,
        UINT64 value);
    HRESULT (STDMETHODCALLTYPE* get_IsFromBaseMessage)(__x_ABI_CWindows_CApplicationModel_CEmail_CIEmailAttachment2* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* get_IsInline)(__x_ABI_CWindows_CApplicationModel_CEmail_CIEmailAttachment2* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* put_IsInline)(__x_ABI_CWindows_CApplicationModel_CEmail_CIEmailAttachment2* This,
        boolean value);
    HRESULT (STDMETHODCALLTYPE* get_MimeType)(__x_ABI_CWindows_CApplicationModel_CEmail_CIEmailAttachment2* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* put_MimeType)(__x_ABI_CWindows_CApplicationModel_CEmail_CIEmailAttachment2* This,
        HSTRING value);

        END_INTERFACE
    } __x_ABI_CWindows_CApplicationModel_CEmail_CIEmailAttachment2Vtbl;

    interface __x_ABI_CWindows_CApplicationModel_CEmail_CIEmailAttachment2
    {
        CONST_VTBL struct __x_ABI_CWindows_CApplicationModel_CEmail_CIEmailAttachment2Vtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CApplicationModel_CEmail_CIEmailAttachment2;
#endif /* !defined(____x_ABI_CWindows_CApplicationModel_CEmail_CIEmailAttachment2_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CApplicationModel_CEmail_CIEmailAttachmentFactory_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CApplicationModel_CEmail_CIEmailAttachmentFactory_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CApplicationModel_CEmail_CIEmailAttachmentFactoryVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CApplicationModel_CEmail_CIEmailAttachmentFactory* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CApplicationModel_CEmail_CIEmailAttachmentFactory* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CApplicationModel_CEmail_CIEmailAttachmentFactory* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CApplicationModel_CEmail_CIEmailAttachmentFactory* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CApplicationModel_CEmail_CIEmailAttachmentFactory* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CApplicationModel_CEmail_CIEmailAttachmentFactory* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* Create)(__x_ABI_CWindows_CApplicationModel_CEmail_CIEmailAttachmentFactory* This,
        HSTRING fileName,
        __x_ABI_CWindows_CStorage_CStreams_CIRandomAccessStreamReference* data,
        __x_ABI_CWindows_CApplicationModel_CEmail_CIEmailAttachment** result);

        END_INTERFACE
    } __x_ABI_CWindows_CApplicationModel_CEmail_CIEmailAttachmentFactoryVtbl;

    interface __x_ABI_CWindows_CApplicationModel_CEmail_CIEmailAttachmentFactory
    {
        CONST_VTBL struct __x_ABI_CWindows_CApplicationModel_CEmail_CIEmailAttachmentFactoryVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CApplicationModel_CEmail_CIEmailAttachmentFactory;
#endif /* !defined(____x_ABI_CWindows_CApplicationModel_CEmail_CIEmailAttachmentFactory_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CApplicationModel_CEmail_CIEmailAttachmentFactory2_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CApplicationModel_CEmail_CIEmailAttachmentFactory2_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CApplicationModel_CEmail_CIEmailAttachmentFactory2Vtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CApplicationModel_CEmail_CIEmailAttachmentFactory2* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CApplicationModel_CEmail_CIEmailAttachmentFactory2* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CApplicationModel_CEmail_CIEmailAttachmentFactory2* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CApplicationModel_CEmail_CIEmailAttachmentFactory2* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CApplicationModel_CEmail_CIEmailAttachmentFactory2* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CApplicationModel_CEmail_CIEmailAttachmentFactory2* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* Create)(__x_ABI_CWindows_CApplicationModel_CEmail_CIEmailAttachmentFactory2* This,
        HSTRING fileName,
        __x_ABI_CWindows_CStorage_CStreams_CIRandomAccessStreamReference* data,
        HSTRING mimeType,
        __x_ABI_CWindows_CApplicationModel_CEmail_CIEmailAttachment** result);

        END_INTERFACE
    } __x_ABI_CWindows_CApplicationModel_CEmail_CIEmailAttachmentFactory2Vtbl;

    interface __x_ABI_CWindows_CApplicationModel_CEmail_CIEmailAttachmentFactory2
    {
        CONST_VTBL struct __x_ABI_CWindows_CApplicationModel_CEmail_CIEmailAttachmentFactory2Vtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CApplicationModel_CEmail_CIEmailAttachmentFactory2;
#endif /* !defined(____x_ABI_CWindows_CApplicationModel_CEmail_CIEmailAttachmentFactory2_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CApplicationModel_CEmail_CIEmailConversation_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CApplicationModel_CEmail_CIEmailConversation_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CApplicationModel_CEmail_CIEmailConversationVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CApplicationModel_CEmail_CIEmailConversation* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CApplicationModel_CEmail_CIEmailConversation* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CApplicationModel_CEmail_CIEmailConversation* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CApplicationModel_CEmail_CIEmailConversation* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CApplicationModel_CEmail_CIEmailConversation* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CApplicationModel_CEmail_CIEmailConversation* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Id)(__x_ABI_CWindows_CApplicationModel_CEmail_CIEmailConversation* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* get_MailboxId)(__x_ABI_CWindows_CApplicationModel_CEmail_CIEmailConversation* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* get_FlagState)(__x_ABI_CWindows_CApplicationModel_CEmail_CIEmailConversation* This,
        enum __x_ABI_CWindows_CApplicationModel_CEmail_CEmailFlagState* value);
    HRESULT (STDMETHODCALLTYPE* get_HasAttachment)(__x_ABI_CWindows_CApplicationModel_CEmail_CIEmailConversation* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* get_Importance)(__x_ABI_CWindows_CApplicationModel_CEmail_CIEmailConversation* This,
        enum __x_ABI_CWindows_CApplicationModel_CEmail_CEmailImportance* value);
    HRESULT (STDMETHODCALLTYPE* get_LastEmailResponseKind)(__x_ABI_CWindows_CApplicationModel_CEmail_CIEmailConversation* This,
        enum __x_ABI_CWindows_CApplicationModel_CEmail_CEmailMessageResponseKind* value);
    HRESULT (STDMETHODCALLTYPE* get_MessageCount)(__x_ABI_CWindows_CApplicationModel_CEmail_CIEmailConversation* This,
        UINT32* value);
    HRESULT (STDMETHODCALLTYPE* get_MostRecentMessageId)(__x_ABI_CWindows_CApplicationModel_CEmail_CIEmailConversation* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* get_MostRecentMessageTime)(__x_ABI_CWindows_CApplicationModel_CEmail_CIEmailConversation* This,
        struct __x_ABI_CWindows_CFoundation_CDateTime* value);
    HRESULT (STDMETHODCALLTYPE* get_Preview)(__x_ABI_CWindows_CApplicationModel_CEmail_CIEmailConversation* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* get_LatestSender)(__x_ABI_CWindows_CApplicationModel_CEmail_CIEmailConversation* This,
        __x_ABI_CWindows_CApplicationModel_CEmail_CIEmailRecipient** value);
    HRESULT (STDMETHODCALLTYPE* get_Subject)(__x_ABI_CWindows_CApplicationModel_CEmail_CIEmailConversation* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* get_UnreadMessageCount)(__x_ABI_CWindows_CApplicationModel_CEmail_CIEmailConversation* This,
        UINT32* value);
    HRESULT (STDMETHODCALLTYPE* FindMessagesAsync)(__x_ABI_CWindows_CApplicationModel_CEmail_CIEmailConversation* This,
        __x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailMessage** result);
    HRESULT (STDMETHODCALLTYPE* FindMessagesWithCountAsync)(__x_ABI_CWindows_CApplicationModel_CEmail_CIEmailConversation* This,
        UINT32 count,
        __x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailMessage** result);

        END_INTERFACE
    } __x_ABI_CWindows_CApplicationModel_CEmail_CIEmailConversationVtbl;

    interface __x_ABI_CWindows_CApplicationModel_CEmail_CIEmailConversation
    {
        CONST_VTBL struct __x_ABI_CWindows_CApplicationModel_CEmail_CIEmailConversationVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CApplicationModel_CEmail_CIEmailConversation;
#endif /* !defined(____x_ABI_CWindows_CApplicationModel_CEmail_CIEmailConversation_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CApplicationModel_CEmail_CIEmailConversationBatch_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CApplicationModel_CEmail_CIEmailConversationBatch_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CApplicationModel_CEmail_CIEmailConversationBatchVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CApplicationModel_CEmail_CIEmailConversationBatch* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CApplicationModel_CEmail_CIEmailConversationBatch* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CApplicationModel_CEmail_CIEmailConversationBatch* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CApplicationModel_CEmail_CIEmailConversationBatch* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CApplicationModel_CEmail_CIEmailConversationBatch* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CApplicationModel_CEmail_CIEmailConversationBatch* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Conversations)(__x_ABI_CWindows_CApplicationModel_CEmail_CIEmailConversationBatch* This,
        __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailConversation** value);
    HRESULT (STDMETHODCALLTYPE* get_Status)(__x_ABI_CWindows_CApplicationModel_CEmail_CIEmailConversationBatch* This,
        enum __x_ABI_CWindows_CApplicationModel_CEmail_CEmailBatchStatus* value);

        END_INTERFACE
    } __x_ABI_CWindows_CApplicationModel_CEmail_CIEmailConversationBatchVtbl;

    interface __x_ABI_CWindows_CApplicationModel_CEmail_CIEmailConversationBatch
    {
        CONST_VTBL struct __x_ABI_CWindows_CApplicationModel_CEmail_CIEmailConversationBatchVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CApplicationModel_CEmail_CIEmailConversationBatch;
#endif /* !defined(____x_ABI_CWindows_CApplicationModel_CEmail_CIEmailConversationBatch_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CApplicationModel_CEmail_CIEmailConversationReader_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CApplicationModel_CEmail_CIEmailConversationReader_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CApplicationModel_CEmail_CIEmailConversationReaderVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CApplicationModel_CEmail_CIEmailConversationReader* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CApplicationModel_CEmail_CIEmailConversationReader* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CApplicationModel_CEmail_CIEmailConversationReader* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CApplicationModel_CEmail_CIEmailConversationReader* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CApplicationModel_CEmail_CIEmailConversationReader* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CApplicationModel_CEmail_CIEmailConversationReader* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* ReadBatchAsync)(__x_ABI_CWindows_CApplicationModel_CEmail_CIEmailConversationReader* This,
        __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailConversationBatch** result);

        END_INTERFACE
    } __x_ABI_CWindows_CApplicationModel_CEmail_CIEmailConversationReaderVtbl;

    interface __x_ABI_CWindows_CApplicationModel_CEmail_CIEmailConversationReader
    {
        CONST_VTBL struct __x_ABI_CWindows_CApplicationModel_CEmail_CIEmailConversationReaderVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CApplicationModel_CEmail_CIEmailConversationReader;
#endif /* !defined(____x_ABI_CWindows_CApplicationModel_CEmail_CIEmailConversationReader_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CApplicationModel_CEmail_CIEmailFolder_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CApplicationModel_CEmail_CIEmailFolder_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CApplicationModel_CEmail_CIEmailFolderVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CApplicationModel_CEmail_CIEmailFolder* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CApplicationModel_CEmail_CIEmailFolder* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CApplicationModel_CEmail_CIEmailFolder* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CApplicationModel_CEmail_CIEmailFolder* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CApplicationModel_CEmail_CIEmailFolder* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CApplicationModel_CEmail_CIEmailFolder* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Id)(__x_ABI_CWindows_CApplicationModel_CEmail_CIEmailFolder* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* get_RemoteId)(__x_ABI_CWindows_CApplicationModel_CEmail_CIEmailFolder* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* put_RemoteId)(__x_ABI_CWindows_CApplicationModel_CEmail_CIEmailFolder* This,
        HSTRING value);
    HRESULT (STDMETHODCALLTYPE* get_MailboxId)(__x_ABI_CWindows_CApplicationModel_CEmail_CIEmailFolder* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* get_ParentFolderId)(__x_ABI_CWindows_CApplicationModel_CEmail_CIEmailFolder* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* get_DisplayName)(__x_ABI_CWindows_CApplicationModel_CEmail_CIEmailFolder* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* put_DisplayName)(__x_ABI_CWindows_CApplicationModel_CEmail_CIEmailFolder* This,
        HSTRING value);
    HRESULT (STDMETHODCALLTYPE* get_IsSyncEnabled)(__x_ABI_CWindows_CApplicationModel_CEmail_CIEmailFolder* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* put_IsSyncEnabled)(__x_ABI_CWindows_CApplicationModel_CEmail_CIEmailFolder* This,
        boolean value);
    HRESULT (STDMETHODCALLTYPE* get_LastSuccessfulSyncTime)(__x_ABI_CWindows_CApplicationModel_CEmail_CIEmailFolder* This,
        struct __x_ABI_CWindows_CFoundation_CDateTime* value);
    HRESULT (STDMETHODCALLTYPE* put_LastSuccessfulSyncTime)(__x_ABI_CWindows_CApplicationModel_CEmail_CIEmailFolder* This,
        struct __x_ABI_CWindows_CFoundation_CDateTime value);
    HRESULT (STDMETHODCALLTYPE* get_Kind)(__x_ABI_CWindows_CApplicationModel_CEmail_CIEmailFolder* This,
        enum __x_ABI_CWindows_CApplicationModel_CEmail_CEmailSpecialFolderKind* value);
    HRESULT (STDMETHODCALLTYPE* CreateFolderAsync)(__x_ABI_CWindows_CApplicationModel_CEmail_CIEmailFolder* This,
        HSTRING name,
        __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailFolder** result);
    HRESULT (STDMETHODCALLTYPE* DeleteAsync)(__x_ABI_CWindows_CApplicationModel_CEmail_CIEmailFolder* This,
        __x_ABI_CWindows_CFoundation_CIAsyncAction** result);
    HRESULT (STDMETHODCALLTYPE* FindChildFoldersAsync)(__x_ABI_CWindows_CApplicationModel_CEmail_CIEmailFolder* This,
        __x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailFolder** result);
    HRESULT (STDMETHODCALLTYPE* GetConversationReader)(__x_ABI_CWindows_CApplicationModel_CEmail_CIEmailFolder* This,
        __x_ABI_CWindows_CApplicationModel_CEmail_CIEmailConversationReader** result);
    HRESULT (STDMETHODCALLTYPE* GetConversationReaderWithOptions)(__x_ABI_CWindows_CApplicationModel_CEmail_CIEmailFolder* This,
        __x_ABI_CWindows_CApplicationModel_CEmail_CIEmailQueryOptions* options,
        __x_ABI_CWindows_CApplicationModel_CEmail_CIEmailConversationReader** result);
    HRESULT (STDMETHODCALLTYPE* GetMessageAsync)(__x_ABI_CWindows_CApplicationModel_CEmail_CIEmailFolder* This,
        HSTRING id,
        __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailMessage** result);
    HRESULT (STDMETHODCALLTYPE* GetMessageReader)(__x_ABI_CWindows_CApplicationModel_CEmail_CIEmailFolder* This,
        __x_ABI_CWindows_CApplicationModel_CEmail_CIEmailMessageReader** result);
    HRESULT (STDMETHODCALLTYPE* GetMessageReaderWithOptions)(__x_ABI_CWindows_CApplicationModel_CEmail_CIEmailFolder* This,
        __x_ABI_CWindows_CApplicationModel_CEmail_CIEmailQueryOptions* options,
        __x_ABI_CWindows_CApplicationModel_CEmail_CIEmailMessageReader** result);
    HRESULT (STDMETHODCALLTYPE* GetMessageCountsAsync)(__x_ABI_CWindows_CApplicationModel_CEmail_CIEmailFolder* This,
        __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailItemCounts** result);
    HRESULT (STDMETHODCALLTYPE* TryMoveAsync)(__x_ABI_CWindows_CApplicationModel_CEmail_CIEmailFolder* This,
        __x_ABI_CWindows_CApplicationModel_CEmail_CIEmailFolder* newParentFolder,
        __x_ABI_C__FIAsyncOperation_1_boolean** result);
    HRESULT (STDMETHODCALLTYPE* TryMoveWithNewNameAsync)(__x_ABI_CWindows_CApplicationModel_CEmail_CIEmailFolder* This,
        __x_ABI_CWindows_CApplicationModel_CEmail_CIEmailFolder* newParentFolder,
        HSTRING newFolderName,
        __x_ABI_C__FIAsyncOperation_1_boolean** result);
    HRESULT (STDMETHODCALLTYPE* TrySaveAsync)(__x_ABI_CWindows_CApplicationModel_CEmail_CIEmailFolder* This,
        __x_ABI_C__FIAsyncOperation_1_boolean** result);
    HRESULT (STDMETHODCALLTYPE* SaveMessageAsync)(__x_ABI_CWindows_CApplicationModel_CEmail_CIEmailFolder* This,
        __x_ABI_CWindows_CApplicationModel_CEmail_CIEmailMessage* message,
        __x_ABI_CWindows_CFoundation_CIAsyncAction** result);

        END_INTERFACE
    } __x_ABI_CWindows_CApplicationModel_CEmail_CIEmailFolderVtbl;

    interface __x_ABI_CWindows_CApplicationModel_CEmail_CIEmailFolder
    {
        CONST_VTBL struct __x_ABI_CWindows_CApplicationModel_CEmail_CIEmailFolderVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CApplicationModel_CEmail_CIEmailFolder;
#endif /* !defined(____x_ABI_CWindows_CApplicationModel_CEmail_CIEmailFolder_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CApplicationModel_CEmail_CIEmailIrmInfo_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CApplicationModel_CEmail_CIEmailIrmInfo_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CApplicationModel_CEmail_CIEmailIrmInfoVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CApplicationModel_CEmail_CIEmailIrmInfo* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CApplicationModel_CEmail_CIEmailIrmInfo* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CApplicationModel_CEmail_CIEmailIrmInfo* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CApplicationModel_CEmail_CIEmailIrmInfo* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CApplicationModel_CEmail_CIEmailIrmInfo* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CApplicationModel_CEmail_CIEmailIrmInfo* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_CanEdit)(__x_ABI_CWindows_CApplicationModel_CEmail_CIEmailIrmInfo* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* put_CanEdit)(__x_ABI_CWindows_CApplicationModel_CEmail_CIEmailIrmInfo* This,
        boolean value);
    HRESULT (STDMETHODCALLTYPE* get_CanExtractData)(__x_ABI_CWindows_CApplicationModel_CEmail_CIEmailIrmInfo* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* put_CanExtractData)(__x_ABI_CWindows_CApplicationModel_CEmail_CIEmailIrmInfo* This,
        boolean value);
    HRESULT (STDMETHODCALLTYPE* get_CanForward)(__x_ABI_CWindows_CApplicationModel_CEmail_CIEmailIrmInfo* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* put_CanForward)(__x_ABI_CWindows_CApplicationModel_CEmail_CIEmailIrmInfo* This,
        boolean value);
    HRESULT (STDMETHODCALLTYPE* get_CanModifyRecipientsOnResponse)(__x_ABI_CWindows_CApplicationModel_CEmail_CIEmailIrmInfo* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* put_CanModifyRecipientsOnResponse)(__x_ABI_CWindows_CApplicationModel_CEmail_CIEmailIrmInfo* This,
        boolean value);
    HRESULT (STDMETHODCALLTYPE* get_CanPrintData)(__x_ABI_CWindows_CApplicationModel_CEmail_CIEmailIrmInfo* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* put_CanPrintData)(__x_ABI_CWindows_CApplicationModel_CEmail_CIEmailIrmInfo* This,
        boolean value);
    HRESULT (STDMETHODCALLTYPE* get_CanRemoveIrmOnResponse)(__x_ABI_CWindows_CApplicationModel_CEmail_CIEmailIrmInfo* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* put_CanRemoveIrmOnResponse)(__x_ABI_CWindows_CApplicationModel_CEmail_CIEmailIrmInfo* This,
        boolean value);
    HRESULT (STDMETHODCALLTYPE* get_CanReply)(__x_ABI_CWindows_CApplicationModel_CEmail_CIEmailIrmInfo* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* put_CanReply)(__x_ABI_CWindows_CApplicationModel_CEmail_CIEmailIrmInfo* This,
        boolean value);
    HRESULT (STDMETHODCALLTYPE* get_CanReplyAll)(__x_ABI_CWindows_CApplicationModel_CEmail_CIEmailIrmInfo* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* put_CanReplyAll)(__x_ABI_CWindows_CApplicationModel_CEmail_CIEmailIrmInfo* This,
        boolean value);
    HRESULT (STDMETHODCALLTYPE* get_ExpirationDate)(__x_ABI_CWindows_CApplicationModel_CEmail_CIEmailIrmInfo* This,
        struct __x_ABI_CWindows_CFoundation_CDateTime* value);
    HRESULT (STDMETHODCALLTYPE* put_ExpirationDate)(__x_ABI_CWindows_CApplicationModel_CEmail_CIEmailIrmInfo* This,
        struct __x_ABI_CWindows_CFoundation_CDateTime value);
    HRESULT (STDMETHODCALLTYPE* get_IsIrmOriginator)(__x_ABI_CWindows_CApplicationModel_CEmail_CIEmailIrmInfo* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* put_IsIrmOriginator)(__x_ABI_CWindows_CApplicationModel_CEmail_CIEmailIrmInfo* This,
        boolean value);
    HRESULT (STDMETHODCALLTYPE* get_IsProgramaticAccessAllowed)(__x_ABI_CWindows_CApplicationModel_CEmail_CIEmailIrmInfo* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* put_IsProgramaticAccessAllowed)(__x_ABI_CWindows_CApplicationModel_CEmail_CIEmailIrmInfo* This,
        boolean value);
    HRESULT (STDMETHODCALLTYPE* get_Template)(__x_ABI_CWindows_CApplicationModel_CEmail_CIEmailIrmInfo* This,
        __x_ABI_CWindows_CApplicationModel_CEmail_CIEmailIrmTemplate** value);
    HRESULT (STDMETHODCALLTYPE* put_Template)(__x_ABI_CWindows_CApplicationModel_CEmail_CIEmailIrmInfo* This,
        __x_ABI_CWindows_CApplicationModel_CEmail_CIEmailIrmTemplate* value);

        END_INTERFACE
    } __x_ABI_CWindows_CApplicationModel_CEmail_CIEmailIrmInfoVtbl;

    interface __x_ABI_CWindows_CApplicationModel_CEmail_CIEmailIrmInfo
    {
        CONST_VTBL struct __x_ABI_CWindows_CApplicationModel_CEmail_CIEmailIrmInfoVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CApplicationModel_CEmail_CIEmailIrmInfo;
#endif /* !defined(____x_ABI_CWindows_CApplicationModel_CEmail_CIEmailIrmInfo_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CApplicationModel_CEmail_CIEmailIrmInfoFactory_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CApplicationModel_CEmail_CIEmailIrmInfoFactory_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CApplicationModel_CEmail_CIEmailIrmInfoFactoryVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CApplicationModel_CEmail_CIEmailIrmInfoFactory* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CApplicationModel_CEmail_CIEmailIrmInfoFactory* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CApplicationModel_CEmail_CIEmailIrmInfoFactory* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CApplicationModel_CEmail_CIEmailIrmInfoFactory* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CApplicationModel_CEmail_CIEmailIrmInfoFactory* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CApplicationModel_CEmail_CIEmailIrmInfoFactory* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* Create)(__x_ABI_CWindows_CApplicationModel_CEmail_CIEmailIrmInfoFactory* This,
        struct __x_ABI_CWindows_CFoundation_CDateTime expiration,
        __x_ABI_CWindows_CApplicationModel_CEmail_CIEmailIrmTemplate* irmTemplate,
        __x_ABI_CWindows_CApplicationModel_CEmail_CIEmailIrmInfo** result);

        END_INTERFACE
    } __x_ABI_CWindows_CApplicationModel_CEmail_CIEmailIrmInfoFactoryVtbl;

    interface __x_ABI_CWindows_CApplicationModel_CEmail_CIEmailIrmInfoFactory
    {
        CONST_VTBL struct __x_ABI_CWindows_CApplicationModel_CEmail_CIEmailIrmInfoFactoryVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CApplicationModel_CEmail_CIEmailIrmInfoFactory;
#endif /* !defined(____x_ABI_CWindows_CApplicationModel_CEmail_CIEmailIrmInfoFactory_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CApplicationModel_CEmail_CIEmailIrmTemplate_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CApplicationModel_CEmail_CIEmailIrmTemplate_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CApplicationModel_CEmail_CIEmailIrmTemplateVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CApplicationModel_CEmail_CIEmailIrmTemplate* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CApplicationModel_CEmail_CIEmailIrmTemplate* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CApplicationModel_CEmail_CIEmailIrmTemplate* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CApplicationModel_CEmail_CIEmailIrmTemplate* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CApplicationModel_CEmail_CIEmailIrmTemplate* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CApplicationModel_CEmail_CIEmailIrmTemplate* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Id)(__x_ABI_CWindows_CApplicationModel_CEmail_CIEmailIrmTemplate* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* put_Id)(__x_ABI_CWindows_CApplicationModel_CEmail_CIEmailIrmTemplate* This,
        HSTRING value);
    HRESULT (STDMETHODCALLTYPE* get_Description)(__x_ABI_CWindows_CApplicationModel_CEmail_CIEmailIrmTemplate* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* put_Description)(__x_ABI_CWindows_CApplicationModel_CEmail_CIEmailIrmTemplate* This,
        HSTRING value);
    HRESULT (STDMETHODCALLTYPE* get_Name)(__x_ABI_CWindows_CApplicationModel_CEmail_CIEmailIrmTemplate* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* put_Name)(__x_ABI_CWindows_CApplicationModel_CEmail_CIEmailIrmTemplate* This,
        HSTRING value);

        END_INTERFACE
    } __x_ABI_CWindows_CApplicationModel_CEmail_CIEmailIrmTemplateVtbl;

    interface __x_ABI_CWindows_CApplicationModel_CEmail_CIEmailIrmTemplate
    {
        CONST_VTBL struct __x_ABI_CWindows_CApplicationModel_CEmail_CIEmailIrmTemplateVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CApplicationModel_CEmail_CIEmailIrmTemplate;
#endif /* !defined(____x_ABI_CWindows_CApplicationModel_CEmail_CIEmailIrmTemplate_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CApplicationModel_CEmail_CIEmailIrmTemplateFactory_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CApplicationModel_CEmail_CIEmailIrmTemplateFactory_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CApplicationModel_CEmail_CIEmailIrmTemplateFactoryVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CApplicationModel_CEmail_CIEmailIrmTemplateFactory* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CApplicationModel_CEmail_CIEmailIrmTemplateFactory* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CApplicationModel_CEmail_CIEmailIrmTemplateFactory* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CApplicationModel_CEmail_CIEmailIrmTemplateFactory* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CApplicationModel_CEmail_CIEmailIrmTemplateFactory* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CApplicationModel_CEmail_CIEmailIrmTemplateFactory* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* Create)(__x_ABI_CWindows_CApplicationModel_CEmail_CIEmailIrmTemplateFactory* This,
        HSTRING id,
        HSTRING name,
        HSTRING description,
        __x_ABI_CWindows_CApplicationModel_CEmail_CIEmailIrmTemplate** result);

        END_INTERFACE
    } __x_ABI_CWindows_CApplicationModel_CEmail_CIEmailIrmTemplateFactoryVtbl;

    interface __x_ABI_CWindows_CApplicationModel_CEmail_CIEmailIrmTemplateFactory
    {
        CONST_VTBL struct __x_ABI_CWindows_CApplicationModel_CEmail_CIEmailIrmTemplateFactoryVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CApplicationModel_CEmail_CIEmailIrmTemplateFactory;
#endif /* !defined(____x_ABI_CWindows_CApplicationModel_CEmail_CIEmailIrmTemplateFactory_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CApplicationModel_CEmail_CIEmailItemCounts_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CApplicationModel_CEmail_CIEmailItemCounts_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CApplicationModel_CEmail_CIEmailItemCountsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CApplicationModel_CEmail_CIEmailItemCounts* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CApplicationModel_CEmail_CIEmailItemCounts* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CApplicationModel_CEmail_CIEmailItemCounts* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CApplicationModel_CEmail_CIEmailItemCounts* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CApplicationModel_CEmail_CIEmailItemCounts* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CApplicationModel_CEmail_CIEmailItemCounts* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Flagged)(__x_ABI_CWindows_CApplicationModel_CEmail_CIEmailItemCounts* This,
        UINT32* value);
    HRESULT (STDMETHODCALLTYPE* get_Important)(__x_ABI_CWindows_CApplicationModel_CEmail_CIEmailItemCounts* This,
        UINT32* value);
    HRESULT (STDMETHODCALLTYPE* get_Total)(__x_ABI_CWindows_CApplicationModel_CEmail_CIEmailItemCounts* This,
        UINT32* value);
    HRESULT (STDMETHODCALLTYPE* get_Unread)(__x_ABI_CWindows_CApplicationModel_CEmail_CIEmailItemCounts* This,
        UINT32* value);

        END_INTERFACE
    } __x_ABI_CWindows_CApplicationModel_CEmail_CIEmailItemCountsVtbl;

    interface __x_ABI_CWindows_CApplicationModel_CEmail_CIEmailItemCounts
    {
        CONST_VTBL struct __x_ABI_CWindows_CApplicationModel_CEmail_CIEmailItemCountsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CApplicationModel_CEmail_CIEmailItemCounts;
#endif /* !defined(____x_ABI_CWindows_CApplicationModel_CEmail_CIEmailItemCounts_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CApplicationModel_CEmail_CIEmailMailbox_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CApplicationModel_CEmail_CIEmailMailbox_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CApplicationModel_CEmail_CIEmailMailboxVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CApplicationModel_CEmail_CIEmailMailbox* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CApplicationModel_CEmail_CIEmailMailbox* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CApplicationModel_CEmail_CIEmailMailbox* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CApplicationModel_CEmail_CIEmailMailbox* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CApplicationModel_CEmail_CIEmailMailbox* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CApplicationModel_CEmail_CIEmailMailbox* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Capabilities)(__x_ABI_CWindows_CApplicationModel_CEmail_CIEmailMailbox* This,
        __x_ABI_CWindows_CApplicationModel_CEmail_CIEmailMailboxCapabilities** value);
    HRESULT (STDMETHODCALLTYPE* get_ChangeTracker)(__x_ABI_CWindows_CApplicationModel_CEmail_CIEmailMailbox* This,
        __x_ABI_CWindows_CApplicationModel_CEmail_CIEmailMailboxChangeTracker** value);
    HRESULT (STDMETHODCALLTYPE* get_DisplayName)(__x_ABI_CWindows_CApplicationModel_CEmail_CIEmailMailbox* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* put_DisplayName)(__x_ABI_CWindows_CApplicationModel_CEmail_CIEmailMailbox* This,
        HSTRING value);
    HRESULT (STDMETHODCALLTYPE* get_Id)(__x_ABI_CWindows_CApplicationModel_CEmail_CIEmailMailbox* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* get_IsOwnedByCurrentApp)(__x_ABI_CWindows_CApplicationModel_CEmail_CIEmailMailbox* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* get_IsDataEncryptedUnderLock)(__x_ABI_CWindows_CApplicationModel_CEmail_CIEmailMailbox* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* get_MailAddress)(__x_ABI_CWindows_CApplicationModel_CEmail_CIEmailMailbox* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* put_MailAddress)(__x_ABI_CWindows_CApplicationModel_CEmail_CIEmailMailbox* This,
        HSTRING value);
    HRESULT (STDMETHODCALLTYPE* get_MailAddressAliases)(__x_ABI_CWindows_CApplicationModel_CEmail_CIEmailMailbox* This,
        __x_ABI_C__FIVector_1_HSTRING** value);
    HRESULT (STDMETHODCALLTYPE* get_OtherAppReadAccess)(__x_ABI_CWindows_CApplicationModel_CEmail_CIEmailMailbox* This,
        enum __x_ABI_CWindows_CApplicationModel_CEmail_CEmailMailboxOtherAppReadAccess* value);
    HRESULT (STDMETHODCALLTYPE* put_OtherAppReadAccess)(__x_ABI_CWindows_CApplicationModel_CEmail_CIEmailMailbox* This,
        enum __x_ABI_CWindows_CApplicationModel_CEmail_CEmailMailboxOtherAppReadAccess value);
    HRESULT (STDMETHODCALLTYPE* get_OtherAppWriteAccess)(__x_ABI_CWindows_CApplicationModel_CEmail_CIEmailMailbox* This,
        enum __x_ABI_CWindows_CApplicationModel_CEmail_CEmailMailboxOtherAppWriteAccess* value);
    HRESULT (STDMETHODCALLTYPE* put_OtherAppWriteAccess)(__x_ABI_CWindows_CApplicationModel_CEmail_CIEmailMailbox* This,
        enum __x_ABI_CWindows_CApplicationModel_CEmail_CEmailMailboxOtherAppWriteAccess value);
    HRESULT (STDMETHODCALLTYPE* get_Policies)(__x_ABI_CWindows_CApplicationModel_CEmail_CIEmailMailbox* This,
        __x_ABI_CWindows_CApplicationModel_CEmail_CIEmailMailboxPolicies** value);
    HRESULT (STDMETHODCALLTYPE* get_SourceDisplayName)(__x_ABI_CWindows_CApplicationModel_CEmail_CIEmailMailbox* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* get_SyncManager)(__x_ABI_CWindows_CApplicationModel_CEmail_CIEmailMailbox* This,
        __x_ABI_CWindows_CApplicationModel_CEmail_CIEmailMailboxSyncManager** value);
    HRESULT (STDMETHODCALLTYPE* get_UserDataAccountId)(__x_ABI_CWindows_CApplicationModel_CEmail_CIEmailMailbox* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* GetConversationReader)(__x_ABI_CWindows_CApplicationModel_CEmail_CIEmailMailbox* This,
        __x_ABI_CWindows_CApplicationModel_CEmail_CIEmailConversationReader** result);
    HRESULT (STDMETHODCALLTYPE* GetConversationReaderWithOptions)(__x_ABI_CWindows_CApplicationModel_CEmail_CIEmailMailbox* This,
        __x_ABI_CWindows_CApplicationModel_CEmail_CIEmailQueryOptions* options,
        __x_ABI_CWindows_CApplicationModel_CEmail_CIEmailConversationReader** result);
    HRESULT (STDMETHODCALLTYPE* GetMessageReader)(__x_ABI_CWindows_CApplicationModel_CEmail_CIEmailMailbox* This,
        __x_ABI_CWindows_CApplicationModel_CEmail_CIEmailMessageReader** result);
    HRESULT (STDMETHODCALLTYPE* GetMessageReaderWithOptions)(__x_ABI_CWindows_CApplicationModel_CEmail_CIEmailMailbox* This,
        __x_ABI_CWindows_CApplicationModel_CEmail_CIEmailQueryOptions* options,
        __x_ABI_CWindows_CApplicationModel_CEmail_CIEmailMessageReader** result);
    HRESULT (STDMETHODCALLTYPE* DeleteAsync)(__x_ABI_CWindows_CApplicationModel_CEmail_CIEmailMailbox* This,
        __x_ABI_CWindows_CFoundation_CIAsyncAction** result);
    HRESULT (STDMETHODCALLTYPE* GetConversationAsync)(__x_ABI_CWindows_CApplicationModel_CEmail_CIEmailMailbox* This,
        HSTRING id,
        __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailConversation** result);
    HRESULT (STDMETHODCALLTYPE* GetFolderAsync)(__x_ABI_CWindows_CApplicationModel_CEmail_CIEmailMailbox* This,
        HSTRING id,
        __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailFolder** result);
    HRESULT (STDMETHODCALLTYPE* GetMessageAsync)(__x_ABI_CWindows_CApplicationModel_CEmail_CIEmailMailbox* This,
        HSTRING id,
        __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailMessage** result);
    HRESULT (STDMETHODCALLTYPE* GetSpecialFolderAsync)(__x_ABI_CWindows_CApplicationModel_CEmail_CIEmailMailbox* This,
        enum __x_ABI_CWindows_CApplicationModel_CEmail_CEmailSpecialFolderKind folderType,
        __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailFolder** result);
    HRESULT (STDMETHODCALLTYPE* SaveAsync)(__x_ABI_CWindows_CApplicationModel_CEmail_CIEmailMailbox* This,
        __x_ABI_CWindows_CFoundation_CIAsyncAction** result);
    HRESULT (STDMETHODCALLTYPE* MarkMessageAsSeenAsync)(__x_ABI_CWindows_CApplicationModel_CEmail_CIEmailMailbox* This,
        HSTRING messageId,
        __x_ABI_CWindows_CFoundation_CIAsyncAction** result);
    HRESULT (STDMETHODCALLTYPE* MarkFolderAsSeenAsync)(__x_ABI_CWindows_CApplicationModel_CEmail_CIEmailMailbox* This,
        HSTRING folderId,
        __x_ABI_CWindows_CFoundation_CIAsyncAction** result);
    HRESULT (STDMETHODCALLTYPE* MarkMessageReadAsync)(__x_ABI_CWindows_CApplicationModel_CEmail_CIEmailMailbox* This,
        HSTRING messageId,
        boolean isRead,
        __x_ABI_CWindows_CFoundation_CIAsyncAction** result);
    HRESULT (STDMETHODCALLTYPE* ChangeMessageFlagStateAsync)(__x_ABI_CWindows_CApplicationModel_CEmail_CIEmailMailbox* This,
        HSTRING messageId,
        enum __x_ABI_CWindows_CApplicationModel_CEmail_CEmailFlagState flagState,
        __x_ABI_CWindows_CFoundation_CIAsyncAction** result);
    HRESULT (STDMETHODCALLTYPE* TryMoveMessageAsync)(__x_ABI_CWindows_CApplicationModel_CEmail_CIEmailMailbox* This,
        HSTRING messageId,
        HSTRING newParentFolderId,
        __x_ABI_C__FIAsyncOperation_1_boolean** result);
    HRESULT (STDMETHODCALLTYPE* TryMoveFolderAsync)(__x_ABI_CWindows_CApplicationModel_CEmail_CIEmailMailbox* This,
        HSTRING folderId,
        HSTRING newParentFolderId,
        __x_ABI_C__FIAsyncOperation_1_boolean** result);
    HRESULT (STDMETHODCALLTYPE* TryMoveFolderWithNewNameAsync)(__x_ABI_CWindows_CApplicationModel_CEmail_CIEmailMailbox* This,
        HSTRING folderId,
        HSTRING newParentFolderId,
        HSTRING newFolderName,
        __x_ABI_C__FIAsyncOperation_1_boolean** result);
    HRESULT (STDMETHODCALLTYPE* DeleteMessageAsync)(__x_ABI_CWindows_CApplicationModel_CEmail_CIEmailMailbox* This,
        HSTRING messageId,
        __x_ABI_CWindows_CFoundation_CIAsyncAction** result);
    HRESULT (STDMETHODCALLTYPE* MarkFolderSyncEnabledAsync)(__x_ABI_CWindows_CApplicationModel_CEmail_CIEmailMailbox* This,
        HSTRING folderId,
        boolean isSyncEnabled,
        __x_ABI_CWindows_CFoundation_CIAsyncAction** result);
    HRESULT (STDMETHODCALLTYPE* SendMessageAsync)(__x_ABI_CWindows_CApplicationModel_CEmail_CIEmailMailbox* This,
        __x_ABI_CWindows_CApplicationModel_CEmail_CIEmailMessage* message,
        __x_ABI_CWindows_CFoundation_CIAsyncAction** result);
    HRESULT (STDMETHODCALLTYPE* SaveDraftAsync)(__x_ABI_CWindows_CApplicationModel_CEmail_CIEmailMailbox* This,
        __x_ABI_CWindows_CApplicationModel_CEmail_CIEmailMessage* message,
        __x_ABI_CWindows_CFoundation_CIAsyncAction** result);
    HRESULT (STDMETHODCALLTYPE* DownloadMessageAsync)(__x_ABI_CWindows_CApplicationModel_CEmail_CIEmailMailbox* This,
        HSTRING messageId,
        __x_ABI_CWindows_CFoundation_CIAsyncAction** result);
    HRESULT (STDMETHODCALLTYPE* DownloadAttachmentAsync)(__x_ABI_CWindows_CApplicationModel_CEmail_CIEmailMailbox* This,
        HSTRING attachmentId,
        __x_ABI_CWindows_CFoundation_CIAsyncAction** result);
    HRESULT (STDMETHODCALLTYPE* CreateResponseMessageAsync)(__x_ABI_CWindows_CApplicationModel_CEmail_CIEmailMailbox* This,
        HSTRING messageId,
        enum __x_ABI_CWindows_CApplicationModel_CEmail_CEmailMessageResponseKind responseType,
        HSTRING subject,
        enum __x_ABI_CWindows_CApplicationModel_CEmail_CEmailMessageBodyKind responseHeaderType,
        HSTRING responseHeader,
        __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailMessage** result);
    HRESULT (STDMETHODCALLTYPE* TryUpdateMeetingResponseAsync)(__x_ABI_CWindows_CApplicationModel_CEmail_CIEmailMailbox* This,
        __x_ABI_CWindows_CApplicationModel_CEmail_CIEmailMessage* meeting,
        enum __x_ABI_CWindows_CApplicationModel_CEmail_CEmailMeetingResponseType response,
        HSTRING subject,
        HSTRING comment,
        boolean sendUpdate,
        __x_ABI_C__FIAsyncOperation_1_boolean** result);
    HRESULT (STDMETHODCALLTYPE* TryForwardMeetingAsync)(__x_ABI_CWindows_CApplicationModel_CEmail_CIEmailMailbox* This,
        __x_ABI_CWindows_CApplicationModel_CEmail_CIEmailMessage* meeting,
        __x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailRecipient* recipients,
        HSTRING subject,
        enum __x_ABI_CWindows_CApplicationModel_CEmail_CEmailMessageBodyKind forwardHeaderType,
        HSTRING forwardHeader,
        HSTRING comment,
        __x_ABI_C__FIAsyncOperation_1_boolean** result);
    HRESULT (STDMETHODCALLTYPE* TryProposeNewTimeForMeetingAsync)(__x_ABI_CWindows_CApplicationModel_CEmail_CIEmailMailbox* This,
        __x_ABI_CWindows_CApplicationModel_CEmail_CIEmailMessage* meeting,
        struct __x_ABI_CWindows_CFoundation_CDateTime newStartTime,
        struct __x_ABI_CWindows_CFoundation_CTimeSpan newDuration,
        HSTRING subject,
        HSTRING comment,
        __x_ABI_C__FIAsyncOperation_1_boolean** result);
    HRESULT (STDMETHODCALLTYPE* add_MailboxChanged)(__x_ABI_CWindows_CApplicationModel_CEmail_CIEmailMailbox* This,
        __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CApplicationModel__CEmail__CEmailMailbox___x_ABI_CWindows__CApplicationModel__CEmail__CEmailMailboxChangedEventArgs* pHandler,
        EventRegistrationToken* pToken);
    HRESULT (STDMETHODCALLTYPE* remove_MailboxChanged)(__x_ABI_CWindows_CApplicationModel_CEmail_CIEmailMailbox* This,
        EventRegistrationToken token);
    HRESULT (STDMETHODCALLTYPE* SmartSendMessageAsync)(__x_ABI_CWindows_CApplicationModel_CEmail_CIEmailMailbox* This,
        __x_ABI_CWindows_CApplicationModel_CEmail_CIEmailMessage* message,
        boolean smartSend,
        __x_ABI_CWindows_CFoundation_CIAsyncAction** result);
    HRESULT (STDMETHODCALLTYPE* TrySetAutoReplySettingsAsync)(__x_ABI_CWindows_CApplicationModel_CEmail_CIEmailMailbox* This,
        __x_ABI_CWindows_CApplicationModel_CEmail_CIEmailMailboxAutoReplySettings* autoReplySettings,
        __x_ABI_C__FIAsyncOperation_1_boolean** result);
    HRESULT (STDMETHODCALLTYPE* TryGetAutoReplySettingsAsync)(__x_ABI_CWindows_CApplicationModel_CEmail_CIEmailMailbox* This,
        enum __x_ABI_CWindows_CApplicationModel_CEmail_CEmailMailboxAutoReplyMessageResponseKind requestedFormat,
        __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailMailboxAutoReplySettings** autoReplySettings);

        END_INTERFACE
    } __x_ABI_CWindows_CApplicationModel_CEmail_CIEmailMailboxVtbl;

    interface __x_ABI_CWindows_CApplicationModel_CEmail_CIEmailMailbox
    {
        CONST_VTBL struct __x_ABI_CWindows_CApplicationModel_CEmail_CIEmailMailboxVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CApplicationModel_CEmail_CIEmailMailbox;
#endif /* !defined(____x_ABI_CWindows_CApplicationModel_CEmail_CIEmailMailbox_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CApplicationModel_CEmail_CIEmailMailbox2_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CApplicationModel_CEmail_CIEmailMailbox2_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CApplicationModel_CEmail_CIEmailMailbox2Vtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CApplicationModel_CEmail_CIEmailMailbox2* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CApplicationModel_CEmail_CIEmailMailbox2* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CApplicationModel_CEmail_CIEmailMailbox2* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CApplicationModel_CEmail_CIEmailMailbox2* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CApplicationModel_CEmail_CIEmailMailbox2* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CApplicationModel_CEmail_CIEmailMailbox2* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_LinkedMailboxId)(__x_ABI_CWindows_CApplicationModel_CEmail_CIEmailMailbox2* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* get_NetworkAccountId)(__x_ABI_CWindows_CApplicationModel_CEmail_CIEmailMailbox2* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* get_NetworkId)(__x_ABI_CWindows_CApplicationModel_CEmail_CIEmailMailbox2* This,
        HSTRING* value);

        END_INTERFACE
    } __x_ABI_CWindows_CApplicationModel_CEmail_CIEmailMailbox2Vtbl;

    interface __x_ABI_CWindows_CApplicationModel_CEmail_CIEmailMailbox2
    {
        CONST_VTBL struct __x_ABI_CWindows_CApplicationModel_CEmail_CIEmailMailbox2Vtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CApplicationModel_CEmail_CIEmailMailbox2;
#endif /* !defined(____x_ABI_CWindows_CApplicationModel_CEmail_CIEmailMailbox2_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CApplicationModel_CEmail_CIEmailMailbox3_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CApplicationModel_CEmail_CIEmailMailbox3_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CApplicationModel_CEmail_CIEmailMailbox3Vtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CApplicationModel_CEmail_CIEmailMailbox3* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CApplicationModel_CEmail_CIEmailMailbox3* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CApplicationModel_CEmail_CIEmailMailbox3* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CApplicationModel_CEmail_CIEmailMailbox3* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CApplicationModel_CEmail_CIEmailMailbox3* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CApplicationModel_CEmail_CIEmailMailbox3* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* ResolveRecipientsAsync)(__x_ABI_CWindows_CApplicationModel_CEmail_CIEmailMailbox3* This,
        __x_ABI_C__FIIterable_1_HSTRING* recipients,
        __x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailRecipientResolutionResult** result);
    HRESULT (STDMETHODCALLTYPE* ValidateCertificatesAsync)(__x_ABI_CWindows_CApplicationModel_CEmail_CIEmailMailbox3* This,
        __x_ABI_C__FIIterable_1___x_ABI_CWindows__CSecurity__CCryptography__CCertificates__CCertificate* certificates,
        __x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailCertificateValidationStatus** result);
    HRESULT (STDMETHODCALLTYPE* TryEmptyFolderAsync)(__x_ABI_CWindows_CApplicationModel_CEmail_CIEmailMailbox3* This,
        HSTRING folderId,
        __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailMailboxEmptyFolderStatus** result);
    HRESULT (STDMETHODCALLTYPE* TryCreateFolderAsync)(__x_ABI_CWindows_CApplicationModel_CEmail_CIEmailMailbox3* This,
        HSTRING parentFolderId,
        HSTRING name,
        __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailMailboxCreateFolderResult** result);
    HRESULT (STDMETHODCALLTYPE* TryDeleteFolderAsync)(__x_ABI_CWindows_CApplicationModel_CEmail_CIEmailMailbox3* This,
        HSTRING folderId,
        __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailMailboxDeleteFolderStatus** result);

        END_INTERFACE
    } __x_ABI_CWindows_CApplicationModel_CEmail_CIEmailMailbox3Vtbl;

    interface __x_ABI_CWindows_CApplicationModel_CEmail_CIEmailMailbox3
    {
        CONST_VTBL struct __x_ABI_CWindows_CApplicationModel_CEmail_CIEmailMailbox3Vtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CApplicationModel_CEmail_CIEmailMailbox3;
#endif /* !defined(____x_ABI_CWindows_CApplicationModel_CEmail_CIEmailMailbox3_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CApplicationModel_CEmail_CIEmailMailbox4_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CApplicationModel_CEmail_CIEmailMailbox4_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CApplicationModel_CEmail_CIEmailMailbox4Vtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CApplicationModel_CEmail_CIEmailMailbox4* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CApplicationModel_CEmail_CIEmailMailbox4* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CApplicationModel_CEmail_CIEmailMailbox4* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CApplicationModel_CEmail_CIEmailMailbox4* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CApplicationModel_CEmail_CIEmailMailbox4* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CApplicationModel_CEmail_CIEmailMailbox4* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* RegisterSyncManagerAsync)(__x_ABI_CWindows_CApplicationModel_CEmail_CIEmailMailbox4* This,
        __x_ABI_CWindows_CFoundation_CIAsyncAction** result);

        END_INTERFACE
    } __x_ABI_CWindows_CApplicationModel_CEmail_CIEmailMailbox4Vtbl;

    interface __x_ABI_CWindows_CApplicationModel_CEmail_CIEmailMailbox4
    {
        CONST_VTBL struct __x_ABI_CWindows_CApplicationModel_CEmail_CIEmailMailbox4Vtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CApplicationModel_CEmail_CIEmailMailbox4;
#endif /* !defined(____x_ABI_CWindows_CApplicationModel_CEmail_CIEmailMailbox4_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CApplicationModel_CEmail_CIEmailMailbox5_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CApplicationModel_CEmail_CIEmailMailbox5_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CApplicationModel_CEmail_CIEmailMailbox5Vtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CApplicationModel_CEmail_CIEmailMailbox5* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CApplicationModel_CEmail_CIEmailMailbox5* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CApplicationModel_CEmail_CIEmailMailbox5* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CApplicationModel_CEmail_CIEmailMailbox5* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CApplicationModel_CEmail_CIEmailMailbox5* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CApplicationModel_CEmail_CIEmailMailbox5* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* GetChangeTracker)(__x_ABI_CWindows_CApplicationModel_CEmail_CIEmailMailbox5* This,
        HSTRING identity,
        __x_ABI_CWindows_CApplicationModel_CEmail_CIEmailMailboxChangeTracker** result);

        END_INTERFACE
    } __x_ABI_CWindows_CApplicationModel_CEmail_CIEmailMailbox5Vtbl;

    interface __x_ABI_CWindows_CApplicationModel_CEmail_CIEmailMailbox5
    {
        CONST_VTBL struct __x_ABI_CWindows_CApplicationModel_CEmail_CIEmailMailbox5Vtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CApplicationModel_CEmail_CIEmailMailbox5;
#endif /* !defined(____x_ABI_CWindows_CApplicationModel_CEmail_CIEmailMailbox5_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CApplicationModel_CEmail_CIEmailMailboxAction_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CApplicationModel_CEmail_CIEmailMailboxAction_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CApplicationModel_CEmail_CIEmailMailboxActionVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CApplicationModel_CEmail_CIEmailMailboxAction* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CApplicationModel_CEmail_CIEmailMailboxAction* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CApplicationModel_CEmail_CIEmailMailboxAction* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CApplicationModel_CEmail_CIEmailMailboxAction* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CApplicationModel_CEmail_CIEmailMailboxAction* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CApplicationModel_CEmail_CIEmailMailboxAction* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Kind)(__x_ABI_CWindows_CApplicationModel_CEmail_CIEmailMailboxAction* This,
        enum __x_ABI_CWindows_CApplicationModel_CEmail_CEmailMailboxActionKind* value);
    HRESULT (STDMETHODCALLTYPE* get_ChangeNumber)(__x_ABI_CWindows_CApplicationModel_CEmail_CIEmailMailboxAction* This,
        UINT64* value);

        END_INTERFACE
    } __x_ABI_CWindows_CApplicationModel_CEmail_CIEmailMailboxActionVtbl;

    interface __x_ABI_CWindows_CApplicationModel_CEmail_CIEmailMailboxAction
    {
        CONST_VTBL struct __x_ABI_CWindows_CApplicationModel_CEmail_CIEmailMailboxActionVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CApplicationModel_CEmail_CIEmailMailboxAction;
#endif /* !defined(____x_ABI_CWindows_CApplicationModel_CEmail_CIEmailMailboxAction_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CApplicationModel_CEmail_CIEmailMailboxAutoReply_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CApplicationModel_CEmail_CIEmailMailboxAutoReply_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CApplicationModel_CEmail_CIEmailMailboxAutoReplyVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CApplicationModel_CEmail_CIEmailMailboxAutoReply* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CApplicationModel_CEmail_CIEmailMailboxAutoReply* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CApplicationModel_CEmail_CIEmailMailboxAutoReply* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CApplicationModel_CEmail_CIEmailMailboxAutoReply* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CApplicationModel_CEmail_CIEmailMailboxAutoReply* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CApplicationModel_CEmail_CIEmailMailboxAutoReply* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_IsEnabled)(__x_ABI_CWindows_CApplicationModel_CEmail_CIEmailMailboxAutoReply* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* put_IsEnabled)(__x_ABI_CWindows_CApplicationModel_CEmail_CIEmailMailboxAutoReply* This,
        boolean value);
    HRESULT (STDMETHODCALLTYPE* get_Response)(__x_ABI_CWindows_CApplicationModel_CEmail_CIEmailMailboxAutoReply* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* put_Response)(__x_ABI_CWindows_CApplicationModel_CEmail_CIEmailMailboxAutoReply* This,
        HSTRING value);

        END_INTERFACE
    } __x_ABI_CWindows_CApplicationModel_CEmail_CIEmailMailboxAutoReplyVtbl;

    interface __x_ABI_CWindows_CApplicationModel_CEmail_CIEmailMailboxAutoReply
    {
        CONST_VTBL struct __x_ABI_CWindows_CApplicationModel_CEmail_CIEmailMailboxAutoReplyVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CApplicationModel_CEmail_CIEmailMailboxAutoReply;
#endif /* !defined(____x_ABI_CWindows_CApplicationModel_CEmail_CIEmailMailboxAutoReply_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CApplicationModel_CEmail_CIEmailMailboxAutoReplySettings_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CApplicationModel_CEmail_CIEmailMailboxAutoReplySettings_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CApplicationModel_CEmail_CIEmailMailboxAutoReplySettingsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CApplicationModel_CEmail_CIEmailMailboxAutoReplySettings* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CApplicationModel_CEmail_CIEmailMailboxAutoReplySettings* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CApplicationModel_CEmail_CIEmailMailboxAutoReplySettings* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CApplicationModel_CEmail_CIEmailMailboxAutoReplySettings* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CApplicationModel_CEmail_CIEmailMailboxAutoReplySettings* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CApplicationModel_CEmail_CIEmailMailboxAutoReplySettings* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_IsEnabled)(__x_ABI_CWindows_CApplicationModel_CEmail_CIEmailMailboxAutoReplySettings* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* put_IsEnabled)(__x_ABI_CWindows_CApplicationModel_CEmail_CIEmailMailboxAutoReplySettings* This,
        boolean value);
    HRESULT (STDMETHODCALLTYPE* get_ResponseKind)(__x_ABI_CWindows_CApplicationModel_CEmail_CIEmailMailboxAutoReplySettings* This,
        enum __x_ABI_CWindows_CApplicationModel_CEmail_CEmailMailboxAutoReplyMessageResponseKind* value);
    HRESULT (STDMETHODCALLTYPE* put_ResponseKind)(__x_ABI_CWindows_CApplicationModel_CEmail_CIEmailMailboxAutoReplySettings* This,
        enum __x_ABI_CWindows_CApplicationModel_CEmail_CEmailMailboxAutoReplyMessageResponseKind value);
    HRESULT (STDMETHODCALLTYPE* get_StartTime)(__x_ABI_CWindows_CApplicationModel_CEmail_CIEmailMailboxAutoReplySettings* This,
        __x_ABI_C__FIReference_1___x_ABI_CWindows__CFoundation__CDateTime** value);
    HRESULT (STDMETHODCALLTYPE* put_StartTime)(__x_ABI_CWindows_CApplicationModel_CEmail_CIEmailMailboxAutoReplySettings* This,
        __x_ABI_C__FIReference_1___x_ABI_CWindows__CFoundation__CDateTime* value);
    HRESULT (STDMETHODCALLTYPE* get_EndTime)(__x_ABI_CWindows_CApplicationModel_CEmail_CIEmailMailboxAutoReplySettings* This,
        __x_ABI_C__FIReference_1___x_ABI_CWindows__CFoundation__CDateTime** value);
    HRESULT (STDMETHODCALLTYPE* put_EndTime)(__x_ABI_CWindows_CApplicationModel_CEmail_CIEmailMailboxAutoReplySettings* This,
        __x_ABI_C__FIReference_1___x_ABI_CWindows__CFoundation__CDateTime* value);
    HRESULT (STDMETHODCALLTYPE* get_InternalReply)(__x_ABI_CWindows_CApplicationModel_CEmail_CIEmailMailboxAutoReplySettings* This,
        __x_ABI_CWindows_CApplicationModel_CEmail_CIEmailMailboxAutoReply** value);
    HRESULT (STDMETHODCALLTYPE* get_KnownExternalReply)(__x_ABI_CWindows_CApplicationModel_CEmail_CIEmailMailboxAutoReplySettings* This,
        __x_ABI_CWindows_CApplicationModel_CEmail_CIEmailMailboxAutoReply** value);
    HRESULT (STDMETHODCALLTYPE* get_UnknownExternalReply)(__x_ABI_CWindows_CApplicationModel_CEmail_CIEmailMailboxAutoReplySettings* This,
        __x_ABI_CWindows_CApplicationModel_CEmail_CIEmailMailboxAutoReply** value);

        END_INTERFACE
    } __x_ABI_CWindows_CApplicationModel_CEmail_CIEmailMailboxAutoReplySettingsVtbl;

    interface __x_ABI_CWindows_CApplicationModel_CEmail_CIEmailMailboxAutoReplySettings
    {
        CONST_VTBL struct __x_ABI_CWindows_CApplicationModel_CEmail_CIEmailMailboxAutoReplySettingsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CApplicationModel_CEmail_CIEmailMailboxAutoReplySettings;
#endif /* !defined(____x_ABI_CWindows_CApplicationModel_CEmail_CIEmailMailboxAutoReplySettings_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CApplicationModel_CEmail_CIEmailMailboxCapabilities_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CApplicationModel_CEmail_CIEmailMailboxCapabilities_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CApplicationModel_CEmail_CIEmailMailboxCapabilitiesVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CApplicationModel_CEmail_CIEmailMailboxCapabilities* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CApplicationModel_CEmail_CIEmailMailboxCapabilities* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CApplicationModel_CEmail_CIEmailMailboxCapabilities* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CApplicationModel_CEmail_CIEmailMailboxCapabilities* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CApplicationModel_CEmail_CIEmailMailboxCapabilities* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CApplicationModel_CEmail_CIEmailMailboxCapabilities* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_CanForwardMeetings)(__x_ABI_CWindows_CApplicationModel_CEmail_CIEmailMailboxCapabilities* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* get_CanGetAndSetExternalAutoReplies)(__x_ABI_CWindows_CApplicationModel_CEmail_CIEmailMailboxCapabilities* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* get_CanGetAndSetInternalAutoReplies)(__x_ABI_CWindows_CApplicationModel_CEmail_CIEmailMailboxCapabilities* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* get_CanUpdateMeetingResponses)(__x_ABI_CWindows_CApplicationModel_CEmail_CIEmailMailboxCapabilities* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* get_CanServerSearchFolders)(__x_ABI_CWindows_CApplicationModel_CEmail_CIEmailMailboxCapabilities* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* get_CanServerSearchMailbox)(__x_ABI_CWindows_CApplicationModel_CEmail_CIEmailMailboxCapabilities* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* get_CanProposeNewTimeForMeetings)(__x_ABI_CWindows_CApplicationModel_CEmail_CIEmailMailboxCapabilities* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* get_CanSmartSend)(__x_ABI_CWindows_CApplicationModel_CEmail_CIEmailMailboxCapabilities* This,
        boolean* value);

        END_INTERFACE
    } __x_ABI_CWindows_CApplicationModel_CEmail_CIEmailMailboxCapabilitiesVtbl;

    interface __x_ABI_CWindows_CApplicationModel_CEmail_CIEmailMailboxCapabilities
    {
        CONST_VTBL struct __x_ABI_CWindows_CApplicationModel_CEmail_CIEmailMailboxCapabilitiesVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CApplicationModel_CEmail_CIEmailMailboxCapabilities;
#endif /* !defined(____x_ABI_CWindows_CApplicationModel_CEmail_CIEmailMailboxCapabilities_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CApplicationModel_CEmail_CIEmailMailboxCapabilities2_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CApplicationModel_CEmail_CIEmailMailboxCapabilities2_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CApplicationModel_CEmail_CIEmailMailboxCapabilities2Vtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CApplicationModel_CEmail_CIEmailMailboxCapabilities2* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CApplicationModel_CEmail_CIEmailMailboxCapabilities2* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CApplicationModel_CEmail_CIEmailMailboxCapabilities2* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CApplicationModel_CEmail_CIEmailMailboxCapabilities2* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CApplicationModel_CEmail_CIEmailMailboxCapabilities2* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CApplicationModel_CEmail_CIEmailMailboxCapabilities2* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_CanResolveRecipients)(__x_ABI_CWindows_CApplicationModel_CEmail_CIEmailMailboxCapabilities2* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* get_CanValidateCertificates)(__x_ABI_CWindows_CApplicationModel_CEmail_CIEmailMailboxCapabilities2* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* get_CanEmptyFolder)(__x_ABI_CWindows_CApplicationModel_CEmail_CIEmailMailboxCapabilities2* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* get_CanCreateFolder)(__x_ABI_CWindows_CApplicationModel_CEmail_CIEmailMailboxCapabilities2* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* get_CanDeleteFolder)(__x_ABI_CWindows_CApplicationModel_CEmail_CIEmailMailboxCapabilities2* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* get_CanMoveFolder)(__x_ABI_CWindows_CApplicationModel_CEmail_CIEmailMailboxCapabilities2* This,
        boolean* value);

        END_INTERFACE
    } __x_ABI_CWindows_CApplicationModel_CEmail_CIEmailMailboxCapabilities2Vtbl;

    interface __x_ABI_CWindows_CApplicationModel_CEmail_CIEmailMailboxCapabilities2
    {
        CONST_VTBL struct __x_ABI_CWindows_CApplicationModel_CEmail_CIEmailMailboxCapabilities2Vtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CApplicationModel_CEmail_CIEmailMailboxCapabilities2;
#endif /* !defined(____x_ABI_CWindows_CApplicationModel_CEmail_CIEmailMailboxCapabilities2_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CApplicationModel_CEmail_CIEmailMailboxCapabilities3_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CApplicationModel_CEmail_CIEmailMailboxCapabilities3_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CApplicationModel_CEmail_CIEmailMailboxCapabilities3Vtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CApplicationModel_CEmail_CIEmailMailboxCapabilities3* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CApplicationModel_CEmail_CIEmailMailboxCapabilities3* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CApplicationModel_CEmail_CIEmailMailboxCapabilities3* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CApplicationModel_CEmail_CIEmailMailboxCapabilities3* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CApplicationModel_CEmail_CIEmailMailboxCapabilities3* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CApplicationModel_CEmail_CIEmailMailboxCapabilities3* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* put_CanForwardMeetings)(__x_ABI_CWindows_CApplicationModel_CEmail_CIEmailMailboxCapabilities3* This,
        boolean value);
    HRESULT (STDMETHODCALLTYPE* put_CanGetAndSetExternalAutoReplies)(__x_ABI_CWindows_CApplicationModel_CEmail_CIEmailMailboxCapabilities3* This,
        boolean value);
    HRESULT (STDMETHODCALLTYPE* put_CanGetAndSetInternalAutoReplies)(__x_ABI_CWindows_CApplicationModel_CEmail_CIEmailMailboxCapabilities3* This,
        boolean value);
    HRESULT (STDMETHODCALLTYPE* put_CanUpdateMeetingResponses)(__x_ABI_CWindows_CApplicationModel_CEmail_CIEmailMailboxCapabilities3* This,
        boolean value);
    HRESULT (STDMETHODCALLTYPE* put_CanServerSearchFolders)(__x_ABI_CWindows_CApplicationModel_CEmail_CIEmailMailboxCapabilities3* This,
        boolean value);
    HRESULT (STDMETHODCALLTYPE* put_CanServerSearchMailbox)(__x_ABI_CWindows_CApplicationModel_CEmail_CIEmailMailboxCapabilities3* This,
        boolean value);
    HRESULT (STDMETHODCALLTYPE* put_CanProposeNewTimeForMeetings)(__x_ABI_CWindows_CApplicationModel_CEmail_CIEmailMailboxCapabilities3* This,
        boolean value);
    HRESULT (STDMETHODCALLTYPE* put_CanSmartSend)(__x_ABI_CWindows_CApplicationModel_CEmail_CIEmailMailboxCapabilities3* This,
        boolean value);
    HRESULT (STDMETHODCALLTYPE* put_CanResolveRecipients)(__x_ABI_CWindows_CApplicationModel_CEmail_CIEmailMailboxCapabilities3* This,
        boolean value);
    HRESULT (STDMETHODCALLTYPE* put_CanValidateCertificates)(__x_ABI_CWindows_CApplicationModel_CEmail_CIEmailMailboxCapabilities3* This,
        boolean value);
    HRESULT (STDMETHODCALLTYPE* put_CanEmptyFolder)(__x_ABI_CWindows_CApplicationModel_CEmail_CIEmailMailboxCapabilities3* This,
        boolean value);
    HRESULT (STDMETHODCALLTYPE* put_CanCreateFolder)(__x_ABI_CWindows_CApplicationModel_CEmail_CIEmailMailboxCapabilities3* This,
        boolean value);
    HRESULT (STDMETHODCALLTYPE* put_CanDeleteFolder)(__x_ABI_CWindows_CApplicationModel_CEmail_CIEmailMailboxCapabilities3* This,
        boolean value);
    HRESULT (STDMETHODCALLTYPE* put_CanMoveFolder)(__x_ABI_CWindows_CApplicationModel_CEmail_CIEmailMailboxCapabilities3* This,
        boolean value);

        END_INTERFACE
    } __x_ABI_CWindows_CApplicationModel_CEmail_CIEmailMailboxCapabilities3Vtbl;

    interface __x_ABI_CWindows_CApplicationModel_CEmail_CIEmailMailboxCapabilities3
    {
        CONST_VTBL struct __x_ABI_CWindows_CApplicationModel_CEmail_CIEmailMailboxCapabilities3Vtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CApplicationModel_CEmail_CIEmailMailboxCapabilities3;
#endif /* !defined(____x_ABI_CWindows_CApplicationModel_CEmail_CIEmailMailboxCapabilities3_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CApplicationModel_CEmail_CIEmailMailboxChange_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CApplicationModel_CEmail_CIEmailMailboxChange_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CApplicationModel_CEmail_CIEmailMailboxChangeVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CApplicationModel_CEmail_CIEmailMailboxChange* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CApplicationModel_CEmail_CIEmailMailboxChange* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CApplicationModel_CEmail_CIEmailMailboxChange* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CApplicationModel_CEmail_CIEmailMailboxChange* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CApplicationModel_CEmail_CIEmailMailboxChange* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CApplicationModel_CEmail_CIEmailMailboxChange* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_ChangeType)(__x_ABI_CWindows_CApplicationModel_CEmail_CIEmailMailboxChange* This,
        enum __x_ABI_CWindows_CApplicationModel_CEmail_CEmailMailboxChangeType* value);
    HRESULT (STDMETHODCALLTYPE* get_MailboxActions)(__x_ABI_CWindows_CApplicationModel_CEmail_CIEmailMailboxChange* This,
        __x_ABI_C__FIVector_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailMailboxAction** value);
    HRESULT (STDMETHODCALLTYPE* get_Message)(__x_ABI_CWindows_CApplicationModel_CEmail_CIEmailMailboxChange* This,
        __x_ABI_CWindows_CApplicationModel_CEmail_CIEmailMessage** value);
    HRESULT (STDMETHODCALLTYPE* get_Folder)(__x_ABI_CWindows_CApplicationModel_CEmail_CIEmailMailboxChange* This,
        __x_ABI_CWindows_CApplicationModel_CEmail_CIEmailFolder** value);

        END_INTERFACE
    } __x_ABI_CWindows_CApplicationModel_CEmail_CIEmailMailboxChangeVtbl;

    interface __x_ABI_CWindows_CApplicationModel_CEmail_CIEmailMailboxChange
    {
        CONST_VTBL struct __x_ABI_CWindows_CApplicationModel_CEmail_CIEmailMailboxChangeVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CApplicationModel_CEmail_CIEmailMailboxChange;
#endif /* !defined(____x_ABI_CWindows_CApplicationModel_CEmail_CIEmailMailboxChange_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CApplicationModel_CEmail_CIEmailMailboxChangeReader_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CApplicationModel_CEmail_CIEmailMailboxChangeReader_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CApplicationModel_CEmail_CIEmailMailboxChangeReaderVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CApplicationModel_CEmail_CIEmailMailboxChangeReader* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CApplicationModel_CEmail_CIEmailMailboxChangeReader* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CApplicationModel_CEmail_CIEmailMailboxChangeReader* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CApplicationModel_CEmail_CIEmailMailboxChangeReader* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CApplicationModel_CEmail_CIEmailMailboxChangeReader* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CApplicationModel_CEmail_CIEmailMailboxChangeReader* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* AcceptChanges)(__x_ABI_CWindows_CApplicationModel_CEmail_CIEmailMailboxChangeReader* This);
    HRESULT (STDMETHODCALLTYPE* AcceptChangesThrough)(__x_ABI_CWindows_CApplicationModel_CEmail_CIEmailMailboxChangeReader* This,
        __x_ABI_CWindows_CApplicationModel_CEmail_CIEmailMailboxChange* lastChangeToAcknowledge);
    HRESULT (STDMETHODCALLTYPE* ReadBatchAsync)(__x_ABI_CWindows_CApplicationModel_CEmail_CIEmailMailboxChangeReader* This,
        __x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailMailboxChange** value);

        END_INTERFACE
    } __x_ABI_CWindows_CApplicationModel_CEmail_CIEmailMailboxChangeReaderVtbl;

    interface __x_ABI_CWindows_CApplicationModel_CEmail_CIEmailMailboxChangeReader
    {
        CONST_VTBL struct __x_ABI_CWindows_CApplicationModel_CEmail_CIEmailMailboxChangeReaderVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CApplicationModel_CEmail_CIEmailMailboxChangeReader;
#endif /* !defined(____x_ABI_CWindows_CApplicationModel_CEmail_CIEmailMailboxChangeReader_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CApplicationModel_CEmail_CIEmailMailboxChangeTracker_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CApplicationModel_CEmail_CIEmailMailboxChangeTracker_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CApplicationModel_CEmail_CIEmailMailboxChangeTrackerVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CApplicationModel_CEmail_CIEmailMailboxChangeTracker* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CApplicationModel_CEmail_CIEmailMailboxChangeTracker* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CApplicationModel_CEmail_CIEmailMailboxChangeTracker* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CApplicationModel_CEmail_CIEmailMailboxChangeTracker* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CApplicationModel_CEmail_CIEmailMailboxChangeTracker* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CApplicationModel_CEmail_CIEmailMailboxChangeTracker* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_IsTracking)(__x_ABI_CWindows_CApplicationModel_CEmail_CIEmailMailboxChangeTracker* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* Enable)(__x_ABI_CWindows_CApplicationModel_CEmail_CIEmailMailboxChangeTracker* This);
    HRESULT (STDMETHODCALLTYPE* GetChangeReader)(__x_ABI_CWindows_CApplicationModel_CEmail_CIEmailMailboxChangeTracker* This,
        __x_ABI_CWindows_CApplicationModel_CEmail_CIEmailMailboxChangeReader** value);
    HRESULT (STDMETHODCALLTYPE* Reset)(__x_ABI_CWindows_CApplicationModel_CEmail_CIEmailMailboxChangeTracker* This);

        END_INTERFACE
    } __x_ABI_CWindows_CApplicationModel_CEmail_CIEmailMailboxChangeTrackerVtbl;

    interface __x_ABI_CWindows_CApplicationModel_CEmail_CIEmailMailboxChangeTracker
    {
        CONST_VTBL struct __x_ABI_CWindows_CApplicationModel_CEmail_CIEmailMailboxChangeTrackerVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CApplicationModel_CEmail_CIEmailMailboxChangeTracker;
#endif /* !defined(____x_ABI_CWindows_CApplicationModel_CEmail_CIEmailMailboxChangeTracker_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CApplicationModel_CEmail_CIEmailMailboxChangedDeferral_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CApplicationModel_CEmail_CIEmailMailboxChangedDeferral_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CApplicationModel_CEmail_CIEmailMailboxChangedDeferralVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CApplicationModel_CEmail_CIEmailMailboxChangedDeferral* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CApplicationModel_CEmail_CIEmailMailboxChangedDeferral* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CApplicationModel_CEmail_CIEmailMailboxChangedDeferral* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CApplicationModel_CEmail_CIEmailMailboxChangedDeferral* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CApplicationModel_CEmail_CIEmailMailboxChangedDeferral* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CApplicationModel_CEmail_CIEmailMailboxChangedDeferral* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* Complete)(__x_ABI_CWindows_CApplicationModel_CEmail_CIEmailMailboxChangedDeferral* This);

        END_INTERFACE
    } __x_ABI_CWindows_CApplicationModel_CEmail_CIEmailMailboxChangedDeferralVtbl;

    interface __x_ABI_CWindows_CApplicationModel_CEmail_CIEmailMailboxChangedDeferral
    {
        CONST_VTBL struct __x_ABI_CWindows_CApplicationModel_CEmail_CIEmailMailboxChangedDeferralVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CApplicationModel_CEmail_CIEmailMailboxChangedDeferral;
#endif /* !defined(____x_ABI_CWindows_CApplicationModel_CEmail_CIEmailMailboxChangedDeferral_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CApplicationModel_CEmail_CIEmailMailboxChangedEventArgs_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CApplicationModel_CEmail_CIEmailMailboxChangedEventArgs_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CApplicationModel_CEmail_CIEmailMailboxChangedEventArgsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CApplicationModel_CEmail_CIEmailMailboxChangedEventArgs* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CApplicationModel_CEmail_CIEmailMailboxChangedEventArgs* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CApplicationModel_CEmail_CIEmailMailboxChangedEventArgs* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CApplicationModel_CEmail_CIEmailMailboxChangedEventArgs* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CApplicationModel_CEmail_CIEmailMailboxChangedEventArgs* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CApplicationModel_CEmail_CIEmailMailboxChangedEventArgs* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* GetDeferral)(__x_ABI_CWindows_CApplicationModel_CEmail_CIEmailMailboxChangedEventArgs* This,
        __x_ABI_CWindows_CApplicationModel_CEmail_CIEmailMailboxChangedDeferral** result);

        END_INTERFACE
    } __x_ABI_CWindows_CApplicationModel_CEmail_CIEmailMailboxChangedEventArgsVtbl;

    interface __x_ABI_CWindows_CApplicationModel_CEmail_CIEmailMailboxChangedEventArgs
    {
        CONST_VTBL struct __x_ABI_CWindows_CApplicationModel_CEmail_CIEmailMailboxChangedEventArgsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CApplicationModel_CEmail_CIEmailMailboxChangedEventArgs;
#endif /* !defined(____x_ABI_CWindows_CApplicationModel_CEmail_CIEmailMailboxChangedEventArgs_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CApplicationModel_CEmail_CIEmailMailboxCreateFolderResult_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CApplicationModel_CEmail_CIEmailMailboxCreateFolderResult_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CApplicationModel_CEmail_CIEmailMailboxCreateFolderResultVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CApplicationModel_CEmail_CIEmailMailboxCreateFolderResult* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CApplicationModel_CEmail_CIEmailMailboxCreateFolderResult* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CApplicationModel_CEmail_CIEmailMailboxCreateFolderResult* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CApplicationModel_CEmail_CIEmailMailboxCreateFolderResult* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CApplicationModel_CEmail_CIEmailMailboxCreateFolderResult* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CApplicationModel_CEmail_CIEmailMailboxCreateFolderResult* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Status)(__x_ABI_CWindows_CApplicationModel_CEmail_CIEmailMailboxCreateFolderResult* This,
        enum __x_ABI_CWindows_CApplicationModel_CEmail_CEmailMailboxCreateFolderStatus* value);
    HRESULT (STDMETHODCALLTYPE* get_Folder)(__x_ABI_CWindows_CApplicationModel_CEmail_CIEmailMailboxCreateFolderResult* This,
        __x_ABI_CWindows_CApplicationModel_CEmail_CIEmailFolder** value);

        END_INTERFACE
    } __x_ABI_CWindows_CApplicationModel_CEmail_CIEmailMailboxCreateFolderResultVtbl;

    interface __x_ABI_CWindows_CApplicationModel_CEmail_CIEmailMailboxCreateFolderResult
    {
        CONST_VTBL struct __x_ABI_CWindows_CApplicationModel_CEmail_CIEmailMailboxCreateFolderResultVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CApplicationModel_CEmail_CIEmailMailboxCreateFolderResult;
#endif /* !defined(____x_ABI_CWindows_CApplicationModel_CEmail_CIEmailMailboxCreateFolderResult_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CApplicationModel_CEmail_CIEmailMailboxPolicies_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CApplicationModel_CEmail_CIEmailMailboxPolicies_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CApplicationModel_CEmail_CIEmailMailboxPoliciesVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CApplicationModel_CEmail_CIEmailMailboxPolicies* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CApplicationModel_CEmail_CIEmailMailboxPolicies* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CApplicationModel_CEmail_CIEmailMailboxPolicies* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CApplicationModel_CEmail_CIEmailMailboxPolicies* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CApplicationModel_CEmail_CIEmailMailboxPolicies* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CApplicationModel_CEmail_CIEmailMailboxPolicies* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_AllowedSmimeEncryptionAlgorithmNegotiation)(__x_ABI_CWindows_CApplicationModel_CEmail_CIEmailMailboxPolicies* This,
        enum __x_ABI_CWindows_CApplicationModel_CEmail_CEmailMailboxAllowedSmimeEncryptionAlgorithmNegotiation* value);
    HRESULT (STDMETHODCALLTYPE* get_AllowSmimeSoftCertificates)(__x_ABI_CWindows_CApplicationModel_CEmail_CIEmailMailboxPolicies* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* get_RequiredSmimeEncryptionAlgorithm)(__x_ABI_CWindows_CApplicationModel_CEmail_CIEmailMailboxPolicies* This,
        __x_ABI_C__FIReference_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailMailboxSmimeEncryptionAlgorithm** value);
    HRESULT (STDMETHODCALLTYPE* get_RequiredSmimeSigningAlgorithm)(__x_ABI_CWindows_CApplicationModel_CEmail_CIEmailMailboxPolicies* This,
        __x_ABI_C__FIReference_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailMailboxSmimeSigningAlgorithm** value);

        END_INTERFACE
    } __x_ABI_CWindows_CApplicationModel_CEmail_CIEmailMailboxPoliciesVtbl;

    interface __x_ABI_CWindows_CApplicationModel_CEmail_CIEmailMailboxPolicies
    {
        CONST_VTBL struct __x_ABI_CWindows_CApplicationModel_CEmail_CIEmailMailboxPoliciesVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CApplicationModel_CEmail_CIEmailMailboxPolicies;
#endif /* !defined(____x_ABI_CWindows_CApplicationModel_CEmail_CIEmailMailboxPolicies_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CApplicationModel_CEmail_CIEmailMailboxPolicies2_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CApplicationModel_CEmail_CIEmailMailboxPolicies2_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CApplicationModel_CEmail_CIEmailMailboxPolicies2Vtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CApplicationModel_CEmail_CIEmailMailboxPolicies2* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CApplicationModel_CEmail_CIEmailMailboxPolicies2* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CApplicationModel_CEmail_CIEmailMailboxPolicies2* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CApplicationModel_CEmail_CIEmailMailboxPolicies2* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CApplicationModel_CEmail_CIEmailMailboxPolicies2* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CApplicationModel_CEmail_CIEmailMailboxPolicies2* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_MustEncryptSmimeMessages)(__x_ABI_CWindows_CApplicationModel_CEmail_CIEmailMailboxPolicies2* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* get_MustSignSmimeMessages)(__x_ABI_CWindows_CApplicationModel_CEmail_CIEmailMailboxPolicies2* This,
        boolean* value);

        END_INTERFACE
    } __x_ABI_CWindows_CApplicationModel_CEmail_CIEmailMailboxPolicies2Vtbl;

    interface __x_ABI_CWindows_CApplicationModel_CEmail_CIEmailMailboxPolicies2
    {
        CONST_VTBL struct __x_ABI_CWindows_CApplicationModel_CEmail_CIEmailMailboxPolicies2Vtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CApplicationModel_CEmail_CIEmailMailboxPolicies2;
#endif /* !defined(____x_ABI_CWindows_CApplicationModel_CEmail_CIEmailMailboxPolicies2_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CApplicationModel_CEmail_CIEmailMailboxPolicies3_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CApplicationModel_CEmail_CIEmailMailboxPolicies3_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CApplicationModel_CEmail_CIEmailMailboxPolicies3Vtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CApplicationModel_CEmail_CIEmailMailboxPolicies3* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CApplicationModel_CEmail_CIEmailMailboxPolicies3* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CApplicationModel_CEmail_CIEmailMailboxPolicies3* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CApplicationModel_CEmail_CIEmailMailboxPolicies3* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CApplicationModel_CEmail_CIEmailMailboxPolicies3* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CApplicationModel_CEmail_CIEmailMailboxPolicies3* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* put_AllowedSmimeEncryptionAlgorithmNegotiation)(__x_ABI_CWindows_CApplicationModel_CEmail_CIEmailMailboxPolicies3* This,
        enum __x_ABI_CWindows_CApplicationModel_CEmail_CEmailMailboxAllowedSmimeEncryptionAlgorithmNegotiation value);
    HRESULT (STDMETHODCALLTYPE* put_AllowSmimeSoftCertificates)(__x_ABI_CWindows_CApplicationModel_CEmail_CIEmailMailboxPolicies3* This,
        boolean value);
    HRESULT (STDMETHODCALLTYPE* put_RequiredSmimeEncryptionAlgorithm)(__x_ABI_CWindows_CApplicationModel_CEmail_CIEmailMailboxPolicies3* This,
        __x_ABI_C__FIReference_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailMailboxSmimeEncryptionAlgorithm* value);
    HRESULT (STDMETHODCALLTYPE* put_RequiredSmimeSigningAlgorithm)(__x_ABI_CWindows_CApplicationModel_CEmail_CIEmailMailboxPolicies3* This,
        __x_ABI_C__FIReference_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailMailboxSmimeSigningAlgorithm* value);
    HRESULT (STDMETHODCALLTYPE* put_MustEncryptSmimeMessages)(__x_ABI_CWindows_CApplicationModel_CEmail_CIEmailMailboxPolicies3* This,
        boolean value);
    HRESULT (STDMETHODCALLTYPE* put_MustSignSmimeMessages)(__x_ABI_CWindows_CApplicationModel_CEmail_CIEmailMailboxPolicies3* This,
        boolean value);

        END_INTERFACE
    } __x_ABI_CWindows_CApplicationModel_CEmail_CIEmailMailboxPolicies3Vtbl;

    interface __x_ABI_CWindows_CApplicationModel_CEmail_CIEmailMailboxPolicies3
    {
        CONST_VTBL struct __x_ABI_CWindows_CApplicationModel_CEmail_CIEmailMailboxPolicies3Vtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CApplicationModel_CEmail_CIEmailMailboxPolicies3;
#endif /* !defined(____x_ABI_CWindows_CApplicationModel_CEmail_CIEmailMailboxPolicies3_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CApplicationModel_CEmail_CIEmailMailboxSyncManager_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CApplicationModel_CEmail_CIEmailMailboxSyncManager_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CApplicationModel_CEmail_CIEmailMailboxSyncManagerVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CApplicationModel_CEmail_CIEmailMailboxSyncManager* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CApplicationModel_CEmail_CIEmailMailboxSyncManager* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CApplicationModel_CEmail_CIEmailMailboxSyncManager* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CApplicationModel_CEmail_CIEmailMailboxSyncManager* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CApplicationModel_CEmail_CIEmailMailboxSyncManager* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CApplicationModel_CEmail_CIEmailMailboxSyncManager* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Status)(__x_ABI_CWindows_CApplicationModel_CEmail_CIEmailMailboxSyncManager* This,
        enum __x_ABI_CWindows_CApplicationModel_CEmail_CEmailMailboxSyncStatus* value);
    HRESULT (STDMETHODCALLTYPE* get_LastSuccessfulSyncTime)(__x_ABI_CWindows_CApplicationModel_CEmail_CIEmailMailboxSyncManager* This,
        struct __x_ABI_CWindows_CFoundation_CDateTime* value);
    HRESULT (STDMETHODCALLTYPE* get_LastAttemptedSyncTime)(__x_ABI_CWindows_CApplicationModel_CEmail_CIEmailMailboxSyncManager* This,
        struct __x_ABI_CWindows_CFoundation_CDateTime* value);
    HRESULT (STDMETHODCALLTYPE* SyncAsync)(__x_ABI_CWindows_CApplicationModel_CEmail_CIEmailMailboxSyncManager* This,
        __x_ABI_C__FIAsyncOperation_1_boolean** result);
    HRESULT (STDMETHODCALLTYPE* add_SyncStatusChanged)(__x_ABI_CWindows_CApplicationModel_CEmail_CIEmailMailboxSyncManager* This,
        __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CApplicationModel__CEmail__CEmailMailboxSyncManager_IInspectable* handler,
        EventRegistrationToken* token);
    HRESULT (STDMETHODCALLTYPE* remove_SyncStatusChanged)(__x_ABI_CWindows_CApplicationModel_CEmail_CIEmailMailboxSyncManager* This,
        EventRegistrationToken token);

        END_INTERFACE
    } __x_ABI_CWindows_CApplicationModel_CEmail_CIEmailMailboxSyncManagerVtbl;

    interface __x_ABI_CWindows_CApplicationModel_CEmail_CIEmailMailboxSyncManager
    {
        CONST_VTBL struct __x_ABI_CWindows_CApplicationModel_CEmail_CIEmailMailboxSyncManagerVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CApplicationModel_CEmail_CIEmailMailboxSyncManager;
#endif /* !defined(____x_ABI_CWindows_CApplicationModel_CEmail_CIEmailMailboxSyncManager_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CApplicationModel_CEmail_CIEmailMailboxSyncManager2_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CApplicationModel_CEmail_CIEmailMailboxSyncManager2_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CApplicationModel_CEmail_CIEmailMailboxSyncManager2Vtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CApplicationModel_CEmail_CIEmailMailboxSyncManager2* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CApplicationModel_CEmail_CIEmailMailboxSyncManager2* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CApplicationModel_CEmail_CIEmailMailboxSyncManager2* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CApplicationModel_CEmail_CIEmailMailboxSyncManager2* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CApplicationModel_CEmail_CIEmailMailboxSyncManager2* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CApplicationModel_CEmail_CIEmailMailboxSyncManager2* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* put_Status)(__x_ABI_CWindows_CApplicationModel_CEmail_CIEmailMailboxSyncManager2* This,
        enum __x_ABI_CWindows_CApplicationModel_CEmail_CEmailMailboxSyncStatus value);
    HRESULT (STDMETHODCALLTYPE* put_LastSuccessfulSyncTime)(__x_ABI_CWindows_CApplicationModel_CEmail_CIEmailMailboxSyncManager2* This,
        struct __x_ABI_CWindows_CFoundation_CDateTime value);
    HRESULT (STDMETHODCALLTYPE* put_LastAttemptedSyncTime)(__x_ABI_CWindows_CApplicationModel_CEmail_CIEmailMailboxSyncManager2* This,
        struct __x_ABI_CWindows_CFoundation_CDateTime value);

        END_INTERFACE
    } __x_ABI_CWindows_CApplicationModel_CEmail_CIEmailMailboxSyncManager2Vtbl;

    interface __x_ABI_CWindows_CApplicationModel_CEmail_CIEmailMailboxSyncManager2
    {
        CONST_VTBL struct __x_ABI_CWindows_CApplicationModel_CEmail_CIEmailMailboxSyncManager2Vtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CApplicationModel_CEmail_CIEmailMailboxSyncManager2;
#endif /* !defined(____x_ABI_CWindows_CApplicationModel_CEmail_CIEmailMailboxSyncManager2_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CApplicationModel_CEmail_CIEmailManagerForUser_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CApplicationModel_CEmail_CIEmailManagerForUser_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CApplicationModel_CEmail_CIEmailManagerForUserVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CApplicationModel_CEmail_CIEmailManagerForUser* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CApplicationModel_CEmail_CIEmailManagerForUser* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CApplicationModel_CEmail_CIEmailManagerForUser* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CApplicationModel_CEmail_CIEmailManagerForUser* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CApplicationModel_CEmail_CIEmailManagerForUser* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CApplicationModel_CEmail_CIEmailManagerForUser* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* ShowComposeNewEmailAsync)(__x_ABI_CWindows_CApplicationModel_CEmail_CIEmailManagerForUser* This,
        __x_ABI_CWindows_CApplicationModel_CEmail_CIEmailMessage* message,
        __x_ABI_CWindows_CFoundation_CIAsyncAction** result);
    HRESULT (STDMETHODCALLTYPE* RequestStoreAsync)(__x_ABI_CWindows_CApplicationModel_CEmail_CIEmailManagerForUser* This,
        enum __x_ABI_CWindows_CApplicationModel_CEmail_CEmailStoreAccessType accessType,
        __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailStore** result);
    HRESULT (STDMETHODCALLTYPE* get_User)(__x_ABI_CWindows_CApplicationModel_CEmail_CIEmailManagerForUser* This,
        __x_ABI_CWindows_CSystem_CIUser** value);

        END_INTERFACE
    } __x_ABI_CWindows_CApplicationModel_CEmail_CIEmailManagerForUserVtbl;

    interface __x_ABI_CWindows_CApplicationModel_CEmail_CIEmailManagerForUser
    {
        CONST_VTBL struct __x_ABI_CWindows_CApplicationModel_CEmail_CIEmailManagerForUserVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CApplicationModel_CEmail_CIEmailManagerForUser;
#endif /* !defined(____x_ABI_CWindows_CApplicationModel_CEmail_CIEmailManagerForUser_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CApplicationModel_CEmail_CIEmailManagerStatics_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CApplicationModel_CEmail_CIEmailManagerStatics_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CApplicationModel_CEmail_CIEmailManagerStaticsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CApplicationModel_CEmail_CIEmailManagerStatics* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CApplicationModel_CEmail_CIEmailManagerStatics* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CApplicationModel_CEmail_CIEmailManagerStatics* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CApplicationModel_CEmail_CIEmailManagerStatics* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CApplicationModel_CEmail_CIEmailManagerStatics* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CApplicationModel_CEmail_CIEmailManagerStatics* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* ShowComposeNewEmailAsync)(__x_ABI_CWindows_CApplicationModel_CEmail_CIEmailManagerStatics* This,
        __x_ABI_CWindows_CApplicationModel_CEmail_CIEmailMessage* message,
        __x_ABI_CWindows_CFoundation_CIAsyncAction** asyncAction);

        END_INTERFACE
    } __x_ABI_CWindows_CApplicationModel_CEmail_CIEmailManagerStaticsVtbl;

    interface __x_ABI_CWindows_CApplicationModel_CEmail_CIEmailManagerStatics
    {
        CONST_VTBL struct __x_ABI_CWindows_CApplicationModel_CEmail_CIEmailManagerStaticsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CApplicationModel_CEmail_CIEmailManagerStatics;
#endif /* !defined(____x_ABI_CWindows_CApplicationModel_CEmail_CIEmailManagerStatics_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CApplicationModel_CEmail_CIEmailManagerStatics2_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CApplicationModel_CEmail_CIEmailManagerStatics2_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CApplicationModel_CEmail_CIEmailManagerStatics2Vtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CApplicationModel_CEmail_CIEmailManagerStatics2* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CApplicationModel_CEmail_CIEmailManagerStatics2* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CApplicationModel_CEmail_CIEmailManagerStatics2* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CApplicationModel_CEmail_CIEmailManagerStatics2* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CApplicationModel_CEmail_CIEmailManagerStatics2* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CApplicationModel_CEmail_CIEmailManagerStatics2* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* RequestStoreAsync)(__x_ABI_CWindows_CApplicationModel_CEmail_CIEmailManagerStatics2* This,
        enum __x_ABI_CWindows_CApplicationModel_CEmail_CEmailStoreAccessType accessType,
        __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailStore** result);

        END_INTERFACE
    } __x_ABI_CWindows_CApplicationModel_CEmail_CIEmailManagerStatics2Vtbl;

    interface __x_ABI_CWindows_CApplicationModel_CEmail_CIEmailManagerStatics2
    {
        CONST_VTBL struct __x_ABI_CWindows_CApplicationModel_CEmail_CIEmailManagerStatics2Vtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CApplicationModel_CEmail_CIEmailManagerStatics2;
#endif /* !defined(____x_ABI_CWindows_CApplicationModel_CEmail_CIEmailManagerStatics2_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CApplicationModel_CEmail_CIEmailManagerStatics3_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CApplicationModel_CEmail_CIEmailManagerStatics3_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CApplicationModel_CEmail_CIEmailManagerStatics3Vtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CApplicationModel_CEmail_CIEmailManagerStatics3* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CApplicationModel_CEmail_CIEmailManagerStatics3* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CApplicationModel_CEmail_CIEmailManagerStatics3* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CApplicationModel_CEmail_CIEmailManagerStatics3* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CApplicationModel_CEmail_CIEmailManagerStatics3* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CApplicationModel_CEmail_CIEmailManagerStatics3* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* GetForUser)(__x_ABI_CWindows_CApplicationModel_CEmail_CIEmailManagerStatics3* This,
        __x_ABI_CWindows_CSystem_CIUser* user,
        __x_ABI_CWindows_CApplicationModel_CEmail_CIEmailManagerForUser** result);

        END_INTERFACE
    } __x_ABI_CWindows_CApplicationModel_CEmail_CIEmailManagerStatics3Vtbl;

    interface __x_ABI_CWindows_CApplicationModel_CEmail_CIEmailManagerStatics3
    {
        CONST_VTBL struct __x_ABI_CWindows_CApplicationModel_CEmail_CIEmailManagerStatics3Vtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CApplicationModel_CEmail_CIEmailManagerStatics3;
#endif /* !defined(____x_ABI_CWindows_CApplicationModel_CEmail_CIEmailManagerStatics3_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CApplicationModel_CEmail_CIEmailMeetingInfo_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CApplicationModel_CEmail_CIEmailMeetingInfo_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CApplicationModel_CEmail_CIEmailMeetingInfoVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CApplicationModel_CEmail_CIEmailMeetingInfo* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CApplicationModel_CEmail_CIEmailMeetingInfo* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CApplicationModel_CEmail_CIEmailMeetingInfo* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CApplicationModel_CEmail_CIEmailMeetingInfo* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CApplicationModel_CEmail_CIEmailMeetingInfo* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CApplicationModel_CEmail_CIEmailMeetingInfo* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_AllowNewTimeProposal)(__x_ABI_CWindows_CApplicationModel_CEmail_CIEmailMeetingInfo* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* put_AllowNewTimeProposal)(__x_ABI_CWindows_CApplicationModel_CEmail_CIEmailMeetingInfo* This,
        boolean value);
    HRESULT (STDMETHODCALLTYPE* get_AppointmentRoamingId)(__x_ABI_CWindows_CApplicationModel_CEmail_CIEmailMeetingInfo* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* put_AppointmentRoamingId)(__x_ABI_CWindows_CApplicationModel_CEmail_CIEmailMeetingInfo* This,
        HSTRING value);
    HRESULT (STDMETHODCALLTYPE* get_AppointmentOriginalStartTime)(__x_ABI_CWindows_CApplicationModel_CEmail_CIEmailMeetingInfo* This,
        __x_ABI_C__FIReference_1___x_ABI_CWindows__CFoundation__CDateTime** value);
    HRESULT (STDMETHODCALLTYPE* put_AppointmentOriginalStartTime)(__x_ABI_CWindows_CApplicationModel_CEmail_CIEmailMeetingInfo* This,
        __x_ABI_C__FIReference_1___x_ABI_CWindows__CFoundation__CDateTime* value);
    HRESULT (STDMETHODCALLTYPE* get_Duration)(__x_ABI_CWindows_CApplicationModel_CEmail_CIEmailMeetingInfo* This,
        struct __x_ABI_CWindows_CFoundation_CTimeSpan* value);
    HRESULT (STDMETHODCALLTYPE* put_Duration)(__x_ABI_CWindows_CApplicationModel_CEmail_CIEmailMeetingInfo* This,
        struct __x_ABI_CWindows_CFoundation_CTimeSpan value);
    HRESULT (STDMETHODCALLTYPE* get_IsAllDay)(__x_ABI_CWindows_CApplicationModel_CEmail_CIEmailMeetingInfo* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* put_IsAllDay)(__x_ABI_CWindows_CApplicationModel_CEmail_CIEmailMeetingInfo* This,
        boolean value);
    HRESULT (STDMETHODCALLTYPE* get_IsResponseRequested)(__x_ABI_CWindows_CApplicationModel_CEmail_CIEmailMeetingInfo* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* put_IsResponseRequested)(__x_ABI_CWindows_CApplicationModel_CEmail_CIEmailMeetingInfo* This,
        boolean value);
    HRESULT (STDMETHODCALLTYPE* get_Location)(__x_ABI_CWindows_CApplicationModel_CEmail_CIEmailMeetingInfo* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* put_Location)(__x_ABI_CWindows_CApplicationModel_CEmail_CIEmailMeetingInfo* This,
        HSTRING value);
    HRESULT (STDMETHODCALLTYPE* get_ProposedStartTime)(__x_ABI_CWindows_CApplicationModel_CEmail_CIEmailMeetingInfo* This,
        __x_ABI_C__FIReference_1___x_ABI_CWindows__CFoundation__CDateTime** proposedStartTime);
    HRESULT (STDMETHODCALLTYPE* put_ProposedStartTime)(__x_ABI_CWindows_CApplicationModel_CEmail_CIEmailMeetingInfo* This,
        __x_ABI_C__FIReference_1___x_ABI_CWindows__CFoundation__CDateTime* proposedStartTime);
    HRESULT (STDMETHODCALLTYPE* get_ProposedDuration)(__x_ABI_CWindows_CApplicationModel_CEmail_CIEmailMeetingInfo* This,
        __x_ABI_C__FIReference_1___x_ABI_CWindows__CFoundation__CTimeSpan** duration);
    HRESULT (STDMETHODCALLTYPE* put_ProposedDuration)(__x_ABI_CWindows_CApplicationModel_CEmail_CIEmailMeetingInfo* This,
        __x_ABI_C__FIReference_1___x_ABI_CWindows__CFoundation__CTimeSpan* duration);
    HRESULT (STDMETHODCALLTYPE* get_RecurrenceStartTime)(__x_ABI_CWindows_CApplicationModel_CEmail_CIEmailMeetingInfo* This,
        __x_ABI_C__FIReference_1___x_ABI_CWindows__CFoundation__CDateTime** value);
    HRESULT (STDMETHODCALLTYPE* put_RecurrenceStartTime)(__x_ABI_CWindows_CApplicationModel_CEmail_CIEmailMeetingInfo* This,
        __x_ABI_C__FIReference_1___x_ABI_CWindows__CFoundation__CDateTime* value);
    HRESULT (STDMETHODCALLTYPE* get_Recurrence)(__x_ABI_CWindows_CApplicationModel_CEmail_CIEmailMeetingInfo* This,
        __x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointmentRecurrence** value);
    HRESULT (STDMETHODCALLTYPE* put_Recurrence)(__x_ABI_CWindows_CApplicationModel_CEmail_CIEmailMeetingInfo* This,
        __x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointmentRecurrence* value);
    HRESULT (STDMETHODCALLTYPE* get_RemoteChangeNumber)(__x_ABI_CWindows_CApplicationModel_CEmail_CIEmailMeetingInfo* This,
        UINT64* value);
    HRESULT (STDMETHODCALLTYPE* put_RemoteChangeNumber)(__x_ABI_CWindows_CApplicationModel_CEmail_CIEmailMeetingInfo* This,
        UINT64 value);
    HRESULT (STDMETHODCALLTYPE* get_StartTime)(__x_ABI_CWindows_CApplicationModel_CEmail_CIEmailMeetingInfo* This,
        struct __x_ABI_CWindows_CFoundation_CDateTime* value);
    HRESULT (STDMETHODCALLTYPE* put_StartTime)(__x_ABI_CWindows_CApplicationModel_CEmail_CIEmailMeetingInfo* This,
        struct __x_ABI_CWindows_CFoundation_CDateTime value);

        END_INTERFACE
    } __x_ABI_CWindows_CApplicationModel_CEmail_CIEmailMeetingInfoVtbl;

    interface __x_ABI_CWindows_CApplicationModel_CEmail_CIEmailMeetingInfo
    {
        CONST_VTBL struct __x_ABI_CWindows_CApplicationModel_CEmail_CIEmailMeetingInfoVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CApplicationModel_CEmail_CIEmailMeetingInfo;
#endif /* !defined(____x_ABI_CWindows_CApplicationModel_CEmail_CIEmailMeetingInfo_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CApplicationModel_CEmail_CIEmailMeetingInfo2_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CApplicationModel_CEmail_CIEmailMeetingInfo2_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CApplicationModel_CEmail_CIEmailMeetingInfo2Vtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CApplicationModel_CEmail_CIEmailMeetingInfo2* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CApplicationModel_CEmail_CIEmailMeetingInfo2* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CApplicationModel_CEmail_CIEmailMeetingInfo2* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CApplicationModel_CEmail_CIEmailMeetingInfo2* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CApplicationModel_CEmail_CIEmailMeetingInfo2* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CApplicationModel_CEmail_CIEmailMeetingInfo2* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_IsReportedOutOfDateByServer)(__x_ABI_CWindows_CApplicationModel_CEmail_CIEmailMeetingInfo2* This,
        boolean* value);

        END_INTERFACE
    } __x_ABI_CWindows_CApplicationModel_CEmail_CIEmailMeetingInfo2Vtbl;

    interface __x_ABI_CWindows_CApplicationModel_CEmail_CIEmailMeetingInfo2
    {
        CONST_VTBL struct __x_ABI_CWindows_CApplicationModel_CEmail_CIEmailMeetingInfo2Vtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CApplicationModel_CEmail_CIEmailMeetingInfo2;
#endif /* !defined(____x_ABI_CWindows_CApplicationModel_CEmail_CIEmailMeetingInfo2_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CApplicationModel_CEmail_CIEmailMessage_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CApplicationModel_CEmail_CIEmailMessage_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CApplicationModel_CEmail_CIEmailMessageVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CApplicationModel_CEmail_CIEmailMessage* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CApplicationModel_CEmail_CIEmailMessage* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CApplicationModel_CEmail_CIEmailMessage* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CApplicationModel_CEmail_CIEmailMessage* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CApplicationModel_CEmail_CIEmailMessage* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CApplicationModel_CEmail_CIEmailMessage* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Subject)(__x_ABI_CWindows_CApplicationModel_CEmail_CIEmailMessage* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* put_Subject)(__x_ABI_CWindows_CApplicationModel_CEmail_CIEmailMessage* This,
        HSTRING value);
    HRESULT (STDMETHODCALLTYPE* get_Body)(__x_ABI_CWindows_CApplicationModel_CEmail_CIEmailMessage* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* put_Body)(__x_ABI_CWindows_CApplicationModel_CEmail_CIEmailMessage* This,
        HSTRING value);
    HRESULT (STDMETHODCALLTYPE* get_To)(__x_ABI_CWindows_CApplicationModel_CEmail_CIEmailMessage* This,
        __x_ABI_C__FIVector_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailRecipient** value);
    HRESULT (STDMETHODCALLTYPE* get_CC)(__x_ABI_CWindows_CApplicationModel_CEmail_CIEmailMessage* This,
        __x_ABI_C__FIVector_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailRecipient** value);
    HRESULT (STDMETHODCALLTYPE* get_Bcc)(__x_ABI_CWindows_CApplicationModel_CEmail_CIEmailMessage* This,
        __x_ABI_C__FIVector_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailRecipient** value);
    HRESULT (STDMETHODCALLTYPE* get_Attachments)(__x_ABI_CWindows_CApplicationModel_CEmail_CIEmailMessage* This,
        __x_ABI_C__FIVector_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailAttachment** value);

        END_INTERFACE
    } __x_ABI_CWindows_CApplicationModel_CEmail_CIEmailMessageVtbl;

    interface __x_ABI_CWindows_CApplicationModel_CEmail_CIEmailMessage
    {
        CONST_VTBL struct __x_ABI_CWindows_CApplicationModel_CEmail_CIEmailMessageVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CApplicationModel_CEmail_CIEmailMessage;
#endif /* !defined(____x_ABI_CWindows_CApplicationModel_CEmail_CIEmailMessage_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CApplicationModel_CEmail_CIEmailMessage2_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CApplicationModel_CEmail_CIEmailMessage2_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CApplicationModel_CEmail_CIEmailMessage2Vtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CApplicationModel_CEmail_CIEmailMessage2* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CApplicationModel_CEmail_CIEmailMessage2* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CApplicationModel_CEmail_CIEmailMessage2* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CApplicationModel_CEmail_CIEmailMessage2* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CApplicationModel_CEmail_CIEmailMessage2* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CApplicationModel_CEmail_CIEmailMessage2* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Id)(__x_ABI_CWindows_CApplicationModel_CEmail_CIEmailMessage2* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* get_RemoteId)(__x_ABI_CWindows_CApplicationModel_CEmail_CIEmailMessage2* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* put_RemoteId)(__x_ABI_CWindows_CApplicationModel_CEmail_CIEmailMessage2* This,
        HSTRING value);
    HRESULT (STDMETHODCALLTYPE* get_MailboxId)(__x_ABI_CWindows_CApplicationModel_CEmail_CIEmailMessage2* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* get_ConversationId)(__x_ABI_CWindows_CApplicationModel_CEmail_CIEmailMessage2* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* get_FolderId)(__x_ABI_CWindows_CApplicationModel_CEmail_CIEmailMessage2* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* get_AllowInternetImages)(__x_ABI_CWindows_CApplicationModel_CEmail_CIEmailMessage2* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* put_AllowInternetImages)(__x_ABI_CWindows_CApplicationModel_CEmail_CIEmailMessage2* This,
        boolean value);
    HRESULT (STDMETHODCALLTYPE* get_ChangeNumber)(__x_ABI_CWindows_CApplicationModel_CEmail_CIEmailMessage2* This,
        UINT64* value);
    HRESULT (STDMETHODCALLTYPE* get_DownloadState)(__x_ABI_CWindows_CApplicationModel_CEmail_CIEmailMessage2* This,
        enum __x_ABI_CWindows_CApplicationModel_CEmail_CEmailMessageDownloadState* value);
    HRESULT (STDMETHODCALLTYPE* put_DownloadState)(__x_ABI_CWindows_CApplicationModel_CEmail_CIEmailMessage2* This,
        enum __x_ABI_CWindows_CApplicationModel_CEmail_CEmailMessageDownloadState value);
    HRESULT (STDMETHODCALLTYPE* get_EstimatedDownloadSizeInBytes)(__x_ABI_CWindows_CApplicationModel_CEmail_CIEmailMessage2* This,
        UINT32* value);
    HRESULT (STDMETHODCALLTYPE* put_EstimatedDownloadSizeInBytes)(__x_ABI_CWindows_CApplicationModel_CEmail_CIEmailMessage2* This,
        UINT32 value);
    HRESULT (STDMETHODCALLTYPE* get_FlagState)(__x_ABI_CWindows_CApplicationModel_CEmail_CIEmailMessage2* This,
        enum __x_ABI_CWindows_CApplicationModel_CEmail_CEmailFlagState* value);
    HRESULT (STDMETHODCALLTYPE* put_FlagState)(__x_ABI_CWindows_CApplicationModel_CEmail_CIEmailMessage2* This,
        enum __x_ABI_CWindows_CApplicationModel_CEmail_CEmailFlagState value);
    HRESULT (STDMETHODCALLTYPE* get_HasPartialBodies)(__x_ABI_CWindows_CApplicationModel_CEmail_CIEmailMessage2* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* get_Importance)(__x_ABI_CWindows_CApplicationModel_CEmail_CIEmailMessage2* This,
        enum __x_ABI_CWindows_CApplicationModel_CEmail_CEmailImportance* value);
    HRESULT (STDMETHODCALLTYPE* put_Importance)(__x_ABI_CWindows_CApplicationModel_CEmail_CIEmailMessage2* This,
        enum __x_ABI_CWindows_CApplicationModel_CEmail_CEmailImportance value);
    HRESULT (STDMETHODCALLTYPE* get_InResponseToMessageId)(__x_ABI_CWindows_CApplicationModel_CEmail_CIEmailMessage2* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* get_IrmInfo)(__x_ABI_CWindows_CApplicationModel_CEmail_CIEmailMessage2* This,
        __x_ABI_CWindows_CApplicationModel_CEmail_CIEmailIrmInfo** value);
    HRESULT (STDMETHODCALLTYPE* put_IrmInfo)(__x_ABI_CWindows_CApplicationModel_CEmail_CIEmailMessage2* This,
        __x_ABI_CWindows_CApplicationModel_CEmail_CIEmailIrmInfo* value);
    HRESULT (STDMETHODCALLTYPE* get_IsDraftMessage)(__x_ABI_CWindows_CApplicationModel_CEmail_CIEmailMessage2* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* get_IsRead)(__x_ABI_CWindows_CApplicationModel_CEmail_CIEmailMessage2* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* put_IsRead)(__x_ABI_CWindows_CApplicationModel_CEmail_CIEmailMessage2* This,
        boolean value);
    HRESULT (STDMETHODCALLTYPE* get_IsSeen)(__x_ABI_CWindows_CApplicationModel_CEmail_CIEmailMessage2* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* put_IsSeen)(__x_ABI_CWindows_CApplicationModel_CEmail_CIEmailMessage2* This,
        boolean value);
    HRESULT (STDMETHODCALLTYPE* get_IsServerSearchMessage)(__x_ABI_CWindows_CApplicationModel_CEmail_CIEmailMessage2* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* get_IsSmartSendable)(__x_ABI_CWindows_CApplicationModel_CEmail_CIEmailMessage2* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* get_MessageClass)(__x_ABI_CWindows_CApplicationModel_CEmail_CIEmailMessage2* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* put_MessageClass)(__x_ABI_CWindows_CApplicationModel_CEmail_CIEmailMessage2* This,
        HSTRING value);
    HRESULT (STDMETHODCALLTYPE* get_NormalizedSubject)(__x_ABI_CWindows_CApplicationModel_CEmail_CIEmailMessage2* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* get_OriginalCodePage)(__x_ABI_CWindows_CApplicationModel_CEmail_CIEmailMessage2* This,
        INT32* value);
    HRESULT (STDMETHODCALLTYPE* put_OriginalCodePage)(__x_ABI_CWindows_CApplicationModel_CEmail_CIEmailMessage2* This,
        INT32 value);
    HRESULT (STDMETHODCALLTYPE* get_Preview)(__x_ABI_CWindows_CApplicationModel_CEmail_CIEmailMessage2* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* put_Preview)(__x_ABI_CWindows_CApplicationModel_CEmail_CIEmailMessage2* This,
        HSTRING value);
    HRESULT (STDMETHODCALLTYPE* get_LastResponseKind)(__x_ABI_CWindows_CApplicationModel_CEmail_CIEmailMessage2* This,
        enum __x_ABI_CWindows_CApplicationModel_CEmail_CEmailMessageResponseKind* value);
    HRESULT (STDMETHODCALLTYPE* put_LastResponseKind)(__x_ABI_CWindows_CApplicationModel_CEmail_CIEmailMessage2* This,
        enum __x_ABI_CWindows_CApplicationModel_CEmail_CEmailMessageResponseKind value);
    HRESULT (STDMETHODCALLTYPE* get_Sender)(__x_ABI_CWindows_CApplicationModel_CEmail_CIEmailMessage2* This,
        __x_ABI_CWindows_CApplicationModel_CEmail_CIEmailRecipient** value);
    HRESULT (STDMETHODCALLTYPE* put_Sender)(__x_ABI_CWindows_CApplicationModel_CEmail_CIEmailMessage2* This,
        __x_ABI_CWindows_CApplicationModel_CEmail_CIEmailRecipient* value);
    HRESULT (STDMETHODCALLTYPE* get_SentTime)(__x_ABI_CWindows_CApplicationModel_CEmail_CIEmailMessage2* This,
        __x_ABI_C__FIReference_1___x_ABI_CWindows__CFoundation__CDateTime** value);
    HRESULT (STDMETHODCALLTYPE* put_SentTime)(__x_ABI_CWindows_CApplicationModel_CEmail_CIEmailMessage2* This,
        __x_ABI_C__FIReference_1___x_ABI_CWindows__CFoundation__CDateTime* value);
    HRESULT (STDMETHODCALLTYPE* get_MeetingInfo)(__x_ABI_CWindows_CApplicationModel_CEmail_CIEmailMessage2* This,
        __x_ABI_CWindows_CApplicationModel_CEmail_CIEmailMeetingInfo** value);
    HRESULT (STDMETHODCALLTYPE* put_MeetingInfo)(__x_ABI_CWindows_CApplicationModel_CEmail_CIEmailMessage2* This,
        __x_ABI_CWindows_CApplicationModel_CEmail_CIEmailMeetingInfo* value);
    HRESULT (STDMETHODCALLTYPE* GetBodyStream)(__x_ABI_CWindows_CApplicationModel_CEmail_CIEmailMessage2* This,
        enum __x_ABI_CWindows_CApplicationModel_CEmail_CEmailMessageBodyKind type,
        __x_ABI_CWindows_CStorage_CStreams_CIRandomAccessStreamReference** result);
    HRESULT (STDMETHODCALLTYPE* SetBodyStream)(__x_ABI_CWindows_CApplicationModel_CEmail_CIEmailMessage2* This,
        enum __x_ABI_CWindows_CApplicationModel_CEmail_CEmailMessageBodyKind type,
        __x_ABI_CWindows_CStorage_CStreams_CIRandomAccessStreamReference* stream);

        END_INTERFACE
    } __x_ABI_CWindows_CApplicationModel_CEmail_CIEmailMessage2Vtbl;

    interface __x_ABI_CWindows_CApplicationModel_CEmail_CIEmailMessage2
    {
        CONST_VTBL struct __x_ABI_CWindows_CApplicationModel_CEmail_CIEmailMessage2Vtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CApplicationModel_CEmail_CIEmailMessage2;
#endif /* !defined(____x_ABI_CWindows_CApplicationModel_CEmail_CIEmailMessage2_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CApplicationModel_CEmail_CIEmailMessage3_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CApplicationModel_CEmail_CIEmailMessage3_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CApplicationModel_CEmail_CIEmailMessage3Vtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CApplicationModel_CEmail_CIEmailMessage3* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CApplicationModel_CEmail_CIEmailMessage3* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CApplicationModel_CEmail_CIEmailMessage3* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CApplicationModel_CEmail_CIEmailMessage3* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CApplicationModel_CEmail_CIEmailMessage3* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CApplicationModel_CEmail_CIEmailMessage3* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_SmimeData)(__x_ABI_CWindows_CApplicationModel_CEmail_CIEmailMessage3* This,
        __x_ABI_CWindows_CStorage_CStreams_CIRandomAccessStreamReference** value);
    HRESULT (STDMETHODCALLTYPE* put_SmimeData)(__x_ABI_CWindows_CApplicationModel_CEmail_CIEmailMessage3* This,
        __x_ABI_CWindows_CStorage_CStreams_CIRandomAccessStreamReference* value);
    HRESULT (STDMETHODCALLTYPE* get_SmimeKind)(__x_ABI_CWindows_CApplicationModel_CEmail_CIEmailMessage3* This,
        enum __x_ABI_CWindows_CApplicationModel_CEmail_CEmailMessageSmimeKind* value);
    HRESULT (STDMETHODCALLTYPE* put_SmimeKind)(__x_ABI_CWindows_CApplicationModel_CEmail_CIEmailMessage3* This,
        enum __x_ABI_CWindows_CApplicationModel_CEmail_CEmailMessageSmimeKind value);

        END_INTERFACE
    } __x_ABI_CWindows_CApplicationModel_CEmail_CIEmailMessage3Vtbl;

    interface __x_ABI_CWindows_CApplicationModel_CEmail_CIEmailMessage3
    {
        CONST_VTBL struct __x_ABI_CWindows_CApplicationModel_CEmail_CIEmailMessage3Vtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CApplicationModel_CEmail_CIEmailMessage3;
#endif /* !defined(____x_ABI_CWindows_CApplicationModel_CEmail_CIEmailMessage3_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CApplicationModel_CEmail_CIEmailMessage4_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CApplicationModel_CEmail_CIEmailMessage4_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CApplicationModel_CEmail_CIEmailMessage4Vtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CApplicationModel_CEmail_CIEmailMessage4* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CApplicationModel_CEmail_CIEmailMessage4* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CApplicationModel_CEmail_CIEmailMessage4* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CApplicationModel_CEmail_CIEmailMessage4* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CApplicationModel_CEmail_CIEmailMessage4* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CApplicationModel_CEmail_CIEmailMessage4* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_ReplyTo)(__x_ABI_CWindows_CApplicationModel_CEmail_CIEmailMessage4* This,
        __x_ABI_C__FIVector_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailRecipient** value);
    HRESULT (STDMETHODCALLTYPE* get_SentRepresenting)(__x_ABI_CWindows_CApplicationModel_CEmail_CIEmailMessage4* This,
        __x_ABI_CWindows_CApplicationModel_CEmail_CIEmailRecipient** value);
    HRESULT (STDMETHODCALLTYPE* put_SentRepresenting)(__x_ABI_CWindows_CApplicationModel_CEmail_CIEmailMessage4* This,
        __x_ABI_CWindows_CApplicationModel_CEmail_CIEmailRecipient* value);

        END_INTERFACE
    } __x_ABI_CWindows_CApplicationModel_CEmail_CIEmailMessage4Vtbl;

    interface __x_ABI_CWindows_CApplicationModel_CEmail_CIEmailMessage4
    {
        CONST_VTBL struct __x_ABI_CWindows_CApplicationModel_CEmail_CIEmailMessage4Vtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CApplicationModel_CEmail_CIEmailMessage4;
#endif /* !defined(____x_ABI_CWindows_CApplicationModel_CEmail_CIEmailMessage4_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CApplicationModel_CEmail_CIEmailMessageBatch_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CApplicationModel_CEmail_CIEmailMessageBatch_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CApplicationModel_CEmail_CIEmailMessageBatchVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CApplicationModel_CEmail_CIEmailMessageBatch* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CApplicationModel_CEmail_CIEmailMessageBatch* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CApplicationModel_CEmail_CIEmailMessageBatch* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CApplicationModel_CEmail_CIEmailMessageBatch* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CApplicationModel_CEmail_CIEmailMessageBatch* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CApplicationModel_CEmail_CIEmailMessageBatch* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Messages)(__x_ABI_CWindows_CApplicationModel_CEmail_CIEmailMessageBatch* This,
        __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailMessage** value);
    HRESULT (STDMETHODCALLTYPE* get_Status)(__x_ABI_CWindows_CApplicationModel_CEmail_CIEmailMessageBatch* This,
        enum __x_ABI_CWindows_CApplicationModel_CEmail_CEmailBatchStatus* value);

        END_INTERFACE
    } __x_ABI_CWindows_CApplicationModel_CEmail_CIEmailMessageBatchVtbl;

    interface __x_ABI_CWindows_CApplicationModel_CEmail_CIEmailMessageBatch
    {
        CONST_VTBL struct __x_ABI_CWindows_CApplicationModel_CEmail_CIEmailMessageBatchVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CApplicationModel_CEmail_CIEmailMessageBatch;
#endif /* !defined(____x_ABI_CWindows_CApplicationModel_CEmail_CIEmailMessageBatch_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CApplicationModel_CEmail_CIEmailMessageReader_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CApplicationModel_CEmail_CIEmailMessageReader_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CApplicationModel_CEmail_CIEmailMessageReaderVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CApplicationModel_CEmail_CIEmailMessageReader* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CApplicationModel_CEmail_CIEmailMessageReader* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CApplicationModel_CEmail_CIEmailMessageReader* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CApplicationModel_CEmail_CIEmailMessageReader* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CApplicationModel_CEmail_CIEmailMessageReader* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CApplicationModel_CEmail_CIEmailMessageReader* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* ReadBatchAsync)(__x_ABI_CWindows_CApplicationModel_CEmail_CIEmailMessageReader* This,
        __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailMessageBatch** result);

        END_INTERFACE
    } __x_ABI_CWindows_CApplicationModel_CEmail_CIEmailMessageReaderVtbl;

    interface __x_ABI_CWindows_CApplicationModel_CEmail_CIEmailMessageReader
    {
        CONST_VTBL struct __x_ABI_CWindows_CApplicationModel_CEmail_CIEmailMessageReaderVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CApplicationModel_CEmail_CIEmailMessageReader;
#endif /* !defined(____x_ABI_CWindows_CApplicationModel_CEmail_CIEmailMessageReader_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CApplicationModel_CEmail_CIEmailQueryOptions_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CApplicationModel_CEmail_CIEmailQueryOptions_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CApplicationModel_CEmail_CIEmailQueryOptionsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CApplicationModel_CEmail_CIEmailQueryOptions* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CApplicationModel_CEmail_CIEmailQueryOptions* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CApplicationModel_CEmail_CIEmailQueryOptions* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CApplicationModel_CEmail_CIEmailQueryOptions* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CApplicationModel_CEmail_CIEmailQueryOptions* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CApplicationModel_CEmail_CIEmailQueryOptions* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_TextSearch)(__x_ABI_CWindows_CApplicationModel_CEmail_CIEmailQueryOptions* This,
        __x_ABI_CWindows_CApplicationModel_CEmail_CIEmailQueryTextSearch** value);
    HRESULT (STDMETHODCALLTYPE* get_SortDirection)(__x_ABI_CWindows_CApplicationModel_CEmail_CIEmailQueryOptions* This,
        enum __x_ABI_CWindows_CApplicationModel_CEmail_CEmailQuerySortDirection* value);
    HRESULT (STDMETHODCALLTYPE* put_SortDirection)(__x_ABI_CWindows_CApplicationModel_CEmail_CIEmailQueryOptions* This,
        enum __x_ABI_CWindows_CApplicationModel_CEmail_CEmailQuerySortDirection value);
    HRESULT (STDMETHODCALLTYPE* get_SortProperty)(__x_ABI_CWindows_CApplicationModel_CEmail_CIEmailQueryOptions* This,
        enum __x_ABI_CWindows_CApplicationModel_CEmail_CEmailQuerySortProperty* value);
    HRESULT (STDMETHODCALLTYPE* put_SortProperty)(__x_ABI_CWindows_CApplicationModel_CEmail_CIEmailQueryOptions* This,
        enum __x_ABI_CWindows_CApplicationModel_CEmail_CEmailQuerySortProperty value);
    HRESULT (STDMETHODCALLTYPE* get_Kind)(__x_ABI_CWindows_CApplicationModel_CEmail_CIEmailQueryOptions* This,
        enum __x_ABI_CWindows_CApplicationModel_CEmail_CEmailQueryKind* value);
    HRESULT (STDMETHODCALLTYPE* put_Kind)(__x_ABI_CWindows_CApplicationModel_CEmail_CIEmailQueryOptions* This,
        enum __x_ABI_CWindows_CApplicationModel_CEmail_CEmailQueryKind value);
    HRESULT (STDMETHODCALLTYPE* get_FolderIds)(__x_ABI_CWindows_CApplicationModel_CEmail_CIEmailQueryOptions* This,
        __x_ABI_C__FIVector_1_HSTRING** value);

        END_INTERFACE
    } __x_ABI_CWindows_CApplicationModel_CEmail_CIEmailQueryOptionsVtbl;

    interface __x_ABI_CWindows_CApplicationModel_CEmail_CIEmailQueryOptions
    {
        CONST_VTBL struct __x_ABI_CWindows_CApplicationModel_CEmail_CIEmailQueryOptionsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CApplicationModel_CEmail_CIEmailQueryOptions;
#endif /* !defined(____x_ABI_CWindows_CApplicationModel_CEmail_CIEmailQueryOptions_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CApplicationModel_CEmail_CIEmailQueryOptionsFactory_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CApplicationModel_CEmail_CIEmailQueryOptionsFactory_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CApplicationModel_CEmail_CIEmailQueryOptionsFactoryVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CApplicationModel_CEmail_CIEmailQueryOptionsFactory* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CApplicationModel_CEmail_CIEmailQueryOptionsFactory* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CApplicationModel_CEmail_CIEmailQueryOptionsFactory* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CApplicationModel_CEmail_CIEmailQueryOptionsFactory* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CApplicationModel_CEmail_CIEmailQueryOptionsFactory* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CApplicationModel_CEmail_CIEmailQueryOptionsFactory* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* CreateWithText)(__x_ABI_CWindows_CApplicationModel_CEmail_CIEmailQueryOptionsFactory* This,
        HSTRING text,
        __x_ABI_CWindows_CApplicationModel_CEmail_CIEmailQueryOptions** result);
    HRESULT (STDMETHODCALLTYPE* CreateWithTextAndFields)(__x_ABI_CWindows_CApplicationModel_CEmail_CIEmailQueryOptionsFactory* This,
        HSTRING text,
        enum __x_ABI_CWindows_CApplicationModel_CEmail_CEmailQuerySearchFields fields,
        __x_ABI_CWindows_CApplicationModel_CEmail_CIEmailQueryOptions** result);

        END_INTERFACE
    } __x_ABI_CWindows_CApplicationModel_CEmail_CIEmailQueryOptionsFactoryVtbl;

    interface __x_ABI_CWindows_CApplicationModel_CEmail_CIEmailQueryOptionsFactory
    {
        CONST_VTBL struct __x_ABI_CWindows_CApplicationModel_CEmail_CIEmailQueryOptionsFactoryVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CApplicationModel_CEmail_CIEmailQueryOptionsFactory;
#endif /* !defined(____x_ABI_CWindows_CApplicationModel_CEmail_CIEmailQueryOptionsFactory_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CApplicationModel_CEmail_CIEmailQueryTextSearch_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CApplicationModel_CEmail_CIEmailQueryTextSearch_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CApplicationModel_CEmail_CIEmailQueryTextSearchVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CApplicationModel_CEmail_CIEmailQueryTextSearch* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CApplicationModel_CEmail_CIEmailQueryTextSearch* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CApplicationModel_CEmail_CIEmailQueryTextSearch* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CApplicationModel_CEmail_CIEmailQueryTextSearch* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CApplicationModel_CEmail_CIEmailQueryTextSearch* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CApplicationModel_CEmail_CIEmailQueryTextSearch* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Fields)(__x_ABI_CWindows_CApplicationModel_CEmail_CIEmailQueryTextSearch* This,
        enum __x_ABI_CWindows_CApplicationModel_CEmail_CEmailQuerySearchFields* value);
    HRESULT (STDMETHODCALLTYPE* put_Fields)(__x_ABI_CWindows_CApplicationModel_CEmail_CIEmailQueryTextSearch* This,
        enum __x_ABI_CWindows_CApplicationModel_CEmail_CEmailQuerySearchFields value);
    HRESULT (STDMETHODCALLTYPE* get_SearchScope)(__x_ABI_CWindows_CApplicationModel_CEmail_CIEmailQueryTextSearch* This,
        enum __x_ABI_CWindows_CApplicationModel_CEmail_CEmailQuerySearchScope* value);
    HRESULT (STDMETHODCALLTYPE* put_SearchScope)(__x_ABI_CWindows_CApplicationModel_CEmail_CIEmailQueryTextSearch* This,
        enum __x_ABI_CWindows_CApplicationModel_CEmail_CEmailQuerySearchScope value);
    HRESULT (STDMETHODCALLTYPE* get_Text)(__x_ABI_CWindows_CApplicationModel_CEmail_CIEmailQueryTextSearch* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* put_Text)(__x_ABI_CWindows_CApplicationModel_CEmail_CIEmailQueryTextSearch* This,
        HSTRING value);

        END_INTERFACE
    } __x_ABI_CWindows_CApplicationModel_CEmail_CIEmailQueryTextSearchVtbl;

    interface __x_ABI_CWindows_CApplicationModel_CEmail_CIEmailQueryTextSearch
    {
        CONST_VTBL struct __x_ABI_CWindows_CApplicationModel_CEmail_CIEmailQueryTextSearchVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CApplicationModel_CEmail_CIEmailQueryTextSearch;
#endif /* !defined(____x_ABI_CWindows_CApplicationModel_CEmail_CIEmailQueryTextSearch_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CApplicationModel_CEmail_CIEmailRecipient_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CApplicationModel_CEmail_CIEmailRecipient_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CApplicationModel_CEmail_CIEmailRecipientVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CApplicationModel_CEmail_CIEmailRecipient* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CApplicationModel_CEmail_CIEmailRecipient* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CApplicationModel_CEmail_CIEmailRecipient* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CApplicationModel_CEmail_CIEmailRecipient* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CApplicationModel_CEmail_CIEmailRecipient* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CApplicationModel_CEmail_CIEmailRecipient* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Name)(__x_ABI_CWindows_CApplicationModel_CEmail_CIEmailRecipient* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* put_Name)(__x_ABI_CWindows_CApplicationModel_CEmail_CIEmailRecipient* This,
        HSTRING value);
    HRESULT (STDMETHODCALLTYPE* get_Address)(__x_ABI_CWindows_CApplicationModel_CEmail_CIEmailRecipient* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* put_Address)(__x_ABI_CWindows_CApplicationModel_CEmail_CIEmailRecipient* This,
        HSTRING value);

        END_INTERFACE
    } __x_ABI_CWindows_CApplicationModel_CEmail_CIEmailRecipientVtbl;

    interface __x_ABI_CWindows_CApplicationModel_CEmail_CIEmailRecipient
    {
        CONST_VTBL struct __x_ABI_CWindows_CApplicationModel_CEmail_CIEmailRecipientVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CApplicationModel_CEmail_CIEmailRecipient;
#endif /* !defined(____x_ABI_CWindows_CApplicationModel_CEmail_CIEmailRecipient_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CApplicationModel_CEmail_CIEmailRecipientFactory_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CApplicationModel_CEmail_CIEmailRecipientFactory_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CApplicationModel_CEmail_CIEmailRecipientFactoryVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CApplicationModel_CEmail_CIEmailRecipientFactory* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CApplicationModel_CEmail_CIEmailRecipientFactory* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CApplicationModel_CEmail_CIEmailRecipientFactory* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CApplicationModel_CEmail_CIEmailRecipientFactory* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CApplicationModel_CEmail_CIEmailRecipientFactory* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CApplicationModel_CEmail_CIEmailRecipientFactory* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* Create)(__x_ABI_CWindows_CApplicationModel_CEmail_CIEmailRecipientFactory* This,
        HSTRING address,
        __x_ABI_CWindows_CApplicationModel_CEmail_CIEmailRecipient** result);
    HRESULT (STDMETHODCALLTYPE* CreateWithName)(__x_ABI_CWindows_CApplicationModel_CEmail_CIEmailRecipientFactory* This,
        HSTRING address,
        HSTRING name,
        __x_ABI_CWindows_CApplicationModel_CEmail_CIEmailRecipient** result);

        END_INTERFACE
    } __x_ABI_CWindows_CApplicationModel_CEmail_CIEmailRecipientFactoryVtbl;

    interface __x_ABI_CWindows_CApplicationModel_CEmail_CIEmailRecipientFactory
    {
        CONST_VTBL struct __x_ABI_CWindows_CApplicationModel_CEmail_CIEmailRecipientFactoryVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CApplicationModel_CEmail_CIEmailRecipientFactory;
#endif /* !defined(____x_ABI_CWindows_CApplicationModel_CEmail_CIEmailRecipientFactory_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CApplicationModel_CEmail_CIEmailRecipientResolutionResult_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CApplicationModel_CEmail_CIEmailRecipientResolutionResult_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CApplicationModel_CEmail_CIEmailRecipientResolutionResultVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CApplicationModel_CEmail_CIEmailRecipientResolutionResult* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CApplicationModel_CEmail_CIEmailRecipientResolutionResult* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CApplicationModel_CEmail_CIEmailRecipientResolutionResult* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CApplicationModel_CEmail_CIEmailRecipientResolutionResult* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CApplicationModel_CEmail_CIEmailRecipientResolutionResult* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CApplicationModel_CEmail_CIEmailRecipientResolutionResult* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Status)(__x_ABI_CWindows_CApplicationModel_CEmail_CIEmailRecipientResolutionResult* This,
        enum __x_ABI_CWindows_CApplicationModel_CEmail_CEmailRecipientResolutionStatus* value);
    HRESULT (STDMETHODCALLTYPE* get_PublicKeys)(__x_ABI_CWindows_CApplicationModel_CEmail_CIEmailRecipientResolutionResult* This,
        __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CSecurity__CCryptography__CCertificates__CCertificate** value);

        END_INTERFACE
    } __x_ABI_CWindows_CApplicationModel_CEmail_CIEmailRecipientResolutionResultVtbl;

    interface __x_ABI_CWindows_CApplicationModel_CEmail_CIEmailRecipientResolutionResult
    {
        CONST_VTBL struct __x_ABI_CWindows_CApplicationModel_CEmail_CIEmailRecipientResolutionResultVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CApplicationModel_CEmail_CIEmailRecipientResolutionResult;
#endif /* !defined(____x_ABI_CWindows_CApplicationModel_CEmail_CIEmailRecipientResolutionResult_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CApplicationModel_CEmail_CIEmailRecipientResolutionResult2_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CApplicationModel_CEmail_CIEmailRecipientResolutionResult2_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CApplicationModel_CEmail_CIEmailRecipientResolutionResult2Vtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CApplicationModel_CEmail_CIEmailRecipientResolutionResult2* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CApplicationModel_CEmail_CIEmailRecipientResolutionResult2* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CApplicationModel_CEmail_CIEmailRecipientResolutionResult2* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CApplicationModel_CEmail_CIEmailRecipientResolutionResult2* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CApplicationModel_CEmail_CIEmailRecipientResolutionResult2* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CApplicationModel_CEmail_CIEmailRecipientResolutionResult2* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* put_Status)(__x_ABI_CWindows_CApplicationModel_CEmail_CIEmailRecipientResolutionResult2* This,
        enum __x_ABI_CWindows_CApplicationModel_CEmail_CEmailRecipientResolutionStatus value);
    HRESULT (STDMETHODCALLTYPE* SetPublicKeys)(__x_ABI_CWindows_CApplicationModel_CEmail_CIEmailRecipientResolutionResult2* This,
        __x_ABI_C__FIIterable_1___x_ABI_CWindows__CSecurity__CCryptography__CCertificates__CCertificate* value);

        END_INTERFACE
    } __x_ABI_CWindows_CApplicationModel_CEmail_CIEmailRecipientResolutionResult2Vtbl;

    interface __x_ABI_CWindows_CApplicationModel_CEmail_CIEmailRecipientResolutionResult2
    {
        CONST_VTBL struct __x_ABI_CWindows_CApplicationModel_CEmail_CIEmailRecipientResolutionResult2Vtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CApplicationModel_CEmail_CIEmailRecipientResolutionResult2;
#endif /* !defined(____x_ABI_CWindows_CApplicationModel_CEmail_CIEmailRecipientResolutionResult2_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CApplicationModel_CEmail_CIEmailStore_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CApplicationModel_CEmail_CIEmailStore_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CApplicationModel_CEmail_CIEmailStoreVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CApplicationModel_CEmail_CIEmailStore* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CApplicationModel_CEmail_CIEmailStore* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CApplicationModel_CEmail_CIEmailStore* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CApplicationModel_CEmail_CIEmailStore* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CApplicationModel_CEmail_CIEmailStore* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CApplicationModel_CEmail_CIEmailStore* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* FindMailboxesAsync)(__x_ABI_CWindows_CApplicationModel_CEmail_CIEmailStore* This,
        __x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailMailbox** result);
    HRESULT (STDMETHODCALLTYPE* GetConversationReader)(__x_ABI_CWindows_CApplicationModel_CEmail_CIEmailStore* This,
        __x_ABI_CWindows_CApplicationModel_CEmail_CIEmailConversationReader** result);
    HRESULT (STDMETHODCALLTYPE* GetConversationReaderWithOptions)(__x_ABI_CWindows_CApplicationModel_CEmail_CIEmailStore* This,
        __x_ABI_CWindows_CApplicationModel_CEmail_CIEmailQueryOptions* options,
        __x_ABI_CWindows_CApplicationModel_CEmail_CIEmailConversationReader** result);
    HRESULT (STDMETHODCALLTYPE* GetMessageReader)(__x_ABI_CWindows_CApplicationModel_CEmail_CIEmailStore* This,
        __x_ABI_CWindows_CApplicationModel_CEmail_CIEmailMessageReader** result);
    HRESULT (STDMETHODCALLTYPE* GetMessageReaderWithOptions)(__x_ABI_CWindows_CApplicationModel_CEmail_CIEmailStore* This,
        __x_ABI_CWindows_CApplicationModel_CEmail_CIEmailQueryOptions* options,
        __x_ABI_CWindows_CApplicationModel_CEmail_CIEmailMessageReader** result);
    HRESULT (STDMETHODCALLTYPE* GetMailboxAsync)(__x_ABI_CWindows_CApplicationModel_CEmail_CIEmailStore* This,
        HSTRING id,
        __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailMailbox** result);
    HRESULT (STDMETHODCALLTYPE* GetConversationAsync)(__x_ABI_CWindows_CApplicationModel_CEmail_CIEmailStore* This,
        HSTRING id,
        __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailConversation** result);
    HRESULT (STDMETHODCALLTYPE* GetFolderAsync)(__x_ABI_CWindows_CApplicationModel_CEmail_CIEmailStore* This,
        HSTRING id,
        __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailFolder** result);
    HRESULT (STDMETHODCALLTYPE* GetMessageAsync)(__x_ABI_CWindows_CApplicationModel_CEmail_CIEmailStore* This,
        HSTRING id,
        __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailMessage** result);
    HRESULT (STDMETHODCALLTYPE* CreateMailboxAsync)(__x_ABI_CWindows_CApplicationModel_CEmail_CIEmailStore* This,
        HSTRING accountName,
        HSTRING accountAddress,
        __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailMailbox** result);
    HRESULT (STDMETHODCALLTYPE* CreateMailboxInAccountAsync)(__x_ABI_CWindows_CApplicationModel_CEmail_CIEmailStore* This,
        HSTRING accountName,
        HSTRING accountAddress,
        HSTRING userDataAccountId,
        __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CEmail__CEmailMailbox** result);

        END_INTERFACE
    } __x_ABI_CWindows_CApplicationModel_CEmail_CIEmailStoreVtbl;

    interface __x_ABI_CWindows_CApplicationModel_CEmail_CIEmailStore
    {
        CONST_VTBL struct __x_ABI_CWindows_CApplicationModel_CEmail_CIEmailStoreVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CApplicationModel_CEmail_CIEmailStore;
#endif /* !defined(____x_ABI_CWindows_CApplicationModel_CEmail_CIEmailStore_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CApplicationModel_CEmail_CIEmailStoreNotificationTriggerDetails_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CApplicationModel_CEmail_CIEmailStoreNotificationTriggerDetails_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CApplicationModel_CEmail_CIEmailStoreNotificationTriggerDetailsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CApplicationModel_CEmail_CIEmailStoreNotificationTriggerDetails* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CApplicationModel_CEmail_CIEmailStoreNotificationTriggerDetails* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CApplicationModel_CEmail_CIEmailStoreNotificationTriggerDetails* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CApplicationModel_CEmail_CIEmailStoreNotificationTriggerDetails* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CApplicationModel_CEmail_CIEmailStoreNotificationTriggerDetails* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CApplicationModel_CEmail_CIEmailStoreNotificationTriggerDetails* This,
            TrustLevel* trustLevel);
    
        END_INTERFACE
    } __x_ABI_CWindows_CApplicationModel_CEmail_CIEmailStoreNotificationTriggerDetailsVtbl;

    interface __x_ABI_CWindows_CApplicationModel_CEmail_CIEmailStoreNotificationTriggerDetails
    {
        CONST_VTBL struct __x_ABI_CWindows_CApplicationModel_CEmail_CIEmailStoreNotificationTriggerDetailsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CApplicationModel_CEmail_CIEmailStoreNotificationTriggerDetails;
#endif /* !defined(____x_ABI_CWindows_CApplicationModel_CEmail_CIEmailStoreNotificationTriggerDetails_INTERFACE_DEFINED__) */
    
