// WARNING: Please don't edit this file. It was generated by Swift/WinRT v0.0.1

#pragma once
// Header files for imported files
#include <inspectable.h>
#include <EventToken.h>
#include <windowscontracts.h>
#include "Windows.Foundation.h"
#include "Windows.Storage.Streams.h"
// Importing Collections header
#include "Windows.Foundation.Collections.h"

/* Forward Declarations */
#ifndef ____x_ABI_CWindows_CMedia_CContentRestrictions_CIContentRestrictionsBrowsePolicy_FWD_DEFINED__
#define ____x_ABI_CWindows_CMedia_CContentRestrictions_CIContentRestrictionsBrowsePolicy_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CMedia_CContentRestrictions_CIContentRestrictionsBrowsePolicy __x_ABI_CWindows_CMedia_CContentRestrictions_CIContentRestrictionsBrowsePolicy;

#endif // ____x_ABI_CWindows_CMedia_CContentRestrictions_CIContentRestrictionsBrowsePolicy_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CMedia_CContentRestrictions_CIRatedContentDescription_FWD_DEFINED__
#define ____x_ABI_CWindows_CMedia_CContentRestrictions_CIRatedContentDescription_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CMedia_CContentRestrictions_CIRatedContentDescription __x_ABI_CWindows_CMedia_CContentRestrictions_CIRatedContentDescription;

#endif // ____x_ABI_CWindows_CMedia_CContentRestrictions_CIRatedContentDescription_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CMedia_CContentRestrictions_CIRatedContentDescriptionFactory_FWD_DEFINED__
#define ____x_ABI_CWindows_CMedia_CContentRestrictions_CIRatedContentDescriptionFactory_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CMedia_CContentRestrictions_CIRatedContentDescriptionFactory __x_ABI_CWindows_CMedia_CContentRestrictions_CIRatedContentDescriptionFactory;

#endif // ____x_ABI_CWindows_CMedia_CContentRestrictions_CIRatedContentDescriptionFactory_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CMedia_CContentRestrictions_CIRatedContentRestrictions_FWD_DEFINED__
#define ____x_ABI_CWindows_CMedia_CContentRestrictions_CIRatedContentRestrictions_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CMedia_CContentRestrictions_CIRatedContentRestrictions __x_ABI_CWindows_CMedia_CContentRestrictions_CIRatedContentRestrictions;

#endif // ____x_ABI_CWindows_CMedia_CContentRestrictions_CIRatedContentRestrictions_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CMedia_CContentRestrictions_CIRatedContentRestrictionsFactory_FWD_DEFINED__
#define ____x_ABI_CWindows_CMedia_CContentRestrictions_CIRatedContentRestrictionsFactory_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CMedia_CContentRestrictions_CIRatedContentRestrictionsFactory __x_ABI_CWindows_CMedia_CContentRestrictions_CIRatedContentRestrictionsFactory;

#endif // ____x_ABI_CWindows_CMedia_CContentRestrictions_CIRatedContentRestrictionsFactory_FWD_DEFINED__

// Parameterized interface forward declarations (C)

// Collection interface definitions

typedef interface __x_ABI_C__FIAsyncOperationCompletedHandler_1_boolean __x_ABI_C__FIAsyncOperationCompletedHandler_1_boolean;

#if !defined(____x_ABI_C__FIAsyncOperation_1_boolean_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIAsyncOperation_1_boolean_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIAsyncOperation_1_boolean __x_ABI_C__FIAsyncOperation_1_boolean;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIAsyncOperation_1_boolean;

    typedef struct __x_ABI_C__FIAsyncOperation_1_booleanVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIAsyncOperation_1_boolean* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIAsyncOperation_1_boolean* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIAsyncOperation_1_boolean* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIAsyncOperation_1_boolean* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIAsyncOperation_1_boolean* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIAsyncOperation_1_boolean* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* put_Completed)(__x_ABI_C__FIAsyncOperation_1_boolean* This,
        __x_ABI_C__FIAsyncOperationCompletedHandler_1_boolean* handler);
    HRESULT (STDMETHODCALLTYPE* get_Completed)(__x_ABI_C__FIAsyncOperation_1_boolean* This,
        __x_ABI_C__FIAsyncOperationCompletedHandler_1_boolean** result);
    HRESULT (STDMETHODCALLTYPE* GetResults)(__x_ABI_C__FIAsyncOperation_1_boolean* This,
        boolean* result);

        END_INTERFACE
    } __x_ABI_C__FIAsyncOperation_1_booleanVtbl;

    interface __x_ABI_C__FIAsyncOperation_1_boolean
    {
        CONST_VTBL struct __x_ABI_C__FIAsyncOperation_1_booleanVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIAsyncOperation_1_boolean_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIAsyncOperationCompletedHandler_1_boolean_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIAsyncOperationCompletedHandler_1_boolean_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIAsyncOperationCompletedHandler_1_boolean __x_ABI_C__FIAsyncOperationCompletedHandler_1_boolean;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIAsyncOperationCompletedHandler_1_boolean;

    typedef struct __x_ABI_C__FIAsyncOperationCompletedHandler_1_booleanVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIAsyncOperationCompletedHandler_1_boolean* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIAsyncOperationCompletedHandler_1_boolean* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIAsyncOperationCompletedHandler_1_boolean* This);
        HRESULT (STDMETHODCALLTYPE* Invoke)(__x_ABI_C__FIAsyncOperationCompletedHandler_1_boolean* This,
        __x_ABI_C__FIAsyncOperation_1_boolean* asyncInfo,
        enum __x_ABI_CWindows_CFoundation_CAsyncStatus asyncStatus);

        END_INTERFACE
    } __x_ABI_C__FIAsyncOperationCompletedHandler_1_booleanVtbl;

    interface __x_ABI_C__FIAsyncOperationCompletedHandler_1_boolean
    {
        CONST_VTBL struct __x_ABI_C__FIAsyncOperationCompletedHandler_1_booleanVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIAsyncOperationCompletedHandler_1_boolean_INTERFACE_DEFINED__
    
typedef enum __x_ABI_CWindows_CMedia_CContentRestrictions_CContentAccessRestrictionLevel __x_ABI_CWindows_CMedia_CContentRestrictions_CContentAccessRestrictionLevel;

typedef interface __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CMedia__CContentRestrictions__CContentAccessRestrictionLevel __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CMedia__CContentRestrictions__CContentAccessRestrictionLevel;

#if !defined(____x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CMedia__CContentRestrictions__CContentAccessRestrictionLevel_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CMedia__CContentRestrictions__CContentAccessRestrictionLevel_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CMedia__CContentRestrictions__CContentAccessRestrictionLevel __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CMedia__CContentRestrictions__CContentAccessRestrictionLevel;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CMedia__CContentRestrictions__CContentAccessRestrictionLevel;

    typedef struct __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CMedia__CContentRestrictions__CContentAccessRestrictionLevelVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CMedia__CContentRestrictions__CContentAccessRestrictionLevel* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CMedia__CContentRestrictions__CContentAccessRestrictionLevel* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CMedia__CContentRestrictions__CContentAccessRestrictionLevel* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CMedia__CContentRestrictions__CContentAccessRestrictionLevel* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CMedia__CContentRestrictions__CContentAccessRestrictionLevel* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CMedia__CContentRestrictions__CContentAccessRestrictionLevel* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* put_Completed)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CMedia__CContentRestrictions__CContentAccessRestrictionLevel* This,
        __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CMedia__CContentRestrictions__CContentAccessRestrictionLevel* handler);
    HRESULT (STDMETHODCALLTYPE* get_Completed)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CMedia__CContentRestrictions__CContentAccessRestrictionLevel* This,
        __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CMedia__CContentRestrictions__CContentAccessRestrictionLevel** result);
    HRESULT (STDMETHODCALLTYPE* GetResults)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CMedia__CContentRestrictions__CContentAccessRestrictionLevel* This,
        enum __x_ABI_CWindows_CMedia_CContentRestrictions_CContentAccessRestrictionLevel* result);

        END_INTERFACE
    } __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CMedia__CContentRestrictions__CContentAccessRestrictionLevelVtbl;

    interface __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CMedia__CContentRestrictions__CContentAccessRestrictionLevel
    {
        CONST_VTBL struct __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CMedia__CContentRestrictions__CContentAccessRestrictionLevelVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CMedia__CContentRestrictions__CContentAccessRestrictionLevel_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CMedia__CContentRestrictions__CContentAccessRestrictionLevel_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CMedia__CContentRestrictions__CContentAccessRestrictionLevel_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CMedia__CContentRestrictions__CContentAccessRestrictionLevel __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CMedia__CContentRestrictions__CContentAccessRestrictionLevel;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CMedia__CContentRestrictions__CContentAccessRestrictionLevel;

    typedef struct __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CMedia__CContentRestrictions__CContentAccessRestrictionLevelVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CMedia__CContentRestrictions__CContentAccessRestrictionLevel* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CMedia__CContentRestrictions__CContentAccessRestrictionLevel* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CMedia__CContentRestrictions__CContentAccessRestrictionLevel* This);
        HRESULT (STDMETHODCALLTYPE* Invoke)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CMedia__CContentRestrictions__CContentAccessRestrictionLevel* This,
        __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CMedia__CContentRestrictions__CContentAccessRestrictionLevel* asyncInfo,
        enum __x_ABI_CWindows_CFoundation_CAsyncStatus asyncStatus);

        END_INTERFACE
    } __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CMedia__CContentRestrictions__CContentAccessRestrictionLevelVtbl;

    interface __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CMedia__CContentRestrictions__CContentAccessRestrictionLevel
    {
        CONST_VTBL struct __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CMedia__CContentRestrictions__CContentAccessRestrictionLevelVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CMedia__CContentRestrictions__CContentAccessRestrictionLevel_INTERFACE_DEFINED__
    
typedef interface __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CMedia__CContentRestrictions__CContentRestrictionsBrowsePolicy __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CMedia__CContentRestrictions__CContentRestrictionsBrowsePolicy;

#if !defined(____x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CMedia__CContentRestrictions__CContentRestrictionsBrowsePolicy_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CMedia__CContentRestrictions__CContentRestrictionsBrowsePolicy_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CMedia__CContentRestrictions__CContentRestrictionsBrowsePolicy __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CMedia__CContentRestrictions__CContentRestrictionsBrowsePolicy;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CMedia__CContentRestrictions__CContentRestrictionsBrowsePolicy;

    typedef struct __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CMedia__CContentRestrictions__CContentRestrictionsBrowsePolicyVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CMedia__CContentRestrictions__CContentRestrictionsBrowsePolicy* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CMedia__CContentRestrictions__CContentRestrictionsBrowsePolicy* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CMedia__CContentRestrictions__CContentRestrictionsBrowsePolicy* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CMedia__CContentRestrictions__CContentRestrictionsBrowsePolicy* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CMedia__CContentRestrictions__CContentRestrictionsBrowsePolicy* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CMedia__CContentRestrictions__CContentRestrictionsBrowsePolicy* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* put_Completed)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CMedia__CContentRestrictions__CContentRestrictionsBrowsePolicy* This,
        __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CMedia__CContentRestrictions__CContentRestrictionsBrowsePolicy* handler);
    HRESULT (STDMETHODCALLTYPE* get_Completed)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CMedia__CContentRestrictions__CContentRestrictionsBrowsePolicy* This,
        __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CMedia__CContentRestrictions__CContentRestrictionsBrowsePolicy** result);
    HRESULT (STDMETHODCALLTYPE* GetResults)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CMedia__CContentRestrictions__CContentRestrictionsBrowsePolicy* This,
        __x_ABI_CWindows_CMedia_CContentRestrictions_CIContentRestrictionsBrowsePolicy** result);

        END_INTERFACE
    } __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CMedia__CContentRestrictions__CContentRestrictionsBrowsePolicyVtbl;

    interface __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CMedia__CContentRestrictions__CContentRestrictionsBrowsePolicy
    {
        CONST_VTBL struct __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CMedia__CContentRestrictions__CContentRestrictionsBrowsePolicyVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CMedia__CContentRestrictions__CContentRestrictionsBrowsePolicy_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CMedia__CContentRestrictions__CContentRestrictionsBrowsePolicy_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CMedia__CContentRestrictions__CContentRestrictionsBrowsePolicy_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CMedia__CContentRestrictions__CContentRestrictionsBrowsePolicy __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CMedia__CContentRestrictions__CContentRestrictionsBrowsePolicy;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CMedia__CContentRestrictions__CContentRestrictionsBrowsePolicy;

    typedef struct __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CMedia__CContentRestrictions__CContentRestrictionsBrowsePolicyVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CMedia__CContentRestrictions__CContentRestrictionsBrowsePolicy* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CMedia__CContentRestrictions__CContentRestrictionsBrowsePolicy* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CMedia__CContentRestrictions__CContentRestrictionsBrowsePolicy* This);
        HRESULT (STDMETHODCALLTYPE* Invoke)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CMedia__CContentRestrictions__CContentRestrictionsBrowsePolicy* This,
        __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CMedia__CContentRestrictions__CContentRestrictionsBrowsePolicy* asyncInfo,
        enum __x_ABI_CWindows_CFoundation_CAsyncStatus asyncStatus);

        END_INTERFACE
    } __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CMedia__CContentRestrictions__CContentRestrictionsBrowsePolicyVtbl;

    interface __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CMedia__CContentRestrictions__CContentRestrictionsBrowsePolicy
    {
        CONST_VTBL struct __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CMedia__CContentRestrictions__CContentRestrictionsBrowsePolicyVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CMedia__CContentRestrictions__CContentRestrictionsBrowsePolicy_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIIterator_1_HSTRING_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIIterator_1_HSTRING_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIIterator_1_HSTRING __x_ABI_C__FIIterator_1_HSTRING;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIIterator_1_HSTRING;

    typedef struct __x_ABI_C__FIIterator_1_HSTRINGVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIIterator_1_HSTRING* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIIterator_1_HSTRING* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIIterator_1_HSTRING* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIIterator_1_HSTRING* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIIterator_1_HSTRING* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIIterator_1_HSTRING* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Current)(__x_ABI_C__FIIterator_1_HSTRING* This,
        HSTRING* result);
    HRESULT (STDMETHODCALLTYPE* get_HasCurrent)(__x_ABI_C__FIIterator_1_HSTRING* This,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* MoveNext)(__x_ABI_C__FIIterator_1_HSTRING* This,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__x_ABI_C__FIIterator_1_HSTRING* This,
        UINT32 itemsLength,
        HSTRING* items,
        UINT32* result);

        END_INTERFACE
    } __x_ABI_C__FIIterator_1_HSTRINGVtbl;

    interface __x_ABI_C__FIIterator_1_HSTRING
    {
        CONST_VTBL struct __x_ABI_C__FIIterator_1_HSTRINGVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIIterator_1_HSTRING_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIIterable_1_HSTRING_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIIterable_1_HSTRING_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIIterable_1_HSTRING __x_ABI_C__FIIterable_1_HSTRING;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIIterable_1_HSTRING;

    typedef struct __x_ABI_C__FIIterable_1_HSTRINGVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIIterable_1_HSTRING* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIIterable_1_HSTRING* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIIterable_1_HSTRING* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIIterable_1_HSTRING* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIIterable_1_HSTRING* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIIterable_1_HSTRING* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* First)(__x_ABI_C__FIIterable_1_HSTRING* This,
        __x_ABI_C__FIIterator_1_HSTRING** result);

        END_INTERFACE
    } __x_ABI_C__FIIterable_1_HSTRINGVtbl;

    interface __x_ABI_C__FIIterable_1_HSTRING
    {
        CONST_VTBL struct __x_ABI_C__FIIterable_1_HSTRINGVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIIterable_1_HSTRING_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIVectorView_1_HSTRING_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIVectorView_1_HSTRING_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIVectorView_1_HSTRING __x_ABI_C__FIVectorView_1_HSTRING;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIVectorView_1_HSTRING;

    typedef struct __x_ABI_C__FIVectorView_1_HSTRINGVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIVectorView_1_HSTRING* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIVectorView_1_HSTRING* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIVectorView_1_HSTRING* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIVectorView_1_HSTRING* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIVectorView_1_HSTRING* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIVectorView_1_HSTRING* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* GetAt)(__x_ABI_C__FIVectorView_1_HSTRING* This,
        UINT32 index,
        HSTRING* result);
    HRESULT (STDMETHODCALLTYPE* get_Size)(__x_ABI_C__FIVectorView_1_HSTRING* This,
        UINT32* result);
    HRESULT (STDMETHODCALLTYPE* IndexOf)(__x_ABI_C__FIVectorView_1_HSTRING* This,
        HSTRING value,
        UINT32* index,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__x_ABI_C__FIVectorView_1_HSTRING* This,
        UINT32 startIndex,
        UINT32 itemsLength,
        HSTRING* items,
        UINT32* result);

        END_INTERFACE
    } __x_ABI_C__FIVectorView_1_HSTRINGVtbl;

    interface __x_ABI_C__FIVectorView_1_HSTRING
    {
        CONST_VTBL struct __x_ABI_C__FIVectorView_1_HSTRINGVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIVectorView_1_HSTRING_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIVector_1_HSTRING_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIVector_1_HSTRING_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIVector_1_HSTRING __x_ABI_C__FIVector_1_HSTRING;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIVector_1_HSTRING;

    typedef struct __x_ABI_C__FIVector_1_HSTRINGVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIVector_1_HSTRING* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIVector_1_HSTRING* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIVector_1_HSTRING* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIVector_1_HSTRING* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIVector_1_HSTRING* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIVector_1_HSTRING* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* GetAt)(__x_ABI_C__FIVector_1_HSTRING* This,
        UINT32 index,
        HSTRING* result);
    HRESULT (STDMETHODCALLTYPE* get_Size)(__x_ABI_C__FIVector_1_HSTRING* This,
        UINT32* result);
    HRESULT (STDMETHODCALLTYPE* GetView)(__x_ABI_C__FIVector_1_HSTRING* This,
        __x_ABI_C__FIVectorView_1_HSTRING** result);
    HRESULT (STDMETHODCALLTYPE* IndexOf)(__x_ABI_C__FIVector_1_HSTRING* This,
        HSTRING value,
        UINT32* index,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* SetAt)(__x_ABI_C__FIVector_1_HSTRING* This,
        UINT32 index,
        HSTRING value);
    HRESULT (STDMETHODCALLTYPE* InsertAt)(__x_ABI_C__FIVector_1_HSTRING* This,
        UINT32 index,
        HSTRING value);
    HRESULT (STDMETHODCALLTYPE* RemoveAt)(__x_ABI_C__FIVector_1_HSTRING* This,
        UINT32 index);
    HRESULT (STDMETHODCALLTYPE* Append)(__x_ABI_C__FIVector_1_HSTRING* This,
        HSTRING value);
    HRESULT (STDMETHODCALLTYPE* RemoveAtEnd)(__x_ABI_C__FIVector_1_HSTRING* This);
    HRESULT (STDMETHODCALLTYPE* Clear)(__x_ABI_C__FIVector_1_HSTRING* This);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__x_ABI_C__FIVector_1_HSTRING* This,
        UINT32 startIndex,
        UINT32 itemsLength,
        HSTRING* items,
        UINT32* result);
    HRESULT (STDMETHODCALLTYPE* ReplaceAll)(__x_ABI_C__FIVector_1_HSTRING* This,
        UINT32 itemsLength,
        HSTRING* items);

        END_INTERFACE
    } __x_ABI_C__FIVector_1_HSTRINGVtbl;

    interface __x_ABI_C__FIVector_1_HSTRING
    {
        CONST_VTBL struct __x_ABI_C__FIVector_1_HSTRINGVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIVector_1_HSTRING_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIEventHandler_1_IInspectable_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIEventHandler_1_IInspectable_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIEventHandler_1_IInspectable __x_ABI_C__FIEventHandler_1_IInspectable;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIEventHandler_1_IInspectable;

    typedef struct __x_ABI_C__FIEventHandler_1_IInspectableVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIEventHandler_1_IInspectable* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIEventHandler_1_IInspectable* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIEventHandler_1_IInspectable* This);
        HRESULT (STDMETHODCALLTYPE* Invoke)(__x_ABI_C__FIEventHandler_1_IInspectable* This,
        IInspectable* sender,
        IInspectable* args);

        END_INTERFACE
    } __x_ABI_C__FIEventHandler_1_IInspectableVtbl;

    interface __x_ABI_C__FIEventHandler_1_IInspectable
    {
        CONST_VTBL struct __x_ABI_C__FIEventHandler_1_IInspectableVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIEventHandler_1_IInspectable_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIReference_1_UINT32_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIReference_1_UINT32_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIReference_1_UINT32 __x_ABI_C__FIReference_1_UINT32;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIReference_1_UINT32;

    typedef struct __x_ABI_C__FIReference_1_UINT32Vtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIReference_1_UINT32* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIReference_1_UINT32* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIReference_1_UINT32* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIReference_1_UINT32* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIReference_1_UINT32* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIReference_1_UINT32* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Value)(__x_ABI_C__FIReference_1_UINT32* This,
        UINT32* result);

        END_INTERFACE
    } __x_ABI_C__FIReference_1_UINT32Vtbl;

    interface __x_ABI_C__FIReference_1_UINT32
    {
        CONST_VTBL struct __x_ABI_C__FIReference_1_UINT32Vtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIReference_1_UINT32_INTERFACE_DEFINED__
    
typedef enum __x_ABI_CWindows_CFoundation_CAsyncStatus __x_ABI_CWindows_CFoundation_CAsyncStatus;

#ifndef ____x_ABI_CWindows_CFoundation_CIAsyncInfo_FWD_DEFINED__
#define ____x_ABI_CWindows_CFoundation_CIAsyncInfo_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CFoundation_CIAsyncInfo __x_ABI_CWindows_CFoundation_CIAsyncInfo;

#endif // ____x_ABI_CWindows_CFoundation_CIAsyncInfo_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CFoundation_CIPropertyValue_FWD_DEFINED__
#define ____x_ABI_CWindows_CFoundation_CIPropertyValue_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CFoundation_CIPropertyValue __x_ABI_CWindows_CFoundation_CIPropertyValue;

#endif // ____x_ABI_CWindows_CFoundation_CIPropertyValue_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CStorage_CStreams_CIRandomAccessStreamReference_FWD_DEFINED__
#define ____x_ABI_CWindows_CStorage_CStreams_CIRandomAccessStreamReference_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CStorage_CStreams_CIRandomAccessStreamReference __x_ABI_CWindows_CStorage_CStreams_CIRandomAccessStreamReference;

#endif // ____x_ABI_CWindows_CStorage_CStreams_CIRandomAccessStreamReference_FWD_DEFINED__

typedef enum __x_ABI_CWindows_CMedia_CContentRestrictions_CRatedContentCategory __x_ABI_CWindows_CMedia_CContentRestrictions_CRatedContentCategory;

enum __x_ABI_CWindows_CMedia_CContentRestrictions_CContentAccessRestrictionLevel
    {
        __x_ABI_CWindows_CMedia_CContentRestrictions_CContentAccessRestrictionLevel_Allow = 0,
    __x_ABI_CWindows_CMedia_CContentRestrictions_CContentAccessRestrictionLevel_Warn = 1,
    __x_ABI_CWindows_CMedia_CContentRestrictions_CContentAccessRestrictionLevel_Block = 2,
    __x_ABI_CWindows_CMedia_CContentRestrictions_CContentAccessRestrictionLevel_Hide = 3,
};

enum __x_ABI_CWindows_CMedia_CContentRestrictions_CRatedContentCategory
    {
        __x_ABI_CWindows_CMedia_CContentRestrictions_CRatedContentCategory_General = 0,
    __x_ABI_CWindows_CMedia_CContentRestrictions_CRatedContentCategory_Application = 1,
    __x_ABI_CWindows_CMedia_CContentRestrictions_CRatedContentCategory_Game = 2,
    __x_ABI_CWindows_CMedia_CContentRestrictions_CRatedContentCategory_Movie = 3,
    __x_ABI_CWindows_CMedia_CContentRestrictions_CRatedContentCategory_Television = 4,
    __x_ABI_CWindows_CMedia_CContentRestrictions_CRatedContentCategory_Music = 5,
};

#if !defined(____x_ABI_CWindows_CMedia_CContentRestrictions_CIContentRestrictionsBrowsePolicy_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CMedia_CContentRestrictions_CIContentRestrictionsBrowsePolicy_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CMedia_CContentRestrictions_CIContentRestrictionsBrowsePolicyVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CMedia_CContentRestrictions_CIContentRestrictionsBrowsePolicy* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CMedia_CContentRestrictions_CIContentRestrictionsBrowsePolicy* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CMedia_CContentRestrictions_CIContentRestrictionsBrowsePolicy* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CMedia_CContentRestrictions_CIContentRestrictionsBrowsePolicy* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CMedia_CContentRestrictions_CIContentRestrictionsBrowsePolicy* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CMedia_CContentRestrictions_CIContentRestrictionsBrowsePolicy* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_GeographicRegion)(__x_ABI_CWindows_CMedia_CContentRestrictions_CIContentRestrictionsBrowsePolicy* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* get_MaxBrowsableAgeRating)(__x_ABI_CWindows_CMedia_CContentRestrictions_CIContentRestrictionsBrowsePolicy* This,
        __x_ABI_C__FIReference_1_UINT32** value);
    HRESULT (STDMETHODCALLTYPE* get_PreferredAgeRating)(__x_ABI_CWindows_CMedia_CContentRestrictions_CIContentRestrictionsBrowsePolicy* This,
        __x_ABI_C__FIReference_1_UINT32** value);

        END_INTERFACE
    } __x_ABI_CWindows_CMedia_CContentRestrictions_CIContentRestrictionsBrowsePolicyVtbl;

    interface __x_ABI_CWindows_CMedia_CContentRestrictions_CIContentRestrictionsBrowsePolicy
    {
        CONST_VTBL struct __x_ABI_CWindows_CMedia_CContentRestrictions_CIContentRestrictionsBrowsePolicyVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CMedia_CContentRestrictions_CIContentRestrictionsBrowsePolicy;
#endif /* !defined(____x_ABI_CWindows_CMedia_CContentRestrictions_CIContentRestrictionsBrowsePolicy_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CMedia_CContentRestrictions_CIRatedContentDescription_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CMedia_CContentRestrictions_CIRatedContentDescription_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CMedia_CContentRestrictions_CIRatedContentDescriptionVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CMedia_CContentRestrictions_CIRatedContentDescription* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CMedia_CContentRestrictions_CIRatedContentDescription* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CMedia_CContentRestrictions_CIRatedContentDescription* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CMedia_CContentRestrictions_CIRatedContentDescription* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CMedia_CContentRestrictions_CIRatedContentDescription* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CMedia_CContentRestrictions_CIRatedContentDescription* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Id)(__x_ABI_CWindows_CMedia_CContentRestrictions_CIRatedContentDescription* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* put_Id)(__x_ABI_CWindows_CMedia_CContentRestrictions_CIRatedContentDescription* This,
        HSTRING value);
    HRESULT (STDMETHODCALLTYPE* get_Title)(__x_ABI_CWindows_CMedia_CContentRestrictions_CIRatedContentDescription* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* put_Title)(__x_ABI_CWindows_CMedia_CContentRestrictions_CIRatedContentDescription* This,
        HSTRING value);
    HRESULT (STDMETHODCALLTYPE* get_Image)(__x_ABI_CWindows_CMedia_CContentRestrictions_CIRatedContentDescription* This,
        __x_ABI_CWindows_CStorage_CStreams_CIRandomAccessStreamReference** value);
    HRESULT (STDMETHODCALLTYPE* put_Image)(__x_ABI_CWindows_CMedia_CContentRestrictions_CIRatedContentDescription* This,
        __x_ABI_CWindows_CStorage_CStreams_CIRandomAccessStreamReference* value);
    HRESULT (STDMETHODCALLTYPE* get_Category)(__x_ABI_CWindows_CMedia_CContentRestrictions_CIRatedContentDescription* This,
        enum __x_ABI_CWindows_CMedia_CContentRestrictions_CRatedContentCategory* value);
    HRESULT (STDMETHODCALLTYPE* put_Category)(__x_ABI_CWindows_CMedia_CContentRestrictions_CIRatedContentDescription* This,
        enum __x_ABI_CWindows_CMedia_CContentRestrictions_CRatedContentCategory value);
    HRESULT (STDMETHODCALLTYPE* get_Ratings)(__x_ABI_CWindows_CMedia_CContentRestrictions_CIRatedContentDescription* This,
        __x_ABI_C__FIVector_1_HSTRING** value);
    HRESULT (STDMETHODCALLTYPE* put_Ratings)(__x_ABI_CWindows_CMedia_CContentRestrictions_CIRatedContentDescription* This,
        __x_ABI_C__FIVector_1_HSTRING* value);

        END_INTERFACE
    } __x_ABI_CWindows_CMedia_CContentRestrictions_CIRatedContentDescriptionVtbl;

    interface __x_ABI_CWindows_CMedia_CContentRestrictions_CIRatedContentDescription
    {
        CONST_VTBL struct __x_ABI_CWindows_CMedia_CContentRestrictions_CIRatedContentDescriptionVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CMedia_CContentRestrictions_CIRatedContentDescription;
#endif /* !defined(____x_ABI_CWindows_CMedia_CContentRestrictions_CIRatedContentDescription_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CMedia_CContentRestrictions_CIRatedContentDescriptionFactory_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CMedia_CContentRestrictions_CIRatedContentDescriptionFactory_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CMedia_CContentRestrictions_CIRatedContentDescriptionFactoryVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CMedia_CContentRestrictions_CIRatedContentDescriptionFactory* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CMedia_CContentRestrictions_CIRatedContentDescriptionFactory* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CMedia_CContentRestrictions_CIRatedContentDescriptionFactory* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CMedia_CContentRestrictions_CIRatedContentDescriptionFactory* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CMedia_CContentRestrictions_CIRatedContentDescriptionFactory* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CMedia_CContentRestrictions_CIRatedContentDescriptionFactory* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* Create)(__x_ABI_CWindows_CMedia_CContentRestrictions_CIRatedContentDescriptionFactory* This,
        HSTRING id,
        HSTRING title,
        enum __x_ABI_CWindows_CMedia_CContentRestrictions_CRatedContentCategory category,
        __x_ABI_CWindows_CMedia_CContentRestrictions_CIRatedContentDescription** RatedContentDescription);

        END_INTERFACE
    } __x_ABI_CWindows_CMedia_CContentRestrictions_CIRatedContentDescriptionFactoryVtbl;

    interface __x_ABI_CWindows_CMedia_CContentRestrictions_CIRatedContentDescriptionFactory
    {
        CONST_VTBL struct __x_ABI_CWindows_CMedia_CContentRestrictions_CIRatedContentDescriptionFactoryVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CMedia_CContentRestrictions_CIRatedContentDescriptionFactory;
#endif /* !defined(____x_ABI_CWindows_CMedia_CContentRestrictions_CIRatedContentDescriptionFactory_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CMedia_CContentRestrictions_CIRatedContentRestrictions_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CMedia_CContentRestrictions_CIRatedContentRestrictions_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CMedia_CContentRestrictions_CIRatedContentRestrictionsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CMedia_CContentRestrictions_CIRatedContentRestrictions* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CMedia_CContentRestrictions_CIRatedContentRestrictions* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CMedia_CContentRestrictions_CIRatedContentRestrictions* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CMedia_CContentRestrictions_CIRatedContentRestrictions* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CMedia_CContentRestrictions_CIRatedContentRestrictions* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CMedia_CContentRestrictions_CIRatedContentRestrictions* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* GetBrowsePolicyAsync)(__x_ABI_CWindows_CMedia_CContentRestrictions_CIRatedContentRestrictions* This,
        __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CMedia__CContentRestrictions__CContentRestrictionsBrowsePolicy** operation);
    HRESULT (STDMETHODCALLTYPE* GetRestrictionLevelAsync)(__x_ABI_CWindows_CMedia_CContentRestrictions_CIRatedContentRestrictions* This,
        __x_ABI_CWindows_CMedia_CContentRestrictions_CIRatedContentDescription* RatedContentDescription,
        __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CMedia__CContentRestrictions__CContentAccessRestrictionLevel** operation);
    HRESULT (STDMETHODCALLTYPE* RequestContentAccessAsync)(__x_ABI_CWindows_CMedia_CContentRestrictions_CIRatedContentRestrictions* This,
        __x_ABI_CWindows_CMedia_CContentRestrictions_CIRatedContentDescription* RatedContentDescription,
        __x_ABI_C__FIAsyncOperation_1_boolean** operation);
    HRESULT (STDMETHODCALLTYPE* add_RestrictionsChanged)(__x_ABI_CWindows_CMedia_CContentRestrictions_CIRatedContentRestrictions* This,
        __x_ABI_C__FIEventHandler_1_IInspectable* handler,
        EventRegistrationToken* token);
    HRESULT (STDMETHODCALLTYPE* remove_RestrictionsChanged)(__x_ABI_CWindows_CMedia_CContentRestrictions_CIRatedContentRestrictions* This,
        EventRegistrationToken token);

        END_INTERFACE
    } __x_ABI_CWindows_CMedia_CContentRestrictions_CIRatedContentRestrictionsVtbl;

    interface __x_ABI_CWindows_CMedia_CContentRestrictions_CIRatedContentRestrictions
    {
        CONST_VTBL struct __x_ABI_CWindows_CMedia_CContentRestrictions_CIRatedContentRestrictionsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CMedia_CContentRestrictions_CIRatedContentRestrictions;
#endif /* !defined(____x_ABI_CWindows_CMedia_CContentRestrictions_CIRatedContentRestrictions_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CMedia_CContentRestrictions_CIRatedContentRestrictionsFactory_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CMedia_CContentRestrictions_CIRatedContentRestrictionsFactory_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CMedia_CContentRestrictions_CIRatedContentRestrictionsFactoryVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CMedia_CContentRestrictions_CIRatedContentRestrictionsFactory* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CMedia_CContentRestrictions_CIRatedContentRestrictionsFactory* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CMedia_CContentRestrictions_CIRatedContentRestrictionsFactory* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CMedia_CContentRestrictions_CIRatedContentRestrictionsFactory* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CMedia_CContentRestrictions_CIRatedContentRestrictionsFactory* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CMedia_CContentRestrictions_CIRatedContentRestrictionsFactory* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* CreateWithMaxAgeRating)(__x_ABI_CWindows_CMedia_CContentRestrictions_CIRatedContentRestrictionsFactory* This,
        UINT32 maxAgeRating,
        __x_ABI_CWindows_CMedia_CContentRestrictions_CIRatedContentRestrictions** ratedContentRestrictions);

        END_INTERFACE
    } __x_ABI_CWindows_CMedia_CContentRestrictions_CIRatedContentRestrictionsFactoryVtbl;

    interface __x_ABI_CWindows_CMedia_CContentRestrictions_CIRatedContentRestrictionsFactory
    {
        CONST_VTBL struct __x_ABI_CWindows_CMedia_CContentRestrictions_CIRatedContentRestrictionsFactoryVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CMedia_CContentRestrictions_CIRatedContentRestrictionsFactory;
#endif /* !defined(____x_ABI_CWindows_CMedia_CContentRestrictions_CIRatedContentRestrictionsFactory_INTERFACE_DEFINED__) */
    
