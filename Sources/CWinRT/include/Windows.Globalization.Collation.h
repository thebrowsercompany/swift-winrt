// WARNING: Please don't edit this file. It was generated by Swift/WinRT v0.0.1

#pragma once
// Header files for imported files
#include <inspectable.h>
#include <EventToken.h>
#include <windowscontracts.h>
#include "Windows.Foundation.h"
// Importing Collections header
#include "Windows.Foundation.Collections.h"

/* Forward Declarations */
#ifndef ____x_ABI_CWindows_CGlobalization_CCollation_CICharacterGrouping_FWD_DEFINED__
#define ____x_ABI_CWindows_CGlobalization_CCollation_CICharacterGrouping_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CGlobalization_CCollation_CICharacterGrouping __x_ABI_CWindows_CGlobalization_CCollation_CICharacterGrouping;

#endif // ____x_ABI_CWindows_CGlobalization_CCollation_CICharacterGrouping_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CGlobalization_CCollation_CICharacterGroupings_FWD_DEFINED__
#define ____x_ABI_CWindows_CGlobalization_CCollation_CICharacterGroupings_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CGlobalization_CCollation_CICharacterGroupings __x_ABI_CWindows_CGlobalization_CCollation_CICharacterGroupings;

#endif // ____x_ABI_CWindows_CGlobalization_CCollation_CICharacterGroupings_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CGlobalization_CCollation_CICharacterGroupingsFactory_FWD_DEFINED__
#define ____x_ABI_CWindows_CGlobalization_CCollation_CICharacterGroupingsFactory_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CGlobalization_CCollation_CICharacterGroupingsFactory __x_ABI_CWindows_CGlobalization_CCollation_CICharacterGroupingsFactory;

#endif // ____x_ABI_CWindows_CGlobalization_CCollation_CICharacterGroupingsFactory_FWD_DEFINED__

// Parameterized interface forward declarations (C)

// Collection interface definitions

#if !defined(____x_ABI_C__FIIterator_1___x_ABI_CWindows__CGlobalization__CCollation__CCharacterGrouping_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIIterator_1___x_ABI_CWindows__CGlobalization__CCollation__CCharacterGrouping_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIIterator_1___x_ABI_CWindows__CGlobalization__CCollation__CCharacterGrouping __x_ABI_C__FIIterator_1___x_ABI_CWindows__CGlobalization__CCollation__CCharacterGrouping;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIIterator_1___x_ABI_CWindows__CGlobalization__CCollation__CCharacterGrouping;

    typedef struct __x_ABI_C__FIIterator_1___x_ABI_CWindows__CGlobalization__CCollation__CCharacterGroupingVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CGlobalization__CCollation__CCharacterGrouping* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CGlobalization__CCollation__CCharacterGrouping* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CGlobalization__CCollation__CCharacterGrouping* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CGlobalization__CCollation__CCharacterGrouping* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CGlobalization__CCollation__CCharacterGrouping* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CGlobalization__CCollation__CCharacterGrouping* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Current)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CGlobalization__CCollation__CCharacterGrouping* This,
        __x_ABI_CWindows_CGlobalization_CCollation_CICharacterGrouping** result);
    HRESULT (STDMETHODCALLTYPE* get_HasCurrent)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CGlobalization__CCollation__CCharacterGrouping* This,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* MoveNext)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CGlobalization__CCollation__CCharacterGrouping* This,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CGlobalization__CCollation__CCharacterGrouping* This,
        UINT32 itemsLength,
        __x_ABI_CWindows_CGlobalization_CCollation_CICharacterGrouping** items,
        UINT32* result);

        END_INTERFACE
    } __x_ABI_C__FIIterator_1___x_ABI_CWindows__CGlobalization__CCollation__CCharacterGroupingVtbl;

    interface __x_ABI_C__FIIterator_1___x_ABI_CWindows__CGlobalization__CCollation__CCharacterGrouping
    {
        CONST_VTBL struct __x_ABI_C__FIIterator_1___x_ABI_CWindows__CGlobalization__CCollation__CCharacterGroupingVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIIterator_1___x_ABI_CWindows__CGlobalization__CCollation__CCharacterGrouping_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIIterable_1___x_ABI_CWindows__CGlobalization__CCollation__CCharacterGrouping_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIIterable_1___x_ABI_CWindows__CGlobalization__CCollation__CCharacterGrouping_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIIterable_1___x_ABI_CWindows__CGlobalization__CCollation__CCharacterGrouping __x_ABI_C__FIIterable_1___x_ABI_CWindows__CGlobalization__CCollation__CCharacterGrouping;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIIterable_1___x_ABI_CWindows__CGlobalization__CCollation__CCharacterGrouping;

    typedef struct __x_ABI_C__FIIterable_1___x_ABI_CWindows__CGlobalization__CCollation__CCharacterGroupingVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CGlobalization__CCollation__CCharacterGrouping* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CGlobalization__CCollation__CCharacterGrouping* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CGlobalization__CCollation__CCharacterGrouping* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CGlobalization__CCollation__CCharacterGrouping* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CGlobalization__CCollation__CCharacterGrouping* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CGlobalization__CCollation__CCharacterGrouping* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* First)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CGlobalization__CCollation__CCharacterGrouping* This,
        __x_ABI_C__FIIterator_1___x_ABI_CWindows__CGlobalization__CCollation__CCharacterGrouping** result);

        END_INTERFACE
    } __x_ABI_C__FIIterable_1___x_ABI_CWindows__CGlobalization__CCollation__CCharacterGroupingVtbl;

    interface __x_ABI_C__FIIterable_1___x_ABI_CWindows__CGlobalization__CCollation__CCharacterGrouping
    {
        CONST_VTBL struct __x_ABI_C__FIIterable_1___x_ABI_CWindows__CGlobalization__CCollation__CCharacterGroupingVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIIterable_1___x_ABI_CWindows__CGlobalization__CCollation__CCharacterGrouping_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIVectorView_1___x_ABI_CWindows__CGlobalization__CCollation__CCharacterGrouping_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIVectorView_1___x_ABI_CWindows__CGlobalization__CCollation__CCharacterGrouping_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CGlobalization__CCollation__CCharacterGrouping __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CGlobalization__CCollation__CCharacterGrouping;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CGlobalization__CCollation__CCharacterGrouping;

    typedef struct __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CGlobalization__CCollation__CCharacterGroupingVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CGlobalization__CCollation__CCharacterGrouping* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CGlobalization__CCollation__CCharacterGrouping* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CGlobalization__CCollation__CCharacterGrouping* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CGlobalization__CCollation__CCharacterGrouping* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CGlobalization__CCollation__CCharacterGrouping* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CGlobalization__CCollation__CCharacterGrouping* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* GetAt)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CGlobalization__CCollation__CCharacterGrouping* This,
        UINT32 index,
        __x_ABI_CWindows_CGlobalization_CCollation_CICharacterGrouping** result);
    HRESULT (STDMETHODCALLTYPE* get_Size)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CGlobalization__CCollation__CCharacterGrouping* This,
        UINT32* result);
    HRESULT (STDMETHODCALLTYPE* IndexOf)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CGlobalization__CCollation__CCharacterGrouping* This,
        __x_ABI_CWindows_CGlobalization_CCollation_CICharacterGrouping* value,
        UINT32* index,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CGlobalization__CCollation__CCharacterGrouping* This,
        UINT32 startIndex,
        UINT32 itemsLength,
        __x_ABI_CWindows_CGlobalization_CCollation_CICharacterGrouping** items,
        UINT32* result);

        END_INTERFACE
    } __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CGlobalization__CCollation__CCharacterGroupingVtbl;

    interface __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CGlobalization__CCollation__CCharacterGrouping
    {
        CONST_VTBL struct __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CGlobalization__CCollation__CCharacterGroupingVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIVectorView_1___x_ABI_CWindows__CGlobalization__CCollation__CCharacterGrouping_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_CWindows_CGlobalization_CCollation_CICharacterGrouping_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CGlobalization_CCollation_CICharacterGrouping_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CGlobalization_CCollation_CICharacterGroupingVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CGlobalization_CCollation_CICharacterGrouping* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CGlobalization_CCollation_CICharacterGrouping* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CGlobalization_CCollation_CICharacterGrouping* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CGlobalization_CCollation_CICharacterGrouping* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CGlobalization_CCollation_CICharacterGrouping* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CGlobalization_CCollation_CICharacterGrouping* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_First)(__x_ABI_CWindows_CGlobalization_CCollation_CICharacterGrouping* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* get_Label)(__x_ABI_CWindows_CGlobalization_CCollation_CICharacterGrouping* This,
        HSTRING* value);

        END_INTERFACE
    } __x_ABI_CWindows_CGlobalization_CCollation_CICharacterGroupingVtbl;

    interface __x_ABI_CWindows_CGlobalization_CCollation_CICharacterGrouping
    {
        CONST_VTBL struct __x_ABI_CWindows_CGlobalization_CCollation_CICharacterGroupingVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CGlobalization_CCollation_CICharacterGrouping;
#endif /* !defined(____x_ABI_CWindows_CGlobalization_CCollation_CICharacterGrouping_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CGlobalization_CCollation_CICharacterGroupings_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CGlobalization_CCollation_CICharacterGroupings_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CGlobalization_CCollation_CICharacterGroupingsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CGlobalization_CCollation_CICharacterGroupings* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CGlobalization_CCollation_CICharacterGroupings* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CGlobalization_CCollation_CICharacterGroupings* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CGlobalization_CCollation_CICharacterGroupings* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CGlobalization_CCollation_CICharacterGroupings* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CGlobalization_CCollation_CICharacterGroupings* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* Lookup)(__x_ABI_CWindows_CGlobalization_CCollation_CICharacterGroupings* This,
        HSTRING text,
        HSTRING* result);

        END_INTERFACE
    } __x_ABI_CWindows_CGlobalization_CCollation_CICharacterGroupingsVtbl;

    interface __x_ABI_CWindows_CGlobalization_CCollation_CICharacterGroupings
    {
        CONST_VTBL struct __x_ABI_CWindows_CGlobalization_CCollation_CICharacterGroupingsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CGlobalization_CCollation_CICharacterGroupings;
#endif /* !defined(____x_ABI_CWindows_CGlobalization_CCollation_CICharacterGroupings_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CGlobalization_CCollation_CICharacterGroupingsFactory_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CGlobalization_CCollation_CICharacterGroupingsFactory_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CGlobalization_CCollation_CICharacterGroupingsFactoryVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CGlobalization_CCollation_CICharacterGroupingsFactory* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CGlobalization_CCollation_CICharacterGroupingsFactory* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CGlobalization_CCollation_CICharacterGroupingsFactory* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CGlobalization_CCollation_CICharacterGroupingsFactory* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CGlobalization_CCollation_CICharacterGroupingsFactory* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CGlobalization_CCollation_CICharacterGroupingsFactory* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* Create)(__x_ABI_CWindows_CGlobalization_CCollation_CICharacterGroupingsFactory* This,
        HSTRING language,
        __x_ABI_CWindows_CGlobalization_CCollation_CICharacterGroupings** result);

        END_INTERFACE
    } __x_ABI_CWindows_CGlobalization_CCollation_CICharacterGroupingsFactoryVtbl;

    interface __x_ABI_CWindows_CGlobalization_CCollation_CICharacterGroupingsFactory
    {
        CONST_VTBL struct __x_ABI_CWindows_CGlobalization_CCollation_CICharacterGroupingsFactoryVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CGlobalization_CCollation_CICharacterGroupingsFactory;
#endif /* !defined(____x_ABI_CWindows_CGlobalization_CCollation_CICharacterGroupingsFactory_INTERFACE_DEFINED__) */
    
